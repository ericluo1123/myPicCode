

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Sep 24 16:48:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,delta=2
   141                           	psect	intentry,global,class=CODE,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,delta=2
   145                           	psect	text123,local,class=CODE,merge=1,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	text125,local,class=CODE,merge=1,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	dabs	1,0x7E,2
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  0116                     	;# 
   197  0117                     	;# 
   198  011D                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  018E                     	;# 
   202  0191                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0193                     	;# 
   206  0193                     	;# 
   207  0194                     	;# 
   208  0195                     	;# 
   209  0196                     	;# 
   210  0197                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  019C                     	;# 
   219  019D                     	;# 
   220  019E                     	;# 
   221  019F                     	;# 
   222  020D                     	;# 
   223  0210                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0216                     	;# 
   236  0216                     	;# 
   237  0217                     	;# 
   238  0217                     	;# 
   239  0291                     	;# 
   240  0291                     	;# 
   241  0292                     	;# 
   242  0293                     	;# 
   243  0298                     	;# 
   244  0298                     	;# 
   245  0299                     	;# 
   246  029A                     	;# 
   247  0394                     	;# 
   248  0395                     	;# 
   249  0396                     	;# 
   250  0FE4                     	;# 
   251  0FE5                     	;# 
   252  0FE6                     	;# 
   253  0FE7                     	;# 
   254  0FE8                     	;# 
   255  0FE9                     	;# 
   256  0FEA                     	;# 
   257  0FEB                     	;# 
   258  0FED                     	;# 
   259  0FEE                     	;# 
   260  0FEF                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  0010                     	;# 
   277  0011                     	;# 
   278  0012                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0016                     	;# 
   282  0017                     	;# 
   283  0018                     	;# 
   284  0019                     	;# 
   285  001A                     	;# 
   286  001B                     	;# 
   287  001C                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  0116                     	;# 
   308  0117                     	;# 
   309  011D                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  018E                     	;# 
   313  0191                     	;# 
   314  0191                     	;# 
   315  0192                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0194                     	;# 
   319  0195                     	;# 
   320  0196                     	;# 
   321  0197                     	;# 
   322  0199                     	;# 
   323  019A                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019C                     	;# 
   329  019C                     	;# 
   330  019D                     	;# 
   331  019E                     	;# 
   332  019F                     	;# 
   333  020D                     	;# 
   334  0210                     	;# 
   335  0211                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0213                     	;# 
   341  0214                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0216                     	;# 
   347  0216                     	;# 
   348  0217                     	;# 
   349  0217                     	;# 
   350  0291                     	;# 
   351  0291                     	;# 
   352  0292                     	;# 
   353  0293                     	;# 
   354  0298                     	;# 
   355  0298                     	;# 
   356  0299                     	;# 
   357  029A                     	;# 
   358  0394                     	;# 
   359  0395                     	;# 
   360  0396                     	;# 
   361  0FE4                     	;# 
   362  0FE5                     	;# 
   363  0FE6                     	;# 
   364  0FE7                     	;# 
   365  0FE8                     	;# 
   366  0FE9                     	;# 
   367  0FEA                     	;# 
   368  0FEB                     	;# 
   369  0FED                     	;# 
   370  0FEE                     	;# 
   371  0FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  008C                     	;# 
   400  008D                     	;# 
   401  008E                     	;# 
   402  0090                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0095                     	;# 
   406  0096                     	;# 
   407  0097                     	;# 
   408  0099                     	;# 
   409  009A                     	;# 
   410  009B                     	;# 
   411  009B                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009E                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  0116                     	;# 
   419  0117                     	;# 
   420  011D                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423  018E                     	;# 
   424  0191                     	;# 
   425  0191                     	;# 
   426  0192                     	;# 
   427  0193                     	;# 
   428  0193                     	;# 
   429  0194                     	;# 
   430  0195                     	;# 
   431  0196                     	;# 
   432  0197                     	;# 
   433  0199                     	;# 
   434  019A                     	;# 
   435  019B                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019B                     	;# 
   439  019C                     	;# 
   440  019C                     	;# 
   441  019D                     	;# 
   442  019E                     	;# 
   443  019F                     	;# 
   444  020D                     	;# 
   445  0210                     	;# 
   446  0211                     	;# 
   447  0211                     	;# 
   448  0212                     	;# 
   449  0212                     	;# 
   450  0213                     	;# 
   451  0213                     	;# 
   452  0214                     	;# 
   453  0214                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0216                     	;# 
   458  0216                     	;# 
   459  0217                     	;# 
   460  0217                     	;# 
   461  0291                     	;# 
   462  0291                     	;# 
   463  0292                     	;# 
   464  0293                     	;# 
   465  0298                     	;# 
   466  0298                     	;# 
   467  0299                     	;# 
   468  029A                     	;# 
   469  0394                     	;# 
   470  0395                     	;# 
   471  0396                     	;# 
   472  0FE4                     	;# 
   473  0FE5                     	;# 
   474  0FE6                     	;# 
   475  0FE7                     	;# 
   476  0FE8                     	;# 
   477  0FE9                     	;# 
   478  0FEA                     	;# 
   479  0FEB                     	;# 
   480  0FED                     	;# 
   481  0FEE                     	;# 
   482  0FEF                     	;# 
   483  0000                     	;# 
   484  0001                     	;# 
   485  0002                     	;# 
   486  0003                     	;# 
   487  0004                     	;# 
   488  0005                     	;# 
   489  0006                     	;# 
   490  0007                     	;# 
   491  0008                     	;# 
   492  0009                     	;# 
   493  000A                     	;# 
   494  000B                     	;# 
   495  000C                     	;# 
   496  000D                     	;# 
   497  000E                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0015                     	;# 
   502  0016                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  008C                     	;# 
   511  008D                     	;# 
   512  008E                     	;# 
   513  0090                     	;# 
   514  0091                     	;# 
   515  0092                     	;# 
   516  0095                     	;# 
   517  0096                     	;# 
   518  0097                     	;# 
   519  0099                     	;# 
   520  009A                     	;# 
   521  009B                     	;# 
   522  009B                     	;# 
   523  009C                     	;# 
   524  009D                     	;# 
   525  009E                     	;# 
   526  010C                     	;# 
   527  010D                     	;# 
   528  010E                     	;# 
   529  0116                     	;# 
   530  0117                     	;# 
   531  011D                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  018E                     	;# 
   535  0191                     	;# 
   536  0191                     	;# 
   537  0192                     	;# 
   538  0193                     	;# 
   539  0193                     	;# 
   540  0194                     	;# 
   541  0195                     	;# 
   542  0196                     	;# 
   543  0197                     	;# 
   544  0199                     	;# 
   545  019A                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019D                     	;# 
   553  019E                     	;# 
   554  019F                     	;# 
   555  020D                     	;# 
   556  0210                     	;# 
   557  0211                     	;# 
   558  0211                     	;# 
   559  0212                     	;# 
   560  0212                     	;# 
   561  0213                     	;# 
   562  0213                     	;# 
   563  0214                     	;# 
   564  0214                     	;# 
   565  0215                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0216                     	;# 
   569  0216                     	;# 
   570  0217                     	;# 
   571  0217                     	;# 
   572  0291                     	;# 
   573  0291                     	;# 
   574  0292                     	;# 
   575  0293                     	;# 
   576  0298                     	;# 
   577  0298                     	;# 
   578  0299                     	;# 
   579  029A                     	;# 
   580  0394                     	;# 
   581  0395                     	;# 
   582  0396                     	;# 
   583  0FE4                     	;# 
   584  0FE5                     	;# 
   585  0FE6                     	;# 
   586  0FE7                     	;# 
   587  0FE8                     	;# 
   588  0FE9                     	;# 
   589  0FEA                     	;# 
   590  0FEB                     	;# 
   591  0FED                     	;# 
   592  0FEE                     	;# 
   593  0FEF                     	;# 
   594  0000                     	;# 
   595  0001                     	;# 
   596  0002                     	;# 
   597  0003                     	;# 
   598  0004                     	;# 
   599  0005                     	;# 
   600  0006                     	;# 
   601  0007                     	;# 
   602  0008                     	;# 
   603  0009                     	;# 
   604  000A                     	;# 
   605  000B                     	;# 
   606  000C                     	;# 
   607  000D                     	;# 
   608  000E                     	;# 
   609  0010                     	;# 
   610  0011                     	;# 
   611  0012                     	;# 
   612  0015                     	;# 
   613  0016                     	;# 
   614  0016                     	;# 
   615  0017                     	;# 
   616  0018                     	;# 
   617  0019                     	;# 
   618  001A                     	;# 
   619  001B                     	;# 
   620  001C                     	;# 
   621  008C                     	;# 
   622  008D                     	;# 
   623  008E                     	;# 
   624  0090                     	;# 
   625  0091                     	;# 
   626  0092                     	;# 
   627  0095                     	;# 
   628  0096                     	;# 
   629  0097                     	;# 
   630  0099                     	;# 
   631  009A                     	;# 
   632  009B                     	;# 
   633  009B                     	;# 
   634  009C                     	;# 
   635  009D                     	;# 
   636  009E                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  0116                     	;# 
   641  0117                     	;# 
   642  011D                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  018E                     	;# 
   646  0191                     	;# 
   647  0191                     	;# 
   648  0192                     	;# 
   649  0193                     	;# 
   650  0193                     	;# 
   651  0194                     	;# 
   652  0195                     	;# 
   653  0196                     	;# 
   654  0197                     	;# 
   655  0199                     	;# 
   656  019A                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019C                     	;# 
   662  019C                     	;# 
   663  019D                     	;# 
   664  019E                     	;# 
   665  019F                     	;# 
   666  020D                     	;# 
   667  0210                     	;# 
   668  0211                     	;# 
   669  0211                     	;# 
   670  0212                     	;# 
   671  0212                     	;# 
   672  0213                     	;# 
   673  0213                     	;# 
   674  0214                     	;# 
   675  0214                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0216                     	;# 
   680  0216                     	;# 
   681  0217                     	;# 
   682  0217                     	;# 
   683  0291                     	;# 
   684  0291                     	;# 
   685  0292                     	;# 
   686  0293                     	;# 
   687  0298                     	;# 
   688  0298                     	;# 
   689  0299                     	;# 
   690  029A                     	;# 
   691  0394                     	;# 
   692  0395                     	;# 
   693  0396                     	;# 
   694  0FE4                     	;# 
   695  0FE5                     	;# 
   696  0FE6                     	;# 
   697  0FE7                     	;# 
   698  0FE8                     	;# 
   699  0FE9                     	;# 
   700  0FEA                     	;# 
   701  0FEB                     	;# 
   702  0FED                     	;# 
   703  0FEE                     	;# 
   704  0FEF                     	;# 
   705  0000                     	;# 
   706  0001                     	;# 
   707  0002                     	;# 
   708  0003                     	;# 
   709  0004                     	;# 
   710  0005                     	;# 
   711  0006                     	;# 
   712  0007                     	;# 
   713  0008                     	;# 
   714  0009                     	;# 
   715  000A                     	;# 
   716  000B                     	;# 
   717  000C                     	;# 
   718  000D                     	;# 
   719  000E                     	;# 
   720  0010                     	;# 
   721  0011                     	;# 
   722  0012                     	;# 
   723  0015                     	;# 
   724  0016                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001C                     	;# 
   732  008C                     	;# 
   733  008D                     	;# 
   734  008E                     	;# 
   735  0090                     	;# 
   736  0091                     	;# 
   737  0092                     	;# 
   738  0095                     	;# 
   739  0096                     	;# 
   740  0097                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009B                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009E                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  011D                     	;# 
   754  018C                     	;# 
   755  018D                     	;# 
   756  018E                     	;# 
   757  0191                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0194                     	;# 
   763  0195                     	;# 
   764  0196                     	;# 
   765  0197                     	;# 
   766  0199                     	;# 
   767  019A                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  019C                     	;# 
   774  019D                     	;# 
   775  019E                     	;# 
   776  019F                     	;# 
   777  020D                     	;# 
   778  0210                     	;# 
   779  0211                     	;# 
   780  0211                     	;# 
   781  0212                     	;# 
   782  0212                     	;# 
   783  0213                     	;# 
   784  0213                     	;# 
   785  0214                     	;# 
   786  0214                     	;# 
   787  0215                     	;# 
   788  0215                     	;# 
   789  0215                     	;# 
   790  0216                     	;# 
   791  0216                     	;# 
   792  0217                     	;# 
   793  0217                     	;# 
   794  0291                     	;# 
   795  0291                     	;# 
   796  0292                     	;# 
   797  0293                     	;# 
   798  0298                     	;# 
   799  0298                     	;# 
   800  0299                     	;# 
   801  029A                     	;# 
   802  0394                     	;# 
   803  0395                     	;# 
   804  0396                     	;# 
   805  0FE4                     	;# 
   806  0FE5                     	;# 
   807  0FE6                     	;# 
   808  0FE7                     	;# 
   809  0FE8                     	;# 
   810  0FE9                     	;# 
   811  0FEA                     	;# 
   812  0FEB                     	;# 
   813  0FED                     	;# 
   814  0FEE                     	;# 
   815  0FEF                     	;# 
   816  0000                     	;# 
   817  0001                     	;# 
   818  0002                     	;# 
   819  0003                     	;# 
   820  0004                     	;# 
   821  0005                     	;# 
   822  0006                     	;# 
   823  0007                     	;# 
   824  0008                     	;# 
   825  0009                     	;# 
   826  000A                     	;# 
   827  000B                     	;# 
   828  000C                     	;# 
   829  000D                     	;# 
   830  000E                     	;# 
   831  0010                     	;# 
   832  0011                     	;# 
   833  0012                     	;# 
   834  0015                     	;# 
   835  0016                     	;# 
   836  0016                     	;# 
   837  0017                     	;# 
   838  0018                     	;# 
   839  0019                     	;# 
   840  001A                     	;# 
   841  001B                     	;# 
   842  001C                     	;# 
   843  008C                     	;# 
   844  008D                     	;# 
   845  008E                     	;# 
   846  0090                     	;# 
   847  0091                     	;# 
   848  0092                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0099                     	;# 
   853  009A                     	;# 
   854  009B                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  010C                     	;# 
   860  010D                     	;# 
   861  010E                     	;# 
   862  0116                     	;# 
   863  0117                     	;# 
   864  011D                     	;# 
   865  018C                     	;# 
   866  018D                     	;# 
   867  018E                     	;# 
   868  0191                     	;# 
   869  0191                     	;# 
   870  0192                     	;# 
   871  0193                     	;# 
   872  0193                     	;# 
   873  0194                     	;# 
   874  0195                     	;# 
   875  0196                     	;# 
   876  0197                     	;# 
   877  0199                     	;# 
   878  019A                     	;# 
   879  019B                     	;# 
   880  019B                     	;# 
   881  019B                     	;# 
   882  019B                     	;# 
   883  019C                     	;# 
   884  019C                     	;# 
   885  019D                     	;# 
   886  019E                     	;# 
   887  019F                     	;# 
   888  020D                     	;# 
   889  0210                     	;# 
   890  0211                     	;# 
   891  0211                     	;# 
   892  0212                     	;# 
   893  0212                     	;# 
   894  0213                     	;# 
   895  0213                     	;# 
   896  0214                     	;# 
   897  0214                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0215                     	;# 
   901  0216                     	;# 
   902  0216                     	;# 
   903  0217                     	;# 
   904  0217                     	;# 
   905  0291                     	;# 
   906  0291                     	;# 
   907  0292                     	;# 
   908  0293                     	;# 
   909  0298                     	;# 
   910  0298                     	;# 
   911  0299                     	;# 
   912  029A                     	;# 
   913  0394                     	;# 
   914  0395                     	;# 
   915  0396                     	;# 
   916  0FE4                     	;# 
   917  0FE5                     	;# 
   918  0FE6                     	;# 
   919  0FE7                     	;# 
   920  0FE8                     	;# 
   921  0FE9                     	;# 
   922  0FEA                     	;# 
   923  0FEB                     	;# 
   924  0FED                     	;# 
   925  0FEE                     	;# 
   926  0FEF                     	;# 
   927  0000                     	;# 
   928  0001                     	;# 
   929  0002                     	;# 
   930  0003                     	;# 
   931  0004                     	;# 
   932  0005                     	;# 
   933  0006                     	;# 
   934  0007                     	;# 
   935  0008                     	;# 
   936  0009                     	;# 
   937  000A                     	;# 
   938  000B                     	;# 
   939  000C                     	;# 
   940  000D                     	;# 
   941  000E                     	;# 
   942  0010                     	;# 
   943  0011                     	;# 
   944  0012                     	;# 
   945  0015                     	;# 
   946  0016                     	;# 
   947  0016                     	;# 
   948  0017                     	;# 
   949  0018                     	;# 
   950  0019                     	;# 
   951  001A                     	;# 
   952  001B                     	;# 
   953  001C                     	;# 
   954  008C                     	;# 
   955  008D                     	;# 
   956  008E                     	;# 
   957  0090                     	;# 
   958  0091                     	;# 
   959  0092                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0099                     	;# 
   964  009A                     	;# 
   965  009B                     	;# 
   966  009B                     	;# 
   967  009C                     	;# 
   968  009D                     	;# 
   969  009E                     	;# 
   970  010C                     	;# 
   971  010D                     	;# 
   972  010E                     	;# 
   973  0116                     	;# 
   974  0117                     	;# 
   975  011D                     	;# 
   976  018C                     	;# 
   977  018D                     	;# 
   978  018E                     	;# 
   979  0191                     	;# 
   980  0191                     	;# 
   981  0192                     	;# 
   982  0193                     	;# 
   983  0193                     	;# 
   984  0194                     	;# 
   985  0195                     	;# 
   986  0196                     	;# 
   987  0197                     	;# 
   988  0199                     	;# 
   989  019A                     	;# 
   990  019B                     	;# 
   991  019B                     	;# 
   992  019B                     	;# 
   993  019B                     	;# 
   994  019C                     	;# 
   995  019C                     	;# 
   996  019D                     	;# 
   997  019E                     	;# 
   998  019F                     	;# 
   999  020D                     	;# 
  1000  0210                     	;# 
  1001  0211                     	;# 
  1002  0211                     	;# 
  1003  0212                     	;# 
  1004  0212                     	;# 
  1005  0213                     	;# 
  1006  0213                     	;# 
  1007  0214                     	;# 
  1008  0214                     	;# 
  1009  0215                     	;# 
  1010  0215                     	;# 
  1011  0215                     	;# 
  1012  0216                     	;# 
  1013  0216                     	;# 
  1014  0217                     	;# 
  1015  0217                     	;# 
  1016  0291                     	;# 
  1017  0291                     	;# 
  1018  0292                     	;# 
  1019  0293                     	;# 
  1020  0298                     	;# 
  1021  0298                     	;# 
  1022  0299                     	;# 
  1023  029A                     	;# 
  1024  0394                     	;# 
  1025  0395                     	;# 
  1026  0396                     	;# 
  1027  0FE4                     	;# 
  1028  0FE5                     	;# 
  1029  0FE6                     	;# 
  1030  0FE7                     	;# 
  1031  0FE8                     	;# 
  1032  0FE9                     	;# 
  1033  0FEA                     	;# 
  1034  0FEB                     	;# 
  1035  0FED                     	;# 
  1036  0FEE                     	;# 
  1037  0FEF                     	;# 
  1038  0000                     	;# 
  1039  0001                     	;# 
  1040  0002                     	;# 
  1041  0003                     	;# 
  1042  0004                     	;# 
  1043  0005                     	;# 
  1044  0006                     	;# 
  1045  0007                     	;# 
  1046  0008                     	;# 
  1047  0009                     	;# 
  1048  000A                     	;# 
  1049  000B                     	;# 
  1050  000C                     	;# 
  1051  000D                     	;# 
  1052  000E                     	;# 
  1053  0010                     	;# 
  1054  0011                     	;# 
  1055  0012                     	;# 
  1056  0015                     	;# 
  1057  0016                     	;# 
  1058  0016                     	;# 
  1059  0017                     	;# 
  1060  0018                     	;# 
  1061  0019                     	;# 
  1062  001A                     	;# 
  1063  001B                     	;# 
  1064  001C                     	;# 
  1065  008C                     	;# 
  1066  008D                     	;# 
  1067  008E                     	;# 
  1068  0090                     	;# 
  1069  0091                     	;# 
  1070  0092                     	;# 
  1071  0095                     	;# 
  1072  0096                     	;# 
  1073  0097                     	;# 
  1074  0099                     	;# 
  1075  009A                     	;# 
  1076  009B                     	;# 
  1077  009B                     	;# 
  1078  009C                     	;# 
  1079  009D                     	;# 
  1080  009E                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  010E                     	;# 
  1084  0116                     	;# 
  1085  0117                     	;# 
  1086  011D                     	;# 
  1087  018C                     	;# 
  1088  018D                     	;# 
  1089  018E                     	;# 
  1090  0191                     	;# 
  1091  0191                     	;# 
  1092  0192                     	;# 
  1093  0193                     	;# 
  1094  0193                     	;# 
  1095  0194                     	;# 
  1096  0195                     	;# 
  1097  0196                     	;# 
  1098  0197                     	;# 
  1099  0199                     	;# 
  1100  019A                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019C                     	;# 
  1106  019C                     	;# 
  1107  019D                     	;# 
  1108  019E                     	;# 
  1109  019F                     	;# 
  1110  020D                     	;# 
  1111  0210                     	;# 
  1112  0211                     	;# 
  1113  0211                     	;# 
  1114  0212                     	;# 
  1115  0212                     	;# 
  1116  0213                     	;# 
  1117  0213                     	;# 
  1118  0214                     	;# 
  1119  0214                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0215                     	;# 
  1123  0216                     	;# 
  1124  0216                     	;# 
  1125  0217                     	;# 
  1126  0217                     	;# 
  1127  0291                     	;# 
  1128  0291                     	;# 
  1129  0292                     	;# 
  1130  0293                     	;# 
  1131  0298                     	;# 
  1132  0298                     	;# 
  1133  0299                     	;# 
  1134  029A                     	;# 
  1135  0394                     	;# 
  1136  0395                     	;# 
  1137  0396                     	;# 
  1138  0FE4                     	;# 
  1139  0FE5                     	;# 
  1140  0FE6                     	;# 
  1141  0FE7                     	;# 
  1142  0FE8                     	;# 
  1143  0FE9                     	;# 
  1144  0FEA                     	;# 
  1145  0FEB                     	;# 
  1146  0FED                     	;# 
  1147  0FEE                     	;# 
  1148  0FEF                     	;# 
  1149  0000                     	;# 
  1150  0001                     	;# 
  1151  0002                     	;# 
  1152  0003                     	;# 
  1153  0004                     	;# 
  1154  0005                     	;# 
  1155  0006                     	;# 
  1156  0007                     	;# 
  1157  0008                     	;# 
  1158  0009                     	;# 
  1159  000A                     	;# 
  1160  000B                     	;# 
  1161  000C                     	;# 
  1162  000D                     	;# 
  1163  000E                     	;# 
  1164  0010                     	;# 
  1165  0011                     	;# 
  1166  0012                     	;# 
  1167  0015                     	;# 
  1168  0016                     	;# 
  1169  0016                     	;# 
  1170  0017                     	;# 
  1171  0018                     	;# 
  1172  0019                     	;# 
  1173  001A                     	;# 
  1174  001B                     	;# 
  1175  001C                     	;# 
  1176  008C                     	;# 
  1177  008D                     	;# 
  1178  008E                     	;# 
  1179  0090                     	;# 
  1180  0091                     	;# 
  1181  0092                     	;# 
  1182  0095                     	;# 
  1183  0096                     	;# 
  1184  0097                     	;# 
  1185  0099                     	;# 
  1186  009A                     	;# 
  1187  009B                     	;# 
  1188  009B                     	;# 
  1189  009C                     	;# 
  1190  009D                     	;# 
  1191  009E                     	;# 
  1192  010C                     	;# 
  1193  010D                     	;# 
  1194  010E                     	;# 
  1195  0116                     	;# 
  1196  0117                     	;# 
  1197  011D                     	;# 
  1198  018C                     	;# 
  1199  018D                     	;# 
  1200  018E                     	;# 
  1201  0191                     	;# 
  1202  0191                     	;# 
  1203  0192                     	;# 
  1204  0193                     	;# 
  1205  0193                     	;# 
  1206  0194                     	;# 
  1207  0195                     	;# 
  1208  0196                     	;# 
  1209  0197                     	;# 
  1210  0199                     	;# 
  1211  019A                     	;# 
  1212  019B                     	;# 
  1213  019B                     	;# 
  1214  019B                     	;# 
  1215  019B                     	;# 
  1216  019C                     	;# 
  1217  019C                     	;# 
  1218  019D                     	;# 
  1219  019E                     	;# 
  1220  019F                     	;# 
  1221  020D                     	;# 
  1222  0210                     	;# 
  1223  0211                     	;# 
  1224  0211                     	;# 
  1225  0212                     	;# 
  1226  0212                     	;# 
  1227  0213                     	;# 
  1228  0213                     	;# 
  1229  0214                     	;# 
  1230  0214                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0215                     	;# 
  1234  0216                     	;# 
  1235  0216                     	;# 
  1236  0217                     	;# 
  1237  0217                     	;# 
  1238  0291                     	;# 
  1239  0291                     	;# 
  1240  0292                     	;# 
  1241  0293                     	;# 
  1242  0298                     	;# 
  1243  0298                     	;# 
  1244  0299                     	;# 
  1245  029A                     	;# 
  1246  0394                     	;# 
  1247  0395                     	;# 
  1248  0396                     	;# 
  1249  0FE4                     	;# 
  1250  0FE5                     	;# 
  1251  0FE6                     	;# 
  1252  0FE7                     	;# 
  1253  0FE8                     	;# 
  1254  0FE9                     	;# 
  1255  0FEA                     	;# 
  1256  0FEB                     	;# 
  1257  0FED                     	;# 
  1258  0FEE                     	;# 
  1259  0FEF                     	;# 
  1260  0000                     	;# 
  1261  0001                     	;# 
  1262  0002                     	;# 
  1263  0003                     	;# 
  1264  0004                     	;# 
  1265  0005                     	;# 
  1266  0006                     	;# 
  1267  0007                     	;# 
  1268  0008                     	;# 
  1269  0009                     	;# 
  1270  000A                     	;# 
  1271  000B                     	;# 
  1272  000C                     	;# 
  1273  000D                     	;# 
  1274  000E                     	;# 
  1275  0010                     	;# 
  1276  0011                     	;# 
  1277  0012                     	;# 
  1278  0015                     	;# 
  1279  0016                     	;# 
  1280  0016                     	;# 
  1281  0017                     	;# 
  1282  0018                     	;# 
  1283  0019                     	;# 
  1284  001A                     	;# 
  1285  001B                     	;# 
  1286  001C                     	;# 
  1287  008C                     	;# 
  1288  008D                     	;# 
  1289  008E                     	;# 
  1290  0090                     	;# 
  1291  0091                     	;# 
  1292  0092                     	;# 
  1293  0095                     	;# 
  1294  0096                     	;# 
  1295  0097                     	;# 
  1296  0099                     	;# 
  1297  009A                     	;# 
  1298  009B                     	;# 
  1299  009B                     	;# 
  1300  009C                     	;# 
  1301  009D                     	;# 
  1302  009E                     	;# 
  1303  010C                     	;# 
  1304  010D                     	;# 
  1305  010E                     	;# 
  1306  0116                     	;# 
  1307  0117                     	;# 
  1308  011D                     	;# 
  1309  018C                     	;# 
  1310  018D                     	;# 
  1311  018E                     	;# 
  1312  0191                     	;# 
  1313  0191                     	;# 
  1314  0192                     	;# 
  1315  0193                     	;# 
  1316  0193                     	;# 
  1317  0194                     	;# 
  1318  0195                     	;# 
  1319  0196                     	;# 
  1320  0197                     	;# 
  1321  0199                     	;# 
  1322  019A                     	;# 
  1323  019B                     	;# 
  1324  019B                     	;# 
  1325  019B                     	;# 
  1326  019B                     	;# 
  1327  019C                     	;# 
  1328  019C                     	;# 
  1329  019D                     	;# 
  1330  019E                     	;# 
  1331  019F                     	;# 
  1332  020D                     	;# 
  1333  0210                     	;# 
  1334  0211                     	;# 
  1335  0211                     	;# 
  1336  0212                     	;# 
  1337  0212                     	;# 
  1338  0213                     	;# 
  1339  0213                     	;# 
  1340  0214                     	;# 
  1341  0214                     	;# 
  1342  0215                     	;# 
  1343  0215                     	;# 
  1344  0215                     	;# 
  1345  0216                     	;# 
  1346  0216                     	;# 
  1347  0217                     	;# 
  1348  0217                     	;# 
  1349  0291                     	;# 
  1350  0291                     	;# 
  1351  0292                     	;# 
  1352  0293                     	;# 
  1353  0298                     	;# 
  1354  0298                     	;# 
  1355  0299                     	;# 
  1356  029A                     	;# 
  1357  0394                     	;# 
  1358  0395                     	;# 
  1359  0396                     	;# 
  1360  0FE4                     	;# 
  1361  0FE5                     	;# 
  1362  0FE6                     	;# 
  1363  0FE7                     	;# 
  1364  0FE8                     	;# 
  1365  0FE9                     	;# 
  1366  0FEA                     	;# 
  1367  0FEB                     	;# 
  1368  0FED                     	;# 
  1369  0FEE                     	;# 
  1370  0FEF                     	;# 
  1371  0000                     	;# 
  1372  0001                     	;# 
  1373  0002                     	;# 
  1374  0003                     	;# 
  1375  0004                     	;# 
  1376  0005                     	;# 
  1377  0006                     	;# 
  1378  0007                     	;# 
  1379  0008                     	;# 
  1380  0009                     	;# 
  1381  000A                     	;# 
  1382  000B                     	;# 
  1383  000C                     	;# 
  1384  000D                     	;# 
  1385  000E                     	;# 
  1386  0010                     	;# 
  1387  0011                     	;# 
  1388  0012                     	;# 
  1389  0015                     	;# 
  1390  0016                     	;# 
  1391  0016                     	;# 
  1392  0017                     	;# 
  1393  0018                     	;# 
  1394  0019                     	;# 
  1395  001A                     	;# 
  1396  001B                     	;# 
  1397  001C                     	;# 
  1398  008C                     	;# 
  1399  008D                     	;# 
  1400  008E                     	;# 
  1401  0090                     	;# 
  1402  0091                     	;# 
  1403  0092                     	;# 
  1404  0095                     	;# 
  1405  0096                     	;# 
  1406  0097                     	;# 
  1407  0099                     	;# 
  1408  009A                     	;# 
  1409  009B                     	;# 
  1410  009B                     	;# 
  1411  009C                     	;# 
  1412  009D                     	;# 
  1413  009E                     	;# 
  1414  010C                     	;# 
  1415  010D                     	;# 
  1416  010E                     	;# 
  1417  0116                     	;# 
  1418  0117                     	;# 
  1419  011D                     	;# 
  1420  018C                     	;# 
  1421  018D                     	;# 
  1422  018E                     	;# 
  1423  0191                     	;# 
  1424  0191                     	;# 
  1425  0192                     	;# 
  1426  0193                     	;# 
  1427  0193                     	;# 
  1428  0194                     	;# 
  1429  0195                     	;# 
  1430  0196                     	;# 
  1431  0197                     	;# 
  1432  0199                     	;# 
  1433  019A                     	;# 
  1434  019B                     	;# 
  1435  019B                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019C                     	;# 
  1439  019C                     	;# 
  1440  019D                     	;# 
  1441  019E                     	;# 
  1442  019F                     	;# 
  1443  020D                     	;# 
  1444  0210                     	;# 
  1445  0211                     	;# 
  1446  0211                     	;# 
  1447  0212                     	;# 
  1448  0212                     	;# 
  1449  0213                     	;# 
  1450  0213                     	;# 
  1451  0214                     	;# 
  1452  0214                     	;# 
  1453  0215                     	;# 
  1454  0215                     	;# 
  1455  0215                     	;# 
  1456  0216                     	;# 
  1457  0216                     	;# 
  1458  0217                     	;# 
  1459  0217                     	;# 
  1460  0291                     	;# 
  1461  0291                     	;# 
  1462  0292                     	;# 
  1463  0293                     	;# 
  1464  0298                     	;# 
  1465  0298                     	;# 
  1466  0299                     	;# 
  1467  029A                     	;# 
  1468  0394                     	;# 
  1469  0395                     	;# 
  1470  0396                     	;# 
  1471  0FE4                     	;# 
  1472  0FE5                     	;# 
  1473  0FE6                     	;# 
  1474  0FE7                     	;# 
  1475  0FE8                     	;# 
  1476  0FE9                     	;# 
  1477  0FEA                     	;# 
  1478  0FEB                     	;# 
  1479  0FED                     	;# 
  1480  0FEE                     	;# 
  1481  0FEF                     	;# 
  1482  0000                     	;# 
  1483  0001                     	;# 
  1484  0002                     	;# 
  1485  0003                     	;# 
  1486  0004                     	;# 
  1487  0005                     	;# 
  1488  0006                     	;# 
  1489  0007                     	;# 
  1490  0008                     	;# 
  1491  0009                     	;# 
  1492  000A                     	;# 
  1493  000B                     	;# 
  1494  000C                     	;# 
  1495  000D                     	;# 
  1496  000E                     	;# 
  1497  0010                     	;# 
  1498  0011                     	;# 
  1499  0012                     	;# 
  1500  0015                     	;# 
  1501  0016                     	;# 
  1502  0016                     	;# 
  1503  0017                     	;# 
  1504  0018                     	;# 
  1505  0019                     	;# 
  1506  001A                     	;# 
  1507  001B                     	;# 
  1508  001C                     	;# 
  1509  008C                     	;# 
  1510  008D                     	;# 
  1511  008E                     	;# 
  1512  0090                     	;# 
  1513  0091                     	;# 
  1514  0092                     	;# 
  1515  0095                     	;# 
  1516  0096                     	;# 
  1517  0097                     	;# 
  1518  0099                     	;# 
  1519  009A                     	;# 
  1520  009B                     	;# 
  1521  009B                     	;# 
  1522  009C                     	;# 
  1523  009D                     	;# 
  1524  009E                     	;# 
  1525  010C                     	;# 
  1526  010D                     	;# 
  1527  010E                     	;# 
  1528  0116                     	;# 
  1529  0117                     	;# 
  1530  011D                     	;# 
  1531  018C                     	;# 
  1532  018D                     	;# 
  1533  018E                     	;# 
  1534  0191                     	;# 
  1535  0191                     	;# 
  1536  0192                     	;# 
  1537  0193                     	;# 
  1538  0193                     	;# 
  1539  0194                     	;# 
  1540  0195                     	;# 
  1541  0196                     	;# 
  1542  0197                     	;# 
  1543  0199                     	;# 
  1544  019A                     	;# 
  1545  019B                     	;# 
  1546  019B                     	;# 
  1547  019B                     	;# 
  1548  019B                     	;# 
  1549  019C                     	;# 
  1550  019C                     	;# 
  1551  019D                     	;# 
  1552  019E                     	;# 
  1553  019F                     	;# 
  1554  020D                     	;# 
  1555  0210                     	;# 
  1556  0211                     	;# 
  1557  0211                     	;# 
  1558  0212                     	;# 
  1559  0212                     	;# 
  1560  0213                     	;# 
  1561  0213                     	;# 
  1562  0214                     	;# 
  1563  0214                     	;# 
  1564  0215                     	;# 
  1565  0215                     	;# 
  1566  0215                     	;# 
  1567  0216                     	;# 
  1568  0216                     	;# 
  1569  0217                     	;# 
  1570  0217                     	;# 
  1571  0291                     	;# 
  1572  0291                     	;# 
  1573  0292                     	;# 
  1574  0293                     	;# 
  1575  0298                     	;# 
  1576  0298                     	;# 
  1577  0299                     	;# 
  1578  029A                     	;# 
  1579  0394                     	;# 
  1580  0395                     	;# 
  1581  0396                     	;# 
  1582  0FE4                     	;# 
  1583  0FE5                     	;# 
  1584  0FE6                     	;# 
  1585  0FE7                     	;# 
  1586  0FE8                     	;# 
  1587  0FE9                     	;# 
  1588  0FEA                     	;# 
  1589  0FEB                     	;# 
  1590  0FED                     	;# 
  1591  0FEE                     	;# 
  1592  0FEF                     	;# 
  1593  0000                     	;# 
  1594  0001                     	;# 
  1595  0002                     	;# 
  1596  0003                     	;# 
  1597  0004                     	;# 
  1598  0005                     	;# 
  1599  0006                     	;# 
  1600  0007                     	;# 
  1601  0008                     	;# 
  1602  0009                     	;# 
  1603  000A                     	;# 
  1604  000B                     	;# 
  1605  000C                     	;# 
  1606  000D                     	;# 
  1607  000E                     	;# 
  1608  0010                     	;# 
  1609  0011                     	;# 
  1610  0012                     	;# 
  1611  0015                     	;# 
  1612  0016                     	;# 
  1613  0016                     	;# 
  1614  0017                     	;# 
  1615  0018                     	;# 
  1616  0019                     	;# 
  1617  001A                     	;# 
  1618  001B                     	;# 
  1619  001C                     	;# 
  1620  008C                     	;# 
  1621  008D                     	;# 
  1622  008E                     	;# 
  1623  0090                     	;# 
  1624  0091                     	;# 
  1625  0092                     	;# 
  1626  0095                     	;# 
  1627  0096                     	;# 
  1628  0097                     	;# 
  1629  0099                     	;# 
  1630  009A                     	;# 
  1631  009B                     	;# 
  1632  009B                     	;# 
  1633  009C                     	;# 
  1634  009D                     	;# 
  1635  009E                     	;# 
  1636  010C                     	;# 
  1637  010D                     	;# 
  1638  010E                     	;# 
  1639  0116                     	;# 
  1640  0117                     	;# 
  1641  011D                     	;# 
  1642  018C                     	;# 
  1643  018D                     	;# 
  1644  018E                     	;# 
  1645  0191                     	;# 
  1646  0191                     	;# 
  1647  0192                     	;# 
  1648  0193                     	;# 
  1649  0193                     	;# 
  1650  0194                     	;# 
  1651  0195                     	;# 
  1652  0196                     	;# 
  1653  0197                     	;# 
  1654  0199                     	;# 
  1655  019A                     	;# 
  1656  019B                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019B                     	;# 
  1660  019C                     	;# 
  1661  019C                     	;# 
  1662  019D                     	;# 
  1663  019E                     	;# 
  1664  019F                     	;# 
  1665  020D                     	;# 
  1666  0210                     	;# 
  1667  0211                     	;# 
  1668  0211                     	;# 
  1669  0212                     	;# 
  1670  0212                     	;# 
  1671  0213                     	;# 
  1672  0213                     	;# 
  1673  0214                     	;# 
  1674  0214                     	;# 
  1675  0215                     	;# 
  1676  0215                     	;# 
  1677  0215                     	;# 
  1678  0216                     	;# 
  1679  0216                     	;# 
  1680  0217                     	;# 
  1681  0217                     	;# 
  1682  0291                     	;# 
  1683  0291                     	;# 
  1684  0292                     	;# 
  1685  0293                     	;# 
  1686  0298                     	;# 
  1687  0298                     	;# 
  1688  0299                     	;# 
  1689  029A                     	;# 
  1690  0394                     	;# 
  1691  0395                     	;# 
  1692  0396                     	;# 
  1693  0FE4                     	;# 
  1694  0FE5                     	;# 
  1695  0FE6                     	;# 
  1696  0FE7                     	;# 
  1697  0FE8                     	;# 
  1698  0FE9                     	;# 
  1699  0FEA                     	;# 
  1700  0FEB                     	;# 
  1701  0FED                     	;# 
  1702  0FEE                     	;# 
  1703  0FEF                     	;# 
  1704  0000                     	;# 
  1705  0001                     	;# 
  1706  0002                     	;# 
  1707  0003                     	;# 
  1708  0004                     	;# 
  1709  0005                     	;# 
  1710  0006                     	;# 
  1711  0007                     	;# 
  1712  0008                     	;# 
  1713  0009                     	;# 
  1714  000A                     	;# 
  1715  000B                     	;# 
  1716  000C                     	;# 
  1717  000D                     	;# 
  1718  000E                     	;# 
  1719  0010                     	;# 
  1720  0011                     	;# 
  1721  0012                     	;# 
  1722  0015                     	;# 
  1723  0016                     	;# 
  1724  0016                     	;# 
  1725  0017                     	;# 
  1726  0018                     	;# 
  1727  0019                     	;# 
  1728  001A                     	;# 
  1729  001B                     	;# 
  1730  001C                     	;# 
  1731  008C                     	;# 
  1732  008D                     	;# 
  1733  008E                     	;# 
  1734  0090                     	;# 
  1735  0091                     	;# 
  1736  0092                     	;# 
  1737  0095                     	;# 
  1738  0096                     	;# 
  1739  0097                     	;# 
  1740  0099                     	;# 
  1741  009A                     	;# 
  1742  009B                     	;# 
  1743  009B                     	;# 
  1744  009C                     	;# 
  1745  009D                     	;# 
  1746  009E                     	;# 
  1747  010C                     	;# 
  1748  010D                     	;# 
  1749  010E                     	;# 
  1750  0116                     	;# 
  1751  0117                     	;# 
  1752  011D                     	;# 
  1753  018C                     	;# 
  1754  018D                     	;# 
  1755  018E                     	;# 
  1756  0191                     	;# 
  1757  0191                     	;# 
  1758  0192                     	;# 
  1759  0193                     	;# 
  1760  0193                     	;# 
  1761  0194                     	;# 
  1762  0195                     	;# 
  1763  0196                     	;# 
  1764  0197                     	;# 
  1765  0199                     	;# 
  1766  019A                     	;# 
  1767  019B                     	;# 
  1768  019B                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019C                     	;# 
  1772  019C                     	;# 
  1773  019D                     	;# 
  1774  019E                     	;# 
  1775  019F                     	;# 
  1776  020D                     	;# 
  1777  0210                     	;# 
  1778  0211                     	;# 
  1779  0211                     	;# 
  1780  0212                     	;# 
  1781  0212                     	;# 
  1782  0213                     	;# 
  1783  0213                     	;# 
  1784  0214                     	;# 
  1785  0214                     	;# 
  1786  0215                     	;# 
  1787  0215                     	;# 
  1788  0215                     	;# 
  1789  0216                     	;# 
  1790  0216                     	;# 
  1791  0217                     	;# 
  1792  0217                     	;# 
  1793  0291                     	;# 
  1794  0291                     	;# 
  1795  0292                     	;# 
  1796  0293                     	;# 
  1797  0298                     	;# 
  1798  0298                     	;# 
  1799  0299                     	;# 
  1800  029A                     	;# 
  1801  0394                     	;# 
  1802  0395                     	;# 
  1803  0396                     	;# 
  1804  0FE4                     	;# 
  1805  0FE5                     	;# 
  1806  0FE6                     	;# 
  1807  0FE7                     	;# 
  1808  0FE8                     	;# 
  1809  0FE9                     	;# 
  1810  0FEA                     	;# 
  1811  0FEB                     	;# 
  1812  0FED                     	;# 
  1813  0FEE                     	;# 
  1814  0FEF                     	;# 
  1815  0000                     	;# 
  1816  0001                     	;# 
  1817  0002                     	;# 
  1818  0003                     	;# 
  1819  0004                     	;# 
  1820  0005                     	;# 
  1821  0006                     	;# 
  1822  0007                     	;# 
  1823  0008                     	;# 
  1824  0009                     	;# 
  1825  000A                     	;# 
  1826  000B                     	;# 
  1827  000C                     	;# 
  1828  000D                     	;# 
  1829  000E                     	;# 
  1830  0010                     	;# 
  1831  0011                     	;# 
  1832  0012                     	;# 
  1833  0015                     	;# 
  1834  0016                     	;# 
  1835  0016                     	;# 
  1836  0017                     	;# 
  1837  0018                     	;# 
  1838  0019                     	;# 
  1839  001A                     	;# 
  1840  001B                     	;# 
  1841  001C                     	;# 
  1842  008C                     	;# 
  1843  008D                     	;# 
  1844  008E                     	;# 
  1845  0090                     	;# 
  1846  0091                     	;# 
  1847  0092                     	;# 
  1848  0095                     	;# 
  1849  0096                     	;# 
  1850  0097                     	;# 
  1851  0099                     	;# 
  1852  009A                     	;# 
  1853  009B                     	;# 
  1854  009B                     	;# 
  1855  009C                     	;# 
  1856  009D                     	;# 
  1857  009E                     	;# 
  1858  010C                     	;# 
  1859  010D                     	;# 
  1860  010E                     	;# 
  1861  0116                     	;# 
  1862  0117                     	;# 
  1863  011D                     	;# 
  1864  018C                     	;# 
  1865  018D                     	;# 
  1866  018E                     	;# 
  1867  0191                     	;# 
  1868  0191                     	;# 
  1869  0192                     	;# 
  1870  0193                     	;# 
  1871  0193                     	;# 
  1872  0194                     	;# 
  1873  0195                     	;# 
  1874  0196                     	;# 
  1875  0197                     	;# 
  1876  0199                     	;# 
  1877  019A                     	;# 
  1878  019B                     	;# 
  1879  019B                     	;# 
  1880  019B                     	;# 
  1881  019B                     	;# 
  1882  019C                     	;# 
  1883  019C                     	;# 
  1884  019D                     	;# 
  1885  019E                     	;# 
  1886  019F                     	;# 
  1887  020D                     	;# 
  1888  0210                     	;# 
  1889  0211                     	;# 
  1890  0211                     	;# 
  1891  0212                     	;# 
  1892  0212                     	;# 
  1893  0213                     	;# 
  1894  0213                     	;# 
  1895  0214                     	;# 
  1896  0214                     	;# 
  1897  0215                     	;# 
  1898  0215                     	;# 
  1899  0215                     	;# 
  1900  0216                     	;# 
  1901  0216                     	;# 
  1902  0217                     	;# 
  1903  0217                     	;# 
  1904  0291                     	;# 
  1905  0291                     	;# 
  1906  0292                     	;# 
  1907  0293                     	;# 
  1908  0298                     	;# 
  1909  0298                     	;# 
  1910  0299                     	;# 
  1911  029A                     	;# 
  1912  0394                     	;# 
  1913  0395                     	;# 
  1914  0396                     	;# 
  1915  0FE4                     	;# 
  1916  0FE5                     	;# 
  1917  0FE6                     	;# 
  1918  0FE7                     	;# 
  1919  0FE8                     	;# 
  1920  0FE9                     	;# 
  1921  0FEA                     	;# 
  1922  0FEB                     	;# 
  1923  0FED                     	;# 
  1924  0FEE                     	;# 
  1925  0FEF                     	;# 
  1926                           
  1927                           	psect	idataBANK3
  1928  1AC7                     __pidataBANK3:	
  1929                           
  1930                           ;initializer for _VarProduct
  1931  1AC7  3463               	retlw	99
  1932  1AC8  3402               	retlw	2
  1933  1AC9  3400               	retlw	0
  1934  1ACA  3400               	retlw	0
  1935  1ACB  3400               	retlw	0
  1936  1ACC  3400               	retlw	0
  1937  1ACD  3400               	retlw	0
  1938  1ACE  3400               	retlw	0
  1939  1ACF  3400               	retlw	0
  1940  1AD0  3400               	retlw	0
  1941  1AD1  3400               	retlw	0
  1942  1AD2  3400               	retlw	0
  1943  1AD3  34FF               	retlw	255
  1944  1AD4  34FF               	retlw	255
  1945  1AD5  34FF               	retlw	255
  1946  1AD6  3400               	retlw	0
  1947  1AD7  3400               	retlw	0
  1948  1AD8  3400               	retlw	0
  1949  1AD9  3400               	retlw	0
  1950  1ADA  3400               	retlw	0
  1951  1ADB  3400               	retlw	0
  1952  1ADC  3400               	retlw	0
  1953  1ADD  3400               	retlw	0
  1954  1ADE  3400               	retlw	0
  1955  1ADF  3400               	retlw	0
  1956  1AE0  3400               	retlw	0
  1957  1AE1  3400               	retlw	0
  1958  1AE2  3400               	retlw	0
  1959  1AE3  3400               	retlw	0
  1960  1AE4  3400               	retlw	0
  1961  1AE5  3400               	retlw	0
  1962  1AE6  3400               	retlw	0
  1963                           
  1964                           	psect	stringtext
  1965  1800                     __pstringtext:	
  1966  1800                     _CC2500_registers_address:	
  1967  1800  3403               	retlw	3
  1968  1801  3416               	retlw	22
  1969  1802  3417               	retlw	23
  1970  1803  341E               	retlw	30
  1971  1804  341F               	retlw	31
  1972  1805  3420               	retlw	32
  1973  1806  342A               	retlw	42
  1974  1807  342B               	retlw	43
  1975  1808  340B               	retlw	11
  1976  1809  340C               	retlw	12
  1977  180A  340D               	retlw	13
  1978  180B  340E               	retlw	14
  1979  180C  340F               	retlw	15
  1980  180D  3410               	retlw	16
  1981  180E  3411               	retlw	17
  1982  180F  3412               	retlw	18
  1983  1810  3413               	retlw	19
  1984  1811  3414               	retlw	20
  1985  1812  340A               	retlw	10
  1986  1813  3415               	retlw	21
  1987  1814  3421               	retlw	33
  1988  1815  3422               	retlw	34
  1989  1816  3418               	retlw	24
  1990  1817  3419               	retlw	25
  1991  1818  341A               	retlw	26
  1992  1819  341B               	retlw	27
  1993  181A  341C               	retlw	28
  1994  181B  341D               	retlw	29
  1995  181C  3423               	retlw	35
  1996  181D  3424               	retlw	36
  1997  181E  3425               	retlw	37
  1998  181F  3426               	retlw	38
  1999  1820  3429               	retlw	41
  2000  1821  342C               	retlw	44
  2001  1822  342D               	retlw	45
  2002  1823  342E               	retlw	46
  2003  1824  3400               	retlw	0
  2004  1825  3401               	retlw	1
  2005  1826  3402               	retlw	2
  2006  1827  3407               	retlw	7
  2007  1828  3408               	retlw	8
  2008  1829  3409               	retlw	9
  2009  182A  3406               	retlw	6
  2010  182B  3404               	retlw	4
  2011  182C  3405               	retlw	5
  2012  182D  3427               	retlw	39
  2013  182E  3428               	retlw	40
  2014  182F                     __end_of_CC2500_registers_address:	
  2015  182F                     _CC2500_rfSettings:	
  2016  182F  3407               	retlw	7
  2017  1830  3407               	retlw	7
  2018  1831  3430               	retlw	48
  2019  1832  3487               	retlw	135
  2020  1833  346B               	retlw	107
  2021  1834  34F8               	retlw	248
  2022  1835  347F               	retlw	127
  2023  1836  343F               	retlw	63
  2024  1837  3409               	retlw	9
  2025  1838  3400               	retlw	0
  2026  1839  345C               	retlw	92
  2027  183A  34A7               	retlw	167
  2028  183B  3462               	retlw	98
  2029  183C  3486               	retlw	134
  2030  183D  3483               	retlw	131
  2031  183E  3403               	retlw	3
  2032  183F  3422               	retlw	34
  2033  1840  34F8               	retlw	248
  2034  1841  3400               	retlw	0
  2035  1842  3444               	retlw	68
  2036  1843  34B6               	retlw	182
  2037  1844  3410               	retlw	16
  2038  1845  3418               	retlw	24
  2039  1846  341D               	retlw	29
  2040  1847  341C               	retlw	28
  2041  1848  34C7               	retlw	199
  2042  1849  3400               	retlw	0
  2043  184A  34B2               	retlw	178
  2044  184B  34EA               	retlw	234
  2045  184C  340A               	retlw	10
  2046  184D  3400               	retlw	0
  2047  184E  3411               	retlw	17
  2048  184F  3459               	retlw	89
  2049  1850  3488               	retlw	136
  2050  1851  3431               	retlw	49
  2051  1852  340B               	retlw	11
  2052  1853  342F               	retlw	47
  2053  1854  342E               	retlw	46
  2054  1855  3406               	retlw	6
  2055  1856  3404               	retlw	4
  2056  1857  3405               	retlw	5
  2057  1858  3400               	retlw	0
  2058  1859  3430               	retlw	48
  2059  185A  34D3               	retlw	211
  2060  185B  3491               	retlw	145
  2061  185C  3441               	retlw	65
  2062  185D  3400               	retlw	0
  2063  185E                     __end_of_CC2500_rfSettings:	
  2064  185E                     _CC2500_patable_vaule:	
  2065  185E  34FE               	retlw	254
  2066  185F  34FE               	retlw	254
  2067  1860  34FE               	retlw	254
  2068  1861  34FE               	retlw	254
  2069  1862  34FE               	retlw	254
  2070  1863  34FE               	retlw	254
  2071  1864  34FE               	retlw	254
  2072  1865  34FE               	retlw	254
  2073  1866                     __end_of_CC2500_patable_vaule:	
  2074                           
  2075                           	psect	nvCOMMON
  2076  007C                     __pnvCOMMON:	
  2077  007C                     _Memory:	
  2078  007C                     	ds	1
  2079  007D                     _TMain:	
  2080  007D                     	ds	1
  2081                           
  2082                           	psect	nvBANK0
  2083  006F                     __pnvBANK0:	
  2084  006F                     _Product:	
  2085  006F                     	ds	1
  2086                           
  2087                           	psect	nvBANK1
  2088  00E9                     __pnvBANK1:	
  2089  00E9                     _Timer0:	
  2090  00E9                     	ds	1
  2091  000C                     _PORTA	set	12
  2092  000D                     _PORTB	set	13
  2093  000E                     _PORTC	set	14
  2094  0015                     _TMR0	set	21
  2095  005F                     _GIE	set	95
  2096  005C                     _INTE	set	92
  2097  0059                     _INTF	set	89
  2098  005B                     _IOCIE	set	91
  2099  0058                     _IOCIF	set	88
  2100  005E                     _PEIE	set	94
  2101  0060                     _RA0	set	96
  2102  0063                     _RA3	set	99
  2103  0064                     _RA4	set	100
  2104  0066                     _RA6	set	102
  2105  0067                     _RA7	set	103
  2106  0068                     _RB0	set	104
  2107  0069                     _RB1	set	105
  2108  006B                     _RB3	set	107
  2109  006C                     _RB4	set	108
  2110  006D                     _RB5	set	109
  2111  0070                     _RC0	set	112
  2112  0071                     _RC1	set	113
  2113  0072                     _RC2	set	114
  2114  0074                     _RC4	set	116
  2115  0075                     _RC5	set	117
  2116  0077                     _RC7	set	119
  2117  005D                     _TMR0IE	set	93
  2118  005A                     _TMR0IF	set	90
  2119  009D                     _ADCON0	set	157
  2120  009E                     _ADCON1	set	158
  2121  009C                     _ADRESH	set	156
  2122  009B                     _ADRESL	set	155
  2123  0095                     _OPTION_REG	set	149
  2124  0099                     _OSCCON	set	153
  2125  008C                     _TRISA	set	140
  2126  008D                     _TRISB	set	141
  2127  008E                     _TRISC	set	142
  2128  04E9                     _GO_nDONE	set	1257
  2129  0117                     _FVRCON	set	279
  2130  010C                     _LATA	set	268
  2131  010D                     _LATB	set	269
  2132  010E                     _LATC	set	270
  2133  018C                     _ANSELA	set	396
  2134  018D                     _ANSELB	set	397
  2135  018E                     _ANSELC	set	398
  2136  0192                     _PMADRH	set	402
  2137  0191                     _PMADRL	set	401
  2138  0196                     _PMCON2	set	406
  2139  0194                     _PMDATH	set	404
  2140  0193                     _PMDATL	set	403
  2141  0CAE                     _CFGS	set	3246
  2142  0CAC                     _FREE	set	3244
  2143  0CAD                     _LWLO	set	3245
  2144  0CA8                     _RD	set	3240
  2145  0CA9                     _WR	set	3241
  2146  0CAA                     _WREN	set	3242
  2147  1068                     _WPUB0	set	4200
  2148  1069                     _WPUB1	set	4201
  2149  106A                     _WPUB2	set	4202
  2150  0396                     _IOCBF	set	918
  2151  0395                     _IOCBN	set	917
  2152  0394                     _IOCBP	set	916
  2153  1CB2                     _IOCBF2	set	7346
  2154                           
  2155                           ; #config settings
  2156  0000                     
  2157                           	psect	cinit
  2158  0018                     start_initialization:	
  2159  0018                     __initialization:	
  2160                           
  2161                           ; Clear objects allocated to BITCOMMON
  2162  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2163                           
  2164                           ; Clear objects allocated to COMMON
  2165  0019  01F8               	clrf	__pbssCOMMON& (0+127)
  2166  001A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2167  001B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2168  001C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2169                           
  2170                           ; Clear objects allocated to BANK0
  2171  001D  01EC               	clrf	__pbssBANK0& (0+127)
  2172  001E  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2173  001F  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2174                           
  2175                           ; Clear objects allocated to BANK1
  2176  0020  30A0               	movlw	low __pbssBANK1
  2177  0021  0084               	movwf	4
  2178  0022  3000               	movlw	high __pbssBANK1
  2179  0023  0085               	movwf	5
  2180  0024  3049               	movlw	73
  2181  0025  31A6  2675  3180   	fcall	clear_ram0
  2182                           
  2183                           ; Clear objects allocated to BANK2
  2184  0028  3020               	movlw	low __pbssBANK2
  2185  0029  0084               	movwf	4
  2186  002A  3001               	movlw	high __pbssBANK2
  2187  002B  0085               	movwf	5
  2188  002C  304A               	movlw	74
  2189  002D  31A6  2675  3180   	fcall	clear_ram0
  2190                           
  2191                           ; Clear objects allocated to BANK3
  2192  0030  30A0               	movlw	low __pbssBANK3
  2193  0031  0084               	movwf	4
  2194  0032  3001               	movlw	high __pbssBANK3
  2195  0033  0085               	movwf	5
  2196  0034  3025               	movlw	37
  2197  0035  31A6  2675  3180   	fcall	clear_ram0
  2198                           
  2199                           ; Clear objects allocated to BANK4
  2200  0038  3020               	movlw	low __pbssBANK4
  2201  0039  0084               	movwf	4
  2202  003A  3002               	movlw	high __pbssBANK4
  2203  003B  0085               	movwf	5
  2204  003C  3047               	movlw	71
  2205  003D  31A6  2675  3180   	fcall	clear_ram0
  2206                           
  2207                           ; Initialize objects allocated to BANK3
  2208  0040  30C7               	movlw	low __pidataBANK3
  2209  0041  0084               	movwf	4
  2210  0042  309A               	movlw	(high __pidataBANK3)| (0+128)
  2211  0043  0085               	movwf	5
  2212  0044  30C5               	movlw	low __pdataBANK3
  2213  0045  0086               	movwf	6
  2214  0046  3001               	movlw	high __pdataBANK3
  2215  0047  0087               	movwf	7
  2216  0048  3020               	movlw	32
  2217  0049  31A6  266F         	fcall	init_ram
  2218  004B                     end_of_initialization:	
  2219                           ;End of C runtime variable initialization code
  2220                           
  2221  004B                     __end_of__initialization:	
  2222  004B  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2223  004C  0020               	movlb	0
  2224  004D  3190  28A9         	ljmp	_main	;jump to C main() function
  2225                           
  2226                           	psect	bitbssCOMMON
  2227  0380                     __pbitbssCOMMON:	
  2228  0380                     _CC2500_Enable:	
  2229  0380                     	ds	1
  2230  0381                     _Receive_GO:	
  2231  0381                     	ds	1
  2232  0382                     _Receive_OK:	
  2233  0382                     	ds	1
  2234  0383                     _RxStatus:	
  2235  0383                     	ds	1
  2236  0384                     _Transceive_GO:	
  2237  0384                     	ds	1
  2238  0385                     _Transceive_OK:	
  2239  0385                     	ds	1
  2240  0386                     _TxStatus:	
  2241  0386                     	ds	1
  2242                           
  2243                           	psect	bssCOMMON
  2244  0078                     __pbssCOMMON:	
  2245  0078                     _Buz:	
  2246  0078                     	ds	1
  2247  0079                     _DimmerLights22:	
  2248  0079                     	ds	1
  2249  007A                     _RF:	
  2250  007A                     	ds	1
  2251  007B                     _Sw:	
  2252  007B                     	ds	1
  2253                           
  2254                           	psect	bssBANK0
  2255  006C                     __pbssBANK0:	
  2256  006C                     _DimmerLights:	
  2257  006C                     	ds	1
  2258  006D                     _DimmerLights11:	
  2259  006D                     	ds	1
  2260  006E                     _Load:	
  2261  006E                     	ds	1
  2262                           
  2263                           	psect	bssBANK1
  2264  00A0                     __pbssBANK1:	
  2265  00A0                     _RF_Data:	
  2266  00A0                     	ds	21
  2267  00B5                     _RF_Count:	
  2268  00B5                     	ds	2
  2269  00B7                     _CRC:	
  2270  00B7                     	ds	1
  2271  00B8                     _DelayOff:	
  2272  00B8                     	ds	1
  2273  00B9                     _Dimmer:	
  2274  00B9                     	ds	1
  2275  00BA                     _DimmerLightsIntr:	
  2276  00BA                     	ds	1
  2277  00BB                     _LED:	
  2278  00BB                     	ds	1
  2279  00BC                     _RFSW:	
  2280  00BC                     	ds	1
  2281  00BD                     _RSSI:	
  2282  00BD                     	ds	1
  2283  00BE                     _Rx_Length:	
  2284  00BE                     	ds	1
  2285  00BF                     _SPI0Buffer:	
  2286  00BF                     	ds	1
  2287  00C0                     _Tx_Length:	
  2288  00C0                     	ds	1
  2289  00C1                     _r_address:	
  2290  00C1                     	ds	1
  2291  00C2                     _r_data:	
  2292  00C2                     	ds	1
  2293  00C3                     _s_data:	
  2294  00C3                     	ds	1
  2295  00C4                     _VarTimer0:	
  2296  00C4                     	ds	7
  2297  00CB                     _DlySw1:	
  2298  00CB                     	ds	5
  2299  00D0                     _DlySw2:	
  2300  00D0                     	ds	5
  2301  00D5                     _VarErrLED:	
  2302  00D5                     	ds	4
  2303  00D9                     _VarLED1:	
  2304  00D9                     	ds	4
  2305  00DD                     _VarLED2:	
  2306  00DD                     	ds	4
  2307  00E1                     _Dimmer1:	
  2308  00E1                     	ds	3
  2309  00E4                     _RF1:	
  2310  00E4                     	ds	3
  2311  00E7                     _RFSW1:	
  2312  00E7                     	ds	1
  2313  00E8                     _RFSW2:	
  2314  00E8                     	ds	1
  2315                           
  2316                           	psect	bssBANK2
  2317  0120                     __pbssBANK2:	
  2318  0120                     _VarTMain:	
  2319  0120                     	ds	16
  2320  0130                     _DimmerLights1:	
  2321  0130                     	ds	14
  2322  013E                     _DimmerLights2:	
  2323  013E                     	ds	14
  2324  014C                     _Buz1:	
  2325  014C                     	ds	12
  2326  0158                     _Sw1:	
  2327  0158                     	ds	9
  2328  0161                     _Sw2:	
  2329  0161                     	ds	9
  2330                           
  2331                           	psect	bssBANK3
  2332  01A0                     __pbssBANK3:	
  2333  01A0                     _VarMemory:	
  2334  01A0                     	ds	37
  2335                           
  2336                           	psect	dataBANK3
  2337  01C5                     __pdataBANK3:	
  2338  01C5                     _VarProduct:	
  2339  01C5                     	ds	32
  2340                           
  2341                           	psect	bssBANK4
  2342  0220                     __pbssBANK4:	
  2343  0220                     _Load1:	
  2344  0220                     	ds	71
  2345                           
  2346                           	psect	clrtext
  2347  2675                     clear_ram0:	
  2348                           ;	Called with FSR0 containing the base address, and
  2349                           ;	WREG with the size to clear
  2350                           
  2351  2675  0064               	clrwdt	;clear the watchdog before getting into this loop
  2352  2676                     clrloop0:	
  2353  2676  0180               	clrf	0	;clear RAM location pointed to by FSR
  2354  2677  3101               	addfsr 0,1
  2355  2678  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2356  2679  2E76               	goto	clrloop0	;have we reached the end yet?
  2357  267A  3400               	retlw	0	;all done for this memory range, return
  2358                           
  2359                           	psect	inittext
  2360  266F                     init_ram:	
  2361  266F  00FE               	movwf	126
  2362  2670                     initloop:	
  2363  2670  0012               	moviw fsr0++
  2364  2671  001E               	movwi fsr1++
  2365  2672  0BFE               	decfsz	126,f
  2366  2673  2E70               	goto	initloop
  2367  2674  3400               	retlw	0
  2368                           
  2369                           	psect	cstackCOMMON
  2370  0071                     __pcstackCOMMON:	
  2371  0071                     ?_CC2500_WriteByte:	
  2372  0071                     ?_CC2500_WriteCommand:	
  2373                           ; 0 bytes @ 0x0
  2374                           
  2375  0071                     ?_CC2500_ReadStatus:	
  2376                           ; 0 bytes @ 0x0
  2377                           
  2378  0071                     ?_CC2500_ReadByte:	
  2379                           ; 0 bytes @ 0x0
  2380                           
  2381  0071                     ?_CC2500_PowerRST:	
  2382                           ; 0 bytes @ 0x0
  2383                           
  2384  0071                     ?_CC2500_InitSetREG:	
  2385                           ; 0 bytes @ 0x0
  2386                           
  2387  0071                     ?_CC2500_InitPATable:	
  2388                           ; 0 bytes @ 0x0
  2389                           
  2390  0071                     ?_CC2500_ClearTXFIFO:	
  2391                           ; 0 bytes @ 0x0
  2392                           
  2393  0071                     ?_CC2500_ClearRXFIFO:	
  2394                           ; 0 bytes @ 0x0
  2395                           
  2396  0071                     ?_CC2500_FrequencyCabr:	
  2397                           ; 0 bytes @ 0x0
  2398                           
  2399  0071                     ?_CC2500_SIDLEMode:	
  2400                           ; 0 bytes @ 0x0
  2401                           
  2402  0071                     ?_DlyOff_Initialization:	
  2403                           ; 0 bytes @ 0x0
  2404                           
  2405  0071                     ?_DlyOff_Main:	
  2406                           ; 0 bytes @ 0x0
  2407                           
  2408  0071                     ?_setTxData:	
  2409                           ; 0 bytes @ 0x0
  2410                           
  2411  0071                     ?_setDimmerLights_Initialization:	
  2412                           ; 0 bytes @ 0x0
  2413                           
  2414  0071                     ?_Dimmer_Initialization:	
  2415                           ; 0 bytes @ 0x0
  2416                           
  2417  0071                     ?_setLoad_GO:	
  2418                           ; 0 bytes @ 0x0
  2419                           
  2420  0071                     ?_setDimmerLights_Main:	
  2421                           ; 0 bytes @ 0x0
  2422                           
  2423  0071                     ?_setDimmerLights_ERROR:	
  2424                           ; 0 bytes @ 0x0
  2425                           
  2426  0071                     ?_setLoad_Count:	
  2427                           ; 0 bytes @ 0x0
  2428                           
  2429  0071                     ?_setLED_Initialization:	
  2430                           ; 0 bytes @ 0x0
  2431                           
  2432  0071                     ?_setLED_Main:	
  2433                           ; 0 bytes @ 0x0
  2434                           
  2435  0071                     ?_MainT_Initialization:	
  2436                           ; 0 bytes @ 0x0
  2437                           
  2438  0071                     ?_Mcu_Initialization:	
  2439                           ; 0 bytes @ 0x0
  2440                           
  2441  0071                     ?_Flash_Memory_Initialization:	
  2442                           ; 0 bytes @ 0x0
  2443                           
  2444  0071                     ?_Load_Initialization:	
  2445                           ; 0 bytes @ 0x0
  2446                           
  2447  0071                     ?_Switch_Initialization:	
  2448                           ; 0 bytes @ 0x0
  2449                           
  2450  0071                     ?_RF_Initialization:	
  2451                           ; 0 bytes @ 0x0
  2452                           
  2453  0071                     ?_getLoad_AD:	
  2454                           ; 0 bytes @ 0x0
  2455                           
  2456  0071                     ?_MainT:	
  2457                           ; 0 bytes @ 0x0
  2458                           
  2459  0071                     ?_Flash_Memory_Main:	
  2460                           ; 0 bytes @ 0x0
  2461                           
  2462  0071                     ?_Load_Main:	
  2463                           ; 0 bytes @ 0x0
  2464                           
  2465  0071                     ?_Switch_Main:	
  2466                           ; 0 bytes @ 0x0
  2467                           
  2468  0071                     ?_RF_Main:	
  2469                           ; 0 bytes @ 0x0
  2470                           
  2471  0071                     ?_setLoad_Enable:	
  2472                           ; 0 bytes @ 0x0
  2473                           
  2474  0071                     ?_setSw_Enable:	
  2475                           ; 0 bytes @ 0x0
  2476                           
  2477  0071                     ?_setLoad_AH_AL_Restore:	
  2478                           ; 0 bytes @ 0x0
  2479                           
  2480  0071                     ?_setLoad_Exceptions:	
  2481                           ; 0 bytes @ 0x0
  2482                           
  2483  0071                     ?_setRF_Initialization:	
  2484                           ; 0 bytes @ 0x0
  2485                           
  2486  0071                     ?_setRF_Main:	
  2487                           ; 0 bytes @ 0x0
  2488                           
  2489  0071                     ?_getRxData:	
  2490                           ; 0 bytes @ 0x0
  2491                           
  2492  0071                     ?_setINT_GO:	
  2493                           ; 0 bytes @ 0x0
  2494                           
  2495  0071                     ?_RF_RxDisable:	
  2496                           ; 0 bytes @ 0x0
  2497                           
  2498  0071                     ?_setLog_Code:	
  2499                           ; 0 bytes @ 0x0
  2500                           
  2501  0071                     ?_setControl_Lights_Table:	
  2502                           ; 0 bytes @ 0x0
  2503                           
  2504  0071                     ?_setRFSW_Control:	
  2505                           ; 0 bytes @ 0x0
  2506                           
  2507  0071                     ?_setRFSW_AdjControl:	
  2508                           ; 0 bytes @ 0x0
  2509                           
  2510  0071                     ?_setRF_DimmerValue:	
  2511                           ; 0 bytes @ 0x0
  2512                           
  2513  0071                     ?_setSw_Initialization:	
  2514                           ; 0 bytes @ 0x0
  2515                           
  2516  0071                     ?_setSw_Main:	
  2517                           ; 0 bytes @ 0x0
  2518                           
  2519  0071                     ?_Sw_DimmerOnFunc:	
  2520                           ; 0 bytes @ 0x0
  2521                           
  2522  0071                     ?_Sw_DimmerAdjFunc:	
  2523                           ; 0 bytes @ 0x0
  2524                           
  2525  0071                     ?_Sw_DimmerOffFunc:	
  2526                           ; 0 bytes @ 0x0
  2527                           
  2528  0071                     ?_IO_Set:	
  2529                           ; 0 bytes @ 0x0
  2530                           
  2531  0071                     ?_TMR0_Set:	
  2532                           ; 0 bytes @ 0x0
  2533                           
  2534  0071                     ?_ADC_Set:	
  2535                           ; 0 bytes @ 0x0
  2536                           
  2537  0071                     ?_INT_Set:	
  2538                           ; 0 bytes @ 0x0
  2539                           
  2540  0071                     ?_IOC_Set:	
  2541                           ; 0 bytes @ 0x0
  2542                           
  2543  0071                     ?_IOC_ISR:	
  2544                           ; 0 bytes @ 0x0
  2545                           
  2546  0071                     ??_IOC_ISR:	
  2547                           ; 0 bytes @ 0x0
  2548                           
  2549  0071                     ?_TMR0_ISR:	
  2550                           ; 0 bytes @ 0x0
  2551                           
  2552  0071                     ?_INT_ISR:	
  2553                           ; 0 bytes @ 0x0
  2554                           
  2555  0071                     ?_Flash_Memory_Write:	
  2556                           ; 0 bytes @ 0x0
  2557                           
  2558  0071                     ?_Flash_Memory_Modify:	
  2559                           ; 0 bytes @ 0x0
  2560                           
  2561  0071                     ?_Buzzer_Initialization:	
  2562                           ; 0 bytes @ 0x0
  2563                           
  2564  0071                     ?_Buzzer_Main:	
  2565                           ; 0 bytes @ 0x0
  2566                           
  2567  0071                     ?_CC2500_TxData:	
  2568                           ; 0 bytes @ 0x0
  2569                           
  2570  0071                     ?_CC2500_RxData:	
  2571                           ; 0 bytes @ 0x0
  2572                           
  2573  0071                     ?_CC2500_PowerOnInitial:	
  2574                           ; 0 bytes @ 0x0
  2575                           
  2576  0071                     ?_DelayOffPointSelect:	
  2577                           ; 0 bytes @ 0x0
  2578                           
  2579  0071                     ?_DelayOff_Initialization:	
  2580                           ; 0 bytes @ 0x0
  2581                           
  2582  0071                     ?_DelayOff_Main:	
  2583                           ; 0 bytes @ 0x0
  2584                           
  2585  0071                     ?_DimmerLightsPointSelect:	
  2586                           ; 0 bytes @ 0x0
  2587                           
  2588  0071                     ?_DimmerLights_Initialization:	
  2589                           ; 0 bytes @ 0x0
  2590                           
  2591  0071                     ?_DimmerLights_Close:	
  2592                           ; 0 bytes @ 0x0
  2593                           
  2594  0071                     ?_DimmerLights_Main:	
  2595                           ; 0 bytes @ 0x0
  2596                           
  2597  0071                     ?_DimmerLights_Exceptions:	
  2598                           ; 0 bytes @ 0x0
  2599                           
  2600  0071                     ?_setDimmerLights_AdjRF:	
  2601                           ; 0 bytes @ 0x0
  2602                           
  2603  0071                     ?_LedPointSelect:	
  2604                           ; 0 bytes @ 0x0
  2605                           
  2606  0071                     ?_LED_Initialization:	
  2607                           ; 0 bytes @ 0x0
  2608                           
  2609  0071                     ?_LED_Main:	
  2610                           ; 0 bytes @ 0x0
  2611                           
  2612  0071                     ?_main:	
  2613                           ; 0 bytes @ 0x0
  2614                           
  2615  0071                     ?_RfPointSelect:	
  2616                           ; 0 bytes @ 0x0
  2617                           
  2618  0071                     ?_RfSWPointSelect:	
  2619                           ; 0 bytes @ 0x0
  2620                           
  2621  0071                     ?_TouchPower:	
  2622                           ; 0 bytes @ 0x0
  2623                           
  2624  0071                     ?_SwPointSelect:	
  2625                           ; 0 bytes @ 0x0
  2626                           
  2627  0071                     ?_ISR:	
  2628                           ; 0 bytes @ 0x0
  2629                           
  2630  0071                     ?_setDimmerReClock:	
  2631                           ; 0 bytes @ 0x0
  2632                           
  2633  0071                     ??_setDimmerReClock:	
  2634                           ; 0 bytes @ 0x0
  2635                           
  2636  0071                     ?_Flash_Memory_Unlock:	
  2637                           ; 0 bytes @ 0x0
  2638                           
  2639  0071                     ?_Flash_Memory_Erasing:	
  2640                           ; 0 bytes @ 0x0
  2641                           
  2642  0071                     ?i1_setLoad_StatusOff:	
  2643                           ; 0 bytes @ 0x0
  2644                           
  2645  0071                     ?i1_RfPointSelect:	
  2646                           ; 0 bytes @ 0x0
  2647                           
  2648  0071                     ??i1_RfPointSelect:	
  2649                           ; 0 bytes @ 0x0
  2650                           
  2651  0071                     ?_DelayTimejudge:	
  2652                           ; 0 bytes @ 0x0
  2653                           
  2654  0071                     ?_getDimmerLights_StatusFlag:	
  2655                           ; 1 bytes @ 0x0
  2656                           
  2657  0071                     ?_getPercentValue:	
  2658                           ; 1 bytes @ 0x0
  2659                           
  2660  0071                     ?_Flash_Memory_Read:	
  2661                           ; 1 bytes @ 0x0
  2662                           
  2663  0071                     ?_setPercentValue:	
  2664                           ; 1 bytes @ 0x0
  2665                           
  2666  0071                     setRF_Initialization@rf:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669  0071                     i1setLoad_StatusOff@command:	
  2670                           ; 1 bytes @ 0x0
  2671                           
  2672                           
  2673                           ; 1 bytes @ 0x0
  2674  0071                     	ds	1
  2675  0072                     ??i1_setLoad_StatusOff:	
  2676  0072                     i1setLoad_StatusOff@lights:	
  2677                           ; 0 bytes @ 0x1
  2678                           
  2679  0072                     i1RfPointSelect@rf:	
  2680                           ; 1 bytes @ 0x1
  2681                           
  2682                           
  2683                           ; 1 bytes @ 0x1
  2684  0072                     	ds	1
  2685  0073                     ??_TMR0_ISR:	
  2686  0073                     ?_setRF_ReceiveGO:	
  2687                           ; 0 bytes @ 0x2
  2688                           
  2689  0073                     setRF_ReceiveGO@command:	
  2690                           ; 0 bytes @ 0x2
  2691                           
  2692                           
  2693                           ; 1 bytes @ 0x2
  2694  0073                     	ds	1
  2695  0074                     ??_setRF_ReceiveGO:	
  2696  0074                     setRF_ReceiveGO@rf:	
  2697                           ; 0 bytes @ 0x3
  2698                           
  2699                           
  2700                           ; 1 bytes @ 0x3
  2701  0074                     	ds	1
  2702  0075                     ??_INT_ISR:	
  2703                           
  2704                           ; 0 bytes @ 0x4
  2705  0075                     	ds	2
  2706  0077                     ??_ISR:	
  2707                           
  2708                           ; 0 bytes @ 0x6
  2709  0077                     	ds	1
  2710                           
  2711                           	psect	cstackBANK0
  2712  0020                     __pcstackBANK0:	
  2713  0020                     ??_CC2500_WriteByte:	
  2714  0020                     ??_CC2500_ReadByte:	
  2715                           ; 0 bytes @ 0x0
  2716                           
  2717  0020                     ?_DelayTime_1us:	
  2718                           ; 0 bytes @ 0x0
  2719                           
  2720  0020                     ??_DelayTimejudge:	
  2721                           ; 0 bytes @ 0x0
  2722                           
  2723  0020                     ??_Dimmer_Initialization:	
  2724                           ; 0 bytes @ 0x0
  2725                           
  2726  0020                     ??_getDimmerLights_StatusFlag:	
  2727                           ; 0 bytes @ 0x0
  2728                           
  2729  0020                     ??_setLoad_GO:	
  2730                           ; 0 bytes @ 0x0
  2731                           
  2732  0020                     ?_setLoad_StatusOff:	
  2733                           ; 0 bytes @ 0x0
  2734                           
  2735  0020                     ??_setLoad_Count:	
  2736                           ; 0 bytes @ 0x0
  2737                           
  2738  0020                     ?_setLoad_StatusOn:	
  2739                           ; 0 bytes @ 0x0
  2740                           
  2741  0020                     ??_MainT_Initialization:	
  2742                           ; 0 bytes @ 0x0
  2743                           
  2744  0020                     ??_setLoad_Enable:	
  2745                           ; 0 bytes @ 0x0
  2746                           
  2747  0020                     ??_setLoad_AH_AL_Restore:	
  2748                           ; 0 bytes @ 0x0
  2749                           
  2750  0020                     ??_setRF_Initialization:	
  2751                           ; 0 bytes @ 0x0
  2752                           
  2753  0020                     ??_setINT_GO:	
  2754                           ; 0 bytes @ 0x0
  2755                           
  2756  0020                     ??_IO_Set:	
  2757                           ; 0 bytes @ 0x0
  2758                           
  2759  0020                     ??_TMR0_Set:	
  2760                           ; 0 bytes @ 0x0
  2761                           
  2762  0020                     ??_ADC_Set:	
  2763                           ; 0 bytes @ 0x0
  2764                           
  2765  0020                     ??_INT_Set:	
  2766                           ; 0 bytes @ 0x0
  2767                           
  2768  0020                     ??_IOC_Set:	
  2769                           ; 0 bytes @ 0x0
  2770                           
  2771  0020                     ??_Flash_Memory_Read:	
  2772                           ; 0 bytes @ 0x0
  2773                           
  2774  0020                     ??_Flash_Memory_Write:	
  2775                           ; 0 bytes @ 0x0
  2776                           
  2777  0020                     ??_Buzzer_Initialization:	
  2778                           ; 0 bytes @ 0x0
  2779                           
  2780  0020                     ??_Buzzer_Main:	
  2781                           ; 0 bytes @ 0x0
  2782                           
  2783  0020                     ??_DelayOffPointSelect:	
  2784                           ; 0 bytes @ 0x0
  2785                           
  2786  0020                     ??_DimmerLightsPointSelect:	
  2787                           ; 0 bytes @ 0x0
  2788                           
  2789  0020                     ??_LedPointSelect:	
  2790                           ; 0 bytes @ 0x0
  2791                           
  2792  0020                     ??_RfPointSelect:	
  2793                           ; 0 bytes @ 0x0
  2794                           
  2795  0020                     ??_RfSWPointSelect:	
  2796                           ; 0 bytes @ 0x0
  2797                           
  2798  0020                     ??_TouchPower:	
  2799                           ; 0 bytes @ 0x0
  2800                           
  2801  0020                     ??_SwPointSelect:	
  2802                           ; 0 bytes @ 0x0
  2803                           
  2804  0020                     ??_Flash_Memory_Unlock:	
  2805                           ; 0 bytes @ 0x0
  2806                           
  2807  0020                     ??_Flash_Memory_Erasing:	
  2808                           ; 0 bytes @ 0x0
  2809                           
  2810  0020                     ?_getAD:	
  2811                           ; 0 bytes @ 0x0
  2812                           
  2813  0020                     ?___wmul:	
  2814                           ; 2 bytes @ 0x0
  2815                           
  2816  0020                     ?___lwdiv:	
  2817                           ; 2 bytes @ 0x0
  2818                           
  2819  0020                     ?___ftpack:	
  2820                           ; 2 bytes @ 0x0
  2821                           
  2822  0020                     setLoad_Enable@command:	
  2823                           ; 3 bytes @ 0x0
  2824                           
  2825  0020                     setLoad_GO@command:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828  0020                     setLoad_StatusOn@command:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831  0020                     setLoad_StatusOff@command:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834  0020                     setINT_GO@command:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837  0020                     getAD@adcon1:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840  0020                     DelayTime_1us@count:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843  0020                     ___wmul@multiplier:	
  2844                           ; 2 bytes @ 0x0
  2845                           
  2846  0020                     ___lwdiv@divisor:	
  2847                           ; 2 bytes @ 0x0
  2848                           
  2849  0020                     ___ftpack@arg:	
  2850                           ; 2 bytes @ 0x0
  2851                           
  2852                           
  2853                           ; 3 bytes @ 0x0
  2854  0020                     	ds	1
  2855  0021                     ??_setLoad_StatusOff:	
  2856  0021                     ??_setLoad_StatusOn:	
  2857                           ; 0 bytes @ 0x1
  2858                           
  2859  0021                     ??_Mcu_Initialization:	
  2860                           ; 0 bytes @ 0x1
  2861                           
  2862  0021                     ??_RF_Initialization:	
  2863                           ; 0 bytes @ 0x1
  2864                           
  2865  0021                     CC2500_WriteByte@loop_a:	
  2866                           ; 0 bytes @ 0x1
  2867                           
  2868  0021                     CC2500_ReadByte@loop_b:	
  2869                           ; 1 bytes @ 0x1
  2870                           
  2871  0021                     DelayOffPointSelect@sw:	
  2872                           ; 1 bytes @ 0x1
  2873                           
  2874  0021                     DelayTimejudge@i:	
  2875                           ; 1 bytes @ 0x1
  2876                           
  2877  0021                     DimmerLightsPointSelect@lights:	
  2878                           ; 1 bytes @ 0x1
  2879                           
  2880  0021                     getDimmerLights_StatusFlag@Status:	
  2881                           ; 1 bytes @ 0x1
  2882                           
  2883  0021                     LedPointSelect@led:	
  2884                           ; 1 bytes @ 0x1
  2885                           
  2886  0021                     setLoad_Count@command:	
  2887                           ; 1 bytes @ 0x1
  2888                           
  2889  0021                     setLoad_StatusOn@lights:	
  2890                           ; 1 bytes @ 0x1
  2891                           
  2892  0021                     setLoad_StatusOff@lights:	
  2893                           ; 1 bytes @ 0x1
  2894                           
  2895  0021                     setLoad_AH_AL_Restore@i:	
  2896                           ; 1 bytes @ 0x1
  2897                           
  2898  0021                     RfPointSelect@rf:	
  2899                           ; 1 bytes @ 0x1
  2900                           
  2901  0021                     RfSWPointSelect@sw:	
  2902                           ; 1 bytes @ 0x1
  2903                           
  2904  0021                     SwPointSelect@sw:	
  2905                           ; 1 bytes @ 0x1
  2906                           
  2907  0021                     Flash_Memory_Read@i:	
  2908                           ; 1 bytes @ 0x1
  2909                           
  2910  0021                     Flash_Memory_Write@i:	
  2911                           ; 1 bytes @ 0x1
  2912                           
  2913                           
  2914                           ; 1 bytes @ 0x1
  2915  0021                     	ds	1
  2916  0022                     ??_CC2500_WriteCommand:	
  2917  0022                     ??_CC2500_ReadStatus:	
  2918                           ; 0 bytes @ 0x2
  2919                           
  2920  0022                     ?_setRF_RxStatus:	
  2921                           ; 0 bytes @ 0x2
  2922                           
  2923  0022                     ??_DelayTime_1us:	
  2924                           ; 0 bytes @ 0x2
  2925                           
  2926  0022                     ?_CC2500_WriteREG:	
  2927                           ; 0 bytes @ 0x2
  2928                           
  2929  0022                     ??_DlyOff_Initialization:	
  2930                           ; 0 bytes @ 0x2
  2931                           
  2932  0022                     ?_setSw_Status:	
  2933                           ; 0 bytes @ 0x2
  2934                           
  2935  0022                     ?_setRFSW_Status:	
  2936                           ; 0 bytes @ 0x2
  2937                           
  2938  0022                     ?_setDimmerLights_Trigger:	
  2939                           ; 0 bytes @ 0x2
  2940                           
  2941  0022                     ?_setDimmerLights_Switch:	
  2942                           ; 0 bytes @ 0x2
  2943                           
  2944  0022                     ??_setTxData:	
  2945                           ; 0 bytes @ 0x2
  2946                           
  2947  0022                     ??_setDimmerLights_Initialization:	
  2948                           ; 0 bytes @ 0x2
  2949                           
  2950  0022                     ?_setDimmerLights_TriggerERROR:	
  2951                           ; 0 bytes @ 0x2
  2952                           
  2953  0022                     ?_setLED:	
  2954                           ; 0 bytes @ 0x2
  2955                           
  2956  0022                     ??_setLED_Main:	
  2957                           ; 0 bytes @ 0x2
  2958                           
  2959  0022                     ??_Load_Initialization:	
  2960                           ; 0 bytes @ 0x2
  2961                           
  2962  0022                     ??_setSw_Enable:	
  2963                           ; 0 bytes @ 0x2
  2964                           
  2965  0022                     ?_setRF_Enable:	
  2966                           ; 0 bytes @ 0x2
  2967                           
  2968  0022                     ?_setDimmerLights_AdjGo:	
  2969                           ; 0 bytes @ 0x2
  2970                           
  2971  0022                     ?_setDimmerLights_TriggerAdj:	
  2972                           ; 0 bytes @ 0x2
  2973                           
  2974  0022                     ?_setDimmerLights_Clear:	
  2975                           ; 0 bytes @ 0x2
  2976                           
  2977  0022                     ?_setRF_Learn:	
  2978                           ; 0 bytes @ 0x2
  2979                           
  2980  0022                     CC2500_WriteREG@value:	
  2981                           ; 0 bytes @ 0x2
  2982                           
  2983  0022                     DlyOff_Initialization@sw:	
  2984                           ; 1 bytes @ 0x2
  2985                           
  2986  0022                     DelayTimejudge@value:	
  2987                           ; 1 bytes @ 0x2
  2988                           
  2989  0022                     _getDimmerLights_StatusFlag$1692:	
  2990                           ; 1 bytes @ 0x2
  2991                           
  2992  0022                     setDimmerLights_TriggerERROR@command:	
  2993                           ; 1 bytes @ 0x2
  2994                           
  2995  0022                     setDimmerLights_Switch@command:	
  2996                           ; 1 bytes @ 0x2
  2997                           
  2998  0022                     setDimmerLights_AdjGo@command:	
  2999                           ; 1 bytes @ 0x2
  3000                           
  3001  0022                     setDimmerLights_Trigger@command:	
  3002                           ; 1 bytes @ 0x2
  3003                           
  3004  0022                     setDimmerLights_TriggerAdj@command:	
  3005                           ; 1 bytes @ 0x2
  3006                           
  3007  0022                     setDimmerLights_Clear@command:	
  3008                           ; 1 bytes @ 0x2
  3009                           
  3010  0022                     setLED@command:	
  3011                           ; 1 bytes @ 0x2
  3012                           
  3013  0022                     setRF_Learn@command:	
  3014                           ; 1 bytes @ 0x2
  3015                           
  3016  0022                     setRF_RxStatus@command:	
  3017                           ; 1 bytes @ 0x2
  3018                           
  3019  0022                     setRF_Enable@command:	
  3020                           ; 1 bytes @ 0x2
  3021                           
  3022  0022                     setRFSW_Status@command:	
  3023                           ; 1 bytes @ 0x2
  3024                           
  3025  0022                     setSw_Enable@command:	
  3026                           ; 1 bytes @ 0x2
  3027                           
  3028  0022                     setSw_Status@command:	
  3029                           ; 1 bytes @ 0x2
  3030                           
  3031  0022                     Flash_Memory_Read@address:	
  3032                           ; 1 bytes @ 0x2
  3033                           
  3034  0022                     DelayTime_1us@i:	
  3035                           ; 1 bytes @ 0x2
  3036                           
  3037  0022                     ___wmul@multiplicand:	
  3038                           ; 2 bytes @ 0x2
  3039                           
  3040  0022                     ___lwdiv@dividend:	
  3041                           ; 2 bytes @ 0x2
  3042                           
  3043                           
  3044                           ; 2 bytes @ 0x2
  3045  0022                     	ds	1
  3046  0023                     ??_setRF_RxStatus:	
  3047  0023                     ??_CC2500_WriteREG:	
  3048                           ; 0 bytes @ 0x3
  3049                           
  3050  0023                     ??_setSw_Status:	
  3051                           ; 0 bytes @ 0x3
  3052                           
  3053  0023                     ??_setRFSW_Status:	
  3054                           ; 0 bytes @ 0x3
  3055                           
  3056  0023                     ??_setDimmerLights_Trigger:	
  3057                           ; 0 bytes @ 0x3
  3058                           
  3059  0023                     ??_setDimmerLights_Switch:	
  3060                           ; 0 bytes @ 0x3
  3061                           
  3062  0023                     ??_setDimmerLights_TriggerERROR:	
  3063                           ; 0 bytes @ 0x3
  3064                           
  3065  0023                     ??_setLED:	
  3066                           ; 0 bytes @ 0x3
  3067                           
  3068  0023                     ??_setRF_Enable:	
  3069                           ; 0 bytes @ 0x3
  3070                           
  3071  0023                     ??_getAD:	
  3072                           ; 0 bytes @ 0x3
  3073                           
  3074  0023                     ??_DelayOff_Initialization:	
  3075                           ; 0 bytes @ 0x3
  3076                           
  3077  0023                     ?_setDelayOff_GO:	
  3078                           ; 0 bytes @ 0x3
  3079                           
  3080  0023                     ??_DimmerLights_Close:	
  3081                           ; 0 bytes @ 0x3
  3082                           
  3083  0023                     ??_setDimmerLights_AdjGo:	
  3084                           ; 0 bytes @ 0x3
  3085                           
  3086  0023                     ??_setDimmerLights_TriggerAdj:	
  3087                           ; 0 bytes @ 0x3
  3088                           
  3089  0023                     ??_setDimmerLights_Clear:	
  3090                           ; 0 bytes @ 0x3
  3091                           
  3092  0023                     ??_setRF_Learn:	
  3093                           ; 0 bytes @ 0x3
  3094                           
  3095  0023                     CC2500_WriteCommand@command:	
  3096                           ; 0 bytes @ 0x3
  3097                           
  3098  0023                     CC2500_ReadStatus@status_addr:	
  3099                           ; 1 bytes @ 0x3
  3100                           
  3101  0023                     setDelayOff_GO@command:	
  3102                           ; 1 bytes @ 0x3
  3103                           
  3104  0023                     setDimmerLights_Initialization@lights:	
  3105                           ; 1 bytes @ 0x3
  3106                           
  3107  0023                     setDimmerLights_TriggerERROR@lights:	
  3108                           ; 1 bytes @ 0x3
  3109                           
  3110  0023                     setDimmerLights_Switch@lights:	
  3111                           ; 1 bytes @ 0x3
  3112                           
  3113  0023                     setDimmerLights_AdjGo@lights:	
  3114                           ; 1 bytes @ 0x3
  3115                           
  3116  0023                     setDimmerLights_Trigger@lights:	
  3117                           ; 1 bytes @ 0x3
  3118                           
  3119  0023                     setDimmerLights_TriggerAdj@lights:	
  3120                           ; 1 bytes @ 0x3
  3121                           
  3122  0023                     setDimmerLights_Clear@lights:	
  3123                           ; 1 bytes @ 0x3
  3124                           
  3125  0023                     setLED@led:	
  3126                           ; 1 bytes @ 0x3
  3127                           
  3128  0023                     setRF_Learn@rf:	
  3129                           ; 1 bytes @ 0x3
  3130                           
  3131  0023                     setRF_RxStatus@rf:	
  3132                           ; 1 bytes @ 0x3
  3133                           
  3134  0023                     setTxData@rf:	
  3135                           ; 1 bytes @ 0x3
  3136                           
  3137  0023                     setRF_Enable@rf:	
  3138                           ; 1 bytes @ 0x3
  3139                           
  3140  0023                     setRFSW_Status@sw:	
  3141                           ; 1 bytes @ 0x3
  3142                           
  3143  0023                     setSw_Status@sw:	
  3144                           ; 1 bytes @ 0x3
  3145                           
  3146  0023                     getAD@adcon0:	
  3147                           ; 1 bytes @ 0x3
  3148                           
  3149  0023                     Flash_Memory_Read@ret:	
  3150                           ; 1 bytes @ 0x3
  3151                           
  3152  0023                     ___ftpack@exp:	
  3153                           ; 1 bytes @ 0x3
  3154                           
  3155                           
  3156                           ; 1 bytes @ 0x3
  3157  0023                     	ds	1
  3158  0024                     ??_CC2500_ClearTXFIFO:	
  3159  0024                     ??_CC2500_ClearRXFIFO:	
  3160                           ; 0 bytes @ 0x4
  3161                           
  3162  0024                     ??_CC2500_SIDLEMode:	
  3163                           ; 0 bytes @ 0x4
  3164                           
  3165  0024                     ?_setDimmerLights:	
  3166                           ; 0 bytes @ 0x4
  3167                           
  3168  0024                     ??_setDimmerLights_ERROR:	
  3169                           ; 0 bytes @ 0x4
  3170                           
  3171  0024                     ??_setLED_Initialization:	
  3172                           ; 0 bytes @ 0x4
  3173                           
  3174  0024                     ??_getLoad_AD:	
  3175                           ; 0 bytes @ 0x4
  3176                           
  3177  0024                     ??_RF_RxDisable:	
  3178                           ; 0 bytes @ 0x4
  3179                           
  3180  0024                     ??_setSw_Initialization:	
  3181                           ; 0 bytes @ 0x4
  3182                           
  3183  0024                     ??_Sw_DimmerAdjFunc:	
  3184                           ; 0 bytes @ 0x4
  3185                           
  3186  0024                     ??_Flash_Memory_Modify:	
  3187                           ; 0 bytes @ 0x4
  3188                           
  3189  0024                     ??_CC2500_TxData:	
  3190                           ; 0 bytes @ 0x4
  3191                           
  3192  0024                     ??_CC2500_RxData:	
  3193                           ; 0 bytes @ 0x4
  3194                           
  3195  0024                     ??_DimmerLights_Initialization:	
  3196                           ; 0 bytes @ 0x4
  3197                           
  3198  0024                     ??___wmul:	
  3199                           ; 0 bytes @ 0x4
  3200                           
  3201  0024                     ??___lwdiv:	
  3202                           ; 0 bytes @ 0x4
  3203                           
  3204  0024                     CC2500_WriteREG@w_addr:	
  3205                           ; 0 bytes @ 0x4
  3206                           
  3207  0024                     setDelayOff_GO@value:	
  3208                           ; 1 bytes @ 0x4
  3209                           
  3210  0024                     setDimmerLights@status:	
  3211                           ; 1 bytes @ 0x4
  3212                           
  3213  0024                     setLED_Initialization@led:	
  3214                           ; 1 bytes @ 0x4
  3215                           
  3216  0024                     setLED_Main@led:	
  3217                           ; 1 bytes @ 0x4
  3218                           
  3219  0024                     RF_RxDisable@rf:	
  3220                           ; 1 bytes @ 0x4
  3221                           
  3222  0024                     setSw_Initialization@sw:	
  3223                           ; 1 bytes @ 0x4
  3224                           
  3225  0024                     Sw_DimmerAdjFunc@sw:	
  3226                           ; 1 bytes @ 0x4
  3227                           
  3228  0024                     ___ftpack@sign:	
  3229                           ; 1 bytes @ 0x4
  3230                           
  3231  0024                     DelayTime_1us@j:	
  3232                           ; 1 bytes @ 0x4
  3233                           
  3234  0024                     ___wmul@product:	
  3235                           ; 2 bytes @ 0x4
  3236                           
  3237                           
  3238                           ; 2 bytes @ 0x4
  3239  0024                     	ds	1
  3240  0025                     ??_CC2500_InitSetREG:	
  3241  0025                     ??_CC2500_InitPATable:	
  3242                           ; 0 bytes @ 0x5
  3243                           
  3244  0025                     ??_setDimmerLights:	
  3245                           ; 0 bytes @ 0x5
  3246                           
  3247  0025                     ??_Switch_Initialization:	
  3248                           ; 0 bytes @ 0x5
  3249                           
  3250  0025                     ??___ftpack:	
  3251                           ; 0 bytes @ 0x5
  3252                           
  3253  0025                     ??_setDelayOff_GO:	
  3254                           ; 0 bytes @ 0x5
  3255                           
  3256  0025                     ??_LED_Initialization:	
  3257                           ; 0 bytes @ 0x5
  3258                           
  3259  0025                     ??_LED_Main:	
  3260                           ; 0 bytes @ 0x5
  3261                           
  3262  0025                     CC2500_TxData@loop_e:	
  3263                           ; 0 bytes @ 0x5
  3264                           
  3265  0025                     CC2500_RxData@loop_f:	
  3266                           ; 1 bytes @ 0x5
  3267                           
  3268  0025                     setDimmerLights_ERROR@lights:	
  3269                           ; 1 bytes @ 0x5
  3270                           
  3271  0025                     ___lwdiv@quotient:	
  3272                           ; 1 bytes @ 0x5
  3273                           
  3274                           
  3275                           ; 2 bytes @ 0x5
  3276  0025                     	ds	1
  3277  0026                     ??_CC2500_PowerRST:	
  3278  0026                     ??_CC2500_FrequencyCabr:	
  3279                           ; 0 bytes @ 0x6
  3280                           
  3281  0026                     ?_setBuz:	
  3282                           ; 0 bytes @ 0x6
  3283                           
  3284  0026                     CC2500_InitSetREG@temp1:	
  3285                           ; 0 bytes @ 0x6
  3286                           
  3287  0026                     CC2500_InitPATable@temp:	
  3288                           ; 1 bytes @ 0x6
  3289                           
  3290  0026                     setDimmerLights@lights:	
  3291                           ; 1 bytes @ 0x6
  3292                           
  3293  0026                     Flash_Memory_Modify@i:	
  3294                           ; 1 bytes @ 0x6
  3295                           
  3296  0026                     setBuz@time:	
  3297                           ; 1 bytes @ 0x6
  3298                           
  3299                           
  3300                           ; 2 bytes @ 0x6
  3301  0026                     	ds	1
  3302  0027                     ??_Flash_Memory_Main:	
  3303  0027                     CC2500_InitSetREG@temp2:	
  3304                           ; 0 bytes @ 0x7
  3305                           
  3306  0027                     CC2500_InitPATable@loop_d:	
  3307                           ; 1 bytes @ 0x7
  3308                           
  3309  0027                     setDelayOff_GO@sw:	
  3310                           ; 1 bytes @ 0x7
  3311                           
  3312  0027                     ___lwdiv@counter:	
  3313                           ; 1 bytes @ 0x7
  3314                           
  3315                           
  3316                           ; 1 bytes @ 0x7
  3317  0027                     	ds	1
  3318  0028                     ??_setBuz:	
  3319  0028                     ?___awtoft:	
  3320                           ; 0 bytes @ 0x8
  3321                           
  3322  0028                     CC2500_InitSetREG@loop_c:	
  3323                           ; 3 bytes @ 0x8
  3324                           
  3325  0028                     ___awtoft@c:	
  3326                           ; 1 bytes @ 0x8
  3327                           
  3328                           
  3329                           ; 2 bytes @ 0x8
  3330  0028                     	ds	1
  3331  0029                     ??_CC2500_PowerOnInitial:	
  3332  0029                     setBuz@count:	
  3333                           ; 0 bytes @ 0x9
  3334                           
  3335  0029                     getLoad_AD@channel:	
  3336                           ; 1 bytes @ 0x9
  3337                           
  3338                           
  3339                           ; 1 bytes @ 0x9
  3340  0029                     	ds	1
  3341  002A                     ??_MainT:	
  3342  002A                     ??_setLog_Code:	
  3343                           ; 0 bytes @ 0xA
  3344                           
  3345  002A                     ??_DimmerLights_Exceptions:	
  3346                           ; 0 bytes @ 0xA
  3347                           
  3348  002A                     DimmerLights_Exceptions@status:	
  3349                           ; 0 bytes @ 0xA
  3350                           
  3351  002A                     getLoad_AD@j:	
  3352                           ; 1 bytes @ 0xA
  3353                           
  3354                           
  3355                           ; 1 bytes @ 0xA
  3356  002A                     	ds	1
  3357  002B                     ??_setLoad_Exceptions:	
  3358  002B                     ??___awtoft:	
  3359                           ; 0 bytes @ 0xB
  3360                           
  3361  002B                     getLoad_AD@i:	
  3362                           ; 0 bytes @ 0xB
  3363                           
  3364  002B                     setLog_Code@rf:	
  3365                           ; 1 bytes @ 0xB
  3366                           
  3367                           
  3368                           ; 1 bytes @ 0xB
  3369  002B                     	ds	1
  3370  002C                     setLoad_Exceptions@command:	
  3371                           
  3372                           ; 1 bytes @ 0xC
  3373  002C                     	ds	1
  3374  002D                     ??_Load_Main:	
  3375  002D                     ___awtoft@sign:	
  3376                           ; 0 bytes @ 0xD
  3377                           
  3378                           
  3379                           ; 1 bytes @ 0xD
  3380  002D                     	ds	1
  3381  002E                     ?___ftdiv:	
  3382  002E                     ?___ftmul:	
  3383                           ; 3 bytes @ 0xE
  3384                           
  3385  002E                     ___ftdiv@f2:	
  3386                           ; 3 bytes @ 0xE
  3387                           
  3388  002E                     ___ftmul@f1:	
  3389                           ; 3 bytes @ 0xE
  3390                           
  3391                           
  3392                           ; 3 bytes @ 0xE
  3393  002E                     	ds	3
  3394  0031                     Load_Main@i:	
  3395  0031                     ___ftdiv@f1:	
  3396                           ; 1 bytes @ 0x11
  3397                           
  3398  0031                     ___ftmul@f2:	
  3399                           ; 3 bytes @ 0x11
  3400                           
  3401                           
  3402                           ; 3 bytes @ 0x11
  3403  0031                     	ds	3
  3404  0034                     ??___ftdiv:	
  3405  0034                     ??___ftmul:	
  3406                           ; 0 bytes @ 0x14
  3407                           
  3408                           
  3409                           ; 0 bytes @ 0x14
  3410  0034                     	ds	4
  3411  0038                     ___ftdiv@cntr:	
  3412  0038                     ___ftmul@exp:	
  3413                           ; 1 bytes @ 0x18
  3414                           
  3415                           
  3416                           ; 1 bytes @ 0x18
  3417  0038                     	ds	1
  3418  0039                     ___ftdiv@f3:	
  3419  0039                     ___ftmul@f3_as_product:	
  3420                           ; 3 bytes @ 0x19
  3421                           
  3422                           
  3423                           ; 3 bytes @ 0x19
  3424  0039                     	ds	3
  3425  003C                     ___ftdiv@exp:	
  3426  003C                     ___ftmul@cntr:	
  3427                           ; 1 bytes @ 0x1C
  3428                           
  3429                           
  3430                           ; 1 bytes @ 0x1C
  3431  003C                     	ds	1
  3432  003D                     ___ftdiv@sign:	
  3433  003D                     ___ftmul@sign:	
  3434                           ; 1 bytes @ 0x1D
  3435                           
  3436                           
  3437                           ; 1 bytes @ 0x1D
  3438  003D                     	ds	1
  3439  003E                     ?___ftadd:	
  3440  003E                     ___ftadd@f1:	
  3441                           ; 3 bytes @ 0x1E
  3442                           
  3443                           
  3444                           ; 3 bytes @ 0x1E
  3445  003E                     	ds	3
  3446  0041                     ___ftadd@f2:	
  3447                           
  3448                           ; 3 bytes @ 0x21
  3449  0041                     	ds	3
  3450  0044                     ??___ftadd:	
  3451                           
  3452                           ; 0 bytes @ 0x24
  3453  0044                     	ds	4
  3454  0048                     ___ftadd@sign:	
  3455                           
  3456                           ; 1 bytes @ 0x28
  3457  0048                     	ds	1
  3458  0049                     ___ftadd@exp2:	
  3459                           
  3460                           ; 1 bytes @ 0x29
  3461  0049                     	ds	1
  3462  004A                     ___ftadd@exp1:	
  3463                           
  3464                           ; 1 bytes @ 0x2A
  3465  004A                     	ds	1
  3466  004B                     ?___fttol:	
  3467  004B                     ___fttol@f1:	
  3468                           ; 4 bytes @ 0x2B
  3469                           
  3470                           
  3471                           ; 3 bytes @ 0x2B
  3472  004B                     	ds	4
  3473  004F                     ??___fttol:	
  3474                           
  3475                           ; 0 bytes @ 0x2F
  3476  004F                     	ds	4
  3477  0053                     ___fttol@sign1:	
  3478                           
  3479                           ; 1 bytes @ 0x33
  3480  0053                     	ds	1
  3481  0054                     ___fttol@lval:	
  3482                           
  3483                           ; 4 bytes @ 0x34
  3484  0054                     	ds	4
  3485  0058                     ___fttol@exp1:	
  3486                           
  3487                           ; 1 bytes @ 0x38
  3488  0058                     	ds	1
  3489  0059                     ??_getPercentValue:	
  3490  0059                     ??_setPercentValue:	
  3491                           ; 0 bytes @ 0x39
  3492                           
  3493  0059                     setPercentValue@value:	
  3494                           ; 0 bytes @ 0x39
  3495                           
  3496                           
  3497                           ; 1 bytes @ 0x39
  3498  0059                     	ds	1
  3499  005A                     setPercentValue@i:	
  3500                           
  3501                           ; 3 bytes @ 0x3A
  3502  005A                     	ds	1
  3503  005B                     getPercentValue@value:	
  3504                           
  3505                           ; 1 bytes @ 0x3B
  3506  005B                     	ds	1
  3507  005C                     getPercentValue@i:	
  3508                           
  3509                           ; 3 bytes @ 0x3C
  3510  005C                     	ds	1
  3511  005D                     ?_setRF_DimmerLights:	
  3512  005D                     ??_Flash_Memory_Initialization:	
  3513                           ; 0 bytes @ 0x3D
  3514                           
  3515  005D                     setRF_DimmerLights@on:	
  3516                           ; 0 bytes @ 0x3D
  3517                           
  3518                           
  3519                           ; 1 bytes @ 0x3D
  3520  005D                     	ds	1
  3521  005E                     ??_setRF_DimmerLights:	
  3522  005E                     Flash_Memory_Initialization@i:	
  3523                           ; 0 bytes @ 0x3E
  3524                           
  3525                           
  3526                           ; 1 bytes @ 0x3E
  3527  005E                     	ds	1
  3528  005F                     ??_setDimmerLights_AdjRF:	
  3529                           
  3530                           ; 0 bytes @ 0x3F
  3531  005F                     	ds	1
  3532  0060                     setDimmerLights_AdjRF@lights:	
  3533  0060                     setRF_DimmerLights@status:	
  3534                           ; 1 bytes @ 0x40
  3535                           
  3536                           
  3537                           ; 1 bytes @ 0x40
  3538  0060                     	ds	1
  3539  0061                     ??_setRF_DimmerValue:	
  3540  0061                     setRF_DimmerLights@lights:	
  3541                           ; 0 bytes @ 0x41
  3542                           
  3543                           
  3544                           ; 1 bytes @ 0x41
  3545  0061                     	ds	1
  3546  0062                     ??_DlyOff_Main:	
  3547  0062                     ?_setDimmerLights_Adj:	
  3548                           ; 0 bytes @ 0x42
  3549                           
  3550  0062                     ??_setRFSW_Control:	
  3551                           ; 0 bytes @ 0x42
  3552                           
  3553  0062                     ??_Sw_DimmerOnFunc:	
  3554                           ; 0 bytes @ 0x42
  3555                           
  3556  0062                     ??_Sw_DimmerOffFunc:	
  3557                           ; 0 bytes @ 0x42
  3558                           
  3559  0062                     setDimmerLights_Adj@status:	
  3560                           ; 0 bytes @ 0x42
  3561                           
  3562  0062                     Sw_DimmerOnFunc@Idle:	
  3563                           ; 1 bytes @ 0x42
  3564                           
  3565                           
  3566                           ; 1 bytes @ 0x42
  3567  0062                     	ds	1
  3568  0063                     ??_setDimmerLights_Adj:	
  3569  0063                     setRFSW_Control@sw:	
  3570                           ; 0 bytes @ 0x43
  3571                           
  3572  0063                     setRF_DimmerValue@lights:	
  3573                           ; 1 bytes @ 0x43
  3574                           
  3575  0063                     Sw_DimmerOnFunc@sw:	
  3576                           ; 1 bytes @ 0x43
  3577                           
  3578                           
  3579                           ; 1 bytes @ 0x43
  3580  0063                     	ds	1
  3581  0064                     ??_setRFSW_AdjControl:	
  3582  0064                     DlyOff_Main@sw:	
  3583                           ; 0 bytes @ 0x44
  3584                           
  3585  0064                     setDimmerLights_Adj@lights:	
  3586                           ; 1 bytes @ 0x44
  3587                           
  3588  0064                     Sw_DimmerOffFunc@sw:	
  3589                           ; 1 bytes @ 0x44
  3590                           
  3591                           
  3592                           ; 1 bytes @ 0x44
  3593  0064                     	ds	1
  3594  0065                     ??_setDimmerLights_Main:	
  3595  0065                     ??_setSw_Main:	
  3596                           ; 0 bytes @ 0x45
  3597                           
  3598  0065                     ??_DelayOff_Main:	
  3599                           ; 0 bytes @ 0x45
  3600                           
  3601  0065                     setDimmerLights_Main@clear:	
  3602                           ; 0 bytes @ 0x45
  3603                           
  3604                           
  3605                           ; 1 bytes @ 0x45
  3606  0065                     	ds	1
  3607  0066                     setDimmerLights_Main@lights:	
  3608  0066                     setRFSW_AdjControl@sw:	
  3609                           ; 1 bytes @ 0x46
  3610                           
  3611                           
  3612                           ; 1 bytes @ 0x46
  3613  0066                     	ds	1
  3614  0067                     ??_setControl_Lights_Table:	
  3615  0067                     ??_DimmerLights_Main:	
  3616                           ; 0 bytes @ 0x47
  3617                           
  3618  0067                     setControl_Lights_Table@rf:	
  3619                           ; 0 bytes @ 0x47
  3620                           
  3621  0067                     _setSw_Main$3898:	
  3622                           ; 1 bytes @ 0x47
  3623                           
  3624                           
  3625                           ; 1 bytes @ 0x47
  3626  0067                     	ds	1
  3627  0068                     ??_getRxData:	
  3628  0068                     getRxData@rf:	
  3629                           ; 0 bytes @ 0x48
  3630                           
  3631  0068                     _setSw_Main$3899:	
  3632                           ; 1 bytes @ 0x48
  3633                           
  3634                           
  3635                           ; 1 bytes @ 0x48
  3636  0068                     	ds	1
  3637  0069                     ??_setRF_Main:	
  3638  0069                     setSw_Main@sw:	
  3639                           ; 0 bytes @ 0x49
  3640                           
  3641                           
  3642                           ; 1 bytes @ 0x49
  3643  0069                     	ds	1
  3644  006A                     ??_Switch_Main:	
  3645  006A                     setRF_Main@rf:	
  3646                           ; 0 bytes @ 0x4A
  3647                           
  3648                           
  3649                           ; 1 bytes @ 0x4A
  3650  006A                     	ds	1
  3651  006B                     _setRF_Main$3572:	
  3652                           
  3653                           ; 1 bytes @ 0x4B
  3654  006B                     	ds	1
  3655  006C                     ??_RF_Main:	
  3656  006C                     ??_main:	
  3657                           ; 0 bytes @ 0x4C
  3658                           
  3659                           
  3660                           	psect	maintext
  3661  10A9                     __pmaintext:	
  3662                           ; 0 bytes @ 0x4C
  3663 ;;
  3664 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3665 ;;
  3666 ;; *************** function _main *****************
  3667 ;; Defined at:
  3668 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;		None               void
  3675 ;; Registers used:
  3676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 17F/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels required when called:   14
  3688 ;; This function calls:
  3689 ;;		_Buzzer_Initialization
  3690 ;;		_Buzzer_Main
  3691 ;;		_CC2500_PowerOnInitial
  3692 ;;		_DelayOff_Initialization
  3693 ;;		_DelayOff_Main
  3694 ;;		_DimmerLights_Initialization
  3695 ;;		_DimmerLights_Main
  3696 ;;		_Flash_Memory_Initialization
  3697 ;;		_Flash_Memory_Main
  3698 ;;		_LED_Initialization
  3699 ;;		_LED_Main
  3700 ;;		_Load_Initialization
  3701 ;;		_Load_Main
  3702 ;;		_MainT
  3703 ;;		_MainT_Initialization
  3704 ;;		_Mcu_Initialization
  3705 ;;		_RF_Initialization
  3706 ;;		_RF_Main
  3707 ;;		_Switch_Initialization
  3708 ;;		_Switch_Main
  3709 ;;		_getLoad_AD
  3710 ;; This function is called by:
  3711 ;;		Startup code after reset
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           
  3716                           ;psect for function _main
  3717  10A9                     _main:	
  3718                           
  3719                           ;main.c: 9: MainT_Initialization();
  3720                           
  3721                           ;incstack = 0
  3722                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3723  10A9  3198  2099  3190   	fcall	_MainT_Initialization
  3724                           
  3725                           ;main.c: 10: Mcu_Initialization();
  3726  10AC  3199  2183  3190   	fcall	_Mcu_Initialization
  3727                           
  3728                           ;main.c: 11: Flash_Memory_Initialization();
  3729  10AF  318C  24C8  3190   	fcall	_Flash_Memory_Initialization
  3730                           
  3731                           ;main.c: 12: LED_Initialization();
  3732  10B2  31A7  272A  3190   	fcall	_LED_Initialization
  3733                           
  3734                           ;main.c: 13: Buzzer_Initialization();
  3735  10B5  31A6  26C3  3190   	fcall	_Buzzer_Initialization
  3736                           
  3737                           ;main.c: 15: ;;
  3738                           ;main.c: 16: ;;
  3739                           ;main.c: 17: Load_Initialization();
  3740  10B8  31A7  2742  3190   	fcall	_Load_Initialization
  3741                           
  3742                           ;main.c: 18: ;;
  3743                           ;main.c: 19: DelayOff_Initialization();
  3744  10BB  31A6  2690  3190   	fcall	_DelayOff_Initialization
  3745                           
  3746                           ;main.c: 21: DimmerLights_Initialization();
  3747  10BE  3198  20EA  3190   	fcall	_DimmerLights_Initialization
  3748                           
  3749                           ;main.c: 22: ;;
  3750                           ;main.c: 23: ;;
  3751                           ;main.c: 24: ;;
  3752                           ;main.c: 26: Switch_Initialization();
  3753  10C1  31A7  2769  3190   	fcall	_Switch_Initialization
  3754                           
  3755                           ;main.c: 27: RF_Initialization();
  3756  10C4  31A6  265C  3190   	fcall	_RF_Initialization
  3757                           
  3758                           ;main.c: 28: CC2500_PowerOnInitial();
  3759  10C7  3198  20C0  3190   	fcall	_CC2500_PowerOnInitial
  3760  10CA                     l9359:	
  3761                           ;main.c: 30: while(1)
  3762                           
  3763                           
  3764                           ;main.c: 31: {
  3765                           ;main.c: 32: if(TMain->PowerON)
  3766  10CA  087D               	movf	_TMain,w
  3767  10CB  0086               	movwf	6
  3768  10CC  3001               	movlw	1	; select bank2/3
  3769  10CD  0087               	movwf	7
  3770  10CE  1C01               	btfss	1,0
  3771  10CF  28D7               	goto	l9363
  3772                           
  3773                           ;main.c: 33: {
  3774                           ;main.c: 35: ;;
  3775                           ;main.c: 39: getLoad_AD(0x05);
  3776  10D0  3005               	movlw	5
  3777  10D1  3188  20CB  3190   	fcall	_getLoad_AD
  3778                           
  3779                           ;main.c: 43: ;;
  3780                           ;main.c: 47: ;;
  3781                           ;main.c: 59: Buzzer_Main();
  3782  10D4  3189  21FA  3190   	fcall	_Buzzer_Main
  3783  10D7                     l9363:	
  3784                           
  3785                           ;main.c: 61: }
  3786                           ;main.c: 63: if(TMain->T0_Timerout)
  3787  10D7  087D               	movf	_TMain,w
  3788  10D8  0086               	movwf	6
  3789  10D9  3001               	movlw	1	; select bank2/3
  3790  10DA  0087               	movwf	7
  3791  10DB  1C81               	btfss	1,1
  3792  10DC  28CA               	goto	l9359
  3793                           
  3794                           ;main.c: 64: {
  3795                           ;main.c: 65: TMain->T0_Timerout = 0;
  3796  10DD  087D               	movf	_TMain,w
  3797  10DE  0086               	movwf	6
  3798  10DF  3001               	movlw	1	; select bank2/3
  3799  10E0  0087               	movwf	7
  3800  10E1  1081               	bcf	1,1
  3801                           
  3802                           ;main.c: 66: MainT();
  3803  10E2  3194  24EF  3190   	fcall	_MainT
  3804                           
  3805                           ;main.c: 67: if(TMain->PowerON)
  3806  10E5  087D               	movf	_TMain,w
  3807  10E6  0086               	movwf	6
  3808  10E7  3001               	movlw	1	; select bank2/3
  3809  10E8  0087               	movwf	7
  3810  10E9  1C01               	btfss	1,0
  3811  10EA  28CA               	goto	l9359
  3812                           
  3813                           ;main.c: 68: {
  3814                           ;main.c: 69: Flash_Memory_Main();
  3815  10EB  319E  2665  3190   	fcall	_Flash_Memory_Main
  3816                           
  3817                           ;main.c: 71: LED_Main();
  3818  10EE  31A7  2736  3190   	fcall	_LED_Main
  3819                           
  3820                           ;main.c: 73: ;;
  3821                           ;main.c: 74: ;;
  3822                           ;main.c: 75: Load_Main();
  3823  10F1  3180  204F  3190   	fcall	_Load_Main
  3824                           
  3825                           ;main.c: 76: ;;
  3826                           ;main.c: 78: ;;
  3827                           ;main.c: 79: DimmerLights_Main();
  3828  10F4  31A6  26EF  3190   	fcall	_DimmerLights_Main
  3829                           
  3830                           ;main.c: 80: Switch_Main();
  3831  10F7  31A6  26A8  3190   	fcall	_Switch_Main
  3832                           
  3833                           ;main.c: 81: ;;
  3834                           ;main.c: 82: ;;
  3835                           ;main.c: 84: RF_Main();
  3836  10FA  31A6  2660  3190   	fcall	_RF_Main
  3837                           
  3838                           ;main.c: 85: DelayOff_Main();
  3839  10FD  31A6  2698  3190   	fcall	_DelayOff_Main
  3840  1100  28CA               	goto	l9359
  3841  1101                     __end_of_main:	
  3842                           
  3843                           	psect	text1
  3844  08CB                     __ptext1:	
  3845 ;; *************** function _getLoad_AD *****************
  3846 ;; Defined at:
  3847 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  channel         1    wreg     unsigned char 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  channel         1    9[BANK0 ] unsigned char 
  3852 ;;  i               1   11[BANK0 ] unsigned char 
  3853 ;;  j               1   10[BANK0 ] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;		None               void
  3856 ;; Registers used:
  3857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;Total ram usage:        8 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    5
  3870 ;; This function calls:
  3871 ;;		_getAD
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _getLoad_AD
  3879  08CB                     _getLoad_AD:	
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _getLoad_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3883                           ;getLoad_AD@channel stored from wreg
  3884  08CB  0020               	movlb	0	; select bank0
  3885  08CC  00A9               	movwf	getLoad_AD@channel
  3886                           
  3887                           ;OverLoad_B1.c: 17: char i=0,j=0;
  3888  08CD  01AB               	clrf	getLoad_AD@i
  3889  08CE  01AA               	clrf	getLoad_AD@j
  3890                           
  3891                           ;OverLoad_B1.c: 19: if(Load->ADtoGO)
  3892  08CF  086E               	movf	_Load,w
  3893  08D0  0086               	movwf	6
  3894  08D1  3002               	movlw	2	; select bank4/5
  3895  08D2  0087               	movwf	7
  3896  08D3  1E01               	btfss	1,4
  3897  08D4  0008               	return
  3898                           
  3899                           ;OverLoad_B1.c: 20: {
  3900                           ;OverLoad_B1.c: 21: Load->ADRES=getAD(channel,0xc0);
  3901  08D5  30C0               	movlw	192
  3902  08D6  00A4               	movwf	??_getLoad_AD
  3903  08D7  0824               	movf	??_getLoad_AD,w
  3904  08D8  00A0               	movwf	getAD@adcon1
  3905  08D9  0829               	movf	getLoad_AD@channel,w
  3906  08DA  3199  2156  3188   	fcall	_getAD
  3907  08DD  0020               	movlb	0	; select bank0
  3908  08DE  086E               	movf	_Load,w
  3909  08DF  3E32               	addlw	50
  3910  08E0  0086               	movwf	6
  3911  08E1  3002               	movlw	2	; select bank4/5
  3912  08E2  0087               	movwf	7
  3913  08E3  0820               	movf	?_getAD,w
  3914  08E4  3FC0               	movwi [0]fsr1
  3915  08E5  0821               	movf	?_getAD+1,w
  3916  08E6  3FC1               	movwi [1]fsr1
  3917                           
  3918                           ;OverLoad_B1.c: 22: for(i=0 ; i<5 ;i++)
  3919  08E7  01AB               	clrf	getLoad_AD@i
  3920  08E8  3005               	movlw	5
  3921  08E9  022B               	subwf	getLoad_AD@i,w
  3922  08EA  1803               	btfsc	3,0
  3923  08EB  2925               	goto	l9117
  3924  08EC                     l9107:	
  3925                           
  3926                           ;OverLoad_B1.c: 23: {
  3927                           ;OverLoad_B1.c: 24: if(Load->AH[i] < Load->ADRES)
  3928  08EC  086E               	movf	_Load,w
  3929  08ED  3E32               	addlw	50
  3930  08EE  0086               	movwf	6
  3931  08EF  3002               	movlw	2	; select bank4/5
  3932  08F0  0087               	movwf	7
  3933  08F1  3F40               	moviw [0]fsr1
  3934  08F2  00A4               	movwf	??_getLoad_AD
  3935  08F3  3F41               	moviw [1]fsr1
  3936  08F4  00A5               	movwf	??_getLoad_AD+1
  3937  08F5  352B               	lslf	getLoad_AD@i,w
  3938  08F6  3E08               	addlw	8
  3939  08F7  076E               	addwf	_Load,w
  3940  08F8  00A6               	movwf	??_getLoad_AD+2
  3941  08F9  0826               	movf	??_getLoad_AD+2,w
  3942  08FA  0086               	movwf	6
  3943  08FB  3002               	movlw	2	; select bank4/5
  3944  08FC  0087               	movwf	7
  3945  08FD  3F40               	moviw [0]fsr1
  3946  08FE  00A7               	movwf	??_getLoad_AD+3
  3947  08FF  3F41               	moviw [1]fsr1
  3948  0900  00A8               	movwf	??_getLoad_AD+4
  3949  0901  0825               	movf	??_getLoad_AD+1,w
  3950  0902  0228               	subwf	??_getLoad_AD+4,w
  3951  0903  1D03               	skipz
  3952  0904  2907               	goto	u8945
  3953  0905  0824               	movf	??_getLoad_AD,w
  3954  0906  0227               	subwf	??_getLoad_AD+3,w
  3955  0907                     u8945:	
  3956  0907  1803               	skipnc
  3957  0908  291D               	goto	l9113
  3958                           
  3959                           ;OverLoad_B1.c: 25: {
  3960                           ;OverLoad_B1.c: 26: Load->AH[i]=Load->ADRES;
  3961  0909  086E               	movf	_Load,w
  3962  090A  3E32               	addlw	50
  3963  090B  0086               	movwf	6
  3964  090C  3002               	movlw	2	; select bank4/5
  3965  090D  0087               	movwf	7
  3966  090E  352B               	lslf	getLoad_AD@i,w
  3967  090F  3E08               	addlw	8
  3968  0910  076E               	addwf	_Load,w
  3969  0911  00A4               	movwf	??_getLoad_AD
  3970  0912  0824               	movf	??_getLoad_AD,w
  3971  0913  0084               	movwf	4
  3972  0914  3002               	movlw	2	; select bank4/5
  3973  0915  0085               	movwf	5
  3974  0916  3F40               	moviw [0]fsr1
  3975  0917  3F80               	movwi [0]fsr0
  3976  0918  3F41               	moviw [1]fsr1
  3977  0919  3F81               	movwi [1]fsr0
  3978                           
  3979                           ;OverLoad_B1.c: 27: j=1;
  3980  091A  01AA               	clrf	getLoad_AD@j
  3981  091B  0AAA               	incf	getLoad_AD@j,f
  3982                           
  3983                           ;OverLoad_B1.c: 28: break;
  3984  091C  2925               	goto	l9117
  3985  091D                     l9113:	
  3986  091D  3001               	movlw	1
  3987  091E  00A4               	movwf	??_getLoad_AD
  3988  091F  0824               	movf	??_getLoad_AD,w
  3989  0920  07AB               	addwf	getLoad_AD@i,f
  3990  0921  3005               	movlw	5
  3991  0922  022B               	subwf	getLoad_AD@i,w
  3992  0923  1C03               	skipc
  3993  0924  28EC               	goto	l9107
  3994  0925                     l9117:	
  3995                           
  3996                           ;OverLoad_B1.c: 29: }
  3997                           ;OverLoad_B1.c: 30: }
  3998                           ;OverLoad_B1.c: 31: if(!j)
  3999  0925  08AA               	movf	getLoad_AD@j,f
  4000  0926  1D03               	skipz
  4001  0927  0008               	return
  4002                           
  4003                           ;OverLoad_B1.c: 32: {
  4004                           ;OverLoad_B1.c: 33: for(i=0 ; i<5 ;i++)
  4005  0928  01AB               	clrf	getLoad_AD@i
  4006  0929                     L1:	
  4007  0929  3005               	movlw	5
  4008  092A  022B               	subwf	getLoad_AD@i,w
  4009  092B  1803               	btfsc	3,0
  4010  092C  0008               	return
  4011                           
  4012                           ;OverLoad_B1.c: 34: {
  4013                           ;OverLoad_B1.c: 35: if(Load->AL[i] > Load->ADRES)
  4014  092D  352B               	lslf	getLoad_AD@i,w
  4015  092E  3E1A               	addlw	26
  4016  092F  076E               	addwf	_Load,w
  4017  0930  00A4               	movwf	??_getLoad_AD
  4018  0931  0824               	movf	??_getLoad_AD,w
  4019  0932  0086               	movwf	6
  4020  0933  3002               	movlw	2	; select bank4/5
  4021  0934  0087               	movwf	7
  4022  0935  3F40               	moviw [0]fsr1
  4023  0936  00A5               	movwf	??_getLoad_AD+1
  4024  0937  3F41               	moviw [1]fsr1
  4025  0938  00A6               	movwf	??_getLoad_AD+2
  4026  0939  086E               	movf	_Load,w
  4027  093A  3E32               	addlw	50
  4028  093B  0086               	movwf	6
  4029  093C  3002               	movlw	2	; select bank4/5
  4030  093D  0087               	movwf	7
  4031  093E  3F40               	moviw [0]fsr1
  4032  093F  00A7               	movwf	??_getLoad_AD+3
  4033  0940  3F41               	moviw [1]fsr1
  4034  0941  00A8               	movwf	??_getLoad_AD+4
  4035  0942  0826               	movf	??_getLoad_AD+2,w
  4036  0943  0228               	subwf	??_getLoad_AD+4,w
  4037  0944  1D03               	skipz
  4038  0945  2948               	goto	u8985
  4039  0946  0825               	movf	??_getLoad_AD+1,w
  4040  0947  0227               	subwf	??_getLoad_AD+3,w
  4041  0948                     u8985:	
  4042  0948  1803               	skipnc
  4043  0949  295C               	goto	l9129
  4044                           
  4045                           ;OverLoad_B1.c: 36: {
  4046                           ;OverLoad_B1.c: 37: Load->AL[i]=Load->ADRES;
  4047  094A  086E               	movf	_Load,w
  4048  094B  3E32               	addlw	50
  4049  094C  0086               	movwf	6
  4050  094D  3002               	movlw	2	; select bank4/5
  4051  094E  0087               	movwf	7
  4052  094F  352B               	lslf	getLoad_AD@i,w
  4053  0950  3E1A               	addlw	26
  4054  0951  076E               	addwf	_Load,w
  4055  0952  00A4               	movwf	??_getLoad_AD
  4056  0953  0824               	movf	??_getLoad_AD,w
  4057  0954  0084               	movwf	4
  4058  0955  3002               	movlw	2	; select bank4/5
  4059  0956  0085               	movwf	5
  4060  0957  3F40               	moviw [0]fsr1
  4061  0958  3F80               	movwi [0]fsr0
  4062  0959  3F41               	moviw [1]fsr1
  4063  095A  3F81               	movwi [1]fsr0
  4064                           
  4065                           ;OverLoad_B1.c: 38: break;
  4066  095B  0008               	return
  4067  095C                     l9129:	
  4068  095C  3001               	movlw	1
  4069  095D  00A4               	movwf	??_getLoad_AD
  4070  095E  0824               	movf	??_getLoad_AD,w
  4071  095F  07AB               	addwf	getLoad_AD@i,f
  4072  0960  2929               	goto	L1
  4073  0961                     __end_of_getLoad_AD:	
  4074                           
  4075                           	psect	text2
  4076  1956                     __ptext2:	
  4077 ;; *************** function _getAD *****************
  4078 ;; Defined at:
  4079 ;;		line 379 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  adcon0          1    wreg     unsigned char 
  4082 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2    0[BANK0 ] int 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4094 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;Total ram usage:        4 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    4
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_getLoad_AD
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _getAD
  4110  1956                     _getAD:	
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4114                           ;getAD@adcon0 stored from wreg
  4115  1956  0020               	movlb	0	; select bank0
  4116  1957  00A3               	movwf	getAD@adcon0
  4117                           
  4118                           ;MCU_B1.c: 381: ADCON0=adcon0;
  4119  1958  0823               	movf	getAD@adcon0,w
  4120  1959  0021               	movlb	1	; select bank1
  4121  195A  009D               	movwf	29	;volatile
  4122                           
  4123                           ;MCU_B1.c: 382: ADCON1=adcon1;
  4124  195B  0020               	movlb	0	; select bank0
  4125  195C  0820               	movf	getAD@adcon1,w
  4126  195D  0021               	movlb	1	; select bank1
  4127  195E  009E               	movwf	30	;volatile
  4128                           
  4129                           ;MCU_B1.c: 383: GO_nDONE=1;
  4130  195F  149D               	bsf	29,1	;volatile
  4131  1960                     l2912:	
  4132                           ;MCU_B1.c: 384: while(GO_nDONE);
  4133                           
  4134  1960  189D               	btfsc	29,1	;volatile
  4135  1961  2960               	goto	l2912
  4136                           
  4137                           ;MCU_B1.c: 385: return ((ADRESH*256)+ADRESL);
  4138  1962  081C               	movf	28,w	;volatile
  4139  1963  0020               	movlb	0	; select bank0
  4140  1964  01A1               	clrf	?_getAD+1
  4141  1965  07A1               	addwf	?_getAD+1,f
  4142  1966  0021               	movlb	1	; select bank1
  4143  1967  081B               	movf	27,w	;volatile
  4144  1968  0020               	movlb	0	; select bank0
  4145  1969  01A0               	clrf	?_getAD
  4146  196A  07A0               	addwf	?_getAD,f
  4147  196B  0008               	return
  4148  196C                     __end_of_getAD:	
  4149                           
  4150                           	psect	text3
  4151  26A8                     __ptext3:	
  4152 ;; *************** function _Switch_Main *****************
  4153 ;; Defined at:
  4154 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;		None               void
  4161 ;; Registers used:
  4162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:   10
  4175 ;; This function calls:
  4176 ;;		_setSw_Main
  4177 ;; This function is called by:
  4178 ;;		_main
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           
  4183                           ;psect for function _Switch_Main
  4184  26A8                     _Switch_Main:	
  4185                           
  4186                           ;Switch_B1.c: 65: setSw_Main(1);
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4190  26A8  3001               	movlw	1
  4191  26A9  318E  26A6  31A6   	fcall	_setSw_Main
  4192                           
  4193                           ;Switch_B1.c: 69: setSw_Main(2);
  4194  26AC  3002               	movlw	2
  4195  26AD  318E  26A6         	fcall	_setSw_Main
  4196  26AF  0008               	return
  4197  26B0                     __end_of_Switch_Main:	
  4198                           
  4199                           	psect	text4
  4200  0EA6                     __ptext4:	
  4201 ;; *************** function _setSw_Main *****************
  4202 ;; Defined at:
  4203 ;;		line 112 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  sw              1    wreg     unsigned char 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  sw              1   73[BANK0 ] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;		None               void
  4210 ;; Registers used:
  4211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4220 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4221 ;;Total ram usage:        5 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    9
  4224 ;; This function calls:
  4225 ;;		_SwPointSelect
  4226 ;;		_Sw_DimmerAdjFunc
  4227 ;;		_Sw_DimmerOffFunc
  4228 ;;		_Sw_DimmerOnFunc
  4229 ;;		_setBuz
  4230 ;;		_setRF_Learn
  4231 ;; This function is called by:
  4232 ;;		_Switch_Main
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function _setSw_Main
  4238  0EA6                     _setSw_Main:	
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4242                           ;setSw_Main@sw stored from wreg
  4243  0EA6  0020               	movlb	0	; select bank0
  4244  0EA7  00E9               	movwf	setSw_Main@sw
  4245                           
  4246                           ;Switch_B1.c: 114: if(Sw->Enable)
  4247  0EA8  087B               	movf	_Sw,w
  4248  0EA9  0086               	movwf	6
  4249  0EAA  3001               	movlw	1	; select bank2/3
  4250  0EAB  0087               	movwf	7
  4251  0EAC  1C01               	btfss	1,0
  4252  0EAD  0008               	return
  4253                           
  4254                           ;Switch_B1.c: 115: {
  4255                           ;Switch_B1.c: 116: SwPointSelect(sw);
  4256  0EAE  0869               	movf	setSw_Main@sw,w
  4257  0EAF  3198  20AC  318E   	fcall	_SwPointSelect
  4258                           
  4259                           ;Switch_B1.c: 133: if(sw == 1)
  4260  0EB2  0020               	movlb	0	; select bank0
  4261  0EB3  0869               	movf	setSw_Main@sw,w
  4262  0EB4  3A01               	xorlw	1
  4263  0EB5  1D03               	skipz
  4264  0EB6  2EC3               	goto	l8863
  4265                           
  4266                           ;Switch_B1.c: 134: {
  4267                           ;Switch_B1.c: 135: Sw->Touch=(RA6 || RA4)?1:0;
  4268  0EB7  01E7               	clrf	_setSw_Main$3898
  4269  0EB8  0AE7               	incf	_setSw_Main$3898,f
  4270  0EB9  1F0C               	btfss	12,6	;volatile
  4271  0EBA  1A0C               	btfsc	12,4	;volatile
  4272  0EBB  2EBD               	goto	l8861
  4273  0EBC  01E7               	clrf	_setSw_Main$3898
  4274  0EBD                     l8861:	
  4275  0EBD  087B               	movf	_Sw,w
  4276  0EBE  0086               	movwf	6
  4277  0EBF  3001               	movlw	1	; select bank2/3
  4278  0EC0  0087               	movwf	7
  4279  0EC1  0867               	movf	_setSw_Main$3898,w
  4280  0EC2  2ED2               	goto	L2
  4281  0EC3                     l8863:	
  4282                           ;Switch_B1.c: 136: }
  4283                           
  4284                           
  4285                           ;Switch_B1.c: 137: else if(sw == 2)
  4286  0EC3  0869               	movf	setSw_Main@sw,w
  4287  0EC4  3A02               	xorlw	2
  4288  0EC5  1D03               	skipz
  4289  0EC6  2ED5               	goto	l8873
  4290                           
  4291                           ;Switch_B1.c: 138: {
  4292                           ;Switch_B1.c: 139: Sw->Touch=(RA0 || RB1)?1:0;
  4293  0EC7  01E8               	clrf	_setSw_Main$3899
  4294  0EC8  0AE8               	incf	_setSw_Main$3899,f
  4295  0EC9  1C0C               	btfss	12,0	;volatile
  4296  0ECA  188D               	btfsc	13,1	;volatile
  4297  0ECB  2ECD               	goto	l8871
  4298  0ECC  01E8               	clrf	_setSw_Main$3899
  4299  0ECD                     l8871:	
  4300  0ECD  087B               	movf	_Sw,w
  4301  0ECE  0086               	movwf	6
  4302  0ECF  3001               	movlw	1	; select bank2/3
  4303  0ED0  0087               	movwf	7
  4304  0ED1  0868               	movf	_setSw_Main$3899,w
  4305  0ED2                     L2:	
  4306  0ED2  1081               	bcf	1,1
  4307  0ED3  1D03               	skipz
  4308  0ED4  1481               	bsf	1,1
  4309  0ED5                     l8873:	
  4310                           
  4311                           ;Switch_B1.c: 140: }
  4312                           ;Switch_B1.c: 148: if(Sw->Touch)
  4313  0ED5  087B               	movf	_Sw,w
  4314  0ED6  0086               	movwf	6
  4315  0ED7  3001               	movlw	1	; select bank2/3
  4316  0ED8  0087               	movwf	7
  4317  0ED9  1C81               	btfss	1,1
  4318  0EDA  2FAB               	goto	l8921
  4319                           
  4320                           ;Switch_B1.c: 149: {
  4321                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  4322  0EDB  087B               	movf	_Sw,w
  4323  0EDC  0086               	movwf	6
  4324  0EDD  3001               	movlw	1	; select bank2/3
  4325  0EDE  0087               	movwf	7
  4326  0EDF  1901               	btfsc	1,2
  4327  0EE0  2F02               	goto	l8887
  4328                           
  4329                           ;Switch_B1.c: 151: {
  4330                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  4331  0EE1  3001               	movlw	1
  4332  0EE2  00E5               	movwf	??_setSw_Main
  4333  0EE3  087B               	movf	_Sw,w
  4334  0EE4  3E02               	addlw	2
  4335  0EE5  0086               	movwf	6
  4336  0EE6  3001               	movlw	1	; select bank2/3
  4337  0EE7  0087               	movwf	7
  4338  0EE8  0865               	movf	??_setSw_Main,w
  4339  0EE9  0781               	addwf	1,f
  4340                           
  4341                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  4342  0EEA  087B               	movf	_Sw,w
  4343  0EEB  3E02               	addlw	2
  4344  0EEC  0086               	movwf	6
  4345  0EED  3001               	movlw	1	; select bank2/3
  4346  0EEE  0087               	movwf	7
  4347  0EEF  3005               	movlw	5
  4348  0EF0  0201               	subwf	1,w
  4349  0EF1  1C03               	skipc
  4350  0EF2  0008               	return
  4351                           
  4352                           ;Switch_B1.c: 154: {
  4353                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  4354  0EF3  087B               	movf	_Sw,w
  4355  0EF4  3E02               	addlw	2
  4356  0EF5  0086               	movwf	6
  4357  0EF6  3001               	movlw	1	; select bank2/3
  4358  0EF7  0087               	movwf	7
  4359  0EF8  0181               	clrf	1
  4360                           
  4361                           ;Switch_B1.c: 156: Sw->Debounce=1;
  4362  0EF9  087B               	movf	_Sw,w
  4363  0EFA  0086               	movwf	6
  4364  0EFB  3001               	movlw	1	; select bank2/3
  4365  0EFC  0087               	movwf	7
  4366  0EFD  1501               	bsf	1,2
  4367                           
  4368                           ;Switch_B1.c: 159: Sw_DimmerOnFunc(sw);
  4369  0EFE  0869               	movf	setSw_Main@sw,w
  4370  0EFF  3194  240F         	fcall	_Sw_DimmerOnFunc
  4371                           
  4372                           ;Switch_B1.c: 162: }
  4373                           ;Switch_B1.c: 163: }
  4374  0F01  0008               	return
  4375  0F02                     l8887:	
  4376                           
  4377                           ;Switch_B1.c: 164: else
  4378                           ;Switch_B1.c: 165: {
  4379                           ;Switch_B1.c: 166: if(!Sw->Hold1)
  4380  0F02  087B               	movf	_Sw,w
  4381  0F03  0086               	movwf	6
  4382  0F04  3001               	movlw	1	; select bank2/3
  4383  0F05  0087               	movwf	7
  4384  0F06  1981               	btfsc	1,3
  4385  0F07  2F34               	goto	l8897
  4386                           
  4387                           ;Switch_B1.c: 167: {
  4388                           ;Switch_B1.c: 168: Sw->Hold1Time++;
  4389  0F08  087B               	movf	_Sw,w
  4390  0F09  3E03               	addlw	3
  4391  0F0A  0086               	movwf	6
  4392  0F0B  3001               	movlw	1	; select bank2/3
  4393  0F0C  0087               	movwf	7
  4394  0F0D  3001               	movlw	1
  4395  0F0E  0781               	addwf	1,f
  4396  0F0F  3141               	addfsr 1,1
  4397  0F10  1803               	skipnc
  4398  0F11  0A81               	incf	1,f
  4399                           
  4400                           ;Switch_B1.c: 169: if(Sw->Hold1Time >= 150)
  4401  0F12  087B               	movf	_Sw,w
  4402  0F13  3E03               	addlw	3
  4403  0F14  0086               	movwf	6
  4404  0F15  3001               	movlw	1	; select bank2/3
  4405  0F16  0087               	movwf	7
  4406  0F17  3F40               	moviw [0]fsr1
  4407  0F18  0020               	movlb	0	; select bank0
  4408  0F19  00E5               	movwf	??_setSw_Main
  4409  0F1A  3F41               	moviw [1]fsr1
  4410  0F1B  00E6               	movwf	??_setSw_Main+1
  4411  0F1C  3000               	movlw	0
  4412  0F1D  0266               	subwf	??_setSw_Main+1,w
  4413  0F1E  3096               	movlw	150
  4414  0F1F  1903               	skipnz
  4415  0F20  0265               	subwf	??_setSw_Main,w
  4416  0F21  1C03               	skipc
  4417  0F22  0008               	return
  4418                           
  4419                           ;Switch_B1.c: 170: {
  4420                           ;Switch_B1.c: 171: Sw->Hold1Time=0;
  4421  0F23  087B               	movf	_Sw,w
  4422  0F24  3E03               	addlw	3
  4423  0F25  0086               	movwf	6
  4424  0F26  3001               	movlw	1	; select bank2/3
  4425  0F27  0087               	movwf	7
  4426  0F28  3000               	movlw	0
  4427  0F29  3FC0               	movwi [0]fsr1
  4428  0F2A  3FC1               	movwi [1]fsr1
  4429                           
  4430                           ;Switch_B1.c: 172: Sw->Hold1=1;
  4431  0F2B  087B               	movf	_Sw,w
  4432  0F2C  0086               	movwf	6
  4433  0F2D  3001               	movlw	1	; select bank2/3
  4434  0F2E  0087               	movwf	7
  4435  0F2F  1581               	bsf	1,3
  4436                           
  4437                           ;Switch_B1.c: 175: Sw_DimmerAdjFunc(sw);
  4438  0F30  0869               	movf	setSw_Main@sw,w
  4439  0F31  319B  2396         	fcall	_Sw_DimmerAdjFunc
  4440                           
  4441                           ;Switch_B1.c: 178: }
  4442                           ;Switch_B1.c: 179: }
  4443  0F33  0008               	return
  4444  0F34                     l8897:	
  4445                           
  4446                           ;Switch_B1.c: 180: else
  4447                           ;Switch_B1.c: 181: {
  4448                           ;Switch_B1.c: 182: if(!Sw->Hold2)
  4449  0F34  087B               	movf	_Sw,w
  4450  0F35  0086               	movwf	6
  4451  0F36  3001               	movlw	1	; select bank2/3
  4452  0F37  0087               	movwf	7
  4453  0F38  1A01               	btfsc	1,4
  4454  0F39  2F78               	goto	l8911
  4455                           
  4456                           ;Switch_B1.c: 183: {
  4457                           ;Switch_B1.c: 184: Sw->Hold2Time++;
  4458  0F3A  087B               	movf	_Sw,w
  4459  0F3B  3E05               	addlw	5
  4460  0F3C  0086               	movwf	6
  4461  0F3D  3001               	movlw	1	; select bank2/3
  4462  0F3E  0087               	movwf	7
  4463  0F3F  3001               	movlw	1
  4464  0F40  0781               	addwf	1,f
  4465  0F41  3141               	addfsr 1,1
  4466  0F42  1803               	skipnc
  4467  0F43  0A81               	incf	1,f
  4468                           
  4469                           ;Switch_B1.c: 185: if(Sw->Hold2Time >= 150)
  4470  0F44  087B               	movf	_Sw,w
  4471  0F45  3E05               	addlw	5
  4472  0F46  0086               	movwf	6
  4473  0F47  3001               	movlw	1	; select bank2/3
  4474  0F48  0087               	movwf	7
  4475  0F49  3F40               	moviw [0]fsr1
  4476  0F4A  0020               	movlb	0	; select bank0
  4477  0F4B  00E5               	movwf	??_setSw_Main
  4478  0F4C  3F41               	moviw [1]fsr1
  4479  0F4D  00E6               	movwf	??_setSw_Main+1
  4480  0F4E  3000               	movlw	0
  4481  0F4F  0266               	subwf	??_setSw_Main+1,w
  4482  0F50  3096               	movlw	150
  4483  0F51  1903               	skipnz
  4484  0F52  0265               	subwf	??_setSw_Main,w
  4485  0F53  1C03               	skipc
  4486  0F54  0008               	return
  4487                           
  4488                           ;Switch_B1.c: 186: {
  4489                           ;Switch_B1.c: 187: Sw->Hold2Time=0;
  4490  0F55  087B               	movf	_Sw,w
  4491  0F56  3E05               	addlw	5
  4492  0F57  0086               	movwf	6
  4493  0F58  3001               	movlw	1	; select bank2/3
  4494  0F59  0087               	movwf	7
  4495  0F5A  3000               	movlw	0
  4496  0F5B  3FC0               	movwi [0]fsr1
  4497  0F5C  3FC1               	movwi [1]fsr1
  4498                           
  4499                           ;Switch_B1.c: 188: Sw->Hold2=1;
  4500  0F5D  087B               	movf	_Sw,w
  4501  0F5E  0086               	movwf	6
  4502  0F5F  3001               	movlw	1	; select bank2/3
  4503  0F60  0087               	movwf	7
  4504  0F61  1601               	bsf	1,4
  4505                           
  4506                           ;Switch_B1.c: 192: setRF_Learn(1,1);
  4507  0F62  01A2               	clrf	setRF_Learn@command
  4508  0F63  0AA2               	incf	setRF_Learn@command,f
  4509  0F64  3001               	movlw	1
  4510  0F65  31A7  2784  318E   	fcall	_setRF_Learn
  4511                           
  4512                           ;Switch_B1.c: 194: if(TMain->First)
  4513  0F68  087D               	movf	_TMain,w
  4514  0F69  3E03               	addlw	3
  4515  0F6A  0086               	movwf	6
  4516  0F6B  3001               	movlw	1	; select bank2/3
  4517  0F6C  0087               	movwf	7
  4518  0F6D  1C81               	btfss	1,1
  4519  0F6E  0008               	return
  4520                           
  4521                           ;Switch_B1.c: 195: {
  4522                           ;Switch_B1.c: 196: setBuz(2,100);
  4523  0F6F  3064               	movlw	100
  4524  0F70  0020               	movlb	0	; select bank0
  4525  0F71  00A6               	movwf	setBuz@time
  4526  0F72  3000               	movlw	0
  4527  0F73  00A7               	movwf	setBuz@time+1
  4528  0F74  3002               	movlw	2
  4529  0F75  3195  2565         	fcall	_setBuz
  4530                           
  4531                           ;Switch_B1.c: 197: }
  4532                           ;Switch_B1.c: 199: }
  4533                           ;Switch_B1.c: 200: }
  4534  0F77  0008               	return
  4535  0F78                     l8911:	
  4536                           
  4537                           ;Switch_B1.c: 201: else
  4538                           ;Switch_B1.c: 202: {
  4539                           ;Switch_B1.c: 203: if(!Sw->Hold3)
  4540  0F78  087B               	movf	_Sw,w
  4541  0F79  0086               	movwf	6
  4542  0F7A  3001               	movlw	1	; select bank2/3
  4543  0F7B  0087               	movwf	7
  4544  0F7C  1A81               	btfsc	1,5
  4545  0F7D  0008               	return
  4546                           
  4547                           ;Switch_B1.c: 204: {
  4548                           ;Switch_B1.c: 205: Sw->Hold3Time++;
  4549  0F7E  087B               	movf	_Sw,w
  4550  0F7F  3E07               	addlw	7
  4551  0F80  0086               	movwf	6
  4552  0F81  3001               	movlw	1	; select bank2/3
  4553  0F82  0087               	movwf	7
  4554  0F83  3001               	movlw	1
  4555  0F84  0781               	addwf	1,f
  4556  0F85  3141               	addfsr 1,1
  4557  0F86  1803               	skipnc
  4558  0F87  0A81               	incf	1,f
  4559                           
  4560                           ;Switch_B1.c: 206: if(Sw->Hold3Time >= 300)
  4561  0F88  087B               	movf	_Sw,w
  4562  0F89  3E07               	addlw	7
  4563  0F8A  0086               	movwf	6
  4564  0F8B  3001               	movlw	1	; select bank2/3
  4565  0F8C  0087               	movwf	7
  4566  0F8D  3F40               	moviw [0]fsr1
  4567  0F8E  0020               	movlb	0	; select bank0
  4568  0F8F  00E5               	movwf	??_setSw_Main
  4569  0F90  3F41               	moviw [1]fsr1
  4570  0F91  00E6               	movwf	??_setSw_Main+1
  4571  0F92  3001               	movlw	1
  4572  0F93  0266               	subwf	??_setSw_Main+1,w
  4573  0F94  302C               	movlw	44
  4574  0F95  1903               	skipnz
  4575  0F96  0265               	subwf	??_setSw_Main,w
  4576  0F97  1C03               	skipc
  4577  0F98  0008               	return
  4578                           
  4579                           ;Switch_B1.c: 207: {
  4580                           ;Switch_B1.c: 208: Sw->Hold3Time=0;
  4581  0F99  087B               	movf	_Sw,w
  4582  0F9A  3E07               	addlw	7
  4583  0F9B  0086               	movwf	6
  4584  0F9C  3001               	movlw	1	; select bank2/3
  4585  0F9D  0087               	movwf	7
  4586  0F9E  3000               	movlw	0
  4587  0F9F  3FC0               	movwi [0]fsr1
  4588  0FA0  3FC1               	movwi [1]fsr1
  4589                           
  4590                           ;Switch_B1.c: 209: Sw->Hold3=1;
  4591  0FA1  087B               	movf	_Sw,w
  4592  0FA2  0086               	movwf	6
  4593  0FA3  3001               	movlw	1	; select bank2/3
  4594  0FA4  0087               	movwf	7
  4595  0FA5  1681               	bsf	1,5
  4596                           
  4597                           ;Switch_B1.c: 212: setRF_Learn(1,0);
  4598  0FA6  01A2               	clrf	setRF_Learn@command
  4599  0FA7  3001               	movlw	1
  4600  0FA8  31A7  2784         	fcall	_setRF_Learn
  4601                           
  4602                           ;Switch_B1.c: 215: }
  4603                           ;Switch_B1.c: 216: }
  4604                           ;Switch_B1.c: 217: }
  4605                           ;Switch_B1.c: 218: }
  4606                           ;Switch_B1.c: 219: }
  4607                           ;Switch_B1.c: 220: }
  4608  0FAA  0008               	return
  4609  0FAB                     l8921:	
  4610                           
  4611                           ;Switch_B1.c: 221: else
  4612                           ;Switch_B1.c: 222: {
  4613                           ;Switch_B1.c: 223: if(Sw->Debounce)
  4614  0FAB  087B               	movf	_Sw,w
  4615  0FAC  0086               	movwf	6
  4616  0FAD  3001               	movlw	1	; select bank2/3
  4617  0FAE  0087               	movwf	7
  4618  0FAF  1D01               	btfss	1,2
  4619  0FB0  0008               	return
  4620                           
  4621                           ;Switch_B1.c: 224: {
  4622                           ;Switch_B1.c: 225: Sw->DebounceTime++;
  4623  0FB1  3001               	movlw	1
  4624  0FB2  0020               	movlb	0	; select bank0
  4625  0FB3  00E5               	movwf	??_setSw_Main
  4626  0FB4  087B               	movf	_Sw,w
  4627  0FB5  3E02               	addlw	2
  4628  0FB6  0086               	movwf	6
  4629  0FB7  3001               	movlw	1	; select bank2/3
  4630  0FB8  0087               	movwf	7
  4631  0FB9  0865               	movf	??_setSw_Main,w
  4632  0FBA  0781               	addwf	1,f
  4633                           
  4634                           ;Switch_B1.c: 226: if(Sw->DebounceTime >= 5)
  4635  0FBB  087B               	movf	_Sw,w
  4636  0FBC  3E02               	addlw	2
  4637  0FBD  0086               	movwf	6
  4638  0FBE  3001               	movlw	1	; select bank2/3
  4639  0FBF  0087               	movwf	7
  4640  0FC0  3005               	movlw	5
  4641  0FC1  0201               	subwf	1,w
  4642  0FC2  1C03               	skipc
  4643  0FC3  0008               	return
  4644                           
  4645                           ;Switch_B1.c: 227: {
  4646                           ;Switch_B1.c: 228: Sw->DebounceTime=0;
  4647  0FC4  087B               	movf	_Sw,w
  4648  0FC5  3E02               	addlw	2
  4649  0FC6  0086               	movwf	6
  4650  0FC7  3001               	movlw	1	; select bank2/3
  4651  0FC8  0087               	movwf	7
  4652  0FC9  0181               	clrf	1
  4653                           
  4654                           ;Switch_B1.c: 229: Sw->Debounce=0;
  4655  0FCA  087B               	movf	_Sw,w
  4656  0FCB  0086               	movwf	6
  4657  0FCC  3001               	movlw	1	; select bank2/3
  4658  0FCD  0087               	movwf	7
  4659  0FCE  1101               	bcf	1,2
  4660                           
  4661                           ;Switch_B1.c: 230: Sw->Hold1Time=0;
  4662  0FCF  087B               	movf	_Sw,w
  4663  0FD0  3E03               	addlw	3
  4664  0FD1  0086               	movwf	6
  4665  0FD2  3001               	movlw	1	; select bank2/3
  4666  0FD3  0087               	movwf	7
  4667  0FD4  3000               	movlw	0
  4668  0FD5  3FC0               	movwi [0]fsr1
  4669  0FD6  3FC1               	movwi [1]fsr1
  4670                           
  4671                           ;Switch_B1.c: 231: Sw->Hold1=0;
  4672  0FD7  087B               	movf	_Sw,w
  4673  0FD8  0086               	movwf	6
  4674  0FD9  3001               	movlw	1	; select bank2/3
  4675  0FDA  0087               	movwf	7
  4676  0FDB  1181               	bcf	1,3
  4677                           
  4678                           ;Switch_B1.c: 232: Sw->Hold2Time=0;
  4679  0FDC  087B               	movf	_Sw,w
  4680  0FDD  3E05               	addlw	5
  4681  0FDE  0086               	movwf	6
  4682  0FDF  3001               	movlw	1	; select bank2/3
  4683  0FE0  0087               	movwf	7
  4684  0FE1  3000               	movlw	0
  4685  0FE2  3FC0               	movwi [0]fsr1
  4686  0FE3  3FC1               	movwi [1]fsr1
  4687                           
  4688                           ;Switch_B1.c: 233: Sw->Hold2=0;
  4689  0FE4  087B               	movf	_Sw,w
  4690  0FE5  0086               	movwf	6
  4691  0FE6  3001               	movlw	1	; select bank2/3
  4692  0FE7  0087               	movwf	7
  4693  0FE8  1201               	bcf	1,4
  4694                           
  4695                           ;Switch_B1.c: 234: Sw->Hold3Time=0;
  4696  0FE9  087B               	movf	_Sw,w
  4697  0FEA  3E07               	addlw	7
  4698  0FEB  0086               	movwf	6
  4699  0FEC  3001               	movlw	1	; select bank2/3
  4700  0FED  0087               	movwf	7
  4701  0FEE  3000               	movlw	0
  4702  0FEF  3FC0               	movwi [0]fsr1
  4703  0FF0  3FC1               	movwi [1]fsr1
  4704                           
  4705                           ;Switch_B1.c: 235: Sw->Hold3=0;
  4706  0FF1  087B               	movf	_Sw,w
  4707  0FF2  0086               	movwf	6
  4708  0FF3  3001               	movlw	1	; select bank2/3
  4709  0FF4  0087               	movwf	7
  4710  0FF5  1281               	bcf	1,5
  4711                           
  4712                           ;Switch_B1.c: 238: Sw_DimmerOffFunc(sw);
  4713  0FF6  0869               	movf	setSw_Main@sw,w
  4714  0FF7  3194  247E  318E   	fcall	_Sw_DimmerOffFunc
  4715                           
  4716                           ;Switch_B1.c: 243: setRF_Learn(1,0);
  4717  0FFA  0020               	movlb	0	; select bank0
  4718  0FFB  01A2               	clrf	setRF_Learn@command
  4719  0FFC  3001               	movlw	1
  4720  0FFD  31A7  2784         	fcall	_setRF_Learn
  4721  0FFF  0008               	return
  4722  1000                     __end_of_setSw_Main:	
  4723                           
  4724                           	psect	text5
  4725  2784                     __ptext5:	
  4726 ;; *************** function _setRF_Learn *****************
  4727 ;; Defined at:
  4728 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  rf              1    wreg     unsigned char 
  4731 ;;  command         1    2[BANK0 ] unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  rf              1    3[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;		None               void
  4736 ;; Registers used:
  4737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4743 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;Total ram usage:        2 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    5
  4750 ;; This function calls:
  4751 ;;		_RfPointSelect
  4752 ;; This function is called by:
  4753 ;;		_setSw_Main
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _setRF_Learn
  4759  2784                     _setRF_Learn:	
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4763                           ;setRF_Learn@rf stored from wreg
  4764  2784  0020               	movlb	0	; select bank0
  4765  2785  00A3               	movwf	setRF_Learn@rf
  4766                           
  4767                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  4768  2786  0823               	movf	setRF_Learn@rf,w
  4769  2787  31A6  26D9         	fcall	_RfPointSelect
  4770                           
  4771                           ;RF_Control_B1.c: 34: RF->Learn=command;
  4772  2789  087A               	movf	_RF,w
  4773  278A  0086               	movwf	6
  4774  278B  0187               	clrf	7
  4775  278C  0020               	movlb	0	; select bank0
  4776  278D  0822               	movf	setRF_Learn@command,w
  4777  278E  1301               	bcf	1,6
  4778  278F  1D03               	skipz
  4779  2790  1701               	bsf	1,6
  4780  2791  0008               	return
  4781  2792                     __end_of_setRF_Learn:	
  4782                           
  4783                           	psect	text6
  4784  140F                     __ptext6:	
  4785 ;; *************** function _Sw_DimmerOnFunc *****************
  4786 ;; Defined at:
  4787 ;;		line 251 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  sw              1    wreg     unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  sw              1   67[BANK0 ] unsigned char 
  4792 ;;  Idle            1   66[BANK0 ] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;		None               void
  4795 ;; Registers used:
  4796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;Total ram usage:        2 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    8
  4809 ;; This function calls:
  4810 ;;		_setBuz
  4811 ;;		_setDimmerLights_Switch
  4812 ;;		_setDimmerLights_Trigger
  4813 ;;		_setRFSW_Status
  4814 ;;		_setRF_DimmerLights
  4815 ;;		_setTxData
  4816 ;; This function is called by:
  4817 ;;		_setSw_Main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _Sw_DimmerOnFunc
  4823  140F                     _Sw_DimmerOnFunc:	
  4824                           
  4825                           ;incstack = 0
  4826                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4827                           ;Sw_DimmerOnFunc@sw stored from wreg
  4828  140F  0020               	movlb	0	; select bank0
  4829  1410  00E3               	movwf	Sw_DimmerOnFunc@sw
  4830                           
  4831                           ;Switch_B1.c: 253: char Idle=1;
  4832  1411  01E2               	clrf	Sw_DimmerOnFunc@Idle
  4833  1412  0AE2               	incf	Sw_DimmerOnFunc@Idle,f
  4834                           
  4835                           ;Switch_B1.c: 270: if(sw == 1)
  4836  1413  0863               	movf	Sw_DimmerOnFunc@sw,w
  4837  1414  3A01               	xorlw	1
  4838  1415  1D03               	skipz
  4839  1416  2C19               	goto	l8539
  4840                           
  4841                           ;Switch_B1.c: 271: {
  4842                           ;Switch_B1.c: 272: Idle=(DimmerLights22->AdjGo)?0:1;
  4843  1417  0879               	movf	_DimmerLights22,w
  4844  1418  2C1E               	goto	L3
  4845  1419                     l8539:	
  4846                           ;Switch_B1.c: 273: }
  4847                           
  4848                           
  4849                           ;Switch_B1.c: 274: else if(sw == 2)
  4850  1419  0863               	movf	Sw_DimmerOnFunc@sw,w
  4851  141A  3A02               	xorlw	2
  4852  141B  1D03               	skipz
  4853  141C  2C29               	goto	l8543
  4854                           
  4855                           ;Switch_B1.c: 275: {
  4856                           ;Switch_B1.c: 276: Idle=(DimmerLights11->AdjGo)?0:1;
  4857  141D  086D               	movf	_DimmerLights11,w
  4858  141E                     L3:	
  4859  141E  3E09               	addlw	9
  4860  141F  0086               	movwf	6
  4861  1420  3001               	movlw	1	; select bank2/3
  4862  1421  0087               	movwf	7
  4863  1422  1003               	clrc
  4864  1423  1D01               	btfss	1,2
  4865  1424  1403               	setc
  4866  1425  3000               	movlw	0
  4867  1426  1803               	btfsc	3,0
  4868  1427  3001               	movlw	1
  4869  1428  00E2               	movwf	Sw_DimmerOnFunc@Idle
  4870  1429                     l8543:	
  4871                           
  4872                           ;Switch_B1.c: 277: }
  4873                           ;Switch_B1.c: 280: if(Idle)
  4874  1429  0862               	movf	Sw_DimmerOnFunc@Idle,w
  4875  142A  1903               	btfsc	3,2
  4876  142B  0008               	return
  4877                           
  4878                           ;Switch_B1.c: 281: {
  4879                           ;Switch_B1.c: 282: Sw->Flag=1;
  4880  142C  087B               	movf	_Sw,w
  4881  142D  0086               	movwf	6
  4882  142E  3001               	movlw	1	; select bank2/3
  4883  142F  0087               	movwf	7
  4884  1430  1781               	bsf	1,7
  4885                           
  4886                           ;Switch_B1.c: 283: setBuz(1,100);
  4887  1431  3064               	movlw	100
  4888  1432  00A6               	movwf	setBuz@time
  4889  1433  3000               	movlw	0
  4890  1434  00A7               	movwf	setBuz@time+1
  4891  1435  3001               	movlw	1
  4892  1436  3195  2565  3194   	fcall	_setBuz
  4893                           
  4894                           ;Switch_B1.c: 284: if(!Sw->Status)
  4895  1439  087B               	movf	_Sw,w
  4896  143A  0086               	movwf	6
  4897  143B  3001               	movlw	1	; select bank2/3
  4898  143C  0087               	movwf	7
  4899  143D  1B01               	btfsc	1,6
  4900  143E  2C6B               	goto	l8563
  4901                           
  4902                           ;Switch_B1.c: 285: {
  4903                           ;Switch_B1.c: 286: Sw->Status=1;
  4904  143F  087B               	movf	_Sw,w
  4905  1440  0086               	movwf	6
  4906  1441  3001               	movlw	1	; select bank2/3
  4907  1442  0087               	movwf	7
  4908  1443  1701               	bsf	1,6
  4909                           
  4910                           ;Switch_B1.c: 287: setRFSW_Status(sw,1);
  4911  1444  0020               	movlb	0	; select bank0
  4912  1445  01A2               	clrf	setRFSW_Status@command
  4913  1446  0AA2               	incf	setRFSW_Status@command,f
  4914  1447  0863               	movf	Sw_DimmerOnFunc@sw,w
  4915  1448  31A7  2792  3194   	fcall	_setRFSW_Status
  4916                           
  4917                           ;Switch_B1.c: 289: setDimmerLights_Trigger(sw,1);
  4918  144B  0020               	movlb	0	; select bank0
  4919  144C  01A2               	clrf	setDimmerLights_Trigger@command
  4920  144D  0AA2               	incf	setDimmerLights_Trigger@command,f
  4921  144E  0863               	movf	Sw_DimmerOnFunc@sw,w
  4922  144F  31A7  27D0  3194   	fcall	_setDimmerLights_Trigger
  4923                           
  4924                           ;Switch_B1.c: 290: setDimmerLights_Switch(sw,1);
  4925  1452  0020               	movlb	0	; select bank0
  4926  1453  01A2               	clrf	setDimmerLights_Switch@command
  4927  1454  0AA2               	incf	setDimmerLights_Switch@command,f
  4928  1455  0863               	movf	Sw_DimmerOnFunc@sw,w
  4929  1456  31A7  27C0  3194   	fcall	_setDimmerLights_Switch
  4930                           
  4931                           ;Switch_B1.c: 292: setRF_DimmerLights(sw,Sw->Status);
  4932  1459  087B               	movf	_Sw,w
  4933  145A  0086               	movwf	6
  4934  145B  3001               	movlw	1	; select bank2/3
  4935  145C  0087               	movwf	7
  4936  145D  3000               	movlw	0
  4937  145E  1B01               	btfsc	1,6
  4938  145F  3001               	movlw	1
  4939  1460  0020               	movlb	0	; select bank0
  4940  1461  00DD               	movwf	setRF_DimmerLights@on
  4941  1462  0863               	movf	Sw_DimmerOnFunc@sw,w
  4942  1463  3193  23A4  3194   	fcall	_setRF_DimmerLights
  4943                           
  4944                           ;Switch_B1.c: 293: setTxData(1);
  4945  1466  3001               	movlw	1
  4946  1467  318B  23FF         	fcall	_setTxData
  4947                           
  4948                           ;Switch_B1.c: 294: }
  4949  1469  0020               	movlb	0	; select bank0
  4950  146A  0008               	return
  4951  146B                     l8563:	
  4952                           
  4953                           ;Switch_B1.c: 295: else
  4954                           ;Switch_B1.c: 296: {
  4955                           ;Switch_B1.c: 297: Sw->Status=0;
  4956  146B  087B               	movf	_Sw,w
  4957  146C  0086               	movwf	6
  4958  146D  3001               	movlw	1	; select bank2/3
  4959  146E  0087               	movwf	7
  4960  146F  1301               	bcf	1,6
  4961                           
  4962                           ;Switch_B1.c: 298: setRFSW_Status(sw,Sw->Status);
  4963  1470  087B               	movf	_Sw,w
  4964  1471  0086               	movwf	6
  4965  1472  3001               	movlw	1	; select bank2/3
  4966  1473  0087               	movwf	7
  4967  1474  3000               	movlw	0
  4968  1475  1B01               	btfsc	1,6
  4969  1476  3001               	movlw	1
  4970  1477  0020               	movlb	0	; select bank0
  4971  1478  00A2               	movwf	setRFSW_Status@command
  4972  1479  0863               	movf	Sw_DimmerOnFunc@sw,w
  4973  147A  31A7  2792         	fcall	_setRFSW_Status
  4974  147C  0020               	movlb	0	; select bank0
  4975  147D  0008               	return
  4976  147E                     __end_of_Sw_DimmerOnFunc:	
  4977                           
  4978                           	psect	text7
  4979  147E                     __ptext7:	
  4980 ;; *************** function _Sw_DimmerOffFunc *****************
  4981 ;; Defined at:
  4982 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  sw              1    wreg     unsigned char 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  sw              1   68[BANK0 ] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;		None               void
  4989 ;; Registers used:
  4990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;Total ram usage:        3 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    8
  5003 ;; This function calls:
  5004 ;;		_setDelayOff_GO
  5005 ;;		_setDimmerLights_AdjGo
  5006 ;;		_setDimmerLights_Switch
  5007 ;;		_setDimmerLights_Trigger
  5008 ;;		_setDimmerLights_TriggerAdj
  5009 ;;		_setRF_DimmerLights
  5010 ;;		_setTxData
  5011 ;; This function is called by:
  5012 ;;		_setSw_Main
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           
  5017                           ;psect for function _Sw_DimmerOffFunc
  5018  147E                     _Sw_DimmerOffFunc:	
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5022                           ;Sw_DimmerOffFunc@sw stored from wreg
  5023  147E  0020               	movlb	0	; select bank0
  5024  147F  00E4               	movwf	Sw_DimmerOffFunc@sw
  5025                           
  5026                           ;Switch_B1.c: 305: if(Sw->Flag)
  5027  1480  087B               	movf	_Sw,w
  5028  1481  0086               	movwf	6
  5029  1482  3001               	movlw	1	; select bank2/3
  5030  1483  0087               	movwf	7
  5031  1484  1F81               	btfss	1,7
  5032  1485  0008               	return
  5033                           
  5034                           ;Switch_B1.c: 306: {
  5035                           ;Switch_B1.c: 307: Sw->Flag=0;
  5036  1486  087B               	movf	_Sw,w
  5037  1487  0086               	movwf	6
  5038  1488  3001               	movlw	1	; select bank2/3
  5039  1489  0087               	movwf	7
  5040  148A  1381               	bcf	1,7
  5041                           
  5042                           ;Switch_B1.c: 308: if(Sw->Status)
  5043  148B  087B               	movf	_Sw,w
  5044  148C  0086               	movwf	6
  5045  148D  3001               	movlw	1	; select bank2/3
  5046  148E  0087               	movwf	7
  5047  148F  1F01               	btfss	1,6
  5048  1490  2CCA               	goto	l8595
  5049                           
  5050                           ;Switch_B1.c: 309: {
  5051                           ;Switch_B1.c: 310: if(Sw->Adj)
  5052  1491  0A7B               	incf	_Sw,w
  5053  1492  0086               	movwf	6
  5054  1493  3001               	movlw	1	; select bank2/3
  5055  1494  0087               	movwf	7
  5056  1495  1C01               	btfss	1,0
  5057  1496  0008               	return
  5058                           
  5059                           ;Switch_B1.c: 311: {
  5060                           ;Switch_B1.c: 312: Sw->Adj=0;
  5061  1497  0A7B               	incf	_Sw,w
  5062  1498  0086               	movwf	6
  5063  1499  3001               	movlw	1	; select bank2/3
  5064  149A  0087               	movwf	7
  5065  149B  1001               	bcf	1,0
  5066                           
  5067                           ;Switch_B1.c: 313: setDimmerLights_TriggerAdj(sw,1);
  5068  149C  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5069  149D  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5070  149E  0864               	movf	Sw_DimmerOffFunc@sw,w
  5071  149F  3198  2078  3194   	fcall	_setDimmerLights_TriggerAdj
  5072                           
  5073                           ;Switch_B1.c: 314: setDimmerLights_AdjGo(sw,0);
  5074  14A2  0020               	movlb	0	; select bank0
  5075  14A3  01A2               	clrf	setDimmerLights_AdjGo@command
  5076  14A4  0864               	movf	Sw_DimmerOffFunc@sw,w
  5077  14A5  3198  2068  3194   	fcall	_setDimmerLights_AdjGo
  5078                           
  5079                           ;Switch_B1.c: 316: Product->Data[17]=Product->Data[26+sw];
  5080  14A8  0020               	movlb	0	; select bank0
  5081  14A9  0864               	movf	Sw_DimmerOffFunc@sw,w
  5082  14AA  3E1A               	addlw	26
  5083  14AB  076F               	addwf	_Product,w
  5084  14AC  00E2               	movwf	??_Sw_DimmerOffFunc
  5085  14AD  0862               	movf	??_Sw_DimmerOffFunc,w
  5086  14AE  0086               	movwf	6
  5087  14AF  3001               	movlw	1	; select bank2/3
  5088  14B0  0087               	movwf	7
  5089  14B1  0801               	movf	1,w
  5090  14B2  00E3               	movwf	??_Sw_DimmerOffFunc+1
  5091  14B3  086F               	movf	_Product,w
  5092  14B4  3E11               	addlw	17
  5093  14B5  0086               	movwf	6
  5094  14B6  3001               	movlw	1	; select bank2/3
  5095  14B7  0087               	movwf	7
  5096  14B8  0863               	movf	??_Sw_DimmerOffFunc+1,w
  5097  14B9  0081               	movwf	1
  5098                           
  5099                           ;Switch_B1.c: 317: setRF_DimmerLights(sw,Sw->Status);
  5100  14BA  087B               	movf	_Sw,w
  5101  14BB  0086               	movwf	6
  5102  14BC  3001               	movlw	1	; select bank2/3
  5103  14BD  0087               	movwf	7
  5104  14BE  3000               	movlw	0
  5105  14BF  1B01               	btfsc	1,6
  5106  14C0  3001               	movlw	1
  5107  14C1  00DD               	movwf	setRF_DimmerLights@on
  5108  14C2  0864               	movf	Sw_DimmerOffFunc@sw,w
  5109  14C3  3193  23A4  3194   	fcall	_setRF_DimmerLights
  5110                           
  5111                           ;Switch_B1.c: 318: setTxData(1);
  5112  14C6  3001               	movlw	1
  5113  14C7  318B  23FF         	fcall	_setTxData
  5114                           
  5115                           ;Switch_B1.c: 320: }
  5116                           ;Switch_B1.c: 321: }
  5117  14C9  0008               	return
  5118  14CA                     l8595:	
  5119                           
  5120                           ;Switch_B1.c: 322: else
  5121                           ;Switch_B1.c: 323: {
  5122                           ;Switch_B1.c: 324: setDimmerLights_Trigger(sw,1);
  5123  14CA  0020               	movlb	0	; select bank0
  5124  14CB  01A2               	clrf	setDimmerLights_Trigger@command
  5125  14CC  0AA2               	incf	setDimmerLights_Trigger@command,f
  5126  14CD  0864               	movf	Sw_DimmerOffFunc@sw,w
  5127  14CE  31A7  27D0  3194   	fcall	_setDimmerLights_Trigger
  5128                           
  5129                           ;Switch_B1.c: 325: setDimmerLights_Switch(sw,0);
  5130  14D1  0020               	movlb	0	; select bank0
  5131  14D2  01A2               	clrf	setDimmerLights_Switch@command
  5132  14D3  0864               	movf	Sw_DimmerOffFunc@sw,w
  5133  14D4  31A7  27C0  3194   	fcall	_setDimmerLights_Switch
  5134                           
  5135                           ;Switch_B1.c: 327: setDelayOff_GO(sw,0,0);
  5136  14D7  0020               	movlb	0	; select bank0
  5137  14D8  01A3               	clrf	setDelayOff_GO@command
  5138  14D9  01A4               	clrf	setDelayOff_GO@value
  5139  14DA  0864               	movf	Sw_DimmerOffFunc@sw,w
  5140  14DB  3191  215C  3194   	fcall	_setDelayOff_GO
  5141                           
  5142                           ;Switch_B1.c: 328: setRF_DimmerLights(sw,Sw->Status);
  5143  14DE  087B               	movf	_Sw,w
  5144  14DF  0086               	movwf	6
  5145  14E0  3001               	movlw	1	; select bank2/3
  5146  14E1  0087               	movwf	7
  5147  14E2  3000               	movlw	0
  5148  14E3  1B01               	btfsc	1,6
  5149  14E4  3001               	movlw	1
  5150  14E5  0020               	movlb	0	; select bank0
  5151  14E6  00DD               	movwf	setRF_DimmerLights@on
  5152  14E7  0864               	movf	Sw_DimmerOffFunc@sw,w
  5153  14E8  3193  23A4  3194   	fcall	_setRF_DimmerLights
  5154                           
  5155                           ;Switch_B1.c: 329: setTxData(1);
  5156  14EB  3001               	movlw	1
  5157  14EC  318B  23FF         	fcall	_setTxData
  5158  14EE  0008               	return
  5159  14EF                     __end_of_Sw_DimmerOffFunc:	
  5160                           
  5161                           	psect	text8
  5162  1B96                     __ptext8:	
  5163 ;; *************** function _Sw_DimmerAdjFunc *****************
  5164 ;; Defined at:
  5165 ;;		line 334 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  sw              1    wreg     unsigned char 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  sw              1    4[BANK0 ] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;		None               void
  5172 ;; Registers used:
  5173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;Total ram usage:        1 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    6
  5186 ;; This function calls:
  5187 ;;		_setDimmerLights_AdjGo
  5188 ;;		_setDimmerLights_TriggerAdj
  5189 ;;		_setRFSW_Status
  5190 ;; This function is called by:
  5191 ;;		_setSw_Main
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _Sw_DimmerAdjFunc
  5197  1B96                     _Sw_DimmerAdjFunc:	
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5201                           ;Sw_DimmerAdjFunc@sw stored from wreg
  5202  1B96  0020               	movlb	0	; select bank0
  5203  1B97  00A4               	movwf	Sw_DimmerAdjFunc@sw
  5204                           
  5205                           ;Switch_B1.c: 336: if(Sw->Flag)
  5206  1B98  087B               	movf	_Sw,w
  5207  1B99  0086               	movwf	6
  5208  1B9A  3001               	movlw	1	; select bank2/3
  5209  1B9B  0087               	movwf	7
  5210  1B9C  1F81               	btfss	1,7
  5211  1B9D  0008               	return
  5212                           
  5213                           ;Switch_B1.c: 337: {
  5214                           ;Switch_B1.c: 338: Sw->Adj=1;
  5215  1B9E  0A7B               	incf	_Sw,w
  5216  1B9F  0086               	movwf	6
  5217  1BA0  3001               	movlw	1	; select bank2/3
  5218  1BA1  0087               	movwf	7
  5219  1BA2  1401               	bsf	1,0
  5220                           
  5221                           ;Switch_B1.c: 339: Sw->Status=1;
  5222  1BA3  087B               	movf	_Sw,w
  5223  1BA4  0086               	movwf	6
  5224  1BA5  3001               	movlw	1	; select bank2/3
  5225  1BA6  0087               	movwf	7
  5226  1BA7  1701               	bsf	1,6
  5227                           
  5228                           ;Switch_B1.c: 340: setRFSW_Status(sw,1);
  5229  1BA8  01A2               	clrf	setRFSW_Status@command
  5230  1BA9  0AA2               	incf	setRFSW_Status@command,f
  5231  1BAA  0824               	movf	Sw_DimmerAdjFunc@sw,w
  5232  1BAB  31A7  2792  319B   	fcall	_setRFSW_Status
  5233                           
  5234                           ;Switch_B1.c: 342: setDimmerLights_TriggerAdj(sw,1);
  5235  1BAE  0020               	movlb	0	; select bank0
  5236  1BAF  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5237  1BB0  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5238  1BB1  0824               	movf	Sw_DimmerAdjFunc@sw,w
  5239  1BB2  3198  2078  319B   	fcall	_setDimmerLights_TriggerAdj
  5240                           
  5241                           ;Switch_B1.c: 343: setDimmerLights_AdjGo(sw,1);
  5242  1BB5  0020               	movlb	0	; select bank0
  5243  1BB6  01A2               	clrf	setDimmerLights_AdjGo@command
  5244  1BB7  0AA2               	incf	setDimmerLights_AdjGo@command,f
  5245  1BB8  0824               	movf	Sw_DimmerAdjFunc@sw,w
  5246  1BB9  3198  2068         	fcall	_setDimmerLights_AdjGo
  5247  1BBB  0008               	return
  5248  1BBC                     __end_of_Sw_DimmerAdjFunc:	
  5249                           
  5250                           	psect	text9
  5251  1878                     __ptext9:	
  5252 ;; *************** function _setDimmerLights_TriggerAdj *****************
  5253 ;; Defined at:
  5254 ;;		line 450 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  lights          1    wreg     unsigned char 
  5257 ;;  command         1    2[BANK0 ] unsigned char 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  lights          1    3[BANK0 ] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;		None               void
  5262 ;; Registers used:
  5263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        2 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    5
  5276 ;; This function calls:
  5277 ;;		_DimmerLightsPointSelect
  5278 ;; This function is called by:
  5279 ;;		_Sw_DimmerOffFunc
  5280 ;;		_Sw_DimmerAdjFunc
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           
  5285                           ;psect for function _setDimmerLights_TriggerAdj
  5286  1878                     _setDimmerLights_TriggerAdj:	
  5287                           
  5288                           ;incstack = 0
  5289                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5290                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  5291  1878  0020               	movlb	0	; select bank0
  5292  1879  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  5293                           
  5294                           ;Dimmer_B1.c: 452: DimmerLightsPointSelect(lights);
  5295  187A  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  5296  187B  3198  20D5         	fcall	_DimmerLightsPointSelect
  5297                           
  5298                           ;Dimmer_B1.c: 453: DimmerLights->TriggerAdj=command;
  5299  187D  0020               	movlb	0	; select bank0
  5300  187E  086C               	movf	_DimmerLights,w
  5301  187F  3E09               	addlw	9
  5302  1880  0086               	movwf	6
  5303  1881  3001               	movlw	1	; select bank2/3
  5304  1882  0087               	movwf	7
  5305  1883  0822               	movf	setDimmerLights_TriggerAdj@command,w
  5306  1884  1181               	bcf	1,3
  5307  1885  1D03               	skipz
  5308  1886  1581               	bsf	1,3
  5309  1887  0008               	return
  5310  1888                     __end_of_setDimmerLights_TriggerAdj:	
  5311                           
  5312                           	psect	text10
  5313  1868                     __ptext10:	
  5314 ;; *************** function _setDimmerLights_AdjGo *****************
  5315 ;; Defined at:
  5316 ;;		line 440 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  lights          1    wreg     unsigned char 
  5319 ;;  command         1    2[BANK0 ] unsigned char 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  lights          1    3[BANK0 ] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;		None               void
  5324 ;; Registers used:
  5325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5331 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;Total ram usage:        2 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    5
  5338 ;; This function calls:
  5339 ;;		_DimmerLightsPointSelect
  5340 ;; This function is called by:
  5341 ;;		_Sw_DimmerOffFunc
  5342 ;;		_Sw_DimmerAdjFunc
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           
  5347                           ;psect for function _setDimmerLights_AdjGo
  5348  1868                     _setDimmerLights_AdjGo:	
  5349                           
  5350                           ;incstack = 0
  5351                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5352                           ;setDimmerLights_AdjGo@lights stored from wreg
  5353  1868  0020               	movlb	0	; select bank0
  5354  1869  00A3               	movwf	setDimmerLights_AdjGo@lights
  5355                           
  5356                           ;Dimmer_B1.c: 442: DimmerLightsPointSelect(lights);
  5357  186A  0823               	movf	setDimmerLights_AdjGo@lights,w
  5358  186B  3198  20D5         	fcall	_DimmerLightsPointSelect
  5359                           
  5360                           ;Dimmer_B1.c: 443: DimmerLights->AdjGo=command;
  5361  186D  0020               	movlb	0	; select bank0
  5362  186E  086C               	movf	_DimmerLights,w
  5363  186F  3E09               	addlw	9
  5364  1870  0086               	movwf	6
  5365  1871  3001               	movlw	1	; select bank2/3
  5366  1872  0087               	movwf	7
  5367  1873  0822               	movf	setDimmerLights_AdjGo@command,w
  5368  1874  1101               	bcf	1,2
  5369  1875  1D03               	skipz
  5370  1876  1501               	bsf	1,2
  5371  1877  0008               	return
  5372  1878                     __end_of_setDimmerLights_AdjGo:	
  5373                           
  5374                           	psect	text11
  5375  2769                     __ptext11:	
  5376 ;; *************** function _Switch_Initialization *****************
  5377 ;; Defined at:
  5378 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;		None               void
  5385 ;; Registers used:
  5386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;Total ram usage:        0 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    7
  5399 ;; This function calls:
  5400 ;;		_TouchPower
  5401 ;;		_setSw_Initialization
  5402 ;; This function is called by:
  5403 ;;		_main
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function _Switch_Initialization
  5409  2769                     _Switch_Initialization:	
  5410                           
  5411                           ;Switch_B1.c: 40: TouchPower();
  5412                           
  5413                           ;incstack = 0
  5414                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5415  2769  31A6  2664  31A7   	fcall	_TouchPower
  5416                           
  5417                           ;Switch_B1.c: 42: WPUB1=0;
  5418  276C  0024               	movlb	4	; select bank4
  5419  276D  108D               	bcf	13,1	;volatile
  5420                           
  5421                           ;Switch_B1.c: 51: setSw_Initialization(1);
  5422  276E  3001               	movlw	1
  5423  276F  31A6  26A0  31A7   	fcall	_setSw_Initialization
  5424                           
  5425                           ;Switch_B1.c: 54: setSw_Initialization(2);
  5426  2772  3002               	movlw	2
  5427  2773  31A6  26A0         	fcall	_setSw_Initialization
  5428  2775  0008               	return
  5429  2776                     __end_of_Switch_Initialization:	
  5430                           
  5431                           	psect	text12
  5432  26A0                     __ptext12:	
  5433 ;; *************** function _setSw_Initialization *****************
  5434 ;; Defined at:
  5435 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  sw              1    wreg     unsigned char 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  sw              1    4[BANK0 ] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;		None               void
  5442 ;; Registers used:
  5443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;Total ram usage:        1 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    6
  5456 ;; This function calls:
  5457 ;;		_setLED
  5458 ;; This function is called by:
  5459 ;;		_Switch_Initialization
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           
  5464                           ;psect for function _setSw_Initialization
  5465  26A0                     _setSw_Initialization:	
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5469                           ;setSw_Initialization@sw stored from wreg
  5470  26A0  0020               	movlb	0	; select bank0
  5471  26A1  00A4               	movwf	setSw_Initialization@sw
  5472                           
  5473                           ;Switch_B1.c: 80: setLED(sw,1);
  5474  26A2  01A2               	clrf	setLED@command
  5475  26A3  0AA2               	incf	setLED@command,f
  5476  26A4  0824               	movf	setSw_Initialization@sw,w
  5477  26A5  3191  21B8         	fcall	_setLED
  5478  26A7  0008               	return
  5479  26A8                     __end_of_setSw_Initialization:	
  5480                           
  5481                           	psect	text13
  5482  2664                     __ptext13:	
  5483 ;; *************** function _TouchPower *****************
  5484 ;; Defined at:
  5485 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;		None
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;		None
  5490 ;; Return value:  Size  Location     Type
  5491 ;;		None               void
  5492 ;; Registers used:
  5493 ;;		None
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5503 ;;Total ram usage:        0 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:    4
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_Switch_Initialization
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function _TouchPower
  5515  2664                     _TouchPower:	
  5516  2664                     l2272:	
  5517                           ;Switch_B1.c: 11: while(!RC5)
  5518                           
  5519                           ;incstack = 0
  5520                           ; Regs used in _TouchPower: []
  5521                           
  5522  2664  0020               	movlb	0	; select bank0
  5523  2665  1A8E               	btfsc	14,5	;volatile
  5524  2666  0008               	return
  5525                           
  5526                           ;Switch_B1.c: 12: RC5=1;
  5527  2667  168E               	bsf	14,5	;volatile
  5528  2668  2E64               	goto	l2272
  5529  2669                     __end_of_TouchPower:	
  5530                           
  5531                           	psect	text14
  5532  2660                     __ptext14:	
  5533 ;; *************** function _RF_Main *****************
  5534 ;; Defined at:
  5535 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;		None               void
  5542 ;; Registers used:
  5543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;Total ram usage:        0 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:   13
  5556 ;; This function calls:
  5557 ;;		_setRF_Main
  5558 ;; This function is called by:
  5559 ;;		_main
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           
  5564                           ;psect for function _RF_Main
  5565  2660                     _RF_Main:	
  5566                           
  5567                           ;RF_Control_B1.c: 27: setRF_Main(1);
  5568                           
  5569                           ;incstack = 0
  5570                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5571  2660  3001               	movlw	1
  5572  2661  3196  26E8         	fcall	_setRF_Main
  5573  2663  0008               	return
  5574  2664                     __end_of_RF_Main:	
  5575                           
  5576                           	psect	text15
  5577  16E8                     __ptext15:	
  5578 ;; *************** function _setRF_Main *****************
  5579 ;; Defined at:
  5580 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  rf              1    wreg     unsigned char 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  rf              1   74[BANK0 ] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;		None               void
  5587 ;; Registers used:
  5588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;Total ram usage:        3 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:   12
  5601 ;; This function calls:
  5602 ;;		_CC2500_RxData
  5603 ;;		_CC2500_TxData
  5604 ;;		_CC2500_WriteCommand
  5605 ;;		_RF_RxDisable
  5606 ;;		_RfPointSelect
  5607 ;;		_getRxData
  5608 ;;		_setINT_GO
  5609 ;; This function is called by:
  5610 ;;		_RF_Main
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           
  5615                           ;psect for function _setRF_Main
  5616  16E8                     _setRF_Main:	
  5617                           
  5618                           ;incstack = 0
  5619                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5620                           ;setRF_Main@rf stored from wreg
  5621  16E8  0020               	movlb	0	; select bank0
  5622  16E9  00EA               	movwf	setRF_Main@rf
  5623                           
  5624                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  5625  16EA  086A               	movf	setRF_Main@rf,w
  5626  16EB  31A6  26D9  3196   	fcall	_RfPointSelect
  5627                           
  5628                           ;RF_Control_B1.c: 61: if(RF->Enable)
  5629  16EE  087A               	movf	_RF,w
  5630  16EF  0086               	movwf	6
  5631  16F0  0187               	clrf	7
  5632  16F1  1C01               	btfss	1,0
  5633  16F2  0008               	return
  5634                           
  5635                           ;RF_Control_B1.c: 62: {
  5636                           ;RF_Control_B1.c: 69: RF->Key=((RA6 || RA4 || RA0 || RB1 ) && !RF->Learn)?1:0;
  5637  16F3  0020               	movlb	0	; select bank0
  5638  16F4  01EB               	clrf	_setRF_Main$3572
  5639  16F5  1F0C               	btfss	12,6	;volatile
  5640  16F6  1A0C               	btfsc	12,4	;volatile
  5641  16F7  2EFC               	goto	l8799
  5642  16F8  180C               	btfsc	12,0	;volatile
  5643  16F9  2EFC               	goto	l8799
  5644  16FA  1C8D               	btfss	13,1	;volatile
  5645  16FB  2F03               	goto	l8803
  5646  16FC                     l8799:	
  5647  16FC  087A               	movf	_RF,w
  5648  16FD  0086               	movwf	6
  5649  16FE  0187               	clrf	7
  5650  16FF  1B01               	btfsc	1,6
  5651  1700  2F03               	goto	l8803
  5652  1701  01EB               	clrf	_setRF_Main$3572
  5653  1702  0AEB               	incf	_setRF_Main$3572,f
  5654  1703                     l8803:	
  5655  1703  087A               	movf	_RF,w
  5656  1704  0086               	movwf	6
  5657  1705  0187               	clrf	7
  5658  1706  086B               	movf	_setRF_Main$3572,w
  5659  1707  1381               	bcf	1,7
  5660  1708  1D03               	skipz
  5661  1709  1781               	bsf	1,7
  5662                           
  5663                           ;RF_Control_B1.c: 77: if(!RF->Key)
  5664  170A  087A               	movf	_RF,w
  5665  170B  0086               	movwf	6
  5666  170C  0187               	clrf	7
  5667  170D  1B81               	btfsc	1,7
  5668  170E  2F3B               	goto	l8825
  5669                           
  5670                           ;RF_Control_B1.c: 78: {
  5671                           ;RF_Control_B1.c: 79: if(RF->ReceiveGO)
  5672  170F  087A               	movf	_RF,w
  5673  1710  0086               	movwf	6
  5674  1711  0187               	clrf	7
  5675  1712  1C81               	btfss	1,1
  5676  1713  2F20               	goto	l8813
  5677                           
  5678                           ;RF_Control_B1.c: 80: {
  5679                           ;RF_Control_B1.c: 81: RF->ReceiveGO=0;
  5680  1714  087A               	movf	_RF,w
  5681  1715  0086               	movwf	6
  5682  1716  0187               	clrf	7
  5683  1717  1081               	bcf	1,1
  5684                           
  5685                           ;RF_Control_B1.c: 82: CC2500_RxData();
  5686  1718  3192  22DB  3196   	fcall	_CC2500_RxData
  5687                           
  5688                           ;RF_Control_B1.c: 88: getRxData(1);
  5689  171B  3001               	movlw	1
  5690  171C  3190  2000  3196   	fcall	_getRxData
  5691                           
  5692                           ;RF_Control_B1.c: 91: }
  5693  171F  2F3F               	goto	l8827
  5694  1720                     l8813:	
  5695                           
  5696                           ;RF_Control_B1.c: 92: else
  5697                           ;RF_Control_B1.c: 93: {
  5698                           ;RF_Control_B1.c: 94: if(!RF->TransceiveGO)
  5699  1720  087A               	movf	_RF,w
  5700  1721  0086               	movwf	6
  5701  1722  0187               	clrf	7
  5702  1723  1901               	btfsc	1,2
  5703  1724  2F3F               	goto	l8827
  5704                           
  5705                           ;RF_Control_B1.c: 95: {
  5706                           ;RF_Control_B1.c: 97: if(!RF->RxStatus)
  5707  1725  087A               	movf	_RF,w
  5708  1726  0086               	movwf	6
  5709  1727  0187               	clrf	7
  5710  1728  1981               	btfsc	1,3
  5711  1729  2F3F               	goto	l8827
  5712                           
  5713                           ;RF_Control_B1.c: 98: {
  5714                           ;RF_Control_B1.c: 99: RF->RxStatus=1;
  5715  172A  087A               	movf	_RF,w
  5716  172B  0086               	movwf	6
  5717  172C  0187               	clrf	7
  5718  172D  1581               	bsf	1,3
  5719                           
  5720                           ;RF_Control_B1.c: 100: CC2500_WriteCommand(0x36);
  5721  172E  3036               	movlw	54
  5722  172F  31A7  27B0  3196   	fcall	_CC2500_WriteCommand
  5723                           
  5724                           ;RF_Control_B1.c: 101: CC2500_WriteCommand(0x34);
  5725  1732  3034               	movlw	52
  5726  1733  31A7  27B0  3196   	fcall	_CC2500_WriteCommand
  5727                           
  5728                           ;RF_Control_B1.c: 102: setINT_GO(1);
  5729  1736  3001               	movlw	1
  5730  1737  3187  27F7  3196   	fcall	_setINT_GO
  5731                           
  5732                           ;RF_Control_B1.c: 103: }
  5733                           ;RF_Control_B1.c: 105: }
  5734                           ;RF_Control_B1.c: 106: }
  5735                           ;RF_Control_B1.c: 107: }
  5736  173A  2F3F               	goto	l8827
  5737  173B                     l8825:	
  5738                           
  5739                           ;RF_Control_B1.c: 108: else
  5740                           ;RF_Control_B1.c: 109: {
  5741                           ;RF_Control_B1.c: 110: RF_RxDisable(1);
  5742  173B  3001               	movlw	1
  5743  173C  319B  23BC  3196   	fcall	_RF_RxDisable
  5744  173F                     l8827:	
  5745                           
  5746                           ;RF_Control_B1.c: 111: }
  5747                           ;RF_Control_B1.c: 112: if(RF->TransceiveGO)
  5748  173F  087A               	movf	_RF,w
  5749  1740  0086               	movwf	6
  5750  1741  0187               	clrf	7
  5751  1742  1D01               	btfss	1,2
  5752  1743  0008               	return
  5753                           
  5754                           ;RF_Control_B1.c: 113: {
  5755                           ;RF_Control_B1.c: 114: RF_RxDisable(1);
  5756  1744  3001               	movlw	1
  5757  1745  319B  23BC  3196   	fcall	_RF_RxDisable
  5758                           
  5759                           ;RF_Control_B1.c: 115: if(!RF->Debounce)
  5760  1748  087A               	movf	_RF,w
  5761  1749  0086               	movwf	6
  5762  174A  0187               	clrf	7
  5763  174B  1A81               	btfsc	1,5
  5764  174C  2F65               	goto	l8841
  5765                           
  5766                           ;RF_Control_B1.c: 116: {
  5767                           ;RF_Control_B1.c: 117: RF->DebounceTime++;
  5768  174D  3001               	movlw	1
  5769  174E  0020               	movlb	0	; select bank0
  5770  174F  00E9               	movwf	??_setRF_Main
  5771  1750  0A7A               	incf	_RF,w
  5772  1751  0086               	movwf	6
  5773  1752  0187               	clrf	7
  5774  1753  0869               	movf	??_setRF_Main,w
  5775  1754  0781               	addwf	1,f
  5776                           
  5777                           ;RF_Control_B1.c: 118: if(RF->DebounceTime == 25)
  5778  1755  0A7A               	incf	_RF,w
  5779  1756  0086               	movwf	6
  5780  1757  0187               	clrf	7
  5781  1758  0801               	movf	1,w
  5782  1759  3A19               	xorlw	25
  5783  175A  1D03               	skipz
  5784  175B  0008               	return
  5785                           
  5786                           ;RF_Control_B1.c: 119: {
  5787                           ;RF_Control_B1.c: 120: RF->DebounceTime=0;
  5788  175C  0A7A               	incf	_RF,w
  5789  175D  0086               	movwf	6
  5790  175E  0187               	clrf	7
  5791  175F  0181               	clrf	1
  5792                           
  5793                           ;RF_Control_B1.c: 121: RF->Debounce=1;
  5794  1760  087A               	movf	_RF,w
  5795  1761  0086               	movwf	6
  5796  1762  0187               	clrf	7
  5797  1763  1681               	bsf	1,5
  5798                           
  5799                           ;RF_Control_B1.c: 122: }
  5800                           ;RF_Control_B1.c: 123: }
  5801  1764  0008               	return
  5802  1765                     l8841:	
  5803                           
  5804                           ;RF_Control_B1.c: 124: else
  5805                           ;RF_Control_B1.c: 125: {
  5806                           ;RF_Control_B1.c: 126: RF->Debounce=0;
  5807  1765  087A               	movf	_RF,w
  5808  1766  0086               	movwf	6
  5809  1767  0187               	clrf	7
  5810  1768  1281               	bcf	1,5
  5811                           
  5812                           ;RF_Control_B1.c: 127: RF->TransceiveGO=0;
  5813  1769  087A               	movf	_RF,w
  5814  176A  0086               	movwf	6
  5815  176B  0187               	clrf	7
  5816  176C  1101               	bcf	1,2
  5817                           
  5818                           ;RF_Control_B1.c: 128: CC2500_TxData();
  5819  176D  319F  272F         	fcall	_CC2500_TxData
  5820  176F  0008               	return
  5821  1770                     __end_of_setRF_Main:	
  5822                           
  5823                           	psect	text16
  5824  1000                     __ptext16:	
  5825 ;; *************** function _getRxData *****************
  5826 ;; Defined at:
  5827 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  rf              1    wreg     unsigned char 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  rf              1   72[BANK0 ] unsigned char 
  5832 ;;  i               1    0        unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;		None               void
  5835 ;; Registers used:
  5836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;Total ram usage:        1 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:   11
  5849 ;; This function calls:
  5850 ;;		_RfPointSelect
  5851 ;;		_setControl_Lights_Table
  5852 ;;		_setLog_Code
  5853 ;; This function is called by:
  5854 ;;		_setRF_Main
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _getRxData
  5860  1000                     _getRxData:	
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5864                           ;getRxData@rf stored from wreg
  5865  1000  0020               	movlb	0	; select bank0
  5866  1001  00E8               	movwf	getRxData@rf
  5867                           
  5868                           ;RF_Control_B1.c: 216: unsigned char i;
  5869                           ;RF_Control_B1.c: 217: RfPointSelect(rf);
  5870  1002  0868               	movf	getRxData@rf,w
  5871  1003  31A6  26D9  3190   	fcall	_RfPointSelect
  5872                           
  5873                           ;RF_Control_B1.c: 218: if(RF->Learn)
  5874  1006  087A               	movf	_RF,w
  5875  1007  0086               	movwf	6
  5876  1008  0187               	clrf	7
  5877  1009  1F01               	btfss	1,6
  5878  100A  2817               	goto	l8487
  5879                           
  5880                           ;RF_Control_B1.c: 219: {
  5881                           ;RF_Control_B1.c: 220: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  5882  100B  0021               	movlb	1	; select bank1
  5883  100C  08A0               	movf	_RF_Data^(0+128),f
  5884  100D  1D03               	skipz
  5885  100E  0008               	return
  5886  100F  0821               	movf	(_RF_Data^(0+128)+1),w
  5887  1010  3A64               	xorlw	100
  5888  1011  1D03               	skipz
  5889  1012  0008               	return
  5890                           
  5891                           ;RF_Control_B1.c: 221: {
  5892                           ;RF_Control_B1.c: 222: setLog_Code(1);
  5893  1013  3001               	movlw	1
  5894  1014  319F  27B9         	fcall	_setLog_Code
  5895                           
  5896                           ;RF_Control_B1.c: 223: }
  5897                           ;RF_Control_B1.c: 224: }
  5898  1016  0008               	return
  5899  1017                     l8487:	
  5900                           
  5901                           ;RF_Control_B1.c: 225: else
  5902                           ;RF_Control_B1.c: 226: {
  5903                           ;RF_Control_B1.c: 227: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  5904  1017  0021               	movlb	1	; select bank1
  5905  1018  08A0               	movf	_RF_Data^(0+128),f
  5906  1019  1D03               	skipz
  5907  101A  0008               	return
  5908  101B  0821               	movf	(_RF_Data^(0+128)+1),w
  5909  101C  3A02               	xorlw	2
  5910  101D  1D03               	skipz
  5911  101E  0008               	return
  5912                           
  5913                           ;RF_Control_B1.c: 228: {
  5914                           ;RF_Control_B1.c: 229: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  5915  101F  082C               	movf	(_RF_Data^(0+128)+12),w
  5916  1020  3AFF               	xorlw	255
  5917  1021  1D03               	skipz
  5918  1022  282D               	goto	l8499
  5919  1023  082D               	movf	(_RF_Data^(0+128)+13),w
  5920  1024  3AFF               	xorlw	255
  5921  1025  1D03               	skipz
  5922  1026  282D               	goto	l8499
  5923  1027  082E               	movf	(_RF_Data^(0+128)+14),w
  5924  1028  3AFF               	xorlw	255
  5925  1029  1D03               	skipz
  5926  102A  282D               	goto	l8499
  5927                           
  5928                           ;RF_Control_B1.c: 230: {
  5929                           ;RF_Control_B1.c: 231: __nop();
  5930  102B  0000               	nop
  5931                           
  5932                           ;RF_Control_B1.c: 232: }
  5933  102C  0008               	return
  5934  102D                     l8499:	
  5935                           
  5936                           ;RF_Control_B1.c: 233: else
  5937                           ;RF_Control_B1.c: 234: {
  5938                           ;RF_Control_B1.c: 235: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  5939  102D  0020               	movlb	0	; select bank0
  5940  102E  086F               	movf	_Product,w
  5941  102F  3E0C               	addlw	12
  5942  1030  0086               	movwf	6
  5943  1031  3001               	movlw	1	; select bank2/3
  5944  1032  0087               	movwf	7
  5945  1033  0021               	movlb	1	; select bank1
  5946  1034  082C               	movf	(_RF_Data^(0+128)+12),w
  5947  1035  0601               	xorwf	1,w
  5948  1036  1D03               	skipz
  5949  1037  0008               	return
  5950  1038  0020               	movlb	0	; select bank0
  5951  1039  086F               	movf	_Product,w
  5952  103A  3E0D               	addlw	13
  5953  103B  0086               	movwf	6
  5954  103C  3001               	movlw	1	; select bank2/3
  5955  103D  0087               	movwf	7
  5956  103E  0021               	movlb	1	; select bank1
  5957  103F  082D               	movf	(_RF_Data^(0+128)+13),w
  5958  1040  0601               	xorwf	1,w
  5959  1041  1D03               	skipz
  5960  1042  0008               	return
  5961  1043  0020               	movlb	0	; select bank0
  5962  1044  086F               	movf	_Product,w
  5963  1045  3E0E               	addlw	14
  5964  1046  0086               	movwf	6
  5965  1047  3001               	movlw	1	; select bank2/3
  5966  1048  0087               	movwf	7
  5967  1049  0021               	movlb	1	; select bank1
  5968  104A  082E               	movf	(_RF_Data^(0+128)+14),w
  5969  104B  0601               	xorwf	1,w
  5970  104C  1D03               	skipz
  5971  104D  0008               	return
  5972                           
  5973                           ;RF_Control_B1.c: 236: {
  5974                           ;RF_Control_B1.c: 237: setControl_Lights_Table(1);
  5975  104E  3001               	movlw	1
  5976  104F  3188  2038         	fcall	_setControl_Lights_Table
  5977                           
  5978                           ;RF_Control_B1.c: 246: {
  5979                           ;RF_Control_B1.c: 247: ;
  5980                           
  5981                           ;RF_Control_B1.c: 242: {
  5982                           ;RF_Control_B1.c: 243: ;
  5983                           ;RF_Control_B1.c: 244: }
  5984                           
  5985                           ;RF_Control_B1.c: 238: }
  5986                           ;RF_Control_B1.c: 239: }
  5987                           ;RF_Control_B1.c: 240: }
  5988  1051  0008               	return
  5989  1052                     __end_of_getRxData:	
  5990                           
  5991                           	psect	text17
  5992  1FB9                     __ptext17:	
  5993 ;; *************** function _setLog_Code *****************
  5994 ;; Defined at:
  5995 ;;		line 256 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  rf              1    wreg     unsigned char 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  rf              1   11[BANK0 ] unsigned char 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;		None               void
  6002 ;; Registers used:
  6003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;Total ram usage:        2 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    6
  6016 ;; This function calls:
  6017 ;;		_RfPointSelect
  6018 ;;		_setBuz
  6019 ;; This function is called by:
  6020 ;;		_getRxData
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           
  6025                           ;psect for function _setLog_Code
  6026  1FB9                     _setLog_Code:	
  6027                           
  6028                           ;incstack = 0
  6029                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6030                           ;setLog_Code@rf stored from wreg
  6031  1FB9  0020               	movlb	0	; select bank0
  6032  1FBA  00AB               	movwf	setLog_Code@rf
  6033                           
  6034                           ;RF_Control_B1.c: 258: RfPointSelect(rf);
  6035  1FBB  082B               	movf	setLog_Code@rf,w
  6036  1FBC  31A6  26D9  319F   	fcall	_RfPointSelect
  6037                           
  6038                           ;RF_Control_B1.c: 259: Product->Data[12]=RF_Data[12];
  6039  1FBF  0021               	movlb	1	; select bank1
  6040  1FC0  082C               	movf	(_RF_Data^(0+128)+12),w
  6041  1FC1  0020               	movlb	0	; select bank0
  6042  1FC2  00AA               	movwf	??_setLog_Code
  6043  1FC3  086F               	movf	_Product,w
  6044  1FC4  3E0C               	addlw	12
  6045  1FC5  0086               	movwf	6
  6046  1FC6  3001               	movlw	1	; select bank2/3
  6047  1FC7  0087               	movwf	7
  6048  1FC8  082A               	movf	??_setLog_Code,w
  6049  1FC9  0081               	movwf	1
  6050                           
  6051                           ;RF_Control_B1.c: 260: Product->Data[13]=RF_Data[13];
  6052  1FCA  0021               	movlb	1	; select bank1
  6053  1FCB  082D               	movf	(_RF_Data^(0+128)+13),w
  6054  1FCC  0020               	movlb	0	; select bank0
  6055  1FCD  00AA               	movwf	??_setLog_Code
  6056  1FCE  086F               	movf	_Product,w
  6057  1FCF  3E0D               	addlw	13
  6058  1FD0  0086               	movwf	6
  6059  1FD1  3001               	movlw	1	; select bank2/3
  6060  1FD2  0087               	movwf	7
  6061  1FD3  082A               	movf	??_setLog_Code,w
  6062  1FD4  0081               	movwf	1
  6063                           
  6064                           ;RF_Control_B1.c: 261: Product->Data[14]=RF_Data[14];
  6065  1FD5  0021               	movlb	1	; select bank1
  6066  1FD6  082E               	movf	(_RF_Data^(0+128)+14),w
  6067  1FD7  0020               	movlb	0	; select bank0
  6068  1FD8  00AA               	movwf	??_setLog_Code
  6069  1FD9  086F               	movf	_Product,w
  6070  1FDA  3E0E               	addlw	14
  6071  1FDB  0086               	movwf	6
  6072  1FDC  3001               	movlw	1	; select bank2/3
  6073  1FDD  0087               	movwf	7
  6074  1FDE  082A               	movf	??_setLog_Code,w
  6075  1FDF  0081               	movwf	1
  6076                           
  6077                           ;RF_Control_B1.c: 262: setBuz(1,100);
  6078  1FE0  3064               	movlw	100
  6079  1FE1  00A6               	movwf	setBuz@time
  6080  1FE2  3000               	movlw	0
  6081  1FE3  00A7               	movwf	setBuz@time+1
  6082  1FE4  3001               	movlw	1
  6083  1FE5  3195  2565  319F   	fcall	_setBuz
  6084                           
  6085                           ;RF_Control_B1.c: 263: RF->Learn=0;
  6086  1FE8  087A               	movf	_RF,w
  6087  1FE9  0086               	movwf	6
  6088  1FEA  0187               	clrf	7
  6089  1FEB  1301               	bcf	1,6
  6090                           
  6091                           ;RF_Control_B1.c: 264: if(TMain->First)
  6092  1FEC  087D               	movf	_TMain,w
  6093  1FED  3E03               	addlw	3
  6094  1FEE  0086               	movwf	6
  6095  1FEF  3001               	movlw	1	; select bank2/3
  6096  1FF0  0087               	movwf	7
  6097  1FF1  1C81               	btfss	1,1
  6098  1FF2  2FF9               	goto	l2068
  6099                           
  6100                           ;RF_Control_B1.c: 265: {
  6101                           ;RF_Control_B1.c: 266: Memory->LoopSave=1;
  6102  1FF3  087C               	movf	_Memory,w
  6103  1FF4  3E22               	addlw	34
  6104  1FF5  0086               	movwf	6
  6105  1FF6  3001               	movlw	1	; select bank2/3
  6106  1FF7  0087               	movwf	7
  6107  1FF8  1501               	bsf	1,2
  6108  1FF9                     l2068:	
  6109                           
  6110                           ;RF_Control_B1.c: 267: }
  6111                           ;RF_Control_B1.c: 268: Memory->Modify=1;
  6112  1FF9  087C               	movf	_Memory,w
  6113  1FFA  3E22               	addlw	34
  6114  1FFB  0086               	movwf	6
  6115  1FFC  3001               	movlw	1	; select bank2/3
  6116  1FFD  0087               	movwf	7
  6117  1FFE  1401               	bsf	1,0
  6118  1FFF  0008               	return
  6119  2000                     __end_of_setLog_Code:	
  6120                           
  6121                           	psect	text18
  6122  0838                     __ptext18:	
  6123 ;; *************** function _setControl_Lights_Table *****************
  6124 ;; Defined at:
  6125 ;;		line 271 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  rf              1    wreg     unsigned char 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  rf              1   71[BANK0 ] unsigned char 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;		None               void
  6132 ;; Registers used:
  6133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;Total ram usage:        1 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:   10
  6146 ;; This function calls:
  6147 ;;		_RfPointSelect
  6148 ;;		_setBuz
  6149 ;;		_setDimmerLights
  6150 ;;		_setRFSW_AdjControl
  6151 ;;		_setRFSW_Control
  6152 ;;		_setRFSW_Status
  6153 ;;		_setSw_Status
  6154 ;;		_setTxData
  6155 ;; This function is called by:
  6156 ;;		_getRxData
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           
  6161                           ;psect for function _setControl_Lights_Table
  6162  0838                     _setControl_Lights_Table:	
  6163                           
  6164                           ;incstack = 0
  6165                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6166                           ;setControl_Lights_Table@rf stored from wreg
  6167  0838  0020               	movlb	0	; select bank0
  6168  0839  00E7               	movwf	setControl_Lights_Table@rf
  6169                           
  6170                           ;RF_Control_B1.c: 273: RfPointSelect(rf);
  6171  083A  0867               	movf	setControl_Lights_Table@rf,w
  6172  083B  31A6  26D9  3188   	fcall	_RfPointSelect
  6173                           
  6174                           ;RF_Control_B1.c: 274: if(RF_Data[15] == 0x00)
  6175  083E  0021               	movlb	1	; select bank1
  6176  083F  08AF               	movf	(_RF_Data^(0+128)+15),f
  6177  0840  1D03               	skipz
  6178  0841  288B               	goto	l8331
  6179                           
  6180                           ;RF_Control_B1.c: 275: {
  6181                           ;RF_Control_B1.c: 277: setDimmerLights(1,0);
  6182  0842  0020               	movlb	0	; select bank0
  6183  0843  01A4               	clrf	setDimmerLights@status
  6184  0844  3001               	movlw	1
  6185  0845  3189  2161  3188   	fcall	_setDimmerLights
  6186                           
  6187                           ;RF_Control_B1.c: 278: setRFSW_Status(1,0);
  6188  0848  0020               	movlb	0	; select bank0
  6189  0849  01A2               	clrf	setRFSW_Status@command
  6190  084A  3001               	movlw	1
  6191  084B  31A7  2792  3188   	fcall	_setRFSW_Status
  6192                           
  6193                           ;RF_Control_B1.c: 279: setSw_Status(1,0);
  6194  084E  0020               	movlb	0	; select bank0
  6195  084F  01A2               	clrf	setSw_Status@command
  6196  0850  3001               	movlw	1
  6197  0851  31A7  27A1  3188   	fcall	_setSw_Status
  6198                           
  6199                           ;RF_Control_B1.c: 282: setDimmerLights(2,0);
  6200  0854  0020               	movlb	0	; select bank0
  6201  0855  01A4               	clrf	setDimmerLights@status
  6202  0856  3002               	movlw	2
  6203  0857  3189  2161  3188   	fcall	_setDimmerLights
  6204                           
  6205                           ;RF_Control_B1.c: 283: setRFSW_Status(2,0);
  6206  085A  0020               	movlb	0	; select bank0
  6207  085B  01A2               	clrf	setRFSW_Status@command
  6208  085C  3002               	movlw	2
  6209  085D  31A7  2792  3188   	fcall	_setRFSW_Status
  6210                           
  6211                           ;RF_Control_B1.c: 284: setSw_Status(2,0);
  6212  0860  0020               	movlb	0	; select bank0
  6213  0861  01A2               	clrf	setSw_Status@command
  6214  0862  3002               	movlw	2
  6215  0863  31A7  27A1  3188   	fcall	_setSw_Status
  6216                           
  6217                           ;RF_Control_B1.c: 292: Product->Data[9]=0;
  6218  0866  0020               	movlb	0	; select bank0
  6219  0867  086F               	movf	_Product,w
  6220  0868  3E09               	addlw	9
  6221  0869  0086               	movwf	6
  6222  086A  3001               	movlw	1	; select bank2/3
  6223  086B  0087               	movwf	7
  6224  086C  0181               	clrf	1
  6225                           
  6226                           ;RF_Control_B1.c: 293: Product->Data[11]=0;
  6227  086D  086F               	movf	_Product,w
  6228  086E  3E0B               	addlw	11
  6229  086F  0086               	movwf	6
  6230  0870  3001               	movlw	1	; select bank2/3
  6231  0871  0087               	movwf	7
  6232  0872  0181               	clrf	1
  6233                           
  6234                           ;RF_Control_B1.c: 294: Product->Data[15]=0;
  6235  0873  086F               	movf	_Product,w
  6236  0874  3E0F               	addlw	15
  6237  0875  0086               	movwf	6
  6238  0876  3001               	movlw	1	; select bank2/3
  6239  0877  0087               	movwf	7
  6240  0878  0181               	clrf	1
  6241                           
  6242                           ;RF_Control_B1.c: 295: Product->Data[17]=0;
  6243  0879  086F               	movf	_Product,w
  6244  087A  3E11               	addlw	17
  6245  087B  0086               	movwf	6
  6246  087C  3001               	movlw	1	; select bank2/3
  6247  087D  0087               	movwf	7
  6248  087E  0181               	clrf	1
  6249                           
  6250                           ;RF_Control_B1.c: 296: setBuz(1,100);
  6251  087F  3064               	movlw	100
  6252  0880  00A6               	movwf	setBuz@time
  6253  0881  3000               	movlw	0
  6254  0882  00A7               	movwf	setBuz@time+1
  6255  0883  3001               	movlw	1
  6256  0884  3195  2565  3188   	fcall	_setBuz
  6257                           
  6258                           ;RF_Control_B1.c: 297: setTxData(1);
  6259  0887  3001               	movlw	1
  6260  0888  318B  23FF         	fcall	_setTxData
  6261                           
  6262                           ;RF_Control_B1.c: 298: }
  6263  088A  0008               	return
  6264  088B                     l8331:	
  6265                           
  6266                           ;RF_Control_B1.c: 299: else if(RF_Data[15] == 0x20)
  6267  088B  0021               	movlb	1	; select bank1
  6268  088C  082F               	movf	(_RF_Data^(0+128)+15),w
  6269  088D  3A20               	xorlw	32
  6270  088E  1D03               	skipz
  6271  088F  28A7               	goto	l8337
  6272                           
  6273                           ;RF_Control_B1.c: 300: {
  6274                           ;RF_Control_B1.c: 301: Product->Data[9]=0;
  6275  0890  0020               	movlb	0	; select bank0
  6276  0891  086F               	movf	_Product,w
  6277  0892  3E09               	addlw	9
  6278  0893  0086               	movwf	6
  6279  0894  3001               	movlw	1	; select bank2/3
  6280  0895  0087               	movwf	7
  6281  0896  0181               	clrf	1
  6282                           
  6283                           ;RF_Control_B1.c: 302: Product->Data[11]=0;
  6284  0897  086F               	movf	_Product,w
  6285  0898  3E0B               	addlw	11
  6286  0899  0086               	movwf	6
  6287  089A  3001               	movlw	1	; select bank2/3
  6288  089B  0087               	movwf	7
  6289  089C  0181               	clrf	1
  6290                           
  6291                           ;RF_Control_B1.c: 303: Product->Data[17]=0;
  6292  089D  086F               	movf	_Product,w
  6293  089E  3E11               	addlw	17
  6294  089F  0086               	movwf	6
  6295  08A0  3001               	movlw	1	; select bank2/3
  6296  08A1  0087               	movwf	7
  6297  08A2  0181               	clrf	1
  6298                           
  6299                           ;RF_Control_B1.c: 304: setTxData(1);
  6300  08A3  3001               	movlw	1
  6301  08A4  318B  23FF         	fcall	_setTxData
  6302                           
  6303                           ;RF_Control_B1.c: 305: }
  6304  08A6  0008               	return
  6305  08A7                     l8337:	
  6306                           
  6307                           ;RF_Control_B1.c: 307: else if(RF_Data[15] == 0x01)
  6308  08A7  0021               	movlb	1	; select bank1
  6309  08A8  082F               	movf	(_RF_Data^(0+128)+15),w
  6310  08A9  3A01               	xorlw	1
  6311  08AA  1D03               	skipz
  6312  08AB  28B0               	goto	l8341
  6313                           
  6314                           ;RF_Control_B1.c: 308: {
  6315                           ;RF_Control_B1.c: 309: setRFSW_Control(1);
  6316  08AC  3001               	movlw	1
  6317  08AD  3197  2770         	fcall	_setRFSW_Control
  6318                           
  6319                           ;RF_Control_B1.c: 310: }
  6320  08AF  0008               	return
  6321  08B0                     l8341:	
  6322                           
  6323                           ;RF_Control_B1.c: 312: else if(RF_Data[15] == 0x11)
  6324  08B0  0021               	movlb	1	; select bank1
  6325  08B1  082F               	movf	(_RF_Data^(0+128)+15),w
  6326  08B2  3A11               	xorlw	17
  6327  08B3  1D03               	skipz
  6328  08B4  28B9               	goto	l8345
  6329                           
  6330                           ;RF_Control_B1.c: 313: {
  6331                           ;RF_Control_B1.c: 314: setRFSW_AdjControl(1);
  6332  08B5  3001               	movlw	1
  6333  08B6  319E  2625         	fcall	_setRFSW_AdjControl
  6334                           
  6335                           ;RF_Control_B1.c: 315: }
  6336  08B8  0008               	return
  6337  08B9                     l8345:	
  6338                           
  6339                           ;RF_Control_B1.c: 320: else if(RF_Data[15] == 0x02)
  6340  08B9  0021               	movlb	1	; select bank1
  6341  08BA  082F               	movf	(_RF_Data^(0+128)+15),w
  6342  08BB  3A02               	xorlw	2
  6343  08BC  1D03               	skipz
  6344  08BD  28C2               	goto	l8349
  6345                           
  6346                           ;RF_Control_B1.c: 321: {
  6347                           ;RF_Control_B1.c: 322: setRFSW_Control(2);
  6348  08BE  3002               	movlw	2
  6349  08BF  3197  2770         	fcall	_setRFSW_Control
  6350                           
  6351                           ;RF_Control_B1.c: 323: }
  6352  08C1  0008               	return
  6353  08C2                     l8349:	
  6354                           
  6355                           ;RF_Control_B1.c: 325: else if(RF_Data[15] == 0x21)
  6356  08C2  0021               	movlb	1	; select bank1
  6357  08C3  082F               	movf	(_RF_Data^(0+128)+15),w
  6358  08C4  3A21               	xorlw	33
  6359  08C5  1D03               	skipz
  6360  08C6  0008               	return
  6361                           
  6362                           ;RF_Control_B1.c: 326: {
  6363                           ;RF_Control_B1.c: 327: setRFSW_AdjControl(2);
  6364  08C7  3002               	movlw	2
  6365  08C8  319E  2625         	fcall	_setRFSW_AdjControl
  6366  08CA  0008               	return
  6367  08CB                     __end_of_setControl_Lights_Table:	
  6368                           
  6369                           	psect	text19
  6370  1770                     __ptext19:	
  6371 ;; *************** function _setRFSW_Control *****************
  6372 ;; Defined at:
  6373 ;;		line 368 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  sw              1    wreg     unsigned char 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  sw              1   67[BANK0 ] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;		None               void
  6380 ;; Registers used:
  6381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;Total ram usage:        2 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    8
  6394 ;; This function calls:
  6395 ;;		_RfSWPointSelect
  6396 ;;		_setBuz
  6397 ;;		_setDelayOff_GO
  6398 ;;		_setDimmerLights_Switch
  6399 ;;		_setDimmerLights_Trigger
  6400 ;;		_setRF_DimmerLights
  6401 ;;		_setSw_Status
  6402 ;;		_setTxData
  6403 ;; This function is called by:
  6404 ;;		_setControl_Lights_Table
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           
  6409                           ;psect for function _setRFSW_Control
  6410  1770                     _setRFSW_Control:	
  6411                           
  6412                           ;incstack = 0
  6413                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6414                           ;setRFSW_Control@sw stored from wreg
  6415  1770  0020               	movlb	0	; select bank0
  6416  1771  00E3               	movwf	setRFSW_Control@sw
  6417                           
  6418                           ;RF_Control_B1.c: 370: RfSWPointSelect(sw);
  6419  1772  0863               	movf	setRFSW_Control@sw,w
  6420  1773  3199  212A  3197   	fcall	_RfSWPointSelect
  6421                           
  6422                           ;RF_Control_B1.c: 371: if(!RFSW->Status)
  6423  1776  0021               	movlb	1	; select bank1
  6424  1777  083C               	movf	_RFSW^(0+128),w
  6425  1778  0086               	movwf	6
  6426  1779  0187               	clrf	7
  6427  177A  1801               	btfsc	1,0
  6428  177B  2FB1               	goto	l8241
  6429                           
  6430                           ;RF_Control_B1.c: 372: {
  6431                           ;RF_Control_B1.c: 373: if(RF_Data[16] == 0x80)
  6432  177C  0830               	movf	(_RF_Data^(0+128)+16),w
  6433  177D  3A80               	xorlw	128
  6434  177E  1D03               	skipz
  6435  177F  2F8D               	goto	l8231
  6436                           
  6437                           ;RF_Control_B1.c: 374: {
  6438                           ;RF_Control_B1.c: 375: setDelayOff_GO(sw,1,RF_Data[17]);
  6439  1780  0020               	movlb	0	; select bank0
  6440  1781  01A3               	clrf	setDelayOff_GO@command
  6441  1782  0AA3               	incf	setDelayOff_GO@command,f
  6442  1783  0021               	movlb	1	; select bank1
  6443  1784  0831               	movf	(_RF_Data^(0+128)+17),w
  6444  1785  0020               	movlb	0	; select bank0
  6445  1786  00E2               	movwf	??_setRFSW_Control
  6446  1787  0862               	movf	??_setRFSW_Control,w
  6447  1788  00A4               	movwf	setDelayOff_GO@value
  6448  1789  0863               	movf	setRFSW_Control@sw,w
  6449  178A  3191  215C  3197   	fcall	_setDelayOff_GO
  6450  178D                     l8231:	
  6451                           
  6452                           ;RF_Control_B1.c: 376: }
  6453                           ;RF_Control_B1.c: 377: RFSW->Status=1;
  6454  178D  0021               	movlb	1	; select bank1
  6455  178E  083C               	movf	_RFSW^(0+128),w
  6456  178F  0086               	movwf	6
  6457  1790  0187               	clrf	7
  6458  1791  1401               	bsf	1,0
  6459                           
  6460                           ;RF_Control_B1.c: 378: setSw_Status(sw,1);
  6461  1792  0020               	movlb	0	; select bank0
  6462  1793  01A2               	clrf	setSw_Status@command
  6463  1794  0AA2               	incf	setSw_Status@command,f
  6464  1795  0863               	movf	setRFSW_Control@sw,w
  6465  1796  31A7  27A1  3197   	fcall	_setSw_Status
  6466                           
  6467                           ;RF_Control_B1.c: 380: setDimmerLights_Trigger(sw,1);
  6468  1799  0020               	movlb	0	; select bank0
  6469  179A  01A2               	clrf	setDimmerLights_Trigger@command
  6470  179B  0AA2               	incf	setDimmerLights_Trigger@command,f
  6471  179C  0863               	movf	setRFSW_Control@sw,w
  6472  179D  31A7  27D0  3197   	fcall	_setDimmerLights_Trigger
  6473                           
  6474                           ;RF_Control_B1.c: 381: setDimmerLights_Switch(sw,1);
  6475  17A0  0020               	movlb	0	; select bank0
  6476  17A1  01A2               	clrf	setDimmerLights_Switch@command
  6477  17A2  0AA2               	incf	setDimmerLights_Switch@command,f
  6478  17A3  0863               	movf	setRFSW_Control@sw,w
  6479  17A4  31A7  27C0  3197   	fcall	_setDimmerLights_Switch
  6480                           
  6481                           ;RF_Control_B1.c: 383: setRF_DimmerLights(sw,RFSW->Status);
  6482  17A7  0021               	movlb	1	; select bank1
  6483  17A8  083C               	movf	_RFSW^(0+128),w
  6484  17A9  0086               	movwf	6
  6485  17AA  0187               	clrf	7
  6486  17AB  3000               	movlw	0
  6487  17AC  1801               	btfsc	1,0
  6488  17AD  3001               	movlw	1
  6489  17AE  0020               	movlb	0	; select bank0
  6490  17AF  00DD               	movwf	setRF_DimmerLights@on
  6491  17B0  2FEF               	goto	L4
  6492  17B1                     l8241:	
  6493                           ;RF_Control_B1.c: 384: }
  6494                           
  6495                           
  6496                           ;RF_Control_B1.c: 385: else
  6497                           ;RF_Control_B1.c: 386: {
  6498                           ;RF_Control_B1.c: 387: if(RF_Data[16] == 0x80)
  6499  17B1  0021               	movlb	1	; select bank1
  6500  17B2  0830               	movf	(_RF_Data^(0+128)+16),w
  6501  17B3  3A80               	xorlw	128
  6502  17B4  1D03               	skipz
  6503  17B5  2FC7               	goto	l8245
  6504                           
  6505                           ;RF_Control_B1.c: 388: {
  6506                           ;RF_Control_B1.c: 389: setDelayOff_GO(sw,1,RF_Data[17]);
  6507  17B6  0020               	movlb	0	; select bank0
  6508  17B7  01A3               	clrf	setDelayOff_GO@command
  6509  17B8  0AA3               	incf	setDelayOff_GO@command,f
  6510  17B9  0021               	movlb	1	; select bank1
  6511  17BA  0831               	movf	(_RF_Data^(0+128)+17),w
  6512  17BB  0020               	movlb	0	; select bank0
  6513  17BC  00E2               	movwf	??_setRFSW_Control
  6514  17BD  0862               	movf	??_setRFSW_Control,w
  6515  17BE  00A4               	movwf	setDelayOff_GO@value
  6516  17BF  0863               	movf	setRFSW_Control@sw,w
  6517  17C0  3191  215C  3197   	fcall	_setDelayOff_GO
  6518                           
  6519                           ;RF_Control_B1.c: 390: setRF_DimmerLights(sw,1);
  6520  17C3  0020               	movlb	0	; select bank0
  6521  17C4  01DD               	clrf	setRF_DimmerLights@on
  6522  17C5  0ADD               	incf	setRF_DimmerLights@on,f
  6523  17C6  2FEF               	goto	L4
  6524  17C7                     l8245:	
  6525                           ;RF_Control_B1.c: 391: }
  6526                           
  6527                           
  6528                           ;RF_Control_B1.c: 392: else
  6529                           ;RF_Control_B1.c: 393: {
  6530                           ;RF_Control_B1.c: 394: RFSW->Status=0;
  6531  17C7  0021               	movlb	1	; select bank1
  6532  17C8  083C               	movf	_RFSW^(0+128),w
  6533  17C9  0086               	movwf	6
  6534  17CA  0187               	clrf	7
  6535  17CB  1001               	bcf	1,0
  6536                           
  6537                           ;RF_Control_B1.c: 395: setSw_Status(sw,0);
  6538  17CC  0020               	movlb	0	; select bank0
  6539  17CD  01A2               	clrf	setSw_Status@command
  6540  17CE  0863               	movf	setRFSW_Control@sw,w
  6541  17CF  31A7  27A1  3197   	fcall	_setSw_Status
  6542                           
  6543                           ;RF_Control_B1.c: 397: setDimmerLights_Trigger(sw,1);
  6544  17D2  0020               	movlb	0	; select bank0
  6545  17D3  01A2               	clrf	setDimmerLights_Trigger@command
  6546  17D4  0AA2               	incf	setDimmerLights_Trigger@command,f
  6547  17D5  0863               	movf	setRFSW_Control@sw,w
  6548  17D6  31A7  27D0  3197   	fcall	_setDimmerLights_Trigger
  6549                           
  6550                           ;RF_Control_B1.c: 398: setDimmerLights_Switch(sw,RFSW->Status);
  6551  17D9  0021               	movlb	1	; select bank1
  6552  17DA  083C               	movf	_RFSW^(0+128),w
  6553  17DB  0086               	movwf	6
  6554  17DC  0187               	clrf	7
  6555  17DD  3000               	movlw	0
  6556  17DE  1801               	btfsc	1,0
  6557  17DF  3001               	movlw	1
  6558  17E0  0020               	movlb	0	; select bank0
  6559  17E1  00A2               	movwf	setDimmerLights_Switch@command
  6560  17E2  0863               	movf	setRFSW_Control@sw,w
  6561  17E3  31A7  27C0  3197   	fcall	_setDimmerLights_Switch
  6562                           
  6563                           ;RF_Control_B1.c: 400: setDelayOff_GO(sw,0,0);
  6564  17E6  0020               	movlb	0	; select bank0
  6565  17E7  01A3               	clrf	setDelayOff_GO@command
  6566  17E8  01A4               	clrf	setDelayOff_GO@value
  6567  17E9  0863               	movf	setRFSW_Control@sw,w
  6568  17EA  3191  215C  3197   	fcall	_setDelayOff_GO
  6569                           
  6570                           ;RF_Control_B1.c: 401: setRF_DimmerLights(sw,0);
  6571  17ED  0020               	movlb	0	; select bank0
  6572  17EE  01DD               	clrf	setRF_DimmerLights@on
  6573  17EF                     L4:	
  6574  17EF  0863               	movf	setRFSW_Control@sw,w
  6575  17F0  3193  23A4  3197   	fcall	_setRF_DimmerLights
  6576                           
  6577                           ;RF_Control_B1.c: 402: }
  6578                           ;RF_Control_B1.c: 403: }
  6579                           ;RF_Control_B1.c: 404: setBuz(1,100);
  6580  17F3  3064               	movlw	100
  6581  17F4  0020               	movlb	0	; select bank0
  6582  17F5  00A6               	movwf	setBuz@time
  6583  17F6  3000               	movlw	0
  6584  17F7  00A7               	movwf	setBuz@time+1
  6585  17F8  3001               	movlw	1
  6586  17F9  3195  2565  3197   	fcall	_setBuz
  6587                           
  6588                           ;RF_Control_B1.c: 405: setTxData(1);
  6589  17FC  3001               	movlw	1
  6590  17FD  318B  23FF         	fcall	_setTxData
  6591  17FF  0008               	return
  6592  1800                     __end_of_setRFSW_Control:	
  6593                           
  6594                           	psect	text20
  6595  115C                     __ptext20:	
  6596 ;; *************** function _setDelayOff_GO *****************
  6597 ;; Defined at:
  6598 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  sw              1    wreg     unsigned char 
  6601 ;;  command         1    3[BANK0 ] unsigned char 
  6602 ;;  value           1    4[BANK0 ] unsigned char 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  sw              1    7[BANK0 ] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;		None               void
  6607 ;; Registers used:
  6608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;Total ram usage:        5 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    5
  6621 ;; This function calls:
  6622 ;;		_DelayOffPointSelect
  6623 ;;		_DelayTimejudge
  6624 ;; This function is called by:
  6625 ;;		_setRFSW_Control
  6626 ;;		_Sw_DimmerOffFunc
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           
  6631                           ;psect for function _setDelayOff_GO
  6632  115C                     _setDelayOff_GO:	
  6633                           
  6634                           ;incstack = 0
  6635                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6636                           ;setDelayOff_GO@sw stored from wreg
  6637  115C  0020               	movlb	0	; select bank0
  6638  115D  00A7               	movwf	setDelayOff_GO@sw
  6639                           
  6640                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  6641  115E  0827               	movf	setDelayOff_GO@sw,w
  6642  115F  3199  216C  3191   	fcall	_DelayOffPointSelect
  6643                           
  6644                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  6645  1162  0021               	movlb	1	; select bank1
  6646  1163  0838               	movf	_DelayOff^(0+128),w
  6647  1164  0086               	movwf	6
  6648  1165  0187               	clrf	7
  6649  1166  1C01               	btfss	1,0
  6650  1167  0008               	return
  6651                           
  6652                           ;DelayOff_B1.c: 96: {
  6653                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  6654  1168  0838               	movf	_DelayOff^(0+128),w
  6655  1169  0086               	movwf	6
  6656  116A  0187               	clrf	7
  6657  116B  0020               	movlb	0	; select bank0
  6658  116C  0823               	movf	setDelayOff_GO@command,w
  6659  116D  1081               	bcf	1,1
  6660  116E  1D03               	skipz
  6661  116F  1481               	bsf	1,1
  6662                           
  6663                           ;DelayOff_B1.c: 98: if(command)
  6664  1170  0823               	movf	setDelayOff_GO@command,w
  6665  1171  1903               	btfsc	3,2
  6666  1172  299E               	goto	l6133
  6667                           
  6668                           ;DelayOff_B1.c: 99: {
  6669                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  6670  1173  0824               	movf	setDelayOff_GO@value,w
  6671  1174  319C  248F  3191   	fcall	_DelayTimejudge
  6672  1177  0020               	movlb	0	; select bank0
  6673  1178  00A5               	movwf	??_setDelayOff_GO
  6674  1179  0021               	movlb	1	; select bank1
  6675  117A  0A38               	incf	_DelayOff^(0+128),w
  6676  117B  0086               	movwf	6
  6677  117C  0187               	clrf	7
  6678  117D  0020               	movlb	0	; select bank0
  6679  117E  0825               	movf	??_setDelayOff_GO,w
  6680  117F  0081               	movwf	1
  6681                           
  6682                           ;DelayOff_B1.c: 101: if(((value%16)==5 || !(value%16)) && value <= 0x25)
  6683  1180  300F               	movlw	15
  6684  1181  0524               	andwf	setDelayOff_GO@value,w
  6685  1182  00A5               	movwf	??_setDelayOff_GO
  6686  1183  0825               	movf	??_setDelayOff_GO,w
  6687  1184  3A05               	xorlw	5
  6688  1185  1903               	skipnz
  6689  1186  298B               	goto	l6127
  6690  1187  0824               	movf	setDelayOff_GO@value,w
  6691  1188  390F               	andlw	15
  6692  1189  1D03               	btfss	3,2
  6693  118A  2991               	goto	l6131
  6694  118B                     l6127:	
  6695  118B  3026               	movlw	38
  6696  118C  0224               	subwf	setDelayOff_GO@value,w
  6697  118D  1803               	skipnc
  6698  118E  2991               	goto	l6131
  6699                           
  6700                           ;DelayOff_B1.c: 102: {
  6701                           ;DelayOff_B1.c: 103: Product->Data[26+sw]=value;
  6702  118F  0824               	movf	setDelayOff_GO@value,w
  6703  1190  2992               	goto	L5
  6704  1191                     l6131:	
  6705                           ;DelayOff_B1.c: 104: }
  6706                           
  6707                           
  6708                           ;DelayOff_B1.c: 105: else
  6709                           ;DelayOff_B1.c: 106: {
  6710                           ;DelayOff_B1.c: 107: Product->Data[26+sw]=0x05;
  6711  1191  3005               	movlw	5
  6712  1192                     L5:	
  6713  1192  00A5               	movwf	??_setDelayOff_GO
  6714  1193  0827               	movf	setDelayOff_GO@sw,w
  6715  1194  3E1A               	addlw	26
  6716  1195  076F               	addwf	_Product,w
  6717  1196  00A6               	movwf	??_setDelayOff_GO+1
  6718  1197  0826               	movf	??_setDelayOff_GO+1,w
  6719  1198  0086               	movwf	6
  6720  1199  3001               	movlw	1	; select bank2/3
  6721  119A  0087               	movwf	7
  6722  119B  0825               	movf	??_setDelayOff_GO,w
  6723  119C  0081               	movwf	1
  6724                           
  6725                           ;DelayOff_B1.c: 108: }
  6726                           ;DelayOff_B1.c: 109: }
  6727  119D  29AA               	goto	l6137
  6728  119E                     l6133:	
  6729                           
  6730                           ;DelayOff_B1.c: 110: else if(!command)
  6731  119E  08A3               	movf	setDelayOff_GO@command,f
  6732  119F  1D03               	skipz
  6733  11A0  29AA               	goto	l6137
  6734                           
  6735                           ;DelayOff_B1.c: 111: {
  6736                           ;DelayOff_B1.c: 112: Product->Data[sw+26]=0;
  6737  11A1  0827               	movf	setDelayOff_GO@sw,w
  6738  11A2  3E1A               	addlw	26
  6739  11A3  076F               	addwf	_Product,w
  6740  11A4  00A5               	movwf	??_setDelayOff_GO
  6741  11A5  0825               	movf	??_setDelayOff_GO,w
  6742  11A6  0086               	movwf	6
  6743  11A7  3001               	movlw	1	; select bank2/3
  6744  11A8  0087               	movwf	7
  6745  11A9  0181               	clrf	1
  6746  11AA                     l6137:	
  6747                           
  6748                           ;DelayOff_B1.c: 113: }
  6749                           ;DelayOff_B1.c: 114: DelayOff->SecondTime=0;
  6750  11AA  0021               	movlb	1	; select bank1
  6751  11AB  0838               	movf	_DelayOff^(0+128),w
  6752  11AC  3E02               	addlw	2
  6753  11AD  0086               	movwf	6
  6754  11AE  0187               	clrf	7
  6755  11AF  3000               	movlw	0
  6756  11B0  3FC0               	movwi [0]fsr1
  6757  11B1  3FC1               	movwi [1]fsr1
  6758                           
  6759                           ;DelayOff_B1.c: 115: DelayOff->MinuteTime=0;
  6760  11B2  0838               	movf	_DelayOff^(0+128),w
  6761  11B3  3E04               	addlw	4
  6762  11B4  0086               	movwf	6
  6763  11B5  0187               	clrf	7
  6764  11B6  0181               	clrf	1
  6765  11B7  0008               	return
  6766  11B8                     __end_of_setDelayOff_GO:	
  6767                           
  6768                           	psect	text21
  6769  1C8F                     __ptext21:	
  6770 ;; *************** function _DelayTimejudge *****************
  6771 ;; Defined at:
  6772 ;;		line 119 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  value           1    wreg     unsigned char 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  value           1    2[BANK0 ] unsigned char 
  6777 ;;  i               1    1[BANK0 ] unsigned char 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  1    wreg      unsigned char 
  6780 ;; Registers used:
  6781 ;;		wreg
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;Total ram usage:        3 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    4
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_setDelayOff_GO
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           
  6802                           ;psect for function _DelayTimejudge
  6803  1C8F                     _DelayTimejudge:	
  6804                           
  6805                           ;incstack = 0
  6806                           ; Regs used in _DelayTimejudge: [wreg]
  6807                           ;DelayTimejudge@value stored from wreg
  6808  1C8F  0020               	movlb	0	; select bank0
  6809  1C90  00A2               	movwf	DelayTimejudge@value
  6810                           
  6811                           ;DelayOff_B1.c: 121: char i=5;
  6812  1C91  3005               	movlw	5
  6813  1C92  00A0               	movwf	??_DelayTimejudge
  6814  1C93  0820               	movf	??_DelayTimejudge,w
  6815  1C94  00A1               	movwf	DelayTimejudge@i
  6816                           
  6817                           ;DelayOff_B1.c: 122: if(value == 0x05)
  6818  1C95  0822               	movf	DelayTimejudge@value,w
  6819  1C96  3A05               	xorlw	5
  6820  1C97  1D03               	skipz
  6821  1C98  2C9B               	goto	l5977
  6822                           
  6823                           ;DelayOff_B1.c: 123: {
  6824                           ;DelayOff_B1.c: 124: i=5;
  6825  1C99  3005               	movlw	5
  6826  1C9A  2CB8               	goto	L10
  6827  1C9B                     l5977:	
  6828                           ;DelayOff_B1.c: 125: }
  6829                           
  6830                           
  6831                           ;DelayOff_B1.c: 126: else if(value == 0x10)
  6832  1C9B  0822               	movf	DelayTimejudge@value,w
  6833  1C9C  3A10               	xorlw	16
  6834  1C9D  1D03               	skipz
  6835  1C9E  2CA1               	goto	l5981
  6836                           
  6837                           ;DelayOff_B1.c: 127: {
  6838                           ;DelayOff_B1.c: 128: i=10;
  6839  1C9F  300A               	movlw	10
  6840  1CA0  2CB8               	goto	L10
  6841  1CA1                     l5981:	
  6842                           ;DelayOff_B1.c: 129: }
  6843                           
  6844                           
  6845                           ;DelayOff_B1.c: 130: else if(value == 0x15)
  6846  1CA1  0822               	movf	DelayTimejudge@value,w
  6847  1CA2  3A15               	xorlw	21
  6848  1CA3  1D03               	skipz
  6849  1CA4  2CA7               	goto	l5985
  6850                           
  6851                           ;DelayOff_B1.c: 131: {
  6852                           ;DelayOff_B1.c: 132: i=15;
  6853  1CA5  300F               	movlw	15
  6854  1CA6  2CB8               	goto	L10
  6855  1CA7                     l5985:	
  6856                           ;DelayOff_B1.c: 133: }
  6857                           
  6858                           
  6859                           ;DelayOff_B1.c: 134: else if(value == 0x20)
  6860  1CA7  0822               	movf	DelayTimejudge@value,w
  6861  1CA8  3A20               	xorlw	32
  6862  1CA9  1D03               	skipz
  6863  1CAA  2CAD               	goto	l5989
  6864                           
  6865                           ;DelayOff_B1.c: 135: {
  6866                           ;DelayOff_B1.c: 136: i=20;
  6867  1CAB  3014               	movlw	20
  6868  1CAC  2CB8               	goto	L10
  6869  1CAD                     l5989:	
  6870                           ;DelayOff_B1.c: 137: }
  6871                           
  6872                           
  6873                           ;DelayOff_B1.c: 138: else if(value == 0x25)
  6874  1CAD  0822               	movf	DelayTimejudge@value,w
  6875  1CAE  3A25               	xorlw	37
  6876  1CAF  1D03               	skipz
  6877  1CB0  2CB3               	goto	l5993
  6878                           
  6879                           ;DelayOff_B1.c: 139: {
  6880                           ;DelayOff_B1.c: 140: i=25;
  6881  1CB1  3019               	movlw	25
  6882  1CB2  2CB8               	goto	L10
  6883  1CB3                     l5993:	
  6884                           ;DelayOff_B1.c: 141: }
  6885                           
  6886                           
  6887                           ;DelayOff_B1.c: 142: else if(value == 0x30)
  6888  1CB3  0822               	movf	DelayTimejudge@value,w
  6889  1CB4  3A30               	xorlw	48
  6890  1CB5  1D03               	skipz
  6891  1CB6  2CBB               	goto	l674
  6892                           
  6893                           ;DelayOff_B1.c: 143: {
  6894                           ;DelayOff_B1.c: 144: i=30;
  6895  1CB7  301E               	movlw	30
  6896  1CB8                     L10:	
  6897  1CB8  00A0               	movwf	??_DelayTimejudge
  6898  1CB9  0820               	movf	??_DelayTimejudge,w
  6899  1CBA  00A1               	movwf	DelayTimejudge@i
  6900  1CBB                     l674:	
  6901                           
  6902                           ;DelayOff_B1.c: 145: }
  6903                           ;DelayOff_B1.c: 146: return i;
  6904  1CBB  0821               	movf	DelayTimejudge@i,w
  6905  1CBC  0008               	return
  6906  1CBD                     __end_of_DelayTimejudge:	
  6907                           
  6908                           	psect	text22
  6909  1E25                     __ptext22:	
  6910 ;; *************** function _setRFSW_AdjControl *****************
  6911 ;; Defined at:
  6912 ;;		line 408 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  sw              1    wreg     unsigned char 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  sw              1   70[BANK0 ] unsigned char 
  6917 ;; Return value:  Size  Location     Type
  6918 ;;		None               void
  6919 ;; Registers used:
  6920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6929 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6930 ;;Total ram usage:        3 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    9
  6933 ;; This function calls:
  6934 ;;		_RfSWPointSelect
  6935 ;;		_setRF_DimmerValue
  6936 ;;		_setTxData
  6937 ;; This function is called by:
  6938 ;;		_setControl_Lights_Table
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           
  6943                           ;psect for function _setRFSW_AdjControl
  6944  1E25                     _setRFSW_AdjControl:	
  6945                           
  6946                           ;incstack = 0
  6947                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6948                           ;setRFSW_AdjControl@sw stored from wreg
  6949  1E25  0020               	movlb	0	; select bank0
  6950  1E26  00E6               	movwf	setRFSW_AdjControl@sw
  6951                           
  6952                           ;RF_Control_B1.c: 410: RfSWPointSelect(sw);
  6953  1E27  0866               	movf	setRFSW_AdjControl@sw,w
  6954  1E28  3199  212A  319E   	fcall	_RfSWPointSelect
  6955                           
  6956                           ;RF_Control_B1.c: 411: if(RFSW->Status)
  6957  1E2B  0021               	movlb	1	; select bank1
  6958  1E2C  083C               	movf	_RFSW^(0+128),w
  6959  1E2D  0086               	movwf	6
  6960  1E2E  0187               	clrf	7
  6961  1E2F  1C01               	btfss	1,0
  6962  1E30  2E3D               	goto	l6351
  6963                           
  6964                           ;RF_Control_B1.c: 412: {
  6965                           ;RF_Control_B1.c: 413: Memory->Modify=1;
  6966  1E31  087C               	movf	_Memory,w
  6967  1E32  3E22               	addlw	34
  6968  1E33  0086               	movwf	6
  6969  1E34  3001               	movlw	1	; select bank2/3
  6970  1E35  0087               	movwf	7
  6971  1E36  1401               	bsf	1,0
  6972                           
  6973                           ;RF_Control_B1.c: 414: setRF_DimmerValue(sw);
  6974  1E37  0020               	movlb	0	; select bank0
  6975  1E38  0866               	movf	setRFSW_AdjControl@sw,w
  6976  1E39  319D  25B0  319E   	fcall	_setRF_DimmerValue
  6977                           
  6978                           ;RF_Control_B1.c: 415: }
  6979  1E3C  2E4F               	goto	l2100
  6980  1E3D                     l6351:	
  6981                           
  6982                           ;RF_Control_B1.c: 416: else
  6983                           ;RF_Control_B1.c: 417: {
  6984                           ;RF_Control_B1.c: 418: Product->Data[9]=Product->Data[20+sw];
  6985  1E3D  0020               	movlb	0	; select bank0
  6986  1E3E  0866               	movf	setRFSW_AdjControl@sw,w
  6987  1E3F  3E14               	addlw	20
  6988  1E40  076F               	addwf	_Product,w
  6989  1E41  00E4               	movwf	??_setRFSW_AdjControl
  6990  1E42  0864               	movf	??_setRFSW_AdjControl,w
  6991  1E43  0086               	movwf	6
  6992  1E44  3001               	movlw	1	; select bank2/3
  6993  1E45  0087               	movwf	7
  6994  1E46  0801               	movf	1,w
  6995  1E47  00E5               	movwf	??_setRFSW_AdjControl+1
  6996  1E48  086F               	movf	_Product,w
  6997  1E49  3E09               	addlw	9
  6998  1E4A  0086               	movwf	6
  6999  1E4B  3001               	movlw	1	; select bank2/3
  7000  1E4C  0087               	movwf	7
  7001  1E4D  0865               	movf	??_setRFSW_AdjControl+1,w
  7002  1E4E  0081               	movwf	1
  7003  1E4F                     l2100:	
  7004                           
  7005                           ;RF_Control_B1.c: 419: }
  7006                           ;RF_Control_B1.c: 420: Product->Data[17]=Product->Data[26+sw];
  7007  1E4F  0020               	movlb	0	; select bank0
  7008  1E50  0866               	movf	setRFSW_AdjControl@sw,w
  7009  1E51  3E1A               	addlw	26
  7010  1E52  076F               	addwf	_Product,w
  7011  1E53  00E4               	movwf	??_setRFSW_AdjControl
  7012  1E54  0864               	movf	??_setRFSW_AdjControl,w
  7013  1E55  0086               	movwf	6
  7014  1E56  3001               	movlw	1	; select bank2/3
  7015  1E57  0087               	movwf	7
  7016  1E58  0801               	movf	1,w
  7017  1E59  00E5               	movwf	??_setRFSW_AdjControl+1
  7018  1E5A  086F               	movf	_Product,w
  7019  1E5B  3E11               	addlw	17
  7020  1E5C  0086               	movwf	6
  7021  1E5D  3001               	movlw	1	; select bank2/3
  7022  1E5E  0087               	movwf	7
  7023  1E5F  0865               	movf	??_setRFSW_AdjControl+1,w
  7024  1E60  0081               	movwf	1
  7025                           
  7026                           ;RF_Control_B1.c: 421: setTxData(1);
  7027  1E61  3001               	movlw	1
  7028  1E62  318B  23FF         	fcall	_setTxData
  7029  1E64  0008               	return
  7030  1E65                     __end_of_setRFSW_AdjControl:	
  7031                           
  7032                           	psect	text23
  7033  1DB0                     __ptext23:	
  7034 ;; *************** function _setRF_DimmerValue *****************
  7035 ;; Defined at:
  7036 ;;		line 432 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;  lights          1    wreg     unsigned char 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;  lights          1   67[BANK0 ] unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;		None               void
  7043 ;; Registers used:
  7044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7054 ;;Total ram usage:        3 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    8
  7057 ;; This function calls:
  7058 ;;		_setDimmerLights_AdjRF
  7059 ;; This function is called by:
  7060 ;;		_setRFSW_AdjControl
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           
  7065                           ;psect for function _setRF_DimmerValue
  7066  1DB0                     _setRF_DimmerValue:	
  7067                           
  7068                           ;incstack = 0
  7069                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7070                           ;setRF_DimmerValue@lights stored from wreg
  7071  1DB0  0020               	movlb	0	; select bank0
  7072  1DB1  00E3               	movwf	setRF_DimmerValue@lights
  7073                           
  7074                           ;RF_Control_B1.c: 434: if(RF_Data[9] > 0x64)
  7075  1DB2  3065               	movlw	101
  7076  1DB3  0021               	movlb	1	; select bank1
  7077  1DB4  0229               	subwf	(_RF_Data^(0+128)+9),w
  7078  1DB5  1C03               	skipc
  7079  1DB6  2DBD               	goto	l6217
  7080                           
  7081                           ;RF_Control_B1.c: 435: {
  7082                           ;RF_Control_B1.c: 436: RF_Data[9]=0x64;
  7083  1DB7  3064               	movlw	100
  7084  1DB8  0020               	movlb	0	; select bank0
  7085  1DB9  00E1               	movwf	??_setRF_DimmerValue
  7086  1DBA  0861               	movf	??_setRF_DimmerValue,w
  7087  1DBB  0021               	movlb	1	; select bank1
  7088  1DBC  00A9               	movwf	(_RF_Data^(0+128)+9)
  7089  1DBD                     l6217:	
  7090                           
  7091                           ;RF_Control_B1.c: 437: }
  7092                           ;RF_Control_B1.c: 438: Product->Data[9]=RF_Data[9];
  7093  1DBD  0829               	movf	(_RF_Data^(0+128)+9),w
  7094  1DBE  0020               	movlb	0	; select bank0
  7095  1DBF  00E1               	movwf	??_setRF_DimmerValue
  7096  1DC0  086F               	movf	_Product,w
  7097  1DC1  3E09               	addlw	9
  7098  1DC2  0086               	movwf	6
  7099  1DC3  3001               	movlw	1	; select bank2/3
  7100  1DC4  0087               	movwf	7
  7101  1DC5  0861               	movf	??_setRF_DimmerValue,w
  7102  1DC6  0081               	movwf	1
  7103                           
  7104                           ;RF_Control_B1.c: 439: Product->Data[11]=lights;
  7105  1DC7  0863               	movf	setRF_DimmerValue@lights,w
  7106  1DC8  00E1               	movwf	??_setRF_DimmerValue
  7107  1DC9  086F               	movf	_Product,w
  7108  1DCA  3E0B               	addlw	11
  7109  1DCB  0086               	movwf	6
  7110  1DCC  3001               	movlw	1	; select bank2/3
  7111  1DCD  0087               	movwf	7
  7112  1DCE  0861               	movf	??_setRF_DimmerValue,w
  7113  1DCF  0081               	movwf	1
  7114                           
  7115                           ;RF_Control_B1.c: 440: Product->Data[(20+lights)]=Product->Data[9];
  7116  1DD0  086F               	movf	_Product,w
  7117  1DD1  3E09               	addlw	9
  7118  1DD2  0086               	movwf	6
  7119  1DD3  3001               	movlw	1	; select bank2/3
  7120  1DD4  0087               	movwf	7
  7121  1DD5  0801               	movf	1,w
  7122  1DD6  00E1               	movwf	??_setRF_DimmerValue
  7123  1DD7  0863               	movf	setRF_DimmerValue@lights,w
  7124  1DD8  3E14               	addlw	20
  7125  1DD9  076F               	addwf	_Product,w
  7126  1DDA  00E2               	movwf	??_setRF_DimmerValue+1
  7127  1DDB  0862               	movf	??_setRF_DimmerValue+1,w
  7128  1DDC  0086               	movwf	6
  7129  1DDD  3001               	movlw	1	; select bank2/3
  7130  1DDE  0087               	movwf	7
  7131  1DDF  0861               	movf	??_setRF_DimmerValue,w
  7132  1DE0  0081               	movwf	1
  7133                           
  7134                           ;RF_Control_B1.c: 441: setDimmerLights_AdjRF(lights);
  7135  1DE1  0863               	movf	setRF_DimmerValue@lights,w
  7136  1DE2  319B  234D         	fcall	_setDimmerLights_AdjRF
  7137  1DE4  0008               	return
  7138  1DE5                     __end_of_setRF_DimmerValue:	
  7139                           
  7140                           	psect	text24
  7141  1B4D                     __ptext24:	
  7142 ;; *************** function _setDimmerLights_AdjRF *****************
  7143 ;; Defined at:
  7144 ;;		line 423 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  lights          1    wreg     unsigned char 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  lights          1   64[BANK0 ] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;		None               void
  7151 ;; Registers used:
  7152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;Total ram usage:        2 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    7
  7165 ;; This function calls:
  7166 ;;		_DimmerLightsPointSelect
  7167 ;;		_getPercentValue
  7168 ;; This function is called by:
  7169 ;;		_setRF_DimmerValue
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           
  7174                           ;psect for function _setDimmerLights_AdjRF
  7175  1B4D                     _setDimmerLights_AdjRF:	
  7176                           
  7177                           ;incstack = 0
  7178                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7179                           ;setDimmerLights_AdjRF@lights stored from wreg
  7180  1B4D  0020               	movlb	0	; select bank0
  7181  1B4E  00E0               	movwf	setDimmerLights_AdjRF@lights
  7182                           
  7183                           ;Dimmer_B1.c: 425: DimmerLightsPointSelect(lights);
  7184  1B4F  0860               	movf	setDimmerLights_AdjRF@lights,w
  7185  1B50  3198  20D5  319B   	fcall	_DimmerLightsPointSelect
  7186                           
  7187                           ;Dimmer_B1.c: 426: DimmerLights->AdjRF=1;
  7188  1B53  0020               	movlb	0	; select bank0
  7189  1B54  086C               	movf	_DimmerLights,w
  7190  1B55  0086               	movwf	6
  7191  1B56  3001               	movlw	1	; select bank2/3
  7192  1B57  0087               	movwf	7
  7193  1B58  1501               	bsf	1,2
  7194                           
  7195                           ;Dimmer_B1.c: 427: DimmerLights->Signal=1;
  7196  1B59  086C               	movf	_DimmerLights,w
  7197  1B5A  0086               	movwf	6
  7198  1B5B  3001               	movlw	1	; select bank2/3
  7199  1B5C  0087               	movwf	7
  7200  1B5D  1481               	bsf	1,1
  7201                           
  7202                           ;Dimmer_B1.c: 428: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  7203  1B5E  086F               	movf	_Product,w
  7204  1B5F  3E09               	addlw	9
  7205  1B60  0086               	movwf	6
  7206  1B61  3001               	movlw	1	; select bank2/3
  7207  1B62  0087               	movwf	7
  7208  1B63  0801               	movf	1,w
  7209  1B64  3191  2101         	fcall	_getPercentValue
  7210  1B66  0020               	movlb	0	; select bank0
  7211  1B67  00DF               	movwf	??_setDimmerLights_AdjRF
  7212  1B68  086C               	movf	_DimmerLights,w
  7213  1B69  3E05               	addlw	5
  7214  1B6A  0086               	movwf	6
  7215  1B6B  3001               	movlw	1	; select bank2/3
  7216  1B6C  0087               	movwf	7
  7217  1B6D  085F               	movf	??_setDimmerLights_AdjRF,w
  7218  1B6E  0081               	movwf	1
  7219  1B6F  0008               	return
  7220  1B70                     __end_of_setDimmerLights_AdjRF:	
  7221                           
  7222                           	psect	text25
  7223  1101                     __ptext25:	
  7224 ;; *************** function _getPercentValue *****************
  7225 ;; Defined at:
  7226 ;;		line 490 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  value           1    wreg     unsigned char 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  value           1   59[BANK0 ] unsigned char 
  7231 ;;  i               3   60[BANK0 ] float 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      unsigned char 
  7234 ;; Registers used:
  7235 ;;		wreg, status,2, status,0, pclath, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;Total ram usage:        6 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; Hardware stack levels required when called:    6
  7248 ;; This function calls:
  7249 ;;		___awtoft
  7250 ;;		___ftadd
  7251 ;;		___ftdiv
  7252 ;;		___ftmul
  7253 ;;		___fttol
  7254 ;; This function is called by:
  7255 ;;		_setDimmerLights_AdjRF
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           
  7260                           ;psect for function _getPercentValue
  7261  1101                     _getPercentValue:	
  7262                           
  7263                           ;incstack = 0
  7264                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
  7265                           ;getPercentValue@value stored from wreg
  7266  1101  0020               	movlb	0	; select bank0
  7267  1102  00DB               	movwf	getPercentValue@value
  7268                           
  7269                           ;Dimmer_B1.c: 499: float i=((char)(65*1.5))-((char)(20*1.5));
  7270  1103  3000               	movlw	0
  7271  1104  00DC               	movwf	getPercentValue@i
  7272  1105  3086               	movlw	134
  7273  1106  00DD               	movwf	getPercentValue@i+1
  7274  1107  3042               	movlw	66
  7275  1108  00DE               	movwf	getPercentValue@i+2
  7276                           
  7277                           ;Dimmer_B1.c: 500: i/=100;
  7278  1109  3000               	movlw	0
  7279  110A  00AE               	movwf	___ftdiv@f2
  7280  110B  30C8               	movlw	200
  7281  110C  00AF               	movwf	___ftdiv@f2+1
  7282  110D  3042               	movlw	66
  7283  110E  00B0               	movwf	___ftdiv@f2+2
  7284  110F  085C               	movf	getPercentValue@i,w
  7285  1110  00B1               	movwf	___ftdiv@f1
  7286  1111  085D               	movf	getPercentValue@i+1,w
  7287  1112  00B2               	movwf	___ftdiv@f1+1
  7288  1113  085E               	movf	getPercentValue@i+2,w
  7289  1114  00B3               	movwf	___ftdiv@f1+2
  7290  1115  318A  22A2  3191   	fcall	___ftdiv
  7291  1118  0020               	movlb	0	; select bank0
  7292  1119  082E               	movf	?___ftdiv,w
  7293  111A  00DC               	movwf	getPercentValue@i
  7294  111B  082F               	movf	?___ftdiv+1,w
  7295  111C  00DD               	movwf	getPercentValue@i+1
  7296  111D  0830               	movf	?___ftdiv+2,w
  7297  111E  00DE               	movwf	getPercentValue@i+2
  7298                           
  7299                           ;Dimmer_B1.c: 501: return (char)(((100-value)*i)+((char)(65*1.5)));
  7300  111F  085B               	movf	getPercentValue@value,w
  7301  1120  00D9               	movwf	??_getPercentValue
  7302  1121  01DA               	clrf	??_getPercentValue+1
  7303  1122  09D9               	comf	??_getPercentValue,f
  7304  1123  09DA               	comf	??_getPercentValue+1,f
  7305  1124  0AD9               	incf	??_getPercentValue,f
  7306  1125  1903               	skipnz
  7307  1126  0ADA               	incf	??_getPercentValue+1,f
  7308  1127  0859               	movf	??_getPercentValue,w
  7309  1128  3E64               	addlw	100
  7310  1129  00A8               	movwf	___awtoft@c
  7311  112A  3000               	movlw	0
  7312  112B  3D5A               	addwfc	??_getPercentValue+1,w
  7313  112C  00A9               	movwf	___awtoft@c+1
  7314  112D  319A  22E7  3191   	fcall	___awtoft
  7315  1130  0020               	movlb	0	; select bank0
  7316  1131  0828               	movf	?___awtoft,w
  7317  1132  00B1               	movwf	___ftmul@f2
  7318  1133  0829               	movf	?___awtoft+1,w
  7319  1134  00B2               	movwf	___ftmul@f2+1
  7320  1135  082A               	movf	?___awtoft+2,w
  7321  1136  00B3               	movwf	___ftmul@f2+2
  7322  1137  085C               	movf	getPercentValue@i,w
  7323  1138  00AE               	movwf	___ftmul@f1
  7324  1139  085D               	movf	getPercentValue@i+1,w
  7325  113A  00AF               	movwf	___ftmul@f1+1
  7326  113B  085E               	movf	getPercentValue@i+2,w
  7327  113C  00B0               	movwf	___ftmul@f1+2
  7328  113D  318B  234B  3191   	fcall	___ftmul
  7329  1140  0020               	movlb	0	; select bank0
  7330  1141  082E               	movf	?___ftmul,w
  7331  1142  00C1               	movwf	___ftadd@f2
  7332  1143  082F               	movf	?___ftmul+1,w
  7333  1144  00C2               	movwf	___ftadd@f2+1
  7334  1145  0830               	movf	?___ftmul+2,w
  7335  1146  00C3               	movwf	___ftadd@f2+2
  7336  1147  3000               	movlw	0
  7337  1148  00BE               	movwf	___ftadd@f1
  7338  1149  30C2               	movlw	194
  7339  114A  00BF               	movwf	___ftadd@f1+1
  7340  114B  3042               	movlw	66
  7341  114C  00C0               	movwf	___ftadd@f1+2
  7342  114D  318D  25B0  3191   	fcall	___ftadd
  7343  1150  0020               	movlb	0	; select bank0
  7344  1151  083E               	movf	?___ftadd,w
  7345  1152  00CB               	movwf	___fttol@f1
  7346  1153  083F               	movf	?___ftadd+1,w
  7347  1154  00CC               	movwf	___fttol@f1+1
  7348  1155  0840               	movf	?___ftadd+2,w
  7349  1156  00CD               	movwf	___fttol@f1+2
  7350  1157  3196  2661         	fcall	___fttol
  7351  1159  0020               	movlb	0	; select bank0
  7352  115A  084B               	movf	?___fttol,w
  7353  115B  0008               	return
  7354  115C                     __end_of_getPercentValue:	
  7355                           
  7356                           	psect	text26
  7357  0B4B                     __ptext26:	
  7358 ;; *************** function ___ftmul *****************
  7359 ;; Defined at:
  7360 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  f1              3   14[BANK0 ] float 
  7363 ;;  f2              3   17[BANK0 ] float 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  7366 ;;  sign            1   29[BANK0 ] unsigned char 
  7367 ;;  cntr            1   28[BANK0 ] unsigned char 
  7368 ;;  exp             1   24[BANK0 ] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  3   14[BANK0 ] float 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0, pclath, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7378 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7381 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7382 ;;Total ram usage:       16 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    5
  7385 ;; This function calls:
  7386 ;;		___ftpack
  7387 ;; This function is called by:
  7388 ;;		_getPercentValue
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           
  7393                           ;psect for function ___ftmul
  7394  0B4B                     ___ftmul:	
  7395                           
  7396                           ;incstack = 0
  7397                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7398  0B4B  0020               	movlb	0	; select bank0
  7399  0B4C  082E               	movf	___ftmul@f1,w
  7400  0B4D  00B4               	movwf	??___ftmul
  7401  0B4E  082F               	movf	___ftmul@f1+1,w
  7402  0B4F  00B5               	movwf	??___ftmul+1
  7403  0B50  0830               	movf	___ftmul@f1+2,w
  7404  0B51  00B6               	movwf	??___ftmul+2
  7405  0B52  1003               	clrc
  7406  0B53  0D35               	rlf	??___ftmul+1,w
  7407  0B54  0D36               	rlf	??___ftmul+2,w
  7408  0B55  00B7               	movwf	??___ftmul+3
  7409  0B56  0837               	movf	??___ftmul+3,w
  7410  0B57  00B8               	movwf	___ftmul@exp
  7411  0B58  08B8               	movf	___ftmul@exp,f
  7412  0B59  1D03               	skipz
  7413  0B5A  2B62               	goto	l5859
  7414  0B5B  3000               	movlw	0
  7415  0B5C  00AE               	movwf	?___ftmul
  7416  0B5D  3000               	movlw	0
  7417  0B5E  00AF               	movwf	?___ftmul+1
  7418  0B5F  3000               	movlw	0
  7419  0B60  00B0               	movwf	?___ftmul+2
  7420  0B61  0008               	return
  7421  0B62                     l5859:	
  7422  0B62  0831               	movf	___ftmul@f2,w
  7423  0B63  00B4               	movwf	??___ftmul
  7424  0B64  0832               	movf	___ftmul@f2+1,w
  7425  0B65  00B5               	movwf	??___ftmul+1
  7426  0B66  0833               	movf	___ftmul@f2+2,w
  7427  0B67  00B6               	movwf	??___ftmul+2
  7428  0B68  1003               	clrc
  7429  0B69  0D35               	rlf	??___ftmul+1,w
  7430  0B6A  0D36               	rlf	??___ftmul+2,w
  7431  0B6B  00B7               	movwf	??___ftmul+3
  7432  0B6C  0837               	movf	??___ftmul+3,w
  7433  0B6D  00BD               	movwf	___ftmul@sign
  7434  0B6E  08BD               	movf	___ftmul@sign,f
  7435  0B6F  1D03               	skipz
  7436  0B70  2B78               	goto	l5865
  7437  0B71  3000               	movlw	0
  7438  0B72  00AE               	movwf	?___ftmul
  7439  0B73  3000               	movlw	0
  7440  0B74  00AF               	movwf	?___ftmul+1
  7441  0B75  3000               	movlw	0
  7442  0B76  00B0               	movwf	?___ftmul+2
  7443  0B77  0008               	return
  7444  0B78                     l5865:	
  7445  0B78  083D               	movf	___ftmul@sign,w
  7446  0B79  3E7B               	addlw	123
  7447  0B7A  00B4               	movwf	??___ftmul
  7448  0B7B  0834               	movf	??___ftmul,w
  7449  0B7C  07B8               	addwf	___ftmul@exp,f
  7450  0B7D  082E               	movf	___ftmul@f1,w
  7451  0B7E  00B4               	movwf	??___ftmul
  7452  0B7F  082F               	movf	___ftmul@f1+1,w
  7453  0B80  00B5               	movwf	??___ftmul+1
  7454  0B81  0830               	movf	___ftmul@f1+2,w
  7455  0B82  00B6               	movwf	??___ftmul+2
  7456  0B83  3010               	movlw	16
  7457  0B84                     u4225:	
  7458  0B84  36B6               	lsrf	??___ftmul+2,f
  7459  0B85  0CB5               	rrf	??___ftmul+1,f
  7460  0B86  0CB4               	rrf	??___ftmul,f
  7461  0B87  0B89               	decfsz	9,f
  7462  0B88  2B84               	goto	u4225
  7463  0B89  0834               	movf	??___ftmul,w
  7464  0B8A  00B7               	movwf	??___ftmul+3
  7465  0B8B  0837               	movf	??___ftmul+3,w
  7466  0B8C  00BD               	movwf	___ftmul@sign
  7467  0B8D  0831               	movf	___ftmul@f2,w
  7468  0B8E  00B4               	movwf	??___ftmul
  7469  0B8F  0832               	movf	___ftmul@f2+1,w
  7470  0B90  00B5               	movwf	??___ftmul+1
  7471  0B91  0833               	movf	___ftmul@f2+2,w
  7472  0B92  00B6               	movwf	??___ftmul+2
  7473  0B93  3010               	movlw	16
  7474  0B94                     u4235:	
  7475  0B94  36B6               	lsrf	??___ftmul+2,f
  7476  0B95  0CB5               	rrf	??___ftmul+1,f
  7477  0B96  0CB4               	rrf	??___ftmul,f
  7478  0B97  0B89               	decfsz	9,f
  7479  0B98  2B94               	goto	u4235
  7480  0B99  0834               	movf	??___ftmul,w
  7481  0B9A  00B7               	movwf	??___ftmul+3
  7482  0B9B  0837               	movf	??___ftmul+3,w
  7483  0B9C  06BD               	xorwf	___ftmul@sign,f
  7484  0B9D  3080               	movlw	128
  7485  0B9E  00B4               	movwf	??___ftmul
  7486  0B9F  0834               	movf	??___ftmul,w
  7487  0BA0  05BD               	andwf	___ftmul@sign,f
  7488  0BA1  17AF               	bsf	___ftmul@f1+1,7
  7489  0BA2  17B2               	bsf	___ftmul@f2+1,7
  7490  0BA3  30FF               	movlw	255
  7491  0BA4  05B1               	andwf	___ftmul@f2,f
  7492  0BA5  30FF               	movlw	255
  7493  0BA6  05B2               	andwf	___ftmul@f2+1,f
  7494  0BA7  3000               	movlw	0
  7495  0BA8  05B3               	andwf	___ftmul@f2+2,f
  7496  0BA9  3000               	movlw	0
  7497  0BAA  00B9               	movwf	___ftmul@f3_as_product
  7498  0BAB  3000               	movlw	0
  7499  0BAC  00BA               	movwf	___ftmul@f3_as_product+1
  7500  0BAD  3000               	movlw	0
  7501  0BAE  00BB               	movwf	___ftmul@f3_as_product+2
  7502  0BAF  3007               	movlw	7
  7503  0BB0  00B4               	movwf	??___ftmul
  7504  0BB1  0834               	movf	??___ftmul,w
  7505  0BB2  00BC               	movwf	___ftmul@cntr
  7506  0BB3                     l5877:	
  7507  0BB3  1C2E               	btfss	___ftmul@f1,0
  7508  0BB4  2BBB               	goto	l5881
  7509  0BB5  0831               	movf	___ftmul@f2,w
  7510  0BB6  07B9               	addwf	___ftmul@f3_as_product,f
  7511  0BB7  0832               	movf	___ftmul@f2+1,w
  7512  0BB8  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  7513  0BB9  0833               	movf	___ftmul@f2+2,w
  7514  0BBA  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  7515  0BBB                     l5881:	
  7516  0BBB  3001               	movlw	1
  7517  0BBC                     u4255:	
  7518  0BBC  36B0               	lsrf	___ftmul@f1+2,f
  7519  0BBD  0CAF               	rrf	___ftmul@f1+1,f
  7520  0BBE  0CAE               	rrf	___ftmul@f1,f
  7521  0BBF  0B89               	decfsz	9,f
  7522  0BC0  2BBC               	goto	u4255
  7523  0BC1  3001               	movlw	1
  7524  0BC2                     u4265:	
  7525  0BC2  35B1               	lslf	___ftmul@f2,f
  7526  0BC3  0DB2               	rlf	___ftmul@f2+1,f
  7527  0BC4  0DB3               	rlf	___ftmul@f2+2,f
  7528  0BC5  0B89               	decfsz	9,f
  7529  0BC6  2BC2               	goto	u4265
  7530  0BC7  3001               	movlw	1
  7531  0BC8  02BC               	subwf	___ftmul@cntr,f
  7532  0BC9  1D03               	btfss	3,2
  7533  0BCA  2BB3               	goto	l5877
  7534  0BCB  3009               	movlw	9
  7535  0BCC  00B4               	movwf	??___ftmul
  7536  0BCD  0834               	movf	??___ftmul,w
  7537  0BCE  00BC               	movwf	___ftmul@cntr
  7538  0BCF                     l5889:	
  7539  0BCF  1C2E               	btfss	___ftmul@f1,0
  7540  0BD0  2BD7               	goto	l5893
  7541  0BD1  0831               	movf	___ftmul@f2,w
  7542  0BD2  07B9               	addwf	___ftmul@f3_as_product,f
  7543  0BD3  0832               	movf	___ftmul@f2+1,w
  7544  0BD4  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  7545  0BD5  0833               	movf	___ftmul@f2+2,w
  7546  0BD6  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  7547  0BD7                     l5893:	
  7548  0BD7  3001               	movlw	1
  7549  0BD8                     u4295:	
  7550  0BD8  36B0               	lsrf	___ftmul@f1+2,f
  7551  0BD9  0CAF               	rrf	___ftmul@f1+1,f
  7552  0BDA  0CAE               	rrf	___ftmul@f1,f
  7553  0BDB  0B89               	decfsz	9,f
  7554  0BDC  2BD8               	goto	u4295
  7555  0BDD  3001               	movlw	1
  7556  0BDE                     u4305:	
  7557  0BDE  36BB               	lsrf	___ftmul@f3_as_product+2,f
  7558  0BDF  0CBA               	rrf	___ftmul@f3_as_product+1,f
  7559  0BE0  0CB9               	rrf	___ftmul@f3_as_product,f
  7560  0BE1  0B89               	decfsz	9,f
  7561  0BE2  2BDE               	goto	u4305
  7562  0BE3  3001               	movlw	1
  7563  0BE4  02BC               	subwf	___ftmul@cntr,f
  7564  0BE5  1D03               	btfss	3,2
  7565  0BE6  2BCF               	goto	l5889
  7566  0BE7  0839               	movf	___ftmul@f3_as_product,w
  7567  0BE8  00A0               	movwf	___ftpack@arg
  7568  0BE9  083A               	movf	___ftmul@f3_as_product+1,w
  7569  0BEA  00A1               	movwf	___ftpack@arg+1
  7570  0BEB  083B               	movf	___ftmul@f3_as_product+2,w
  7571  0BEC  00A2               	movwf	___ftpack@arg+2
  7572  0BED  0838               	movf	___ftmul@exp,w
  7573  0BEE  00B4               	movwf	??___ftmul
  7574  0BEF  0834               	movf	??___ftmul,w
  7575  0BF0  00A3               	movwf	___ftpack@exp
  7576  0BF1  083D               	movf	___ftmul@sign,w
  7577  0BF2  00B5               	movwf	??___ftmul+1
  7578  0BF3  0835               	movf	??___ftmul+1,w
  7579  0BF4  00A4               	movwf	___ftpack@sign
  7580  0BF5  3192  2216         	fcall	___ftpack
  7581  0BF7  0020               	movlb	0	; select bank0
  7582  0BF8  0820               	movf	?___ftpack,w
  7583  0BF9  00AE               	movwf	?___ftmul
  7584  0BFA  0821               	movf	?___ftpack+1,w
  7585  0BFB  00AF               	movwf	?___ftmul+1
  7586  0BFC  0822               	movf	?___ftpack+2,w
  7587  0BFD  00B0               	movwf	?___ftmul+2
  7588  0BFE  0008               	return
  7589  0BFF                     __end_of___ftmul:	
  7590                           
  7591                           	psect	text27
  7592  0DB0                     __ptext27:	
  7593 ;; *************** function ___ftadd *****************
  7594 ;; Defined at:
  7595 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  f1              3   30[BANK0 ] float 
  7598 ;;  f2              3   33[BANK0 ] float 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  exp1            1   42[BANK0 ] unsigned char 
  7601 ;;  exp2            1   41[BANK0 ] unsigned char 
  7602 ;;  sign            1   40[BANK0 ] unsigned char 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  3   30[BANK0 ] float 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0, pclath, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7615 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;Total ram usage:       13 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    5
  7619 ;; This function calls:
  7620 ;;		___ftpack
  7621 ;; This function is called by:
  7622 ;;		_getPercentValue
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           
  7627                           ;psect for function ___ftadd
  7628  0DB0                     ___ftadd:	
  7629                           
  7630                           ;incstack = 0
  7631                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7632  0DB0  0020               	movlb	0	; select bank0
  7633  0DB1  083E               	movf	___ftadd@f1,w
  7634  0DB2  00C4               	movwf	??___ftadd
  7635  0DB3  083F               	movf	___ftadd@f1+1,w
  7636  0DB4  00C5               	movwf	??___ftadd+1
  7637  0DB5  0840               	movf	___ftadd@f1+2,w
  7638  0DB6  00C6               	movwf	??___ftadd+2
  7639  0DB7  1003               	clrc
  7640  0DB8  0D45               	rlf	??___ftadd+1,w
  7641  0DB9  0D46               	rlf	??___ftadd+2,w
  7642  0DBA  00C7               	movwf	??___ftadd+3
  7643  0DBB  0847               	movf	??___ftadd+3,w
  7644  0DBC  00CA               	movwf	___ftadd@exp1
  7645  0DBD  0841               	movf	___ftadd@f2,w
  7646  0DBE  00C4               	movwf	??___ftadd
  7647  0DBF  0842               	movf	___ftadd@f2+1,w
  7648  0DC0  00C5               	movwf	??___ftadd+1
  7649  0DC1  0843               	movf	___ftadd@f2+2,w
  7650  0DC2  00C6               	movwf	??___ftadd+2
  7651  0DC3  1003               	clrc
  7652  0DC4  0D45               	rlf	??___ftadd+1,w
  7653  0DC5  0D46               	rlf	??___ftadd+2,w
  7654  0DC6  00C7               	movwf	??___ftadd+3
  7655  0DC7  0847               	movf	??___ftadd+3,w
  7656  0DC8  00C9               	movwf	___ftadd@exp2
  7657  0DC9  084A               	movf	___ftadd@exp1,w
  7658  0DCA  1903               	btfsc	3,2
  7659  0DCB  2DD8               	goto	l5747
  7660  0DCC  0849               	movf	___ftadd@exp2,w
  7661  0DCD  024A               	subwf	___ftadd@exp1,w
  7662  0DCE  1803               	skipnc
  7663  0DCF  2DDF               	goto	l5751
  7664  0DD0  034A               	decf	___ftadd@exp1,w
  7665  0DD1  3AFF               	xorlw	255
  7666  0DD2  0749               	addwf	___ftadd@exp2,w
  7667  0DD3  00C4               	movwf	??___ftadd
  7668  0DD4  3019               	movlw	25
  7669  0DD5  0244               	subwf	??___ftadd,w
  7670  0DD6  1C03               	skipc
  7671  0DD7  2DDF               	goto	l5751
  7672  0DD8                     l5747:	
  7673  0DD8  0841               	movf	___ftadd@f2,w
  7674  0DD9  00BE               	movwf	?___ftadd
  7675  0DDA  0842               	movf	___ftadd@f2+1,w
  7676  0DDB  00BF               	movwf	?___ftadd+1
  7677  0DDC  0843               	movf	___ftadd@f2+2,w
  7678  0DDD  00C0               	movwf	?___ftadd+2
  7679  0DDE  0008               	return
  7680  0DDF                     l5751:	
  7681  0DDF  0849               	movf	___ftadd@exp2,w
  7682  0DE0  1903               	btfsc	3,2
  7683  0DE1  0008               	return
  7684  0DE2  084A               	movf	___ftadd@exp1,w
  7685  0DE3  0249               	subwf	___ftadd@exp2,w
  7686  0DE4  1803               	skipnc
  7687  0DE5  2DEE               	goto	l5757
  7688  0DE6  0349               	decf	___ftadd@exp2,w
  7689  0DE7  3AFF               	xorlw	255
  7690  0DE8  074A               	addwf	___ftadd@exp1,w
  7691  0DE9  00C4               	movwf	??___ftadd
  7692  0DEA  3019               	movlw	25
  7693  0DEB  0244               	subwf	??___ftadd,w
  7694  0DEC  1803               	btfsc	3,0
  7695  0DED  0008               	return
  7696  0DEE                     l5757:	
  7697  0DEE  3006               	movlw	6
  7698  0DEF  00C4               	movwf	??___ftadd
  7699  0DF0  0844               	movf	??___ftadd,w
  7700  0DF1  00C8               	movwf	___ftadd@sign
  7701  0DF2  1BC0               	btfsc	___ftadd@f1+2,7
  7702  0DF3  17C8               	bsf	___ftadd@sign,7
  7703  0DF4  1BC3               	btfsc	___ftadd@f2+2,7
  7704  0DF5  1748               	bsf	___ftadd@sign,6
  7705  0DF6  17BF               	bsf	___ftadd@f1+1,7
  7706  0DF7  30FF               	movlw	255
  7707  0DF8  05BE               	andwf	___ftadd@f1,f
  7708  0DF9  30FF               	movlw	255
  7709  0DFA  05BF               	andwf	___ftadd@f1+1,f
  7710  0DFB  3000               	movlw	0
  7711  0DFC  05C0               	andwf	___ftadd@f1+2,f
  7712  0DFD  17C2               	bsf	___ftadd@f2+1,7
  7713  0DFE  30FF               	movlw	255
  7714  0DFF  05C1               	andwf	___ftadd@f2,f
  7715  0E00  30FF               	movlw	255
  7716  0E01  05C2               	andwf	___ftadd@f2+1,f
  7717  0E02  3000               	movlw	0
  7718  0E03  05C3               	andwf	___ftadd@f2+2,f
  7719  0E04  0849               	movf	___ftadd@exp2,w
  7720  0E05  024A               	subwf	___ftadd@exp1,w
  7721  0E06  1803               	skipnc
  7722  0E07  2E2A               	goto	l5779
  7723  0E08                     l5769:	
  7724  0E08  3001               	movlw	1
  7725  0E09                     u3985:	
  7726  0E09  35C1               	lslf	___ftadd@f2,f
  7727  0E0A  0DC2               	rlf	___ftadd@f2+1,f
  7728  0E0B  0DC3               	rlf	___ftadd@f2+2,f
  7729  0E0C  0B89               	decfsz	9,f
  7730  0E0D  2E09               	goto	u3985
  7731  0E0E  3001               	movlw	1
  7732  0E0F  02C9               	subwf	___ftadd@exp2,f
  7733  0E10  0849               	movf	___ftadd@exp2,w
  7734  0E11  064A               	xorwf	___ftadd@exp1,w
  7735  0E12  1903               	skipnz
  7736  0E13  2E25               	goto	l5777
  7737  0E14  3001               	movlw	1
  7738  0E15  02C8               	subwf	___ftadd@sign,f
  7739  0E16  0848               	movf	___ftadd@sign,w
  7740  0E17  3907               	andlw	7
  7741  0E18  1903               	btfsc	3,2
  7742  0E19  2E25               	goto	l5777
  7743  0E1A  2E08               	goto	l5769
  7744  0E1B                     l5775:	
  7745  0E1B  3001               	movlw	1
  7746  0E1C                     u4015:	
  7747  0E1C  36C0               	lsrf	___ftadd@f1+2,f
  7748  0E1D  0CBF               	rrf	___ftadd@f1+1,f
  7749  0E1E  0CBE               	rrf	___ftadd@f1,f
  7750  0E1F  0B89               	decfsz	9,f
  7751  0E20  2E1C               	goto	u4015
  7752  0E21  3001               	movlw	1
  7753  0E22  00C4               	movwf	??___ftadd
  7754  0E23  0844               	movf	??___ftadd,w
  7755  0E24  07CA               	addwf	___ftadd@exp1,f
  7756  0E25                     l5777:	
  7757  0E25  084A               	movf	___ftadd@exp1,w
  7758  0E26  0649               	xorwf	___ftadd@exp2,w
  7759  0E27  1903               	btfsc	3,2
  7760  0E28  2E4F               	goto	l3142
  7761  0E29  2E1B               	goto	l5775
  7762  0E2A                     l5779:	
  7763  0E2A  084A               	movf	___ftadd@exp1,w
  7764  0E2B  0249               	subwf	___ftadd@exp2,w
  7765  0E2C  1803               	skipnc
  7766  0E2D  2E4F               	goto	l3142
  7767  0E2E                     l5781:	
  7768  0E2E  3001               	movlw	1
  7769  0E2F                     u4045:	
  7770  0E2F  35BE               	lslf	___ftadd@f1,f
  7771  0E30  0DBF               	rlf	___ftadd@f1+1,f
  7772  0E31  0DC0               	rlf	___ftadd@f1+2,f
  7773  0E32  0B89               	decfsz	9,f
  7774  0E33  2E2F               	goto	u4045
  7775  0E34  3001               	movlw	1
  7776  0E35  02CA               	subwf	___ftadd@exp1,f
  7777  0E36  0849               	movf	___ftadd@exp2,w
  7778  0E37  064A               	xorwf	___ftadd@exp1,w
  7779  0E38  1903               	skipnz
  7780  0E39  2E4B               	goto	l5789
  7781  0E3A  3001               	movlw	1
  7782  0E3B  02C8               	subwf	___ftadd@sign,f
  7783  0E3C  0848               	movf	___ftadd@sign,w
  7784  0E3D  3907               	andlw	7
  7785  0E3E  1903               	btfsc	3,2
  7786  0E3F  2E4B               	goto	l5789
  7787  0E40  2E2E               	goto	l5781
  7788  0E41                     l5787:	
  7789  0E41  3001               	movlw	1
  7790  0E42                     u4075:	
  7791  0E42  36C3               	lsrf	___ftadd@f2+2,f
  7792  0E43  0CC2               	rrf	___ftadd@f2+1,f
  7793  0E44  0CC1               	rrf	___ftadd@f2,f
  7794  0E45  0B89               	decfsz	9,f
  7795  0E46  2E42               	goto	u4075
  7796  0E47  3001               	movlw	1
  7797  0E48  00C4               	movwf	??___ftadd
  7798  0E49  0844               	movf	??___ftadd,w
  7799  0E4A  07C9               	addwf	___ftadd@exp2,f
  7800  0E4B                     l5789:	
  7801  0E4B  084A               	movf	___ftadd@exp1,w
  7802  0E4C  0649               	xorwf	___ftadd@exp2,w
  7803  0E4D  1D03               	skipz
  7804  0E4E  2E41               	goto	l5787
  7805  0E4F                     l3142:	
  7806  0E4F  1FC8               	btfss	___ftadd@sign,7
  7807  0E50  2E61               	goto	l5793
  7808  0E51  30FF               	movlw	255
  7809  0E52  06BE               	xorwf	___ftadd@f1,f
  7810  0E53  30FF               	movlw	255
  7811  0E54  06BF               	xorwf	___ftadd@f1+1,f
  7812  0E55  30FF               	movlw	255
  7813  0E56  06C0               	xorwf	___ftadd@f1+2,f
  7814  0E57  3001               	movlw	1
  7815  0E58  07BE               	addwf	___ftadd@f1,f
  7816  0E59  3000               	movlw	0
  7817  0E5A  1803               	skipnc
  7818  0E5B  3001               	movlw	1
  7819  0E5C  07BF               	addwf	___ftadd@f1+1,f
  7820  0E5D  3000               	movlw	0
  7821  0E5E  1803               	skipnc
  7822  0E5F  3001               	movlw	1
  7823  0E60  07C0               	addwf	___ftadd@f1+2,f
  7824  0E61                     l5793:	
  7825  0E61  1F48               	btfss	___ftadd@sign,6
  7826  0E62  2E73               	goto	l5797
  7827  0E63  30FF               	movlw	255
  7828  0E64  06C1               	xorwf	___ftadd@f2,f
  7829  0E65  30FF               	movlw	255
  7830  0E66  06C2               	xorwf	___ftadd@f2+1,f
  7831  0E67  30FF               	movlw	255
  7832  0E68  06C3               	xorwf	___ftadd@f2+2,f
  7833  0E69  3001               	movlw	1
  7834  0E6A  07C1               	addwf	___ftadd@f2,f
  7835  0E6B  3000               	movlw	0
  7836  0E6C  1803               	skipnc
  7837  0E6D  3001               	movlw	1
  7838  0E6E  07C2               	addwf	___ftadd@f2+1,f
  7839  0E6F  3000               	movlw	0
  7840  0E70  1803               	skipnc
  7841  0E71  3001               	movlw	1
  7842  0E72  07C3               	addwf	___ftadd@f2+2,f
  7843  0E73                     l5797:	
  7844  0E73  01C8               	clrf	___ftadd@sign
  7845  0E74  083E               	movf	___ftadd@f1,w
  7846  0E75  07C1               	addwf	___ftadd@f2,f
  7847  0E76  083F               	movf	___ftadd@f1+1,w
  7848  0E77  3DC2               	addwfc	___ftadd@f2+1,f
  7849  0E78  0840               	movf	___ftadd@f1+2,w
  7850  0E79  3DC3               	addwfc	___ftadd@f2+2,f
  7851  0E7A  1FC3               	btfss	___ftadd@f2+2,7
  7852  0E7B  2E8E               	goto	l5807
  7853  0E7C  30FF               	movlw	255
  7854  0E7D  06C1               	xorwf	___ftadd@f2,f
  7855  0E7E  30FF               	movlw	255
  7856  0E7F  06C2               	xorwf	___ftadd@f2+1,f
  7857  0E80  30FF               	movlw	255
  7858  0E81  06C3               	xorwf	___ftadd@f2+2,f
  7859  0E82  3001               	movlw	1
  7860  0E83  07C1               	addwf	___ftadd@f2,f
  7861  0E84  3000               	movlw	0
  7862  0E85  1803               	skipnc
  7863  0E86  3001               	movlw	1
  7864  0E87  07C2               	addwf	___ftadd@f2+1,f
  7865  0E88  3000               	movlw	0
  7866  0E89  1803               	skipnc
  7867  0E8A  3001               	movlw	1
  7868  0E8B  07C3               	addwf	___ftadd@f2+2,f
  7869  0E8C  01C8               	clrf	___ftadd@sign
  7870  0E8D  0AC8               	incf	___ftadd@sign,f
  7871  0E8E                     l5807:	
  7872  0E8E  0841               	movf	___ftadd@f2,w
  7873  0E8F  00A0               	movwf	___ftpack@arg
  7874  0E90  0842               	movf	___ftadd@f2+1,w
  7875  0E91  00A1               	movwf	___ftpack@arg+1
  7876  0E92  0843               	movf	___ftadd@f2+2,w
  7877  0E93  00A2               	movwf	___ftpack@arg+2
  7878  0E94  084A               	movf	___ftadd@exp1,w
  7879  0E95  00C4               	movwf	??___ftadd
  7880  0E96  0844               	movf	??___ftadd,w
  7881  0E97  00A3               	movwf	___ftpack@exp
  7882  0E98  0848               	movf	___ftadd@sign,w
  7883  0E99  00C5               	movwf	??___ftadd+1
  7884  0E9A  0845               	movf	??___ftadd+1,w
  7885  0E9B  00A4               	movwf	___ftpack@sign
  7886  0E9C  3192  2216         	fcall	___ftpack
  7887  0E9E  0020               	movlb	0	; select bank0
  7888  0E9F  0820               	movf	?___ftpack,w
  7889  0EA0  00BE               	movwf	?___ftadd
  7890  0EA1  0821               	movf	?___ftpack+1,w
  7891  0EA2  00BF               	movwf	?___ftadd+1
  7892  0EA3  0822               	movf	?___ftpack+2,w
  7893  0EA4  00C0               	movwf	?___ftadd+2
  7894  0EA5  0008               	return
  7895  0EA6                     __end_of___ftadd:	
  7896                           
  7897                           	psect	text28
  7898  1BBC                     __ptext28:	
  7899 ;; *************** function _RF_RxDisable *****************
  7900 ;; Defined at:
  7901 ;;		line 198 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  rf              1    wreg     unsigned char 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  rf              1    4[BANK0 ] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;		None               void
  7908 ;; Registers used:
  7909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;Total ram usage:        1 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    6
  7922 ;; This function calls:
  7923 ;;		_CC2500_WriteCommand
  7924 ;;		_RfPointSelect
  7925 ;;		_setINT_GO
  7926 ;; This function is called by:
  7927 ;;		_setRF_Main
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           
  7932                           ;psect for function _RF_RxDisable
  7933  1BBC                     _RF_RxDisable:	
  7934                           
  7935                           ;incstack = 0
  7936                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7937                           ;RF_RxDisable@rf stored from wreg
  7938  1BBC  0020               	movlb	0	; select bank0
  7939  1BBD  00A4               	movwf	RF_RxDisable@rf
  7940                           
  7941                           ;RF_Control_B1.c: 200: RfPointSelect(rf);
  7942  1BBE  0824               	movf	RF_RxDisable@rf,w
  7943  1BBF  31A6  26D9  319B   	fcall	_RfPointSelect
  7944                           
  7945                           ;RF_Control_B1.c: 202: if(RF->RxStatus)
  7946  1BC2  087A               	movf	_RF,w
  7947  1BC3  0086               	movwf	6
  7948  1BC4  0187               	clrf	7
  7949  1BC5  1D81               	btfss	1,3
  7950  1BC6  0008               	return
  7951                           
  7952                           ;RF_Control_B1.c: 203: {
  7953                           ;RF_Control_B1.c: 204: RF->RxStatus=0;
  7954  1BC7  087A               	movf	_RF,w
  7955  1BC8  0086               	movwf	6
  7956  1BC9  0187               	clrf	7
  7957  1BCA  1181               	bcf	1,3
  7958                           
  7959                           ;RF_Control_B1.c: 205: RF->ReceiveGO=0;
  7960  1BCB  087A               	movf	_RF,w
  7961  1BCC  0086               	movwf	6
  7962  1BCD  0187               	clrf	7
  7963  1BCE  1081               	bcf	1,1
  7964                           
  7965                           ;RF_Control_B1.c: 206: RF->DebounceTime=0;
  7966  1BCF  0A7A               	incf	_RF,w
  7967  1BD0  0086               	movwf	6
  7968  1BD1  0187               	clrf	7
  7969  1BD2  0181               	clrf	1
  7970                           
  7971                           ;RF_Control_B1.c: 207: RF->Debounce=0;
  7972  1BD3  087A               	movf	_RF,w
  7973  1BD4  0086               	movwf	6
  7974  1BD5  0187               	clrf	7
  7975  1BD6  1281               	bcf	1,5
  7976                           
  7977                           ;RF_Control_B1.c: 208: CC2500_WriteCommand(0x36);
  7978  1BD7  3036               	movlw	54
  7979  1BD8  31A7  27B0  319B   	fcall	_CC2500_WriteCommand
  7980                           
  7981                           ;RF_Control_B1.c: 209: CC2500_WriteCommand(0x3A);
  7982  1BDB  303A               	movlw	58
  7983  1BDC  31A7  27B0  319B   	fcall	_CC2500_WriteCommand
  7984                           
  7985                           ;RF_Control_B1.c: 210: setINT_GO(0);
  7986  1BDF  3000               	movlw	0
  7987  1BE0  3187  27F7         	fcall	_setINT_GO
  7988  1BE2  0008               	return
  7989  1BE3                     __end_of_RF_RxDisable:	
  7990                           
  7991                           	psect	text29
  7992  1F2F                     __ptext29:	
  7993 ;; *************** function _CC2500_TxData *****************
  7994 ;; Defined at:
  7995 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;		None
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;  loop_e          1    5[BANK0 ] unsigned char 
  8000 ;; Return value:  Size  Location     Type
  8001 ;;		None               void
  8002 ;; Registers used:
  8003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;Total ram usage:        2 bytes
  8014 ;; Hardware stack levels used:    1
  8015 ;; Hardware stack levels required when called:    6
  8016 ;; This function calls:
  8017 ;;		_CC2500_WriteByte
  8018 ;;		_CC2500_WriteCommand
  8019 ;; This function is called by:
  8020 ;;		_setRF_Main
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           
  8025                           ;psect for function _CC2500_TxData
  8026  1F2F                     _CC2500_TxData:	
  8027                           
  8028                           ;CC2500_B1.c: 32: unsigned char loop_e;
  8029                           ;CC2500_B1.c: 34: RC4=0;
  8030                           
  8031                           ;incstack = 0
  8032                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8033  1F2F  0020               	movlb	0	; select bank0
  8034  1F30  120E               	bcf	14,4	;volatile
  8035                           
  8036                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  8037  1F31  307F               	movlw	127
  8038  1F32  00A4               	movwf	??_CC2500_TxData
  8039  1F33  0824               	movf	??_CC2500_TxData,w
  8040  1F34  0021               	movlb	1	; select bank1
  8041  1F35  00BF               	movwf	_SPI0Buffer^(0+128)
  8042  1F36                     l291:	
  8043                           ;CC2500_B1.c: 36: while(RC2==1);
  8044                           
  8045  1F36  0020               	movlb	0	; select bank0
  8046  1F37  190E               	btfsc	14,2	;volatile
  8047  1F38  2F36               	goto	l291
  8048                           
  8049                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  8050  1F39  3199  219A  319F   	fcall	_CC2500_WriteByte
  8051                           
  8052                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  8053  1F3C  0021               	movlb	1	; select bank1
  8054  1F3D  0840               	movf	_Tx_Length^(0+128),w
  8055  1F3E  0020               	movlb	0	; select bank0
  8056  1F3F  00A4               	movwf	??_CC2500_TxData
  8057  1F40  0824               	movf	??_CC2500_TxData,w
  8058  1F41  0021               	movlb	1	; select bank1
  8059  1F42  00BF               	movwf	_SPI0Buffer^(0+128)
  8060                           
  8061                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  8062  1F43  3199  219A  319F   	fcall	_CC2500_WriteByte
  8063                           
  8064                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  8065  1F46  0020               	movlb	0	; select bank0
  8066  1F47  01A5               	clrf	CC2500_TxData@loop_e
  8067  1F48                     l6507:	
  8068  1F48  0021               	movlb	1	; select bank1
  8069  1F49  0840               	movf	_Tx_Length^(0+128),w
  8070  1F4A  0020               	movlb	0	; select bank0
  8071  1F4B  0225               	subwf	CC2500_TxData@loop_e,w
  8072  1F4C  1803               	btfsc	3,0
  8073  1F4D  2F60               	goto	l296
  8074                           
  8075                           ;CC2500_B1.c: 41: {
  8076                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  8077  1F4E  0825               	movf	CC2500_TxData@loop_e,w
  8078  1F4F  3EA0               	addlw	_RF_Data& (0+255)
  8079  1F50  0086               	movwf	6
  8080  1F51  0187               	clrf	7
  8081  1F52  0801               	movf	1,w
  8082  1F53  00A4               	movwf	??_CC2500_TxData
  8083  1F54  0824               	movf	??_CC2500_TxData,w
  8084  1F55  0021               	movlb	1	; select bank1
  8085  1F56  00BF               	movwf	_SPI0Buffer^(0+128)
  8086                           
  8087                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  8088  1F57  3199  219A  319F   	fcall	_CC2500_WriteByte
  8089  1F5A  3001               	movlw	1
  8090  1F5B  0020               	movlb	0	; select bank0
  8091  1F5C  00A4               	movwf	??_CC2500_TxData
  8092  1F5D  0824               	movf	??_CC2500_TxData,w
  8093  1F5E  07A5               	addwf	CC2500_TxData@loop_e,f
  8094  1F5F  2F48               	goto	l6507
  8095  1F60                     l296:	
  8096                           
  8097                           ;CC2500_B1.c: 44: }
  8098                           ;CC2500_B1.c: 45: RC4=1;
  8099  1F60  160E               	bsf	14,4	;volatile
  8100                           
  8101                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  8102  1F61  3035               	movlw	53
  8103  1F62  31A7  27B0  319F   	fcall	_CC2500_WriteCommand
  8104  1F65                     l297:	
  8105                           ;CC2500_B1.c: 47: while(RB0==0);
  8106                           
  8107  1F65  0020               	movlb	0	; select bank0
  8108  1F66  1C0D               	btfss	13,0	;volatile
  8109  1F67  2F65               	goto	l297
  8110  1F68                     l300:	
  8111                           ;CC2500_B1.c: 48: while(RB0==1);
  8112                           
  8113  1F68  180D               	btfsc	13,0	;volatile
  8114  1F69  2F68               	goto	l300
  8115                           
  8116                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  8117  1F6A  3036               	movlw	54
  8118  1F6B  31A7  27B0  319F   	fcall	_CC2500_WriteCommand
  8119                           
  8120                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  8121  1F6E  303B               	movlw	59
  8122  1F6F  31A7  27B0         	fcall	_CC2500_WriteCommand
  8123                           
  8124                           ;CC2500_B1.c: 51: Transceive_OK=1;
  8125  1F71  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  8126  1F72  0008               	return
  8127  1F73                     __end_of_CC2500_TxData:	
  8128                           
  8129                           	psect	text30
  8130  12DB                     __ptext30:	
  8131 ;; *************** function _CC2500_RxData *****************
  8132 ;; Defined at:
  8133 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;		None
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;  loop_f          1    5[BANK0 ] unsigned char 
  8138 ;; Return value:  Size  Location     Type
  8139 ;;		None               void
  8140 ;; Registers used:
  8141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;Total ram usage:        2 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; Hardware stack levels required when called:    6
  8154 ;; This function calls:
  8155 ;;		_CC2500_ReadByte
  8156 ;;		_CC2500_ReadStatus
  8157 ;;		_CC2500_WriteByte
  8158 ;;		_CC2500_WriteCommand
  8159 ;;		_setRF_RxStatus
  8160 ;; This function is called by:
  8161 ;;		_setRF_Main
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function _CC2500_RxData
  8167  12DB                     _CC2500_RxData:	
  8168                           
  8169                           ;CC2500_B1.c: 58: unsigned char loop_f;
  8170                           ;CC2500_B1.c: 62: if(RB0 == 1)
  8171                           
  8172                           ;incstack = 0
  8173                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8174  12DB  0020               	movlb	0	; select bank0
  8175  12DC  180D               	btfsc	13,0	;volatile
  8176  12DD                     l307:	
  8177                           ;CC2500_B1.c: 63: {
  8178                           ;CC2500_B1.c: 64: while(RB0 == 1);
  8179                           
  8180  12DD  180D               	btfsc	13,0	;volatile
  8181  12DE  2ADD               	goto	l307
  8182                           
  8183                           ;CC2500_B1.c: 65: }
  8184                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  8185  12DF  303B               	movlw	59
  8186  12E0  319A  2218  3192   	fcall	_CC2500_ReadStatus
  8187                           
  8188                           ;CC2500_B1.c: 67: if(s_data != 0)
  8189  12E3  0021               	movlb	1	; select bank1
  8190  12E4  0843               	movf	_s_data^(0+128),w
  8191  12E5  1903               	btfsc	3,2
  8192  12E6  2B31               	goto	l8399
  8193                           
  8194                           ;CC2500_B1.c: 69: {
  8195                           ;CC2500_B1.c: 70: RC4=0;
  8196  12E7  0020               	movlb	0	; select bank0
  8197  12E8  120E               	bcf	14,4	;volatile
  8198                           
  8199                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  8200  12E9  30FF               	movlw	255
  8201  12EA  00A4               	movwf	??_CC2500_RxData
  8202  12EB  0824               	movf	??_CC2500_RxData,w
  8203  12EC  0021               	movlb	1	; select bank1
  8204  12ED  00BF               	movwf	_SPI0Buffer^(0+128)
  8205  12EE                     l311:	
  8206                           ;CC2500_B1.c: 72: while(RC2==1);
  8207                           
  8208  12EE  0020               	movlb	0	; select bank0
  8209  12EF  190E               	btfsc	14,2	;volatile
  8210  12F0  2AEE               	goto	l311
  8211                           
  8212                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  8213  12F1  3199  219A  3192   	fcall	_CC2500_WriteByte
  8214                           
  8215                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  8216  12F4  319A  224F  3192   	fcall	_CC2500_ReadByte
  8217                           
  8218                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  8219  12F7  0021               	movlb	1	; select bank1
  8220  12F8  083F               	movf	_SPI0Buffer^(0+128),w
  8221  12F9  0020               	movlb	0	; select bank0
  8222  12FA  00A4               	movwf	??_CC2500_RxData
  8223  12FB  0824               	movf	??_CC2500_RxData,w
  8224  12FC  0021               	movlb	1	; select bank1
  8225  12FD  00BE               	movwf	_Rx_Length^(0+128)
  8226                           
  8227                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  8228  12FE  0020               	movlb	0	; select bank0
  8229  12FF  01A5               	clrf	CC2500_RxData@loop_f
  8230  1300                     l8385:	
  8231  1300  0021               	movlb	1	; select bank1
  8232  1301  083E               	movf	_Rx_Length^(0+128),w
  8233  1302  0020               	movlb	0	; select bank0
  8234  1303  0225               	subwf	CC2500_RxData@loop_f,w
  8235  1304  1803               	btfsc	3,0
  8236  1305  2B18               	goto	l8387
  8237                           
  8238                           ;CC2500_B1.c: 78: {
  8239                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  8240  1306  319A  224F  3192   	fcall	_CC2500_ReadByte
  8241                           
  8242                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  8243  1309  0021               	movlb	1	; select bank1
  8244  130A  083F               	movf	_SPI0Buffer^(0+128),w
  8245  130B  0020               	movlb	0	; select bank0
  8246  130C  00A4               	movwf	??_CC2500_RxData
  8247  130D  0825               	movf	CC2500_RxData@loop_f,w
  8248  130E  3EA0               	addlw	_RF_Data& (0+255)
  8249  130F  0086               	movwf	6
  8250  1310  0187               	clrf	7
  8251  1311  0824               	movf	??_CC2500_RxData,w
  8252  1312  0081               	movwf	1
  8253  1313  3001               	movlw	1
  8254  1314  00A4               	movwf	??_CC2500_RxData
  8255  1315  0824               	movf	??_CC2500_RxData,w
  8256  1316  07A5               	addwf	CC2500_RxData@loop_f,f
  8257  1317  2B00               	goto	l8385
  8258  1318                     l8387:	
  8259                           
  8260                           ;CC2500_B1.c: 81: }
  8261                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  8262  1318  319A  224F  3192   	fcall	_CC2500_ReadByte
  8263                           
  8264                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  8265  131B  0021               	movlb	1	; select bank1
  8266  131C  083F               	movf	_SPI0Buffer^(0+128),w
  8267  131D  0020               	movlb	0	; select bank0
  8268  131E  00A4               	movwf	??_CC2500_RxData
  8269  131F  0824               	movf	??_CC2500_RxData,w
  8270  1320  0021               	movlb	1	; select bank1
  8271  1321  00BD               	movwf	_RSSI^(0+128)
  8272                           
  8273                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  8274  1322  319A  224F  3192   	fcall	_CC2500_ReadByte
  8275                           
  8276                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  8277  1325  0021               	movlb	1	; select bank1
  8278  1326  083F               	movf	_SPI0Buffer^(0+128),w
  8279  1327  0020               	movlb	0	; select bank0
  8280  1328  00A4               	movwf	??_CC2500_RxData
  8281  1329  0824               	movf	??_CC2500_RxData,w
  8282  132A  0021               	movlb	1	; select bank1
  8283  132B  00B7               	movwf	_CRC^(0+128)
  8284                           
  8285                           ;CC2500_B1.c: 86: RC4=1;
  8286  132C  0020               	movlb	0	; select bank0
  8287  132D  160E               	bsf	14,4	;volatile
  8288                           
  8289                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  8290  132E  0021               	movlb	1	; select bank1
  8291  132F  1BB7               	btfsc	_CRC^(0+128),7
  8292                           
  8293                           ;CC2500_B1.c: 88: Receive_OK=1;
  8294  1330  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  8295  1331                     l8399:	
  8296                           
  8297                           ;CC2500_B1.c: 89: }
  8298                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  8299  1331  3036               	movlw	54
  8300  1332  31A7  27B0  3192   	fcall	_CC2500_WriteCommand
  8301                           
  8302                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  8303  1335  303A               	movlw	58
  8304  1336  31A7  27B0  3192   	fcall	_CC2500_WriteCommand
  8305                           
  8306                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  8307  1339  0020               	movlb	0	; select bank0
  8308  133A  01A2               	clrf	setRF_RxStatus@command
  8309  133B  3001               	movlw	1
  8310  133C  31A7  2776         	fcall	_setRF_RxStatus
  8311  133E  0008               	return
  8312  133F                     __end_of_CC2500_RxData:	
  8313                           
  8314                           	psect	text31
  8315  2776                     __ptext31:	
  8316 ;; *************** function _setRF_RxStatus *****************
  8317 ;; Defined at:
  8318 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;  rf              1    wreg     unsigned char 
  8321 ;;  command         1    2[BANK0 ] unsigned char 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  rf              1    3[BANK0 ] unsigned char 
  8324 ;; Return value:  Size  Location     Type
  8325 ;;		None               void
  8326 ;; Registers used:
  8327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8333 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;Total ram usage:        2 bytes
  8338 ;; Hardware stack levels used:    1
  8339 ;; Hardware stack levels required when called:    5
  8340 ;; This function calls:
  8341 ;;		_RfPointSelect
  8342 ;; This function is called by:
  8343 ;;		_CC2500_RxData
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           
  8348                           ;psect for function _setRF_RxStatus
  8349  2776                     _setRF_RxStatus:	
  8350                           
  8351                           ;incstack = 0
  8352                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8353                           ;setRF_RxStatus@rf stored from wreg
  8354  2776  0020               	movlb	0	; select bank0
  8355  2777  00A3               	movwf	setRF_RxStatus@rf
  8356                           
  8357                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  8358  2778  0823               	movf	setRF_RxStatus@rf,w
  8359  2779  31A6  26D9         	fcall	_RfPointSelect
  8360                           
  8361                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  8362  277B  087A               	movf	_RF,w
  8363  277C  0086               	movwf	6
  8364  277D  0187               	clrf	7
  8365  277E  0020               	movlb	0	; select bank0
  8366  277F  0822               	movf	setRF_RxStatus@command,w
  8367  2780  1181               	bcf	1,3
  8368  2781  1D03               	skipz
  8369  2782  1581               	bsf	1,3
  8370  2783  0008               	return
  8371  2784                     __end_of_setRF_RxStatus:	
  8372                           
  8373                           	psect	text32
  8374  1A18                     __ptext32:	
  8375 ;; *************** function _CC2500_ReadStatus *****************
  8376 ;; Defined at:
  8377 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  status_addr     1    wreg     unsigned char 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  status_addr     1    3[BANK0 ] unsigned char 
  8382 ;; Return value:  Size  Location     Type
  8383 ;;		None               void
  8384 ;; Registers used:
  8385 ;;		wreg, status,2, status,0, pclath, cstack
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;Total ram usage:        2 bytes
  8396 ;; Hardware stack levels used:    1
  8397 ;; Hardware stack levels required when called:    5
  8398 ;; This function calls:
  8399 ;;		_CC2500_ReadByte
  8400 ;;		_CC2500_WriteByte
  8401 ;; This function is called by:
  8402 ;;		_CC2500_RxData
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           
  8407                           ;psect for function _CC2500_ReadStatus
  8408  1A18                     _CC2500_ReadStatus:	
  8409                           
  8410                           ;incstack = 0
  8411                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  8412                           ;CC2500_ReadStatus@status_addr stored from wreg
  8413  1A18  0020               	movlb	0	; select bank0
  8414  1A19  00A3               	movwf	CC2500_ReadStatus@status_addr
  8415                           
  8416                           ;CC2500_B1.c: 269: RC4=0;
  8417  1A1A  120E               	bcf	14,4	;volatile
  8418                           
  8419                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  8420  1A1B  0823               	movf	CC2500_ReadStatus@status_addr,w
  8421  1A1C  3EC0               	addlw	192
  8422  1A1D  00A2               	movwf	??_CC2500_ReadStatus
  8423  1A1E  0822               	movf	??_CC2500_ReadStatus,w
  8424  1A1F  0021               	movlb	1	; select bank1
  8425  1A20  00BF               	movwf	_SPI0Buffer^(0+128)
  8426  1A21                     l387:	
  8427                           ;CC2500_B1.c: 272: while(RC2==1);
  8428                           
  8429  1A21  0020               	movlb	0	; select bank0
  8430  1A22  190E               	btfsc	14,2	;volatile
  8431  1A23  2A21               	goto	l387
  8432                           
  8433                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  8434  1A24  3199  219A  319A   	fcall	_CC2500_WriteByte
  8435                           
  8436                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  8437  1A27  319A  224F         	fcall	_CC2500_ReadByte
  8438                           
  8439                           ;CC2500_B1.c: 276: RC4=1;
  8440  1A29  0020               	movlb	0	; select bank0
  8441  1A2A  160E               	bsf	14,4	;volatile
  8442                           
  8443                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  8444  1A2B  0021               	movlb	1	; select bank1
  8445  1A2C  083F               	movf	_SPI0Buffer^(0+128),w
  8446  1A2D  0020               	movlb	0	; select bank0
  8447  1A2E  00A2               	movwf	??_CC2500_ReadStatus
  8448  1A2F  0822               	movf	??_CC2500_ReadStatus,w
  8449  1A30  0021               	movlb	1	; select bank1
  8450  1A31  00C3               	movwf	_s_data^(0+128)
  8451  1A32  0008               	return
  8452  1A33                     __end_of_CC2500_ReadStatus:	
  8453                           
  8454                           	psect	text33
  8455  1A4F                     __ptext33:	
  8456 ;; *************** function _CC2500_ReadByte *****************
  8457 ;; Defined at:
  8458 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;		None
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  loop_b          1    1[BANK0 ] unsigned char 
  8463 ;; Return value:  Size  Location     Type
  8464 ;;		None               void
  8465 ;; Registers used:
  8466 ;;		wreg, status,2, status,0
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8474 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;Total ram usage:        2 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; Hardware stack levels required when called:    4
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_CC2500_RxData
  8483 ;;		_CC2500_ReadStatus
  8484 ;;		_CC2500_ReadREG
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           
  8489                           ;psect for function _CC2500_ReadByte
  8490  1A4F                     _CC2500_ReadByte:	
  8491                           
  8492                           ;CC2500_B1.c: 212: unsigned char loop_b;
  8493                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  8494                           
  8495                           ;incstack = 0
  8496                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  8497  1A4F  0020               	movlb	0	; select bank0
  8498  1A50  01A1               	clrf	CC2500_ReadByte@loop_b
  8499  1A51                     L11:	
  8500  1A51  3008               	movlw	8
  8501  1A52  0221               	subwf	CC2500_ReadByte@loop_b,w
  8502  1A53  1803               	btfsc	3,0
  8503  1A54  0008               	return
  8504                           
  8505                           ;CC2500_B1.c: 214: {
  8506                           ;CC2500_B1.c: 215: RC1=1;
  8507  1A55  148E               	bsf	14,1	;volatile
  8508                           
  8509                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  8510  1A56  1003               	clrc
  8511  1A57  0021               	movlb	1	; select bank1
  8512  1A58  0DBF               	rlf	_SPI0Buffer^(0+128),f
  8513                           
  8514                           ;CC2500_B1.c: 217: if(RC2 == 1)
  8515  1A59  0020               	movlb	0	; select bank0
  8516  1A5A  1D0E               	btfss	14,2	;volatile
  8517  1A5B  2A5F               	goto	l6253
  8518                           
  8519                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  8520  1A5C  0021               	movlb	1	; select bank1
  8521  1A5D  143F               	bsf	_SPI0Buffer^(0+128),0
  8522  1A5E  2A65               	goto	l6255
  8523  1A5F                     l6253:	
  8524                           
  8525                           ;CC2500_B1.c: 219: else
  8526                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  8527  1A5F  30FE               	movlw	254
  8528  1A60  0020               	movlb	0	; select bank0
  8529  1A61  00A0               	movwf	??_CC2500_ReadByte
  8530  1A62  0820               	movf	??_CC2500_ReadByte,w
  8531  1A63  0021               	movlb	1	; select bank1
  8532  1A64  05BF               	andwf	_SPI0Buffer^(0+128),f
  8533  1A65                     l6255:	
  8534                           
  8535                           ;CC2500_B1.c: 221: RC1=0;
  8536  1A65  0020               	movlb	0	; select bank0
  8537  1A66  108E               	bcf	14,1	;volatile
  8538  1A67  3001               	movlw	1
  8539  1A68  00A0               	movwf	??_CC2500_ReadByte
  8540  1A69  0820               	movf	??_CC2500_ReadByte,w
  8541  1A6A  07A1               	addwf	CC2500_ReadByte@loop_b,f
  8542  1A6B  2A51               	goto	L11
  8543  1A6C                     __end_of_CC2500_ReadByte:	
  8544                           
  8545                           	psect	text34
  8546  265C                     __ptext34:	
  8547 ;; *************** function _RF_Initialization *****************
  8548 ;; Defined at:
  8549 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;		None
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;		None               void
  8556 ;; Registers used:
  8557 ;;		wreg, status,2, status,0, pclath, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;Total ram usage:        0 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    5
  8570 ;; This function calls:
  8571 ;;		_setRF_Initialization
  8572 ;; This function is called by:
  8573 ;;		_main
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           
  8578                           ;psect for function _RF_Initialization
  8579  265C                     _RF_Initialization:	
  8580                           
  8581                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  8582                           
  8583                           ;incstack = 0
  8584                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  8585  265C  3001               	movlw	1
  8586  265D  31A6  2689         	fcall	_setRF_Initialization
  8587  265F  0008               	return
  8588  2660                     __end_of_RF_Initialization:	
  8589                           
  8590                           	psect	text35
  8591  2689                     __ptext35:	
  8592 ;; *************** function _setRF_Initialization *****************
  8593 ;; Defined at:
  8594 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  rf              1    wreg     unsigned char 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  rf              1    0[COMMON] unsigned char 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;		None               void
  8601 ;; Registers used:
  8602 ;;		wreg
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8610 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8611 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;Total ram usage:        1 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:    4
  8615 ;; This function calls:
  8616 ;;		Nothing
  8617 ;; This function is called by:
  8618 ;;		_RF_Initialization
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           
  8623                           ;psect for function _setRF_Initialization
  8624  2689                     _setRF_Initialization:	
  8625                           
  8626                           ;RF_Control_B1.c: 54: Tx_Length=21;
  8627                           
  8628                           ;incstack = 0
  8629                           ; Regs used in _setRF_Initialization: [wreg]
  8630  2689  3015               	movlw	21
  8631  268A  0020               	movlb	0	; select bank0
  8632  268B  00A0               	movwf	??_setRF_Initialization
  8633  268C  0820               	movf	??_setRF_Initialization,w
  8634  268D  0021               	movlb	1	; select bank1
  8635  268E  00C0               	movwf	_Tx_Length^(0+128)
  8636  268F  0008               	return
  8637  2690                     __end_of_setRF_Initialization:	
  8638                           
  8639                           	psect	text36
  8640  1983                     __ptext36:	
  8641 ;; *************** function _Mcu_Initialization *****************
  8642 ;; Defined at:
  8643 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;		None               void
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0, pclath, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;Total ram usage:        1 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; Hardware stack levels required when called:    5
  8664 ;; This function calls:
  8665 ;;		_ADC_Set
  8666 ;;		_INT_Set
  8667 ;;		_IOC_Set
  8668 ;;		_IO_Set
  8669 ;;		_TMR0_Set
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           
  8676                           ;psect for function _Mcu_Initialization
  8677  1983                     _Mcu_Initialization:	
  8678                           
  8679                           ;MCU_B1.c: 27: OSCCON=0x78; ;;
  8680                           
  8681                           ;incstack = 0
  8682                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  8683  1983  3078               	movlw	120
  8684  1984  0021               	movlb	1	; select bank1
  8685  1985  0099               	movwf	25	;volatile
  8686                           
  8687                           ;MCU_B1.c: 29: IO_Set();
  8688  1986  3199  21E5  3199   	fcall	_IO_Set
  8689                           
  8690                           ;MCU_B1.c: 31: TMR0_Set();
  8691  1989  31A7  275C  3199   	fcall	_TMR0_Set
  8692                           
  8693                           ;MCU_B1.c: 33: ;;
  8694                           ;MCU_B1.c: 35: ADC_Set();
  8695  198C  31A6  2682  3199   	fcall	_ADC_Set
  8696                           
  8697                           ;MCU_B1.c: 39: INT_Set();
  8698  198F  31A6  2669  3199   	fcall	_INT_Set
  8699                           
  8700                           ;MCU_B1.c: 41: IOC_Set();
  8701  1992  31A7  274F         	fcall	_IOC_Set
  8702                           
  8703                           ;MCU_B1.c: 43: ;;
  8704                           ;MCU_B1.c: 45: ;;
  8705                           ;MCU_B1.c: 47: Memory=&VarMemory;
  8706  1994  30A0               	movlw	_VarMemory& (0+255)
  8707  1995  0020               	movlb	0	; select bank0
  8708  1996  00A1               	movwf	??_Mcu_Initialization
  8709  1997  0821               	movf	??_Mcu_Initialization,w
  8710  1998  00FC               	movwf	_Memory
  8711  1999  0008               	return
  8712  199A                     __end_of_Mcu_Initialization:	
  8713                           
  8714                           	psect	text37
  8715  275C                     __ptext37:	
  8716 ;; *************** function _TMR0_Set *****************
  8717 ;; Defined at:
  8718 ;;		line 114 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;		None               void
  8725 ;; Registers used:
  8726 ;;		wreg, status,2
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;Total ram usage:        1 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    4
  8739 ;; This function calls:
  8740 ;;		Nothing
  8741 ;; This function is called by:
  8742 ;;		_Mcu_Initialization
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           
  8747                           ;psect for function _TMR0_Set
  8748  275C                     _TMR0_Set:	
  8749                           
  8750                           ;MCU_B1.c: 116: Timer0=&VarTimer0;
  8751                           
  8752                           ;incstack = 0
  8753                           ; Regs used in _TMR0_Set: [wreg+status,2]
  8754  275C  30C4               	movlw	_VarTimer0& (0+255)
  8755  275D  0020               	movlb	0	; select bank0
  8756  275E  00A0               	movwf	??_TMR0_Set
  8757  275F  0820               	movf	??_TMR0_Set,w
  8758  2760  0021               	movlb	1	; select bank1
  8759  2761  00E9               	movwf	_Timer0^(0+128)
  8760                           
  8761                           ;MCU_B1.c: 117: OPTION_REG=0x00;
  8762  2762  0195               	clrf	21	;volatile
  8763                           
  8764                           ;MCU_B1.c: 118: TMR0=(256-90);
  8765  2763  30A6               	movlw	166
  8766  2764  0020               	movlb	0	; select bank0
  8767  2765  0095               	movwf	21	;volatile
  8768                           
  8769                           ;MCU_B1.c: 119: TMR0IE=1;
  8770  2766  168B               	bsf	11,5	;volatile
  8771                           
  8772                           ;MCU_B1.c: 120: GIE=1;
  8773  2767  178B               	bsf	11,7	;volatile
  8774  2768  0008               	return
  8775  2769                     __end_of_TMR0_Set:	
  8776                           
  8777                           	psect	text38
  8778  19E5                     __ptext38:	
  8779 ;; *************** function _IO_Set *****************
  8780 ;; Defined at:
  8781 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;		None
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;		None
  8786 ;; Return value:  Size  Location     Type
  8787 ;;		None               void
  8788 ;; Registers used:
  8789 ;;		wreg, status,2
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8799 ;;Total ram usage:        0 bytes
  8800 ;; Hardware stack levels used:    1
  8801 ;; Hardware stack levels required when called:    4
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		_Mcu_Initialization
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           
  8810                           ;psect for function _IO_Set
  8811  19E5                     _IO_Set:	
  8812                           
  8813                           ;MCU_B1.c: 79: TRISA=0b01110111;;
  8814                           
  8815                           ;incstack = 0
  8816                           ; Regs used in _IO_Set: [wreg+status,2]
  8817  19E5  3077               	movlw	119
  8818  19E6  0021               	movlb	1	; select bank1
  8819  19E7  008C               	movwf	12	;volatile
  8820                           
  8821                           ;MCU_B1.c: 80: TRISB=0b00000111;;
  8822  19E8  3007               	movlw	7
  8823  19E9  008D               	movwf	13	;volatile
  8824                           
  8825                           ;MCU_B1.c: 81: TRISC=0b00001100;;
  8826  19EA  300C               	movlw	12
  8827  19EB  008E               	movwf	14	;volatile
  8828                           
  8829                           ;MCU_B1.c: 82: LATA=0b00000000;;
  8830  19EC  0022               	movlb	2	; select bank2
  8831  19ED  018C               	clrf	12	;volatile
  8832                           
  8833                           ;MCU_B1.c: 83: LATB=0b00000010;;
  8834  19EE  3002               	movlw	2
  8835  19EF  008D               	movwf	13	;volatile
  8836                           
  8837                           ;MCU_B1.c: 84: LATC=0b00000000;;
  8838  19F0  018E               	clrf	14	;volatile
  8839                           
  8840                           ;MCU_B1.c: 85: ANSELA=0b00100010;;
  8841  19F1  3022               	movlw	34
  8842  19F2  0023               	movlb	3	; select bank3
  8843  19F3  008C               	movwf	12	;volatile
  8844                           
  8845                           ;MCU_B1.c: 86: ANSELB=0b00000000;;
  8846  19F4  018D               	clrf	13	;volatile
  8847                           
  8848                           ;MCU_B1.c: 87: ANSELC=0b00000000;;
  8849  19F5  018E               	clrf	14	;volatile
  8850                           
  8851                           ;MCU_B1.c: 88: PORTA=0b01110111;;
  8852  19F6  3077               	movlw	119
  8853  19F7  0020               	movlb	0	; select bank0
  8854  19F8  008C               	movwf	12	;volatile
  8855                           
  8856                           ;MCU_B1.c: 89: PORTB=0b00000111;;
  8857  19F9  3007               	movlw	7
  8858  19FA  008D               	movwf	13	;volatile
  8859                           
  8860                           ;MCU_B1.c: 90: PORTC=0b00001100;;
  8861  19FB  300C               	movlw	12
  8862  19FC  008E               	movwf	14	;volatile
  8863  19FD  0008               	return
  8864  19FE                     __end_of_IO_Set:	
  8865                           
  8866                           	psect	text39
  8867  274F                     __ptext39:	
  8868 ;; *************** function _IOC_Set *****************
  8869 ;; Defined at:
  8870 ;;		line 308 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;		None
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;		None
  8875 ;; Return value:  Size  Location     Type
  8876 ;;		None               void
  8877 ;; Registers used:
  8878 ;;		wreg, status,2
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;Total ram usage:        0 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; Hardware stack levels required when called:    4
  8891 ;; This function calls:
  8892 ;;		Nothing
  8893 ;; This function is called by:
  8894 ;;		_Mcu_Initialization
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           
  8899                           ;psect for function _IOC_Set
  8900  274F                     _IOC_Set:	
  8901                           
  8902                           ;MCU_B1.c: 310: WPUB2=0;
  8903                           
  8904                           ;incstack = 0
  8905                           ; Regs used in _IOC_Set: [wreg+status,2]
  8906  274F  0024               	movlb	4	; select bank4
  8907  2750  110D               	bcf	13,2	;volatile
  8908                           
  8909                           ;MCU_B1.c: 318: IOCBP=0b00000100;
  8910  2751  3004               	movlw	4
  8911  2752  0027               	movlb	7	; select bank7
  8912  2753  0094               	movwf	20	;volatile
  8913                           
  8914                           ;MCU_B1.c: 319: IOCBN=0b00000100;
  8915  2754  3004               	movlw	4
  8916  2755  0095               	movwf	21	;volatile
  8917                           
  8918                           ;MCU_B1.c: 328: IOCBF=0b00000000;
  8919  2756  0196               	clrf	22	;volatile
  8920                           
  8921                           ;MCU_B1.c: 330: IOCIE=1;
  8922  2757  158B               	bsf	11,3	;volatile
  8923                           
  8924                           ;MCU_B1.c: 331: IOCIF=0;
  8925  2758  100B               	bcf	11,0	;volatile
  8926                           
  8927                           ;MCU_B1.c: 332: PEIE=1;
  8928  2759  170B               	bsf	11,6	;volatile
  8929                           
  8930                           ;MCU_B1.c: 333: GIE=1;
  8931  275A  178B               	bsf	11,7	;volatile
  8932  275B  0008               	return
  8933  275C                     __end_of_IOC_Set:	
  8934                           
  8935                           	psect	text40
  8936  2669                     __ptext40:	
  8937 ;; *************** function _INT_Set *****************
  8938 ;; Defined at:
  8939 ;;		line 279 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;		None
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;		None
  8944 ;; Return value:  Size  Location     Type
  8945 ;;		None               void
  8946 ;; Registers used:
  8947 ;;		None
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;Total ram usage:        0 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:    4
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_Mcu_Initialization
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           
  8968                           ;psect for function _INT_Set
  8969  2669                     _INT_Set:	
  8970                           
  8971                           ;MCU_B1.c: 281: WPUB0=0;
  8972                           
  8973                           ;incstack = 0
  8974                           ; Regs used in _INT_Set: []
  8975  2669  0024               	movlb	4	; select bank4
  8976  266A  100D               	bcf	13,0	;volatile
  8977                           
  8978                           ;MCU_B1.c: 282: INTE=1;
  8979  266B  160B               	bsf	11,4	;volatile
  8980                           
  8981                           ;MCU_B1.c: 283: PEIE=1;
  8982  266C  170B               	bsf	11,6	;volatile
  8983                           
  8984                           ;MCU_B1.c: 284: GIE=1;
  8985  266D  178B               	bsf	11,7	;volatile
  8986  266E  0008               	return
  8987  266F                     __end_of_INT_Set:	
  8988                           
  8989                           	psect	text41
  8990  2682                     __ptext41:	
  8991 ;; *************** function _ADC_Set *****************
  8992 ;; Defined at:
  8993 ;;		line 373 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;		None
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;		None               void
  9000 ;; Registers used:
  9001 ;;		wreg
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;Total ram usage:        0 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    4
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_Mcu_Initialization
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           
  9022                           ;psect for function _ADC_Set
  9023  2682                     _ADC_Set:	
  9024                           
  9025                           ;MCU_B1.c: 375: ADCON1=0xf2;
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in _ADC_Set: [wreg]
  9029  2682  30F2               	movlw	242
  9030  2683  0021               	movlb	1	; select bank1
  9031  2684  009E               	movwf	30	;volatile
  9032                           
  9033                           ;MCU_B1.c: 376: FVRCON=0xc0;
  9034  2685  30C0               	movlw	192
  9035  2686  0022               	movlb	2	; select bank2
  9036  2687  0097               	movwf	23	;volatile
  9037  2688  0008               	return
  9038  2689                     __end_of_ADC_Set:	
  9039                           
  9040                           	psect	text42
  9041  1899                     __ptext42:	
  9042 ;; *************** function _MainT_Initialization *****************
  9043 ;; Defined at:
  9044 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;		None               void
  9051 ;; Registers used:
  9052 ;;		wreg, fsr1l, fsr1h
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;Total ram usage:        1 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:    4
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_main
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           
  9073                           ;psect for function _MainT_Initialization
  9074  1899                     _MainT_Initialization:	
  9075                           
  9076                           ;main.c: 95: Product=&VarProduct;
  9077                           
  9078                           ;incstack = 0
  9079                           ; Regs used in _MainT_Initialization: [wregfsr1]
  9080  1899  30C5               	movlw	_VarProduct& (0+255)
  9081  189A  0020               	movlb	0	; select bank0
  9082  189B  00A0               	movwf	??_MainT_Initialization
  9083  189C  0820               	movf	??_MainT_Initialization,w
  9084  189D  00EF               	movwf	_Product
  9085                           
  9086                           ;main.c: 96: Product->Data[20]=210;
  9087  189E  30D2               	movlw	210
  9088  189F  00A0               	movwf	??_MainT_Initialization
  9089  18A0  086F               	movf	_Product,w
  9090  18A1  3E14               	addlw	20
  9091  18A2  0086               	movwf	6
  9092  18A3  3001               	movlw	1	; select bank2/3
  9093  18A4  0087               	movwf	7
  9094  18A5  0820               	movf	??_MainT_Initialization,w
  9095  18A6  0081               	movwf	1
  9096                           
  9097                           ;main.c: 99: TMain=&VarTMain;
  9098  18A7  3020               	movlw	_VarTMain& (0+255)
  9099  18A8  00A0               	movwf	??_MainT_Initialization
  9100  18A9  0820               	movf	??_MainT_Initialization,w
  9101  18AA  00FD               	movwf	_TMain
  9102  18AB  0008               	return
  9103  18AC                     __end_of_MainT_Initialization:	
  9104                           
  9105                           	psect	text43
  9106  14EF                     __ptext43:	
  9107 ;; *************** function _MainT *****************
  9108 ;; Defined at:
  9109 ;;		line 104 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;		None               void
  9116 ;; Registers used:
  9117 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    6
  9130 ;; This function calls:
  9131 ;;		_setBuz
  9132 ;;		_setLoad_Enable
  9133 ;;		_setRF_Enable
  9134 ;;		_setSw_Enable
  9135 ;; This function is called by:
  9136 ;;		_main
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           
  9141                           ;psect for function _MainT
  9142  14EF                     _MainT:	
  9143                           
  9144                           ;main.c: 107: if(!TMain->PowerON)
  9145                           
  9146                           ;incstack = 0
  9147                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9148  14EF  087D               	movf	_TMain,w
  9149  14F0  0086               	movwf	6
  9150  14F1  3001               	movlw	1	; select bank2/3
  9151  14F2  0087               	movwf	7
  9152  14F3  1801               	btfsc	1,0
  9153  14F4  2D34               	goto	l9149
  9154                           
  9155                           ;main.c: 108: {
  9156                           ;main.c: 109: TMain->PowerCount++;
  9157  14F5  0A7D               	incf	_TMain,w
  9158  14F6  0086               	movwf	6
  9159  14F7  3001               	movlw	1	; select bank2/3
  9160  14F8  0087               	movwf	7
  9161  14F9  3001               	movlw	1
  9162  14FA  0781               	addwf	1,f
  9163  14FB  3141               	addfsr 1,1
  9164  14FC  1803               	skipnc
  9165  14FD  0A81               	incf	1,f
  9166                           
  9167                           ;main.c: 110: if(TMain->PowerCount == 150)
  9168  14FE  0A7D               	incf	_TMain,w
  9169  14FF  0086               	movwf	6
  9170  1500  3001               	movlw	1	; select bank2/3
  9171  1501  0087               	movwf	7
  9172  1502  3F40               	moviw [0]fsr1
  9173  1503  3A96               	xorlw	150
  9174  1504  1D03               	skipz
  9175  1505  2D08               	goto	u9015
  9176  1506  3F41               	moviw [1]fsr1
  9177  1507  3A00               	xorlw	0
  9178  1508                     u9015:	
  9179  1508  1D03               	skipz
  9180  1509  0008               	return
  9181                           
  9182                           ;main.c: 111: {
  9183                           ;main.c: 112: TMain->PowerCount=0;
  9184  150A  0A7D               	incf	_TMain,w
  9185  150B  0086               	movwf	6
  9186  150C  3001               	movlw	1	; select bank2/3
  9187  150D  0087               	movwf	7
  9188  150E  3000               	movlw	0
  9189  150F  3FC0               	movwi [0]fsr1
  9190  1510  3FC1               	movwi [1]fsr1
  9191                           
  9192                           ;main.c: 113: TMain->PowerON=1;
  9193  1511  087D               	movf	_TMain,w
  9194  1512  0086               	movwf	6
  9195  1513  3001               	movlw	1	; select bank2/3
  9196  1514  0087               	movwf	7
  9197  1515  1401               	bsf	1,0
  9198                           
  9199                           ;main.c: 116: ;;
  9200                           ;main.c: 120: setLoad_Enable(1);
  9201  1516  3001               	movlw	1
  9202  1517  31A7  27F0  3194   	fcall	_setLoad_Enable
  9203                           
  9204                           ;main.c: 126: setBuz(3,50);
  9205  151A  3032               	movlw	50
  9206  151B  0020               	movlb	0	; select bank0
  9207  151C  00A6               	movwf	setBuz@time
  9208  151D  3000               	movlw	0
  9209  151E  00A7               	movwf	setBuz@time+1
  9210  151F  3003               	movlw	3
  9211  1520  3195  2565  3194   	fcall	_setBuz
  9212                           
  9213                           ;main.c: 127: TMain->SelfTest=1;
  9214  1523  087D               	movf	_TMain,w
  9215  1524  3E03               	addlw	3
  9216  1525  0086               	movwf	6
  9217  1526  3001               	movlw	1	; select bank2/3
  9218  1527  0087               	movwf	7
  9219  1528  1401               	bsf	1,0
  9220                           
  9221                           ;main.c: 129: setSw_Enable(1);
  9222  1529  3001               	movlw	1
  9223  152A  319A  2233  3194   	fcall	_setSw_Enable
  9224                           
  9225                           ;main.c: 132: setRF_Enable(1,1);
  9226  152D  0020               	movlb	0	; select bank0
  9227  152E  01A2               	clrf	setRF_Enable@command
  9228  152F  0AA2               	incf	setRF_Enable@command,f
  9229  1530  3001               	movlw	1
  9230  1531  319C  240D         	fcall	_setRF_Enable
  9231                           
  9232                           ;main.c: 136: }
  9233                           ;main.c: 137: }
  9234  1533  0008               	return
  9235  1534                     l9149:	
  9236                           
  9237                           ;main.c: 138: else
  9238                           ;main.c: 139: {
  9239                           ;main.c: 147: TMain->Count1++;
  9240  1534  087D               	movf	_TMain,w
  9241  1535  3E06               	addlw	6
  9242  1536  0086               	movwf	6
  9243  1537  3001               	movlw	1	; select bank2/3
  9244  1538  0087               	movwf	7
  9245  1539  3001               	movlw	1
  9246  153A  0781               	addwf	1,f
  9247  153B  3141               	addfsr 1,1
  9248  153C  1803               	skipnc
  9249  153D  0A81               	incf	1,f
  9250                           
  9251                           ;main.c: 148: if(TMain->Count1 == 100)
  9252  153E  087D               	movf	_TMain,w
  9253  153F  3E06               	addlw	6
  9254  1540  0086               	movwf	6
  9255  1541  3001               	movlw	1	; select bank2/3
  9256  1542  0087               	movwf	7
  9257  1543  3F40               	moviw [0]fsr1
  9258  1544  3A64               	xorlw	100
  9259  1545  1D03               	skipz
  9260  1546  2D49               	goto	u9025
  9261  1547  3F41               	moviw [1]fsr1
  9262  1548  3A00               	xorlw	0
  9263  1549                     u9025:	
  9264  1549  1D03               	skipz
  9265  154A  0008               	return
  9266                           
  9267                           ;main.c: 149: {
  9268                           ;main.c: 150: TMain->Count1=0;
  9269  154B  087D               	movf	_TMain,w
  9270  154C  3E06               	addlw	6
  9271  154D  0086               	movwf	6
  9272  154E  3001               	movlw	1	; select bank2/3
  9273  154F  0087               	movwf	7
  9274  1550  3000               	movlw	0
  9275  1551  3FC0               	movwi [0]fsr1
  9276  1552  3FC1               	movwi [1]fsr1
  9277                           
  9278                           ;main.c: 163: if(TMain->Flag)
  9279  1553  087D               	movf	_TMain,w
  9280  1554  0086               	movwf	6
  9281  1555  3001               	movlw	1	; select bank2/3
  9282  1556  0087               	movwf	7
  9283  1557  1D81               	btfss	1,3
  9284  1558  2D5F               	goto	l9157
  9285                           
  9286                           ;main.c: 164: {
  9287                           ;main.c: 165: TMain->Flag=0;
  9288  1559  087D               	movf	_TMain,w
  9289  155A  0086               	movwf	6
  9290  155B  3001               	movlw	1	; select bank2/3
  9291  155C  0087               	movwf	7
  9292  155D  1181               	bcf	1,3
  9293                           
  9294                           ;main.c: 167: ;;
  9295                           ;main.c: 168: ;;
  9296                           ;main.c: 174: }
  9297  155E  0008               	return
  9298  155F                     l9157:	
  9299                           
  9300                           ;main.c: 175: else
  9301                           ;main.c: 176: {
  9302                           ;main.c: 177: TMain->Flag=1;
  9303  155F  087D               	movf	_TMain,w
  9304  1560  0086               	movwf	6
  9305  1561  3001               	movlw	1	; select bank2/3
  9306  1562  0087               	movwf	7
  9307  1563  1581               	bsf	1,3
  9308                           
  9309                           ;main.c: 179: ;;
  9310                           ;main.c: 180: ;;
  9311  1564  0008               	return
  9312  1565                     __end_of_MainT:	
  9313                           
  9314                           	psect	text44
  9315  27F0                     __ptext44:	
  9316 ;; *************** function _setLoad_Enable *****************
  9317 ;; Defined at:
  9318 ;;		line 295 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;  command         1    wreg     unsigned char 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;  command         1    0[BANK0 ] unsigned char 
  9323 ;; Return value:  Size  Location     Type
  9324 ;;		None               void
  9325 ;; Registers used:
  9326 ;;		wreg, fsr1l, fsr1h
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;Total ram usage:        1 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    4
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_MainT
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           
  9347                           ;psect for function _setLoad_Enable
  9348  27F0                     _setLoad_Enable:	
  9349                           
  9350                           ;incstack = 0
  9351                           ; Regs used in _setLoad_Enable: [wregfsr1]
  9352                           ;setLoad_Enable@command stored from wreg
  9353  27F0  0020               	movlb	0	; select bank0
  9354  27F1  00A0               	movwf	setLoad_Enable@command
  9355                           
  9356                           ;OverLoad_B1.c: 297: Load->Enable=command;
  9357  27F2  086E               	movf	_Load,w
  9358  27F3  0086               	movwf	6
  9359  27F4  3002               	movlw	2	; select bank4/5
  9360  27F5  0087               	movwf	7
  9361  27F6  0820               	movf	setLoad_Enable@command,w
  9362  27F7  1001               	bcf	1,0
  9363  27F8  1D03               	skipz
  9364  27F9  1401               	bsf	1,0
  9365                           
  9366                           ;OverLoad_B1.c: 298: Load->GO=0;
  9367  27FA  086E               	movf	_Load,w
  9368  27FB  0086               	movwf	6
  9369  27FC  3002               	movlw	2	; select bank4/5
  9370  27FD  0087               	movwf	7
  9371  27FE  1081               	bcf	1,1
  9372  27FF  0008               	return
  9373  2800                     __end_of_setLoad_Enable:	
  9374                           
  9375                           	psect	text45
  9376  004F                     __ptext45:	
  9377 ;; *************** function _Load_Main *****************
  9378 ;; Defined at:
  9379 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;		None
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  i               1   17[BANK0 ] unsigned char 
  9384 ;; Return value:  Size  Location     Type
  9385 ;;		None               void
  9386 ;; Registers used:
  9387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;Total ram usage:        5 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    9
  9400 ;; This function calls:
  9401 ;;		___lwdiv
  9402 ;;		___wmul
  9403 ;;		_setDimmerLights_Clear
  9404 ;;		_setLoad_AH_AL_Restore
  9405 ;;		_setLoad_Exceptions
  9406 ;; This function is called by:
  9407 ;;		_main
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           
  9412                           ;psect for function _Load_Main
  9413  004F                     _Load_Main:	
  9414                           
  9415                           ;OverLoad_B1.c: 47: char i;
  9416                           ;OverLoad_B1.c: 48: if(Load->ERROR)
  9417                           
  9418                           ;incstack = 0
  9419                           ; Regs used in _Load_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9420  004F  0020               	movlb	0	; select bank0
  9421  0050  086E               	movf	_Load,w
  9422  0051  0086               	movwf	6
  9423  0052  3002               	movlw	2	; select bank4/5
  9424  0053  0087               	movwf	7
  9425  0054  1E81               	btfss	1,5
  9426  0055  287C               	goto	l9183
  9427                           
  9428                           ;OverLoad_B1.c: 49: {
  9429                           ;OverLoad_B1.c: 50: Load->ErrorTime++;
  9430  0056  086E               	movf	_Load,w
  9431  0057  3E03               	addlw	3
  9432  0058  0086               	movwf	6
  9433  0059  3002               	movlw	2	; select bank4/5
  9434  005A  0087               	movwf	7
  9435  005B  3001               	movlw	1
  9436  005C  0781               	addwf	1,f
  9437  005D  3141               	addfsr 1,1
  9438  005E  1803               	skipnc
  9439  005F  0A81               	incf	1,f
  9440                           
  9441                           ;OverLoad_B1.c: 51: if(Load->ErrorTime >= 1000)
  9442  0060  086E               	movf	_Load,w
  9443  0061  3E03               	addlw	3
  9444  0062  0086               	movwf	6
  9445  0063  3002               	movlw	2	; select bank4/5
  9446  0064  0087               	movwf	7
  9447  0065  3F40               	moviw [0]fsr1
  9448  0066  00AD               	movwf	??_Load_Main
  9449  0067  3F41               	moviw [1]fsr1
  9450  0068  00AE               	movwf	??_Load_Main+1
  9451  0069  3003               	movlw	3
  9452  006A  022E               	subwf	??_Load_Main+1,w
  9453  006B  30E8               	movlw	232
  9454  006C  1903               	skipnz
  9455  006D  022D               	subwf	??_Load_Main,w
  9456  006E  1C03               	skipc
  9457  006F  0008               	return
  9458                           
  9459                           ;OverLoad_B1.c: 52: {
  9460                           ;OverLoad_B1.c: 53: Load->ErrorTime=0;
  9461  0070  086E               	movf	_Load,w
  9462  0071  3E03               	addlw	3
  9463  0072  0086               	movwf	6
  9464  0073  3002               	movlw	2	; select bank4/5
  9465  0074  0087               	movwf	7
  9466  0075  3000               	movlw	0
  9467  0076  3FC0               	movwi [0]fsr1
  9468  0077  3FC1               	movwi [1]fsr1
  9469                           
  9470                           ;OverLoad_B1.c: 54: setLoad_Exceptions(0);
  9471  0078  3000               	movlw	0
  9472  0079  319E  26A8         	fcall	_setLoad_Exceptions
  9473                           
  9474                           ;OverLoad_B1.c: 55: }
  9475                           ;OverLoad_B1.c: 56: }
  9476  007B  0008               	return
  9477  007C                     l9183:	
  9478                           
  9479                           ;OverLoad_B1.c: 57: else
  9480                           ;OverLoad_B1.c: 58: {
  9481                           ;OverLoad_B1.c: 59: if(Load->ADtoGO)
  9482  007C  0020               	movlb	0	; select bank0
  9483  007D  086E               	movf	_Load,w
  9484  007E  0086               	movwf	6
  9485  007F  3002               	movlw	2	; select bank4/5
  9486  0080  0087               	movwf	7
  9487  0081  1E01               	btfss	1,4
  9488  0082  2B4A               	goto	l9291
  9489                           
  9490                           ;OverLoad_B1.c: 60: {
  9491                           ;OverLoad_B1.c: 61: Load->Time++;
  9492  0083  0A6E               	incf	_Load,w
  9493  0084  0086               	movwf	6
  9494  0085  3002               	movlw	2	; select bank4/5
  9495  0086  0087               	movwf	7
  9496  0087  3001               	movlw	1
  9497  0088  0781               	addwf	1,f
  9498  0089  3141               	addfsr 1,1
  9499  008A  1803               	skipnc
  9500  008B  0A81               	incf	1,f
  9501                           
  9502                           ;OverLoad_B1.c: 62: if(Load->Time >= 5)
  9503  008C  0A6E               	incf	_Load,w
  9504  008D  0086               	movwf	6
  9505  008E  3002               	movlw	2	; select bank4/5
  9506  008F  0087               	movwf	7
  9507  0090  3F40               	moviw [0]fsr1
  9508  0091  00AD               	movwf	??_Load_Main
  9509  0092  3F41               	moviw [1]fsr1
  9510  0093  00AE               	movwf	??_Load_Main+1
  9511  0094  3000               	movlw	0
  9512  0095  022E               	subwf	??_Load_Main+1,w
  9513  0096  3005               	movlw	5
  9514  0097  1903               	skipnz
  9515  0098  022D               	subwf	??_Load_Main,w
  9516  0099  1C03               	skipc
  9517  009A  0008               	return
  9518                           
  9519                           ;OverLoad_B1.c: 63: {
  9520                           ;OverLoad_B1.c: 64: Load->Time=0;
  9521  009B  0A6E               	incf	_Load,w
  9522  009C  0086               	movwf	6
  9523  009D  3002               	movlw	2	; select bank4/5
  9524  009E  0087               	movwf	7
  9525  009F  3000               	movlw	0
  9526  00A0  3FC0               	movwi [0]fsr1
  9527  00A1  3FC1               	movwi [1]fsr1
  9528                           
  9529                           ;OverLoad_B1.c: 65: Load->ADtoGO=0;
  9530  00A2  086E               	movf	_Load,w
  9531  00A3  0086               	movwf	6
  9532  00A4  3002               	movlw	2	; select bank4/5
  9533  00A5  0087               	movwf	7
  9534  00A6  1201               	bcf	1,4
  9535                           
  9536                           ;OverLoad_B1.c: 66: Load->LightsCount=Load->Lights1Status+Load->Lights2Status+Load->Ligh
      +                          ts3Status;
  9537  00A7  086E               	movf	_Load,w
  9538  00A8  3E45               	addlw	69
  9539  00A9  0086               	movwf	6
  9540  00AA  3002               	movlw	2	; select bank4/5
  9541  00AB  0087               	movwf	7
  9542  00AC  086E               	movf	_Load,w
  9543  00AD  3E44               	addlw	68
  9544  00AE  0084               	movwf	4
  9545  00AF  3002               	movlw	2	; select bank4/5
  9546  00B0  0085               	movwf	5
  9547  00B1  0800               	movf	0,w
  9548  00B2  00AD               	movwf	??_Load_Main
  9549  00B3  086E               	movf	_Load,w
  9550  00B4  3E43               	addlw	67
  9551  00B5  0084               	movwf	4
  9552  00B6  3002               	movlw	2	; select bank4/5
  9553  00B7  0085               	movwf	5
  9554  00B8  0800               	movf	0,w
  9555  00B9  072D               	addwf	??_Load_Main,w
  9556  00BA  0701               	addwf	1,w
  9557  00BB  00AE               	movwf	??_Load_Main+1
  9558  00BC  086E               	movf	_Load,w
  9559  00BD  3E3E               	addlw	62
  9560  00BE  0086               	movwf	6
  9561  00BF  3002               	movlw	2	; select bank4/5
  9562  00C0  0087               	movwf	7
  9563  00C1  082E               	movf	??_Load_Main+1,w
  9564  00C2  0081               	movwf	1
  9565                           
  9566                           ;OverLoad_B1.c: 67: for(i=1 ; i<4 ; i++)
  9567  00C3  01B1               	clrf	Load_Main@i
  9568  00C4  0AB1               	incf	Load_Main@i,f
  9569  00C5  3004               	movlw	4
  9570  00C6  0231               	subwf	Load_Main@i,w
  9571  00C7  1803               	btfsc	3,0
  9572  00C8  28F7               	goto	l9205
  9573  00C9                     l9199:	
  9574                           
  9575                           ;OverLoad_B1.c: 68: {
  9576                           ;OverLoad_B1.c: 69: Load->ADH+=Load->AH[i];
  9577  00C9  3531               	lslf	Load_Main@i,w
  9578  00CA  3E08               	addlw	8
  9579  00CB  076E               	addwf	_Load,w
  9580  00CC  00AD               	movwf	??_Load_Main
  9581  00CD  082D               	movf	??_Load_Main,w
  9582  00CE  0086               	movwf	6
  9583  00CF  3002               	movlw	2	; select bank4/5
  9584  00D0  0087               	movwf	7
  9585  00D1  086E               	movf	_Load,w
  9586  00D2  3E2E               	addlw	46
  9587  00D3  0084               	movwf	4
  9588  00D4  3002               	movlw	2	; select bank4/5
  9589  00D5  0085               	movwf	5
  9590  00D6  3F40               	moviw [0]fsr1
  9591  00D7  0780               	addwf	0,f
  9592  00D8  3101               	addfsr 0,1
  9593  00D9  3F41               	moviw [1]fsr1
  9594  00DA  3D80               	addwfc	0,f
  9595  00DB  313F               	addfsr 0,-1
  9596                           
  9597                           ;OverLoad_B1.c: 70: Load->ADL+=Load->AL[i];
  9598  00DC  3531               	lslf	Load_Main@i,w
  9599  00DD  3E1A               	addlw	26
  9600  00DE  076E               	addwf	_Load,w
  9601  00DF  00AD               	movwf	??_Load_Main
  9602  00E0  082D               	movf	??_Load_Main,w
  9603  00E1  0086               	movwf	6
  9604  00E2  3002               	movlw	2	; select bank4/5
  9605  00E3  0087               	movwf	7
  9606  00E4  086E               	movf	_Load,w
  9607  00E5  3E30               	addlw	48
  9608  00E6  0084               	movwf	4
  9609  00E7  3002               	movlw	2	; select bank4/5
  9610  00E8  0085               	movwf	5
  9611  00E9  3F40               	moviw [0]fsr1
  9612  00EA  0780               	addwf	0,f
  9613  00EB  3101               	addfsr 0,1
  9614  00EC  3F41               	moviw [1]fsr1
  9615  00ED  3D80               	addwfc	0,f
  9616  00EE  313F               	addfsr 0,-1
  9617  00EF  3001               	movlw	1
  9618  00F0  00AD               	movwf	??_Load_Main
  9619  00F1  082D               	movf	??_Load_Main,w
  9620  00F2  07B1               	addwf	Load_Main@i,f
  9621  00F3  3004               	movlw	4
  9622  00F4  0231               	subwf	Load_Main@i,w
  9623  00F5  1C03               	skipc
  9624  00F6  28C9               	goto	l9199
  9625  00F7                     l9205:	
  9626                           
  9627                           ;OverLoad_B1.c: 71: }
  9628                           ;OverLoad_B1.c: 72: Load->ADH/=3;
  9629  00F7  3003               	movlw	3
  9630  00F8  00A0               	movwf	___lwdiv@divisor
  9631  00F9  3000               	movlw	0
  9632  00FA  00A1               	movwf	___lwdiv@divisor+1
  9633  00FB  086E               	movf	_Load,w
  9634  00FC  3E2E               	addlw	46
  9635  00FD  0086               	movwf	6
  9636  00FE  3002               	movlw	2	; select bank4/5
  9637  00FF  0087               	movwf	7
  9638  0100  3F40               	moviw [0]fsr1
  9639  0101  00A2               	movwf	___lwdiv@dividend
  9640  0102  3F41               	moviw [1]fsr1
  9641  0103  00A3               	movwf	___lwdiv@dividend+1
  9642  0104  3188  2001  3180   	fcall	___lwdiv
  9643  0107  0020               	movlb	0	; select bank0
  9644  0108  086E               	movf	_Load,w
  9645  0109  3E2E               	addlw	46
  9646  010A  0086               	movwf	6
  9647  010B  3002               	movlw	2	; select bank4/5
  9648  010C  0087               	movwf	7
  9649  010D  0820               	movf	?___lwdiv,w
  9650  010E  3FC0               	movwi [0]fsr1
  9651  010F  0821               	movf	?___lwdiv+1,w
  9652  0110  3FC1               	movwi [1]fsr1
  9653                           
  9654                           ;OverLoad_B1.c: 73: Load->ADL/=3;
  9655  0111  3003               	movlw	3
  9656  0112  00A0               	movwf	___lwdiv@divisor
  9657  0113  3000               	movlw	0
  9658  0114  00A1               	movwf	___lwdiv@divisor+1
  9659  0115  086E               	movf	_Load,w
  9660  0116  3E30               	addlw	48
  9661  0117  0086               	movwf	6
  9662  0118  3002               	movlw	2	; select bank4/5
  9663  0119  0087               	movwf	7
  9664  011A  3F40               	moviw [0]fsr1
  9665  011B  00A2               	movwf	___lwdiv@dividend
  9666  011C  3F41               	moviw [1]fsr1
  9667  011D  00A3               	movwf	___lwdiv@dividend+1
  9668  011E  3188  2001  3180   	fcall	___lwdiv
  9669  0121  0020               	movlb	0	; select bank0
  9670  0122  086E               	movf	_Load,w
  9671  0123  3E30               	addlw	48
  9672  0124  0086               	movwf	6
  9673  0125  3002               	movlw	2	; select bank4/5
  9674  0126  0087               	movwf	7
  9675  0127  0820               	movf	?___lwdiv,w
  9676  0128  3FC0               	movwi [0]fsr1
  9677  0129  0821               	movf	?___lwdiv+1,w
  9678  012A  3FC1               	movwi [1]fsr1
  9679                           
  9680                           ;OverLoad_B1.c: 74: if(Load->ADH > Load->ADL)
  9681  012B  086E               	movf	_Load,w
  9682  012C  3E2E               	addlw	46
  9683  012D  0086               	movwf	6
  9684  012E  3002               	movlw	2	; select bank4/5
  9685  012F  0087               	movwf	7
  9686  0130  3F40               	moviw [0]fsr1
  9687  0131  00AD               	movwf	??_Load_Main
  9688  0132  3F41               	moviw [1]fsr1
  9689  0133  00AE               	movwf	??_Load_Main+1
  9690  0134  086E               	movf	_Load,w
  9691  0135  3E30               	addlw	48
  9692  0136  0086               	movwf	6
  9693  0137  3002               	movlw	2	; select bank4/5
  9694  0138  0087               	movwf	7
  9695  0139  3F40               	moviw [0]fsr1
  9696  013A  00AF               	movwf	??_Load_Main+2
  9697  013B  3F41               	moviw [1]fsr1
  9698  013C  00B0               	movwf	??_Load_Main+3
  9699  013D  082E               	movf	??_Load_Main+1,w
  9700  013E  0230               	subwf	??_Load_Main+3,w
  9701  013F  1D03               	skipz
  9702  0140  2943               	goto	u9135
  9703  0141  082D               	movf	??_Load_Main,w
  9704  0142  022F               	subwf	??_Load_Main+2,w
  9705  0143                     u9135:	
  9706  0143  1803               	skipnc
  9707  0144  2ACD               	goto	l9273
  9708                           
  9709                           ;OverLoad_B1.c: 75: {
  9710                           ;OverLoad_B1.c: 76: Load->AD=(Load->ADH-Load->ADL);
  9711  0145  086E               	movf	_Load,w
  9712  0146  3E2E               	addlw	46
  9713  0147  0086               	movwf	6
  9714  0148  3002               	movlw	2	; select bank4/5
  9715  0149  0087               	movwf	7
  9716  014A  086E               	movf	_Load,w
  9717  014B  3E30               	addlw	48
  9718  014C  0084               	movwf	4
  9719  014D  3002               	movlw	2	; select bank4/5
  9720  014E  0085               	movwf	5
  9721  014F  3F00               	moviw [0]fsr0
  9722  0150  00AD               	movwf	??_Load_Main
  9723  0151  3F01               	moviw [1]fsr0
  9724  0152  00AE               	movwf	??_Load_Main+1
  9725  0153  09AD               	comf	??_Load_Main,f
  9726  0154  09AE               	comf	??_Load_Main+1,f
  9727  0155  0AAD               	incf	??_Load_Main,f
  9728  0156  1903               	skipnz
  9729  0157  0AAE               	incf	??_Load_Main+1,f
  9730  0158  3F40               	moviw [0]fsr1
  9731  0159  072D               	addwf	??_Load_Main,w
  9732  015A  00AF               	movwf	??_Load_Main+2
  9733  015B  3F41               	moviw [1]fsr1
  9734  015C  3D2E               	addwfc	??_Load_Main+1,w
  9735  015D  00B0               	movwf	??_Load_Main+3
  9736  015E  086E               	movf	_Load,w
  9737  015F  3E2C               	addlw	44
  9738  0160  0086               	movwf	6
  9739  0161  3002               	movlw	2	; select bank4/5
  9740  0162  0087               	movwf	7
  9741  0163  082F               	movf	??_Load_Main+2,w
  9742  0164  3FC0               	movwi [0]fsr1
  9743  0165  0830               	movf	??_Load_Main+3,w
  9744  0166  3FC1               	movwi [1]fsr1
  9745                           
  9746                           ;OverLoad_B1.c: 78: if(Load->Count < 2)
  9747  0167  086E               	movf	_Load,w
  9748  0168  3E3A               	addlw	58
  9749  0169  0086               	movwf	6
  9750  016A  3002               	movlw	2	; select bank4/5
  9751  016B  0087               	movwf	7
  9752  016C  3002               	movlw	2
  9753  016D  0201               	subwf	1,w
  9754  016E  1803               	skipnc
  9755  016F  29C0               	goto	l9227
  9756                           
  9757                           ;OverLoad_B1.c: 79: {
  9758                           ;OverLoad_B1.c: 80: Load->Count++;
  9759  0170  3001               	movlw	1
  9760  0171  00AD               	movwf	??_Load_Main
  9761  0172  086E               	movf	_Load,w
  9762  0173  3E3A               	addlw	58
  9763  0174  0086               	movwf	6
  9764  0175  3002               	movlw	2	; select bank4/5
  9765  0176  0087               	movwf	7
  9766  0177  082D               	movf	??_Load_Main,w
  9767  0178  0781               	addwf	1,f
  9768                           
  9769                           ;OverLoad_B1.c: 81: if(Load->Count == 1)
  9770  0179  086E               	movf	_Load,w
  9771  017A  3E3A               	addlw	58
  9772  017B  0086               	movwf	6
  9773  017C  3002               	movlw	2	; select bank4/5
  9774  017D  0087               	movwf	7
  9775  017E  0801               	movf	1,w
  9776  017F  3A01               	xorlw	1
  9777  0180  1D03               	skipz
  9778  0181  298C               	goto	l9219
  9779                           
  9780                           ;OverLoad_B1.c: 82: {
  9781                           ;OverLoad_B1.c: 83: Load->JudgeValue=500;
  9782  0182  086E               	movf	_Load,w
  9783  0183  3E36               	addlw	54
  9784  0184  0086               	movwf	6
  9785  0185  3002               	movlw	2	; select bank4/5
  9786  0186  0087               	movwf	7
  9787  0187  30F4               	movlw	244
  9788  0188  3FC0               	movwi [0]fsr1
  9789  0189  3001               	movlw	1
  9790  018A  3FC1               	movwi [1]fsr1
  9791                           
  9792                           ;OverLoad_B1.c: 84: }
  9793  018B  29C0               	goto	l9227
  9794  018C                     l9219:	
  9795                           
  9796                           ;OverLoad_B1.c: 85: else if(Load->Count == 2)
  9797  018C  086E               	movf	_Load,w
  9798  018D  3E3A               	addlw	58
  9799  018E  0086               	movwf	6
  9800  018F  3002               	movlw	2	; select bank4/5
  9801  0190  0087               	movwf	7
  9802  0191  0801               	movf	1,w
  9803  0192  3A02               	xorlw	2
  9804  0193  1D03               	skipz
  9805  0194  29C0               	goto	l9227
  9806                           
  9807                           ;OverLoad_B1.c: 86: {
  9808                           ;OverLoad_B1.c: 87: if(Load->LightsCount == 1)
  9809  0195  086E               	movf	_Load,w
  9810  0196  3E3E               	addlw	62
  9811  0197  0086               	movwf	6
  9812  0198  3002               	movlw	2	; select bank4/5
  9813  0199  0087               	movwf	7
  9814  019A  0801               	movf	1,w
  9815  019B  3A01               	xorlw	1
  9816  019C  1D03               	skipz
  9817  019D  29A8               	goto	l9225
  9818                           
  9819                           ;OverLoad_B1.c: 88: {
  9820                           ;OverLoad_B1.c: 89: Load->JudgeValue=0x32;
  9821  019E  086E               	movf	_Load,w
  9822  019F  3E36               	addlw	54
  9823  01A0  0086               	movwf	6
  9824  01A1  3002               	movlw	2	; select bank4/5
  9825  01A2  0087               	movwf	7
  9826  01A3  3032               	movlw	50
  9827  01A4  3FC0               	movwi [0]fsr1
  9828  01A5  3000               	movlw	0
  9829  01A6  3FC1               	movwi [1]fsr1
  9830                           
  9831                           ;OverLoad_B1.c: 90: }
  9832  01A7  29C0               	goto	l9227
  9833  01A8                     l9225:	
  9834                           
  9835                           ;OverLoad_B1.c: 91: else
  9836                           ;OverLoad_B1.c: 92: {
  9837                           ;OverLoad_B1.c: 93: Load->JudgeValue=(0x32+Load->TotalLoad)-0x08;
  9838  01A8  086E               	movf	_Load,w
  9839  01A9  3E06               	addlw	6
  9840  01AA  0086               	movwf	6
  9841  01AB  3002               	movlw	2	; select bank4/5
  9842  01AC  0087               	movwf	7
  9843  01AD  3F40               	moviw [0]fsr1
  9844  01AE  00AD               	movwf	??_Load_Main
  9845  01AF  3F41               	moviw [1]fsr1
  9846  01B0  00AE               	movwf	??_Load_Main+1
  9847  01B1  082D               	movf	??_Load_Main,w
  9848  01B2  3E2A               	addlw	42
  9849  01B3  00AF               	movwf	??_Load_Main+2
  9850  01B4  3000               	movlw	0
  9851  01B5  3D2E               	addwfc	??_Load_Main+1,w
  9852  01B6  00B0               	movwf	??_Load_Main+3
  9853  01B7  086E               	movf	_Load,w
  9854  01B8  3E36               	addlw	54
  9855  01B9  0086               	movwf	6
  9856  01BA  3002               	movlw	2	; select bank4/5
  9857  01BB  0087               	movwf	7
  9858  01BC  082F               	movf	??_Load_Main+2,w
  9859  01BD  3FC0               	movwi [0]fsr1
  9860  01BE  0830               	movf	??_Load_Main+3,w
  9861  01BF  3FC1               	movwi [1]fsr1
  9862  01C0                     l9227:	
  9863                           
  9864                           ;OverLoad_B1.c: 94: }
  9865                           ;OverLoad_B1.c: 95: }
  9866                           ;OverLoad_B1.c: 96: }
  9867                           ;OverLoad_B1.c: 98: if(Load->AD >= Load->JudgeValue)
  9868  01C0  086E               	movf	_Load,w
  9869  01C1  3E36               	addlw	54
  9870  01C2  0086               	movwf	6
  9871  01C3  3002               	movlw	2	; select bank4/5
  9872  01C4  0087               	movwf	7
  9873  01C5  3F40               	moviw [0]fsr1
  9874  01C6  00AD               	movwf	??_Load_Main
  9875  01C7  3F41               	moviw [1]fsr1
  9876  01C8  00AE               	movwf	??_Load_Main+1
  9877  01C9  086E               	movf	_Load,w
  9878  01CA  3E2C               	addlw	44
  9879  01CB  0086               	movwf	6
  9880  01CC  3002               	movlw	2	; select bank4/5
  9881  01CD  0087               	movwf	7
  9882  01CE  3F40               	moviw [0]fsr1
  9883  01CF  00AF               	movwf	??_Load_Main+2
  9884  01D0  3F41               	moviw [1]fsr1
  9885  01D1  00B0               	movwf	??_Load_Main+3
  9886  01D2  082E               	movf	??_Load_Main+1,w
  9887  01D3  0230               	subwf	??_Load_Main+3,w
  9888  01D4  1D03               	skipz
  9889  01D5  29D8               	goto	u9185
  9890  01D6  082D               	movf	??_Load_Main,w
  9891  01D7  022F               	subwf	??_Load_Main+2,w
  9892  01D8                     u9185:	
  9893  01D8  1C03               	skipc
  9894  01D9  2A46               	goto	l9247
  9895                           
  9896                           ;OverLoad_B1.c: 99: {
  9897                           ;OverLoad_B1.c: 100: Load->ErrorCount++;
  9898  01DA  3001               	movlw	1
  9899  01DB  00AD               	movwf	??_Load_Main
  9900  01DC  086E               	movf	_Load,w
  9901  01DD  3E3C               	addlw	60
  9902  01DE  0086               	movwf	6
  9903  01DF  3002               	movlw	2	; select bank4/5
  9904  01E0  0087               	movwf	7
  9905  01E1  082D               	movf	??_Load_Main,w
  9906  01E2  0781               	addwf	1,f
  9907                           
  9908                           ;OverLoad_B1.c: 101: if(Load->ErrorCount >2)
  9909  01E3  086E               	movf	_Load,w
  9910  01E4  3E3C               	addlw	60
  9911  01E5  0086               	movwf	6
  9912  01E6  3002               	movlw	2	; select bank4/5
  9913  01E7  0087               	movwf	7
  9914  01E8  3003               	movlw	3
  9915  01E9  0201               	subwf	1,w
  9916  01EA  1C03               	skipc
  9917  01EB  2ACD               	goto	l9273
  9918                           
  9919                           ;OverLoad_B1.c: 102: {
  9920                           ;OverLoad_B1.c: 103: Load->ErrorCount=0;
  9921  01EC  086E               	movf	_Load,w
  9922  01ED  3E3C               	addlw	60
  9923  01EE  0086               	movwf	6
  9924  01EF  3002               	movlw	2	; select bank4/5
  9925  01F0  0087               	movwf	7
  9926  01F1  0181               	clrf	1
  9927                           
  9928                           ;OverLoad_B1.c: 104: setLoad_Exceptions(1);
  9929  01F2  3001               	movlw	1
  9930  01F3  319E  26A8  3180   	fcall	_setLoad_Exceptions
  9931                           
  9932                           ;OverLoad_B1.c: 106: Product->Data[4]=(Load->AD >> 8);
  9933  01F6  0020               	movlb	0	; select bank0
  9934  01F7  086E               	movf	_Load,w
  9935  01F8  3E2C               	addlw	44
  9936  01F9  0086               	movwf	6
  9937  01FA  3002               	movlw	2	; select bank4/5
  9938  01FB  0087               	movwf	7
  9939  01FC  3F40               	moviw [0]fsr1
  9940  01FD  00AD               	movwf	??_Load_Main
  9941  01FE  3F41               	moviw [1]fsr1
  9942  01FF  00AE               	movwf	??_Load_Main+1
  9943  0200  082E               	movf	??_Load_Main+1,w
  9944  0201  00AF               	movwf	??_Load_Main+2
  9945  0202  086F               	movf	_Product,w
  9946  0203  3E04               	addlw	4
  9947  0204  0086               	movwf	6
  9948  0205  3001               	movlw	1	; select bank2/3
  9949  0206  0087               	movwf	7
  9950  0207  082F               	movf	??_Load_Main+2,w
  9951  0208  0081               	movwf	1
  9952                           
  9953                           ;OverLoad_B1.c: 107: Product->Data[5]=Load->AD;
  9954  0209  086E               	movf	_Load,w
  9955  020A  3E2C               	addlw	44
  9956  020B  0086               	movwf	6
  9957  020C  3002               	movlw	2	; select bank4/5
  9958  020D  0087               	movwf	7
  9959  020E  0801               	movf	1,w
  9960  020F  00AD               	movwf	??_Load_Main
  9961  0210  086F               	movf	_Product,w
  9962  0211  3E05               	addlw	5
  9963  0212  0086               	movwf	6
  9964  0213  3001               	movlw	1	; select bank2/3
  9965  0214  0087               	movwf	7
  9966  0215  082D               	movf	??_Load_Main,w
  9967  0216  0081               	movwf	1
  9968                           
  9969                           ;OverLoad_B1.c: 108: Product->Data[16]=(Load->JudgeValue >> 8);
  9970  0217  086E               	movf	_Load,w
  9971  0218  3E36               	addlw	54
  9972  0219  0086               	movwf	6
  9973  021A  3002               	movlw	2	; select bank4/5
  9974  021B  0087               	movwf	7
  9975  021C  3F40               	moviw [0]fsr1
  9976  021D  00AD               	movwf	??_Load_Main
  9977  021E  3F41               	moviw [1]fsr1
  9978  021F  00AE               	movwf	??_Load_Main+1
  9979  0220  082E               	movf	??_Load_Main+1,w
  9980  0221  00AF               	movwf	??_Load_Main+2
  9981  0222  086F               	movf	_Product,w
  9982  0223  3E10               	addlw	16
  9983  0224  0086               	movwf	6
  9984  0225  3001               	movlw	1	; select bank2/3
  9985  0226  0087               	movwf	7
  9986  0227  082F               	movf	??_Load_Main+2,w
  9987  0228  0081               	movwf	1
  9988                           
  9989                           ;OverLoad_B1.c: 109: Product->Data[17]=Load->JudgeValue;
  9990  0229  086E               	movf	_Load,w
  9991  022A  3E36               	addlw	54
  9992  022B  0086               	movwf	6
  9993  022C  3002               	movlw	2	; select bank4/5
  9994  022D  0087               	movwf	7
  9995  022E  0801               	movf	1,w
  9996  022F  00AD               	movwf	??_Load_Main
  9997  0230  086F               	movf	_Product,w
  9998  0231  3E11               	addlw	17
  9999  0232  0086               	movwf	6
 10000  0233  3001               	movlw	1	; select bank2/3
 10001  0234  0087               	movwf	7
 10002  0235  082D               	movf	??_Load_Main,w
 10003  0236  0081               	movwf	1
 10004                           
 10005                           ;OverLoad_B1.c: 110: Product->Data[8]=Load->LightsCount;
 10006  0237  086E               	movf	_Load,w
 10007  0238  3E3E               	addlw	62
 10008  0239  0086               	movwf	6
 10009  023A  3002               	movlw	2	; select bank4/5
 10010  023B  0087               	movwf	7
 10011  023C  0801               	movf	1,w
 10012  023D  00AD               	movwf	??_Load_Main
 10013  023E  086F               	movf	_Product,w
 10014  023F  3E08               	addlw	8
 10015  0240  0086               	movwf	6
 10016  0241  3001               	movlw	1	; select bank2/3
 10017  0242  0087               	movwf	7
 10018  0243  082D               	movf	??_Load_Main,w
 10019  0244  0081               	movwf	1
 10020                           
 10021                           ;OverLoad_B1.c: 113: }
 10022                           ;OverLoad_B1.c: 114: }
 10023  0245  2ACD               	goto	l9273
 10024  0246                     l9247:	
 10025                           
 10026                           ;OverLoad_B1.c: 115: else
 10027                           ;OverLoad_B1.c: 116: {
 10028                           ;OverLoad_B1.c: 117: Load->ErrorCount=0;
 10029  0246  086E               	movf	_Load,w
 10030  0247  3E3C               	addlw	60
 10031  0248  0086               	movwf	6
 10032  0249  3002               	movlw	2	; select bank4/5
 10033  024A  0087               	movwf	7
 10034  024B  0181               	clrf	1
 10035                           
 10036                           ;OverLoad_B1.c: 118: if(Load->SafeCount < 10)
 10037  024C  086E               	movf	_Load,w
 10038  024D  3E42               	addlw	66
 10039  024E  0086               	movwf	6
 10040  024F  3002               	movlw	2	; select bank4/5
 10041  0250  0087               	movwf	7
 10042  0251  300A               	movlw	10
 10043  0252  0201               	subwf	1,w
 10044  0253  1803               	skipnc
 10045  0254  2A5E               	goto	l9253
 10046                           
 10047                           ;OverLoad_B1.c: 119: {
 10048                           ;OverLoad_B1.c: 120: Load->SafeCount++;
 10049  0255  3001               	movlw	1
 10050  0256  00AD               	movwf	??_Load_Main
 10051  0257  086E               	movf	_Load,w
 10052  0258  3E42               	addlw	66
 10053  0259  0086               	movwf	6
 10054  025A  3002               	movlw	2	; select bank4/5
 10055  025B  0087               	movwf	7
 10056  025C  082D               	movf	??_Load_Main,w
 10057  025D  0781               	addwf	1,f
 10058  025E                     l9253:	
 10059                           
 10060                           ;OverLoad_B1.c: 121: }
 10061                           ;OverLoad_B1.c: 122: if(Load->SafeCount >= 10)
 10062  025E  086E               	movf	_Load,w
 10063  025F  3E42               	addlw	66
 10064  0260  0086               	movwf	6
 10065  0261  3002               	movlw	2	; select bank4/5
 10066  0262  0087               	movwf	7
 10067  0263  300A               	movlw	10
 10068  0264  0201               	subwf	1,w
 10069  0265  1C03               	skipc
 10070  0266  2ACD               	goto	l9273
 10071                           
 10072                           ;OverLoad_B1.c: 123: {
 10073                           ;OverLoad_B1.c: 124: Load->Safe=1;
 10074  0267  086E               	movf	_Load,w
 10075  0268  0086               	movwf	6
 10076  0269  3002               	movlw	2	; select bank4/5
 10077  026A  0087               	movwf	7
 10078  026B  1581               	bsf	1,3
 10079                           
 10080                           ;OverLoad_B1.c: 128: setDimmerLights_Clear(1,1);
 10081  026C  01A2               	clrf	setDimmerLights_Clear@command
 10082  026D  0AA2               	incf	setDimmerLights_Clear@command,f
 10083  026E  3001               	movlw	1
 10084  026F  31A7  27E0  3180   	fcall	_setDimmerLights_Clear
 10085                           
 10086                           ;OverLoad_B1.c: 132: ;;
 10087                           ;OverLoad_B1.c: 138: setDimmerLights_Clear(2,1);
 10088  0272  0020               	movlb	0	; select bank0
 10089  0273  01A2               	clrf	setDimmerLights_Clear@command
 10090  0274  0AA2               	incf	setDimmerLights_Clear@command,f
 10091  0275  3002               	movlw	2
 10092  0276  31A7  27E0  3180   	fcall	_setDimmerLights_Clear
 10093                           
 10094                           ;OverLoad_B1.c: 142: ;;
 10095                           ;OverLoad_B1.c: 157: if(Load->StatusOn)
 10096  0279  0020               	movlb	0	; select bank0
 10097  027A  086E               	movf	_Load,w
 10098  027B  3E46               	addlw	70
 10099  027C  0086               	movwf	6
 10100  027D  3002               	movlw	2	; select bank4/5
 10101  027E  0087               	movwf	7
 10102  027F  1C01               	btfss	1,0
 10103  0280  2A95               	goto	l9265
 10104                           
 10105                           ;OverLoad_B1.c: 158: {
 10106                           ;OverLoad_B1.c: 159: Load->StatusOn=0;
 10107  0281  086E               	movf	_Load,w
 10108  0282  3E46               	addlw	70
 10109  0283  0086               	movwf	6
 10110  0284  3002               	movlw	2	; select bank4/5
 10111  0285  0087               	movwf	7
 10112  0286  1001               	bcf	1,0
 10113                           
 10114                           ;OverLoad_B1.c: 160: Load->TotalLoad=Load->AD;
 10115  0287  086E               	movf	_Load,w
 10116  0288  3E2C               	addlw	44
 10117  0289  0086               	movwf	6
 10118  028A  3002               	movlw	2	; select bank4/5
 10119  028B  0087               	movwf	7
 10120  028C  086E               	movf	_Load,w
 10121  028D  3E06               	addlw	6
 10122  028E  0084               	movwf	4
 10123  028F  3002               	movlw	2	; select bank4/5
 10124  0290  0085               	movwf	5
 10125  0291  3F40               	moviw [0]fsr1
 10126  0292  3F80               	movwi [0]fsr0
 10127  0293  3F41               	moviw [1]fsr1
 10128  0294  3F81               	movwi [1]fsr0
 10129  0295                     l9265:	
 10130                           
 10131                           ;OverLoad_B1.c: 162: }
 10132                           ;OverLoad_B1.c: 164: if(Load->StatusOff)
 10133  0295  086E               	movf	_Load,w
 10134  0296  3E46               	addlw	70
 10135  0297  0086               	movwf	6
 10136  0298  3002               	movlw	2	; select bank4/5
 10137  0299  0087               	movwf	7
 10138  029A  1C81               	btfss	1,1
 10139  029B  2ACD               	goto	l9273
 10140                           
 10141                           ;OverLoad_B1.c: 165: {
 10142                           ;OverLoad_B1.c: 166: Load->StatusOff=0;
 10143  029C  086E               	movf	_Load,w
 10144  029D  3E46               	addlw	70
 10145  029E  0086               	movwf	6
 10146  029F  3002               	movlw	2	; select bank4/5
 10147  02A0  0087               	movwf	7
 10148  02A1  1081               	bcf	1,1
 10149                           
 10150                           ;OverLoad_B1.c: 167: Load->TotalLoad=Load->AD;
 10151  02A2  086E               	movf	_Load,w
 10152  02A3  3E2C               	addlw	44
 10153  02A4  0086               	movwf	6
 10154  02A5  3002               	movlw	2	; select bank4/5
 10155  02A6  0087               	movwf	7
 10156  02A7  086E               	movf	_Load,w
 10157  02A8  3E06               	addlw	6
 10158  02A9  0084               	movwf	4
 10159  02AA  3002               	movlw	2	; select bank4/5
 10160  02AB  0085               	movwf	5
 10161  02AC  3F40               	moviw [0]fsr1
 10162  02AD  3F80               	movwi [0]fsr0
 10163  02AE  3F41               	moviw [1]fsr1
 10164  02AF  3F81               	movwi [1]fsr0
 10165                           
 10166                           ;OverLoad_B1.c: 168: Load->JudgeValue=0x32*Load->LightsCount;
 10167  02B0  086E               	movf	_Load,w
 10168  02B1  3E3E               	addlw	62
 10169  02B2  0086               	movwf	6
 10170  02B3  3002               	movlw	2	; select bank4/5
 10171  02B4  0087               	movwf	7
 10172  02B5  0801               	movf	1,w
 10173  02B6  00AD               	movwf	??_Load_Main
 10174  02B7  01AE               	clrf	??_Load_Main+1
 10175  02B8  082D               	movf	??_Load_Main,w
 10176  02B9  00A0               	movwf	___wmul@multiplier
 10177  02BA  082E               	movf	??_Load_Main+1,w
 10178  02BB  00A1               	movwf	___wmul@multiplier+1
 10179  02BC  3032               	movlw	50
 10180  02BD  00A2               	movwf	___wmul@multiplicand
 10181  02BE  3000               	movlw	0
 10182  02BF  00A3               	movwf	___wmul@multiplicand+1
 10183  02C0  319A  228A  3180   	fcall	___wmul
 10184  02C3  0020               	movlb	0	; select bank0
 10185  02C4  086E               	movf	_Load,w
 10186  02C5  3E36               	addlw	54
 10187  02C6  0086               	movwf	6
 10188  02C7  3002               	movlw	2	; select bank4/5
 10189  02C8  0087               	movwf	7
 10190  02C9  0820               	movf	?___wmul,w
 10191  02CA  3FC0               	movwi [0]fsr1
 10192  02CB  0821               	movf	?___wmul+1,w
 10193  02CC  3FC1               	movwi [1]fsr1
 10194  02CD                     l9273:	
 10195                           
 10196                           ;OverLoad_B1.c: 169: }
 10197                           ;OverLoad_B1.c: 170: }
 10198                           ;OverLoad_B1.c: 171: }
 10199                           ;OverLoad_B1.c: 172: }
 10200                           ;OverLoad_B1.c: 173: setLoad_AH_AL_Restore();
 10201  02CD  319B  232B  3180   	fcall	_setLoad_AH_AL_Restore
 10202                           
 10203                           ;OverLoad_B1.c: 175: Product->Data[2]=(Load->AD >> 8);
 10204  02D0  0020               	movlb	0	; select bank0
 10205  02D1  086E               	movf	_Load,w
 10206  02D2  3E2C               	addlw	44
 10207  02D3  0086               	movwf	6
 10208  02D4  3002               	movlw	2	; select bank4/5
 10209  02D5  0087               	movwf	7
 10210  02D6  3F40               	moviw [0]fsr1
 10211  02D7  00AD               	movwf	??_Load_Main
 10212  02D8  3F41               	moviw [1]fsr1
 10213  02D9  00AE               	movwf	??_Load_Main+1
 10214  02DA  082E               	movf	??_Load_Main+1,w
 10215  02DB  00AF               	movwf	??_Load_Main+2
 10216  02DC  086F               	movf	_Product,w
 10217  02DD  3E02               	addlw	2
 10218  02DE  0086               	movwf	6
 10219  02DF  3001               	movlw	1	; select bank2/3
 10220  02E0  0087               	movwf	7
 10221  02E1  082F               	movf	??_Load_Main+2,w
 10222  02E2  0081               	movwf	1
 10223                           
 10224                           ;OverLoad_B1.c: 176: Product->Data[3]=Load->AD;
 10225  02E3  086E               	movf	_Load,w
 10226  02E4  3E2C               	addlw	44
 10227  02E5  0086               	movwf	6
 10228  02E6  3002               	movlw	2	; select bank4/5
 10229  02E7  0087               	movwf	7
 10230  02E8  0801               	movf	1,w
 10231  02E9  00AD               	movwf	??_Load_Main
 10232  02EA  086F               	movf	_Product,w
 10233  02EB  3E03               	addlw	3
 10234  02EC  0086               	movwf	6
 10235  02ED  3001               	movlw	1	; select bank2/3
 10236  02EE  0087               	movwf	7
 10237  02EF  082D               	movf	??_Load_Main,w
 10238  02F0  0081               	movwf	1
 10239                           
 10240                           ;OverLoad_B1.c: 177: Product->Data[8]=Load->LightsCount;
 10241  02F1  086E               	movf	_Load,w
 10242  02F2  3E3E               	addlw	62
 10243  02F3  0086               	movwf	6
 10244  02F4  3002               	movlw	2	; select bank4/5
 10245  02F5  0087               	movwf	7
 10246  02F6  0801               	movf	1,w
 10247  02F7  00AD               	movwf	??_Load_Main
 10248  02F8  086F               	movf	_Product,w
 10249  02F9  3E08               	addlw	8
 10250  02FA  0086               	movwf	6
 10251  02FB  3001               	movlw	1	; select bank2/3
 10252  02FC  0087               	movwf	7
 10253  02FD  082D               	movf	??_Load_Main,w
 10254  02FE  0081               	movwf	1
 10255                           
 10256                           ;OverLoad_B1.c: 178: Product->Data[10]=Load->TotalLoad;
 10257  02FF  086E               	movf	_Load,w
 10258  0300  3E06               	addlw	6
 10259  0301  0086               	movwf	6
 10260  0302  3002               	movlw	2	; select bank4/5
 10261  0303  0087               	movwf	7
 10262  0304  0801               	movf	1,w
 10263  0305  00AD               	movwf	??_Load_Main
 10264  0306  086F               	movf	_Product,w
 10265  0307  3E0A               	addlw	10
 10266  0308  0086               	movwf	6
 10267  0309  3001               	movlw	1	; select bank2/3
 10268  030A  0087               	movwf	7
 10269  030B  082D               	movf	??_Load_Main,w
 10270  030C  0081               	movwf	1
 10271                           
 10272                           ;OverLoad_B1.c: 179: Product->Data[16]=(Load->JudgeValue >> 8);
 10273  030D  086E               	movf	_Load,w
 10274  030E  3E36               	addlw	54
 10275  030F  0086               	movwf	6
 10276  0310  3002               	movlw	2	; select bank4/5
 10277  0311  0087               	movwf	7
 10278  0312  3F40               	moviw [0]fsr1
 10279  0313  00AD               	movwf	??_Load_Main
 10280  0314  3F41               	moviw [1]fsr1
 10281  0315  00AE               	movwf	??_Load_Main+1
 10282  0316  082E               	movf	??_Load_Main+1,w
 10283  0317  00AF               	movwf	??_Load_Main+2
 10284  0318  086F               	movf	_Product,w
 10285  0319  3E10               	addlw	16
 10286  031A  0086               	movwf	6
 10287  031B  3001               	movlw	1	; select bank2/3
 10288  031C  0087               	movwf	7
 10289  031D  082F               	movf	??_Load_Main+2,w
 10290  031E  0081               	movwf	1
 10291                           
 10292                           ;OverLoad_B1.c: 180: Product->Data[17]=Load->JudgeValue;
 10293  031F  086E               	movf	_Load,w
 10294  0320  3E36               	addlw	54
 10295  0321  0086               	movwf	6
 10296  0322  3002               	movlw	2	; select bank4/5
 10297  0323  0087               	movwf	7
 10298  0324  0801               	movf	1,w
 10299  0325  00AD               	movwf	??_Load_Main
 10300  0326  086F               	movf	_Product,w
 10301  0327  3E11               	addlw	17
 10302  0328  0086               	movwf	6
 10303  0329  3001               	movlw	1	; select bank2/3
 10304  032A  0087               	movwf	7
 10305  032B  082D               	movf	??_Load_Main,w
 10306  032C  0081               	movwf	1
 10307                           
 10308                           ;OverLoad_B1.c: 181: Product->Data[18]=Load->ErrorStatus;
 10309  032D  086E               	movf	_Load,w
 10310  032E  3E05               	addlw	5
 10311  032F  0086               	movwf	6
 10312  0330  3002               	movlw	2	; select bank4/5
 10313  0331  0087               	movwf	7
 10314  0332  0801               	movf	1,w
 10315  0333  00AD               	movwf	??_Load_Main
 10316  0334  086F               	movf	_Product,w
 10317  0335  3E12               	addlw	18
 10318  0336  0086               	movwf	6
 10319  0337  3001               	movlw	1	; select bank2/3
 10320  0338  0087               	movwf	7
 10321  0339  082D               	movf	??_Load_Main,w
 10322  033A  0081               	movwf	1
 10323                           
 10324                           ;OverLoad_B1.c: 182: Product->Data[19]=Load->Count;
 10325  033B  086E               	movf	_Load,w
 10326  033C  3E3A               	addlw	58
 10327  033D  0086               	movwf	6
 10328  033E  3002               	movlw	2	; select bank4/5
 10329  033F  0087               	movwf	7
 10330  0340  0801               	movf	1,w
 10331  0341  00AD               	movwf	??_Load_Main
 10332  0342  086F               	movf	_Product,w
 10333  0343  3E13               	addlw	19
 10334  0344  0086               	movwf	6
 10335  0345  3001               	movlw	1	; select bank2/3
 10336  0346  0087               	movwf	7
 10337  0347  082D               	movf	??_Load_Main,w
 10338  0348  0081               	movwf	1
 10339                           
 10340                           ;OverLoad_B1.c: 185: }
 10341                           ;OverLoad_B1.c: 186: }
 10342  0349  0008               	return
 10343  034A                     l9291:	
 10344                           
 10345                           ;OverLoad_B1.c: 187: else
 10346                           ;OverLoad_B1.c: 188: {
 10347                           ;OverLoad_B1.c: 189: if(Load->GO)
 10348  034A  086E               	movf	_Load,w
 10349  034B  0086               	movwf	6
 10350  034C  3002               	movlw	2	; select bank4/5
 10351  034D  0087               	movwf	7
 10352  034E  1C81               	btfss	1,1
 10353  034F  2B66               	goto	l9297
 10354                           
 10355                           ;OverLoad_B1.c: 190: {
 10356                           ;OverLoad_B1.c: 191: if(!Load->LightsON)
 10357  0350  086E               	movf	_Load,w
 10358  0351  0086               	movwf	6
 10359  0352  3002               	movlw	2	; select bank4/5
 10360  0353  0087               	movwf	7
 10361  0354  1901               	btfsc	1,2
 10362  0355  2B60               	goto	l1465
 10363                           
 10364                           ;OverLoad_B1.c: 192: {
 10365                           ;OverLoad_B1.c: 193: Load->LightsON=1;
 10366  0356  086E               	movf	_Load,w
 10367  0357  0086               	movwf	6
 10368  0358  3002               	movlw	2	; select bank4/5
 10369  0359  0087               	movwf	7
 10370  035A  1501               	bsf	1,2
 10371                           
 10372                           ;OverLoad_B1.c: 194: Load->Safe=0;
 10373  035B  086E               	movf	_Load,w
 10374  035C  0086               	movwf	6
 10375  035D  3002               	movlw	2	; select bank4/5
 10376  035E  0087               	movwf	7
 10377  035F  1181               	bcf	1,3
 10378  0360                     l1465:	
 10379                           ;OverLoad_B1.c: 195: }
 10380                           ;OverLoad_B1.c: 196: if(1 && 1)
 10381                           
 10382                           
 10383                           ;OverLoad_B1.c: 197: {
 10384                           ;OverLoad_B1.c: 198: Load->ADtoGO=1;
 10385  0360  086E               	movf	_Load,w
 10386  0361  0086               	movwf	6
 10387  0362  3002               	movlw	2	; select bank4/5
 10388  0363  0087               	movwf	7
 10389  0364  1601               	bsf	1,4
 10390                           
 10391                           ;OverLoad_B1.c: 199: }
 10392                           ;OverLoad_B1.c: 200: }
 10393  0365  0008               	return
 10394  0366                     l9297:	
 10395                           
 10396                           ;OverLoad_B1.c: 201: else
 10397                           ;OverLoad_B1.c: 202: {
 10398                           ;OverLoad_B1.c: 203: if(Load->LightsON)
 10399  0366  086E               	movf	_Load,w
 10400  0367  0086               	movwf	6
 10401  0368  3002               	movlw	2	; select bank4/5
 10402  0369  0087               	movwf	7
 10403  036A  1D01               	btfss	1,2
 10404  036B  0008               	return
 10405                           
 10406                           ;OverLoad_B1.c: 204: {
 10407                           ;OverLoad_B1.c: 205: Load->LightsON=0;
 10408  036C  086E               	movf	_Load,w
 10409  036D  0086               	movwf	6
 10410  036E  3002               	movlw	2	; select bank4/5
 10411  036F  0087               	movwf	7
 10412  0370  1101               	bcf	1,2
 10413                           
 10414                           ;OverLoad_B1.c: 206: Load->Safe=1;
 10415  0371  086E               	movf	_Load,w
 10416  0372  0086               	movwf	6
 10417  0373  3002               	movlw	2	; select bank4/5
 10418  0374  0087               	movwf	7
 10419  0375  1581               	bsf	1,3
 10420                           
 10421                           ;OverLoad_B1.c: 207: Load->ErrorCount=0;
 10422  0376  086E               	movf	_Load,w
 10423  0377  3E3C               	addlw	60
 10424  0378  0086               	movwf	6
 10425  0379  3002               	movlw	2	; select bank4/5
 10426  037A  0087               	movwf	7
 10427  037B  0181               	clrf	1
 10428                           
 10429                           ;OverLoad_B1.c: 208: Load->Count=0;
 10430  037C  086E               	movf	_Load,w
 10431  037D  3E3A               	addlw	58
 10432  037E  0086               	movwf	6
 10433  037F  3002               	movlw	2	; select bank4/5
 10434  0380  0087               	movwf	7
 10435  0381  0181               	clrf	1
 10436                           
 10437                           ;OverLoad_B1.c: 209: Load->TotalLoad=0;
 10438  0382  086E               	movf	_Load,w
 10439  0383  3E06               	addlw	6
 10440  0384  0086               	movwf	6
 10441  0385  3002               	movlw	2	; select bank4/5
 10442  0386  0087               	movwf	7
 10443  0387  3000               	movlw	0
 10444  0388  3FC0               	movwi [0]fsr1
 10445  0389  3FC1               	movwi [1]fsr1
 10446                           
 10447                           ;OverLoad_B1.c: 210: Load->NumberCount=0;
 10448  038A  086E               	movf	_Load,w
 10449  038B  3E3F               	addlw	63
 10450  038C  0086               	movwf	6
 10451  038D  3002               	movlw	2	; select bank4/5
 10452  038E  0087               	movwf	7
 10453  038F  0181               	clrf	1
 10454                           
 10455                           ;OverLoad_B1.c: 211: Load->StatusOn=0;
 10456  0390  086E               	movf	_Load,w
 10457  0391  3E46               	addlw	70
 10458  0392  0086               	movwf	6
 10459  0393  3002               	movlw	2	; select bank4/5
 10460  0394  0087               	movwf	7
 10461  0395  1001               	bcf	1,0
 10462                           
 10463                           ;OverLoad_B1.c: 212: Load->StatusOff=0;
 10464  0396  086E               	movf	_Load,w
 10465  0397  3E46               	addlw	70
 10466  0398  0086               	movwf	6
 10467  0399  3002               	movlw	2	; select bank4/5
 10468  039A  0087               	movwf	7
 10469  039B  1081               	bcf	1,1
 10470                           
 10471                           ;OverLoad_B1.c: 213: Load->AD=0;
 10472  039C  086E               	movf	_Load,w
 10473  039D  3E2C               	addlw	44
 10474  039E  0086               	movwf	6
 10475  039F  3002               	movlw	2	; select bank4/5
 10476  03A0  0087               	movwf	7
 10477  03A1  3000               	movlw	0
 10478  03A2  3FC0               	movwi [0]fsr1
 10479  03A3  3FC1               	movwi [1]fsr1
 10480                           
 10481                           ;OverLoad_B1.c: 214: setLoad_AH_AL_Restore();
 10482  03A4  319B  232B  3180   	fcall	_setLoad_AH_AL_Restore
 10483                           
 10484                           ;OverLoad_B1.c: 218: setDimmerLights_Clear(1,1);
 10485  03A7  0020               	movlb	0	; select bank0
 10486  03A8  01A2               	clrf	setDimmerLights_Clear@command
 10487  03A9  0AA2               	incf	setDimmerLights_Clear@command,f
 10488  03AA  3001               	movlw	1
 10489  03AB  31A7  27E0  3180   	fcall	_setDimmerLights_Clear
 10490                           
 10491                           ;OverLoad_B1.c: 222: ;;
 10492                           ;OverLoad_B1.c: 228: setDimmerLights_Clear(2,1);
 10493  03AE  0020               	movlb	0	; select bank0
 10494  03AF  01A2               	clrf	setDimmerLights_Clear@command
 10495  03B0  0AA2               	incf	setDimmerLights_Clear@command,f
 10496  03B1  3002               	movlw	2
 10497  03B2  31A7  27E0  3180   	fcall	_setDimmerLights_Clear
 10498                           
 10499                           ;OverLoad_B1.c: 232: ;;
 10500                           ;OverLoad_B1.c: 247: Product->Data[2]=(Load->AD >> 8);
 10501  03B5  0020               	movlb	0	; select bank0
 10502  03B6  086E               	movf	_Load,w
 10503  03B7  3E2C               	addlw	44
 10504  03B8  0086               	movwf	6
 10505  03B9  3002               	movlw	2	; select bank4/5
 10506  03BA  0087               	movwf	7
 10507  03BB  3F40               	moviw [0]fsr1
 10508  03BC  00AD               	movwf	??_Load_Main
 10509  03BD  3F41               	moviw [1]fsr1
 10510  03BE  00AE               	movwf	??_Load_Main+1
 10511  03BF  082E               	movf	??_Load_Main+1,w
 10512  03C0  00AF               	movwf	??_Load_Main+2
 10513  03C1  086F               	movf	_Product,w
 10514  03C2  3E02               	addlw	2
 10515  03C3  0086               	movwf	6
 10516  03C4  3001               	movlw	1	; select bank2/3
 10517  03C5  0087               	movwf	7
 10518  03C6  082F               	movf	??_Load_Main+2,w
 10519  03C7  0081               	movwf	1
 10520                           
 10521                           ;OverLoad_B1.c: 248: Product->Data[3]=Load->AD;
 10522  03C8  086E               	movf	_Load,w
 10523  03C9  3E2C               	addlw	44
 10524  03CA  0086               	movwf	6
 10525  03CB  3002               	movlw	2	; select bank4/5
 10526  03CC  0087               	movwf	7
 10527  03CD  0801               	movf	1,w
 10528  03CE  00AD               	movwf	??_Load_Main
 10529  03CF  086F               	movf	_Product,w
 10530  03D0  3E03               	addlw	3
 10531  03D1  0086               	movwf	6
 10532  03D2  3001               	movlw	1	; select bank2/3
 10533  03D3  0087               	movwf	7
 10534  03D4  082D               	movf	??_Load_Main,w
 10535  03D5  0081               	movwf	1
 10536                           
 10537                           ;OverLoad_B1.c: 253: Product->Data[8]=Load->NumberCount;
 10538  03D6  086E               	movf	_Load,w
 10539  03D7  3E3F               	addlw	63
 10540  03D8  0086               	movwf	6
 10541  03D9  3002               	movlw	2	; select bank4/5
 10542  03DA  0087               	movwf	7
 10543  03DB  0801               	movf	1,w
 10544  03DC  00AD               	movwf	??_Load_Main
 10545  03DD  086F               	movf	_Product,w
 10546  03DE  3E08               	addlw	8
 10547  03DF  0086               	movwf	6
 10548  03E0  3001               	movlw	1	; select bank2/3
 10549  03E1  0087               	movwf	7
 10550  03E2  082D               	movf	??_Load_Main,w
 10551  03E3  0081               	movwf	1
 10552                           
 10553                           ;OverLoad_B1.c: 254: Product->Data[10]=Load->TotalLoad;
 10554  03E4  086E               	movf	_Load,w
 10555  03E5  3E06               	addlw	6
 10556  03E6  0086               	movwf	6
 10557  03E7  3002               	movlw	2	; select bank4/5
 10558  03E8  0087               	movwf	7
 10559  03E9  0801               	movf	1,w
 10560  03EA  00AD               	movwf	??_Load_Main
 10561  03EB  086F               	movf	_Product,w
 10562  03EC  3E0A               	addlw	10
 10563  03ED  0086               	movwf	6
 10564  03EE  3001               	movlw	1	; select bank2/3
 10565  03EF  0087               	movwf	7
 10566  03F0  082D               	movf	??_Load_Main,w
 10567  03F1  0081               	movwf	1
 10568                           
 10569                           ;OverLoad_B1.c: 255: Product->Data[16]=(Load->JudgeValue >> 8);
 10570  03F2  086E               	movf	_Load,w
 10571  03F3  3E36               	addlw	54
 10572  03F4  0086               	movwf	6
 10573  03F5  3002               	movlw	2	; select bank4/5
 10574  03F6  0087               	movwf	7
 10575  03F7  3F40               	moviw [0]fsr1
 10576  03F8  00AD               	movwf	??_Load_Main
 10577  03F9  3F41               	moviw [1]fsr1
 10578  03FA  00AE               	movwf	??_Load_Main+1
 10579  03FB  082E               	movf	??_Load_Main+1,w
 10580  03FC  00AF               	movwf	??_Load_Main+2
 10581  03FD  086F               	movf	_Product,w
 10582  03FE  3E10               	addlw	16
 10583  03FF  0086               	movwf	6
 10584  0400  3001               	movlw	1	; select bank2/3
 10585  0401  0087               	movwf	7
 10586  0402  082F               	movf	??_Load_Main+2,w
 10587  0403  0081               	movwf	1
 10588                           
 10589                           ;OverLoad_B1.c: 256: Product->Data[17]=Load->JudgeValue;
 10590  0404  086E               	movf	_Load,w
 10591  0405  3E36               	addlw	54
 10592  0406  0086               	movwf	6
 10593  0407  3002               	movlw	2	; select bank4/5
 10594  0408  0087               	movwf	7
 10595  0409  0801               	movf	1,w
 10596  040A  00AD               	movwf	??_Load_Main
 10597  040B  086F               	movf	_Product,w
 10598  040C  3E11               	addlw	17
 10599  040D  0086               	movwf	6
 10600  040E  3001               	movlw	1	; select bank2/3
 10601  040F  0087               	movwf	7
 10602  0410  082D               	movf	??_Load_Main,w
 10603  0411  0081               	movwf	1
 10604                           
 10605                           ;OverLoad_B1.c: 257: Product->Data[18]=Load->ErrorStatus;
 10606  0412  086E               	movf	_Load,w
 10607  0413  3E05               	addlw	5
 10608  0414  0086               	movwf	6
 10609  0415  3002               	movlw	2	; select bank4/5
 10610  0416  0087               	movwf	7
 10611  0417  0801               	movf	1,w
 10612  0418  00AD               	movwf	??_Load_Main
 10613  0419  086F               	movf	_Product,w
 10614  041A  3E12               	addlw	18
 10615  041B  0086               	movwf	6
 10616  041C  3001               	movlw	1	; select bank2/3
 10617  041D  0087               	movwf	7
 10618  041E  082D               	movf	??_Load_Main,w
 10619  041F  0081               	movwf	1
 10620                           
 10621                           ;OverLoad_B1.c: 258: Product->Data[19]=Load->Count;
 10622  0420  086E               	movf	_Load,w
 10623  0421  3E3A               	addlw	58
 10624  0422  0086               	movwf	6
 10625  0423  3002               	movlw	2	; select bank4/5
 10626  0424  0087               	movwf	7
 10627  0425  0801               	movf	1,w
 10628  0426  00AD               	movwf	??_Load_Main
 10629  0427  086F               	movf	_Product,w
 10630  0428  3E13               	addlw	19
 10631  0429  0086               	movwf	6
 10632  042A  3001               	movlw	1	; select bank2/3
 10633  042B  0087               	movwf	7
 10634  042C  082D               	movf	??_Load_Main,w
 10635  042D  0081               	movwf	1
 10636  042E  0008               	return
 10637  042F                     __end_of_Load_Main:	
 10638                           
 10639                           	psect	text46
 10640  1EA8                     __ptext46:	
 10641 ;; *************** function _setLoad_Exceptions *****************
 10642 ;; Defined at:
 10643 ;;		line 266 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;  command         1    wreg     unsigned char 
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;  command         1   12[BANK0 ] unsigned char 
 10648 ;; Return value:  Size  Location     Type
 10649 ;;		None               void
 10650 ;; Registers used:
 10651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;Total ram usage:        2 bytes
 10662 ;; Hardware stack levels used:    1
 10663 ;; Hardware stack levels required when called:    8
 10664 ;; This function calls:
 10665 ;;		_DimmerLights_Exceptions
 10666 ;;		_setLED
 10667 ;;		_setRF_Enable
 10668 ;;		_setSw_Enable
 10669 ;; This function is called by:
 10670 ;;		_Load_Main
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674                           
 10675                           ;psect for function _setLoad_Exceptions
 10676  1EA8                     _setLoad_Exceptions:	
 10677                           
 10678                           ;incstack = 0
 10679                           ; Regs used in _setLoad_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10680                           ;setLoad_Exceptions@command stored from wreg
 10681  1EA8  0020               	movlb	0	; select bank0
 10682  1EA9  00AC               	movwf	setLoad_Exceptions@command
 10683                           
 10684                           ;OverLoad_B1.c: 268: Load->ERROR=command;
 10685  1EAA  086E               	movf	_Load,w
 10686  1EAB  0086               	movwf	6
 10687  1EAC  3002               	movlw	2	; select bank4/5
 10688  1EAD  0087               	movwf	7
 10689  1EAE  082C               	movf	setLoad_Exceptions@command,w
 10690  1EAF  1281               	bcf	1,5
 10691  1EB0  1D03               	skipz
 10692  1EB1  1681               	bsf	1,5
 10693                           
 10694                           ;OverLoad_B1.c: 269: Load->Safe=(~command) & 0x01;
 10695  1EB2  092C               	comf	setLoad_Exceptions@command,w
 10696  1EB3  3901               	andlw	1
 10697  1EB4  00AB               	movwf	??_setLoad_Exceptions
 10698  1EB5  086E               	movf	_Load,w
 10699  1EB6  0086               	movwf	6
 10700  1EB7  3002               	movlw	2	; select bank4/5
 10701  1EB8  0087               	movwf	7
 10702  1EB9  0DAB               	rlf	??_setLoad_Exceptions,f
 10703  1EBA  0DAB               	rlf	??_setLoad_Exceptions,f
 10704  1EBB  0DAB               	rlf	??_setLoad_Exceptions,f
 10705  1EBC  0801               	movf	1,w
 10706  1EBD  062B               	xorwf	??_setLoad_Exceptions,w
 10707  1EBE  39F7               	andlw	-9
 10708  1EBF  062B               	xorwf	??_setLoad_Exceptions,w
 10709  1EC0  0081               	movwf	1
 10710                           
 10711                           ;OverLoad_B1.c: 270: Load->ErrorStatus=command;
 10712  1EC1  082C               	movf	setLoad_Exceptions@command,w
 10713  1EC2  00AB               	movwf	??_setLoad_Exceptions
 10714  1EC3  086E               	movf	_Load,w
 10715  1EC4  3E05               	addlw	5
 10716  1EC5  0086               	movwf	6
 10717  1EC6  3002               	movlw	2	; select bank4/5
 10718  1EC7  0087               	movwf	7
 10719  1EC8  082B               	movf	??_setLoad_Exceptions,w
 10720  1EC9  0081               	movwf	1
 10721                           
 10722                           ;OverLoad_B1.c: 272: if(command)
 10723  1ECA  082C               	movf	setLoad_Exceptions@command,w
 10724  1ECB  1903               	btfsc	3,2
 10725  1ECC  2ED1               	goto	l1472
 10726                           
 10727                           ;OverLoad_B1.c: 273: {
 10728                           ;OverLoad_B1.c: 274: DimmerLights_Exceptions(2);
 10729  1ECD  3002               	movlw	2
 10730  1ECE  3192  2277  319E   	fcall	_DimmerLights_Exceptions
 10731  1ED1                     l1472:	
 10732                           
 10733                           ;OverLoad_B1.c: 278: }
 10734                           ;OverLoad_B1.c: 279: setLED(99,command+10);
 10735  1ED1  0020               	movlb	0	; select bank0
 10736  1ED2  082C               	movf	setLoad_Exceptions@command,w
 10737  1ED3  3E0A               	addlw	10
 10738  1ED4  00AB               	movwf	??_setLoad_Exceptions
 10739  1ED5  082B               	movf	??_setLoad_Exceptions,w
 10740  1ED6  00A2               	movwf	setLED@command
 10741  1ED7  3063               	movlw	99
 10742  1ED8  3191  21B8  319E   	fcall	_setLED
 10743                           
 10744                           ;OverLoad_B1.c: 281: setSw_Enable((~command) & 0x01);
 10745  1EDB  0020               	movlb	0	; select bank0
 10746  1EDC  092C               	comf	setLoad_Exceptions@command,w
 10747  1EDD  3901               	andlw	1
 10748  1EDE  319A  2233  319E   	fcall	_setSw_Enable
 10749                           
 10750                           ;OverLoad_B1.c: 283: setRF_Enable(1,(~command) & 0x01);
 10751  1EE1  0020               	movlb	0	; select bank0
 10752  1EE2  092C               	comf	setLoad_Exceptions@command,w
 10753  1EE3  3901               	andlw	1
 10754  1EE4  00AB               	movwf	??_setLoad_Exceptions
 10755  1EE5  082B               	movf	??_setLoad_Exceptions,w
 10756  1EE6  00A2               	movwf	setRF_Enable@command
 10757  1EE7  3001               	movlw	1
 10758  1EE8  319C  240D         	fcall	_setRF_Enable
 10759  1EEA  0008               	return
 10760  1EEB                     __end_of_setLoad_Exceptions:	
 10761                           
 10762                           	psect	text47
 10763  1A33                     __ptext47:	
 10764 ;; *************** function _setSw_Enable *****************
 10765 ;; Defined at:
 10766 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;  command         1    wreg     unsigned char 
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;  command         1    2[BANK0 ] unsigned char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;		None               void
 10773 ;; Registers used:
 10774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;Total ram usage:        1 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    5
 10787 ;; This function calls:
 10788 ;;		_SwPointSelect
 10789 ;; This function is called by:
 10790 ;;		_MainT
 10791 ;;		_setLoad_Exceptions
 10792 ;; This function uses a non-reentrant model
 10793 ;;
 10794                           
 10795                           
 10796                           ;psect for function _setSw_Enable
 10797  1A33                     _setSw_Enable:	
 10798                           
 10799                           ;incstack = 0
 10800                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10801                           ;setSw_Enable@command stored from wreg
 10802  1A33  0020               	movlb	0	; select bank0
 10803  1A34  00A2               	movwf	setSw_Enable@command
 10804                           
 10805                           ;Switch_B1.c: 90: SwPointSelect(1);
 10806  1A35  3001               	movlw	1
 10807  1A36  3198  20AC  319A   	fcall	_SwPointSelect
 10808                           
 10809                           ;Switch_B1.c: 91: Sw->Enable=command;
 10810  1A39  087B               	movf	_Sw,w
 10811  1A3A  0086               	movwf	6
 10812  1A3B  3001               	movlw	1	; select bank2/3
 10813  1A3C  0087               	movwf	7
 10814  1A3D  0020               	movlb	0	; select bank0
 10815  1A3E  0822               	movf	setSw_Enable@command,w
 10816  1A3F  1001               	bcf	1,0
 10817  1A40  1D03               	skipz
 10818  1A41  1401               	bsf	1,0
 10819                           
 10820                           ;Switch_B1.c: 95: SwPointSelect(2);
 10821  1A42  3002               	movlw	2
 10822  1A43  3198  20AC         	fcall	_SwPointSelect
 10823                           
 10824                           ;Switch_B1.c: 96: Sw->Enable=command;
 10825  1A45  087B               	movf	_Sw,w
 10826  1A46  0086               	movwf	6
 10827  1A47  3001               	movlw	1	; select bank2/3
 10828  1A48  0087               	movwf	7
 10829  1A49  0020               	movlb	0	; select bank0
 10830  1A4A  0822               	movf	setSw_Enable@command,w
 10831  1A4B  1001               	bcf	1,0
 10832  1A4C  1D03               	skipz
 10833  1A4D  1401               	bsf	1,0
 10834  1A4E  0008               	return
 10835  1A4F                     __end_of_setSw_Enable:	
 10836                           
 10837                           	psect	text48
 10838  1C0D                     __ptext48:	
 10839 ;; *************** function _setRF_Enable *****************
 10840 ;; Defined at:
 10841 ;;		line 185 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  rf              1    wreg     unsigned char 
 10844 ;;  command         1    2[BANK0 ] unsigned char 
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;  rf              1    3[BANK0 ] unsigned char 
 10847 ;; Return value:  Size  Location     Type
 10848 ;;		None               void
 10849 ;; Registers used:
 10850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10856 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;Total ram usage:        2 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:    5
 10863 ;; This function calls:
 10864 ;;		_RfPointSelect
 10865 ;;		_setINT_GO
 10866 ;; This function is called by:
 10867 ;;		_MainT
 10868 ;;		_setLoad_Exceptions
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           
 10873                           ;psect for function _setRF_Enable
 10874  1C0D                     _setRF_Enable:	
 10875                           
 10876                           ;incstack = 0
 10877                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10878                           ;setRF_Enable@rf stored from wreg
 10879  1C0D  0020               	movlb	0	; select bank0
 10880  1C0E  00A3               	movwf	setRF_Enable@rf
 10881                           
 10882                           ;RF_Control_B1.c: 187: RfPointSelect(rf);
 10883  1C0F  0823               	movf	setRF_Enable@rf,w
 10884  1C10  31A6  26D9  319C   	fcall	_RfPointSelect
 10885                           
 10886                           ;RF_Control_B1.c: 188: RF->Enable=command;
 10887  1C13  087A               	movf	_RF,w
 10888  1C14  0086               	movwf	6
 10889  1C15  0187               	clrf	7
 10890  1C16  0020               	movlb	0	; select bank0
 10891  1C17  0822               	movf	setRF_Enable@command,w
 10892  1C18  1001               	bcf	1,0
 10893  1C19  1D03               	skipz
 10894  1C1A  1401               	bsf	1,0
 10895                           
 10896                           ;RF_Control_B1.c: 189: RF->Learn=0;
 10897  1C1B  087A               	movf	_RF,w
 10898  1C1C  0086               	movwf	6
 10899  1C1D  0187               	clrf	7
 10900  1C1E  1301               	bcf	1,6
 10901                           
 10902                           ;RF_Control_B1.c: 190: RF->TransceiveGO=0;
 10903  1C1F  087A               	movf	_RF,w
 10904  1C20  0086               	movwf	6
 10905  1C21  0187               	clrf	7
 10906  1C22  1101               	bcf	1,2
 10907                           
 10908                           ;RF_Control_B1.c: 191: RF->RxStatus=0;
 10909  1C23  087A               	movf	_RF,w
 10910  1C24  0086               	movwf	6
 10911  1C25  0187               	clrf	7
 10912  1C26  1181               	bcf	1,3
 10913                           
 10914                           ;RF_Control_B1.c: 192: RF->ReceiveGO=0;
 10915  1C27  087A               	movf	_RF,w
 10916  1C28  0086               	movwf	6
 10917  1C29  0187               	clrf	7
 10918  1C2A  1081               	bcf	1,1
 10919                           
 10920                           ;RF_Control_B1.c: 193: RF->DebounceTime=0;
 10921  1C2B  0A7A               	incf	_RF,w
 10922  1C2C  0086               	movwf	6
 10923  1C2D  0187               	clrf	7
 10924  1C2E  0181               	clrf	1
 10925                           
 10926                           ;RF_Control_B1.c: 194: RF->Debounce=0;
 10927  1C2F  087A               	movf	_RF,w
 10928  1C30  0086               	movwf	6
 10929  1C31  0187               	clrf	7
 10930  1C32  1281               	bcf	1,5
 10931                           
 10932                           ;RF_Control_B1.c: 195: setINT_GO(0);
 10933  1C33  3000               	movlw	0
 10934  1C34  3187  27F7         	fcall	_setINT_GO
 10935  1C36  0008               	return
 10936  1C37                     __end_of_setRF_Enable:	
 10937                           
 10938                           	psect	text49
 10939  07F7                     __ptext49:	
 10940 ;; *************** function _setINT_GO *****************
 10941 ;; Defined at:
 10942 ;;		line 297 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  command         1    wreg     unsigned char 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;  command         1    0[BANK0 ] unsigned char 
 10947 ;; Return value:  Size  Location     Type
 10948 ;;		None               void
 10949 ;; Registers used:
 10950 ;;		wreg
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;Total ram usage:        1 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; Hardware stack levels required when called:    4
 10963 ;; This function calls:
 10964 ;;		Nothing
 10965 ;; This function is called by:
 10966 ;;		_setRF_Main
 10967 ;;		_setRF_Enable
 10968 ;;		_RF_RxDisable
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           
 10973                           ;psect for function _setINT_GO
 10974  07F7                     _setINT_GO:	
 10975                           
 10976                           ;incstack = 0
 10977                           ; Regs used in _setINT_GO: [wreg]
 10978                           ;setINT_GO@command stored from wreg
 10979  07F7  0020               	movlb	0	; select bank0
 10980  07F8  00A0               	movwf	setINT_GO@command
 10981                           
 10982                           ;MCU_B1.c: 299: INTF=0;
 10983  07F9  108B               	bcf	11,1	;volatile
 10984                           
 10985                           ;MCU_B1.c: 300: INTE=command;
 10986  07FA  1C20               	btfss	setINT_GO@command,0
 10987  07FB  2FFE               	goto	u7880
 10988  07FC  160B               	bsf	11,4	;volatile
 10989  07FD  0008               	return
 10990  07FE                     u7880:	
 10991  07FE  120B               	bcf	11,4	;volatile
 10992  07FF  0008               	return
 10993  0800                     __end_of_setINT_GO:	
 10994                           
 10995                           	psect	text50
 10996  1277                     __ptext50:	
 10997 ;; *************** function _DimmerLights_Exceptions *****************
 10998 ;; Defined at:
 10999 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  status          1    wreg     unsigned char 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;  status          1   10[BANK0 ] unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;		None               void
 11006 ;; Registers used:
 11007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;Total ram usage:        1 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:    7
 11020 ;; This function calls:
 11021 ;;		_getDimmerLights_StatusFlag
 11022 ;;		_setBuz
 11023 ;;		_setDimmerLights_ERROR
 11024 ;;		_setDimmerLights_TriggerERROR
 11025 ;; This function is called by:
 11026 ;;		_setLoad_Exceptions
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030                           
 11031                           ;psect for function _DimmerLights_Exceptions
 11032  1277                     _DimmerLights_Exceptions:	
 11033                           
 11034                           ;incstack = 0
 11035                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 11036                           ;DimmerLights_Exceptions@status stored from wreg
 11037  1277  0020               	movlb	0	; select bank0
 11038  1278  00AA               	movwf	DimmerLights_Exceptions@status
 11039                           
 11040                           ;Dimmer_B1.c: 248: if(status == 1)
 11041  1279  082A               	movf	DimmerLights_Exceptions@status,w
 11042  127A  3A01               	xorlw	1
 11043  127B  1D03               	skipz
 11044  127C  2A8D               	goto	l8437
 11045                           
 11046                           ;Dimmer_B1.c: 249: {
 11047                           ;Dimmer_B1.c: 250: if(getDimmerLights_StatusFlag())
 11048  127D  3199  2140  3192   	fcall	_getDimmerLights_StatusFlag
 11049  1280  3A00               	xorlw	0
 11050  1281  1903               	skipnz
 11051  1282  2AA5               	goto	l8443
 11052                           
 11053                           ;Dimmer_B1.c: 251: {
 11054                           ;Dimmer_B1.c: 252: setBuz(10,300);
 11055  1283  302C               	movlw	44
 11056  1284  0020               	movlb	0	; select bank0
 11057  1285  00A6               	movwf	setBuz@time
 11058  1286  3001               	movlw	1
 11059  1287  00A7               	movwf	setBuz@time+1
 11060  1288  300A               	movlw	10
 11061  1289  3195  2565  3192   	fcall	_setBuz
 11062  128C  2AA5               	goto	l8443
 11063  128D                     l8437:	
 11064                           ;Dimmer_B1.c: 264: }
 11065                           
 11066                           ;Dimmer_B1.c: 259: setDimmerLights_ERROR(2);
 11067                           
 11068                           ;Dimmer_B1.c: 253: }
 11069                           ;Dimmer_B1.c: 256: setDimmerLights_ERROR(1);
 11070                           
 11071                           
 11072                           ;Dimmer_B1.c: 265: else if(status == 2)
 11073  128D  0020               	movlb	0	; select bank0
 11074  128E  082A               	movf	DimmerLights_Exceptions@status,w
 11075  128F  3A02               	xorlw	2
 11076  1290  1D03               	skipz
 11077  1291  2AA0               	goto	l8441
 11078                           
 11079                           ;Dimmer_B1.c: 266: {
 11080                           ;Dimmer_B1.c: 267: setBuz(5,300);
 11081  1292  302C               	movlw	44
 11082  1293  00A6               	movwf	setBuz@time
 11083  1294  3001               	movlw	1
 11084  1295  00A7               	movwf	setBuz@time+1
 11085  1296  3005               	movlw	5
 11086  1297  3195  2565  3192   	fcall	_setBuz
 11087                           
 11088                           ;Dimmer_B1.c: 268: setDimmerLights_ERROR(Dimmer->Load);
 11089  129A  0021               	movlb	1	; select bank1
 11090  129B  0A39               	incf	_Dimmer^(0+128),w
 11091  129C  0086               	movwf	6
 11092  129D  0187               	clrf	7
 11093  129E  0801               	movf	1,w
 11094  129F  2AAA               	goto	L12
 11095  12A0                     l8441:	
 11096                           ;Dimmer_B1.c: 269: }
 11097                           
 11098                           
 11099                           ;Dimmer_B1.c: 270: else if(status == 3)
 11100  12A0  0020               	movlb	0	; select bank0
 11101  12A1  082A               	movf	DimmerLights_Exceptions@status,w
 11102  12A2  3A03               	xorlw	3
 11103  12A3  1D03               	skipz
 11104  12A4  2AAD               	goto	l886
 11105  12A5                     l8443:	
 11106                           
 11107                           ;Dimmer_B1.c: 271: {
 11108                           ;Dimmer_B1.c: 273: setDimmerLights_ERROR(1);
 11109  12A5  3001               	movlw	1
 11110  12A6  3190  2052  3192   	fcall	_setDimmerLights_ERROR
 11111                           
 11112                           ;Dimmer_B1.c: 276: setDimmerLights_ERROR(2);
 11113  12A9  3002               	movlw	2
 11114  12AA                     L12:	
 11115  12AA  3190  2052  3192   	fcall	_setDimmerLights_ERROR
 11116  12AD                     l886:	
 11117                           
 11118                           ;Dimmer_B1.c: 281: }
 11119                           ;Dimmer_B1.c: 284: setDimmerLights_TriggerERROR(1,0);
 11120  12AD  0020               	movlb	0	; select bank0
 11121  12AE  01A2               	clrf	setDimmerLights_TriggerERROR@command
 11122  12AF  3001               	movlw	1
 11123  12B0  319C  2437  3192   	fcall	_setDimmerLights_TriggerERROR
 11124                           
 11125                           ;Dimmer_B1.c: 287: setDimmerLights_TriggerERROR(2,0);
 11126  12B3  0020               	movlb	0	; select bank0
 11127  12B4  01A2               	clrf	setDimmerLights_TriggerERROR@command
 11128  12B5  3002               	movlw	2
 11129  12B6  319C  2437  3192   	fcall	_setDimmerLights_TriggerERROR
 11130                           
 11131                           ;Dimmer_B1.c: 293: if(TMain->SelfTest == 0)
 11132  12B9  087D               	movf	_TMain,w
 11133  12BA  3E03               	addlw	3
 11134  12BB  0086               	movwf	6
 11135  12BC  3001               	movlw	1	; select bank2/3
 11136  12BD  0087               	movwf	7
 11137  12BE  1801               	btfsc	1,0
 11138  12BF  0008               	return
 11139                           
 11140                           ;Dimmer_B1.c: 294: {
 11141                           ;Dimmer_B1.c: 295: TMain->i=0;
 11142  12C0  087D               	movf	_TMain,w
 11143  12C1  3E0E               	addlw	14
 11144  12C2  0086               	movwf	6
 11145  12C3  3001               	movlw	1	; select bank2/3
 11146  12C4  0087               	movwf	7
 11147  12C5  1001               	bcf	1,0
 11148                           
 11149                           ;Dimmer_B1.c: 296: TMain->j=0;
 11150  12C6  087D               	movf	_TMain,w
 11151  12C7  3E0E               	addlw	14
 11152  12C8  0086               	movwf	6
 11153  12C9  3001               	movlw	1	; select bank2/3
 11154  12CA  0087               	movwf	7
 11155  12CB  1081               	bcf	1,1
 11156                           
 11157                           ;Dimmer_B1.c: 297: TMain->k=1;
 11158  12CC  087D               	movf	_TMain,w
 11159  12CD  3E0E               	addlw	14
 11160  12CE  0086               	movwf	6
 11161  12CF  3001               	movlw	1	; select bank2/3
 11162  12D0  0087               	movwf	7
 11163  12D1  1501               	bsf	1,2
 11164                           
 11165                           ;Dimmer_B1.c: 298: TMain->Count2=0;
 11166  12D2  087D               	movf	_TMain,w
 11167  12D3  3E08               	addlw	8
 11168  12D4  0086               	movwf	6
 11169  12D5  3001               	movlw	1	; select bank2/3
 11170  12D6  0087               	movwf	7
 11171  12D7  3000               	movlw	0
 11172  12D8  3FC0               	movwi [0]fsr1
 11173  12D9  3FC1               	movwi [1]fsr1
 11174  12DA  0008               	return
 11175  12DB                     __end_of_DimmerLights_Exceptions:	
 11176                           
 11177                           	psect	text51
 11178  1C37                     __ptext51:	
 11179 ;; *************** function _setDimmerLights_TriggerERROR *****************
 11180 ;; Defined at:
 11181 ;;		line 320 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;  lights          1    wreg     unsigned char 
 11184 ;;  command         1    2[BANK0 ] unsigned char 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;  lights          1    3[BANK0 ] unsigned char 
 11187 ;; Return value:  Size  Location     Type
 11188 ;;		None               void
 11189 ;; Registers used:
 11190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11196 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;Total ram usage:        2 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; Hardware stack levels required when called:    5
 11203 ;; This function calls:
 11204 ;;		_DimmerLightsPointSelect
 11205 ;; This function is called by:
 11206 ;;		_DimmerLights_Exceptions
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           
 11211                           ;psect for function _setDimmerLights_TriggerERROR
 11212  1C37                     _setDimmerLights_TriggerERROR:	
 11213                           
 11214                           ;incstack = 0
 11215                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 11216                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 11217  1C37  0020               	movlb	0	; select bank0
 11218  1C38  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 11219                           
 11220                           ;Dimmer_B1.c: 322: DimmerLightsPointSelect(lights);
 11221  1C39  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 11222  1C3A  3198  20D5         	fcall	_DimmerLightsPointSelect
 11223                           
 11224                           ;Dimmer_B1.c: 323: DimmerLights->Trigger=command;
 11225  1C3C  0020               	movlb	0	; select bank0
 11226  1C3D  086C               	movf	_DimmerLights,w
 11227  1C3E  3E09               	addlw	9
 11228  1C3F  0086               	movwf	6
 11229  1C40  3001               	movlw	1	; select bank2/3
 11230  1C41  0087               	movwf	7
 11231  1C42  0822               	movf	setDimmerLights_TriggerERROR@command,w
 11232  1C43  1081               	bcf	1,1
 11233  1C44  1D03               	skipz
 11234  1C45  1481               	bsf	1,1
 11235                           
 11236                           ;Dimmer_B1.c: 324: DimmerLights->Switch=command;
 11237  1C46  086C               	movf	_DimmerLights,w
 11238  1C47  3E09               	addlw	9
 11239  1C48  0086               	movwf	6
 11240  1C49  3001               	movlw	1	; select bank2/3
 11241  1C4A  0087               	movwf	7
 11242  1C4B  0822               	movf	setDimmerLights_TriggerERROR@command,w
 11243  1C4C  1001               	bcf	1,0
 11244  1C4D  1D03               	skipz
 11245  1C4E  1401               	bsf	1,0
 11246                           
 11247                           ;Dimmer_B1.c: 325: DimmerLights->TriggerAdj=command;
 11248  1C4F  086C               	movf	_DimmerLights,w
 11249  1C50  3E09               	addlw	9
 11250  1C51  0086               	movwf	6
 11251  1C52  3001               	movlw	1	; select bank2/3
 11252  1C53  0087               	movwf	7
 11253  1C54  0822               	movf	setDimmerLights_TriggerERROR@command,w
 11254  1C55  1181               	bcf	1,3
 11255  1C56  1D03               	skipz
 11256  1C57  1581               	bsf	1,3
 11257                           
 11258                           ;Dimmer_B1.c: 326: DimmerLights->AdjGo=command;
 11259  1C58  086C               	movf	_DimmerLights,w
 11260  1C59  3E09               	addlw	9
 11261  1C5A  0086               	movwf	6
 11262  1C5B  3001               	movlw	1	; select bank2/3
 11263  1C5C  0087               	movwf	7
 11264  1C5D  0822               	movf	setDimmerLights_TriggerERROR@command,w
 11265  1C5E  1101               	bcf	1,2
 11266  1C5F  1D03               	skipz
 11267  1C60  1501               	bsf	1,2
 11268  1C61  0008               	return
 11269  1C62                     __end_of_setDimmerLights_TriggerERROR:	
 11270                           
 11271                           	psect	text52
 11272  1052                     __ptext52:	
 11273 ;; *************** function _setDimmerLights_ERROR *****************
 11274 ;; Defined at:
 11275 ;;		line 302 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  lights          1    wreg     unsigned char 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;  lights          1    5[BANK0 ] unsigned char 
 11280 ;; Return value:  Size  Location     Type
 11281 ;;		None               void
 11282 ;; Registers used:
 11283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11293 ;;Total ram usage:        2 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:    6
 11296 ;; This function calls:
 11297 ;;		_DimmerLightsPointSelect
 11298 ;;		_setLED
 11299 ;;		_setLoad_StatusOff
 11300 ;;		_setRFSW_Status
 11301 ;;		_setSw_Status
 11302 ;; This function is called by:
 11303 ;;		_DimmerLights_Exceptions
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           
 11308                           ;psect for function _setDimmerLights_ERROR
 11309  1052                     _setDimmerLights_ERROR:	
 11310                           
 11311                           ;incstack = 0
 11312                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11313                           ;setDimmerLights_ERROR@lights stored from wreg
 11314  1052  0020               	movlb	0	; select bank0
 11315  1053  00A5               	movwf	setDimmerLights_ERROR@lights
 11316                           
 11317                           ;Dimmer_B1.c: 304: DimmerLightsPointSelect(lights);
 11318  1054  0825               	movf	setDimmerLights_ERROR@lights,w
 11319  1055  3198  20D5  3190   	fcall	_DimmerLightsPointSelect
 11320                           
 11321                           ;Dimmer_B1.c: 305: if(DimmerLights->Status)
 11322  1058  0020               	movlb	0	; select bank0
 11323  1059  086C               	movf	_DimmerLights,w
 11324  105A  0086               	movwf	6
 11325  105B  3001               	movlw	1	; select bank2/3
 11326  105C  0087               	movwf	7
 11327  105D  1E81               	btfss	1,5
 11328  105E  0008               	return
 11329                           
 11330                           ;Dimmer_B1.c: 306: {
 11331                           ;Dimmer_B1.c: 307: DimmerLights->Signal=0;
 11332  105F  086C               	movf	_DimmerLights,w
 11333  1060  0086               	movwf	6
 11334  1061  3001               	movlw	1	; select bank2/3
 11335  1062  0087               	movwf	7
 11336  1063  1081               	bcf	1,1
 11337                           
 11338                           ;Dimmer_B1.c: 308: DimmerLights->AdjFlag=0;
 11339  1064  086C               	movf	_DimmerLights,w
 11340  1065  0086               	movwf	6
 11341  1066  3001               	movlw	1	; select bank2/3
 11342  1067  0087               	movwf	7
 11343  1068  1181               	bcf	1,3
 11344                           
 11345                           ;Dimmer_B1.c: 309: DimmerLights->AdjStatus=0;
 11346  1069  086C               	movf	_DimmerLights,w
 11347  106A  0086               	movwf	6
 11348  106B  3001               	movlw	1	; select bank2/3
 11349  106C  0087               	movwf	7
 11350  106D  1201               	bcf	1,4
 11351                           
 11352                           ;Dimmer_B1.c: 310: DimmerLights->StatusFlag=0;
 11353  106E  086C               	movf	_DimmerLights,w
 11354  106F  0086               	movwf	6
 11355  1070  3001               	movlw	1	; select bank2/3
 11356  1071  0087               	movwf	7
 11357  1072  1301               	bcf	1,6
 11358                           
 11359                           ;Dimmer_B1.c: 311: DimmerLights->DimmingTimeValue=3;
 11360  1073  3003               	movlw	3
 11361  1074  00A4               	movwf	??_setDimmerLights_ERROR
 11362  1075  086C               	movf	_DimmerLights,w
 11363  1076  3E02               	addlw	2
 11364  1077  0086               	movwf	6
 11365  1078  3001               	movlw	1	; select bank2/3
 11366  1079  0087               	movwf	7
 11367  107A  0824               	movf	??_setDimmerLights_ERROR,w
 11368  107B  0081               	movwf	1
 11369                           
 11370                           ;Dimmer_B1.c: 312: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 11371  107C  086C               	movf	_DimmerLights,w
 11372  107D  3E06               	addlw	6
 11373  107E  0086               	movwf	6
 11374  107F  3001               	movlw	1	; select bank2/3
 11375  1080  0087               	movwf	7
 11376  1081  0801               	movf	1,w
 11377  1082  00A4               	movwf	??_setDimmerLights_ERROR
 11378  1083  086C               	movf	_DimmerLights,w
 11379  1084  3E04               	addlw	4
 11380  1085  0086               	movwf	6
 11381  1086  3001               	movlw	1	; select bank2/3
 11382  1087  0087               	movwf	7
 11383  1088  0824               	movf	??_setDimmerLights_ERROR,w
 11384  1089  0081               	movwf	1
 11385                           
 11386                           ;Dimmer_B1.c: 313: Dimmer->Detect=1;
 11387  108A  0021               	movlb	1	; select bank1
 11388  108B  0839               	movf	_Dimmer^(0+128),w
 11389  108C  0086               	movwf	6
 11390  108D  0187               	clrf	7
 11391  108E  1401               	bsf	1,0
 11392                           
 11393                           ;Dimmer_B1.c: 314: setLoad_StatusOff(lights,1);
 11394  108F  0020               	movlb	0	; select bank0
 11395  1090  01A0               	clrf	setLoad_StatusOff@command
 11396  1091  0AA0               	incf	setLoad_StatusOff@command,f
 11397  1092  0825               	movf	setDimmerLights_ERROR@lights,w
 11398  1093  319D  254D  3190   	fcall	_setLoad_StatusOff
 11399                           
 11400                           ;Dimmer_B1.c: 315: setLED(lights,1);
 11401  1096  0020               	movlb	0	; select bank0
 11402  1097  01A2               	clrf	setLED@command
 11403  1098  0AA2               	incf	setLED@command,f
 11404  1099  0825               	movf	setDimmerLights_ERROR@lights,w
 11405  109A  3191  21B8  3190   	fcall	_setLED
 11406                           
 11407                           ;Dimmer_B1.c: 316: setSw_Status(lights,0);
 11408  109D  0020               	movlb	0	; select bank0
 11409  109E  01A2               	clrf	setSw_Status@command
 11410  109F  0825               	movf	setDimmerLights_ERROR@lights,w
 11411  10A0  31A7  27A1  3190   	fcall	_setSw_Status
 11412                           
 11413                           ;Dimmer_B1.c: 317: setRFSW_Status(lights,0);
 11414  10A3  0020               	movlb	0	; select bank0
 11415  10A4  01A2               	clrf	setRFSW_Status@command
 11416  10A5  0825               	movf	setDimmerLights_ERROR@lights,w
 11417  10A6  31A7  2792         	fcall	_setRFSW_Status
 11418  10A8  0008               	return
 11419  10A9                     __end_of_setDimmerLights_ERROR:	
 11420                           
 11421                           	psect	text53
 11422  27E0                     __ptext53:	
 11423 ;; *************** function _setDimmerLights_Clear *****************
 11424 ;; Defined at:
 11425 ;;		line 456 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;  lights          1    wreg     unsigned char 
 11428 ;;  command         1    2[BANK0 ] unsigned char 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  lights          1    3[BANK0 ] unsigned char 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;		None               void
 11433 ;; Registers used:
 11434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11440 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;Total ram usage:        2 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; Hardware stack levels required when called:    5
 11447 ;; This function calls:
 11448 ;;		_DimmerLightsPointSelect
 11449 ;; This function is called by:
 11450 ;;		_Load_Main
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           
 11455                           ;psect for function _setDimmerLights_Clear
 11456  27E0                     _setDimmerLights_Clear:	
 11457                           
 11458                           ;incstack = 0
 11459                           ; Regs used in _setDimmerLights_Clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11460                           ;setDimmerLights_Clear@lights stored from wreg
 11461  27E0  0020               	movlb	0	; select bank0
 11462  27E1  00A3               	movwf	setDimmerLights_Clear@lights
 11463                           
 11464                           ;Dimmer_B1.c: 458: DimmerLightsPointSelect(lights);
 11465  27E2  0823               	movf	setDimmerLights_Clear@lights,w
 11466  27E3  3198  20D5         	fcall	_DimmerLightsPointSelect
 11467                           
 11468                           ;Dimmer_B1.c: 459: DimmerLights->Clear=command;
 11469  27E5  0020               	movlb	0	; select bank0
 11470  27E6  086C               	movf	_DimmerLights,w
 11471  27E7  3E0C               	addlw	12
 11472  27E8  0086               	movwf	6
 11473  27E9  3001               	movlw	1	; select bank2/3
 11474  27EA  0087               	movwf	7
 11475  27EB  0822               	movf	setDimmerLights_Clear@command,w
 11476  27EC  1001               	bcf	1,0
 11477  27ED  1D03               	skipz
 11478  27EE  1401               	bsf	1,0
 11479  27EF  0008               	return
 11480  27F0                     __end_of_setDimmerLights_Clear:	
 11481                           
 11482                           	psect	text54
 11483  0801                     __ptext54:	
 11484 ;; *************** function ___lwdiv *****************
 11485 ;; Defined at:
 11486 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;  divisor         2    0[BANK0 ] unsigned int 
 11489 ;;  dividend        2    2[BANK0 ] unsigned int 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  quotient        2    5[BANK0 ] unsigned int 
 11492 ;;  counter         1    7[BANK0 ] unsigned char 
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  2    0[BANK0 ] unsigned int 
 11495 ;; Registers used:
 11496 ;;		wreg, status,2, status,0
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/0
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;Total ram usage:        8 bytes
 11507 ;; Hardware stack levels used:    1
 11508 ;; Hardware stack levels required when called:    4
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_Load_Main
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           
 11517                           ;psect for function ___lwdiv
 11518  0801                     ___lwdiv:	
 11519                           
 11520                           ;incstack = 0
 11521                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11522  0801  0020               	movlb	0	; select bank0
 11523  0802  01A5               	clrf	___lwdiv@quotient
 11524  0803  01A6               	clrf	___lwdiv@quotient+1
 11525  0804  0821               	movf	___lwdiv@divisor+1,w
 11526  0805  0420               	iorwf	___lwdiv@divisor,w
 11527  0806  1903               	skipnz
 11528  0807  2831               	goto	l7315
 11529  0808  01A7               	clrf	___lwdiv@counter
 11530  0809  0AA7               	incf	___lwdiv@counter,f
 11531  080A                     l7303:	
 11532  080A  1BA1               	btfsc	___lwdiv@divisor+1,7
 11533  080B  2816               	goto	l7305
 11534  080C  3001               	movlw	1
 11535  080D                     u6355:	
 11536  080D  35A0               	lslf	___lwdiv@divisor,f
 11537  080E  0DA1               	rlf	___lwdiv@divisor+1,f
 11538  080F  0B89               	decfsz	9,f
 11539  0810  280D               	goto	u6355
 11540  0811  3001               	movlw	1
 11541  0812  00A4               	movwf	??___lwdiv
 11542  0813  0824               	movf	??___lwdiv,w
 11543  0814  07A7               	addwf	___lwdiv@counter,f
 11544  0815  280A               	goto	l7303
 11545  0816                     l7305:	
 11546  0816  3001               	movlw	1
 11547  0817                     u6375:	
 11548  0817  35A5               	lslf	___lwdiv@quotient,f
 11549  0818  0DA6               	rlf	___lwdiv@quotient+1,f
 11550  0819  0B89               	decfsz	9,f
 11551  081A  2817               	goto	u6375
 11552  081B  0821               	movf	___lwdiv@divisor+1,w
 11553  081C  0223               	subwf	___lwdiv@dividend+1,w
 11554  081D  1D03               	skipz
 11555  081E  2821               	goto	u6385
 11556  081F  0820               	movf	___lwdiv@divisor,w
 11557  0820  0222               	subwf	___lwdiv@dividend,w
 11558  0821                     u6385:	
 11559  0821  1C03               	skipc
 11560  0822  2828               	goto	l7311
 11561  0823  0820               	movf	___lwdiv@divisor,w
 11562  0824  02A2               	subwf	___lwdiv@dividend,f
 11563  0825  0821               	movf	___lwdiv@divisor+1,w
 11564  0826  3BA3               	subwfb	___lwdiv@dividend+1,f
 11565  0827  1425               	bsf	___lwdiv@quotient,0
 11566  0828                     l7311:	
 11567  0828  3001               	movlw	1
 11568  0829                     u6395:	
 11569  0829  36A1               	lsrf	___lwdiv@divisor+1,f
 11570  082A  0CA0               	rrf	___lwdiv@divisor,f
 11571  082B  0B89               	decfsz	9,f
 11572  082C  2829               	goto	u6395
 11573  082D  3001               	movlw	1
 11574  082E  02A7               	subwf	___lwdiv@counter,f
 11575  082F  1D03               	btfss	3,2
 11576  0830  2816               	goto	l7305
 11577  0831                     l7315:	
 11578  0831  0826               	movf	___lwdiv@quotient+1,w
 11579  0832  01A1               	clrf	?___lwdiv+1
 11580  0833  07A1               	addwf	?___lwdiv+1,f
 11581  0834  0825               	movf	___lwdiv@quotient,w
 11582  0835  01A0               	clrf	?___lwdiv
 11583  0836  07A0               	addwf	?___lwdiv,f
 11584  0837  0008               	return
 11585  0838                     __end_of___lwdiv:	
 11586                           
 11587                           	psect	text55
 11588  2742                     __ptext55:	
 11589 ;; *************** function _Load_Initialization *****************
 11590 ;; Defined at:
 11591 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;		None
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;		None
 11596 ;; Return value:  Size  Location     Type
 11597 ;;		None               void
 11598 ;; Registers used:
 11599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/0
 11602 ;;		On exit  : 0/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11609 ;;Total ram usage:        1 bytes
 11610 ;; Hardware stack levels used:    1
 11611 ;; Hardware stack levels required when called:    5
 11612 ;; This function calls:
 11613 ;;		_setLoad_AH_AL_Restore
 11614 ;; This function is called by:
 11615 ;;		_main
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           
 11620                           ;psect for function _Load_Initialization
 11621  2742                     _Load_Initialization:	
 11622                           
 11623                           ;OverLoad_B1.c: 10: Load=&Load1;
 11624                           
 11625                           ;incstack = 0
 11626                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11627  2742  3020               	movlw	_Load1& (0+255)
 11628  2743  0020               	movlb	0	; select bank0
 11629  2744  00A2               	movwf	??_Load_Initialization
 11630  2745  0822               	movf	??_Load_Initialization,w
 11631  2746  00EE               	movwf	_Load
 11632                           
 11633                           ;OverLoad_B1.c: 11: Load->Safe=1;
 11634  2747  086E               	movf	_Load,w
 11635  2748  0086               	movwf	6
 11636  2749  3002               	movlw	2	; select bank4/5
 11637  274A  0087               	movwf	7
 11638  274B  1581               	bsf	1,3
 11639                           
 11640                           ;OverLoad_B1.c: 12: setLoad_AH_AL_Restore();
 11641  274C  319B  232B         	fcall	_setLoad_AH_AL_Restore
 11642  274E  0008               	return
 11643  274F                     __end_of_Load_Initialization:	
 11644                           
 11645                           	psect	text56
 11646  1B2B                     __ptext56:	
 11647 ;; *************** function _setLoad_AH_AL_Restore *****************
 11648 ;; Defined at:
 11649 ;;		line 348 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 11650 ;; Parameters:    Size  Location     Type
 11651 ;;		None
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;  i               1    1[BANK0 ] unsigned char 
 11654 ;; Return value:  Size  Location     Type
 11655 ;;		None               void
 11656 ;; Registers used:
 11657 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;Total ram usage:        2 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:    4
 11670 ;; This function calls:
 11671 ;;		Nothing
 11672 ;; This function is called by:
 11673 ;;		_Load_Initialization
 11674 ;;		_Load_Main
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           
 11679                           ;psect for function _setLoad_AH_AL_Restore
 11680  1B2B                     _setLoad_AH_AL_Restore:	
 11681                           
 11682                           ;OverLoad_B1.c: 350: char i;
 11683                           ;OverLoad_B1.c: 351: for(i=0 ; i<5 ;i++)
 11684                           
 11685                           ;incstack = 0
 11686                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
 11687  1B2B  0020               	movlb	0	; select bank0
 11688  1B2C  01A1               	clrf	setLoad_AH_AL_Restore@i
 11689  1B2D                     L13:	
 11690  1B2D  3005               	movlw	5
 11691  1B2E  0221               	subwf	setLoad_AH_AL_Restore@i,w
 11692  1B2F  1803               	btfsc	3,0
 11693  1B30  0008               	return
 11694                           
 11695                           ;OverLoad_B1.c: 352: {
 11696                           ;OverLoad_B1.c: 353: Load->AH[i]=0;
 11697  1B31  3521               	lslf	setLoad_AH_AL_Restore@i,w
 11698  1B32  3E08               	addlw	8
 11699  1B33  076E               	addwf	_Load,w
 11700  1B34  00A0               	movwf	??_setLoad_AH_AL_Restore
 11701  1B35  0820               	movf	??_setLoad_AH_AL_Restore,w
 11702  1B36  0086               	movwf	6
 11703  1B37  3002               	movlw	2	; select bank4/5
 11704  1B38  0087               	movwf	7
 11705  1B39  3000               	movlw	0
 11706  1B3A  3FC0               	movwi [0]fsr1
 11707  1B3B  3FC1               	movwi [1]fsr1
 11708                           
 11709                           ;OverLoad_B1.c: 354: Load->AL[i]=0xffff;
 11710  1B3C  3521               	lslf	setLoad_AH_AL_Restore@i,w
 11711  1B3D  3E1A               	addlw	26
 11712  1B3E  076E               	addwf	_Load,w
 11713  1B3F  00A0               	movwf	??_setLoad_AH_AL_Restore
 11714  1B40  0820               	movf	??_setLoad_AH_AL_Restore,w
 11715  1B41  0086               	movwf	6
 11716  1B42  3002               	movlw	2	; select bank4/5
 11717  1B43  0087               	movwf	7
 11718  1B44  30FF               	movlw	255
 11719  1B45  3FC0               	movwi [0]fsr1
 11720  1B46  30FF               	movlw	255
 11721  1B47  3FC1               	movwi [1]fsr1
 11722  1B48  3001               	movlw	1
 11723  1B49  00A0               	movwf	??_setLoad_AH_AL_Restore
 11724  1B4A  0820               	movf	??_setLoad_AH_AL_Restore,w
 11725  1B4B  07A1               	addwf	setLoad_AH_AL_Restore@i,f
 11726  1B4C  2B2D               	goto	L13
 11727  1B4D                     __end_of_setLoad_AH_AL_Restore:	
 11728                           
 11729                           	psect	text57
 11730  2736                     __ptext57:	
 11731 ;; *************** function _LED_Main *****************
 11732 ;; Defined at:
 11733 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;		None
 11736 ;; Auto vars:     Size  Location     Type
 11737 ;;		None
 11738 ;; Return value:  Size  Location     Type
 11739 ;;		None               void
 11740 ;; Registers used:
 11741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11742 ;; Tracked objects:
 11743 ;;		On entry : 0/0
 11744 ;;		On exit  : 0/0
 11745 ;;		Unchanged: 0/0
 11746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;Total ram usage:        0 bytes
 11752 ;; Hardware stack levels used:    1
 11753 ;; Hardware stack levels required when called:    6
 11754 ;; This function calls:
 11755 ;;		_setLED_Main
 11756 ;; This function is called by:
 11757 ;;		_main
 11758 ;; This function uses a non-reentrant model
 11759 ;;
 11760                           
 11761                           
 11762                           ;psect for function _LED_Main
 11763  2736                     _LED_Main:	
 11764                           
 11765                           ;LED_B1.c: 54: setLED_Main(1);
 11766                           
 11767                           ;incstack = 0
 11768                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11769  2736  3001               	movlw	1
 11770  2737  319D  25E5  31A7   	fcall	_setLED_Main
 11771                           
 11772                           ;LED_B1.c: 57: setLED_Main(2);
 11773  273A  3002               	movlw	2
 11774  273B  319D  25E5  31A7   	fcall	_setLED_Main
 11775                           
 11776                           ;LED_B1.c: 63: setLED_Main(99);
 11777  273E  3063               	movlw	99
 11778  273F  319D  25E5         	fcall	_setLED_Main
 11779  2741  0008               	return
 11780  2742                     __end_of_LED_Main:	
 11781                           
 11782                           	psect	text58
 11783  1DE5                     __ptext58:	
 11784 ;; *************** function _setLED_Main *****************
 11785 ;; Defined at:
 11786 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11787 ;; Parameters:    Size  Location     Type
 11788 ;;  led             1    wreg     unsigned char 
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;  led             1    4[BANK0 ] unsigned char 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;		None               void
 11793 ;; Registers used:
 11794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;Total ram usage:        3 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; Hardware stack levels required when called:    5
 11807 ;; This function calls:
 11808 ;;		_LedPointSelect
 11809 ;; This function is called by:
 11810 ;;		_LED_Main
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814                           
 11815                           ;psect for function _setLED_Main
 11816  1DE5                     _setLED_Main:	
 11817                           
 11818                           ;incstack = 0
 11819                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11820                           ;setLED_Main@led stored from wreg
 11821  1DE5  0020               	movlb	0	; select bank0
 11822  1DE6  00A4               	movwf	setLED_Main@led
 11823                           
 11824                           ;LED_B1.c: 216: LedPointSelect(led);
 11825  1DE7  0824               	movf	setLED_Main@led,w
 11826  1DE8  319B  2309  319D   	fcall	_LedPointSelect
 11827                           
 11828                           ;LED_B1.c: 217: if(LED->GO)
 11829  1DEB  0021               	movlb	1	; select bank1
 11830  1DEC  083B               	movf	_LED^(0+128),w
 11831  1DED  0086               	movwf	6
 11832  1DEE  0187               	clrf	7
 11833  1DEF  1C81               	btfss	1,1
 11834  1DF0  0008               	return
 11835                           
 11836                           ;LED_B1.c: 218: {
 11837                           ;LED_B1.c: 219: LED->Time++;
 11838  1DF1  0A3B               	incf	_LED^(0+128),w
 11839  1DF2  0086               	movwf	6
 11840  1DF3  0187               	clrf	7
 11841  1DF4  3001               	movlw	1
 11842  1DF5  0781               	addwf	1,f
 11843  1DF6  3141               	addfsr 1,1
 11844  1DF7  1803               	skipnc
 11845  1DF8  0A81               	incf	1,f
 11846                           
 11847                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 11848  1DF9  0A3B               	incf	_LED^(0+128),w
 11849  1DFA  0086               	movwf	6
 11850  1DFB  0187               	clrf	7
 11851  1DFC  3F40               	moviw [0]fsr1
 11852  1DFD  0020               	movlb	0	; select bank0
 11853  1DFE  00A2               	movwf	??_setLED_Main
 11854  1DFF  3F41               	moviw [1]fsr1
 11855  1E00  00A3               	movwf	??_setLED_Main+1
 11856  1E01  3000               	movlw	0
 11857  1E02  0223               	subwf	??_setLED_Main+1,w
 11858  1E03  3032               	movlw	50
 11859  1E04  1903               	skipnz
 11860  1E05  0222               	subwf	??_setLED_Main,w
 11861  1E06  1C03               	skipc
 11862  1E07  0008               	return
 11863                           
 11864                           ;LED_B1.c: 221: {
 11865                           ;LED_B1.c: 222: LED->Time=0;
 11866  1E08  0021               	movlb	1	; select bank1
 11867  1E09  0A3B               	incf	_LED^(0+128),w
 11868  1E0A  0086               	movwf	6
 11869  1E0B  0187               	clrf	7
 11870  1E0C  3000               	movlw	0
 11871  1E0D  3FC0               	movwi [0]fsr1
 11872  1E0E  3FC1               	movwi [1]fsr1
 11873                           
 11874                           ;LED_B1.c: 224: if(led == 1)
 11875  1E0F  0020               	movlb	0	; select bank0
 11876  1E10  0824               	movf	setLED_Main@led,w
 11877  1E11  3A01               	xorlw	1
 11878  1E12  1D03               	skipz
 11879  1E13  2E17               	goto	l7007
 11880                           
 11881                           ;LED_B1.c: 225: {
 11882                           ;LED_B1.c: 226: RA3=~RA3;
 11883  1E14  3008               	movlw	8
 11884  1E15  068C               	xorwf	12,f
 11885                           
 11886                           ;LED_B1.c: 227: }
 11887  1E16  0008               	return
 11888  1E17                     l7007:	
 11889                           
 11890                           ;LED_B1.c: 230: else if(led == 2)
 11891  1E17  0824               	movf	setLED_Main@led,w
 11892  1E18  3A02               	xorlw	2
 11893  1E19  1D03               	skipz
 11894  1E1A  2E1E               	goto	l7011
 11895                           
 11896                           ;LED_B1.c: 231: {
 11897                           ;LED_B1.c: 232: RC7=~RC7;
 11898  1E1B  3080               	movlw	128
 11899  1E1C  068E               	xorwf	14,f
 11900                           
 11901                           ;LED_B1.c: 233: }
 11902  1E1D  0008               	return
 11903  1E1E                     l7011:	
 11904                           
 11905                           ;LED_B1.c: 242: else if(led == 99)
 11906  1E1E  0824               	movf	setLED_Main@led,w
 11907  1E1F  3A63               	xorlw	99
 11908  1E20  1D03               	skipz
 11909  1E21  0008               	return
 11910                           
 11911                           ;LED_B1.c: 243: {
 11912                           ;LED_B1.c: 244: RB5=~RB5;
 11913  1E22  3020               	movlw	32
 11914  1E23  068D               	xorwf	13,f
 11915  1E24  0008               	return
 11916  1E25                     __end_of_setLED_Main:	
 11917                           
 11918                           	psect	text59
 11919  272A                     __ptext59:	
 11920 ;; *************** function _LED_Initialization *****************
 11921 ;; Defined at:
 11922 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;		None
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;		None
 11927 ;; Return value:  Size  Location     Type
 11928 ;;		None               void
 11929 ;; Registers used:
 11930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;Total ram usage:        0 bytes
 11941 ;; Hardware stack levels used:    1
 11942 ;; Hardware stack levels required when called:    7
 11943 ;; This function calls:
 11944 ;;		_setLED_Initialization
 11945 ;; This function is called by:
 11946 ;;		_main
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           
 11951                           ;psect for function _LED_Initialization
 11952  272A                     _LED_Initialization:	
 11953                           
 11954                           ;LED_B1.c: 38: setLED_Initialization(1);
 11955                           
 11956                           ;incstack = 0
 11957                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11958  272A  3001               	movlw	1
 11959  272B  3198  2088  31A7   	fcall	_setLED_Initialization
 11960                           
 11961                           ;LED_B1.c: 41: setLED_Initialization(2);
 11962  272E  3002               	movlw	2
 11963  272F  3198  2088  31A7   	fcall	_setLED_Initialization
 11964                           
 11965                           ;LED_B1.c: 47: setLED_Initialization(99);
 11966  2732  3063               	movlw	99
 11967  2733  3198  2088         	fcall	_setLED_Initialization
 11968  2735  0008               	return
 11969  2736                     __end_of_LED_Initialization:	
 11970                           
 11971                           	psect	text60
 11972  1888                     __ptext60:	
 11973 ;; *************** function _setLED_Initialization *****************
 11974 ;; Defined at:
 11975 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;  led             1    wreg     unsigned char 
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;  led             1    4[BANK0 ] unsigned char 
 11980 ;; Return value:  Size  Location     Type
 11981 ;;		None               void
 11982 ;; Registers used:
 11983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;Total ram usage:        1 bytes
 11994 ;; Hardware stack levels used:    1
 11995 ;; Hardware stack levels required when called:    6
 11996 ;; This function calls:
 11997 ;;		_LedPointSelect
 11998 ;;		_setLED
 11999 ;; This function is called by:
 12000 ;;		_LED_Initialization
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           
 12005                           ;psect for function _setLED_Initialization
 12006  1888                     _setLED_Initialization:	
 12007                           
 12008                           ;incstack = 0
 12009                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12010                           ;setLED_Initialization@led stored from wreg
 12011  1888  0020               	movlb	0	; select bank0
 12012  1889  00A4               	movwf	setLED_Initialization@led
 12013                           
 12014                           ;LED_B1.c: 69: LedPointSelect(led);
 12015  188A  0824               	movf	setLED_Initialization@led,w
 12016  188B  319B  2309  3198   	fcall	_LedPointSelect
 12017                           
 12018                           ;LED_B1.c: 70: LED->Enable=1;
 12019  188E  0021               	movlb	1	; select bank1
 12020  188F  083B               	movf	_LED^(0+128),w
 12021  1890  0086               	movwf	6
 12022  1891  0187               	clrf	7
 12023  1892  1401               	bsf	1,0
 12024                           
 12025                           ;LED_B1.c: 71: setLED(led,0);
 12026  1893  0020               	movlb	0	; select bank0
 12027  1894  01A2               	clrf	setLED@command
 12028  1895  0824               	movf	setLED_Initialization@led,w
 12029  1896  3191  21B8         	fcall	_setLED
 12030  1898  0008               	return
 12031  1899                     __end_of_setLED_Initialization:	
 12032                           
 12033                           	psect	text61
 12034  1E65                     __ptext61:	
 12035 ;; *************** function _Flash_Memory_Main *****************
 12036 ;; Defined at:
 12037 ;;		line 852 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12038 ;; Parameters:    Size  Location     Type
 12039 ;;		None
 12040 ;; Auto vars:     Size  Location     Type
 12041 ;;		None
 12042 ;; Return value:  Size  Location     Type
 12043 ;;		None               void
 12044 ;; Registers used:
 12045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12046 ;; Tracked objects:
 12047 ;;		On entry : 0/0
 12048 ;;		On exit  : 0/0
 12049 ;;		Unchanged: 0/0
 12050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12055 ;;Total ram usage:        0 bytes
 12056 ;; Hardware stack levels used:    1
 12057 ;; Hardware stack levels required when called:    7
 12058 ;; This function calls:
 12059 ;;		_Flash_Memory_Modify
 12060 ;; This function is called by:
 12061 ;;		_main
 12062 ;; This function uses a non-reentrant model
 12063 ;;
 12064                           
 12065                           
 12066                           ;psect for function _Flash_Memory_Main
 12067  1E65                     _Flash_Memory_Main:	
 12068                           
 12069                           ;MCU_B1.c: 854: if(Memory->GO)
 12070                           
 12071                           ;incstack = 0
 12072                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12073  1E65  087C               	movf	_Memory,w
 12074  1E66  3E22               	addlw	34
 12075  1E67  0086               	movwf	6
 12076  1E68  3001               	movlw	1	; select bank2/3
 12077  1E69  0087               	movwf	7
 12078  1E6A  1C81               	btfss	1,1
 12079  1E6B  0008               	return
 12080                           
 12081                           ;MCU_B1.c: 855: {
 12082                           ;MCU_B1.c: 856: if(Memory->Modify)
 12083  1E6C  087C               	movf	_Memory,w
 12084  1E6D  3E22               	addlw	34
 12085  1E6E  0086               	movwf	6
 12086  1E6F  3001               	movlw	1	; select bank2/3
 12087  1E70  0087               	movwf	7
 12088  1E71  1C01               	btfss	1,0
 12089  1E72  2EA1               	goto	l9171
 12090                           
 12091                           ;MCU_B1.c: 857: {
 12092                           ;MCU_B1.c: 858: Memory->Time++;
 12093  1E73  087C               	movf	_Memory,w
 12094  1E74  3E23               	addlw	35
 12095  1E75  0086               	movwf	6
 12096  1E76  3001               	movlw	1	; select bank2/3
 12097  1E77  0087               	movwf	7
 12098  1E78  3001               	movlw	1
 12099  1E79  0781               	addwf	1,f
 12100  1E7A  3141               	addfsr 1,1
 12101  1E7B  1803               	skipnc
 12102  1E7C  0A81               	incf	1,f
 12103                           
 12104                           ;MCU_B1.c: 859: if(Memory->Time == 25)
 12105  1E7D  087C               	movf	_Memory,w
 12106  1E7E  3E23               	addlw	35
 12107  1E7F  0086               	movwf	6
 12108  1E80  3001               	movlw	1	; select bank2/3
 12109  1E81  0087               	movwf	7
 12110  1E82  3F40               	moviw [0]fsr1
 12111  1E83  3A19               	xorlw	25
 12112  1E84  1D03               	skipz
 12113  1E85  2E88               	goto	u9065
 12114  1E86  3F41               	moviw [1]fsr1
 12115  1E87  3A00               	xorlw	0
 12116  1E88                     u9065:	
 12117  1E88  1D03               	skipz
 12118  1E89  0008               	return
 12119                           
 12120                           ;MCU_B1.c: 860: {
 12121                           ;MCU_B1.c: 861: Memory->Time=0;
 12122  1E8A  087C               	movf	_Memory,w
 12123  1E8B  3E23               	addlw	35
 12124  1E8C  0086               	movwf	6
 12125  1E8D  3001               	movlw	1	; select bank2/3
 12126  1E8E  0087               	movwf	7
 12127  1E8F  3000               	movlw	0
 12128  1E90  3FC0               	movwi [0]fsr1
 12129  1E91  3FC1               	movwi [1]fsr1
 12130                           
 12131                           ;MCU_B1.c: 862: Memory->Modify=0;
 12132  1E92  087C               	movf	_Memory,w
 12133  1E93  3E22               	addlw	34
 12134  1E94  0086               	movwf	6
 12135  1E95  3001               	movlw	1	; select bank2/3
 12136  1E96  0087               	movwf	7
 12137  1E97  1001               	bcf	1,0
 12138                           
 12139                           ;MCU_B1.c: 863: Memory->GO=0;
 12140  1E98  087C               	movf	_Memory,w
 12141  1E99  3E22               	addlw	34
 12142  1E9A  0086               	movwf	6
 12143  1E9B  3001               	movlw	1	; select bank2/3
 12144  1E9C  0087               	movwf	7
 12145  1E9D  1081               	bcf	1,1
 12146                           
 12147                           ;MCU_B1.c: 864: Flash_Memory_Modify();
 12148  1E9E  3193  233F         	fcall	_Flash_Memory_Modify
 12149                           
 12150                           ;MCU_B1.c: 866: }
 12151                           ;MCU_B1.c: 867: }
 12152  1EA0  0008               	return
 12153  1EA1                     l9171:	
 12154                           
 12155                           ;MCU_B1.c: 868: else
 12156                           ;MCU_B1.c: 869: {
 12157                           ;MCU_B1.c: 870: Memory->GO=0;
 12158  1EA1  087C               	movf	_Memory,w
 12159  1EA2  3E22               	addlw	34
 12160  1EA3  0086               	movwf	6
 12161  1EA4  3001               	movlw	1	; select bank2/3
 12162  1EA5  0087               	movwf	7
 12163  1EA6  1081               	bcf	1,1
 12164  1EA7  0008               	return
 12165  1EA8                     __end_of_Flash_Memory_Main:	
 12166                           
 12167                           	psect	text62
 12168  133F                     __ptext62:	
 12169 ;; *************** function _Flash_Memory_Modify *****************
 12170 ;; Defined at:
 12171 ;;		line 927 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;		None
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;  i               1    6[BANK0 ] unsigned char 
 12176 ;; Return value:  Size  Location     Type
 12177 ;;		None               void
 12178 ;; Registers used:
 12179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12180 ;; Tracked objects:
 12181 ;;		On entry : 0/0
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12187 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;Total ram usage:        3 bytes
 12190 ;; Hardware stack levels used:    1
 12191 ;; Hardware stack levels required when called:    6
 12192 ;; This function calls:
 12193 ;;		_Flash_Memory_Erasing
 12194 ;;		_Flash_Memory_Read
 12195 ;;		_Flash_Memory_Write
 12196 ;; This function is called by:
 12197 ;;		_Flash_Memory_Main
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           
 12202                           ;psect for function _Flash_Memory_Modify
 12203  133F                     _Flash_Memory_Modify:	
 12204                           
 12205                           ;MCU_B1.c: 929: char i;
 12206                           ;MCU_B1.c: 930: for(i=0;i<32;i++)
 12207                           
 12208                           ;incstack = 0
 12209                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12210  133F  0020               	movlb	0	; select bank0
 12211  1340  01A6               	clrf	Flash_Memory_Modify@i
 12212  1341  3020               	movlw	32
 12213  1342  0226               	subwf	Flash_Memory_Modify@i,w
 12214  1343  1803               	btfsc	3,0
 12215  1344  2B5C               	goto	l8995
 12216  1345                     l8989:	
 12217                           
 12218                           ;MCU_B1.c: 931: {
 12219                           ;MCU_B1.c: 932: Memory->Data[i]=Flash_Memory_Read(i);
 12220  1345  0826               	movf	Flash_Memory_Modify@i,w
 12221  1346  3199  21CC  3193   	fcall	_Flash_Memory_Read
 12222  1349  0020               	movlb	0	; select bank0
 12223  134A  00A4               	movwf	??_Flash_Memory_Modify
 12224  134B  0826               	movf	Flash_Memory_Modify@i,w
 12225  134C  077C               	addwf	_Memory,w
 12226  134D  00A5               	movwf	??_Flash_Memory_Modify+1
 12227  134E  0825               	movf	??_Flash_Memory_Modify+1,w
 12228  134F  0086               	movwf	6
 12229  1350  3001               	movlw	1	; select bank2/3
 12230  1351  0087               	movwf	7
 12231  1352  0824               	movf	??_Flash_Memory_Modify,w
 12232  1353  0081               	movwf	1
 12233  1354  3001               	movlw	1
 12234  1355  00A4               	movwf	??_Flash_Memory_Modify
 12235  1356  0824               	movf	??_Flash_Memory_Modify,w
 12236  1357  07A6               	addwf	Flash_Memory_Modify@i,f
 12237  1358  3020               	movlw	32
 12238  1359  0226               	subwf	Flash_Memory_Modify@i,w
 12239  135A  1C03               	skipc
 12240  135B  2B45               	goto	l8989
 12241  135C                     l8995:	
 12242                           
 12243                           ;MCU_B1.c: 933: }
 12244                           ;MCU_B1.c: 934: Memory->Data[0]=Product->Data[12];
 12245  135C  086F               	movf	_Product,w
 12246  135D  3E0C               	addlw	12
 12247  135E  0086               	movwf	6
 12248  135F  3001               	movlw	1	; select bank2/3
 12249  1360  0087               	movwf	7
 12250  1361  0801               	movf	1,w
 12251  1362  00A4               	movwf	??_Flash_Memory_Modify
 12252  1363  087C               	movf	_Memory,w
 12253  1364  0086               	movwf	6
 12254  1365  3001               	movlw	1	; select bank2/3
 12255  1366  0087               	movwf	7
 12256  1367  0824               	movf	??_Flash_Memory_Modify,w
 12257  1368  0081               	movwf	1
 12258                           
 12259                           ;MCU_B1.c: 935: Memory->Data[1]=Product->Data[13];
 12260  1369  086F               	movf	_Product,w
 12261  136A  3E0D               	addlw	13
 12262  136B  0086               	movwf	6
 12263  136C  3001               	movlw	1	; select bank2/3
 12264  136D  0087               	movwf	7
 12265  136E  0801               	movf	1,w
 12266  136F  00A4               	movwf	??_Flash_Memory_Modify
 12267  1370  0A7C               	incf	_Memory,w
 12268  1371  0086               	movwf	6
 12269  1372  3001               	movlw	1	; select bank2/3
 12270  1373  0087               	movwf	7
 12271  1374  0824               	movf	??_Flash_Memory_Modify,w
 12272  1375  0081               	movwf	1
 12273                           
 12274                           ;MCU_B1.c: 936: Memory->Data[2]=Product->Data[14];
 12275  1376  086F               	movf	_Product,w
 12276  1377  3E0E               	addlw	14
 12277  1378  0086               	movwf	6
 12278  1379  3001               	movlw	1	; select bank2/3
 12279  137A  0087               	movwf	7
 12280  137B  0801               	movf	1,w
 12281  137C  00A4               	movwf	??_Flash_Memory_Modify
 12282  137D  087C               	movf	_Memory,w
 12283  137E  3E02               	addlw	2
 12284  137F  0086               	movwf	6
 12285  1380  3001               	movlw	1	; select bank2/3
 12286  1381  0087               	movwf	7
 12287  1382  0824               	movf	??_Flash_Memory_Modify,w
 12288  1383  0081               	movwf	1
 12289                           
 12290                           ;MCU_B1.c: 942: if(Memory->LoopSave)
 12291  1384  087C               	movf	_Memory,w
 12292  1385  3E22               	addlw	34
 12293  1386  0086               	movwf	6
 12294  1387  3001               	movlw	1	; select bank2/3
 12295  1388  0087               	movwf	7
 12296  1389  1D01               	btfss	1,2
 12297  138A  2B9C               	goto	l8999
 12298                           
 12299                           ;MCU_B1.c: 943: {
 12300                           ;MCU_B1.c: 944: Memory->LoopSave=0;
 12301  138B  087C               	movf	_Memory,w
 12302  138C  3E22               	addlw	34
 12303  138D  0086               	movwf	6
 12304  138E  3001               	movlw	1	; select bank2/3
 12305  138F  0087               	movwf	7
 12306  1390  1101               	bcf	1,2
 12307                           
 12308                           ;MCU_B1.c: 945: TMain->FirstOpen=0;
 12309  1391  087D               	movf	_TMain,w
 12310  1392  0086               	movwf	6
 12311  1393  3001               	movlw	1	; select bank2/3
 12312  1394  0087               	movwf	7
 12313  1395  1281               	bcf	1,5
 12314                           
 12315                           ;MCU_B1.c: 946: TMain->First=0;
 12316  1396  087D               	movf	_TMain,w
 12317  1397  3E03               	addlw	3
 12318  1398  0086               	movwf	6
 12319  1399  3001               	movlw	1	; select bank2/3
 12320  139A  0087               	movwf	7
 12321  139B  1081               	bcf	1,1
 12322  139C                     l8999:	
 12323                           
 12324                           ;MCU_B1.c: 948: }
 12325                           ;MCU_B1.c: 949: GIE=0;
 12326  139C  138B               	bcf	11,7	;volatile
 12327                           
 12328                           ;MCU_B1.c: 950: Flash_Memory_Erasing();
 12329  139D  31A7  271E  3193   	fcall	_Flash_Memory_Erasing
 12330                           
 12331                           ;MCU_B1.c: 951: Flash_Memory_Write();
 12332  13A0  319C  24BD         	fcall	_Flash_Memory_Write
 12333                           
 12334                           ;MCU_B1.c: 952: GIE=1;
 12335  13A2  178B               	bsf	11,7	;volatile
 12336  13A3  0008               	return
 12337  13A4                     __end_of_Flash_Memory_Modify:	
 12338                           
 12339                           	psect	text63
 12340  271E                     __ptext63:	
 12341 ;; *************** function _Flash_Memory_Erasing *****************
 12342 ;; Defined at:
 12343 ;;		line 916 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;		None
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;		None
 12348 ;; Return value:  Size  Location     Type
 12349 ;;		None               void
 12350 ;; Registers used:
 12351 ;;		wreg, status,2, status,0, pclath, cstack
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;Total ram usage:        0 bytes
 12362 ;; Hardware stack levels used:    1
 12363 ;; Hardware stack levels required when called:    5
 12364 ;; This function calls:
 12365 ;;		_Flash_Memory_Unlock
 12366 ;; This function is called by:
 12367 ;;		_Flash_Memory_Modify
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           
 12372                           ;psect for function _Flash_Memory_Erasing
 12373  271E                     _Flash_Memory_Erasing:	
 12374                           
 12375                           ;MCU_B1.c: 918: CFGS=0;
 12376                           
 12377                           ;incstack = 0
 12378                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 12379  271E  0023               	movlb	3	; select bank3
 12380  271F  1315               	bcf	21,6	;volatile
 12381                           
 12382                           ;MCU_B1.c: 919: PMADRH=0x30;
 12383  2720  3030               	movlw	48
 12384  2721  0092               	movwf	18	;volatile
 12385                           
 12386                           ;MCU_B1.c: 920: PMADRL=0x00;
 12387  2722  0191               	clrf	17	;volatile
 12388                           
 12389                           ;MCU_B1.c: 921: FREE=1;
 12390  2723  1615               	bsf	21,4	;volatile
 12391                           
 12392                           ;MCU_B1.c: 922: WREN=1;
 12393  2724  1515               	bsf	21,2	;volatile
 12394                           
 12395                           ;MCU_B1.c: 923: Flash_Memory_Unlock();
 12396  2725  31A6  26B0         	fcall	_Flash_Memory_Unlock
 12397                           
 12398                           ;MCU_B1.c: 924: WREN=0;
 12399  2727  0023               	movlb	3	; select bank3
 12400  2728  1115               	bcf	21,2	;volatile
 12401  2729  0008               	return
 12402  272A                     __end_of_Flash_Memory_Erasing:	
 12403                           
 12404                           	psect	text64
 12405  0CC8                     __ptext64:	
 12406 ;; *************** function _Flash_Memory_Initialization *****************
 12407 ;; Defined at:
 12408 ;;		line 807 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12409 ;; Parameters:    Size  Location     Type
 12410 ;;		None
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;  i               1   62[BANK0 ] unsigned char 
 12413 ;; Return value:  Size  Location     Type
 12414 ;;		None               void
 12415 ;; Registers used:
 12416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12417 ;; Tracked objects:
 12418 ;;		On entry : 0/0
 12419 ;;		On exit  : 0/0
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;Total ram usage:        2 bytes
 12427 ;; Hardware stack levels used:    1
 12428 ;; Hardware stack levels required when called:    7
 12429 ;; This function calls:
 12430 ;;		_Flash_Memory_Read
 12431 ;;		_Flash_Memory_Write
 12432 ;;		_setPercentValue
 12433 ;; This function is called by:
 12434 ;;		_main
 12435 ;; This function uses a non-reentrant model
 12436 ;;
 12437                           
 12438                           
 12439                           ;psect for function _Flash_Memory_Initialization
 12440  0CC8                     _Flash_Memory_Initialization:	
 12441                           
 12442                           ;MCU_B1.c: 809: char i;
 12443                           ;MCU_B1.c: 810: if(Flash_Memory_Read(31) == 0xaa)
 12444                           
 12445                           ;incstack = 0
 12446                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12447  0CC8  301F               	movlw	31
 12448  0CC9  3199  21CC  318C   	fcall	_Flash_Memory_Read
 12449  0CCC  3AAA               	xorlw	170
 12450  0CCD  1D03               	skipz
 12451  0CCE  2D40               	goto	l9053
 12452                           
 12453                           ;MCU_B1.c: 811: {
 12454                           ;MCU_B1.c: 812: Product->Data[12]=Flash_Memory_Read(0);
 12455  0CCF  3000               	movlw	0
 12456  0CD0  3199  21CC  318C   	fcall	_Flash_Memory_Read
 12457  0CD3  0020               	movlb	0	; select bank0
 12458  0CD4  00DD               	movwf	??_Flash_Memory_Initialization
 12459  0CD5  086F               	movf	_Product,w
 12460  0CD6  3E0C               	addlw	12
 12461  0CD7  0086               	movwf	6
 12462  0CD8  3001               	movlw	1	; select bank2/3
 12463  0CD9  0087               	movwf	7
 12464  0CDA  085D               	movf	??_Flash_Memory_Initialization,w
 12465  0CDB  0081               	movwf	1
 12466                           
 12467                           ;MCU_B1.c: 813: Product->Data[13]=Flash_Memory_Read(1);
 12468  0CDC  3001               	movlw	1
 12469  0CDD  3199  21CC  318C   	fcall	_Flash_Memory_Read
 12470  0CE0  0020               	movlb	0	; select bank0
 12471  0CE1  00DD               	movwf	??_Flash_Memory_Initialization
 12472  0CE2  086F               	movf	_Product,w
 12473  0CE3  3E0D               	addlw	13
 12474  0CE4  0086               	movwf	6
 12475  0CE5  3001               	movlw	1	; select bank2/3
 12476  0CE6  0087               	movwf	7
 12477  0CE7  085D               	movf	??_Flash_Memory_Initialization,w
 12478  0CE8  0081               	movwf	1
 12479                           
 12480                           ;MCU_B1.c: 814: Product->Data[14]=Flash_Memory_Read(2);
 12481  0CE9  3002               	movlw	2
 12482  0CEA  3199  21CC  318C   	fcall	_Flash_Memory_Read
 12483  0CED  0020               	movlb	0	; select bank0
 12484  0CEE  00DD               	movwf	??_Flash_Memory_Initialization
 12485  0CEF  086F               	movf	_Product,w
 12486  0CF0  3E0E               	addlw	14
 12487  0CF1  0086               	movwf	6
 12488  0CF2  3001               	movlw	1	; select bank2/3
 12489  0CF3  0087               	movwf	7
 12490  0CF4  085D               	movf	??_Flash_Memory_Initialization,w
 12491  0CF5  0081               	movwf	1
 12492                           
 12493                           ;MCU_B1.c: 820: i=setPercentValue(((char)(65*1.5)));
 12494  0CF6  3061               	movlw	97
 12495  0CF7  319F  2773  318C   	fcall	_setPercentValue
 12496  0CFA  0020               	movlb	0	; select bank0
 12497  0CFB  00DD               	movwf	??_Flash_Memory_Initialization
 12498  0CFC  085D               	movf	??_Flash_Memory_Initialization,w
 12499  0CFD  00DE               	movwf	Flash_Memory_Initialization@i
 12500                           
 12501                           ;MCU_B1.c: 821: Product->Data[21]=i;
 12502  0CFE  085E               	movf	Flash_Memory_Initialization@i,w
 12503  0CFF  00DD               	movwf	??_Flash_Memory_Initialization
 12504  0D00  086F               	movf	_Product,w
 12505  0D01  3E15               	addlw	21
 12506  0D02  0086               	movwf	6
 12507  0D03  3001               	movlw	1	; select bank2/3
 12508  0D04  0087               	movwf	7
 12509  0D05  085D               	movf	??_Flash_Memory_Initialization,w
 12510  0D06  0081               	movwf	1
 12511                           
 12512                           ;MCU_B1.c: 822: Product->Data[22]=i;
 12513  0D07  085E               	movf	Flash_Memory_Initialization@i,w
 12514  0D08  00DD               	movwf	??_Flash_Memory_Initialization
 12515  0D09  086F               	movf	_Product,w
 12516  0D0A  3E16               	addlw	22
 12517  0D0B  0086               	movwf	6
 12518  0D0C  3001               	movlw	1	; select bank2/3
 12519  0D0D  0087               	movwf	7
 12520  0D0E  085D               	movf	??_Flash_Memory_Initialization,w
 12521  0D0F  0081               	movwf	1
 12522                           
 12523                           ;MCU_B1.c: 823: Product->Data[23]=i;
 12524  0D10  085E               	movf	Flash_Memory_Initialization@i,w
 12525  0D11  00DD               	movwf	??_Flash_Memory_Initialization
 12526  0D12  086F               	movf	_Product,w
 12527  0D13  3E17               	addlw	23
 12528  0D14  0086               	movwf	6
 12529  0D15  3001               	movlw	1	; select bank2/3
 12530  0D16  0087               	movwf	7
 12531  0D17  085D               	movf	??_Flash_Memory_Initialization,w
 12532  0D18  0081               	movwf	1
 12533                           
 12534                           ;MCU_B1.c: 825: if(Product->Data[12]==0xff && Product->Data[13]==0xff && Product->Data[1
      +                          4]==0xff)
 12535  0D19  086F               	movf	_Product,w
 12536  0D1A  3E0C               	addlw	12
 12537  0D1B  0086               	movwf	6
 12538  0D1C  3001               	movlw	1	; select bank2/3
 12539  0D1D  0087               	movwf	7
 12540  0D1E  0801               	movf	1,w
 12541  0D1F  3AFF               	xorlw	255
 12542  0D20  1D03               	skipz
 12543  0D21  0008               	return
 12544  0D22  086F               	movf	_Product,w
 12545  0D23  3E0D               	addlw	13
 12546  0D24  0086               	movwf	6
 12547  0D25  3001               	movlw	1	; select bank2/3
 12548  0D26  0087               	movwf	7
 12549  0D27  0801               	movf	1,w
 12550  0D28  3AFF               	xorlw	255
 12551  0D29  1D03               	skipz
 12552  0D2A  0008               	return
 12553  0D2B  086F               	movf	_Product,w
 12554  0D2C  3E0E               	addlw	14
 12555  0D2D  0086               	movwf	6
 12556  0D2E  3001               	movlw	1	; select bank2/3
 12557  0D2F  0087               	movwf	7
 12558  0D30  0801               	movf	1,w
 12559  0D31  3AFF               	xorlw	255
 12560  0D32  1D03               	skipz
 12561  0D33  0008               	return
 12562                           
 12563                           ;MCU_B1.c: 826: {
 12564                           ;MCU_B1.c: 827: TMain->FirstOpen=1;
 12565  0D34  087D               	movf	_TMain,w
 12566  0D35  0086               	movwf	6
 12567  0D36  3001               	movlw	1	; select bank2/3
 12568  0D37  0087               	movwf	7
 12569  0D38  1681               	bsf	1,5
 12570                           
 12571                           ;MCU_B1.c: 828: TMain->First=1;
 12572  0D39  087D               	movf	_TMain,w
 12573  0D3A  3E03               	addlw	3
 12574  0D3B  0086               	movwf	6
 12575  0D3C  3001               	movlw	1	; select bank2/3
 12576  0D3D  0087               	movwf	7
 12577  0D3E  1481               	bsf	1,1
 12578                           
 12579                           ;MCU_B1.c: 829: }
 12580                           ;MCU_B1.c: 830: }
 12581  0D3F  0008               	return
 12582  0D40                     l9053:	
 12583                           
 12584                           ;MCU_B1.c: 831: else
 12585                           ;MCU_B1.c: 832: {
 12586                           ;MCU_B1.c: 833: i=setPercentValue(((char)(65*1.5)));
 12587  0D40  3061               	movlw	97
 12588  0D41  319F  2773  318C   	fcall	_setPercentValue
 12589  0D44  0020               	movlb	0	; select bank0
 12590  0D45  00DD               	movwf	??_Flash_Memory_Initialization
 12591  0D46  085D               	movf	??_Flash_Memory_Initialization,w
 12592  0D47  00DE               	movwf	Flash_Memory_Initialization@i
 12593                           
 12594                           ;MCU_B1.c: 834: Memory->Data[0]=0xff;
 12595  0D48  30FF               	movlw	255
 12596  0D49  00DD               	movwf	??_Flash_Memory_Initialization
 12597  0D4A  087C               	movf	_Memory,w
 12598  0D4B  0086               	movwf	6
 12599  0D4C  3001               	movlw	1	; select bank2/3
 12600  0D4D  0087               	movwf	7
 12601  0D4E  085D               	movf	??_Flash_Memory_Initialization,w
 12602  0D4F  0081               	movwf	1
 12603                           
 12604                           ;MCU_B1.c: 835: Memory->Data[1]=0xff;
 12605  0D50  30FF               	movlw	255
 12606  0D51  00DD               	movwf	??_Flash_Memory_Initialization
 12607  0D52  0A7C               	incf	_Memory,w
 12608  0D53  0086               	movwf	6
 12609  0D54  3001               	movlw	1	; select bank2/3
 12610  0D55  0087               	movwf	7
 12611  0D56  085D               	movf	??_Flash_Memory_Initialization,w
 12612  0D57  0081               	movwf	1
 12613                           
 12614                           ;MCU_B1.c: 836: Memory->Data[2]=0xff;
 12615  0D58  30FF               	movlw	255
 12616  0D59  00DD               	movwf	??_Flash_Memory_Initialization
 12617  0D5A  087C               	movf	_Memory,w
 12618  0D5B  3E02               	addlw	2
 12619  0D5C  0086               	movwf	6
 12620  0D5D  3001               	movlw	1	; select bank2/3
 12621  0D5E  0087               	movwf	7
 12622  0D5F  085D               	movf	??_Flash_Memory_Initialization,w
 12623  0D60  0081               	movwf	1
 12624                           
 12625                           ;MCU_B1.c: 837: Memory->Data[3]=0xff;
 12626  0D61  30FF               	movlw	255
 12627  0D62  00DD               	movwf	??_Flash_Memory_Initialization
 12628  0D63  087C               	movf	_Memory,w
 12629  0D64  3E03               	addlw	3
 12630  0D65  0086               	movwf	6
 12631  0D66  3001               	movlw	1	; select bank2/3
 12632  0D67  0087               	movwf	7
 12633  0D68  085D               	movf	??_Flash_Memory_Initialization,w
 12634  0D69  0081               	movwf	1
 12635                           
 12636                           ;MCU_B1.c: 838: Memory->Data[4]=0xff;
 12637  0D6A  30FF               	movlw	255
 12638  0D6B  00DD               	movwf	??_Flash_Memory_Initialization
 12639  0D6C  087C               	movf	_Memory,w
 12640  0D6D  3E04               	addlw	4
 12641  0D6E  0086               	movwf	6
 12642  0D6F  3001               	movlw	1	; select bank2/3
 12643  0D70  0087               	movwf	7
 12644  0D71  085D               	movf	??_Flash_Memory_Initialization,w
 12645  0D72  0081               	movwf	1
 12646                           
 12647                           ;MCU_B1.c: 839: Memory->Data[5]=0xff;
 12648  0D73  30FF               	movlw	255
 12649  0D74  00DD               	movwf	??_Flash_Memory_Initialization
 12650  0D75  087C               	movf	_Memory,w
 12651  0D76  3E05               	addlw	5
 12652  0D77  0086               	movwf	6
 12653  0D78  3001               	movlw	1	; select bank2/3
 12654  0D79  0087               	movwf	7
 12655  0D7A  085D               	movf	??_Flash_Memory_Initialization,w
 12656  0D7B  0081               	movwf	1
 12657                           
 12658                           ;MCU_B1.c: 840: Memory->Data[31]=0xaa;
 12659  0D7C  30AA               	movlw	170
 12660  0D7D  00DD               	movwf	??_Flash_Memory_Initialization
 12661  0D7E  087C               	movf	_Memory,w
 12662  0D7F  3E1F               	addlw	31
 12663  0D80  0086               	movwf	6
 12664  0D81  3001               	movlw	1	; select bank2/3
 12665  0D82  0087               	movwf	7
 12666  0D83  085D               	movf	??_Flash_Memory_Initialization,w
 12667  0D84  0081               	movwf	1
 12668                           
 12669                           ;MCU_B1.c: 841: Product->Data[21]=i;
 12670  0D85  085E               	movf	Flash_Memory_Initialization@i,w
 12671  0D86  00DD               	movwf	??_Flash_Memory_Initialization
 12672  0D87  086F               	movf	_Product,w
 12673  0D88  3E15               	addlw	21
 12674  0D89  0086               	movwf	6
 12675  0D8A  3001               	movlw	1	; select bank2/3
 12676  0D8B  0087               	movwf	7
 12677  0D8C  085D               	movf	??_Flash_Memory_Initialization,w
 12678  0D8D  0081               	movwf	1
 12679                           
 12680                           ;MCU_B1.c: 842: Product->Data[22]=i;
 12681  0D8E  085E               	movf	Flash_Memory_Initialization@i,w
 12682  0D8F  00DD               	movwf	??_Flash_Memory_Initialization
 12683  0D90  086F               	movf	_Product,w
 12684  0D91  3E16               	addlw	22
 12685  0D92  0086               	movwf	6
 12686  0D93  3001               	movlw	1	; select bank2/3
 12687  0D94  0087               	movwf	7
 12688  0D95  085D               	movf	??_Flash_Memory_Initialization,w
 12689  0D96  0081               	movwf	1
 12690                           
 12691                           ;MCU_B1.c: 843: Product->Data[23]=i;
 12692  0D97  085E               	movf	Flash_Memory_Initialization@i,w
 12693  0D98  00DD               	movwf	??_Flash_Memory_Initialization
 12694  0D99  086F               	movf	_Product,w
 12695  0D9A  3E17               	addlw	23
 12696  0D9B  0086               	movwf	6
 12697  0D9C  3001               	movlw	1	; select bank2/3
 12698  0D9D  0087               	movwf	7
 12699  0D9E  085D               	movf	??_Flash_Memory_Initialization,w
 12700  0D9F  0081               	movwf	1
 12701                           
 12702                           ;MCU_B1.c: 844: GIE=0;
 12703  0DA0  138B               	bcf	11,7	;volatile
 12704                           
 12705                           ;MCU_B1.c: 845: Flash_Memory_Write();
 12706  0DA1  319C  24BD         	fcall	_Flash_Memory_Write
 12707                           
 12708                           ;MCU_B1.c: 846: GIE=1;
 12709  0DA3  178B               	bsf	11,7	;volatile
 12710                           
 12711                           ;MCU_B1.c: 847: TMain->FirstOpen=1;
 12712  0DA4  087D               	movf	_TMain,w
 12713  0DA5  0086               	movwf	6
 12714  0DA6  3001               	movlw	1	; select bank2/3
 12715  0DA7  0087               	movwf	7
 12716  0DA8  1681               	bsf	1,5
 12717                           
 12718                           ;MCU_B1.c: 848: TMain->First=1;
 12719  0DA9  087D               	movf	_TMain,w
 12720  0DAA  3E03               	addlw	3
 12721  0DAB  0086               	movwf	6
 12722  0DAC  3001               	movlw	1	; select bank2/3
 12723  0DAD  0087               	movwf	7
 12724  0DAE  1481               	bsf	1,1
 12725  0DAF  0008               	return
 12726  0DB0                     __end_of_Flash_Memory_Initialization:	
 12727                           
 12728                           	psect	text65
 12729  1CBD                     __ptext65:	
 12730 ;; *************** function _Flash_Memory_Write *****************
 12731 ;; Defined at:
 12732 ;;		line 896 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;		None
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;  i               1    1[BANK0 ] unsigned char 
 12737 ;; Return value:  Size  Location     Type
 12738 ;;		None               void
 12739 ;; Registers used:
 12740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;Total ram usage:        2 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:    5
 12753 ;; This function calls:
 12754 ;;		_Flash_Memory_Unlock
 12755 ;; This function is called by:
 12756 ;;		_Flash_Memory_Initialization
 12757 ;;		_Flash_Memory_Modify
 12758 ;; This function uses a non-reentrant model
 12759 ;;
 12760                           
 12761                           
 12762                           ;psect for function _Flash_Memory_Write
 12763  1CBD                     _Flash_Memory_Write:	
 12764                           
 12765                           ;MCU_B1.c: 898: char i;
 12766                           ;MCU_B1.c: 899: CFGS=0;
 12767                           
 12768                           ;incstack = 0
 12769                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12770  1CBD  0023               	movlb	3	; select bank3
 12771  1CBE  1315               	bcf	21,6	;volatile
 12772                           
 12773                           ;MCU_B1.c: 900: PMADRH=0x30;
 12774  1CBF  3030               	movlw	48
 12775  1CC0  0092               	movwf	18	;volatile
 12776                           
 12777                           ;MCU_B1.c: 901: PMDATH=0;
 12778  1CC1  0194               	clrf	20	;volatile
 12779                           
 12780                           ;MCU_B1.c: 902: FREE=0;
 12781  1CC2  1215               	bcf	21,4	;volatile
 12782                           
 12783                           ;MCU_B1.c: 903: LWLO=1;
 12784  1CC3  1695               	bsf	21,5	;volatile
 12785                           
 12786                           ;MCU_B1.c: 904: WREN=1;
 12787  1CC4  1515               	bsf	21,2	;volatile
 12788                           
 12789                           ;MCU_B1.c: 905: for(i=0 ; i<32 ; i++)
 12790  1CC5  0020               	movlb	0	; select bank0
 12791  1CC6  01A1               	clrf	Flash_Memory_Write@i
 12792  1CC7  3020               	movlw	32
 12793  1CC8  0221               	subwf	Flash_Memory_Write@i,w
 12794  1CC9  1803               	btfsc	3,0
 12795  1CCA  2CE5               	goto	l2938
 12796  1CCB                     l8613:	
 12797                           
 12798                           ;MCU_B1.c: 906: {
 12799                           ;MCU_B1.c: 907: PMADRL=i;
 12800  1CCB  0821               	movf	Flash_Memory_Write@i,w
 12801  1CCC  0023               	movlb	3	; select bank3
 12802  1CCD  0091               	movwf	17	;volatile
 12803                           
 12804                           ;MCU_B1.c: 908: PMDATL=Memory->Data[i];
 12805  1CCE  0020               	movlb	0	; select bank0
 12806  1CCF  0821               	movf	Flash_Memory_Write@i,w
 12807  1CD0  077C               	addwf	_Memory,w
 12808  1CD1  00A0               	movwf	??_Flash_Memory_Write
 12809  1CD2  0820               	movf	??_Flash_Memory_Write,w
 12810  1CD3  0086               	movwf	6
 12811  1CD4  3001               	movlw	1	; select bank2/3
 12812  1CD5  0087               	movwf	7
 12813  1CD6  0801               	movf	1,w
 12814  1CD7  0023               	movlb	3	; select bank3
 12815  1CD8  0093               	movwf	19	;volatile
 12816                           
 12817                           ;MCU_B1.c: 909: Flash_Memory_Unlock();
 12818  1CD9  31A6  26B0  319C   	fcall	_Flash_Memory_Unlock
 12819  1CDC  3001               	movlw	1
 12820  1CDD  0020               	movlb	0	; select bank0
 12821  1CDE  00A0               	movwf	??_Flash_Memory_Write
 12822  1CDF  0820               	movf	??_Flash_Memory_Write,w
 12823  1CE0  07A1               	addwf	Flash_Memory_Write@i,f
 12824  1CE1  3020               	movlw	32
 12825  1CE2  0221               	subwf	Flash_Memory_Write@i,w
 12826  1CE3  1C03               	skipc
 12827  1CE4  2CCB               	goto	l8613
 12828  1CE5                     l2938:	
 12829                           
 12830                           ;MCU_B1.c: 910: }
 12831                           ;MCU_B1.c: 911: LWLO=0;
 12832  1CE5  0023               	movlb	3	; select bank3
 12833  1CE6  1295               	bcf	21,5	;volatile
 12834                           
 12835                           ;MCU_B1.c: 912: Flash_Memory_Unlock();
 12836  1CE7  31A6  26B0         	fcall	_Flash_Memory_Unlock
 12837                           
 12838                           ;MCU_B1.c: 913: WREN=0;
 12839  1CE9  0023               	movlb	3	; select bank3
 12840  1CEA  1115               	bcf	21,2	;volatile
 12841  1CEB  0008               	return
 12842  1CEC                     __end_of_Flash_Memory_Write:	
 12843                           
 12844                           	psect	text66
 12845  26B0                     __ptext66:	
 12846 ;; *************** function _Flash_Memory_Unlock *****************
 12847 ;; Defined at:
 12848 ;;		line 875 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;		None
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;		None
 12853 ;; Return value:  Size  Location     Type
 12854 ;;		None               void
 12855 ;; Registers used:
 12856 ;;		wreg
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;Total ram usage:        0 bytes
 12867 ;; Hardware stack levels used:    1
 12868 ;; Hardware stack levels required when called:    4
 12869 ;; This function calls:
 12870 ;;		Nothing
 12871 ;; This function is called by:
 12872 ;;		_Flash_Memory_Write
 12873 ;;		_Flash_Memory_Erasing
 12874 ;; This function uses a non-reentrant model
 12875 ;;
 12876                           
 12877                           
 12878                           ;psect for function _Flash_Memory_Unlock
 12879  26B0                     _Flash_Memory_Unlock:	
 12880                           
 12881                           ;MCU_B1.c: 877: PMCON2=0x55;
 12882                           
 12883                           ;incstack = 0
 12884                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 12885  26B0  3055               	movlw	85
 12886  26B1  0023               	movlb	3	; select bank3
 12887  26B2  0096               	movwf	22	;volatile
 12888                           
 12889                           ;MCU_B1.c: 878: PMCON2=0xaa;
 12890  26B3  30AA               	movlw	170
 12891  26B4  0096               	movwf	22	;volatile
 12892                           
 12893                           ;MCU_B1.c: 879: WR=1;
 12894  26B5  1495               	bsf	21,1	;volatile
 12895                           
 12896                           ;MCU_B1.c: 880: __nop();
 12897  26B6  0000               	nop
 12898                           
 12899                           ;MCU_B1.c: 881: __nop();
 12900  26B7  0000               	nop
 12901  26B8  0008               	return
 12902  26B9                     __end_of_Flash_Memory_Unlock:	
 12903                           
 12904                           	psect	text67
 12905  19CC                     __ptext67:	
 12906 ;; *************** function _Flash_Memory_Read *****************
 12907 ;; Defined at:
 12908 ;;		line 884 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12909 ;; Parameters:    Size  Location     Type
 12910 ;;  address         1    wreg     unsigned char 
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;  address         1    2[BANK0 ] unsigned char 
 12913 ;;  ret             1    3[BANK0 ] unsigned char 
 12914 ;;  i               1    1[BANK0 ] unsigned char 
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  1    wreg      unsigned char 
 12917 ;; Registers used:
 12918 ;;		wreg, status,2
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12925 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12928 ;;Total ram usage:        4 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:    4
 12931 ;; This function calls:
 12932 ;;		Nothing
 12933 ;; This function is called by:
 12934 ;;		_Flash_Memory_Initialization
 12935 ;;		_Flash_Memory_Modify
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939                           
 12940                           ;psect for function _Flash_Memory_Read
 12941  19CC                     _Flash_Memory_Read:	
 12942                           
 12943                           ;incstack = 0
 12944                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 12945                           ;Flash_Memory_Read@address stored from wreg
 12946  19CC  0020               	movlb	0	; select bank0
 12947  19CD  00A2               	movwf	Flash_Memory_Read@address
 12948                           
 12949                           ;MCU_B1.c: 886: char i,ret=0;
 12950  19CE  01A3               	clrf	Flash_Memory_Read@ret
 12951                           
 12952                           ;MCU_B1.c: 887: PMADRH=0x30;
 12953  19CF  3030               	movlw	48
 12954  19D0  0023               	movlb	3	; select bank3
 12955  19D1  0092               	movwf	18	;volatile
 12956                           
 12957                           ;MCU_B1.c: 888: PMADRL=address;
 12958  19D2  0020               	movlb	0	; select bank0
 12959  19D3  0822               	movf	Flash_Memory_Read@address,w
 12960  19D4  0023               	movlb	3	; select bank3
 12961  19D5  0091               	movwf	17	;volatile
 12962                           
 12963                           ;MCU_B1.c: 889: CFGS=0;
 12964  19D6  1315               	bcf	21,6	;volatile
 12965                           
 12966                           ;MCU_B1.c: 890: RD=1;
 12967  19D7  1415               	bsf	21,0	;volatile
 12968                           
 12969                           ;MCU_B1.c: 891: i=PMDATH;
 12970  19D8  0814               	movf	20,w	;volatile
 12971  19D9  0020               	movlb	0	; select bank0
 12972  19DA  00A0               	movwf	??_Flash_Memory_Read
 12973  19DB  0820               	movf	??_Flash_Memory_Read,w
 12974  19DC  00A1               	movwf	Flash_Memory_Read@i
 12975                           
 12976                           ;MCU_B1.c: 892: ret=PMDATL;
 12977  19DD  0023               	movlb	3	; select bank3
 12978  19DE  0813               	movf	19,w	;volatile
 12979  19DF  0020               	movlb	0	; select bank0
 12980  19E0  00A0               	movwf	??_Flash_Memory_Read
 12981  19E1  0820               	movf	??_Flash_Memory_Read,w
 12982  19E2  00A3               	movwf	Flash_Memory_Read@ret
 12983                           
 12984                           ;MCU_B1.c: 893: return ret;
 12985  19E3  0823               	movf	Flash_Memory_Read@ret,w
 12986  19E4  0008               	return
 12987  19E5                     __end_of_Flash_Memory_Read:	
 12988                           
 12989                           	psect	text68
 12990  26EF                     __ptext68:	
 12991 ;; *************** function _DimmerLights_Main *****************
 12992 ;; Defined at:
 12993 ;;		line 114 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;		None
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;		None
 12998 ;; Return value:  Size  Location     Type
 12999 ;;		None               void
 13000 ;; Registers used:
 13001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13011 ;;Total ram usage:        0 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:   10
 13014 ;; This function calls:
 13015 ;;		_DimmerLights_Close
 13016 ;;		_setDimmerLights_Main
 13017 ;; This function is called by:
 13018 ;;		_main
 13019 ;; This function uses a non-reentrant model
 13020 ;;
 13021                           
 13022                           
 13023                           ;psect for function _DimmerLights_Main
 13024  26EF                     _DimmerLights_Main:	
 13025                           
 13026                           ;Dimmer_B1.c: 117: setDimmerLights_Main(1);
 13027                           
 13028                           ;incstack = 0
 13029                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13030  26EF  3001               	movlw	1
 13031  26F0  3195  25DC  31A6   	fcall	_setDimmerLights_Main
 13032                           
 13033                           ;Dimmer_B1.c: 121: setDimmerLights_Main(2);
 13034  26F3  3002               	movlw	2
 13035  26F4  3195  25DC  31A6   	fcall	_setDimmerLights_Main
 13036                           
 13037                           ;Dimmer_B1.c: 128: DimmerLights_Close();
 13038  26F7  3199  21FE         	fcall	_DimmerLights_Close
 13039  26F9  0008               	return
 13040  26FA                     __end_of_DimmerLights_Main:	
 13041                           
 13042                           	psect	text69
 13043  15DC                     __ptext69:	
 13044 ;; *************** function _setDimmerLights_Main *****************
 13045 ;; Defined at:
 13046 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;  lights          1    wreg     unsigned char 
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;  lights          1   70[BANK0 ] unsigned char 
 13051 ;;  clear           1   69[BANK0 ] unsigned char 
 13052 ;; Return value:  Size  Location     Type
 13053 ;;		None               void
 13054 ;; Registers used:
 13055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13056 ;; Tracked objects:
 13057 ;;		On entry : 0/0
 13058 ;;		On exit  : 0/0
 13059 ;;		Unchanged: 0/0
 13060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13065 ;;Total ram usage:        2 bytes
 13066 ;; Hardware stack levels used:    1
 13067 ;; Hardware stack levels required when called:    9
 13068 ;; This function calls:
 13069 ;;		_DimmerLightsPointSelect
 13070 ;;		_setBuz
 13071 ;;		_setDimmerLights
 13072 ;;		_setDimmerLights_Adj
 13073 ;; This function is called by:
 13074 ;;		_DimmerLights_Main
 13075 ;; This function uses a non-reentrant model
 13076 ;;
 13077                           
 13078                           
 13079                           ;psect for function _setDimmerLights_Main
 13080  15DC                     _setDimmerLights_Main:	
 13081                           
 13082                           ;incstack = 0
 13083                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13084                           ;setDimmerLights_Main@lights stored from wreg
 13085  15DC  0020               	movlb	0	; select bank0
 13086  15DD  00E6               	movwf	setDimmerLights_Main@lights
 13087                           
 13088                           ;Dimmer_B1.c: 133: char clear=1;
 13089  15DE  01E5               	clrf	setDimmerLights_Main@clear
 13090  15DF  0AE5               	incf	setDimmerLights_Main@clear,f
 13091                           
 13092                           ;Dimmer_B1.c: 134: DimmerLightsPointSelect(lights);
 13093  15E0  0866               	movf	setDimmerLights_Main@lights,w
 13094  15E1  3198  20D5  3195   	fcall	_DimmerLightsPointSelect
 13095                           
 13096                           ;Dimmer_B1.c: 152: if(lights == 1)
 13097  15E4  0020               	movlb	0	; select bank0
 13098  15E5  0866               	movf	setDimmerLights_Main@lights,w
 13099  15E6  3A01               	xorlw	1
 13100  15E7  1D03               	skipz
 13101  15E8  2DEB               	goto	l8719
 13102                           
 13103                           ;Dimmer_B1.c: 153: {
 13104                           ;Dimmer_B1.c: 154: clear=(!DimmerLights22->Clear)?0:1;
 13105  15E9  0879               	movf	_DimmerLights22,w
 13106  15EA  2DF0               	goto	L14
 13107  15EB                     l8719:	
 13108                           ;Dimmer_B1.c: 155: }
 13109                           
 13110                           
 13111                           ;Dimmer_B1.c: 156: else if(lights == 2)
 13112  15EB  0866               	movf	setDimmerLights_Main@lights,w
 13113  15EC  3A02               	xorlw	2
 13114  15ED  1D03               	skipz
 13115  15EE  2DF8               	goto	l8723
 13116                           
 13117                           ;Dimmer_B1.c: 157: {
 13118                           ;Dimmer_B1.c: 158: clear=(!DimmerLights11->Clear)?0:1;
 13119  15EF  086D               	movf	_DimmerLights11,w
 13120  15F0                     L14:	
 13121  15F0  3E0C               	addlw	12
 13122  15F1  0086               	movwf	6
 13123  15F2  3001               	movlw	1	; select bank2/3
 13124  15F3  0087               	movwf	7
 13125  15F4  3000               	movlw	0
 13126  15F5  1801               	btfsc	1,0
 13127  15F6  3001               	movlw	1
 13128  15F7  00E5               	movwf	setDimmerLights_Main@clear
 13129  15F8                     l8723:	
 13130                           
 13131                           ;Dimmer_B1.c: 159: }
 13132                           ;Dimmer_B1.c: 162: if(DimmerLights->Trigger)
 13133  15F8  086C               	movf	_DimmerLights,w
 13134  15F9  3E09               	addlw	9
 13135  15FA  0086               	movwf	6
 13136  15FB  3001               	movlw	1	; select bank2/3
 13137  15FC  0087               	movwf	7
 13138  15FD  1C81               	btfss	1,1
 13139  15FE  2E2E               	goto	l8741
 13140                           
 13141                           ;Dimmer_B1.c: 163: {
 13142                           ;Dimmer_B1.c: 164: if(clear)
 13143  15FF  0865               	movf	setDimmerLights_Main@clear,w
 13144  1600  1903               	btfsc	3,2
 13145  1601  0008               	return
 13146                           
 13147                           ;Dimmer_B1.c: 165: {
 13148                           ;Dimmer_B1.c: 166: if(DimmerLights->Switch)
 13149  1602  086C               	movf	_DimmerLights,w
 13150  1603  3E09               	addlw	9
 13151  1604  0086               	movwf	6
 13152  1605  3001               	movlw	1	; select bank2/3
 13153  1606  0087               	movwf	7
 13154  1607  1C01               	btfss	1,0
 13155  1608  2E1C               	goto	l8735
 13156                           
 13157                           ;Dimmer_B1.c: 167: {
 13158                           ;Dimmer_B1.c: 168: DimmerLights->Trigger=0;
 13159  1609  086C               	movf	_DimmerLights,w
 13160  160A  3E09               	addlw	9
 13161  160B  0086               	movwf	6
 13162  160C  3001               	movlw	1	; select bank2/3
 13163  160D  0087               	movwf	7
 13164  160E  1081               	bcf	1,1
 13165                           
 13166                           ;Dimmer_B1.c: 169: setDimmerLights(lights,1);
 13167  160F  01A4               	clrf	setDimmerLights@status
 13168  1610  0AA4               	incf	setDimmerLights@status,f
 13169  1611  0866               	movf	setDimmerLights_Main@lights,w
 13170  1612  3189  2161         	fcall	_setDimmerLights
 13171                           
 13172                           ;Dimmer_B1.c: 172: DimmerLights->Clear=0;
 13173  1614  0020               	movlb	0	; select bank0
 13174  1615  086C               	movf	_DimmerLights,w
 13175  1616  3E0C               	addlw	12
 13176  1617  0086               	movwf	6
 13177  1618  3001               	movlw	1	; select bank2/3
 13178  1619  0087               	movwf	7
 13179  161A  1001               	bcf	1,0
 13180                           
 13181                           ;Dimmer_B1.c: 174: }
 13182  161B  0008               	return
 13183  161C                     l8735:	
 13184                           
 13185                           ;Dimmer_B1.c: 175: else
 13186                           ;Dimmer_B1.c: 176: {
 13187                           ;Dimmer_B1.c: 177: DimmerLights->Trigger=0;
 13188  161C  086C               	movf	_DimmerLights,w
 13189  161D  3E09               	addlw	9
 13190  161E  0086               	movwf	6
 13191  161F  3001               	movlw	1	; select bank2/3
 13192  1620  0087               	movwf	7
 13193  1621  1081               	bcf	1,1
 13194                           
 13195                           ;Dimmer_B1.c: 178: setDimmerLights(lights,0);
 13196  1622  01A4               	clrf	setDimmerLights@status
 13197  1623  0866               	movf	setDimmerLights_Main@lights,w
 13198  1624  3189  2161         	fcall	_setDimmerLights
 13199                           
 13200                           ;Dimmer_B1.c: 181: DimmerLights->Clear=0;
 13201  1626  0020               	movlb	0	; select bank0
 13202  1627  086C               	movf	_DimmerLights,w
 13203  1628  3E0C               	addlw	12
 13204  1629  0086               	movwf	6
 13205  162A  3001               	movlw	1	; select bank2/3
 13206  162B  0087               	movwf	7
 13207  162C  1001               	bcf	1,0
 13208                           
 13209                           ;Dimmer_B1.c: 183: }
 13210                           ;Dimmer_B1.c: 184: }
 13211                           ;Dimmer_B1.c: 185: }
 13212  162D  0008               	return
 13213  162E                     l8741:	
 13214                           
 13215                           ;Dimmer_B1.c: 186: else
 13216                           ;Dimmer_B1.c: 187: {
 13217                           ;Dimmer_B1.c: 188: if(DimmerLights->TriggerAdj)
 13218  162E  086C               	movf	_DimmerLights,w
 13219  162F  3E09               	addlw	9
 13220  1630  0086               	movwf	6
 13221  1631  3001               	movlw	1	; select bank2/3
 13222  1632  0087               	movwf	7
 13223  1633  1D81               	btfss	1,3
 13224  1634  0008               	return
 13225                           
 13226                           ;Dimmer_B1.c: 189: {
 13227                           ;Dimmer_B1.c: 190: if(clear)
 13228  1635  0865               	movf	setDimmerLights_Main@clear,w
 13229  1636  1903               	btfsc	3,2
 13230  1637  0008               	return
 13231                           
 13232                           ;Dimmer_B1.c: 191: {
 13233                           ;Dimmer_B1.c: 192: DimmerLightsPointSelect(lights);
 13234  1638  0866               	movf	setDimmerLights_Main@lights,w
 13235  1639  3198  20D5  3195   	fcall	_DimmerLightsPointSelect
 13236                           
 13237                           ;Dimmer_B1.c: 193: DimmerLights->TriggerAdj=0;
 13238  163C  0020               	movlb	0	; select bank0
 13239  163D  086C               	movf	_DimmerLights,w
 13240  163E  3E09               	addlw	9
 13241  163F  0086               	movwf	6
 13242  1640  3001               	movlw	1	; select bank2/3
 13243  1641  0087               	movwf	7
 13244  1642  1181               	bcf	1,3
 13245                           
 13246                           ;Dimmer_B1.c: 194: if(DimmerLights->AdjGo)
 13247  1643  086C               	movf	_DimmerLights,w
 13248  1644  3E09               	addlw	9
 13249  1645  0086               	movwf	6
 13250  1646  3001               	movlw	1	; select bank2/3
 13251  1647  0087               	movwf	7
 13252  1648  1D01               	btfss	1,2
 13253  1649  2E5A               	goto	l8753
 13254                           
 13255                           ;Dimmer_B1.c: 195: {
 13256                           ;Dimmer_B1.c: 196: setDimmerLights_Adj(lights,1);
 13257  164A  01E2               	clrf	setDimmerLights_Adj@status
 13258  164B  0AE2               	incf	setDimmerLights_Adj@status,f
 13259  164C  0866               	movf	setDimmerLights_Main@lights,w
 13260  164D  319E  26EB  3195   	fcall	_setDimmerLights_Adj
 13261                           
 13262                           ;Dimmer_B1.c: 197: setBuz(1,100);
 13263  1650  3064               	movlw	100
 13264  1651  0020               	movlb	0	; select bank0
 13265  1652  00A6               	movwf	setBuz@time
 13266  1653  3000               	movlw	0
 13267  1654  00A7               	movwf	setBuz@time+1
 13268  1655  3001               	movlw	1
 13269  1656  3195  2565         	fcall	_setBuz
 13270                           
 13271                           ;Dimmer_B1.c: 198: }
 13272  1658  0020               	movlb	0	; select bank0
 13273  1659  0008               	return
 13274  165A                     l8753:	
 13275                           
 13276                           ;Dimmer_B1.c: 199: else
 13277                           ;Dimmer_B1.c: 200: {
 13278                           ;Dimmer_B1.c: 201: setDimmerLights_Adj(lights,0);
 13279  165A  0020               	movlb	0	; select bank0
 13280  165B  01E2               	clrf	setDimmerLights_Adj@status
 13281  165C  0866               	movf	setDimmerLights_Main@lights,w
 13282  165D  319E  26EB         	fcall	_setDimmerLights_Adj
 13283  165F  0020               	movlb	0	; select bank0
 13284  1660  0008               	return
 13285  1661                     __end_of_setDimmerLights_Main:	
 13286                           
 13287                           	psect	text70
 13288  1EEB                     __ptext70:	
 13289 ;; *************** function _setDimmerLights_Adj *****************
 13290 ;; Defined at:
 13291 ;;		line 388 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;  lights          1    wreg     unsigned char 
 13294 ;;  status          1   66[BANK0 ] unsigned char 
 13295 ;; Auto vars:     Size  Location     Type
 13296 ;;  lights          1   68[BANK0 ] unsigned char 
 13297 ;; Return value:  Size  Location     Type
 13298 ;;		None               void
 13299 ;; Registers used:
 13300 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13301 ;; Tracked objects:
 13302 ;;		On entry : 0/0
 13303 ;;		On exit  : 0/0
 13304 ;;		Unchanged: 0/0
 13305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13306 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13310 ;;Total ram usage:        3 bytes
 13311 ;; Hardware stack levels used:    1
 13312 ;; Hardware stack levels required when called:    8
 13313 ;; This function calls:
 13314 ;;		_DimmerLightsPointSelect
 13315 ;;		_setLoad_StatusOff
 13316 ;;		_setRF_DimmerLights
 13317 ;;		_setTxData
 13318 ;; This function is called by:
 13319 ;;		_setDimmerLights_Main
 13320 ;; This function uses a non-reentrant model
 13321 ;;
 13322                           
 13323                           
 13324                           ;psect for function _setDimmerLights_Adj
 13325  1EEB                     _setDimmerLights_Adj:	
 13326                           
 13327                           ;incstack = 0
 13328                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13329                           ;setDimmerLights_Adj@lights stored from wreg
 13330  1EEB  0020               	movlb	0	; select bank0
 13331  1EEC  00E4               	movwf	setDimmerLights_Adj@lights
 13332                           
 13333                           ;Dimmer_B1.c: 390: DimmerLightsPointSelect(lights);
 13334  1EED  0864               	movf	setDimmerLights_Adj@lights,w
 13335  1EEE  3198  20D5  319E   	fcall	_DimmerLightsPointSelect
 13336                           
 13337                           ;Dimmer_B1.c: 391: if(status)
 13338  1EF1  0020               	movlb	0	; select bank0
 13339  1EF2  0862               	movf	setDimmerLights_Adj@status,w
 13340  1EF3  1903               	btfsc	3,2
 13341  1EF4  2F00               	goto	l8423
 13342                           
 13343                           ;Dimmer_B1.c: 392: {
 13344                           ;Dimmer_B1.c: 393: DimmerLights->AdjFlag=1;
 13345  1EF5  086C               	movf	_DimmerLights,w
 13346  1EF6  0086               	movwf	6
 13347  1EF7  3001               	movlw	1	; select bank2/3
 13348  1EF8  0087               	movwf	7
 13349  1EF9  1581               	bsf	1,3
 13350                           
 13351                           ;Dimmer_B1.c: 394: DimmerLights->Signal=1;
 13352  1EFA  086C               	movf	_DimmerLights,w
 13353  1EFB  0086               	movwf	6
 13354  1EFC  3001               	movlw	1	; select bank2/3
 13355  1EFD  0087               	movwf	7
 13356  1EFE  1481               	bsf	1,1
 13357                           
 13358                           ;Dimmer_B1.c: 395: }
 13359  1EFF  0008               	return
 13360  1F00                     l8423:	
 13361                           
 13362                           ;Dimmer_B1.c: 396: else
 13363                           ;Dimmer_B1.c: 397: {
 13364                           ;Dimmer_B1.c: 398: if(DimmerLights->AdjFlag)
 13365  1F00  086C               	movf	_DimmerLights,w
 13366  1F01  0086               	movwf	6
 13367  1F02  3001               	movlw	1	; select bank2/3
 13368  1F03  0087               	movwf	7
 13369  1F04  1D81               	btfss	1,3
 13370  1F05  0008               	return
 13371                           
 13372                           ;Dimmer_B1.c: 399: {
 13373                           ;Dimmer_B1.c: 400: DimmerLights->Signal=0;
 13374  1F06  086C               	movf	_DimmerLights,w
 13375  1F07  0086               	movwf	6
 13376  1F08  3001               	movlw	1	; select bank2/3
 13377  1F09  0087               	movwf	7
 13378  1F0A  1081               	bcf	1,1
 13379                           
 13380                           ;Dimmer_B1.c: 401: DimmerLights->AdjFlag=0;
 13381  1F0B  086C               	movf	_DimmerLights,w
 13382  1F0C  0086               	movwf	6
 13383  1F0D  3001               	movlw	1	; select bank2/3
 13384  1F0E  0087               	movwf	7
 13385  1F0F  1181               	bcf	1,3
 13386                           
 13387                           ;Dimmer_B1.c: 402: setLoad_StatusOff(0,1);
 13388  1F10  01A0               	clrf	setLoad_StatusOff@command
 13389  1F11  0AA0               	incf	setLoad_StatusOff@command,f
 13390  1F12  3000               	movlw	0
 13391  1F13  319D  254D  319E   	fcall	_setLoad_StatusOff
 13392                           
 13393                           ;Dimmer_B1.c: 403: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 13394  1F16  0020               	movlb	0	; select bank0
 13395  1F17  086C               	movf	_DimmerLights,w
 13396  1F18  3E04               	addlw	4
 13397  1F19  0086               	movwf	6
 13398  1F1A  3001               	movlw	1	; select bank2/3
 13399  1F1B  0087               	movwf	7
 13400  1F1C  0801               	movf	1,w
 13401  1F1D  00E3               	movwf	??_setDimmerLights_Adj
 13402  1F1E  086C               	movf	_DimmerLights,w
 13403  1F1F  3E05               	addlw	5
 13404  1F20  0086               	movwf	6
 13405  1F21  3001               	movlw	1	; select bank2/3
 13406  1F22  0087               	movwf	7
 13407  1F23  0863               	movf	??_setDimmerLights_Adj,w
 13408  1F24  0081               	movwf	1
 13409                           
 13410                           ;Dimmer_B1.c: 411: setRF_DimmerLights(lights,1);
 13411  1F25  01DD               	clrf	setRF_DimmerLights@on
 13412  1F26  0ADD               	incf	setRF_DimmerLights@on,f
 13413  1F27  0864               	movf	setDimmerLights_Adj@lights,w
 13414  1F28  3193  23A4  319E   	fcall	_setRF_DimmerLights
 13415                           
 13416                           ;Dimmer_B1.c: 412: setTxData(1);
 13417  1F2B  3001               	movlw	1
 13418  1F2C  318B  23FF         	fcall	_setTxData
 13419  1F2E  0008               	return
 13420  1F2F                     __end_of_setDimmerLights_Adj:	
 13421                           
 13422                           	psect	text71
 13423  1D4D                     __ptext71:	
 13424 ;; *************** function _setLoad_StatusOff *****************
 13425 ;; Defined at:
 13426 ;;		line 322 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;  lights          1    wreg     unsigned char 
 13429 ;;  command         1    0[BANK0 ] unsigned char 
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;  lights          1    1[BANK0 ] unsigned char 
 13432 ;; Return value:  Size  Location     Type
 13433 ;;		None               void
 13434 ;; Registers used:
 13435 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13441 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;Total ram usage:        2 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; Hardware stack levels required when called:    4
 13448 ;; This function calls:
 13449 ;;		Nothing
 13450 ;; This function is called by:
 13451 ;;		_setDimmerLights_ERROR
 13452 ;;		_setDimmerLights_Adj
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           
 13457                           ;psect for function _setLoad_StatusOff
 13458  1D4D                     _setLoad_StatusOff:	
 13459                           
 13460                           ;incstack = 0
 13461                           ; Regs used in _setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0]
 13462                           ;setLoad_StatusOff@lights stored from wreg
 13463  1D4D  0020               	movlb	0	; select bank0
 13464  1D4E  00A1               	movwf	setLoad_StatusOff@lights
 13465                           
 13466                           ;OverLoad_B1.c: 324: Load->StatusOff=command;
 13467  1D4F  086E               	movf	_Load,w
 13468  1D50  3E46               	addlw	70
 13469  1D51  0086               	movwf	6
 13470  1D52  3002               	movlw	2	; select bank4/5
 13471  1D53  0087               	movwf	7
 13472  1D54  0820               	movf	setLoad_StatusOff@command,w
 13473  1D55  1081               	bcf	1,1
 13474  1D56  1D03               	skipz
 13475  1D57  1481               	bsf	1,1
 13476                           
 13477                           ;OverLoad_B1.c: 325: Load->SafeCount-=2;
 13478  1D58  086E               	movf	_Load,w
 13479  1D59  3E42               	addlw	66
 13480  1D5A  0086               	movwf	6
 13481  1D5B  3002               	movlw	2	; select bank4/5
 13482  1D5C  0087               	movwf	7
 13483  1D5D  3002               	movlw	2
 13484  1D5E  0281               	subwf	1,f
 13485                           
 13486                           ;OverLoad_B1.c: 326: if(lights == 1)
 13487  1D5F  0821               	movf	setLoad_StatusOff@lights,w
 13488  1D60  3A01               	xorlw	1
 13489  1D61  1D03               	skipz
 13490  1D62  2D69               	goto	l8215
 13491                           
 13492                           ;OverLoad_B1.c: 327: {
 13493                           ;OverLoad_B1.c: 328: Load->Lights1Status=0;
 13494  1D63  086E               	movf	_Load,w
 13495  1D64  3E43               	addlw	67
 13496  1D65  0086               	movwf	6
 13497  1D66  3002               	movlw	2	; select bank4/5
 13498  1D67  0087               	movwf	7
 13499  1D68  0181               	clrf	1
 13500  1D69                     l8215:	
 13501                           
 13502                           ;OverLoad_B1.c: 329: }
 13503                           ;OverLoad_B1.c: 330: if(lights == 2)
 13504  1D69  0821               	movf	setLoad_StatusOff@lights,w
 13505  1D6A  3A02               	xorlw	2
 13506  1D6B  1D03               	skipz
 13507  1D6C  2D73               	goto	l8219
 13508                           
 13509                           ;OverLoad_B1.c: 331: {
 13510                           ;OverLoad_B1.c: 332: Load->Lights2Status=0;
 13511  1D6D  086E               	movf	_Load,w
 13512  1D6E  3E44               	addlw	68
 13513  1D6F  0086               	movwf	6
 13514  1D70  3002               	movlw	2	; select bank4/5
 13515  1D71  0087               	movwf	7
 13516  1D72  0181               	clrf	1
 13517  1D73                     l8219:	
 13518                           
 13519                           ;OverLoad_B1.c: 333: }
 13520                           ;OverLoad_B1.c: 334: if(lights == 3)
 13521  1D73  0821               	movf	setLoad_StatusOff@lights,w
 13522  1D74  3A03               	xorlw	3
 13523  1D75  1D03               	skipz
 13524  1D76  0008               	return
 13525                           
 13526                           ;OverLoad_B1.c: 335: {
 13527                           ;OverLoad_B1.c: 336: Load->Lights3Status=0;
 13528  1D77  086E               	movf	_Load,w
 13529  1D78  3E45               	addlw	69
 13530  1D79  0086               	movwf	6
 13531  1D7A  3002               	movlw	2	; select bank4/5
 13532  1D7B  0087               	movwf	7
 13533  1D7C  0181               	clrf	1
 13534  1D7D  0008               	return
 13535  1D7E                     __end_of_setLoad_StatusOff:	
 13536                           
 13537                           	psect	text72
 13538  0961                     __ptext72:	
 13539 ;; *************** function _setDimmerLights *****************
 13540 ;; Defined at:
 13541 ;;		line 330 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  lights          1    wreg     unsigned char 
 13544 ;;  status          1    4[BANK0 ] unsigned char 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;  lights          1    6[BANK0 ] unsigned char 
 13547 ;; Return value:  Size  Location     Type
 13548 ;;		None               void
 13549 ;; Registers used:
 13550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13551 ;; Tracked objects:
 13552 ;;		On entry : 0/0
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13556 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;Total ram usage:        3 bytes
 13561 ;; Hardware stack levels used:    1
 13562 ;; Hardware stack levels required when called:    6
 13563 ;; This function calls:
 13564 ;;		_DimmerLightsPointSelect
 13565 ;;		_setLED
 13566 ;;		_setLoad_Count
 13567 ;;		_setLoad_StatusOn
 13568 ;; This function is called by:
 13569 ;;		_setDimmerLights_Main
 13570 ;;		_setControl_Lights_Table
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574                           
 13575                           ;psect for function _setDimmerLights
 13576  0961                     _setDimmerLights:	
 13577                           
 13578                           ;incstack = 0
 13579                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13580                           ;setDimmerLights@lights stored from wreg
 13581  0961  0020               	movlb	0	; select bank0
 13582  0962  00A6               	movwf	setDimmerLights@lights
 13583                           
 13584                           ;Dimmer_B1.c: 332: DimmerLightsPointSelect(lights);
 13585  0963  0826               	movf	setDimmerLights@lights,w
 13586  0964  3198  20D5  3189   	fcall	_DimmerLightsPointSelect
 13587                           
 13588                           ;Dimmer_B1.c: 333: Dimmer->Load=lights;
 13589  0967  0020               	movlb	0	; select bank0
 13590  0968  0826               	movf	setDimmerLights@lights,w
 13591  0969  00A5               	movwf	??_setDimmerLights
 13592  096A  0021               	movlb	1	; select bank1
 13593  096B  0A39               	incf	_Dimmer^(0+128),w
 13594  096C  0086               	movwf	6
 13595  096D  0187               	clrf	7
 13596  096E  0020               	movlb	0	; select bank0
 13597  096F  0825               	movf	??_setDimmerLights,w
 13598  0970  0081               	movwf	1
 13599                           
 13600                           ;Dimmer_B1.c: 334: if(status)
 13601  0971  0824               	movf	setDimmerLights@status,w
 13602  0972  1903               	btfsc	3,2
 13603  0973  29C8               	goto	l8205
 13604                           
 13605                           ;Dimmer_B1.c: 335: {
 13606                           ;Dimmer_B1.c: 336: DimmerLights->Status=1;
 13607  0974  086C               	movf	_DimmerLights,w
 13608  0975  0086               	movwf	6
 13609  0976  3001               	movlw	1	; select bank2/3
 13610  0977  0087               	movwf	7
 13611  0978  1681               	bsf	1,5
 13612                           
 13613                           ;Dimmer_B1.c: 337: setLED(lights,0);
 13614  0979  01A2               	clrf	setLED@command
 13615  097A  0826               	movf	setDimmerLights@lights,w
 13616  097B  3191  21B8  3189   	fcall	_setLED
 13617                           
 13618                           ;Dimmer_B1.c: 339: setLoad_Count(0);
 13619  097E  3000               	movlw	0
 13620  097F  3198  20FF  3189   	fcall	_setLoad_Count
 13621                           
 13622                           ;Dimmer_B1.c: 341: DimmerLights->Signal=1;
 13623  0982  0020               	movlb	0	; select bank0
 13624  0983  086C               	movf	_DimmerLights,w
 13625  0984  0086               	movwf	6
 13626  0985  3001               	movlw	1	; select bank2/3
 13627  0986  0087               	movwf	7
 13628  0987  1481               	bsf	1,1
 13629                           
 13630                           ;Dimmer_B1.c: 342: DimmerLights->DimmingTimeValue=3;
 13631  0988  3003               	movlw	3
 13632  0989  00A5               	movwf	??_setDimmerLights
 13633  098A  086C               	movf	_DimmerLights,w
 13634  098B  3E02               	addlw	2
 13635  098C  0086               	movwf	6
 13636  098D  3001               	movlw	1	; select bank2/3
 13637  098E  0087               	movwf	7
 13638  098F  0825               	movf	??_setDimmerLights,w
 13639  0990  0081               	movwf	1
 13640                           
 13641                           ;Dimmer_B1.c: 344: if(!DimmerLights->StatusFlag)
 13642  0991  086C               	movf	_DimmerLights,w
 13643  0992  0086               	movwf	6
 13644  0993  3001               	movlw	1	; select bank2/3
 13645  0994  0087               	movwf	7
 13646  0995  1B01               	btfsc	1,6
 13647  0996  0008               	return
 13648                           
 13649                           ;Dimmer_B1.c: 345: {
 13650                           ;Dimmer_B1.c: 346: DimmerLights->StatusFlag=1;
 13651  0997  086C               	movf	_DimmerLights,w
 13652  0998  0086               	movwf	6
 13653  0999  3001               	movlw	1	; select bank2/3
 13654  099A  0087               	movwf	7
 13655  099B  1701               	bsf	1,6
 13656                           
 13657                           ;Dimmer_B1.c: 347: setLoad_StatusOn(lights,1);
 13658  099C  01A0               	clrf	setLoad_StatusOn@command
 13659  099D  0AA0               	incf	setLoad_StatusOn@command,f
 13660  099E  0826               	movf	setDimmerLights@lights,w
 13661  099F  319D  257E         	fcall	_setLoad_StatusOn
 13662                           
 13663                           ;Dimmer_B1.c: 348: Memory->GO=0; if(!0) { Memory->Time=0; } ;;
 13664  09A1  087C               	movf	_Memory,w
 13665  09A2  3E22               	addlw	34
 13666  09A3  0086               	movwf	6
 13667  09A4  3001               	movlw	1	; select bank2/3
 13668  09A5  0087               	movwf	7
 13669  09A6  1081               	bcf	1,1
 13670  09A7  087C               	movf	_Memory,w
 13671  09A8  3E23               	addlw	35
 13672  09A9  0086               	movwf	6
 13673  09AA  3001               	movlw	1	; select bank2/3
 13674  09AB  0087               	movwf	7
 13675  09AC  3000               	movlw	0
 13676  09AD  3FC0               	movwi [0]fsr1
 13677  09AE  3FC1               	movwi [1]fsr1
 13678                           
 13679                           ;Dimmer_B1.c: 351: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 13680  09AF  0020               	movlb	0	; select bank0
 13681  09B0  086C               	movf	_DimmerLights,w
 13682  09B1  3E05               	addlw	5
 13683  09B2  0086               	movwf	6
 13684  09B3  3001               	movlw	1	; select bank2/3
 13685  09B4  0087               	movwf	7
 13686  09B5  0801               	movf	1,w
 13687  09B6  00A5               	movwf	??_setDimmerLights
 13688  09B7  086C               	movf	_DimmerLights,w
 13689  09B8  3E04               	addlw	4
 13690  09B9  0086               	movwf	6
 13691  09BA  3001               	movlw	1	; select bank2/3
 13692  09BB  0087               	movwf	7
 13693  09BC  0825               	movf	??_setDimmerLights,w
 13694  09BD  0081               	movwf	1
 13695                           
 13696                           ;Dimmer_B1.c: 355: DimmerLights->DimmingValue=((char)(65*1.5));
 13697  09BE  3061               	movlw	97
 13698  09BF  00A5               	movwf	??_setDimmerLights
 13699  09C0  086C               	movf	_DimmerLights,w
 13700  09C1  3E04               	addlw	4
 13701  09C2  0086               	movwf	6
 13702  09C3  3001               	movlw	1	; select bank2/3
 13703  09C4  0087               	movwf	7
 13704  09C5  0825               	movf	??_setDimmerLights,w
 13705  09C6  0081               	movwf	1
 13706                           
 13707                           ;Dimmer_B1.c: 357: }
 13708                           ;Dimmer_B1.c: 358: }
 13709  09C7  0008               	return
 13710  09C8                     l8205:	
 13711                           
 13712                           ;Dimmer_B1.c: 359: else
 13713                           ;Dimmer_B1.c: 360: {
 13714                           ;Dimmer_B1.c: 361: DimmerLights->Status=0;
 13715  09C8  086C               	movf	_DimmerLights,w
 13716  09C9  0086               	movwf	6
 13717  09CA  3001               	movlw	1	; select bank2/3
 13718  09CB  0087               	movwf	7
 13719  09CC  1281               	bcf	1,5
 13720                           
 13721                           ;Dimmer_B1.c: 363: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 13722  09CD  086C               	movf	_DimmerLights,w
 13723  09CE  3E06               	addlw	6
 13724  09CF  0086               	movwf	6
 13725  09D0  3001               	movlw	1	; select bank2/3
 13726  09D1  0087               	movwf	7
 13727  09D2  0801               	movf	1,w
 13728  09D3  00A5               	movwf	??_setDimmerLights
 13729  09D4  086C               	movf	_DimmerLights,w
 13730  09D5  3E04               	addlw	4
 13731  09D6  0086               	movwf	6
 13732  09D7  3001               	movlw	1	; select bank2/3
 13733  09D8  0087               	movwf	7
 13734  09D9  0825               	movf	??_setDimmerLights,w
 13735  09DA  0081               	movwf	1
 13736                           
 13737                           ;Dimmer_B1.c: 368: DimmerLights->MosfetClose=1;
 13738  09DB  086C               	movf	_DimmerLights,w
 13739  09DC  3E09               	addlw	9
 13740  09DD  0086               	movwf	6
 13741  09DE  3001               	movlw	1	; select bank2/3
 13742  09DF  0087               	movwf	7
 13743  09E0  1701               	bsf	1,6
 13744                           
 13745                           ;Dimmer_B1.c: 370: DimmerLights->Signal=1;
 13746  09E1  086C               	movf	_DimmerLights,w
 13747  09E2  0086               	movwf	6
 13748  09E3  3001               	movlw	1	; select bank2/3
 13749  09E4  0087               	movwf	7
 13750  09E5  1481               	bsf	1,1
 13751                           
 13752                           ;Dimmer_B1.c: 371: DimmerLights->AdjFlag=0;
 13753  09E6  086C               	movf	_DimmerLights,w
 13754  09E7  0086               	movwf	6
 13755  09E8  3001               	movlw	1	; select bank2/3
 13756  09E9  0087               	movwf	7
 13757  09EA  1181               	bcf	1,3
 13758                           
 13759                           ;Dimmer_B1.c: 372: DimmerLights->AdjStatus=0;
 13760  09EB  086C               	movf	_DimmerLights,w
 13761  09EC  0086               	movwf	6
 13762  09ED  3001               	movlw	1	; select bank2/3
 13763  09EE  0087               	movwf	7
 13764  09EF  1201               	bcf	1,4
 13765                           
 13766                           ;Dimmer_B1.c: 373: DimmerLights->DimmingTimeValue=3;
 13767  09F0  3003               	movlw	3
 13768  09F1  00A5               	movwf	??_setDimmerLights
 13769  09F2  086C               	movf	_DimmerLights,w
 13770  09F3  3E02               	addlw	2
 13771  09F4  0086               	movwf	6
 13772  09F5  3001               	movlw	1	; select bank2/3
 13773  09F6  0087               	movwf	7
 13774  09F7  0825               	movf	??_setDimmerLights,w
 13775  09F8  0081               	movwf	1
 13776  09F9  0008               	return
 13777  09FA                     __end_of_setDimmerLights:	
 13778                           
 13779                           	psect	text73
 13780  1D7E                     __ptext73:	
 13781 ;; *************** function _setLoad_StatusOn *****************
 13782 ;; Defined at:
 13783 ;;		line 304 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 13784 ;; Parameters:    Size  Location     Type
 13785 ;;  lights          1    wreg     unsigned char 
 13786 ;;  command         1    0[BANK0 ] unsigned char 
 13787 ;; Auto vars:     Size  Location     Type
 13788 ;;  lights          1    1[BANK0 ] unsigned char 
 13789 ;; Return value:  Size  Location     Type
 13790 ;;		None               void
 13791 ;; Registers used:
 13792 ;;		wreg, fsr1l, fsr1h
 13793 ;; Tracked objects:
 13794 ;;		On entry : 0/0
 13795 ;;		On exit  : 0/0
 13796 ;;		Unchanged: 0/0
 13797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13798 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13802 ;;Total ram usage:        2 bytes
 13803 ;; Hardware stack levels used:    1
 13804 ;; Hardware stack levels required when called:    4
 13805 ;; This function calls:
 13806 ;;		Nothing
 13807 ;; This function is called by:
 13808 ;;		_setDimmerLights
 13809 ;; This function uses a non-reentrant model
 13810 ;;
 13811                           
 13812                           
 13813                           ;psect for function _setLoad_StatusOn
 13814  1D7E                     _setLoad_StatusOn:	
 13815                           
 13816                           ;incstack = 0
 13817                           ; Regs used in _setLoad_StatusOn: [wregfsr1]
 13818                           ;setLoad_StatusOn@lights stored from wreg
 13819  1D7E  0020               	movlb	0	; select bank0
 13820  1D7F  00A1               	movwf	setLoad_StatusOn@lights
 13821                           
 13822                           ;OverLoad_B1.c: 306: Load->GO=1;
 13823  1D80  086E               	movf	_Load,w
 13824  1D81  0086               	movwf	6
 13825  1D82  3002               	movlw	2	; select bank4/5
 13826  1D83  0087               	movwf	7
 13827  1D84  1481               	bsf	1,1
 13828                           
 13829                           ;OverLoad_B1.c: 307: Load->StatusOn=command;
 13830  1D85  086E               	movf	_Load,w
 13831  1D86  3E46               	addlw	70
 13832  1D87  0086               	movwf	6
 13833  1D88  3002               	movlw	2	; select bank4/5
 13834  1D89  0087               	movwf	7
 13835  1D8A  0820               	movf	setLoad_StatusOn@command,w
 13836  1D8B  1001               	bcf	1,0
 13837  1D8C  1D03               	skipz
 13838  1D8D  1401               	bsf	1,0
 13839                           
 13840                           ;OverLoad_B1.c: 309: if(lights == 1)
 13841  1D8E  0821               	movf	setLoad_StatusOn@lights,w
 13842  1D8F  3A01               	xorlw	1
 13843  1D90  1D03               	skipz
 13844  1D91  2D99               	goto	l8169
 13845                           
 13846                           ;OverLoad_B1.c: 310: {
 13847                           ;OverLoad_B1.c: 311: Load->Lights1Status=1;
 13848  1D92  086E               	movf	_Load,w
 13849  1D93  3E43               	addlw	67
 13850  1D94  0086               	movwf	6
 13851  1D95  3002               	movlw	2	; select bank4/5
 13852  1D96  0087               	movwf	7
 13853  1D97  0181               	clrf	1
 13854  1D98  0A81               	incf	1,f
 13855  1D99                     l8169:	
 13856                           
 13857                           ;OverLoad_B1.c: 312: }
 13858                           ;OverLoad_B1.c: 313: if(lights == 2)
 13859  1D99  0821               	movf	setLoad_StatusOn@lights,w
 13860  1D9A  3A02               	xorlw	2
 13861  1D9B  1D03               	skipz
 13862  1D9C  2DA4               	goto	l8173
 13863                           
 13864                           ;OverLoad_B1.c: 314: {
 13865                           ;OverLoad_B1.c: 315: Load->Lights2Status=1;
 13866  1D9D  086E               	movf	_Load,w
 13867  1D9E  3E44               	addlw	68
 13868  1D9F  0086               	movwf	6
 13869  1DA0  3002               	movlw	2	; select bank4/5
 13870  1DA1  0087               	movwf	7
 13871  1DA2  0181               	clrf	1
 13872  1DA3  0A81               	incf	1,f
 13873  1DA4                     l8173:	
 13874                           
 13875                           ;OverLoad_B1.c: 316: }
 13876                           ;OverLoad_B1.c: 317: if(lights == 3)
 13877  1DA4  0821               	movf	setLoad_StatusOn@lights,w
 13878  1DA5  3A03               	xorlw	3
 13879  1DA6  1D03               	skipz
 13880  1DA7  0008               	return
 13881                           
 13882                           ;OverLoad_B1.c: 318: {
 13883                           ;OverLoad_B1.c: 319: Load->Lights3Status=1;
 13884  1DA8  086E               	movf	_Load,w
 13885  1DA9  3E45               	addlw	69
 13886  1DAA  0086               	movwf	6
 13887  1DAB  3002               	movlw	2	; select bank4/5
 13888  1DAC  0087               	movwf	7
 13889  1DAD  0181               	clrf	1
 13890  1DAE  0A81               	incf	1,f
 13891  1DAF  0008               	return
 13892  1DB0                     __end_of_setLoad_StatusOn:	
 13893                           
 13894                           	psect	text74
 13895  18FF                     __ptext74:	
 13896 ;; *************** function _setLoad_Count *****************
 13897 ;; Defined at:
 13898 ;;		line 289 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;  command         1    wreg     unsigned char 
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;  command         1    1[BANK0 ] unsigned char 
 13903 ;; Return value:  Size  Location     Type
 13904 ;;		None               void
 13905 ;; Registers used:
 13906 ;;		wreg, fsr1l, fsr1h
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;Total ram usage:        2 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    4
 13919 ;; This function calls:
 13920 ;;		Nothing
 13921 ;; This function is called by:
 13922 ;;		_setDimmerLights
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           
 13927                           ;psect for function _setLoad_Count
 13928  18FF                     _setLoad_Count:	
 13929                           
 13930                           ;incstack = 0
 13931                           ; Regs used in _setLoad_Count: [wregfsr1]
 13932                           ;setLoad_Count@command stored from wreg
 13933  18FF  0020               	movlb	0	; select bank0
 13934  1900  00A1               	movwf	setLoad_Count@command
 13935                           
 13936                           ;OverLoad_B1.c: 291: Load->Count=command;
 13937  1901  0821               	movf	setLoad_Count@command,w
 13938  1902  00A0               	movwf	??_setLoad_Count
 13939  1903  086E               	movf	_Load,w
 13940  1904  3E3A               	addlw	58
 13941  1905  0086               	movwf	6
 13942  1906  3002               	movlw	2	; select bank4/5
 13943  1907  0087               	movwf	7
 13944  1908  0820               	movf	??_setLoad_Count,w
 13945  1909  0081               	movwf	1
 13946                           
 13947                           ;OverLoad_B1.c: 292: Load->SafeCount=command;
 13948  190A  0821               	movf	setLoad_Count@command,w
 13949  190B  00A0               	movwf	??_setLoad_Count
 13950  190C  086E               	movf	_Load,w
 13951  190D  3E42               	addlw	66
 13952  190E  0086               	movwf	6
 13953  190F  3002               	movlw	2	; select bank4/5
 13954  1910  0087               	movwf	7
 13955  1911  0820               	movf	??_setLoad_Count,w
 13956  1912  0081               	movwf	1
 13957  1913  0008               	return
 13958  1914                     __end_of_setLoad_Count:	
 13959                           
 13960                           	psect	text75
 13961  11B8                     __ptext75:	
 13962 ;; *************** function _setLED *****************
 13963 ;; Defined at:
 13964 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;  led             1    wreg     unsigned char 
 13967 ;;  command         1    2[BANK0 ] unsigned char 
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;  led             1    3[BANK0 ] unsigned char 
 13970 ;; Return value:  Size  Location     Type
 13971 ;;		None               void
 13972 ;; Registers used:
 13973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13974 ;; Tracked objects:
 13975 ;;		On entry : 0/0
 13976 ;;		On exit  : 0/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13979 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;Total ram usage:        2 bytes
 13984 ;; Hardware stack levels used:    1
 13985 ;; Hardware stack levels required when called:    5
 13986 ;; This function calls:
 13987 ;;		_LedPointSelect
 13988 ;; This function is called by:
 13989 ;;		_setDimmerLights_ERROR
 13990 ;;		_setDimmerLights
 13991 ;;		_setLED_Initialization
 13992 ;;		_setLoad_Exceptions
 13993 ;;		_setSw_Initialization
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           
 13998                           ;psect for function _setLED
 13999  11B8                     _setLED:	
 14000                           
 14001                           ;incstack = 0
 14002                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14003                           ;setLED@led stored from wreg
 14004  11B8  0020               	movlb	0	; select bank0
 14005  11B9  00A3               	movwf	setLED@led
 14006                           
 14007                           ;LED_B1.c: 76: LedPointSelect(led);
 14008  11BA  0823               	movf	setLED@led,w
 14009  11BB  319B  2309  3191   	fcall	_LedPointSelect
 14010                           
 14011                           ;LED_B1.c: 77: if(command == 0)
 14012  11BE  0020               	movlb	0	; select bank0
 14013  11BF  08A2               	movf	setLED@command,f
 14014  11C0  1D03               	skipz
 14015  11C1  29D4               	goto	l8129
 14016                           
 14017                           ;LED_B1.c: 78: {
 14018                           ;LED_B1.c: 80: if(led == 1)
 14019  11C2  0823               	movf	setLED@led,w
 14020  11C3  3A01               	xorlw	1
 14021  11C4  1D03               	skipz
 14022  11C5  29C8               	goto	l8121
 14023                           
 14024                           ;LED_B1.c: 81: {
 14025                           ;LED_B1.c: 85: RA3=1;
 14026  11C6  158C               	bsf	12,3	;volatile
 14027                           
 14028                           ;LED_B1.c: 87: }
 14029  11C7  0008               	return
 14030  11C8                     l8121:	
 14031                           
 14032                           ;LED_B1.c: 90: else if(led == 2)
 14033  11C8  0823               	movf	setLED@led,w
 14034  11C9  3A02               	xorlw	2
 14035  11CA  1D03               	skipz
 14036  11CB  29CE               	goto	l8125
 14037                           
 14038                           ;LED_B1.c: 91: {
 14039                           ;LED_B1.c: 95: RC7=1;
 14040  11CC  178E               	bsf	14,7	;volatile
 14041                           
 14042                           ;LED_B1.c: 97: }
 14043  11CD  0008               	return
 14044  11CE                     l8125:	
 14045                           
 14046                           ;LED_B1.c: 110: else if(led == 99)
 14047  11CE  0823               	movf	setLED@led,w
 14048  11CF  3A63               	xorlw	99
 14049  11D0  1D03               	skipz
 14050  11D1  0008               	return
 14051                           
 14052                           ;LED_B1.c: 111: {
 14053                           ;LED_B1.c: 115: RB5=1;
 14054  11D2  168D               	bsf	13,5	;volatile
 14055                           
 14056                           ;LED_B1.c: 117: }
 14057                           ;LED_B1.c: 119: }
 14058  11D3  0008               	return
 14059  11D4                     l8129:	
 14060                           
 14061                           ;LED_B1.c: 120: else if(command == 1)
 14062  11D4  0822               	movf	setLED@command,w
 14063  11D5  3A01               	xorlw	1
 14064  11D6  1D03               	skipz
 14065  11D7  29EA               	goto	l8143
 14066                           
 14067                           ;LED_B1.c: 121: {
 14068                           ;LED_B1.c: 123: if(led == 1)
 14069  11D8  0823               	movf	setLED@led,w
 14070  11D9  3A01               	xorlw	1
 14071  11DA  1D03               	skipz
 14072  11DB  29DE               	goto	l8135
 14073                           
 14074                           ;LED_B1.c: 124: {
 14075                           ;LED_B1.c: 128: RA3=0;
 14076  11DC  118C               	bcf	12,3	;volatile
 14077                           
 14078                           ;LED_B1.c: 130: }
 14079  11DD  0008               	return
 14080  11DE                     l8135:	
 14081                           
 14082                           ;LED_B1.c: 133: else if(led == 2)
 14083  11DE  0823               	movf	setLED@led,w
 14084  11DF  3A02               	xorlw	2
 14085  11E0  1D03               	skipz
 14086  11E1  29E4               	goto	l8139
 14087                           
 14088                           ;LED_B1.c: 134: {
 14089                           ;LED_B1.c: 138: RC7=0;
 14090  11E2  138E               	bcf	14,7	;volatile
 14091                           
 14092                           ;LED_B1.c: 140: }
 14093  11E3  0008               	return
 14094  11E4                     l8139:	
 14095                           
 14096                           ;LED_B1.c: 153: else if(led == 99)
 14097  11E4  0823               	movf	setLED@led,w
 14098  11E5  3A63               	xorlw	99
 14099  11E6  1D03               	skipz
 14100  11E7  0008               	return
 14101                           
 14102                           ;LED_B1.c: 154: {
 14103                           ;LED_B1.c: 158: RB5=0;
 14104  11E8  128D               	bcf	13,5	;volatile
 14105                           
 14106                           ;LED_B1.c: 160: }
 14107                           ;LED_B1.c: 162: }
 14108  11E9  0008               	return
 14109  11EA                     l8143:	
 14110                           
 14111                           ;LED_B1.c: 163: else if(command == 10)
 14112  11EA  0822               	movf	setLED@command,w
 14113  11EB  3A0A               	xorlw	10
 14114  11EC  1D03               	skipz
 14115  11ED  2A0C               	goto	l8159
 14116                           
 14117                           ;LED_B1.c: 164: {
 14118                           ;LED_B1.c: 165: LED->GO=0;
 14119  11EE  0021               	movlb	1	; select bank1
 14120  11EF  083B               	movf	_LED^(0+128),w
 14121  11F0  0086               	movwf	6
 14122  11F1  0187               	clrf	7
 14123  11F2  1081               	bcf	1,1
 14124                           
 14125                           ;LED_B1.c: 166: LED->Time=0;
 14126  11F3  0A3B               	incf	_LED^(0+128),w
 14127  11F4  0086               	movwf	6
 14128  11F5  0187               	clrf	7
 14129  11F6  3000               	movlw	0
 14130  11F7  3FC0               	movwi [0]fsr1
 14131  11F8  3FC1               	movwi [1]fsr1
 14132                           
 14133                           ;LED_B1.c: 168: if(led == 1)
 14134  11F9  0020               	movlb	0	; select bank0
 14135  11FA  0823               	movf	setLED@led,w
 14136  11FB  3A01               	xorlw	1
 14137  11FC  1D03               	skipz
 14138  11FD  2A00               	goto	l8151
 14139                           
 14140                           ;LED_B1.c: 169: {
 14141                           ;LED_B1.c: 173: RA3=1;
 14142  11FE  158C               	bsf	12,3	;volatile
 14143                           
 14144                           ;LED_B1.c: 175: }
 14145  11FF  0008               	return
 14146  1200                     l8151:	
 14147                           
 14148                           ;LED_B1.c: 178: else if(led == 2)
 14149  1200  0823               	movf	setLED@led,w
 14150  1201  3A02               	xorlw	2
 14151  1202  1D03               	skipz
 14152  1203  2A06               	goto	l8155
 14153                           
 14154                           ;LED_B1.c: 179: {
 14155                           ;LED_B1.c: 183: RC7=1;
 14156  1204  178E               	bsf	14,7	;volatile
 14157                           
 14158                           ;LED_B1.c: 185: }
 14159  1205  0008               	return
 14160  1206                     l8155:	
 14161                           
 14162                           ;LED_B1.c: 198: else if(led == 99)
 14163  1206  0823               	movf	setLED@led,w
 14164  1207  3A63               	xorlw	99
 14165  1208  1D03               	skipz
 14166  1209  0008               	return
 14167                           
 14168                           ;LED_B1.c: 199: {
 14169                           ;LED_B1.c: 203: RB5=1;
 14170  120A  168D               	bsf	13,5	;volatile
 14171                           
 14172                           ;LED_B1.c: 205: }
 14173                           ;LED_B1.c: 207: }
 14174  120B  0008               	return
 14175  120C                     l8159:	
 14176                           
 14177                           ;LED_B1.c: 208: else if(command == 11)
 14178  120C  0822               	movf	setLED@command,w
 14179  120D  3A0B               	xorlw	11
 14180  120E  1D03               	skipz
 14181  120F  0008               	return
 14182                           
 14183                           ;LED_B1.c: 209: {
 14184                           ;LED_B1.c: 210: LED->GO=1;
 14185  1210  0021               	movlb	1	; select bank1
 14186  1211  083B               	movf	_LED^(0+128),w
 14187  1212  0086               	movwf	6
 14188  1213  0187               	clrf	7
 14189  1214  1481               	bsf	1,1
 14190  1215  0008               	return
 14191  1216                     __end_of_setLED:	
 14192                           
 14193                           	psect	text76
 14194  1B09                     __ptext76:	
 14195 ;; *************** function _LedPointSelect *****************
 14196 ;; Defined at:
 14197 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;  led             1    wreg     unsigned char 
 14200 ;; Auto vars:     Size  Location     Type
 14201 ;;  led             1    1[BANK0 ] unsigned char 
 14202 ;; Return value:  Size  Location     Type
 14203 ;;		None               void
 14204 ;; Registers used:
 14205 ;;		wreg
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14213 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;Total ram usage:        2 bytes
 14216 ;; Hardware stack levels used:    1
 14217 ;; Hardware stack levels required when called:    4
 14218 ;; This function calls:
 14219 ;;		Nothing
 14220 ;; This function is called by:
 14221 ;;		_setLED_Initialization
 14222 ;;		_setLED
 14223 ;;		_setLED_Main
 14224 ;; This function uses a non-reentrant model
 14225 ;;
 14226                           
 14227                           
 14228                           ;psect for function _LedPointSelect
 14229  1B09                     _LedPointSelect:	
 14230                           
 14231                           ;incstack = 0
 14232                           ; Regs used in _LedPointSelect: [wreg]
 14233                           ;LedPointSelect@led stored from wreg
 14234  1B09  0020               	movlb	0	; select bank0
 14235  1B0A  00A1               	movwf	LedPointSelect@led
 14236                           
 14237                           ;LED_B1.c: 10: if(led == 1)
 14238  1B0B  0821               	movf	LedPointSelect@led,w
 14239  1B0C  3A01               	xorlw	1
 14240  1B0D  1D03               	skipz
 14241  1B0E  2B15               	goto	l6019
 14242                           
 14243                           ;LED_B1.c: 11: {
 14244                           ;LED_B1.c: 12: LED=&VarLED1;
 14245  1B0F  30D9               	movlw	_VarLED1& (0+255)
 14246  1B10  00A0               	movwf	??_LedPointSelect
 14247  1B11  0820               	movf	??_LedPointSelect,w
 14248  1B12  0021               	movlb	1	; select bank1
 14249  1B13  00BB               	movwf	_LED^(0+128)
 14250                           
 14251                           ;LED_B1.c: 13: }
 14252  1B14  0008               	return
 14253  1B15                     l6019:	
 14254                           
 14255                           ;LED_B1.c: 16: else if(led == 2)
 14256  1B15  0020               	movlb	0	; select bank0
 14257  1B16  0821               	movf	LedPointSelect@led,w
 14258  1B17  3A02               	xorlw	2
 14259  1B18  1D03               	skipz
 14260  1B19  2B20               	goto	l6023
 14261                           
 14262                           ;LED_B1.c: 17: {
 14263                           ;LED_B1.c: 18: LED=&VarLED2;
 14264  1B1A  30DD               	movlw	_VarLED2& (0+255)
 14265  1B1B  00A0               	movwf	??_LedPointSelect
 14266  1B1C  0820               	movf	??_LedPointSelect,w
 14267  1B1D  0021               	movlb	1	; select bank1
 14268  1B1E  00BB               	movwf	_LED^(0+128)
 14269                           
 14270                           ;LED_B1.c: 19: }
 14271  1B1F  0008               	return
 14272  1B20                     l6023:	
 14273                           
 14274                           ;LED_B1.c: 28: else if(led == 99)
 14275  1B20  0020               	movlb	0	; select bank0
 14276  1B21  0821               	movf	LedPointSelect@led,w
 14277  1B22  3A63               	xorlw	99
 14278  1B23  1D03               	skipz
 14279  1B24  0008               	return
 14280                           
 14281                           ;LED_B1.c: 29: {
 14282                           ;LED_B1.c: 30: LED=&VarErrLED;
 14283  1B25  30D5               	movlw	_VarErrLED& (0+255)
 14284  1B26  00A0               	movwf	??_LedPointSelect
 14285  1B27  0820               	movf	??_LedPointSelect,w
 14286  1B28  0021               	movlb	1	; select bank1
 14287  1B29  00BB               	movwf	_LED^(0+128)
 14288  1B2A  0008               	return
 14289  1B2B                     __end_of_LedPointSelect:	
 14290                           
 14291                           	psect	text77
 14292  19FE                     __ptext77:	
 14293 ;; *************** function _DimmerLights_Close *****************
 14294 ;; Defined at:
 14295 ;;		line 101 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14296 ;; Parameters:    Size  Location     Type
 14297 ;;		None
 14298 ;; Auto vars:     Size  Location     Type
 14299 ;;		None
 14300 ;; Return value:  Size  Location     Type
 14301 ;;		None               void
 14302 ;; Registers used:
 14303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14304 ;; Tracked objects:
 14305 ;;		On entry : 0/0
 14306 ;;		On exit  : 0/0
 14307 ;;		Unchanged: 0/0
 14308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14313 ;;Total ram usage:        0 bytes
 14314 ;; Hardware stack levels used:    1
 14315 ;; Hardware stack levels required when called:    5
 14316 ;; This function calls:
 14317 ;;		_getDimmerLights_StatusFlag
 14318 ;;		_setLoad_GO
 14319 ;; This function is called by:
 14320 ;;		_DimmerLights_Main
 14321 ;; This function uses a non-reentrant model
 14322 ;;
 14323                           
 14324                           
 14325                           ;psect for function _DimmerLights_Close
 14326  19FE                     _DimmerLights_Close:	
 14327                           
 14328                           ;Dimmer_B1.c: 103: if(Dimmer->Detect)
 14329                           
 14330                           ;incstack = 0
 14331                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14332  19FE  0021               	movlb	1	; select bank1
 14333  19FF  0839               	movf	_Dimmer^(0+128),w
 14334  1A00  0086               	movwf	6
 14335  1A01  0187               	clrf	7
 14336  1A02  1C01               	btfss	1,0
 14337  1A03  0008               	return
 14338                           
 14339                           ;Dimmer_B1.c: 104: {
 14340                           ;Dimmer_B1.c: 105: Dimmer->Detect=0;
 14341  1A04  0839               	movf	_Dimmer^(0+128),w
 14342  1A05  0086               	movwf	6
 14343  1A06  0187               	clrf	7
 14344  1A07  1001               	bcf	1,0
 14345                           
 14346                           ;Dimmer_B1.c: 106: if(!getDimmerLights_StatusFlag())
 14347  1A08  3199  2140  3199   	fcall	_getDimmerLights_StatusFlag
 14348  1A0B  3800               	iorlw	0
 14349  1A0C  1D03               	skipz
 14350  1A0D  0008               	return
 14351                           
 14352                           ;Dimmer_B1.c: 107: {
 14353                           ;Dimmer_B1.c: 108: setLoad_GO(0);
 14354  1A0E  3000               	movlw	0
 14355  1A0F  31A6  26E4         	fcall	_setLoad_GO
 14356                           
 14357                           ;Dimmer_B1.c: 109: Memory->GO=1; if(!1) { Memory->Time=1; } ;;
 14358  1A11  087C               	movf	_Memory,w
 14359  1A12  3E22               	addlw	34
 14360  1A13  0086               	movwf	6
 14361  1A14  3001               	movlw	1	; select bank2/3
 14362  1A15  0087               	movwf	7
 14363  1A16  1481               	bsf	1,1
 14364  1A17  0008               	return
 14365  1A18                     __end_of_DimmerLights_Close:	
 14366                           
 14367                           	psect	text78
 14368  26E4                     __ptext78:	
 14369 ;; *************** function _setLoad_GO *****************
 14370 ;; Defined at:
 14371 ;;		line 300 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  command         1    wreg     unsigned char 
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;  command         1    0[BANK0 ] unsigned char 
 14376 ;; Return value:  Size  Location     Type
 14377 ;;		None               void
 14378 ;; Registers used:
 14379 ;;		wreg, fsr1l, fsr1h
 14380 ;; Tracked objects:
 14381 ;;		On entry : 0/0
 14382 ;;		On exit  : 0/0
 14383 ;;		Unchanged: 0/0
 14384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14389 ;;Total ram usage:        1 bytes
 14390 ;; Hardware stack levels used:    1
 14391 ;; Hardware stack levels required when called:    4
 14392 ;; This function calls:
 14393 ;;		Nothing
 14394 ;; This function is called by:
 14395 ;;		_DimmerLights_Close
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           
 14400                           ;psect for function _setLoad_GO
 14401  26E4                     _setLoad_GO:	
 14402                           
 14403                           ;incstack = 0
 14404                           ; Regs used in _setLoad_GO: [wregfsr1]
 14405                           ;setLoad_GO@command stored from wreg
 14406  26E4  0020               	movlb	0	; select bank0
 14407  26E5  00A0               	movwf	setLoad_GO@command
 14408                           
 14409                           ;OverLoad_B1.c: 302: Load->GO=command;
 14410  26E6  086E               	movf	_Load,w
 14411  26E7  0086               	movwf	6
 14412  26E8  3002               	movlw	2	; select bank4/5
 14413  26E9  0087               	movwf	7
 14414  26EA  0820               	movf	setLoad_GO@command,w
 14415  26EB  1081               	bcf	1,1
 14416  26EC  1D03               	skipz
 14417  26ED  1481               	bsf	1,1
 14418  26EE  0008               	return
 14419  26EF                     __end_of_setLoad_GO:	
 14420                           
 14421                           	psect	text79
 14422  1940                     __ptext79:	
 14423 ;; *************** function _getDimmerLights_StatusFlag *****************
 14424 ;; Defined at:
 14425 ;;		line 208 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;		None
 14428 ;; Auto vars:     Size  Location     Type
 14429 ;;  Status          1    1[BANK0 ] unsigned char 
 14430 ;; Return value:  Size  Location     Type
 14431 ;;                  1    wreg      unsigned char 
 14432 ;; Registers used:
 14433 ;;		wreg, fsr1l, fsr1h, status,2
 14434 ;; Tracked objects:
 14435 ;;		On entry : 0/0
 14436 ;;		On exit  : 0/0
 14437 ;;		Unchanged: 0/0
 14438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14440 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14443 ;;Total ram usage:        3 bytes
 14444 ;; Hardware stack levels used:    1
 14445 ;; Hardware stack levels required when called:    4
 14446 ;; This function calls:
 14447 ;;		Nothing
 14448 ;; This function is called by:
 14449 ;;		_DimmerLights_Close
 14450 ;;		_DimmerLights_Exceptions
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           
 14455                           ;psect for function _getDimmerLights_StatusFlag
 14456  1940                     _getDimmerLights_StatusFlag:	
 14457                           
 14458                           ;Dimmer_B1.c: 210: char Status=0;
 14459                           
 14460                           ;incstack = 0
 14461                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2]
 14462  1940  0020               	movlb	0	; select bank0
 14463  1941  01A1               	clrf	getDimmerLights_StatusFlag@Status
 14464                           
 14465                           ;Dimmer_B1.c: 217: Status=(DimmerLights11->StatusFlag || DimmerLights22->StatusFlag)?1:0
      +                          ;
 14466  1942  01A2               	clrf	_getDimmerLights_StatusFlag$1692
 14467  1943  0AA2               	incf	_getDimmerLights_StatusFlag$1692,f
 14468  1944  086D               	movf	_DimmerLights11,w
 14469  1945  0086               	movwf	6
 14470  1946  3001               	movlw	1	; select bank2/3
 14471  1947  0087               	movwf	7
 14472  1948  1B01               	btfsc	1,6
 14473  1949  2950               	goto	l6387
 14474  194A  0879               	movf	_DimmerLights22,w
 14475  194B  0086               	movwf	6
 14476  194C  3001               	movlw	1	; select bank2/3
 14477  194D  0087               	movwf	7
 14478  194E  1F01               	btfss	1,6
 14479  194F  01A2               	clrf	_getDimmerLights_StatusFlag$1692
 14480  1950                     l6387:	
 14481  1950  0822               	movf	_getDimmerLights_StatusFlag$1692,w
 14482  1951  00A0               	movwf	??_getDimmerLights_StatusFlag
 14483  1952  0820               	movf	??_getDimmerLights_StatusFlag,w
 14484  1953  00A1               	movwf	getDimmerLights_StatusFlag@Status
 14485                           
 14486                           ;Dimmer_B1.c: 224: return Status;
 14487  1954  0821               	movf	getDimmerLights_StatusFlag@Status,w
 14488  1955  0008               	return
 14489  1956                     __end_of_getDimmerLights_StatusFlag:	
 14490                           
 14491                           	psect	text80
 14492  18EA                     __ptext80:	
 14493 ;; *************** function _DimmerLights_Initialization *****************
 14494 ;; Defined at:
 14495 ;;		line 41 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14496 ;; Parameters:    Size  Location     Type
 14497 ;;		None
 14498 ;; Auto vars:     Size  Location     Type
 14499 ;;		None
 14500 ;; Return value:  Size  Location     Type
 14501 ;;		None               void
 14502 ;; Registers used:
 14503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14504 ;; Tracked objects:
 14505 ;;		On entry : 0/0
 14506 ;;		On exit  : 0/0
 14507 ;;		Unchanged: 0/0
 14508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14512 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;Total ram usage:        1 bytes
 14514 ;; Hardware stack levels used:    1
 14515 ;; Hardware stack levels required when called:    6
 14516 ;; This function calls:
 14517 ;;		_Dimmer_Initialization
 14518 ;;		_setDimmerLights_Initialization
 14519 ;; This function is called by:
 14520 ;;		_main
 14521 ;; This function uses a non-reentrant model
 14522 ;;
 14523                           
 14524                           
 14525                           ;psect for function _DimmerLights_Initialization
 14526  18EA                     _DimmerLights_Initialization:	
 14527                           
 14528                           ;Dimmer_B1.c: 44: DimmerLights11=&DimmerLights1;
 14529                           
 14530                           ;incstack = 0
 14531                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14532  18EA  3030               	movlw	_DimmerLights1& (0+255)
 14533  18EB  0020               	movlb	0	; select bank0
 14534  18EC  00A4               	movwf	??_DimmerLights_Initialization
 14535  18ED  0824               	movf	??_DimmerLights_Initialization,w
 14536  18EE  00ED               	movwf	_DimmerLights11
 14537                           
 14538                           ;Dimmer_B1.c: 45: setDimmerLights_Initialization(1);
 14539  18EF  3001               	movlw	1
 14540  18F0  319C  2462  3198   	fcall	_setDimmerLights_Initialization
 14541                           
 14542                           ;Dimmer_B1.c: 49: DimmerLights22=&DimmerLights2;
 14543  18F3  303E               	movlw	_DimmerLights2& (0+255)
 14544  18F4  0020               	movlb	0	; select bank0
 14545  18F5  00A4               	movwf	??_DimmerLights_Initialization
 14546  18F6  0824               	movf	??_DimmerLights_Initialization,w
 14547  18F7  00F9               	movwf	_DimmerLights22
 14548                           
 14549                           ;Dimmer_B1.c: 50: setDimmerLights_Initialization(2);
 14550  18F8  3002               	movlw	2
 14551  18F9  319C  2462  3198   	fcall	_setDimmerLights_Initialization
 14552                           
 14553                           ;Dimmer_B1.c: 59: Dimmer_Initialization();
 14554  18FC  31A6  267B         	fcall	_Dimmer_Initialization
 14555  18FE  0008               	return
 14556  18FF                     __end_of_DimmerLights_Initialization:	
 14557                           
 14558                           	psect	text81
 14559  1C62                     __ptext81:	
 14560 ;; *************** function _setDimmerLights_Initialization *****************
 14561 ;; Defined at:
 14562 ;;		line 63 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;  lights          1    wreg     unsigned char 
 14565 ;; Auto vars:     Size  Location     Type
 14566 ;;  lights          1    3[BANK0 ] unsigned char 
 14567 ;; Return value:  Size  Location     Type
 14568 ;;		None               void
 14569 ;; Registers used:
 14570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14571 ;; Tracked objects:
 14572 ;;		On entry : 0/0
 14573 ;;		On exit  : 0/0
 14574 ;;		Unchanged: 0/0
 14575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14578 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14579 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14580 ;;Total ram usage:        2 bytes
 14581 ;; Hardware stack levels used:    1
 14582 ;; Hardware stack levels required when called:    5
 14583 ;; This function calls:
 14584 ;;		_DimmerLightsPointSelect
 14585 ;; This function is called by:
 14586 ;;		_DimmerLights_Initialization
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           
 14591                           ;psect for function _setDimmerLights_Initialization
 14592  1C62                     _setDimmerLights_Initialization:	
 14593                           
 14594                           ;incstack = 0
 14595                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 14596                           ;setDimmerLights_Initialization@lights stored from wreg
 14597  1C62  0020               	movlb	0	; select bank0
 14598  1C63  00A3               	movwf	setDimmerLights_Initialization@lights
 14599                           
 14600                           ;Dimmer_B1.c: 65: DimmerLightsPointSelect(lights);
 14601  1C64  0823               	movf	setDimmerLights_Initialization@lights,w
 14602  1C65  3198  20D5         	fcall	_DimmerLightsPointSelect
 14603                           
 14604                           ;Dimmer_B1.c: 66: DimmerLights->Clear=1;
 14605  1C67  0020               	movlb	0	; select bank0
 14606  1C68  086C               	movf	_DimmerLights,w
 14607  1C69  3E0C               	addlw	12
 14608  1C6A  0086               	movwf	6
 14609  1C6B  3001               	movlw	1	; select bank2/3
 14610  1C6C  0087               	movwf	7
 14611  1C6D  1401               	bsf	1,0
 14612                           
 14613                           ;Dimmer_B1.c: 72: DimmerLights->MaxmumValue=((char)(65*1.5));
 14614  1C6E  3061               	movlw	97
 14615  1C6F  00A2               	movwf	??_setDimmerLights_Initialization
 14616  1C70  086C               	movf	_DimmerLights,w
 14617  1C71  3E05               	addlw	5
 14618  1C72  0086               	movwf	6
 14619  1C73  3001               	movlw	1	; select bank2/3
 14620  1C74  0087               	movwf	7
 14621  1C75  0822               	movf	??_setDimmerLights_Initialization,w
 14622  1C76  0081               	movwf	1
 14623                           
 14624                           ;Dimmer_B1.c: 73: DimmerLights->MinimumValue=((char)(20*1.5));
 14625  1C77  301E               	movlw	30
 14626  1C78  00A2               	movwf	??_setDimmerLights_Initialization
 14627  1C79  086C               	movf	_DimmerLights,w
 14628  1C7A  3E06               	addlw	6
 14629  1C7B  0086               	movwf	6
 14630  1C7C  3001               	movlw	1	; select bank2/3
 14631  1C7D  0087               	movwf	7
 14632  1C7E  0822               	movf	??_setDimmerLights_Initialization,w
 14633  1C7F  0081               	movwf	1
 14634                           
 14635                           ;Dimmer_B1.c: 87: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 14636  1C80  086C               	movf	_DimmerLights,w
 14637  1C81  3E05               	addlw	5
 14638  1C82  0086               	movwf	6
 14639  1C83  3001               	movlw	1	; select bank2/3
 14640  1C84  0087               	movwf	7
 14641  1C85  0801               	movf	1,w
 14642  1C86  00A2               	movwf	??_setDimmerLights_Initialization
 14643  1C87  086C               	movf	_DimmerLights,w
 14644  1C88  3E04               	addlw	4
 14645  1C89  0086               	movwf	6
 14646  1C8A  3001               	movlw	1	; select bank2/3
 14647  1C8B  0087               	movwf	7
 14648  1C8C  0822               	movf	??_setDimmerLights_Initialization,w
 14649  1C8D  0081               	movwf	1
 14650  1C8E  0008               	return
 14651  1C8F                     __end_of_setDimmerLights_Initialization:	
 14652                           
 14653                           	psect	text82
 14654  267B                     __ptext82:	
 14655 ;; *************** function _Dimmer_Initialization *****************
 14656 ;; Defined at:
 14657 ;;		line 520 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14658 ;; Parameters:    Size  Location     Type
 14659 ;;		None
 14660 ;; Auto vars:     Size  Location     Type
 14661 ;;		None
 14662 ;; Return value:  Size  Location     Type
 14663 ;;		None               void
 14664 ;; Registers used:
 14665 ;;		wreg
 14666 ;; Tracked objects:
 14667 ;;		On entry : 0/0
 14668 ;;		On exit  : 0/0
 14669 ;;		Unchanged: 0/0
 14670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14674 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14675 ;;Total ram usage:        1 bytes
 14676 ;; Hardware stack levels used:    1
 14677 ;; Hardware stack levels required when called:    4
 14678 ;; This function calls:
 14679 ;;		Nothing
 14680 ;; This function is called by:
 14681 ;;		_DimmerLights_Initialization
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685                           
 14686                           ;psect for function _Dimmer_Initialization
 14687  267B                     _Dimmer_Initialization:	
 14688                           
 14689                           ;Dimmer_B1.c: 522: Dimmer=&Dimmer1;
 14690                           
 14691                           ;incstack = 0
 14692                           ; Regs used in _Dimmer_Initialization: [wreg]
 14693  267B  30E1               	movlw	_Dimmer1& (0+255)
 14694  267C  0020               	movlb	0	; select bank0
 14695  267D  00A0               	movwf	??_Dimmer_Initialization
 14696  267E  0820               	movf	??_Dimmer_Initialization,w
 14697  267F  0021               	movlb	1	; select bank1
 14698  2680  00B9               	movwf	_Dimmer^(0+128)
 14699  2681  0008               	return
 14700  2682                     __end_of_Dimmer_Initialization:	
 14701                           
 14702                           	psect	text83
 14703  2698                     __ptext83:	
 14704 ;; *************** function _DelayOff_Main *****************
 14705 ;; Defined at:
 14706 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;		None
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;		None
 14711 ;; Return value:  Size  Location     Type
 14712 ;;		None               void
 14713 ;; Registers used:
 14714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14715 ;; Tracked objects:
 14716 ;;		On entry : 0/0
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14724 ;;Total ram usage:        0 bytes
 14725 ;; Hardware stack levels used:    1
 14726 ;; Hardware stack levels required when called:    9
 14727 ;; This function calls:
 14728 ;;		_DlyOff_Main
 14729 ;; This function is called by:
 14730 ;;		_main
 14731 ;; This function uses a non-reentrant model
 14732 ;;
 14733                           
 14734                           
 14735                           ;psect for function _DelayOff_Main
 14736  2698                     _DelayOff_Main:	
 14737                           
 14738                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 14739                           
 14740                           ;incstack = 0
 14741                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14742  2698  3001               	movlw	1
 14743  2699  3187  277E  31A6   	fcall	_DlyOff_Main
 14744                           
 14745                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 14746  269C  3002               	movlw	2
 14747  269D  3187  277E         	fcall	_DlyOff_Main
 14748  269F  0008               	return
 14749  26A0                     __end_of_DelayOff_Main:	
 14750                           
 14751                           	psect	text84
 14752  077E                     __ptext84:	
 14753 ;; *************** function _DlyOff_Main *****************
 14754 ;; Defined at:
 14755 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;  sw              1    wreg     unsigned char 
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;  sw              1   68[BANK0 ] unsigned char 
 14760 ;; Return value:  Size  Location     Type
 14761 ;;		None               void
 14762 ;; Registers used:
 14763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14764 ;; Tracked objects:
 14765 ;;		On entry : 0/0
 14766 ;;		On exit  : 0/0
 14767 ;;		Unchanged: 0/0
 14768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14771 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14773 ;;Total ram usage:        3 bytes
 14774 ;; Hardware stack levels used:    1
 14775 ;; Hardware stack levels required when called:    8
 14776 ;; This function calls:
 14777 ;;		_DelayOffPointSelect
 14778 ;;		_setBuz
 14779 ;;		_setDimmerLights_Switch
 14780 ;;		_setDimmerLights_Trigger
 14781 ;;		_setRFSW_Status
 14782 ;;		_setRF_DimmerLights
 14783 ;;		_setSw_Status
 14784 ;;		_setTxData
 14785 ;; This function is called by:
 14786 ;;		_DelayOff_Main
 14787 ;; This function uses a non-reentrant model
 14788 ;;
 14789                           
 14790                           
 14791                           ;psect for function _DlyOff_Main
 14792  077E                     _DlyOff_Main:	
 14793                           
 14794                           ;incstack = 0
 14795                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14796                           ;DlyOff_Main@sw stored from wreg
 14797  077E  0020               	movlb	0	; select bank0
 14798  077F  00E4               	movwf	DlyOff_Main@sw
 14799                           
 14800                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 14801  0780  0864               	movf	DlyOff_Main@sw,w
 14802  0781  3199  216C  3187   	fcall	_DelayOffPointSelect
 14803                           
 14804                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 14805  0784  0021               	movlb	1	; select bank1
 14806  0785  0838               	movf	_DelayOff^(0+128),w
 14807  0786  0086               	movwf	6
 14808  0787  0187               	clrf	7
 14809  0788  1C81               	btfss	1,1
 14810  0789  0008               	return
 14811                           
 14812                           ;DelayOff_B1.c: 70: {
 14813                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 14814  078A  0838               	movf	_DelayOff^(0+128),w
 14815  078B  3E02               	addlw	2
 14816  078C  0086               	movwf	6
 14817  078D  0187               	clrf	7
 14818  078E  3001               	movlw	1
 14819  078F  0781               	addwf	1,f
 14820  0790  3141               	addfsr 1,1
 14821  0791  1803               	skipnc
 14822  0792  0A81               	incf	1,f
 14823                           
 14824                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5650)
 14825  0793  0838               	movf	_DelayOff^(0+128),w
 14826  0794  3E02               	addlw	2
 14827  0795  0086               	movwf	6
 14828  0796  0187               	clrf	7
 14829  0797  3F40               	moviw [0]fsr1
 14830  0798  0020               	movlb	0	; select bank0
 14831  0799  00E2               	movwf	??_DlyOff_Main
 14832  079A  3F41               	moviw [1]fsr1
 14833  079B  00E3               	movwf	??_DlyOff_Main+1
 14834  079C  3016               	movlw	22
 14835  079D  0263               	subwf	??_DlyOff_Main+1,w
 14836  079E  3012               	movlw	18
 14837  079F  1903               	skipnz
 14838  07A0  0262               	subwf	??_DlyOff_Main,w
 14839  07A1  1C03               	skipc
 14840  07A2  0008               	return
 14841                           
 14842                           ;DelayOff_B1.c: 73: {
 14843                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 14844  07A3  0021               	movlb	1	; select bank1
 14845  07A4  0838               	movf	_DelayOff^(0+128),w
 14846  07A5  3E02               	addlw	2
 14847  07A6  0086               	movwf	6
 14848  07A7  0187               	clrf	7
 14849  07A8  3000               	movlw	0
 14850  07A9  3FC0               	movwi [0]fsr1
 14851  07AA  3FC1               	movwi [1]fsr1
 14852                           
 14853                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 14854  07AB  3001               	movlw	1
 14855  07AC  0020               	movlb	0	; select bank0
 14856  07AD  00E2               	movwf	??_DlyOff_Main
 14857  07AE  0021               	movlb	1	; select bank1
 14858  07AF  0838               	movf	_DelayOff^(0+128),w
 14859  07B0  3E04               	addlw	4
 14860  07B1  0086               	movwf	6
 14861  07B2  0187               	clrf	7
 14862  07B3  0020               	movlb	0	; select bank0
 14863  07B4  0862               	movf	??_DlyOff_Main,w
 14864  07B5  0781               	addwf	1,f
 14865                           
 14866                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 14867  07B6  0021               	movlb	1	; select bank1
 14868  07B7  0838               	movf	_DelayOff^(0+128),w
 14869  07B8  3E04               	addlw	4
 14870  07B9  0086               	movwf	6
 14871  07BA  0187               	clrf	7
 14872  07BB  0A38               	incf	_DelayOff^(0+128),w
 14873  07BC  0084               	movwf	4
 14874  07BD  0185               	clrf	5
 14875  07BE  0800               	movf	0,w
 14876  07BF  0201               	subwf	1,w
 14877  07C0  1C03               	skipc
 14878  07C1  0008               	return
 14879                           
 14880                           ;DelayOff_B1.c: 77: {
 14881                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 14882  07C2  0838               	movf	_DelayOff^(0+128),w
 14883  07C3  3E04               	addlw	4
 14884  07C4  0086               	movwf	6
 14885  07C5  0187               	clrf	7
 14886  07C6  0181               	clrf	1
 14887                           
 14888                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 14889  07C7  0838               	movf	_DelayOff^(0+128),w
 14890  07C8  0086               	movwf	6
 14891  07C9  0187               	clrf	7
 14892  07CA  1081               	bcf	1,1
 14893                           
 14894                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 14895  07CB  0020               	movlb	0	; select bank0
 14896  07CC  01A2               	clrf	setSw_Status@command
 14897  07CD  0864               	movf	DlyOff_Main@sw,w
 14898  07CE  31A7  27A1  3187   	fcall	_setSw_Status
 14899                           
 14900                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 14901  07D1  0020               	movlb	0	; select bank0
 14902  07D2  01A2               	clrf	setRFSW_Status@command
 14903  07D3  0864               	movf	DlyOff_Main@sw,w
 14904  07D4  31A7  2792  3187   	fcall	_setRFSW_Status
 14905                           
 14906                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 14907  07D7  0020               	movlb	0	; select bank0
 14908  07D8  01DD               	clrf	setRF_DimmerLights@on
 14909  07D9  0864               	movf	DlyOff_Main@sw,w
 14910  07DA  3193  23A4  3187   	fcall	_setRF_DimmerLights
 14911                           
 14912                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 14913  07DD  0020               	movlb	0	; select bank0
 14914  07DE  01A2               	clrf	setDimmerLights_Trigger@command
 14915  07DF  0AA2               	incf	setDimmerLights_Trigger@command,f
 14916  07E0  0864               	movf	DlyOff_Main@sw,w
 14917  07E1  31A7  27D0  3187   	fcall	_setDimmerLights_Trigger
 14918                           
 14919                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 14920  07E4  0020               	movlb	0	; select bank0
 14921  07E5  01A2               	clrf	setDimmerLights_Switch@command
 14922  07E6  0864               	movf	DlyOff_Main@sw,w
 14923  07E7  31A7  27C0  3187   	fcall	_setDimmerLights_Switch
 14924                           
 14925                           ;DelayOff_B1.c: 85: setTxData(1);
 14926  07EA  3001               	movlw	1
 14927  07EB  318B  23FF  3187   	fcall	_setTxData
 14928                           
 14929                           ;DelayOff_B1.c: 86: setBuz(1,100);
 14930  07EE  3064               	movlw	100
 14931  07EF  0020               	movlb	0	; select bank0
 14932  07F0  00A6               	movwf	setBuz@time
 14933  07F1  3000               	movlw	0
 14934  07F2  00A7               	movwf	setBuz@time+1
 14935  07F3  3001               	movlw	1
 14936  07F4  3195  2565         	fcall	_setBuz
 14937  07F6  0008               	return
 14938  07F7                     __end_of_DlyOff_Main:	
 14939                           
 14940                           	psect	text85
 14941  0BFF                     __ptext85:	
 14942 ;; *************** function _setTxData *****************
 14943 ;; Defined at:
 14944 ;;		line 140 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14945 ;; Parameters:    Size  Location     Type
 14946 ;;  rf              1    wreg     unsigned char 
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;  rf              1    3[BANK0 ] unsigned char 
 14949 ;;  i               1    0        unsigned char 
 14950 ;; Return value:  Size  Location     Type
 14951 ;;		None               void
 14952 ;; Registers used:
 14953 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14954 ;; Tracked objects:
 14955 ;;		On entry : 0/0
 14956 ;;		On exit  : 0/0
 14957 ;;		Unchanged: 0/0
 14958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;Total ram usage:        2 bytes
 14964 ;; Hardware stack levels used:    1
 14965 ;; Hardware stack levels required when called:    5
 14966 ;; This function calls:
 14967 ;;		_RfPointSelect
 14968 ;; This function is called by:
 14969 ;;		_DlyOff_Main
 14970 ;;		_setDimmerLights_Adj
 14971 ;;		_setControl_Lights_Table
 14972 ;;		_setRFSW_Control
 14973 ;;		_setRFSW_AdjControl
 14974 ;;		_Sw_DimmerOnFunc
 14975 ;;		_Sw_DimmerOffFunc
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           
 14980                           ;psect for function _setTxData
 14981  0BFF                     _setTxData:	
 14982                           
 14983                           ;incstack = 0
 14984                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14985                           ;setTxData@rf stored from wreg
 14986  0BFF  0020               	movlb	0	; select bank0
 14987  0C00  00A3               	movwf	setTxData@rf
 14988                           
 14989                           ;RF_Control_B1.c: 142: char i;
 14990                           ;RF_Control_B1.c: 143: RfPointSelect(rf);
 14991  0C01  0823               	movf	setTxData@rf,w
 14992  0C02  31A6  26D9  318B   	fcall	_RfPointSelect
 14993                           
 14994                           ;RF_Control_B1.c: 144: if(RF->Enable)
 14995  0C05  087A               	movf	_RF,w
 14996  0C06  0086               	movwf	6
 14997  0C07  0187               	clrf	7
 14998  0C08  1C01               	btfss	1,0
 14999  0C09  0008               	return
 15000                           
 15001                           ;RF_Control_B1.c: 145: {
 15002                           ;RF_Control_B1.c: 147: if(!RF->TransceiveGO)
 15003  0C0A  087A               	movf	_RF,w
 15004  0C0B  0086               	movwf	6
 15005  0C0C  0187               	clrf	7
 15006  0C0D  1901               	btfsc	1,2
 15007  0C0E  0008               	return
 15008                           
 15009                           ;RF_Control_B1.c: 148: {
 15010                           ;RF_Control_B1.c: 149: RF->TransceiveGO=1;
 15011  0C0F  087A               	movf	_RF,w
 15012  0C10  0086               	movwf	6
 15013  0C11  0187               	clrf	7
 15014  0C12  1501               	bsf	1,2
 15015                           
 15016                           ;RF_Control_B1.c: 158: RF_Data[0]=0x63;
 15017  0C13  3063               	movlw	99
 15018  0C14  0020               	movlb	0	; select bank0
 15019  0C15  00A2               	movwf	??_setTxData
 15020  0C16  0822               	movf	??_setTxData,w
 15021  0C17  0021               	movlb	1	; select bank1
 15022  0C18  00A0               	movwf	_RF_Data^(0+128)
 15023                           
 15024                           ;RF_Control_B1.c: 159: RF_Data[1]=0x02;
 15025  0C19  3002               	movlw	2
 15026  0C1A  0020               	movlb	0	; select bank0
 15027  0C1B  00A2               	movwf	??_setTxData
 15028  0C1C  0822               	movf	??_setTxData,w
 15029  0C1D  0021               	movlb	1	; select bank1
 15030  0C1E  00A1               	movwf	(_RF_Data^(0+128)+1)
 15031                           
 15032                           ;RF_Control_B1.c: 160: RF_Data[2]=Product->Data[2];
 15033  0C1F  0020               	movlb	0	; select bank0
 15034  0C20  086F               	movf	_Product,w
 15035  0C21  0086               	movwf	6
 15036  0C22  3001               	movlw	1	; select bank2/3
 15037  0C23  0087               	movwf	7
 15038  0C24  3001               	movlw	1	; select bank2/3
 15039  0C25  3F42               	moviw [2]fsr1
 15040  0C26  0021               	movlb	1	; select bank1
 15041  0C27  00A2               	movwf	(_RF_Data^(0+128)+2)
 15042                           
 15043                           ;RF_Control_B1.c: 161: RF_Data[3]=Product->Data[3];
 15044  0C28  0020               	movlb	0	; select bank0
 15045  0C29  086F               	movf	_Product,w
 15046  0C2A  0086               	movwf	6
 15047  0C2B  3001               	movlw	1	; select bank2/3
 15048  0C2C  0087               	movwf	7
 15049  0C2D  3001               	movlw	1	; select bank2/3
 15050  0C2E  3F43               	moviw [3]fsr1
 15051  0C2F  0021               	movlb	1	; select bank1
 15052  0C30  00A3               	movwf	(_RF_Data^(0+128)+3)
 15053                           
 15054                           ;RF_Control_B1.c: 162: RF_Data[4]=Product->Data[4];
 15055  0C31  0020               	movlb	0	; select bank0
 15056  0C32  086F               	movf	_Product,w
 15057  0C33  0086               	movwf	6
 15058  0C34  3001               	movlw	1	; select bank2/3
 15059  0C35  0087               	movwf	7
 15060  0C36  3001               	movlw	1	; select bank2/3
 15061  0C37  3F44               	moviw [4]fsr1
 15062  0C38  0021               	movlb	1	; select bank1
 15063  0C39  00A4               	movwf	(_RF_Data^(0+128)+4)
 15064                           
 15065                           ;RF_Control_B1.c: 163: RF_Data[5]=Product->Data[5];
 15066  0C3A  0020               	movlb	0	; select bank0
 15067  0C3B  086F               	movf	_Product,w
 15068  0C3C  0086               	movwf	6
 15069  0C3D  3001               	movlw	1	; select bank2/3
 15070  0C3E  0087               	movwf	7
 15071  0C3F  3001               	movlw	1	; select bank2/3
 15072  0C40  3F45               	moviw [5]fsr1
 15073  0C41  0021               	movlb	1	; select bank1
 15074  0C42  00A5               	movwf	(_RF_Data^(0+128)+5)
 15075                           
 15076                           ;RF_Control_B1.c: 164: RF_Data[6]=Product->Data[6];
 15077  0C43  0020               	movlb	0	; select bank0
 15078  0C44  086F               	movf	_Product,w
 15079  0C45  0086               	movwf	6
 15080  0C46  3001               	movlw	1	; select bank2/3
 15081  0C47  0087               	movwf	7
 15082  0C48  3001               	movlw	1	; select bank2/3
 15083  0C49  3F46               	moviw [6]fsr1
 15084  0C4A  0021               	movlb	1	; select bank1
 15085  0C4B  00A6               	movwf	(_RF_Data^(0+128)+6)
 15086                           
 15087                           ;RF_Control_B1.c: 165: RF_Data[7]=Product->Data[7];
 15088  0C4C  0020               	movlb	0	; select bank0
 15089  0C4D  086F               	movf	_Product,w
 15090  0C4E  0086               	movwf	6
 15091  0C4F  3001               	movlw	1	; select bank2/3
 15092  0C50  0087               	movwf	7
 15093  0C51  3001               	movlw	1	; select bank2/3
 15094  0C52  3F47               	moviw [7]fsr1
 15095  0C53  0021               	movlb	1	; select bank1
 15096  0C54  00A7               	movwf	(_RF_Data^(0+128)+7)
 15097                           
 15098                           ;RF_Control_B1.c: 166: RF_Data[8]=Product->Data[8];
 15099  0C55  0020               	movlb	0	; select bank0
 15100  0C56  086F               	movf	_Product,w
 15101  0C57  0086               	movwf	6
 15102  0C58  3001               	movlw	1	; select bank2/3
 15103  0C59  0087               	movwf	7
 15104  0C5A  3001               	movlw	1	; select bank2/3
 15105  0C5B  3F48               	moviw [8]fsr1
 15106  0C5C  0021               	movlb	1	; select bank1
 15107  0C5D  00A8               	movwf	(_RF_Data^(0+128)+8)
 15108                           
 15109                           ;RF_Control_B1.c: 167: RF_Data[9]=Product->Data[9];
 15110  0C5E  0020               	movlb	0	; select bank0
 15111  0C5F  086F               	movf	_Product,w
 15112  0C60  0086               	movwf	6
 15113  0C61  3001               	movlw	1	; select bank2/3
 15114  0C62  0087               	movwf	7
 15115  0C63  3001               	movlw	1	; select bank2/3
 15116  0C64  3F49               	moviw [9]fsr1
 15117  0C65  0021               	movlb	1	; select bank1
 15118  0C66  00A9               	movwf	(_RF_Data^(0+128)+9)
 15119                           
 15120                           ;RF_Control_B1.c: 168: RF_Data[10]=Product->Data[10];
 15121  0C67  0020               	movlb	0	; select bank0
 15122  0C68  086F               	movf	_Product,w
 15123  0C69  0086               	movwf	6
 15124  0C6A  3001               	movlw	1	; select bank2/3
 15125  0C6B  0087               	movwf	7
 15126  0C6C  3001               	movlw	1	; select bank2/3
 15127  0C6D  3F4A               	moviw [10]fsr1
 15128  0C6E  0021               	movlb	1	; select bank1
 15129  0C6F  00AA               	movwf	(_RF_Data^(0+128)+10)
 15130                           
 15131                           ;RF_Control_B1.c: 169: RF_Data[11]=Product->Data[11];
 15132  0C70  0020               	movlb	0	; select bank0
 15133  0C71  086F               	movf	_Product,w
 15134  0C72  0086               	movwf	6
 15135  0C73  3001               	movlw	1	; select bank2/3
 15136  0C74  0087               	movwf	7
 15137  0C75  3001               	movlw	1	; select bank2/3
 15138  0C76  3F4B               	moviw [11]fsr1
 15139  0C77  0021               	movlb	1	; select bank1
 15140  0C78  00AB               	movwf	(_RF_Data^(0+128)+11)
 15141                           
 15142                           ;RF_Control_B1.c: 170: RF_Data[12]=Product->Data[12];
 15143  0C79  0020               	movlb	0	; select bank0
 15144  0C7A  086F               	movf	_Product,w
 15145  0C7B  0086               	movwf	6
 15146  0C7C  3001               	movlw	1	; select bank2/3
 15147  0C7D  0087               	movwf	7
 15148  0C7E  3001               	movlw	1	; select bank2/3
 15149  0C7F  3F4C               	moviw [12]fsr1
 15150  0C80  0021               	movlb	1	; select bank1
 15151  0C81  00AC               	movwf	(_RF_Data^(0+128)+12)
 15152                           
 15153                           ;RF_Control_B1.c: 171: RF_Data[13]=Product->Data[13];
 15154  0C82  0020               	movlb	0	; select bank0
 15155  0C83  086F               	movf	_Product,w
 15156  0C84  0086               	movwf	6
 15157  0C85  3001               	movlw	1	; select bank2/3
 15158  0C86  0087               	movwf	7
 15159  0C87  3001               	movlw	1	; select bank2/3
 15160  0C88  3F4D               	moviw [13]fsr1
 15161  0C89  0021               	movlb	1	; select bank1
 15162  0C8A  00AD               	movwf	(_RF_Data^(0+128)+13)
 15163                           
 15164                           ;RF_Control_B1.c: 172: RF_Data[14]=Product->Data[14];
 15165  0C8B  0020               	movlb	0	; select bank0
 15166  0C8C  086F               	movf	_Product,w
 15167  0C8D  0086               	movwf	6
 15168  0C8E  3001               	movlw	1	; select bank2/3
 15169  0C8F  0087               	movwf	7
 15170  0C90  3001               	movlw	1	; select bank2/3
 15171  0C91  3F4E               	moviw [14]fsr1
 15172  0C92  0021               	movlb	1	; select bank1
 15173  0C93  00AE               	movwf	(_RF_Data^(0+128)+14)
 15174                           
 15175                           ;RF_Control_B1.c: 173: RF_Data[15]=Product->Data[15];
 15176  0C94  0020               	movlb	0	; select bank0
 15177  0C95  086F               	movf	_Product,w
 15178  0C96  0086               	movwf	6
 15179  0C97  3001               	movlw	1	; select bank2/3
 15180  0C98  0087               	movwf	7
 15181  0C99  3001               	movlw	1	; select bank2/3
 15182  0C9A  3F4F               	moviw [15]fsr1
 15183  0C9B  0021               	movlb	1	; select bank1
 15184  0C9C  00AF               	movwf	(_RF_Data^(0+128)+15)
 15185                           
 15186                           ;RF_Control_B1.c: 174: RF_Data[16]=Product->Data[16];
 15187  0C9D  0020               	movlb	0	; select bank0
 15188  0C9E  086F               	movf	_Product,w
 15189  0C9F  0086               	movwf	6
 15190  0CA0  3001               	movlw	1	; select bank2/3
 15191  0CA1  0087               	movwf	7
 15192  0CA2  3001               	movlw	1	; select bank2/3
 15193  0CA3  3F50               	moviw [16]fsr1
 15194  0CA4  0021               	movlb	1	; select bank1
 15195  0CA5  00B0               	movwf	(_RF_Data^(0+128)+16)
 15196                           
 15197                           ;RF_Control_B1.c: 175: RF_Data[17]=Product->Data[17];
 15198  0CA6  0020               	movlb	0	; select bank0
 15199  0CA7  086F               	movf	_Product,w
 15200  0CA8  0086               	movwf	6
 15201  0CA9  3001               	movlw	1	; select bank2/3
 15202  0CAA  0087               	movwf	7
 15203  0CAB  3001               	movlw	1	; select bank2/3
 15204  0CAC  3F51               	moviw [17]fsr1
 15205  0CAD  0021               	movlb	1	; select bank1
 15206  0CAE  00B1               	movwf	(_RF_Data^(0+128)+17)
 15207                           
 15208                           ;RF_Control_B1.c: 176: RF_Data[18]=Product->Data[18];
 15209  0CAF  0020               	movlb	0	; select bank0
 15210  0CB0  086F               	movf	_Product,w
 15211  0CB1  0086               	movwf	6
 15212  0CB2  3001               	movlw	1	; select bank2/3
 15213  0CB3  0087               	movwf	7
 15214  0CB4  3001               	movlw	1	; select bank2/3
 15215  0CB5  3F52               	moviw [18]fsr1
 15216  0CB6  0021               	movlb	1	; select bank1
 15217  0CB7  00B2               	movwf	(_RF_Data^(0+128)+18)
 15218                           
 15219                           ;RF_Control_B1.c: 177: RF_Data[19]=Product->Data[19];
 15220  0CB8  0020               	movlb	0	; select bank0
 15221  0CB9  086F               	movf	_Product,w
 15222  0CBA  0086               	movwf	6
 15223  0CBB  3001               	movlw	1	; select bank2/3
 15224  0CBC  0087               	movwf	7
 15225  0CBD  3001               	movlw	1	; select bank2/3
 15226  0CBE  3F53               	moviw [19]fsr1
 15227  0CBF  0021               	movlb	1	; select bank1
 15228  0CC0  00B3               	movwf	(_RF_Data^(0+128)+19)
 15229                           
 15230                           ;RF_Control_B1.c: 178: RF_Data[20]=210;
 15231  0CC1  30D2               	movlw	210
 15232  0CC2  0020               	movlb	0	; select bank0
 15233  0CC3  00A2               	movwf	??_setTxData
 15234  0CC4  0822               	movf	??_setTxData,w
 15235  0CC5  0021               	movlb	1	; select bank1
 15236  0CC6  00B4               	movwf	(_RF_Data^(0+128)+20)
 15237  0CC7  0008               	return
 15238  0CC8                     __end_of_setTxData:	
 15239                           
 15240                           	psect	text86
 15241  26D9                     __ptext86:	
 15242 ;; *************** function _RfPointSelect *****************
 15243 ;; Defined at:
 15244 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 15245 ;; Parameters:    Size  Location     Type
 15246 ;;  rf              1    wreg     unsigned char 
 15247 ;; Auto vars:     Size  Location     Type
 15248 ;;  rf              1    1[BANK0 ] unsigned char 
 15249 ;; Return value:  Size  Location     Type
 15250 ;;		None               void
 15251 ;; Registers used:
 15252 ;;		wreg
 15253 ;; Tracked objects:
 15254 ;;		On entry : 0/0
 15255 ;;		On exit  : 0/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;Total ram usage:        2 bytes
 15263 ;; Hardware stack levels used:    1
 15264 ;; Hardware stack levels required when called:    4
 15265 ;; This function calls:
 15266 ;;		Nothing
 15267 ;; This function is called by:
 15268 ;;		_setRF_Learn
 15269 ;;		_setRF_RxStatus
 15270 ;;		_setRF_Main
 15271 ;;		_setTxData
 15272 ;;		_setRF_Enable
 15273 ;;		_RF_RxDisable
 15274 ;;		_getRxData
 15275 ;;		_setLog_Code
 15276 ;;		_setControl_Lights_Table
 15277 ;; This function uses a non-reentrant model
 15278 ;;
 15279                           
 15280                           
 15281                           ;psect for function _RfPointSelect
 15282  26D9                     _RfPointSelect:	
 15283                           
 15284                           ;incstack = 0
 15285                           ; Regs used in _RfPointSelect: [wreg]
 15286                           ;RfPointSelect@rf stored from wreg
 15287  26D9  0020               	movlb	0	; select bank0
 15288  26DA  00A1               	movwf	RfPointSelect@rf
 15289                           
 15290                           ;RF_Control_B1.c: 10: if(rf == 1)
 15291  26DB  0821               	movf	RfPointSelect@rf,w
 15292  26DC  3A01               	xorlw	1
 15293  26DD  1D03               	skipz
 15294  26DE  0008               	return
 15295                           
 15296                           ;RF_Control_B1.c: 11: {
 15297                           ;RF_Control_B1.c: 12: RF=&RF1;
 15298  26DF  30E4               	movlw	_RF1& (0+255)
 15299  26E0  00A0               	movwf	??_RfPointSelect
 15300  26E1  0820               	movf	??_RfPointSelect,w
 15301  26E2  00FA               	movwf	_RF
 15302  26E3  0008               	return
 15303  26E4                     __end_of_RfPointSelect:	
 15304                           
 15305                           	psect	text87
 15306  27A1                     __ptext87:	
 15307 ;; *************** function _setSw_Status *****************
 15308 ;; Defined at:
 15309 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 15310 ;; Parameters:    Size  Location     Type
 15311 ;;  sw              1    wreg     unsigned char 
 15312 ;;  command         1    2[BANK0 ] unsigned char 
 15313 ;; Auto vars:     Size  Location     Type
 15314 ;;  sw              1    3[BANK0 ] unsigned char 
 15315 ;; Return value:  Size  Location     Type
 15316 ;;		None               void
 15317 ;; Registers used:
 15318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15319 ;; Tracked objects:
 15320 ;;		On entry : 0/0
 15321 ;;		On exit  : 0/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15324 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15328 ;;Total ram usage:        2 bytes
 15329 ;; Hardware stack levels used:    1
 15330 ;; Hardware stack levels required when called:    5
 15331 ;; This function calls:
 15332 ;;		_SwPointSelect
 15333 ;; This function is called by:
 15334 ;;		_DlyOff_Main
 15335 ;;		_setDimmerLights_ERROR
 15336 ;;		_setControl_Lights_Table
 15337 ;;		_setRFSW_Control
 15338 ;; This function uses a non-reentrant model
 15339 ;;
 15340                           
 15341                           
 15342                           ;psect for function _setSw_Status
 15343  27A1                     _setSw_Status:	
 15344                           
 15345                           ;incstack = 0
 15346                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15347                           ;setSw_Status@sw stored from wreg
 15348  27A1  0020               	movlb	0	; select bank0
 15349  27A2  00A3               	movwf	setSw_Status@sw
 15350                           
 15351                           ;Switch_B1.c: 108: SwPointSelect(sw);
 15352  27A3  0823               	movf	setSw_Status@sw,w
 15353  27A4  3198  20AC         	fcall	_SwPointSelect
 15354                           
 15355                           ;Switch_B1.c: 109: Sw->Status=command;
 15356  27A6  087B               	movf	_Sw,w
 15357  27A7  0086               	movwf	6
 15358  27A8  3001               	movlw	1	; select bank2/3
 15359  27A9  0087               	movwf	7
 15360  27AA  0020               	movlb	0	; select bank0
 15361  27AB  0822               	movf	setSw_Status@command,w
 15362  27AC  1301               	bcf	1,6
 15363  27AD  1D03               	skipz
 15364  27AE  1701               	bsf	1,6
 15365  27AF  0008               	return
 15366  27B0                     __end_of_setSw_Status:	
 15367                           
 15368                           	psect	text88
 15369  18AC                     __ptext88:	
 15370 ;; *************** function _SwPointSelect *****************
 15371 ;; Defined at:
 15372 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 15373 ;; Parameters:    Size  Location     Type
 15374 ;;  sw              1    wreg     unsigned char 
 15375 ;; Auto vars:     Size  Location     Type
 15376 ;;  sw              1    1[BANK0 ] unsigned char 
 15377 ;; Return value:  Size  Location     Type
 15378 ;;		None               void
 15379 ;; Registers used:
 15380 ;;		wreg
 15381 ;; Tracked objects:
 15382 ;;		On entry : 0/0
 15383 ;;		On exit  : 0/0
 15384 ;;		Unchanged: 0/0
 15385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15388 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15390 ;;Total ram usage:        2 bytes
 15391 ;; Hardware stack levels used:    1
 15392 ;; Hardware stack levels required when called:    4
 15393 ;; This function calls:
 15394 ;;		Nothing
 15395 ;; This function is called by:
 15396 ;;		_setSw_Enable
 15397 ;;		_setSw_Status
 15398 ;;		_setSw_Main
 15399 ;;		_Sw_Detect
 15400 ;; This function uses a non-reentrant model
 15401 ;;
 15402                           
 15403                           
 15404                           ;psect for function _SwPointSelect
 15405  18AC                     _SwPointSelect:	
 15406                           
 15407                           ;incstack = 0
 15408                           ; Regs used in _SwPointSelect: [wreg]
 15409                           ;SwPointSelect@sw stored from wreg
 15410  18AC  0020               	movlb	0	; select bank0
 15411  18AD  00A1               	movwf	SwPointSelect@sw
 15412                           
 15413                           ;Switch_B1.c: 19: if(sw == 1)
 15414  18AE  0821               	movf	SwPointSelect@sw,w
 15415  18AF  3A01               	xorlw	1
 15416  18B0  1D03               	skipz
 15417  18B1  28B7               	goto	l6035
 15418                           
 15419                           ;Switch_B1.c: 20: {
 15420                           ;Switch_B1.c: 21: Sw=&Sw1;
 15421  18B2  3058               	movlw	_Sw1& (0+255)
 15422  18B3  00A0               	movwf	??_SwPointSelect
 15423  18B4  0820               	movf	??_SwPointSelect,w
 15424  18B5  00FB               	movwf	_Sw
 15425                           
 15426                           ;Switch_B1.c: 22: }
 15427  18B6  0008               	return
 15428  18B7                     l6035:	
 15429                           
 15430                           ;Switch_B1.c: 25: else if(sw == 2)
 15431  18B7  0821               	movf	SwPointSelect@sw,w
 15432  18B8  3A02               	xorlw	2
 15433  18B9  1D03               	skipz
 15434  18BA  0008               	return
 15435                           
 15436                           ;Switch_B1.c: 26: {
 15437                           ;Switch_B1.c: 27: Sw=&Sw2;
 15438  18BB  3061               	movlw	_Sw2& (0+255)
 15439  18BC  00A0               	movwf	??_SwPointSelect
 15440  18BD  0820               	movf	??_SwPointSelect,w
 15441  18BE  00FB               	movwf	_Sw
 15442  18BF  0008               	return
 15443  18C0                     __end_of_SwPointSelect:	
 15444                           
 15445                           	psect	text89
 15446  13A4                     __ptext89:	
 15447 ;; *************** function _setRF_DimmerLights *****************
 15448 ;; Defined at:
 15449 ;;		line 444 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 15450 ;; Parameters:    Size  Location     Type
 15451 ;;  lights          1    wreg     unsigned char 
 15452 ;;  on              1   61[BANK0 ] unsigned char 
 15453 ;; Auto vars:     Size  Location     Type
 15454 ;;  lights          1   65[BANK0 ] unsigned char 
 15455 ;;  status          1   64[BANK0 ] unsigned char 
 15456 ;; Return value:  Size  Location     Type
 15457 ;;		None               void
 15458 ;; Registers used:
 15459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15460 ;; Tracked objects:
 15461 ;;		On entry : 0/0
 15462 ;;		On exit  : 0/0
 15463 ;;		Unchanged: 0/0
 15464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15465 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15467 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15468 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15469 ;;Total ram usage:        5 bytes
 15470 ;; Hardware stack levels used:    1
 15471 ;; Hardware stack levels required when called:    7
 15472 ;; This function calls:
 15473 ;;		_setPercentValue
 15474 ;; This function is called by:
 15475 ;;		_DlyOff_Main
 15476 ;;		_setDimmerLights_Adj
 15477 ;;		_setRFSW_Control
 15478 ;;		_Sw_DimmerOnFunc
 15479 ;;		_Sw_DimmerOffFunc
 15480 ;; This function uses a non-reentrant model
 15481 ;;
 15482                           
 15483                           
 15484                           ;psect for function _setRF_DimmerLights
 15485  13A4                     _setRF_DimmerLights:	
 15486                           
 15487                           ;incstack = 0
 15488                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15489                           ;setRF_DimmerLights@lights stored from wreg
 15490  13A4  0020               	movlb	0	; select bank0
 15491  13A5  00E1               	movwf	setRF_DimmerLights@lights
 15492                           
 15493                           ;RF_Control_B1.c: 446: char status;
 15494                           ;RF_Control_B1.c: 447: status=1;
 15495  13A6  01E0               	clrf	setRF_DimmerLights@status
 15496  13A7  0AE0               	incf	setRF_DimmerLights@status,f
 15497                           
 15498                           ;RF_Control_B1.c: 448: status<<=(lights-1);
 15499  13A8  0861               	movf	setRF_DimmerLights@lights,w
 15500  13A9  3EFF               	addlw	-1
 15501  13AA  0A89               	incf	9,f
 15502  13AB  2BAE               	goto	u7610
 15503  13AC                     u7615:	
 15504  13AC  1003               	clrc
 15505  13AD  0DE0               	rlf	setRF_DimmerLights@status,f
 15506  13AE                     u7610:	
 15507  13AE  3EFF               	addlw	-1
 15508  13AF  1D03               	skipz
 15509  13B0  2BAC               	goto	u7615
 15510                           
 15511                           ;RF_Control_B1.c: 449: Product->Data[11]=lights;
 15512  13B1  0861               	movf	setRF_DimmerLights@lights,w
 15513  13B2  00DE               	movwf	??_setRF_DimmerLights
 15514  13B3  086F               	movf	_Product,w
 15515  13B4  3E0B               	addlw	11
 15516  13B5  0086               	movwf	6
 15517  13B6  3001               	movlw	1	; select bank2/3
 15518  13B7  0087               	movwf	7
 15519  13B8  085E               	movf	??_setRF_DimmerLights,w
 15520  13B9  0081               	movwf	1
 15521                           
 15522                           ;RF_Control_B1.c: 452: Product->Data[(20+lights)]=setPercentValue(((char)(65*1.5)));
 15523  13BA  3061               	movlw	97
 15524  13BB  319F  2773  3193   	fcall	_setPercentValue
 15525  13BE  0020               	movlb	0	; select bank0
 15526  13BF  00DE               	movwf	??_setRF_DimmerLights
 15527  13C0  0861               	movf	setRF_DimmerLights@lights,w
 15528  13C1  3E14               	addlw	20
 15529  13C2  076F               	addwf	_Product,w
 15530  13C3  00DF               	movwf	??_setRF_DimmerLights+1
 15531  13C4  085F               	movf	??_setRF_DimmerLights+1,w
 15532  13C5  0086               	movwf	6
 15533  13C6  3001               	movlw	1	; select bank2/3
 15534  13C7  0087               	movwf	7
 15535  13C8  085E               	movf	??_setRF_DimmerLights,w
 15536  13C9  0081               	movwf	1
 15537                           
 15538                           ;RF_Control_B1.c: 455: Product->Data[9]=Product->Data[20+lights];
 15539  13CA  0861               	movf	setRF_DimmerLights@lights,w
 15540  13CB  3E14               	addlw	20
 15541  13CC  076F               	addwf	_Product,w
 15542  13CD  00DE               	movwf	??_setRF_DimmerLights
 15543  13CE  085E               	movf	??_setRF_DimmerLights,w
 15544  13CF  0086               	movwf	6
 15545  13D0  3001               	movlw	1	; select bank2/3
 15546  13D1  0087               	movwf	7
 15547  13D2  0801               	movf	1,w
 15548  13D3  00DF               	movwf	??_setRF_DimmerLights+1
 15549  13D4  086F               	movf	_Product,w
 15550  13D5  3E09               	addlw	9
 15551  13D6  0086               	movwf	6
 15552  13D7  3001               	movlw	1	; select bank2/3
 15553  13D8  0087               	movwf	7
 15554  13D9  085F               	movf	??_setRF_DimmerLights+1,w
 15555  13DA  0081               	movwf	1
 15556                           
 15557                           ;RF_Control_B1.c: 456: Product->Data[17]=Product->Data[26+lights];
 15558  13DB  0861               	movf	setRF_DimmerLights@lights,w
 15559  13DC  3E1A               	addlw	26
 15560  13DD  076F               	addwf	_Product,w
 15561  13DE  00DE               	movwf	??_setRF_DimmerLights
 15562  13DF  085E               	movf	??_setRF_DimmerLights,w
 15563  13E0  0086               	movwf	6
 15564  13E1  3001               	movlw	1	; select bank2/3
 15565  13E2  0087               	movwf	7
 15566  13E3  0801               	movf	1,w
 15567  13E4  00DF               	movwf	??_setRF_DimmerLights+1
 15568  13E5  086F               	movf	_Product,w
 15569  13E6  3E11               	addlw	17
 15570  13E7  0086               	movwf	6
 15571  13E8  3001               	movlw	1	; select bank2/3
 15572  13E9  0087               	movwf	7
 15573  13EA  085F               	movf	??_setRF_DimmerLights+1,w
 15574  13EB  0081               	movwf	1
 15575                           
 15576                           ;RF_Control_B1.c: 457: if(on)
 15577  13EC  085D               	movf	setRF_DimmerLights@on,w
 15578  13ED  1903               	btfsc	3,2
 15579  13EE  2BFF               	goto	l8103
 15580                           
 15581                           ;RF_Control_B1.c: 458: {
 15582                           ;RF_Control_B1.c: 459: Product->Data[15]=(Product->Data[15]|status);
 15583  13EF  086F               	movf	_Product,w
 15584  13F0  3E0F               	addlw	15
 15585  13F1  0086               	movwf	6
 15586  13F2  3001               	movlw	1	; select bank2/3
 15587  13F3  0087               	movwf	7
 15588  13F4  0801               	movf	1,w
 15589  13F5  0460               	iorwf	setRF_DimmerLights@status,w
 15590  13F6  00DE               	movwf	??_setRF_DimmerLights
 15591  13F7  086F               	movf	_Product,w
 15592  13F8  3E0F               	addlw	15
 15593  13F9  0086               	movwf	6
 15594  13FA  3001               	movlw	1	; select bank2/3
 15595  13FB  0087               	movwf	7
 15596  13FC  085E               	movf	??_setRF_DimmerLights,w
 15597  13FD  0081               	movwf	1
 15598                           
 15599                           ;RF_Control_B1.c: 460: }
 15600  13FE  0008               	return
 15601  13FF                     l8103:	
 15602                           
 15603                           ;RF_Control_B1.c: 461: else
 15604                           ;RF_Control_B1.c: 462: {
 15605                           ;RF_Control_B1.c: 463: Product->Data[15]=(Product->Data[15]&(~status));
 15606  13FF  086F               	movf	_Product,w
 15607  1400  3E0F               	addlw	15
 15608  1401  0086               	movwf	6
 15609  1402  3001               	movlw	1	; select bank2/3
 15610  1403  0087               	movwf	7
 15611  1404  0960               	comf	setRF_DimmerLights@status,w
 15612  1405  0501               	andwf	1,w
 15613  1406  00DE               	movwf	??_setRF_DimmerLights
 15614  1407  086F               	movf	_Product,w
 15615  1408  3E0F               	addlw	15
 15616  1409  0086               	movwf	6
 15617  140A  3001               	movlw	1	; select bank2/3
 15618  140B  0087               	movwf	7
 15619  140C  085E               	movf	??_setRF_DimmerLights,w
 15620  140D  0081               	movwf	1
 15621  140E  0008               	return
 15622  140F                     __end_of_setRF_DimmerLights:	
 15623                           
 15624                           	psect	text90
 15625  1F73                     __ptext90:	
 15626 ;; *************** function _setPercentValue *****************
 15627 ;; Defined at:
 15628 ;;		line 505 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15629 ;; Parameters:    Size  Location     Type
 15630 ;;  value           1    wreg     unsigned char 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;  value           1   57[BANK0 ] unsigned char 
 15633 ;;  i               3   58[BANK0 ] float 
 15634 ;; Return value:  Size  Location     Type
 15635 ;;                  1    wreg      unsigned char 
 15636 ;; Registers used:
 15637 ;;		wreg, status,2, status,0, pclath, cstack
 15638 ;; Tracked objects:
 15639 ;;		On entry : 0/0
 15640 ;;		On exit  : 0/0
 15641 ;;		Unchanged: 0/0
 15642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15644 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15646 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15647 ;;Total ram usage:        4 bytes
 15648 ;; Hardware stack levels used:    1
 15649 ;; Hardware stack levels required when called:    6
 15650 ;; This function calls:
 15651 ;;		___awtoft
 15652 ;;		___ftdiv
 15653 ;;		___fttol
 15654 ;; This function is called by:
 15655 ;;		_setRF_DimmerLights
 15656 ;;		_Flash_Memory_Initialization
 15657 ;; This function uses a non-reentrant model
 15658 ;;
 15659                           
 15660                           
 15661                           ;psect for function _setPercentValue
 15662  1F73                     _setPercentValue:	
 15663                           
 15664                           ;incstack = 0
 15665                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15666                           ;setPercentValue@value stored from wreg
 15667  1F73  0020               	movlb	0	; select bank0
 15668  1F74  00D9               	movwf	setPercentValue@value
 15669                           
 15670                           ;Dimmer_B1.c: 514: float i=((char)(65*1.5))-((char)(20*1.5));
 15671  1F75  3000               	movlw	0
 15672  1F76  00DA               	movwf	setPercentValue@i
 15673  1F77  3086               	movlw	134
 15674  1F78  00DB               	movwf	setPercentValue@i+1
 15675  1F79  3042               	movlw	66
 15676  1F7A  00DC               	movwf	setPercentValue@i+2
 15677                           
 15678                           ;Dimmer_B1.c: 515: i/=100;
 15679  1F7B  3000               	movlw	0
 15680  1F7C  00AE               	movwf	___ftdiv@f2
 15681  1F7D  30C8               	movlw	200
 15682  1F7E  00AF               	movwf	___ftdiv@f2+1
 15683  1F7F  3042               	movlw	66
 15684  1F80  00B0               	movwf	___ftdiv@f2+2
 15685  1F81  085A               	movf	setPercentValue@i,w
 15686  1F82  00B1               	movwf	___ftdiv@f1
 15687  1F83  085B               	movf	setPercentValue@i+1,w
 15688  1F84  00B2               	movwf	___ftdiv@f1+1
 15689  1F85  085C               	movf	setPercentValue@i+2,w
 15690  1F86  00B3               	movwf	___ftdiv@f1+2
 15691  1F87  318A  22A2  319F   	fcall	___ftdiv
 15692  1F8A  0020               	movlb	0	; select bank0
 15693  1F8B  082E               	movf	?___ftdiv,w
 15694  1F8C  00DA               	movwf	setPercentValue@i
 15695  1F8D  082F               	movf	?___ftdiv+1,w
 15696  1F8E  00DB               	movwf	setPercentValue@i+1
 15697  1F8F  0830               	movf	?___ftdiv+2,w
 15698  1F90  00DC               	movwf	setPercentValue@i+2
 15699                           
 15700                           ;Dimmer_B1.c: 516: return (100-(char)((value-((char)(65*1.5)))/i));
 15701  1F91  0859               	movf	setPercentValue@value,w
 15702  1F92  3E9F               	addlw	159
 15703  1F93  00A8               	movwf	___awtoft@c
 15704  1F94  30FF               	movlw	255
 15705  1F95  1803               	skipnc
 15706  1F96  3000               	movlw	0
 15707  1F97  00A9               	movwf	___awtoft@c+1
 15708  1F98  319A  22E7  319F   	fcall	___awtoft
 15709  1F9B  0020               	movlb	0	; select bank0
 15710  1F9C  0828               	movf	?___awtoft,w
 15711  1F9D  00B1               	movwf	___ftdiv@f1
 15712  1F9E  0829               	movf	?___awtoft+1,w
 15713  1F9F  00B2               	movwf	___ftdiv@f1+1
 15714  1FA0  082A               	movf	?___awtoft+2,w
 15715  1FA1  00B3               	movwf	___ftdiv@f1+2
 15716  1FA2  085A               	movf	setPercentValue@i,w
 15717  1FA3  00AE               	movwf	___ftdiv@f2
 15718  1FA4  085B               	movf	setPercentValue@i+1,w
 15719  1FA5  00AF               	movwf	___ftdiv@f2+1
 15720  1FA6  085C               	movf	setPercentValue@i+2,w
 15721  1FA7  00B0               	movwf	___ftdiv@f2+2
 15722  1FA8  318A  22A2  319F   	fcall	___ftdiv
 15723  1FAB  0020               	movlb	0	; select bank0
 15724  1FAC  082E               	movf	?___ftdiv,w
 15725  1FAD  00CB               	movwf	___fttol@f1
 15726  1FAE  082F               	movf	?___ftdiv+1,w
 15727  1FAF  00CC               	movwf	___fttol@f1+1
 15728  1FB0  0830               	movf	?___ftdiv+2,w
 15729  1FB1  00CD               	movwf	___fttol@f1+2
 15730  1FB2  3196  2661         	fcall	___fttol
 15731  1FB4  0020               	movlb	0	; select bank0
 15732  1FB5  034B               	decf	?___fttol,w
 15733  1FB6  3AFF               	xorlw	255
 15734  1FB7  3E64               	addlw	100
 15735  1FB8  0008               	return
 15736  1FB9                     __end_of_setPercentValue:	
 15737                           
 15738                           	psect	text91
 15739  1661                     __ptext91:	
 15740 ;; *************** function ___fttol *****************
 15741 ;; Defined at:
 15742 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 15743 ;; Parameters:    Size  Location     Type
 15744 ;;  f1              3   43[BANK0 ] float 
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;  lval            4   52[BANK0 ] unsigned long 
 15747 ;;  exp1            1   56[BANK0 ] unsigned char 
 15748 ;;  sign1           1   51[BANK0 ] unsigned char 
 15749 ;; Return value:  Size  Location     Type
 15750 ;;                  4   43[BANK0 ] long 
 15751 ;; Registers used:
 15752 ;;		wreg, status,2, status,0
 15753 ;; Tracked objects:
 15754 ;;		On entry : 0/0
 15755 ;;		On exit  : 0/0
 15756 ;;		Unchanged: 0/0
 15757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15759 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15760 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15761 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15762 ;;Total ram usage:       14 bytes
 15763 ;; Hardware stack levels used:    1
 15764 ;; Hardware stack levels required when called:    4
 15765 ;; This function calls:
 15766 ;;		Nothing
 15767 ;; This function is called by:
 15768 ;;		_getPercentValue
 15769 ;;		_setPercentValue
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           
 15774                           ;psect for function ___fttol
 15775  1661                     ___fttol:	
 15776                           
 15777                           ;incstack = 0
 15778                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15779  1661  0020               	movlb	0	; select bank0
 15780  1662  084B               	movf	___fttol@f1,w
 15781  1663  00CF               	movwf	??___fttol
 15782  1664  084C               	movf	___fttol@f1+1,w
 15783  1665  00D0               	movwf	??___fttol+1
 15784  1666  084D               	movf	___fttol@f1+2,w
 15785  1667  00D1               	movwf	??___fttol+2
 15786  1668  1003               	clrc
 15787  1669  0D50               	rlf	??___fttol+1,w
 15788  166A  0D51               	rlf	??___fttol+2,w
 15789  166B  00D2               	movwf	??___fttol+3
 15790  166C  0852               	movf	??___fttol+3,w
 15791  166D  00D8               	movwf	___fttol@exp1
 15792  166E  08D8               	movf	___fttol@exp1,f
 15793  166F  1D03               	skipz
 15794  1670  2E7A               	goto	l5909
 15795  1671  3000               	movlw	0
 15796  1672  00CE               	movwf	?___fttol+3
 15797  1673  3000               	movlw	0
 15798  1674  00CD               	movwf	?___fttol+2
 15799  1675  3000               	movlw	0
 15800  1676  00CC               	movwf	?___fttol+1
 15801  1677  3000               	movlw	0
 15802  1678  00CB               	movwf	?___fttol
 15803  1679  0008               	return
 15804  167A                     l5909:	
 15805  167A  084B               	movf	___fttol@f1,w
 15806  167B  00CF               	movwf	??___fttol
 15807  167C  084C               	movf	___fttol@f1+1,w
 15808  167D  00D0               	movwf	??___fttol+1
 15809  167E  084D               	movf	___fttol@f1+2,w
 15810  167F  00D1               	movwf	??___fttol+2
 15811  1680  3017               	movlw	23
 15812  1681                     u4335:	
 15813  1681  36D1               	lsrf	??___fttol+2,f
 15814  1682  0CD0               	rrf	??___fttol+1,f
 15815  1683  0CCF               	rrf	??___fttol,f
 15816  1684  0B89               	decfsz	9,f
 15817  1685  2E81               	goto	u4335
 15818  1686  084F               	movf	??___fttol,w
 15819  1687  00D2               	movwf	??___fttol+3
 15820  1688  0852               	movf	??___fttol+3,w
 15821  1689  00D3               	movwf	___fttol@sign1
 15822  168A  17CC               	bsf	___fttol@f1+1,7
 15823  168B  30FF               	movlw	255
 15824  168C  05CB               	andwf	___fttol@f1,f
 15825  168D  30FF               	movlw	255
 15826  168E  05CC               	andwf	___fttol@f1+1,f
 15827  168F  3000               	movlw	0
 15828  1690  05CD               	andwf	___fttol@f1+2,f
 15829  1691  084B               	movf	___fttol@f1,w
 15830  1692  00D4               	movwf	___fttol@lval
 15831  1693  084C               	movf	___fttol@f1+1,w
 15832  1694  00D5               	movwf	___fttol@lval+1
 15833  1695  084D               	movf	___fttol@f1+2,w
 15834  1696  00D6               	movwf	___fttol@lval+2
 15835  1697  01D7               	clrf	___fttol@lval+3
 15836  1698  308E               	movlw	142
 15837  1699  02D8               	subwf	___fttol@exp1,f
 15838  169A  1FD8               	btfss	___fttol@exp1,7
 15839  169B  2EB8               	goto	l5929
 15840  169C  0858               	movf	___fttol@exp1,w
 15841  169D  3A80               	xorlw	128
 15842  169E  3E8F               	addlw	143
 15843  169F  1803               	skipnc
 15844  16A0  2EAA               	goto	l5927
 15845  16A1  3000               	movlw	0
 15846  16A2  00CE               	movwf	?___fttol+3
 15847  16A3  3000               	movlw	0
 15848  16A4  00CD               	movwf	?___fttol+2
 15849  16A5  3000               	movlw	0
 15850  16A6  00CC               	movwf	?___fttol+1
 15851  16A7  3000               	movlw	0
 15852  16A8  00CB               	movwf	?___fttol
 15853  16A9  0008               	return
 15854  16AA                     l5927:	
 15855  16AA  3001               	movlw	1
 15856  16AB                     u4365:	
 15857  16AB  36D7               	lsrf	___fttol@lval+3,f
 15858  16AC  0CD6               	rrf	___fttol@lval+2,f
 15859  16AD  0CD5               	rrf	___fttol@lval+1,f
 15860  16AE  0CD4               	rrf	___fttol@lval,f
 15861  16AF  0B89               	decfsz	9,f
 15862  16B0  2EAB               	goto	u4365
 15863  16B1  3001               	movlw	1
 15864  16B2  00CF               	movwf	??___fttol
 15865  16B3  084F               	movf	??___fttol,w
 15866  16B4  07D8               	addwf	___fttol@exp1,f
 15867  16B5  1903               	btfsc	3,2
 15868  16B6  2ED1               	goto	l5939
 15869  16B7  2EAA               	goto	l5927
 15870  16B8                     l5929:	
 15871  16B8  3018               	movlw	24
 15872  16B9  0258               	subwf	___fttol@exp1,w
 15873  16BA  1C03               	skipc
 15874  16BB  2ECE               	goto	l5937
 15875  16BC  3000               	movlw	0
 15876  16BD  00CE               	movwf	?___fttol+3
 15877  16BE  3000               	movlw	0
 15878  16BF  00CD               	movwf	?___fttol+2
 15879  16C0  3000               	movlw	0
 15880  16C1  00CC               	movwf	?___fttol+1
 15881  16C2  3000               	movlw	0
 15882  16C3  00CB               	movwf	?___fttol
 15883  16C4  0008               	return
 15884  16C5                     l5935:	
 15885  16C5  3001               	movlw	1
 15886  16C6                     u4395:	
 15887  16C6  35D4               	lslf	___fttol@lval,f
 15888  16C7  0DD5               	rlf	___fttol@lval+1,f
 15889  16C8  0DD6               	rlf	___fttol@lval+2,f
 15890  16C9  0DD7               	rlf	___fttol@lval+3,f
 15891  16CA  0B89               	decfsz	9,f
 15892  16CB  2EC6               	goto	u4395
 15893  16CC  3001               	movlw	1
 15894  16CD  02D8               	subwf	___fttol@exp1,f
 15895  16CE                     l5937:	
 15896  16CE  08D8               	movf	___fttol@exp1,f
 15897  16CF  1D03               	skipz
 15898  16D0  2EC5               	goto	l5935
 15899  16D1                     l5939:	
 15900  16D1  0853               	movf	___fttol@sign1,w
 15901  16D2  1903               	btfsc	3,2
 15902  16D3  2EDF               	goto	l5943
 15903  16D4  09D4               	comf	___fttol@lval,f
 15904  16D5  09D5               	comf	___fttol@lval+1,f
 15905  16D6  09D6               	comf	___fttol@lval+2,f
 15906  16D7  09D7               	comf	___fttol@lval+3,f
 15907  16D8  0AD4               	incf	___fttol@lval,f
 15908  16D9  1903               	skipnz
 15909  16DA  0AD5               	incf	___fttol@lval+1,f
 15910  16DB  1903               	skipnz
 15911  16DC  0AD6               	incf	___fttol@lval+2,f
 15912  16DD  1903               	skipnz
 15913  16DE  0AD7               	incf	___fttol@lval+3,f
 15914  16DF                     l5943:	
 15915  16DF  0857               	movf	___fttol@lval+3,w
 15916  16E0  00CE               	movwf	?___fttol+3
 15917  16E1  0856               	movf	___fttol@lval+2,w
 15918  16E2  00CD               	movwf	?___fttol+2
 15919  16E3  0855               	movf	___fttol@lval+1,w
 15920  16E4  00CC               	movwf	?___fttol+1
 15921  16E5  0854               	movf	___fttol@lval,w
 15922  16E6  00CB               	movwf	?___fttol
 15923  16E7  0008               	return
 15924  16E8                     __end_of___fttol:	
 15925                           
 15926                           	psect	text92
 15927  0AA2                     __ptext92:	
 15928 ;; *************** function ___ftdiv *****************
 15929 ;; Defined at:
 15930 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 15931 ;; Parameters:    Size  Location     Type
 15932 ;;  f2              3   14[BANK0 ] float 
 15933 ;;  f1              3   17[BANK0 ] float 
 15934 ;; Auto vars:     Size  Location     Type
 15935 ;;  f3              3   25[BANK0 ] float 
 15936 ;;  sign            1   29[BANK0 ] unsigned char 
 15937 ;;  exp             1   28[BANK0 ] unsigned char 
 15938 ;;  cntr            1   24[BANK0 ] unsigned char 
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  3   14[BANK0 ] float 
 15941 ;; Registers used:
 15942 ;;		wreg, status,2, status,0, pclath, cstack
 15943 ;; Tracked objects:
 15944 ;;		On entry : 0/0
 15945 ;;		On exit  : 0/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15948 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15949 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15952 ;;Total ram usage:       16 bytes
 15953 ;; Hardware stack levels used:    1
 15954 ;; Hardware stack levels required when called:    5
 15955 ;; This function calls:
 15956 ;;		___ftpack
 15957 ;; This function is called by:
 15958 ;;		_getPercentValue
 15959 ;;		_setPercentValue
 15960 ;; This function uses a non-reentrant model
 15961 ;;
 15962                           
 15963                           
 15964                           ;psect for function ___ftdiv
 15965  0AA2                     ___ftdiv:	
 15966                           
 15967                           ;incstack = 0
 15968                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15969  0AA2  0020               	movlb	0	; select bank0
 15970  0AA3  0831               	movf	___ftdiv@f1,w
 15971  0AA4  00B4               	movwf	??___ftdiv
 15972  0AA5  0832               	movf	___ftdiv@f1+1,w
 15973  0AA6  00B5               	movwf	??___ftdiv+1
 15974  0AA7  0833               	movf	___ftdiv@f1+2,w
 15975  0AA8  00B6               	movwf	??___ftdiv+2
 15976  0AA9  1003               	clrc
 15977  0AAA  0D35               	rlf	??___ftdiv+1,w
 15978  0AAB  0D36               	rlf	??___ftdiv+2,w
 15979  0AAC  00B7               	movwf	??___ftdiv+3
 15980  0AAD  0837               	movf	??___ftdiv+3,w
 15981  0AAE  00BC               	movwf	___ftdiv@exp
 15982  0AAF  08BC               	movf	___ftdiv@exp,f
 15983  0AB0  1D03               	skipz
 15984  0AB1  2AB9               	goto	l5817
 15985  0AB2  3000               	movlw	0
 15986  0AB3  00AE               	movwf	?___ftdiv
 15987  0AB4  3000               	movlw	0
 15988  0AB5  00AF               	movwf	?___ftdiv+1
 15989  0AB6  3000               	movlw	0
 15990  0AB7  00B0               	movwf	?___ftdiv+2
 15991  0AB8  0008               	return
 15992  0AB9                     l5817:	
 15993  0AB9  082E               	movf	___ftdiv@f2,w
 15994  0ABA  00B4               	movwf	??___ftdiv
 15995  0ABB  082F               	movf	___ftdiv@f2+1,w
 15996  0ABC  00B5               	movwf	??___ftdiv+1
 15997  0ABD  0830               	movf	___ftdiv@f2+2,w
 15998  0ABE  00B6               	movwf	??___ftdiv+2
 15999  0ABF  1003               	clrc
 16000  0AC0  0D35               	rlf	??___ftdiv+1,w
 16001  0AC1  0D36               	rlf	??___ftdiv+2,w
 16002  0AC2  00B7               	movwf	??___ftdiv+3
 16003  0AC3  0837               	movf	??___ftdiv+3,w
 16004  0AC4  00BD               	movwf	___ftdiv@sign
 16005  0AC5  08BD               	movf	___ftdiv@sign,f
 16006  0AC6  1D03               	skipz
 16007  0AC7  2ACF               	goto	l5823
 16008  0AC8  3000               	movlw	0
 16009  0AC9  00AE               	movwf	?___ftdiv
 16010  0ACA  3000               	movlw	0
 16011  0ACB  00AF               	movwf	?___ftdiv+1
 16012  0ACC  3000               	movlw	0
 16013  0ACD  00B0               	movwf	?___ftdiv+2
 16014  0ACE  0008               	return
 16015  0ACF                     l5823:	
 16016  0ACF  3000               	movlw	0
 16017  0AD0  00B9               	movwf	___ftdiv@f3
 16018  0AD1  3000               	movlw	0
 16019  0AD2  00BA               	movwf	___ftdiv@f3+1
 16020  0AD3  3000               	movlw	0
 16021  0AD4  00BB               	movwf	___ftdiv@f3+2
 16022  0AD5  3089               	movlw	137
 16023  0AD6  073D               	addwf	___ftdiv@sign,w
 16024  0AD7  00B4               	movwf	??___ftdiv
 16025  0AD8  0834               	movf	??___ftdiv,w
 16026  0AD9  02BC               	subwf	___ftdiv@exp,f
 16027  0ADA  0831               	movf	___ftdiv@f1,w
 16028  0ADB  00B4               	movwf	??___ftdiv
 16029  0ADC  0832               	movf	___ftdiv@f1+1,w
 16030  0ADD  00B5               	movwf	??___ftdiv+1
 16031  0ADE  0833               	movf	___ftdiv@f1+2,w
 16032  0ADF  00B6               	movwf	??___ftdiv+2
 16033  0AE0  3010               	movlw	16
 16034  0AE1                     u4145:	
 16035  0AE1  36B6               	lsrf	??___ftdiv+2,f
 16036  0AE2  0CB5               	rrf	??___ftdiv+1,f
 16037  0AE3  0CB4               	rrf	??___ftdiv,f
 16038  0AE4  0B89               	decfsz	9,f
 16039  0AE5  2AE1               	goto	u4145
 16040  0AE6  0834               	movf	??___ftdiv,w
 16041  0AE7  00B7               	movwf	??___ftdiv+3
 16042  0AE8  0837               	movf	??___ftdiv+3,w
 16043  0AE9  00BD               	movwf	___ftdiv@sign
 16044  0AEA  082E               	movf	___ftdiv@f2,w
 16045  0AEB  00B4               	movwf	??___ftdiv
 16046  0AEC  082F               	movf	___ftdiv@f2+1,w
 16047  0AED  00B5               	movwf	??___ftdiv+1
 16048  0AEE  0830               	movf	___ftdiv@f2+2,w
 16049  0AEF  00B6               	movwf	??___ftdiv+2
 16050  0AF0  3010               	movlw	16
 16051  0AF1                     u4155:	
 16052  0AF1  36B6               	lsrf	??___ftdiv+2,f
 16053  0AF2  0CB5               	rrf	??___ftdiv+1,f
 16054  0AF3  0CB4               	rrf	??___ftdiv,f
 16055  0AF4  0B89               	decfsz	9,f
 16056  0AF5  2AF1               	goto	u4155
 16057  0AF6  0834               	movf	??___ftdiv,w
 16058  0AF7  00B7               	movwf	??___ftdiv+3
 16059  0AF8  0837               	movf	??___ftdiv+3,w
 16060  0AF9  06BD               	xorwf	___ftdiv@sign,f
 16061  0AFA  3080               	movlw	128
 16062  0AFB  00B4               	movwf	??___ftdiv
 16063  0AFC  0834               	movf	??___ftdiv,w
 16064  0AFD  05BD               	andwf	___ftdiv@sign,f
 16065  0AFE  17B2               	bsf	___ftdiv@f1+1,7
 16066  0AFF  30FF               	movlw	255
 16067  0B00  05B1               	andwf	___ftdiv@f1,f
 16068  0B01  30FF               	movlw	255
 16069  0B02  05B2               	andwf	___ftdiv@f1+1,f
 16070  0B03  3000               	movlw	0
 16071  0B04  05B3               	andwf	___ftdiv@f1+2,f
 16072  0B05  17AF               	bsf	___ftdiv@f2+1,7
 16073  0B06  30FF               	movlw	255
 16074  0B07  05AE               	andwf	___ftdiv@f2,f
 16075  0B08  30FF               	movlw	255
 16076  0B09  05AF               	andwf	___ftdiv@f2+1,f
 16077  0B0A  3000               	movlw	0
 16078  0B0B  05B0               	andwf	___ftdiv@f2+2,f
 16079  0B0C  3018               	movlw	24
 16080  0B0D  00B4               	movwf	??___ftdiv
 16081  0B0E  0834               	movf	??___ftdiv,w
 16082  0B0F  00B8               	movwf	___ftdiv@cntr
 16083  0B10                     l5837:	
 16084  0B10  3001               	movlw	1
 16085  0B11                     u4165:	
 16086  0B11  35B9               	lslf	___ftdiv@f3,f
 16087  0B12  0DBA               	rlf	___ftdiv@f3+1,f
 16088  0B13  0DBB               	rlf	___ftdiv@f3+2,f
 16089  0B14  0B89               	decfsz	9,f
 16090  0B15  2B11               	goto	u4165
 16091  0B16  0830               	movf	___ftdiv@f2+2,w
 16092  0B17  0233               	subwf	___ftdiv@f1+2,w
 16093  0B18  1D03               	skipz
 16094  0B19  2B20               	goto	u4175
 16095  0B1A  082F               	movf	___ftdiv@f2+1,w
 16096  0B1B  0232               	subwf	___ftdiv@f1+1,w
 16097  0B1C  1D03               	skipz
 16098  0B1D  2B20               	goto	u4175
 16099  0B1E  082E               	movf	___ftdiv@f2,w
 16100  0B1F  0231               	subwf	___ftdiv@f1,w
 16101  0B20                     u4175:	
 16102  0B20  1C03               	skipc
 16103  0B21  2B29               	goto	l5845
 16104  0B22  082E               	movf	___ftdiv@f2,w
 16105  0B23  02B1               	subwf	___ftdiv@f1,f
 16106  0B24  082F               	movf	___ftdiv@f2+1,w
 16107  0B25  3BB2               	subwfb	___ftdiv@f1+1,f
 16108  0B26  0830               	movf	___ftdiv@f2+2,w
 16109  0B27  3BB3               	subwfb	___ftdiv@f1+2,f
 16110  0B28  1439               	bsf	___ftdiv@f3,0
 16111  0B29                     l5845:	
 16112  0B29  3001               	movlw	1
 16113  0B2A                     u4185:	
 16114  0B2A  35B1               	lslf	___ftdiv@f1,f
 16115  0B2B  0DB2               	rlf	___ftdiv@f1+1,f
 16116  0B2C  0DB3               	rlf	___ftdiv@f1+2,f
 16117  0B2D  0B89               	decfsz	9,f
 16118  0B2E  2B2A               	goto	u4185
 16119  0B2F  3001               	movlw	1
 16120  0B30  02B8               	subwf	___ftdiv@cntr,f
 16121  0B31  1D03               	btfss	3,2
 16122  0B32  2B10               	goto	l5837
 16123  0B33  0839               	movf	___ftdiv@f3,w
 16124  0B34  00A0               	movwf	___ftpack@arg
 16125  0B35  083A               	movf	___ftdiv@f3+1,w
 16126  0B36  00A1               	movwf	___ftpack@arg+1
 16127  0B37  083B               	movf	___ftdiv@f3+2,w
 16128  0B38  00A2               	movwf	___ftpack@arg+2
 16129  0B39  083C               	movf	___ftdiv@exp,w
 16130  0B3A  00B4               	movwf	??___ftdiv
 16131  0B3B  0834               	movf	??___ftdiv,w
 16132  0B3C  00A3               	movwf	___ftpack@exp
 16133  0B3D  083D               	movf	___ftdiv@sign,w
 16134  0B3E  00B5               	movwf	??___ftdiv+1
 16135  0B3F  0835               	movf	??___ftdiv+1,w
 16136  0B40  00A4               	movwf	___ftpack@sign
 16137  0B41  3192  2216         	fcall	___ftpack
 16138  0B43  0020               	movlb	0	; select bank0
 16139  0B44  0820               	movf	?___ftpack,w
 16140  0B45  00AE               	movwf	?___ftdiv
 16141  0B46  0821               	movf	?___ftpack+1,w
 16142  0B47  00AF               	movwf	?___ftdiv+1
 16143  0B48  0822               	movf	?___ftpack+2,w
 16144  0B49  00B0               	movwf	?___ftdiv+2
 16145  0B4A  0008               	return
 16146  0B4B                     __end_of___ftdiv:	
 16147                           
 16148                           	psect	text93
 16149  1AE7                     __ptext93:	
 16150 ;; *************** function ___awtoft *****************
 16151 ;; Defined at:
 16152 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;  c               2    8[BANK0 ] int 
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;  sign            1   13[BANK0 ] unsigned char 
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  3    8[BANK0 ] float 
 16159 ;; Registers used:
 16160 ;;		wreg, status,2, status,0, pclath, cstack
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/0
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16166 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16169 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16170 ;;Total ram usage:        6 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:    5
 16173 ;; This function calls:
 16174 ;;		___ftpack
 16175 ;; This function is called by:
 16176 ;;		_getPercentValue
 16177 ;;		_setPercentValue
 16178 ;; This function uses a non-reentrant model
 16179 ;;
 16180                           
 16181                           
 16182                           ;psect for function ___awtoft
 16183  1AE7                     ___awtoft:	
 16184                           
 16185                           ;incstack = 0
 16186                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 16187  1AE7  0020               	movlb	0	; select bank0
 16188  1AE8  01AD               	clrf	___awtoft@sign
 16189  1AE9  1FA9               	btfss	___awtoft@c+1,7
 16190  1AEA  2AF2               	goto	l5735
 16191  1AEB  09A8               	comf	___awtoft@c,f
 16192  1AEC  09A9               	comf	___awtoft@c+1,f
 16193  1AED  0AA8               	incf	___awtoft@c,f
 16194  1AEE  1903               	skipnz
 16195  1AEF  0AA9               	incf	___awtoft@c+1,f
 16196  1AF0  01AD               	clrf	___awtoft@sign
 16197  1AF1  0AAD               	incf	___awtoft@sign,f
 16198  1AF2                     l5735:	
 16199  1AF2  0828               	movf	___awtoft@c,w
 16200  1AF3  00A0               	movwf	___ftpack@arg
 16201  1AF4  0829               	movf	___awtoft@c+1,w
 16202  1AF5  00A1               	movwf	___ftpack@arg+1
 16203  1AF6  01A2               	clrf	___ftpack@arg+2
 16204  1AF7  308E               	movlw	142
 16205  1AF8  00AB               	movwf	??___awtoft
 16206  1AF9  082B               	movf	??___awtoft,w
 16207  1AFA  00A3               	movwf	___ftpack@exp
 16208  1AFB  082D               	movf	___awtoft@sign,w
 16209  1AFC  00AC               	movwf	??___awtoft+1
 16210  1AFD  082C               	movf	??___awtoft+1,w
 16211  1AFE  00A4               	movwf	___ftpack@sign
 16212  1AFF  3192  2216         	fcall	___ftpack
 16213  1B01  0020               	movlb	0	; select bank0
 16214  1B02  0820               	movf	?___ftpack,w
 16215  1B03  00A8               	movwf	?___awtoft
 16216  1B04  0821               	movf	?___ftpack+1,w
 16217  1B05  00A9               	movwf	?___awtoft+1
 16218  1B06  0822               	movf	?___ftpack+2,w
 16219  1B07  00AA               	movwf	?___awtoft+2
 16220  1B08  0008               	return
 16221  1B09                     __end_of___awtoft:	
 16222                           
 16223                           	psect	text94
 16224  1216                     __ptext94:	
 16225 ;; *************** function ___ftpack *****************
 16226 ;; Defined at:
 16227 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 16228 ;; Parameters:    Size  Location     Type
 16229 ;;  arg             3    0[BANK0 ] unsigned um
 16230 ;;  exp             1    3[BANK0 ] unsigned char 
 16231 ;;  sign            1    4[BANK0 ] unsigned char 
 16232 ;; Auto vars:     Size  Location     Type
 16233 ;;		None
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  3    0[BANK0 ] float 
 16236 ;; Registers used:
 16237 ;;		wreg, status,2, status,0
 16238 ;; Tracked objects:
 16239 ;;		On entry : 0/0
 16240 ;;		On exit  : 0/0
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16243 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16245 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16246 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16247 ;;Total ram usage:        8 bytes
 16248 ;; Hardware stack levels used:    1
 16249 ;; Hardware stack levels required when called:    4
 16250 ;; This function calls:
 16251 ;;		Nothing
 16252 ;; This function is called by:
 16253 ;;		___awtoft
 16254 ;;		___ftadd
 16255 ;;		___ftdiv
 16256 ;;		___ftmul
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           
 16260                           
 16261                           ;psect for function ___ftpack
 16262  1216                     ___ftpack:	
 16263                           
 16264                           ;incstack = 0
 16265                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 16266  1216  0020               	movlb	0	; select bank0
 16267  1217  0823               	movf	___ftpack@exp,w
 16268  1218  1903               	btfsc	3,2
 16269  1219  2A1F               	goto	l5701
 16270  121A  0822               	movf	___ftpack@arg+2,w
 16271  121B  0421               	iorwf	___ftpack@arg+1,w
 16272  121C  0420               	iorwf	___ftpack@arg,w
 16273  121D  1D03               	skipz
 16274  121E  2A30               	goto	l5707
 16275  121F                     l5701:	
 16276  121F  3000               	movlw	0
 16277  1220  00A0               	movwf	?___ftpack
 16278  1221  3000               	movlw	0
 16279  1222  00A1               	movwf	?___ftpack+1
 16280  1223  3000               	movlw	0
 16281  1224  00A2               	movwf	?___ftpack+2
 16282  1225  0008               	return
 16283  1226                     l5705:	
 16284  1226  3001               	movlw	1
 16285  1227  00A5               	movwf	??___ftpack
 16286  1228  0825               	movf	??___ftpack,w
 16287  1229  07A3               	addwf	___ftpack@exp,f
 16288  122A  3001               	movlw	1
 16289  122B                     u3795:	
 16290  122B  36A2               	lsrf	___ftpack@arg+2,f
 16291  122C  0CA1               	rrf	___ftpack@arg+1,f
 16292  122D  0CA0               	rrf	___ftpack@arg,f
 16293  122E  0B89               	decfsz	9,f
 16294  122F  2A2B               	goto	u3795
 16295  1230                     l5707:	
 16296  1230  30FE               	movlw	254
 16297  1231  0522               	andwf	___ftpack@arg+2,w
 16298  1232  1903               	btfsc	3,2
 16299  1233  2A49               	goto	l3113
 16300  1234  2A26               	goto	l5705
 16301  1235                     l5709:	
 16302  1235  3001               	movlw	1
 16303  1236  00A5               	movwf	??___ftpack
 16304  1237  0825               	movf	??___ftpack,w
 16305  1238  07A3               	addwf	___ftpack@exp,f
 16306  1239  3001               	movlw	1
 16307  123A  07A0               	addwf	___ftpack@arg,f
 16308  123B  3000               	movlw	0
 16309  123C  1803               	skipnc
 16310  123D  3001               	movlw	1
 16311  123E  07A1               	addwf	___ftpack@arg+1,f
 16312  123F  3000               	movlw	0
 16313  1240  1803               	skipnc
 16314  1241  3001               	movlw	1
 16315  1242  07A2               	addwf	___ftpack@arg+2,f
 16316  1243  3001               	movlw	1
 16317  1244                     u3815:	
 16318  1244  36A2               	lsrf	___ftpack@arg+2,f
 16319  1245  0CA1               	rrf	___ftpack@arg+1,f
 16320  1246  0CA0               	rrf	___ftpack@arg,f
 16321  1247  0B89               	decfsz	9,f
 16322  1248  2A44               	goto	u3815
 16323  1249                     l3113:	
 16324  1249  30FF               	movlw	255
 16325  124A  0522               	andwf	___ftpack@arg+2,w
 16326  124B  1903               	btfsc	3,2
 16327  124C  2A56               	goto	l5717
 16328  124D  2A35               	goto	l5709
 16329  124E                     l5715:	
 16330  124E  3001               	movlw	1
 16331  124F  02A3               	subwf	___ftpack@exp,f
 16332  1250  3001               	movlw	1
 16333  1251                     u3835:	
 16334  1251  35A0               	lslf	___ftpack@arg,f
 16335  1252  0DA1               	rlf	___ftpack@arg+1,f
 16336  1253  0DA2               	rlf	___ftpack@arg+2,f
 16337  1254  0B89               	decfsz	9,f
 16338  1255  2A51               	goto	u3835
 16339  1256                     l5717:	
 16340  1256  1FA1               	btfss	___ftpack@arg+1,7
 16341  1257  2A4E               	goto	l5715
 16342  1258  1823               	btfsc	___ftpack@exp,0
 16343  1259  2A60               	goto	l3119
 16344  125A  30FF               	movlw	255
 16345  125B  05A0               	andwf	___ftpack@arg,f
 16346  125C  307F               	movlw	127
 16347  125D  05A1               	andwf	___ftpack@arg+1,f
 16348  125E  30FF               	movlw	255
 16349  125F  05A2               	andwf	___ftpack@arg+2,f
 16350  1260                     l3119:	
 16351  1260  1003               	clrc
 16352  1261  0CA3               	rrf	___ftpack@exp,f
 16353  1262  0823               	movf	___ftpack@exp,w
 16354  1263  00A5               	movwf	??___ftpack
 16355  1264  01A6               	clrf	??___ftpack+1
 16356  1265  01A7               	clrf	??___ftpack+2
 16357  1266  3010               	movlw	16
 16358  1267                     u3865:	
 16359  1267  35A5               	lslf	??___ftpack,f
 16360  1268  0DA6               	rlf	??___ftpack+1,f
 16361  1269  0DA7               	rlf	??___ftpack+2,f
 16362  126A  0B89               	decfsz	9,f
 16363  126B  2A67               	goto	u3865
 16364  126C  0825               	movf	??___ftpack,w
 16365  126D  04A0               	iorwf	___ftpack@arg,f
 16366  126E  0826               	movf	??___ftpack+1,w
 16367  126F  04A1               	iorwf	___ftpack@arg+1,f
 16368  1270  0827               	movf	??___ftpack+2,w
 16369  1271  04A2               	iorwf	___ftpack@arg+2,f
 16370  1272  0824               	movf	___ftpack@sign,w
 16371  1273  1903               	btfsc	3,2
 16372  1274  0008               	return
 16373  1275  17A2               	bsf	___ftpack@arg+2,7
 16374  1276  0008               	return
 16375  1277                     __end_of___ftpack:	
 16376                           
 16377                           	psect	text95
 16378  2792                     __ptext95:	
 16379 ;; *************** function _setRFSW_Status *****************
 16380 ;; Defined at:
 16381 ;;		line 424 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16382 ;; Parameters:    Size  Location     Type
 16383 ;;  sw              1    wreg     unsigned char 
 16384 ;;  command         1    2[BANK0 ] unsigned char 
 16385 ;; Auto vars:     Size  Location     Type
 16386 ;;  sw              1    3[BANK0 ] unsigned char 
 16387 ;; Return value:  Size  Location     Type
 16388 ;;		None               void
 16389 ;; Registers used:
 16390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16391 ;; Tracked objects:
 16392 ;;		On entry : 0/0
 16393 ;;		On exit  : 0/0
 16394 ;;		Unchanged: 0/0
 16395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16396 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16397 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16399 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16400 ;;Total ram usage:        2 bytes
 16401 ;; Hardware stack levels used:    1
 16402 ;; Hardware stack levels required when called:    5
 16403 ;; This function calls:
 16404 ;;		_RfSWPointSelect
 16405 ;; This function is called by:
 16406 ;;		_DlyOff_Main
 16407 ;;		_setDimmerLights_ERROR
 16408 ;;		_setControl_Lights_Table
 16409 ;;		_Sw_DimmerOnFunc
 16410 ;;		_Sw_DimmerAdjFunc
 16411 ;; This function uses a non-reentrant model
 16412 ;;
 16413                           
 16414                           
 16415                           ;psect for function _setRFSW_Status
 16416  2792                     _setRFSW_Status:	
 16417                           
 16418                           ;incstack = 0
 16419                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16420                           ;setRFSW_Status@sw stored from wreg
 16421  2792  0020               	movlb	0	; select bank0
 16422  2793  00A3               	movwf	setRFSW_Status@sw
 16423                           
 16424                           ;RF_Control_B1.c: 426: RfSWPointSelect(sw);
 16425  2794  0823               	movf	setRFSW_Status@sw,w
 16426  2795  3199  212A         	fcall	_RfSWPointSelect
 16427                           
 16428                           ;RF_Control_B1.c: 427: RFSW->Status=command;
 16429  2797  0021               	movlb	1	; select bank1
 16430  2798  083C               	movf	_RFSW^(0+128),w
 16431  2799  0086               	movwf	6
 16432  279A  0187               	clrf	7
 16433  279B  0020               	movlb	0	; select bank0
 16434  279C  0822               	movf	setRFSW_Status@command,w
 16435  279D  1001               	bcf	1,0
 16436  279E  1D03               	skipz
 16437  279F  1401               	bsf	1,0
 16438  27A0  0008               	return
 16439  27A1                     __end_of_setRFSW_Status:	
 16440                           
 16441                           	psect	text96
 16442  192A                     __ptext96:	
 16443 ;; *************** function _RfSWPointSelect *****************
 16444 ;; Defined at:
 16445 ;;		line 346 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16446 ;; Parameters:    Size  Location     Type
 16447 ;;  sw              1    wreg     unsigned char 
 16448 ;; Auto vars:     Size  Location     Type
 16449 ;;  sw              1    1[BANK0 ] unsigned char 
 16450 ;; Return value:  Size  Location     Type
 16451 ;;		None               void
 16452 ;; Registers used:
 16453 ;;		wreg
 16454 ;; Tracked objects:
 16455 ;;		On entry : 0/0
 16456 ;;		On exit  : 0/0
 16457 ;;		Unchanged: 0/0
 16458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16463 ;;Total ram usage:        2 bytes
 16464 ;; Hardware stack levels used:    1
 16465 ;; Hardware stack levels required when called:    4
 16466 ;; This function calls:
 16467 ;;		Nothing
 16468 ;; This function is called by:
 16469 ;;		_setRFSW_Control
 16470 ;;		_setRFSW_AdjControl
 16471 ;;		_setRFSW_Status
 16472 ;; This function uses a non-reentrant model
 16473 ;;
 16474                           
 16475                           
 16476                           ;psect for function _RfSWPointSelect
 16477  192A                     _RfSWPointSelect:	
 16478                           
 16479                           ;incstack = 0
 16480                           ; Regs used in _RfSWPointSelect: [wreg]
 16481                           ;RfSWPointSelect@sw stored from wreg
 16482  192A  0020               	movlb	0	; select bank0
 16483  192B  00A1               	movwf	RfSWPointSelect@sw
 16484                           
 16485                           ;RF_Control_B1.c: 349: if(sw == 1)
 16486  192C  0821               	movf	RfSWPointSelect@sw,w
 16487  192D  3A01               	xorlw	1
 16488  192E  1D03               	skipz
 16489  192F  2935               	goto	l2086
 16490                           
 16491                           ;RF_Control_B1.c: 350: {
 16492                           ;RF_Control_B1.c: 351: RFSW=&RFSW1;
 16493  1930  30E7               	movlw	_RFSW1& (0+255)
 16494  1931  00A0               	movwf	??_RfSWPointSelect
 16495  1932  0820               	movf	??_RfSWPointSelect,w
 16496  1933  0021               	movlb	1	; select bank1
 16497  1934  00BC               	movwf	_RFSW^(0+128)
 16498  1935                     l2086:	
 16499                           
 16500                           ;RF_Control_B1.c: 352: }
 16501                           ;RF_Control_B1.c: 355: if(sw == 2)
 16502  1935  0020               	movlb	0	; select bank0
 16503  1936  0821               	movf	RfSWPointSelect@sw,w
 16504  1937  3A02               	xorlw	2
 16505  1938  1D03               	skipz
 16506  1939  0008               	return
 16507                           
 16508                           ;RF_Control_B1.c: 356: {
 16509                           ;RF_Control_B1.c: 357: RFSW=&RFSW2;
 16510  193A  30E8               	movlw	_RFSW2& (0+255)
 16511  193B  00A0               	movwf	??_RfSWPointSelect
 16512  193C  0820               	movf	??_RfSWPointSelect,w
 16513  193D  0021               	movlb	1	; select bank1
 16514  193E  00BC               	movwf	_RFSW^(0+128)
 16515  193F  0008               	return
 16516  1940                     __end_of_RfSWPointSelect:	
 16517                           
 16518                           	psect	text97
 16519  27D0                     __ptext97:	
 16520 ;; *************** function _setDimmerLights_Trigger *****************
 16521 ;; Defined at:
 16522 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16523 ;; Parameters:    Size  Location     Type
 16524 ;;  lights          1    wreg     unsigned char 
 16525 ;;  command         1    2[BANK0 ] unsigned char 
 16526 ;; Auto vars:     Size  Location     Type
 16527 ;;  lights          1    3[BANK0 ] unsigned char 
 16528 ;; Return value:  Size  Location     Type
 16529 ;;		None               void
 16530 ;; Registers used:
 16531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16532 ;; Tracked objects:
 16533 ;;		On entry : 0/0
 16534 ;;		On exit  : 0/0
 16535 ;;		Unchanged: 0/0
 16536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16537 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16540 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16541 ;;Total ram usage:        2 bytes
 16542 ;; Hardware stack levels used:    1
 16543 ;; Hardware stack levels required when called:    5
 16544 ;; This function calls:
 16545 ;;		_DimmerLightsPointSelect
 16546 ;; This function is called by:
 16547 ;;		_DlyOff_Main
 16548 ;;		_setRFSW_Control
 16549 ;;		_Sw_DimmerOnFunc
 16550 ;;		_Sw_DimmerOffFunc
 16551 ;; This function uses a non-reentrant model
 16552 ;;
 16553                           
 16554                           
 16555                           ;psect for function _setDimmerLights_Trigger
 16556  27D0                     _setDimmerLights_Trigger:	
 16557                           
 16558                           ;incstack = 0
 16559                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16560                           ;setDimmerLights_Trigger@lights stored from wreg
 16561  27D0  0020               	movlb	0	; select bank0
 16562  27D1  00A3               	movwf	setDimmerLights_Trigger@lights
 16563                           
 16564                           ;Dimmer_B1.c: 447: DimmerLightsPointSelect(lights);
 16565  27D2  0823               	movf	setDimmerLights_Trigger@lights,w
 16566  27D3  3198  20D5         	fcall	_DimmerLightsPointSelect
 16567                           
 16568                           ;Dimmer_B1.c: 448: DimmerLights->Trigger=command;
 16569  27D5  0020               	movlb	0	; select bank0
 16570  27D6  086C               	movf	_DimmerLights,w
 16571  27D7  3E09               	addlw	9
 16572  27D8  0086               	movwf	6
 16573  27D9  3001               	movlw	1	; select bank2/3
 16574  27DA  0087               	movwf	7
 16575  27DB  0822               	movf	setDimmerLights_Trigger@command,w
 16576  27DC  1081               	bcf	1,1
 16577  27DD  1D03               	skipz
 16578  27DE  1481               	bsf	1,1
 16579  27DF  0008               	return
 16580  27E0                     __end_of_setDimmerLights_Trigger:	
 16581                           
 16582                           	psect	text98
 16583  27C0                     __ptext98:	
 16584 ;; *************** function _setDimmerLights_Switch *****************
 16585 ;; Defined at:
 16586 ;;		line 435 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;  lights          1    wreg     unsigned char 
 16589 ;;  command         1    2[BANK0 ] unsigned char 
 16590 ;; Auto vars:     Size  Location     Type
 16591 ;;  lights          1    3[BANK0 ] unsigned char 
 16592 ;; Return value:  Size  Location     Type
 16593 ;;		None               void
 16594 ;; Registers used:
 16595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16596 ;; Tracked objects:
 16597 ;;		On entry : 0/0
 16598 ;;		On exit  : 0/0
 16599 ;;		Unchanged: 0/0
 16600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16601 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16605 ;;Total ram usage:        2 bytes
 16606 ;; Hardware stack levels used:    1
 16607 ;; Hardware stack levels required when called:    5
 16608 ;; This function calls:
 16609 ;;		_DimmerLightsPointSelect
 16610 ;; This function is called by:
 16611 ;;		_DlyOff_Main
 16612 ;;		_setRFSW_Control
 16613 ;;		_Sw_DimmerOnFunc
 16614 ;;		_Sw_DimmerOffFunc
 16615 ;; This function uses a non-reentrant model
 16616 ;;
 16617                           
 16618                           
 16619                           ;psect for function _setDimmerLights_Switch
 16620  27C0                     _setDimmerLights_Switch:	
 16621                           
 16622                           ;incstack = 0
 16623                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16624                           ;setDimmerLights_Switch@lights stored from wreg
 16625  27C0  0020               	movlb	0	; select bank0
 16626  27C1  00A3               	movwf	setDimmerLights_Switch@lights
 16627                           
 16628                           ;Dimmer_B1.c: 437: DimmerLightsPointSelect(lights);
 16629  27C2  0823               	movf	setDimmerLights_Switch@lights,w
 16630  27C3  3198  20D5         	fcall	_DimmerLightsPointSelect
 16631                           
 16632                           ;Dimmer_B1.c: 438: DimmerLights->Switch=command;
 16633  27C5  0020               	movlb	0	; select bank0
 16634  27C6  086C               	movf	_DimmerLights,w
 16635  27C7  3E09               	addlw	9
 16636  27C8  0086               	movwf	6
 16637  27C9  3001               	movlw	1	; select bank2/3
 16638  27CA  0087               	movwf	7
 16639  27CB  0822               	movf	setDimmerLights_Switch@command,w
 16640  27CC  1001               	bcf	1,0
 16641  27CD  1D03               	skipz
 16642  27CE  1401               	bsf	1,0
 16643  27CF  0008               	return
 16644  27D0                     __end_of_setDimmerLights_Switch:	
 16645                           
 16646                           	psect	text99
 16647  18D5                     __ptext99:	
 16648 ;; *************** function _DimmerLightsPointSelect *****************
 16649 ;; Defined at:
 16650 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16651 ;; Parameters:    Size  Location     Type
 16652 ;;  lights          1    wreg     unsigned char 
 16653 ;; Auto vars:     Size  Location     Type
 16654 ;;  lights          1    1[BANK0 ] unsigned char 
 16655 ;; Return value:  Size  Location     Type
 16656 ;;		None               void
 16657 ;; Registers used:
 16658 ;;		wreg
 16659 ;; Tracked objects:
 16660 ;;		On entry : 0/0
 16661 ;;		On exit  : 0/0
 16662 ;;		Unchanged: 0/0
 16663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;Total ram usage:        2 bytes
 16669 ;; Hardware stack levels used:    1
 16670 ;; Hardware stack levels required when called:    4
 16671 ;; This function calls:
 16672 ;;		Nothing
 16673 ;; This function is called by:
 16674 ;;		_setDimmerLights_Initialization
 16675 ;;		_setDimmerLights_Main
 16676 ;;		_setDimmerLights_ERROR
 16677 ;;		_setDimmerLights_TriggerERROR
 16678 ;;		_setDimmerLights
 16679 ;;		_setDimmerLights_Adj
 16680 ;;		_setDimmerLights_AdjRF
 16681 ;;		_setDimmerLights_Switch
 16682 ;;		_setDimmerLights_AdjGo
 16683 ;;		_setDimmerLights_Trigger
 16684 ;;		_setDimmerLights_TriggerAdj
 16685 ;;		_setDimmerLights_Clear
 16686 ;;		_setDimmerLights_GO
 16687 ;;		_setDimmerLights_MaxmumValue
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           
 16692                           ;psect for function _DimmerLightsPointSelect
 16693  18D5                     _DimmerLightsPointSelect:	
 16694                           
 16695                           ;incstack = 0
 16696                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 16697                           ;DimmerLightsPointSelect@lights stored from wreg
 16698  18D5  0020               	movlb	0	; select bank0
 16699  18D6  00A1               	movwf	DimmerLightsPointSelect@lights
 16700                           
 16701                           ;Dimmer_B1.c: 10: if(lights == 1)
 16702  18D7  0821               	movf	DimmerLightsPointSelect@lights,w
 16703  18D8  3A01               	xorlw	1
 16704  18D9  1D03               	skipz
 16705  18DA  28DF               	goto	l5951
 16706                           
 16707                           ;Dimmer_B1.c: 11: {
 16708                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 16709  18DB  3030               	movlw	_DimmerLights1& (0+255)
 16710  18DC  00A0               	movwf	??_DimmerLightsPointSelect
 16711  18DD  0820               	movf	??_DimmerLightsPointSelect,w
 16712  18DE  00EC               	movwf	_DimmerLights
 16713  18DF                     l5951:	
 16714                           
 16715                           ;Dimmer_B1.c: 13: }
 16716                           ;Dimmer_B1.c: 15: RA7=1;
 16717  18DF  178C               	bsf	12,7	;volatile
 16718                           
 16719                           ;Dimmer_B1.c: 20: if(lights == 2)
 16720  18E0  0821               	movf	DimmerLightsPointSelect@lights,w
 16721  18E1  3A02               	xorlw	2
 16722  18E2  1D03               	skipz
 16723  18E3  28E8               	goto	l5955
 16724                           
 16725                           ;Dimmer_B1.c: 21: {
 16726                           ;Dimmer_B1.c: 22: DimmerLights=&DimmerLights2;
 16727  18E4  303E               	movlw	_DimmerLights2& (0+255)
 16728  18E5  00A0               	movwf	??_DimmerLightsPointSelect
 16729  18E6  0820               	movf	??_DimmerLightsPointSelect,w
 16730  18E7  00EC               	movwf	_DimmerLights
 16731  18E8                     l5955:	
 16732                           
 16733                           ;Dimmer_B1.c: 23: }
 16734                           ;Dimmer_B1.c: 25: RB4=1;
 16735  18E8  160D               	bsf	13,4	;volatile
 16736  18E9  0008               	return
 16737  18EA                     __end_of_DimmerLightsPointSelect:	
 16738                           
 16739                           	psect	text100
 16740  1565                     __ptext100:	
 16741 ;; *************** function _setBuz *****************
 16742 ;; Defined at:
 16743 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 16744 ;; Parameters:    Size  Location     Type
 16745 ;;  count           1    wreg     unsigned char 
 16746 ;;  time            2    6[BANK0 ] int 
 16747 ;; Auto vars:     Size  Location     Type
 16748 ;;  count           1    9[BANK0 ] unsigned char 
 16749 ;; Return value:  Size  Location     Type
 16750 ;;		None               void
 16751 ;; Registers used:
 16752 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16753 ;; Tracked objects:
 16754 ;;		On entry : 0/0
 16755 ;;		On exit  : 0/0
 16756 ;;		Unchanged: 0/0
 16757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16760 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16761 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16762 ;;Total ram usage:        4 bytes
 16763 ;; Hardware stack levels used:    1
 16764 ;; Hardware stack levels required when called:    5
 16765 ;; This function calls:
 16766 ;;		___wmul
 16767 ;; This function is called by:
 16768 ;;		_DlyOff_Main
 16769 ;;		_setDimmerLights_Main
 16770 ;;		_DimmerLights_Exceptions
 16771 ;;		_MainT
 16772 ;;		_setLog_Code
 16773 ;;		_setControl_Lights_Table
 16774 ;;		_setRFSW_Control
 16775 ;;		_setSw_Main
 16776 ;;		_Sw_DimmerOnFunc
 16777 ;; This function uses a non-reentrant model
 16778 ;;
 16779                           
 16780                           
 16781                           ;psect for function _setBuz
 16782  1565                     _setBuz:	
 16783                           
 16784                           ;incstack = 0
 16785                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16786                           ;setBuz@count stored from wreg
 16787  1565  0020               	movlb	0	; select bank0
 16788  1566  00A9               	movwf	setBuz@count
 16789                           
 16790                           ;Buzzer_B1.c: 24: time*=20;
 16791  1567  3014               	movlw	20
 16792  1568  00A0               	movwf	___wmul@multiplier
 16793  1569  3000               	movlw	0
 16794  156A  00A1               	movwf	___wmul@multiplier+1
 16795  156B  0827               	movf	setBuz@time+1,w
 16796  156C  01A3               	clrf	___wmul@multiplicand+1
 16797  156D  07A3               	addwf	___wmul@multiplicand+1,f
 16798  156E  0826               	movf	setBuz@time,w
 16799  156F  01A2               	clrf	___wmul@multiplicand
 16800  1570  07A2               	addwf	___wmul@multiplicand,f
 16801  1571  319A  228A  3195   	fcall	___wmul
 16802  1574  0020               	movlb	0	; select bank0
 16803  1575  0821               	movf	?___wmul+1,w
 16804  1576  01A7               	clrf	setBuz@time+1
 16805  1577  07A7               	addwf	setBuz@time+1,f
 16806  1578  0820               	movf	?___wmul,w
 16807  1579  01A6               	clrf	setBuz@time
 16808  157A  07A6               	addwf	setBuz@time,f
 16809                           
 16810                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 16811  157B  0878               	movf	_Buz,w
 16812  157C  0086               	movwf	6
 16813  157D  3001               	movlw	1	; select bank2/3
 16814  157E  0087               	movwf	7
 16815  157F  1C01               	btfss	1,0
 16816  1580  0008               	return
 16817                           
 16818                           ;Buzzer_B1.c: 26: {
 16819                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 16820  1581  0878               	movf	_Buz,w
 16821  1582  0086               	movwf	6
 16822  1583  3001               	movlw	1	; select bank2/3
 16823  1584  0087               	movwf	7
 16824  1585  1881               	btfsc	1,1
 16825  1586  2DA0               	goto	l8075
 16826                           
 16827                           ;Buzzer_B1.c: 28: {
 16828                           ;Buzzer_B1.c: 29: Buz->GO=1;
 16829  1587  0878               	movf	_Buz,w
 16830  1588  0086               	movwf	6
 16831  1589  3001               	movlw	1	; select bank2/3
 16832  158A  0087               	movwf	7
 16833  158B  1481               	bsf	1,1
 16834                           
 16835                           ;Buzzer_B1.c: 30: Buz->Count=count;
 16836  158C  0829               	movf	setBuz@count,w
 16837  158D  00A8               	movwf	??_setBuz
 16838  158E  0878               	movf	_Buz,w
 16839  158F  3E03               	addlw	3
 16840  1590  0086               	movwf	6
 16841  1591  3001               	movlw	1	; select bank2/3
 16842  1592  0087               	movwf	7
 16843  1593  0828               	movf	??_setBuz,w
 16844  1594  0081               	movwf	1
 16845                           
 16846                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 16847  1595  0878               	movf	_Buz,w
 16848  1596  3E06               	addlw	6
 16849  1597  0086               	movwf	6
 16850  1598  3001               	movlw	1	; select bank2/3
 16851  1599  0087               	movwf	7
 16852  159A  0826               	movf	setBuz@time,w
 16853  159B  3FC0               	movwi [0]fsr1
 16854  159C  0827               	movf	setBuz@time+1,w
 16855  159D  3FC1               	movwi [1]fsr1
 16856                           
 16857                           ;Buzzer_B1.c: 33: RB3=1;
 16858  159E  158D               	bsf	13,3	;volatile
 16859                           
 16860                           ;Buzzer_B1.c: 34: }
 16861  159F  0008               	return
 16862  15A0                     l8075:	
 16863                           
 16864                           ;Buzzer_B1.c: 35: else
 16865                           ;Buzzer_B1.c: 36: {
 16866                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 16867  15A0  0878               	movf	_Buz,w
 16868  15A1  0086               	movwf	6
 16869  15A2  3001               	movlw	1	; select bank2/3
 16870  15A3  0087               	movwf	7
 16871  15A4  1981               	btfsc	1,3
 16872  15A5  2DBE               	goto	l8079
 16873                           
 16874                           ;Buzzer_B1.c: 38: {
 16875                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 16876  15A6  0878               	movf	_Buz,w
 16877  15A7  0086               	movwf	6
 16878  15A8  3001               	movlw	1	; select bank2/3
 16879  15A9  0087               	movwf	7
 16880  15AA  1581               	bsf	1,3
 16881                           
 16882                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 16883  15AB  0829               	movf	setBuz@count,w
 16884  15AC  00A8               	movwf	??_setBuz
 16885  15AD  0878               	movf	_Buz,w
 16886  15AE  3E04               	addlw	4
 16887  15AF  0086               	movwf	6
 16888  15B0  3001               	movlw	1	; select bank2/3
 16889  15B1  0087               	movwf	7
 16890  15B2  0828               	movf	??_setBuz,w
 16891  15B3  0081               	movwf	1
 16892                           
 16893                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 16894  15B4  0878               	movf	_Buz,w
 16895  15B5  3E08               	addlw	8
 16896  15B6  0086               	movwf	6
 16897  15B7  3001               	movlw	1	; select bank2/3
 16898  15B8  0087               	movwf	7
 16899  15B9  0826               	movf	setBuz@time,w
 16900  15BA  3FC0               	movwi [0]fsr1
 16901  15BB  0827               	movf	setBuz@time+1,w
 16902  15BC  3FC1               	movwi [1]fsr1
 16903                           
 16904                           ;Buzzer_B1.c: 42: }
 16905  15BD  0008               	return
 16906  15BE                     l8079:	
 16907                           
 16908                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 16909  15BE  0878               	movf	_Buz,w
 16910  15BF  0086               	movwf	6
 16911  15C0  3001               	movlw	1	; select bank2/3
 16912  15C1  0087               	movwf	7
 16913  15C2  1A01               	btfsc	1,4
 16914  15C3  0008               	return
 16915                           
 16916                           ;Buzzer_B1.c: 44: {
 16917                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 16918  15C4  0878               	movf	_Buz,w
 16919  15C5  0086               	movwf	6
 16920  15C6  3001               	movlw	1	; select bank2/3
 16921  15C7  0087               	movwf	7
 16922  15C8  1601               	bsf	1,4
 16923                           
 16924                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 16925  15C9  0829               	movf	setBuz@count,w
 16926  15CA  00A8               	movwf	??_setBuz
 16927  15CB  0878               	movf	_Buz,w
 16928  15CC  3E05               	addlw	5
 16929  15CD  0086               	movwf	6
 16930  15CE  3001               	movlw	1	; select bank2/3
 16931  15CF  0087               	movwf	7
 16932  15D0  0828               	movf	??_setBuz,w
 16933  15D1  0081               	movwf	1
 16934                           
 16935                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 16936  15D2  0878               	movf	_Buz,w
 16937  15D3  3E0A               	addlw	10
 16938  15D4  0086               	movwf	6
 16939  15D5  3001               	movlw	1	; select bank2/3
 16940  15D6  0087               	movwf	7
 16941  15D7  0826               	movf	setBuz@time,w
 16942  15D8  3FC0               	movwi [0]fsr1
 16943  15D9  0827               	movf	setBuz@time+1,w
 16944  15DA  3FC1               	movwi [1]fsr1
 16945  15DB  0008               	return
 16946  15DC                     __end_of_setBuz:	
 16947                           
 16948                           	psect	text101
 16949  1A8A                     __ptext101:	
 16950 ;; *************** function ___wmul *****************
 16951 ;; Defined at:
 16952 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 16953 ;; Parameters:    Size  Location     Type
 16954 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16955 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16956 ;; Auto vars:     Size  Location     Type
 16957 ;;  product         2    4[BANK0 ] unsigned int 
 16958 ;; Return value:  Size  Location     Type
 16959 ;;                  2    0[BANK0 ] unsigned int 
 16960 ;; Registers used:
 16961 ;;		wreg, status,2, status,0
 16962 ;; Tracked objects:
 16963 ;;		On entry : 0/0
 16964 ;;		On exit  : 0/0
 16965 ;;		Unchanged: 0/0
 16966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16967 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16968 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16970 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16971 ;;Total ram usage:        6 bytes
 16972 ;; Hardware stack levels used:    1
 16973 ;; Hardware stack levels required when called:    4
 16974 ;; This function calls:
 16975 ;;		Nothing
 16976 ;; This function is called by:
 16977 ;;		_setBuz
 16978 ;;		_Load_Main
 16979 ;; This function uses a non-reentrant model
 16980 ;;
 16981                           
 16982                           
 16983                           ;psect for function ___wmul
 16984  1A8A                     ___wmul:	
 16985                           
 16986                           ;incstack = 0
 16987                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16988  1A8A  0020               	movlb	0	; select bank0
 16989  1A8B  01A4               	clrf	___wmul@product
 16990  1A8C  01A5               	clrf	___wmul@product+1
 16991  1A8D                     l8055:	
 16992  1A8D  1C20               	btfss	___wmul@multiplier,0
 16993  1A8E  2A93               	goto	l2952
 16994  1A8F  0822               	movf	___wmul@multiplicand,w
 16995  1A90  07A4               	addwf	___wmul@product,f
 16996  1A91  0823               	movf	___wmul@multiplicand+1,w
 16997  1A92  3DA5               	addwfc	___wmul@product+1,f
 16998  1A93                     l2952:	
 16999  1A93  3001               	movlw	1
 17000  1A94                     u7545:	
 17001  1A94  35A2               	lslf	___wmul@multiplicand,f
 17002  1A95  0DA3               	rlf	___wmul@multiplicand+1,f
 17003  1A96  0B89               	decfsz	9,f
 17004  1A97  2A94               	goto	u7545
 17005  1A98  3001               	movlw	1
 17006  1A99                     u7555:	
 17007  1A99  36A1               	lsrf	___wmul@multiplier+1,f
 17008  1A9A  0CA0               	rrf	___wmul@multiplier,f
 17009  1A9B  0B89               	decfsz	9,f
 17010  1A9C  2A99               	goto	u7555
 17011  1A9D  0821               	movf	___wmul@multiplier+1,w
 17012  1A9E  0420               	iorwf	___wmul@multiplier,w
 17013  1A9F  1D03               	skipz
 17014  1AA0  2A8D               	goto	l8055
 17015  1AA1  0825               	movf	___wmul@product+1,w
 17016  1AA2  01A1               	clrf	?___wmul+1
 17017  1AA3  07A1               	addwf	?___wmul+1,f
 17018  1AA4  0824               	movf	___wmul@product,w
 17019  1AA5  01A0               	clrf	?___wmul
 17020  1AA6  07A0               	addwf	?___wmul,f
 17021  1AA7  0008               	return
 17022  1AA8                     __end_of___wmul:	
 17023                           
 17024                           	psect	text102
 17025  2690                     __ptext102:	
 17026 ;; *************** function _DelayOff_Initialization *****************
 17027 ;; Defined at:
 17028 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 17029 ;; Parameters:    Size  Location     Type
 17030 ;;		None
 17031 ;; Auto vars:     Size  Location     Type
 17032 ;;		None
 17033 ;; Return value:  Size  Location     Type
 17034 ;;		None               void
 17035 ;; Registers used:
 17036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17037 ;; Tracked objects:
 17038 ;;		On entry : 0/0
 17039 ;;		On exit  : 0/0
 17040 ;;		Unchanged: 0/0
 17041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17046 ;;Total ram usage:        0 bytes
 17047 ;; Hardware stack levels used:    1
 17048 ;; Hardware stack levels required when called:    6
 17049 ;; This function calls:
 17050 ;;		_DlyOff_Initialization
 17051 ;; This function is called by:
 17052 ;;		_main
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           
 17056                           
 17057                           ;psect for function _DelayOff_Initialization
 17058  2690                     _DelayOff_Initialization:	
 17059                           
 17060                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 17061                           
 17062                           ;incstack = 0
 17063                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17064  2690  3001               	movlw	1
 17065  2691  31A6  26CE  31A6   	fcall	_DlyOff_Initialization
 17066                           
 17067                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 17068  2694  3002               	movlw	2
 17069  2695  31A6  26CE         	fcall	_DlyOff_Initialization
 17070  2697  0008               	return
 17071  2698                     __end_of_DelayOff_Initialization:	
 17072                           
 17073                           	psect	text103
 17074  26CE                     __ptext103:	
 17075 ;; *************** function _DlyOff_Initialization *****************
 17076 ;; Defined at:
 17077 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 17078 ;; Parameters:    Size  Location     Type
 17079 ;;  sw              1    wreg     unsigned char 
 17080 ;; Auto vars:     Size  Location     Type
 17081 ;;  sw              1    2[BANK0 ] unsigned char 
 17082 ;; Return value:  Size  Location     Type
 17083 ;;		None               void
 17084 ;; Registers used:
 17085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17086 ;; Tracked objects:
 17087 ;;		On entry : 0/0
 17088 ;;		On exit  : 0/0
 17089 ;;		Unchanged: 0/0
 17090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17095 ;;Total ram usage:        1 bytes
 17096 ;; Hardware stack levels used:    1
 17097 ;; Hardware stack levels required when called:    5
 17098 ;; This function calls:
 17099 ;;		_DelayOffPointSelect
 17100 ;; This function is called by:
 17101 ;;		_DelayOff_Initialization
 17102 ;; This function uses a non-reentrant model
 17103 ;;
 17104                           
 17105                           
 17106                           ;psect for function _DlyOff_Initialization
 17107  26CE                     _DlyOff_Initialization:	
 17108                           
 17109                           ;incstack = 0
 17110                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17111                           ;DlyOff_Initialization@sw stored from wreg
 17112  26CE  0020               	movlb	0	; select bank0
 17113  26CF  00A2               	movwf	DlyOff_Initialization@sw
 17114                           
 17115                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 17116  26D0  0822               	movf	DlyOff_Initialization@sw,w
 17117  26D1  3199  216C         	fcall	_DelayOffPointSelect
 17118                           
 17119                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 17120  26D3  0021               	movlb	1	; select bank1
 17121  26D4  0838               	movf	_DelayOff^(0+128),w
 17122  26D5  0086               	movwf	6
 17123  26D6  0187               	clrf	7
 17124  26D7  1401               	bsf	1,0
 17125  26D8  0008               	return
 17126  26D9                     __end_of_DlyOff_Initialization:	
 17127                           
 17128                           	psect	text104
 17129  196C                     __ptext104:	
 17130 ;; *************** function _DelayOffPointSelect *****************
 17131 ;; Defined at:
 17132 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 17133 ;; Parameters:    Size  Location     Type
 17134 ;;  sw              1    wreg     unsigned char 
 17135 ;; Auto vars:     Size  Location     Type
 17136 ;;  sw              1    1[BANK0 ] unsigned char 
 17137 ;; Return value:  Size  Location     Type
 17138 ;;		None               void
 17139 ;; Registers used:
 17140 ;;		wreg
 17141 ;; Tracked objects:
 17142 ;;		On entry : 0/0
 17143 ;;		On exit  : 0/0
 17144 ;;		Unchanged: 0/0
 17145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17150 ;;Total ram usage:        2 bytes
 17151 ;; Hardware stack levels used:    1
 17152 ;; Hardware stack levels required when called:    4
 17153 ;; This function calls:
 17154 ;;		Nothing
 17155 ;; This function is called by:
 17156 ;;		_DlyOff_Initialization
 17157 ;;		_DlyOff_Main
 17158 ;;		_setDelayOff_GO
 17159 ;; This function uses a non-reentrant model
 17160 ;;
 17161                           
 17162                           
 17163                           ;psect for function _DelayOffPointSelect
 17164  196C                     _DelayOffPointSelect:	
 17165                           
 17166                           ;incstack = 0
 17167                           ; Regs used in _DelayOffPointSelect: [wreg]
 17168                           ;DelayOffPointSelect@sw stored from wreg
 17169  196C  0020               	movlb	0	; select bank0
 17170  196D  00A1               	movwf	DelayOffPointSelect@sw
 17171                           
 17172                           ;DelayOff_B1.c: 11: if(sw == 1)
 17173  196E  0821               	movf	DelayOffPointSelect@sw,w
 17174  196F  3A01               	xorlw	1
 17175  1970  1D03               	skipz
 17176  1971  2978               	goto	l5969
 17177                           
 17178                           ;DelayOff_B1.c: 12: {
 17179                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 17180  1972  30CB               	movlw	_DlySw1& (0+255)
 17181  1973  00A0               	movwf	??_DelayOffPointSelect
 17182  1974  0820               	movf	??_DelayOffPointSelect,w
 17183  1975  0021               	movlb	1	; select bank1
 17184  1976  00B8               	movwf	_DelayOff^(0+128)
 17185                           
 17186                           ;DelayOff_B1.c: 14: }
 17187  1977  0008               	return
 17188  1978                     l5969:	
 17189                           
 17190                           ;DelayOff_B1.c: 17: else if(sw == 2)
 17191  1978  0020               	movlb	0	; select bank0
 17192  1979  0821               	movf	DelayOffPointSelect@sw,w
 17193  197A  3A02               	xorlw	2
 17194  197B  1D03               	skipz
 17195  197C  0008               	return
 17196                           
 17197                           ;DelayOff_B1.c: 18: {
 17198                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 17199  197D  30D0               	movlw	_DlySw2& (0+255)
 17200  197E  00A0               	movwf	??_DelayOffPointSelect
 17201  197F  0820               	movf	??_DelayOffPointSelect,w
 17202  1980  0021               	movlb	1	; select bank1
 17203  1981  00B8               	movwf	_DelayOff^(0+128)
 17204  1982  0008               	return
 17205  1983                     __end_of_DelayOffPointSelect:	
 17206                           
 17207                           	psect	text105
 17208  18C0                     __ptext105:	
 17209 ;; *************** function _CC2500_PowerOnInitial *****************
 17210 ;; Defined at:
 17211 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17212 ;; Parameters:    Size  Location     Type
 17213 ;;		None
 17214 ;; Auto vars:     Size  Location     Type
 17215 ;;		None
 17216 ;; Return value:  Size  Location     Type
 17217 ;;		None               void
 17218 ;; Registers used:
 17219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17220 ;; Tracked objects:
 17221 ;;		On entry : 0/0
 17222 ;;		On exit  : 0/0
 17223 ;;		Unchanged: 0/0
 17224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17229 ;;Total ram usage:        0 bytes
 17230 ;; Hardware stack levels used:    1
 17231 ;; Hardware stack levels required when called:    7
 17232 ;; This function calls:
 17233 ;;		_CC2500_ClearRXFIFO
 17234 ;;		_CC2500_ClearTXFIFO
 17235 ;;		_CC2500_FrequencyCabr
 17236 ;;		_CC2500_InitPATable
 17237 ;;		_CC2500_InitSetREG
 17238 ;;		_CC2500_PowerRST
 17239 ;;		_CC2500_SIDLEMode
 17240 ;; This function is called by:
 17241 ;;		_main
 17242 ;; This function uses a non-reentrant model
 17243 ;;
 17244                           
 17245                           
 17246                           ;psect for function _CC2500_PowerOnInitial
 17247  18C0                     _CC2500_PowerOnInitial:	
 17248                           
 17249                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 17250                           
 17251                           ;incstack = 0
 17252                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17253  18C0  319C  24EC  3198   	fcall	_CC2500_PowerRST
 17254                           
 17255                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 17256  18C3  319B  23E3  3198   	fcall	_CC2500_InitSetREG
 17257                           
 17258                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 17259  18C6  319A  22A8  3198   	fcall	_CC2500_InitPATable
 17260                           
 17261                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 17262  18C9  31A6  2654  3198   	fcall	_CC2500_ClearTXFIFO
 17263                           
 17264                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 17265  18CC  31A6  2650  3198   	fcall	_CC2500_ClearRXFIFO
 17266                           
 17267                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 17268  18CF  31A7  2712  3198   	fcall	_CC2500_FrequencyCabr
 17269                           
 17270                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 17271  18D2  31A6  2658         	fcall	_CC2500_SIDLEMode
 17272  18D4  0008               	return
 17273  18D5                     __end_of_CC2500_PowerOnInitial:	
 17274                           
 17275                           	psect	text106
 17276  2658                     __ptext106:	
 17277 ;; *************** function _CC2500_SIDLEMode *****************
 17278 ;; Defined at:
 17279 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;		None
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;		None
 17284 ;; Return value:  Size  Location     Type
 17285 ;;		None               void
 17286 ;; Registers used:
 17287 ;;		wreg, status,2, status,0, pclath, cstack
 17288 ;; Tracked objects:
 17289 ;;		On entry : 0/0
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17297 ;;Total ram usage:        0 bytes
 17298 ;; Hardware stack levels used:    1
 17299 ;; Hardware stack levels required when called:    6
 17300 ;; This function calls:
 17301 ;;		_CC2500_WriteCommand
 17302 ;; This function is called by:
 17303 ;;		_CC2500_PowerOnInitial
 17304 ;; This function uses a non-reentrant model
 17305 ;;
 17306                           
 17307                           
 17308                           ;psect for function _CC2500_SIDLEMode
 17309  2658                     _CC2500_SIDLEMode:	
 17310                           
 17311                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 17312                           
 17313                           ;incstack = 0
 17314                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 17315  2658  3036               	movlw	54
 17316  2659  31A7  27B0         	fcall	_CC2500_WriteCommand
 17317  265B  0008               	return
 17318  265C                     __end_of_CC2500_SIDLEMode:	
 17319                           
 17320                           	psect	text107
 17321  1CEC                     __ptext107:	
 17322 ;; *************** function _CC2500_PowerRST *****************
 17323 ;; Defined at:
 17324 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17325 ;; Parameters:    Size  Location     Type
 17326 ;;		None
 17327 ;; Auto vars:     Size  Location     Type
 17328 ;;		None
 17329 ;; Return value:  Size  Location     Type
 17330 ;;		None               void
 17331 ;; Registers used:
 17332 ;;		wreg, status,2, status,0, pclath, cstack
 17333 ;; Tracked objects:
 17334 ;;		On entry : 0/0
 17335 ;;		On exit  : 0/0
 17336 ;;		Unchanged: 0/0
 17337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17341 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17342 ;;Total ram usage:        1 bytes
 17343 ;; Hardware stack levels used:    1
 17344 ;; Hardware stack levels required when called:    5
 17345 ;; This function calls:
 17346 ;;		_CC2500_WriteByte
 17347 ;;		_DelayTime_1us
 17348 ;; This function is called by:
 17349 ;;		_CC2500_PowerOnInitial
 17350 ;; This function uses a non-reentrant model
 17351 ;;
 17352                           
 17353                           
 17354                           ;psect for function _CC2500_PowerRST
 17355  1CEC                     _CC2500_PowerRST:	
 17356                           
 17357                           ;CC2500_B1.c: 112: RC1=0;
 17358                           
 17359                           ;incstack = 0
 17360                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 17361  1CEC  0020               	movlb	0	; select bank0
 17362  1CED  108E               	bcf	14,1	;volatile
 17363                           
 17364                           ;CC2500_B1.c: 113: RC0=0;
 17365  1CEE  100E               	bcf	14,0	;volatile
 17366                           
 17367                           ;CC2500_B1.c: 114: RC4=1;
 17368  1CEF  160E               	bsf	14,4	;volatile
 17369                           
 17370                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 17371  1CF0  300A               	movlw	10
 17372  1CF1  00A0               	movwf	DelayTime_1us@count
 17373  1CF2  3000               	movlw	0
 17374  1CF3  00A1               	movwf	DelayTime_1us@count+1
 17375  1CF4  319B  2370  319C   	fcall	_DelayTime_1us
 17376                           
 17377                           ;CC2500_B1.c: 116: RC4=0;
 17378  1CF7  0020               	movlb	0	; select bank0
 17379  1CF8  120E               	bcf	14,4	;volatile
 17380                           
 17381                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 17382  1CF9  300A               	movlw	10
 17383  1CFA  00A0               	movwf	DelayTime_1us@count
 17384  1CFB  3000               	movlw	0
 17385  1CFC  00A1               	movwf	DelayTime_1us@count+1
 17386  1CFD  319B  2370  319C   	fcall	_DelayTime_1us
 17387                           
 17388                           ;CC2500_B1.c: 118: RC4=1;
 17389  1D00  0020               	movlb	0	; select bank0
 17390  1D01  160E               	bsf	14,4	;volatile
 17391                           
 17392                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 17393  1D02  3028               	movlw	40
 17394  1D03  00A0               	movwf	DelayTime_1us@count
 17395  1D04  3000               	movlw	0
 17396  1D05  00A1               	movwf	DelayTime_1us@count+1
 17397  1D06  319B  2370  319C   	fcall	_DelayTime_1us
 17398                           
 17399                           ;CC2500_B1.c: 120: RC4=0;
 17400  1D09  0020               	movlb	0	; select bank0
 17401  1D0A  120E               	bcf	14,4	;volatile
 17402                           
 17403                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 17404  1D0B  3030               	movlw	48
 17405  1D0C  00A6               	movwf	??_CC2500_PowerRST
 17406  1D0D  0826               	movf	??_CC2500_PowerRST,w
 17407  1D0E  0021               	movlb	1	; select bank1
 17408  1D0F  00BF               	movwf	_SPI0Buffer^(0+128)
 17409  1D10                     l324:	
 17410                           ;CC2500_B1.c: 122: while(RC2==1);
 17411                           
 17412  1D10  0020               	movlb	0	; select bank0
 17413  1D11  190E               	btfsc	14,2	;volatile
 17414  1D12  2D10               	goto	l324
 17415                           
 17416                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 17417  1D13  3199  219A  319C   	fcall	_CC2500_WriteByte
 17418  1D16                     l327:	
 17419                           ;CC2500_B1.c: 124: while(RC2==1);
 17420                           
 17421  1D16  0020               	movlb	0	; select bank0
 17422  1D17  190E               	btfsc	14,2	;volatile
 17423  1D18  2D16               	goto	l327
 17424                           
 17425                           ;CC2500_B1.c: 125: RC0=0;
 17426  1D19  100E               	bcf	14,0	;volatile
 17427                           
 17428                           ;CC2500_B1.c: 126: RC4=1;
 17429  1D1A  160E               	bsf	14,4	;volatile
 17430  1D1B  0008               	return
 17431  1D1C                     __end_of_CC2500_PowerRST:	
 17432                           
 17433                           	psect	text108
 17434  1BE3                     __ptext108:	
 17435 ;; *************** function _CC2500_InitSetREG *****************
 17436 ;; Defined at:
 17437 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17438 ;; Parameters:    Size  Location     Type
 17439 ;;		None
 17440 ;; Auto vars:     Size  Location     Type
 17441 ;;  loop_c          1    8[BANK0 ] unsigned char 
 17442 ;;  temp2           1    7[BANK0 ] unsigned char 
 17443 ;;  temp1           1    6[BANK0 ] unsigned char 
 17444 ;; Return value:  Size  Location     Type
 17445 ;;		None               void
 17446 ;; Registers used:
 17447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17448 ;; Tracked objects:
 17449 ;;		On entry : 0/0
 17450 ;;		On exit  : 0/0
 17451 ;;		Unchanged: 0/0
 17452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17454 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17455 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17456 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17457 ;;Total ram usage:        4 bytes
 17458 ;; Hardware stack levels used:    1
 17459 ;; Hardware stack levels required when called:    6
 17460 ;; This function calls:
 17461 ;;		_CC2500_WriteREG
 17462 ;; This function is called by:
 17463 ;;		_CC2500_PowerOnInitial
 17464 ;; This function uses a non-reentrant model
 17465 ;;
 17466                           
 17467                           
 17468                           ;psect for function _CC2500_InitSetREG
 17469  1BE3                     _CC2500_InitSetREG:	
 17470                           
 17471                           ;CC2500_B1.c: 133: unsigned char loop_c;
 17472                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 17473                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 17474                           
 17475                           ;incstack = 0
 17476                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17477  1BE3  0020               	movlb	0	; select bank0
 17478  1BE4  01A8               	clrf	CC2500_InitSetREG@loop_c
 17479  1BE5                     L15:	
 17480  1BE5  302F               	movlw	47
 17481  1BE6  0228               	subwf	CC2500_InitSetREG@loop_c,w
 17482  1BE7  1803               	btfsc	3,0
 17483  1BE8  0008               	return
 17484                           
 17485                           ;CC2500_B1.c: 137: {
 17486                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 17487  1BE9  0828               	movf	CC2500_InitSetREG@loop_c,w
 17488  1BEA  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 17489  1BEB  0084               	movwf	4
 17490  1BEC  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 17491  1BED  1803               	skipnc
 17492  1BEE  3E01               	addlw	1
 17493  1BEF  0085               	movwf	5
 17494  1BF0  0800               	movf	0,w	;code access
 17495  1BF1  00A5               	movwf	??_CC2500_InitSetREG
 17496  1BF2  0825               	movf	??_CC2500_InitSetREG,w
 17497  1BF3  00A6               	movwf	CC2500_InitSetREG@temp1
 17498                           
 17499                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 17500  1BF4  0828               	movf	CC2500_InitSetREG@loop_c,w
 17501  1BF5  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 17502  1BF6  0084               	movwf	4
 17503  1BF7  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 17504  1BF8  1803               	skipnc
 17505  1BF9  3E01               	addlw	1
 17506  1BFA  0085               	movwf	5
 17507  1BFB  0800               	movf	0,w	;code access
 17508  1BFC  00A5               	movwf	??_CC2500_InitSetREG
 17509  1BFD  0825               	movf	??_CC2500_InitSetREG,w
 17510  1BFE  00A7               	movwf	CC2500_InitSetREG@temp2
 17511                           
 17512                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 17513  1BFF  0827               	movf	CC2500_InitSetREG@temp2,w
 17514  1C00  00A5               	movwf	??_CC2500_InitSetREG
 17515  1C01  0825               	movf	??_CC2500_InitSetREG,w
 17516  1C02  00A2               	movwf	CC2500_WriteREG@value
 17517  1C03  0826               	movf	CC2500_InitSetREG@temp1,w
 17518  1C04  3199  21B3  319B   	fcall	_CC2500_WriteREG
 17519  1C07  3001               	movlw	1
 17520  1C08  0020               	movlb	0	; select bank0
 17521  1C09  00A5               	movwf	??_CC2500_InitSetREG
 17522  1C0A  0825               	movf	??_CC2500_InitSetREG,w
 17523  1C0B  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 17524  1C0C  2BE5               	goto	L15
 17525  1C0D                     __end_of_CC2500_InitSetREG:	
 17526                           
 17527                           	psect	text109
 17528  1AA8                     __ptext109:	
 17529 ;; *************** function _CC2500_InitPATable *****************
 17530 ;; Defined at:
 17531 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;		None
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;  loop_d          1    7[BANK0 ] unsigned char 
 17536 ;;  temp            1    6[BANK0 ] unsigned char 
 17537 ;; Return value:  Size  Location     Type
 17538 ;;		None               void
 17539 ;; Registers used:
 17540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17541 ;; Tracked objects:
 17542 ;;		On entry : 0/0
 17543 ;;		On exit  : 0/0
 17544 ;;		Unchanged: 0/0
 17545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17550 ;;Total ram usage:        3 bytes
 17551 ;; Hardware stack levels used:    1
 17552 ;; Hardware stack levels required when called:    6
 17553 ;; This function calls:
 17554 ;;		_CC2500_WriteREG
 17555 ;; This function is called by:
 17556 ;;		_CC2500_PowerOnInitial
 17557 ;; This function uses a non-reentrant model
 17558 ;;
 17559                           
 17560                           
 17561                           ;psect for function _CC2500_InitPATable
 17562  1AA8                     _CC2500_InitPATable:	
 17563                           
 17564                           ;CC2500_B1.c: 149: unsigned char loop_d;
 17565                           ;CC2500_B1.c: 150: unsigned char temp;
 17566                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 17567                           
 17568                           ;incstack = 0
 17569                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17570  1AA8  0020               	movlb	0	; select bank0
 17571  1AA9  01A7               	clrf	CC2500_InitPATable@loop_d
 17572  1AAA                     L16:	
 17573  1AAA  3008               	movlw	8
 17574  1AAB  0227               	subwf	CC2500_InitPATable@loop_d,w
 17575  1AAC  1803               	btfsc	3,0
 17576  1AAD  0008               	return
 17577                           
 17578                           ;CC2500_B1.c: 153: {
 17579                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 17580  1AAE  0827               	movf	CC2500_InitPATable@loop_d,w
 17581  1AAF  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 17582  1AB0  0084               	movwf	4
 17583  1AB1  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 17584  1AB2  1803               	skipnc
 17585  1AB3  3E01               	addlw	1
 17586  1AB4  0085               	movwf	5
 17587  1AB5  0800               	movf	0,w	;code access
 17588  1AB6  00A5               	movwf	??_CC2500_InitPATable
 17589  1AB7  0825               	movf	??_CC2500_InitPATable,w
 17590  1AB8  00A6               	movwf	CC2500_InitPATable@temp
 17591                           
 17592                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 17593  1AB9  0826               	movf	CC2500_InitPATable@temp,w
 17594  1ABA  00A5               	movwf	??_CC2500_InitPATable
 17595  1ABB  0825               	movf	??_CC2500_InitPATable,w
 17596  1ABC  00A2               	movwf	CC2500_WriteREG@value
 17597  1ABD  303E               	movlw	62
 17598  1ABE  3199  21B3  319A   	fcall	_CC2500_WriteREG
 17599  1AC1  3001               	movlw	1
 17600  1AC2  0020               	movlb	0	; select bank0
 17601  1AC3  00A5               	movwf	??_CC2500_InitPATable
 17602  1AC4  0825               	movf	??_CC2500_InitPATable,w
 17603  1AC5  07A7               	addwf	CC2500_InitPATable@loop_d,f
 17604  1AC6  2AAA               	goto	L16
 17605  1AC7                     __end_of_CC2500_InitPATable:	
 17606                           
 17607                           	psect	text110
 17608  19B3                     __ptext110:	
 17609 ;; *************** function _CC2500_WriteREG *****************
 17610 ;; Defined at:
 17611 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17612 ;; Parameters:    Size  Location     Type
 17613 ;;  w_addr          1    wreg     unsigned char 
 17614 ;;  value           1    2[BANK0 ] unsigned char 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;  w_addr          1    4[BANK0 ] unsigned char 
 17617 ;; Return value:  Size  Location     Type
 17618 ;;		None               void
 17619 ;; Registers used:
 17620 ;;		wreg, status,2, status,0, pclath, cstack
 17621 ;; Tracked objects:
 17622 ;;		On entry : 0/0
 17623 ;;		On exit  : 0/0
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17626 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17628 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17629 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17630 ;;Total ram usage:        3 bytes
 17631 ;; Hardware stack levels used:    1
 17632 ;; Hardware stack levels required when called:    5
 17633 ;; This function calls:
 17634 ;;		_CC2500_WriteByte
 17635 ;; This function is called by:
 17636 ;;		_CC2500_InitSetREG
 17637 ;;		_CC2500_InitPATable
 17638 ;; This function uses a non-reentrant model
 17639 ;;
 17640                           
 17641                           
 17642                           ;psect for function _CC2500_WriteREG
 17643  19B3                     _CC2500_WriteREG:	
 17644                           
 17645                           ;incstack = 0
 17646                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 17647                           ;CC2500_WriteREG@w_addr stored from wreg
 17648  19B3  0020               	movlb	0	; select bank0
 17649  19B4  00A4               	movwf	CC2500_WriteREG@w_addr
 17650                           
 17651                           ;CC2500_B1.c: 229: RC4=0;
 17652  19B5  120E               	bcf	14,4	;volatile
 17653                           
 17654                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 17655  19B6  0824               	movf	CC2500_WriteREG@w_addr,w
 17656  19B7  00A3               	movwf	??_CC2500_WriteREG
 17657  19B8  0823               	movf	??_CC2500_WriteREG,w
 17658  19B9  0021               	movlb	1	; select bank1
 17659  19BA  00BF               	movwf	_SPI0Buffer^(0+128)
 17660  19BB                     l369:	
 17661                           ;CC2500_B1.c: 231: while(RC2==1);
 17662                           
 17663  19BB  0020               	movlb	0	; select bank0
 17664  19BC  190E               	btfsc	14,2	;volatile
 17665  19BD  29BB               	goto	l369
 17666                           
 17667                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 17668  19BE  3199  219A  3199   	fcall	_CC2500_WriteByte
 17669                           
 17670                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 17671  19C1  0020               	movlb	0	; select bank0
 17672  19C2  0822               	movf	CC2500_WriteREG@value,w
 17673  19C3  00A3               	movwf	??_CC2500_WriteREG
 17674  19C4  0823               	movf	??_CC2500_WriteREG,w
 17675  19C5  0021               	movlb	1	; select bank1
 17676  19C6  00BF               	movwf	_SPI0Buffer^(0+128)
 17677                           
 17678                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 17679  19C7  3199  219A         	fcall	_CC2500_WriteByte
 17680                           
 17681                           ;CC2500_B1.c: 235: RC4=1;
 17682  19C9  0020               	movlb	0	; select bank0
 17683  19CA  160E               	bsf	14,4	;volatile
 17684  19CB  0008               	return
 17685  19CC                     __end_of_CC2500_WriteREG:	
 17686                           
 17687                           	psect	text111
 17688  2712                     __ptext111:	
 17689 ;; *************** function _CC2500_FrequencyCabr *****************
 17690 ;; Defined at:
 17691 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;		None
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;		None
 17696 ;; Return value:  Size  Location     Type
 17697 ;;		None               void
 17698 ;; Registers used:
 17699 ;;		wreg, status,2, status,0, pclath, cstack
 17700 ;; Tracked objects:
 17701 ;;		On entry : 0/0
 17702 ;;		On exit  : 0/0
 17703 ;;		Unchanged: 0/0
 17704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17709 ;;Total ram usage:        0 bytes
 17710 ;; Hardware stack levels used:    1
 17711 ;; Hardware stack levels required when called:    6
 17712 ;; This function calls:
 17713 ;;		_CC2500_WriteCommand
 17714 ;;		_DelayTime_1us
 17715 ;; This function is called by:
 17716 ;;		_CC2500_PowerOnInitial
 17717 ;; This function uses a non-reentrant model
 17718 ;;
 17719                           
 17720                           
 17721                           ;psect for function _CC2500_FrequencyCabr
 17722  2712                     _CC2500_FrequencyCabr:	
 17723                           
 17724                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 17725                           
 17726                           ;incstack = 0
 17727                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 17728  2712  3033               	movlw	51
 17729  2713  31A7  27B0  31A7   	fcall	_CC2500_WriteCommand
 17730                           
 17731                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 17732  2716  30E8               	movlw	232
 17733  2717  0020               	movlb	0	; select bank0
 17734  2718  00A0               	movwf	DelayTime_1us@count
 17735  2719  3003               	movlw	3
 17736  271A  00A1               	movwf	DelayTime_1us@count+1
 17737  271B  319B  2370         	fcall	_DelayTime_1us
 17738  271D  0008               	return
 17739  271E                     __end_of_CC2500_FrequencyCabr:	
 17740                           
 17741                           	psect	text112
 17742  1B70                     __ptext112:	
 17743 ;; *************** function _DelayTime_1us *****************
 17744 ;; Defined at:
 17745 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17746 ;; Parameters:    Size  Location     Type
 17747 ;;  count           2    0[BANK0 ] int 
 17748 ;; Auto vars:     Size  Location     Type
 17749 ;;  j               2    4[BANK0 ] unsigned int 
 17750 ;;  i               2    2[BANK0 ] unsigned int 
 17751 ;; Return value:  Size  Location     Type
 17752 ;;		None               void
 17753 ;; Registers used:
 17754 ;;		wreg, status,2
 17755 ;; Tracked objects:
 17756 ;;		On entry : 0/0
 17757 ;;		On exit  : 0/0
 17758 ;;		Unchanged: 0/0
 17759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17761 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17763 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17764 ;;Total ram usage:        6 bytes
 17765 ;; Hardware stack levels used:    1
 17766 ;; Hardware stack levels required when called:    4
 17767 ;; This function calls:
 17768 ;;		Nothing
 17769 ;; This function is called by:
 17770 ;;		_CC2500_PowerRST
 17771 ;;		_CC2500_FrequencyCabr
 17772 ;; This function uses a non-reentrant model
 17773 ;;
 17774                           
 17775                           
 17776                           ;psect for function _DelayTime_1us
 17777  1B70                     _DelayTime_1us:	
 17778                           
 17779                           ;CC2500_B1.c: 285: unsigned int i,j;
 17780                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 17781                           
 17782                           ;incstack = 0
 17783                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 17784  1B70  3001               	movlw	1
 17785  1B71  0020               	movlb	0	; select bank0
 17786  1B72  00A2               	movwf	DelayTime_1us@i
 17787  1B73  3000               	movlw	0
 17788  1B74  00A3               	movwf	DelayTime_1us@i+1
 17789  1B75                     l393:	
 17790  1B75  0821               	movf	DelayTime_1us@count+1,w
 17791  1B76  0223               	subwf	DelayTime_1us@i+1,w
 17792  1B77  1D03               	skipz
 17793  1B78  2B7B               	goto	u8055
 17794  1B79  0820               	movf	DelayTime_1us@count,w
 17795  1B7A  0222               	subwf	DelayTime_1us@i,w
 17796  1B7B                     u8055:	
 17797  1B7B  1803               	btfsc	3,0
 17798  1B7C  0008               	return
 17799                           
 17800                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 17801  1B7D  01A4               	clrf	DelayTime_1us@j
 17802  1B7E  01A5               	clrf	DelayTime_1us@j+1
 17803  1B7F  3000               	movlw	0
 17804  1B80  0225               	subwf	DelayTime_1us@j+1,w
 17805  1B81  3002               	movlw	2
 17806  1B82  1903               	skipnz
 17807  1B83  0224               	subwf	DelayTime_1us@j,w
 17808  1B84  1803               	btfsc	3,0
 17809  1B85  2B91               	goto	l8413
 17810  1B86                     l8411:	
 17811  1B86  3001               	movlw	1
 17812  1B87  07A4               	addwf	DelayTime_1us@j,f
 17813  1B88  3000               	movlw	0
 17814  1B89  3DA5               	addwfc	DelayTime_1us@j+1,f
 17815  1B8A  3000               	movlw	0
 17816  1B8B  0225               	subwf	DelayTime_1us@j+1,w
 17817  1B8C  3002               	movlw	2
 17818  1B8D  1903               	skipnz
 17819  1B8E  0224               	subwf	DelayTime_1us@j,w
 17820  1B8F  1C03               	skipc
 17821  1B90  2B86               	goto	l8411
 17822  1B91                     l8413:	
 17823  1B91  3001               	movlw	1
 17824  1B92  07A2               	addwf	DelayTime_1us@i,f
 17825  1B93  3000               	movlw	0
 17826  1B94  3DA3               	addwfc	DelayTime_1us@i+1,f
 17827  1B95  2B75               	goto	l393
 17828  1B96                     __end_of_DelayTime_1us:	
 17829                           
 17830                           	psect	text113
 17831  2654                     __ptext113:	
 17832 ;; *************** function _CC2500_ClearTXFIFO *****************
 17833 ;; Defined at:
 17834 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17835 ;; Parameters:    Size  Location     Type
 17836 ;;		None
 17837 ;; Auto vars:     Size  Location     Type
 17838 ;;		None
 17839 ;; Return value:  Size  Location     Type
 17840 ;;		None               void
 17841 ;; Registers used:
 17842 ;;		wreg, status,2, status,0, pclath, cstack
 17843 ;; Tracked objects:
 17844 ;;		On entry : 0/0
 17845 ;;		On exit  : 0/0
 17846 ;;		Unchanged: 0/0
 17847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17852 ;;Total ram usage:        0 bytes
 17853 ;; Hardware stack levels used:    1
 17854 ;; Hardware stack levels required when called:    6
 17855 ;; This function calls:
 17856 ;;		_CC2500_WriteCommand
 17857 ;; This function is called by:
 17858 ;;		_CC2500_PowerOnInitial
 17859 ;; This function uses a non-reentrant model
 17860 ;;
 17861                           
 17862                           
 17863                           ;psect for function _CC2500_ClearTXFIFO
 17864  2654                     _CC2500_ClearTXFIFO:	
 17865                           
 17866                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 17867                           
 17868                           ;incstack = 0
 17869                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17870  2654  303B               	movlw	59
 17871  2655  31A7  27B0         	fcall	_CC2500_WriteCommand
 17872  2657  0008               	return
 17873  2658                     __end_of_CC2500_ClearTXFIFO:	
 17874                           
 17875                           	psect	text114
 17876  2650                     __ptext114:	
 17877 ;; *************** function _CC2500_ClearRXFIFO *****************
 17878 ;; Defined at:
 17879 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17880 ;; Parameters:    Size  Location     Type
 17881 ;;		None
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;		None
 17884 ;; Return value:  Size  Location     Type
 17885 ;;		None               void
 17886 ;; Registers used:
 17887 ;;		wreg, status,2, status,0, pclath, cstack
 17888 ;; Tracked objects:
 17889 ;;		On entry : 0/0
 17890 ;;		On exit  : 0/0
 17891 ;;		Unchanged: 0/0
 17892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17897 ;;Total ram usage:        0 bytes
 17898 ;; Hardware stack levels used:    1
 17899 ;; Hardware stack levels required when called:    6
 17900 ;; This function calls:
 17901 ;;		_CC2500_WriteCommand
 17902 ;; This function is called by:
 17903 ;;		_CC2500_PowerOnInitial
 17904 ;; This function uses a non-reentrant model
 17905 ;;
 17906                           
 17907                           
 17908                           ;psect for function _CC2500_ClearRXFIFO
 17909  2650                     _CC2500_ClearRXFIFO:	
 17910                           
 17911                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 17912                           
 17913                           ;incstack = 0
 17914                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17915  2650  303A               	movlw	58
 17916  2651  31A7  27B0         	fcall	_CC2500_WriteCommand
 17917  2653  0008               	return
 17918  2654                     __end_of_CC2500_ClearRXFIFO:	
 17919                           
 17920                           	psect	text115
 17921  27B0                     __ptext115:	
 17922 ;; *************** function _CC2500_WriteCommand *****************
 17923 ;; Defined at:
 17924 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17925 ;; Parameters:    Size  Location     Type
 17926 ;;  command         1    wreg     unsigned char 
 17927 ;; Auto vars:     Size  Location     Type
 17928 ;;  command         1    3[BANK0 ] unsigned char 
 17929 ;; Return value:  Size  Location     Type
 17930 ;;		None               void
 17931 ;; Registers used:
 17932 ;;		wreg, status,2, status,0, pclath, cstack
 17933 ;; Tracked objects:
 17934 ;;		On entry : 0/0
 17935 ;;		On exit  : 0/0
 17936 ;;		Unchanged: 0/0
 17937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17941 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17942 ;;Total ram usage:        2 bytes
 17943 ;; Hardware stack levels used:    1
 17944 ;; Hardware stack levels required when called:    5
 17945 ;; This function calls:
 17946 ;;		_CC2500_WriteByte
 17947 ;; This function is called by:
 17948 ;;		_CC2500_TxData
 17949 ;;		_CC2500_RxData
 17950 ;;		_CC2500_ClearTXFIFO
 17951 ;;		_CC2500_ClearRXFIFO
 17952 ;;		_CC2500_FrequencyCabr
 17953 ;;		_CC2500_SIDLEMode
 17954 ;;		_setRF_Main
 17955 ;;		_RF_RxDisable
 17956 ;; This function uses a non-reentrant model
 17957 ;;
 17958                           
 17959                           
 17960                           ;psect for function _CC2500_WriteCommand
 17961  27B0                     _CC2500_WriteCommand:	
 17962                           
 17963                           ;incstack = 0
 17964                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 17965                           ;CC2500_WriteCommand@command stored from wreg
 17966  27B0  0020               	movlb	0	; select bank0
 17967  27B1  00A3               	movwf	CC2500_WriteCommand@command
 17968                           
 17969                           ;CC2500_B1.c: 255: RC4=0;
 17970  27B2  120E               	bcf	14,4	;volatile
 17971                           
 17972                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 17973  27B3  0823               	movf	CC2500_WriteCommand@command,w
 17974  27B4  00A2               	movwf	??_CC2500_WriteCommand
 17975  27B5  0822               	movf	??_CC2500_WriteCommand,w
 17976  27B6  0021               	movlb	1	; select bank1
 17977  27B7  00BF               	movwf	_SPI0Buffer^(0+128)
 17978  27B8                     l381:	
 17979                           ;CC2500_B1.c: 258: while(RC2==1);
 17980                           
 17981  27B8  0020               	movlb	0	; select bank0
 17982  27B9  190E               	btfsc	14,2	;volatile
 17983  27BA  2FB8               	goto	l381
 17984                           
 17985                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 17986  27BB  3199  219A         	fcall	_CC2500_WriteByte
 17987                           
 17988                           ;CC2500_B1.c: 261: RC4=1;
 17989  27BD  0020               	movlb	0	; select bank0
 17990  27BE  160E               	bsf	14,4	;volatile
 17991  27BF  0008               	return
 17992  27C0                     __end_of_CC2500_WriteCommand:	
 17993                           
 17994                           	psect	text116
 17995  199A                     __ptext116:	
 17996 ;; *************** function _CC2500_WriteByte *****************
 17997 ;; Defined at:
 17998 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17999 ;; Parameters:    Size  Location     Type
 18000 ;;		None
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;  loop_a          1    1[BANK0 ] unsigned char 
 18003 ;; Return value:  Size  Location     Type
 18004 ;;		None               void
 18005 ;; Registers used:
 18006 ;;		wreg, status,2, status,0
 18007 ;; Tracked objects:
 18008 ;;		On entry : 0/0
 18009 ;;		On exit  : 0/0
 18010 ;;		Unchanged: 0/0
 18011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18015 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18016 ;;Total ram usage:        2 bytes
 18017 ;; Hardware stack levels used:    1
 18018 ;; Hardware stack levels required when called:    4
 18019 ;; This function calls:
 18020 ;;		Nothing
 18021 ;; This function is called by:
 18022 ;;		_CC2500_TxData
 18023 ;;		_CC2500_RxData
 18024 ;;		_CC2500_PowerRST
 18025 ;;		_CC2500_WriteREG
 18026 ;;		_CC2500_WriteCommand
 18027 ;;		_CC2500_ReadStatus
 18028 ;;		_CC2500_ReadREG
 18029 ;; This function uses a non-reentrant model
 18030 ;;
 18031                           
 18032                           
 18033                           ;psect for function _CC2500_WriteByte
 18034  199A                     _CC2500_WriteByte:	
 18035                           
 18036                           ;CC2500_B1.c: 195: unsigned char loop_a;
 18037                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 18038                           
 18039                           ;incstack = 0
 18040                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 18041  199A  0020               	movlb	0	; select bank0
 18042  199B  01A1               	clrf	CC2500_WriteByte@loop_a
 18043  199C                     L17:	
 18044  199C  3008               	movlw	8
 18045  199D  0221               	subwf	CC2500_WriteByte@loop_a,w
 18046  199E  1803               	btfsc	3,0
 18047  199F  0008               	return
 18048                           
 18049                           ;CC2500_B1.c: 197: {
 18050                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 18051  19A0  0021               	movlb	1	; select bank1
 18052  19A1  1FBF               	btfss	_SPI0Buffer^(0+128),7
 18053  19A2  29A6               	goto	l357
 18054                           
 18055                           ;CC2500_B1.c: 199: RC0=1;
 18056  19A3  0020               	movlb	0	; select bank0
 18057  19A4  140E               	bsf	14,0	;volatile
 18058  19A5  29A8               	goto	l358
 18059  19A6                     l357:	
 18060                           
 18061                           ;CC2500_B1.c: 200: else
 18062                           ;CC2500_B1.c: 201: RC0=0;
 18063  19A6  0020               	movlb	0	; select bank0
 18064  19A7  100E               	bcf	14,0	;volatile
 18065  19A8                     l358:	
 18066                           
 18067                           ;CC2500_B1.c: 202: RC1=1;
 18068  19A8  148E               	bsf	14,1	;volatile
 18069                           
 18070                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 18071  19A9  1003               	clrc
 18072  19AA  0021               	movlb	1	; select bank1
 18073  19AB  0DBF               	rlf	_SPI0Buffer^(0+128),f
 18074                           
 18075                           ;CC2500_B1.c: 204: RC1=0;
 18076  19AC  0020               	movlb	0	; select bank0
 18077  19AD  108E               	bcf	14,1	;volatile
 18078  19AE  3001               	movlw	1
 18079  19AF  00A0               	movwf	??_CC2500_WriteByte
 18080  19B0  0820               	movf	??_CC2500_WriteByte,w
 18081  19B1  07A1               	addwf	CC2500_WriteByte@loop_a,f
 18082  19B2  299C               	goto	L17
 18083  19B3                     __end_of_CC2500_WriteByte:	
 18084                           
 18085                           	psect	text117
 18086  09FA                     __ptext117:	
 18087 ;; *************** function _Buzzer_Main *****************
 18088 ;; Defined at:
 18089 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 18090 ;; Parameters:    Size  Location     Type
 18091 ;;		None
 18092 ;; Auto vars:     Size  Location     Type
 18093 ;;		None
 18094 ;; Return value:  Size  Location     Type
 18095 ;;		None               void
 18096 ;; Registers used:
 18097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18098 ;; Tracked objects:
 18099 ;;		On entry : 0/0
 18100 ;;		On exit  : 0/0
 18101 ;;		Unchanged: 0/0
 18102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18105 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18106 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18107 ;;Total ram usage:        4 bytes
 18108 ;; Hardware stack levels used:    1
 18109 ;; Hardware stack levels required when called:    4
 18110 ;; This function calls:
 18111 ;;		Nothing
 18112 ;; This function is called by:
 18113 ;;		_main
 18114 ;; This function uses a non-reentrant model
 18115 ;;
 18116                           
 18117                           
 18118                           ;psect for function _Buzzer_Main
 18119  09FA                     _Buzzer_Main:	
 18120                           
 18121                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 18122                           
 18123                           ;incstack = 0
 18124                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 18125  09FA  0878               	movf	_Buz,w
 18126  09FB  0086               	movwf	6
 18127  09FC  3001               	movlw	1	; select bank2/3
 18128  09FD  0087               	movwf	7
 18129  09FE  1281               	bcf	1,5
 18130  09FF  0020               	movlb	0	; select bank0
 18131  0A00  198D               	btfsc	13,3	;volatile
 18132  0A01  1681               	bsf	1,5
 18133                           
 18134                           ;Buzzer_B1.c: 57: if(Buz->GO)
 18135  0A02  0878               	movf	_Buz,w
 18136  0A03  0086               	movwf	6
 18137  0A04  3001               	movlw	1	; select bank2/3
 18138  0A05  0087               	movwf	7
 18139  0A06  1C81               	btfss	1,1
 18140  0A07  0008               	return
 18141                           
 18142                           ;Buzzer_B1.c: 58: {
 18143                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 18144  0A08  0878               	movf	_Buz,w
 18145  0A09  3E06               	addlw	6
 18146  0A0A  0086               	movwf	6
 18147  0A0B  3001               	movlw	1	; select bank2/3
 18148  0A0C  0087               	movwf	7
 18149  0A0D  3F40               	moviw [0]fsr1
 18150  0A0E  0020               	movlb	0	; select bank0
 18151  0A0F  00A0               	movwf	??_Buzzer_Main
 18152  0A10  3F41               	moviw [1]fsr1
 18153  0A11  00A1               	movwf	??_Buzzer_Main+1
 18154  0A12  0A78               	incf	_Buz,w
 18155  0A13  0086               	movwf	6
 18156  0A14  3001               	movlw	1	; select bank2/3
 18157  0A15  0087               	movwf	7
 18158  0A16  3F40               	moviw [0]fsr1
 18159  0A17  00A2               	movwf	??_Buzzer_Main+2
 18160  0A18  3F41               	moviw [1]fsr1
 18161  0A19  00A3               	movwf	??_Buzzer_Main+3
 18162  0A1A  0821               	movf	??_Buzzer_Main+1,w
 18163  0A1B  0223               	subwf	??_Buzzer_Main+3,w
 18164  0A1C  1D03               	skipz
 18165  0A1D  2A20               	goto	u6465
 18166  0A1E  0820               	movf	??_Buzzer_Main,w
 18167  0A1F  0222               	subwf	??_Buzzer_Main+2,w
 18168  0A20                     u6465:	
 18169  0A20  1C03               	skipc
 18170  0A21  0008               	return
 18171                           
 18172                           ;Buzzer_B1.c: 61: {
 18173                           ;Buzzer_B1.c: 62: Buz->Time=0;
 18174  0A22  0A78               	incf	_Buz,w
 18175  0A23  0086               	movwf	6
 18176  0A24  3001               	movlw	1	; select bank2/3
 18177  0A25  0087               	movwf	7
 18178  0A26  3000               	movlw	0
 18179  0A27  3FC0               	movwi [0]fsr1
 18180  0A28  3FC1               	movwi [1]fsr1
 18181                           
 18182                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 18183  0A29  0878               	movf	_Buz,w
 18184  0A2A  0086               	movwf	6
 18185  0A2B  3001               	movlw	1	; select bank2/3
 18186  0A2C  0087               	movwf	7
 18187  0A2D  1A81               	btfsc	1,5
 18188  0A2E  2A94               	goto	l7365
 18189                           
 18190                           ;Buzzer_B1.c: 64: {
 18191                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 18192  0A2F  0878               	movf	_Buz,w
 18193  0A30  3E03               	addlw	3
 18194  0A31  0086               	movwf	6
 18195  0A32  3001               	movlw	1	; select bank2/3
 18196  0A33  0087               	movwf	7
 18197  0A34  0881               	movf	1,f
 18198  0A35  1D03               	skipz
 18199  0A36  2A8D               	goto	l7361
 18200                           
 18201                           ;Buzzer_B1.c: 66: {
 18202                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 18203  0A37  0878               	movf	_Buz,w
 18204  0A38  0086               	movwf	6
 18205  0A39  3001               	movlw	1	; select bank2/3
 18206  0A3A  0087               	movwf	7
 18207  0A3B  1D81               	btfss	1,3
 18208  0A3C  2A5F               	goto	l7353
 18209                           
 18210                           ;Buzzer_B1.c: 68: {
 18211                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 18212  0A3D  0878               	movf	_Buz,w
 18213  0A3E  0086               	movwf	6
 18214  0A3F  3001               	movlw	1	; select bank2/3
 18215  0A40  0087               	movwf	7
 18216  0A41  1181               	bcf	1,3
 18217                           
 18218                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 18219  0A42  0878               	movf	_Buz,w
 18220  0A43  3E04               	addlw	4
 18221  0A44  0086               	movwf	6
 18222  0A45  3001               	movlw	1	; select bank2/3
 18223  0A46  0087               	movwf	7
 18224  0A47  0801               	movf	1,w
 18225  0A48  00A0               	movwf	??_Buzzer_Main
 18226  0A49  0878               	movf	_Buz,w
 18227  0A4A  3E03               	addlw	3
 18228  0A4B  0086               	movwf	6
 18229  0A4C  3001               	movlw	1	; select bank2/3
 18230  0A4D  0087               	movwf	7
 18231  0A4E  0820               	movf	??_Buzzer_Main,w
 18232  0A4F  0081               	movwf	1
 18233                           
 18234                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 18235  0A50  0878               	movf	_Buz,w
 18236  0A51  3E08               	addlw	8
 18237  0A52  0086               	movwf	6
 18238  0A53  3001               	movlw	1	; select bank2/3
 18239  0A54  0087               	movwf	7
 18240  0A55  0878               	movf	_Buz,w
 18241  0A56  3E06               	addlw	6
 18242  0A57  0084               	movwf	4
 18243  0A58  3001               	movlw	1	; select bank2/3
 18244  0A59  0085               	movwf	5
 18245  0A5A  3F40               	moviw [0]fsr1
 18246  0A5B  3F80               	movwi [0]fsr0
 18247  0A5C  3F41               	moviw [1]fsr1
 18248  0A5D  3F81               	movwi [1]fsr0
 18249                           
 18250                           ;Buzzer_B1.c: 72: }
 18251  0A5E  0008               	return
 18252  0A5F                     l7353:	
 18253                           
 18254                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 18255  0A5F  0878               	movf	_Buz,w
 18256  0A60  0086               	movwf	6
 18257  0A61  3001               	movlw	1	; select bank2/3
 18258  0A62  0087               	movwf	7
 18259  0A63  1E01               	btfss	1,4
 18260  0A64  2A87               	goto	l7359
 18261                           
 18262                           ;Buzzer_B1.c: 74: {
 18263                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 18264  0A65  0878               	movf	_Buz,w
 18265  0A66  0086               	movwf	6
 18266  0A67  3001               	movlw	1	; select bank2/3
 18267  0A68  0087               	movwf	7
 18268  0A69  1201               	bcf	1,4
 18269                           
 18270                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 18271  0A6A  0878               	movf	_Buz,w
 18272  0A6B  3E05               	addlw	5
 18273  0A6C  0086               	movwf	6
 18274  0A6D  3001               	movlw	1	; select bank2/3
 18275  0A6E  0087               	movwf	7
 18276  0A6F  0801               	movf	1,w
 18277  0A70  00A0               	movwf	??_Buzzer_Main
 18278  0A71  0878               	movf	_Buz,w
 18279  0A72  3E03               	addlw	3
 18280  0A73  0086               	movwf	6
 18281  0A74  3001               	movlw	1	; select bank2/3
 18282  0A75  0087               	movwf	7
 18283  0A76  0820               	movf	??_Buzzer_Main,w
 18284  0A77  0081               	movwf	1
 18285                           
 18286                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 18287  0A78  0878               	movf	_Buz,w
 18288  0A79  3E0A               	addlw	10
 18289  0A7A  0086               	movwf	6
 18290  0A7B  3001               	movlw	1	; select bank2/3
 18291  0A7C  0087               	movwf	7
 18292  0A7D  0878               	movf	_Buz,w
 18293  0A7E  3E06               	addlw	6
 18294  0A7F  0084               	movwf	4
 18295  0A80  3001               	movlw	1	; select bank2/3
 18296  0A81  0085               	movwf	5
 18297  0A82  3F40               	moviw [0]fsr1
 18298  0A83  3F80               	movwi [0]fsr0
 18299  0A84  3F41               	moviw [1]fsr1
 18300  0A85  3F81               	movwi [1]fsr0
 18301                           
 18302                           ;Buzzer_B1.c: 78: }
 18303  0A86  0008               	return
 18304  0A87                     l7359:	
 18305                           
 18306                           ;Buzzer_B1.c: 79: else
 18307                           ;Buzzer_B1.c: 80: {
 18308                           ;Buzzer_B1.c: 81: Buz->GO=0;
 18309  0A87  0878               	movf	_Buz,w
 18310  0A88  0086               	movwf	6
 18311  0A89  3001               	movlw	1	; select bank2/3
 18312  0A8A  0087               	movwf	7
 18313  0A8B  1081               	bcf	1,1
 18314                           
 18315                           ;Buzzer_B1.c: 82: }
 18316                           ;Buzzer_B1.c: 83: }
 18317  0A8C  0008               	return
 18318  0A8D                     l7361:	
 18319                           
 18320                           ;Buzzer_B1.c: 84: else
 18321                           ;Buzzer_B1.c: 85: {
 18322                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 18323  0A8D  0878               	movf	_Buz,w
 18324  0A8E  0086               	movwf	6
 18325  0A8F  3001               	movlw	1	; select bank2/3
 18326  0A90  0087               	movwf	7
 18327  0A91  1681               	bsf	1,5
 18328                           
 18329                           ;Buzzer_B1.c: 88: RB3=1;
 18330  0A92  158D               	bsf	13,3	;volatile
 18331                           
 18332                           ;Buzzer_B1.c: 89: }
 18333                           ;Buzzer_B1.c: 90: }
 18334  0A93  0008               	return
 18335  0A94                     l7365:	
 18336                           
 18337                           ;Buzzer_B1.c: 91: else
 18338                           ;Buzzer_B1.c: 92: {
 18339                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 18340  0A94  0878               	movf	_Buz,w
 18341  0A95  0086               	movwf	6
 18342  0A96  3001               	movlw	1	; select bank2/3
 18343  0A97  0087               	movwf	7
 18344  0A98  1281               	bcf	1,5
 18345                           
 18346                           ;Buzzer_B1.c: 95: RB3=0;
 18347  0A99  118D               	bcf	13,3	;volatile
 18348                           
 18349                           ;Buzzer_B1.c: 97: Buz->Count--;
 18350  0A9A  0878               	movf	_Buz,w
 18351  0A9B  3E03               	addlw	3
 18352  0A9C  0086               	movwf	6
 18353  0A9D  3001               	movlw	1	; select bank2/3
 18354  0A9E  0087               	movwf	7
 18355  0A9F  3001               	movlw	1
 18356  0AA0  0281               	subwf	1,f
 18357  0AA1  0008               	return
 18358  0AA2                     __end_of_Buzzer_Main:	
 18359                           
 18360                           	psect	text118
 18361  26C3                     __ptext118:	
 18362 ;; *************** function _Buzzer_Initialization *****************
 18363 ;; Defined at:
 18364 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;		None
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;		None
 18369 ;; Return value:  Size  Location     Type
 18370 ;;		None               void
 18371 ;; Registers used:
 18372 ;;		wreg, fsr1l, fsr1h
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18381 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18382 ;;Total ram usage:        1 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; Hardware stack levels required when called:    4
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_main
 18389 ;; This function uses a non-reentrant model
 18390 ;;
 18391                           
 18392                           
 18393                           ;psect for function _Buzzer_Initialization
 18394  26C3                     _Buzzer_Initialization:	
 18395                           
 18396                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 18397                           
 18398                           ;incstack = 0
 18399                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 18400  26C3  304C               	movlw	_Buz1& (0+255)
 18401  26C4  0020               	movlb	0	; select bank0
 18402  26C5  00A0               	movwf	??_Buzzer_Initialization
 18403  26C6  0820               	movf	??_Buzzer_Initialization,w
 18404  26C7  00F8               	movwf	_Buz
 18405                           
 18406                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 18407  26C8  0878               	movf	_Buz,w
 18408  26C9  0086               	movwf	6
 18409  26CA  3001               	movlw	1	; select bank2/3
 18410  26CB  0087               	movwf	7
 18411  26CC  1401               	bsf	1,0
 18412  26CD  0008               	return
 18413  26CE                     __end_of_Buzzer_Initialization:	
 18414                           
 18415                           	psect	intentry
 18416  0004                     __pintentry:	
 18417 ;; *************** function _ISR *****************
 18418 ;; Defined at:
 18419 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18420 ;; Parameters:    Size  Location     Type
 18421 ;;		None
 18422 ;; Auto vars:     Size  Location     Type
 18423 ;;		None
 18424 ;; Return value:  Size  Location     Type
 18425 ;;		None               void
 18426 ;; Registers used:
 18427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18428 ;; Tracked objects:
 18429 ;;		On entry : 0/0
 18430 ;;		On exit  : 0/0
 18431 ;;		Unchanged: 0/0
 18432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18437 ;;Total ram usage:        1 bytes
 18438 ;; Hardware stack levels used:    1
 18439 ;; Hardware stack levels required when called:    3
 18440 ;; This function calls:
 18441 ;;		_INT_ISR
 18442 ;;		_IOC_ISR
 18443 ;;		_TMR0_ISR
 18444 ;; This function is called by:
 18445 ;;		Interrupt level 1
 18446 ;; This function uses a non-reentrant model
 18447 ;;
 18448                           
 18449  0004                     _ISR:	
 18450                           
 18451                           ;incstack = 0
 18452                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18453  0004  147E               	bsf	126,0	;set compiler interrupt flag
 18454  0005  3180               	pagesel	$
 18455  0006  0020               	movlb	0	; select bank0
 18456  0007  087F               	movf	127,w
 18457  0008  00F7               	movwf	??_ISR
 18458                           
 18459                           ;MCU_B1.c: 99: IOC_ISR();
 18460  0009  3199  2114  3180   	fcall	_IOC_ISR
 18461                           
 18462                           ;MCU_B1.c: 101: TMR0_ISR();
 18463  000C  3184  242F  3180   	fcall	_TMR0_ISR
 18464                           
 18465                           ;MCU_B1.c: 103: ;;
 18466                           ;MCU_B1.c: 107: INT_ISR();
 18467  000F  31A7  2706         	fcall	_INT_ISR
 18468  0011  0877               	movf	??_ISR,w
 18469  0012  0020               	movlb	0	; select bank0
 18470  0013  00FF               	movwf	127
 18471  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 18472  0015  0009               	retfie
 18473  0016                     __end_of_ISR:	
 18474                           
 18475                           	psect	text120
 18476  042F                     __ptext120:	
 18477 ;; *************** function _TMR0_ISR *****************
 18478 ;; Defined at:
 18479 ;;		line 123 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;		None
 18482 ;; Auto vars:     Size  Location     Type
 18483 ;;		None
 18484 ;; Return value:  Size  Location     Type
 18485 ;;		None               void
 18486 ;; Registers used:
 18487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18488 ;; Tracked objects:
 18489 ;;		On entry : 0/0
 18490 ;;		On exit  : 0/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18495 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18497 ;;Total ram usage:        4 bytes
 18498 ;; Hardware stack levels used:    1
 18499 ;; Hardware stack levels required when called:    1
 18500 ;; This function calls:
 18501 ;;		i1_setLoad_StatusOff
 18502 ;; This function is called by:
 18503 ;;		_ISR
 18504 ;; This function uses a non-reentrant model
 18505 ;;
 18506                           
 18507                           
 18508                           ;psect for function _TMR0_ISR
 18509  042F                     _TMR0_ISR:	
 18510                           
 18511                           ;MCU_B1.c: 125: if(TMR0IE && TMR0IF)
 18512                           
 18513                           ;incstack = 0
 18514                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18515  042F  1E8B               	btfss	11,5	;volatile
 18516  0430  0008               	return
 18517  0431  1D0B               	btfss	11,2	;volatile
 18518  0432  0008               	return
 18519                           
 18520                           ;MCU_B1.c: 126: {
 18521                           ;MCU_B1.c: 127: TMR0=(256-90);
 18522  0433  30A6               	movlw	166
 18523  0434  0020               	movlb	0	; select bank0
 18524  0435  0095               	movwf	21	;volatile
 18525                           
 18526                           ;MCU_B1.c: 128: TMR0IF=0;
 18527  0436  110B               	bcf	11,2	;volatile
 18528                           
 18529                           ;MCU_B1.c: 133: if(DimmerLights11->MosfetSignal) { DimmerLights11->MosfetSignalCount++; 
      +                          if(DimmerLights11->MosfetSignalCount == 157) { DimmerLights11->MosfetSignalCount=0; Dimm
      +                          erLights11->MosfetSignal=0; if(!DimmerLights11->GO && !DimmerLights11->MosfetOpen) { Dim
      +                          me
 18530  0437  086D               	movf	_DimmerLights11,w
 18531  0438  3E0C               	addlw	12
 18532  0439  0086               	movwf	6
 18533  043A  3001               	movlw	1	; select bank2/3
 18534  043B  0087               	movwf	7
 18535  043C  1C81               	btfss	1,1
 18536  043D  2C74               	goto	i1l7765
 18537  043E  3001               	movlw	1
 18538  043F  00F3               	movwf	??_TMR0_ISR
 18539  0440  086D               	movf	_DimmerLights11,w
 18540  0441  3E0D               	addlw	13
 18541  0442  0086               	movwf	6
 18542  0443  3001               	movlw	1	; select bank2/3
 18543  0444  0087               	movwf	7
 18544  0445  0873               	movf	??_TMR0_ISR,w
 18545  0446  0781               	addwf	1,f
 18546  0447  086D               	movf	_DimmerLights11,w
 18547  0448  3E0D               	addlw	13
 18548  0449  0086               	movwf	6
 18549  044A  3001               	movlw	1	; select bank2/3
 18550  044B  0087               	movwf	7
 18551  044C  0801               	movf	1,w
 18552  044D  3A9D               	xorlw	157
 18553  044E  1D03               	skipz
 18554  044F  2C74               	goto	i1l7765
 18555  0450  086D               	movf	_DimmerLights11,w
 18556  0451  3E0D               	addlw	13
 18557  0452  0086               	movwf	6
 18558  0453  3001               	movlw	1	; select bank2/3
 18559  0454  0087               	movwf	7
 18560  0455  0181               	clrf	1
 18561  0456  086D               	movf	_DimmerLights11,w
 18562  0457  3E0C               	addlw	12
 18563  0458  0086               	movwf	6
 18564  0459  3001               	movlw	1	; select bank2/3
 18565  045A  0087               	movwf	7
 18566  045B  1081               	bcf	1,1
 18567  045C  086D               	movf	_DimmerLights11,w
 18568  045D  0086               	movwf	6
 18569  045E  3001               	movlw	1	; select bank2/3
 18570  045F  0087               	movwf	7
 18571  0460  1801               	btfsc	1,0
 18572  0461  2C74               	goto	i1l7765
 18573  0462  086D               	movf	_DimmerLights11,w
 18574  0463  3E09               	addlw	9
 18575  0464  0086               	movwf	6
 18576  0465  3001               	movlw	1	; select bank2/3
 18577  0466  0087               	movwf	7
 18578  0467  1A81               	btfsc	1,5
 18579  0468  2C74               	goto	i1l7765
 18580  0469  086D               	movf	_DimmerLights11,w
 18581  046A  0086               	movwf	6
 18582  046B  3001               	movlw	1	; select bank2/3
 18583  046C  0087               	movwf	7
 18584  046D  1401               	bsf	1,0
 18585  046E  086D               	movf	_DimmerLights11,w
 18586  046F  0086               	movwf	6
 18587  0470  3001               	movlw	1	; select bank2/3
 18588  0471  0087               	movwf	7
 18589  0472  1B01               	btfsc	1,6
 18590  0473  138C               	bcf	12,7	;volatile
 18591  0474                     i1l7765:	
 18592  0474  086D               	movf	_DimmerLights11,w
 18593  0475  0086               	movwf	6
 18594  0476  3001               	movlw	1	; select bank2/3
 18595  0477  0087               	movwf	7
 18596  0478  1C01               	btfss	1,0
 18597  0479  2CE9               	goto	i1l7787
 18598  047A  3001               	movlw	1
 18599  047B  00F3               	movwf	??_TMR0_ISR
 18600  047C  086D               	movf	_DimmerLights11,w
 18601  047D  3E03               	addlw	3
 18602  047E  0086               	movwf	6
 18603  047F  3001               	movlw	1	; select bank2/3
 18604  0480  0087               	movwf	7
 18605  0481  0873               	movf	??_TMR0_ISR,w
 18606  0482  0781               	addwf	1,f
 18607  0483  0021               	movlb	1	; select bank1
 18608  0484  0839               	movf	_Dimmer^(0+128),w
 18609  0485  3E02               	addlw	2
 18610  0486  0086               	movwf	6
 18611  0487  0187               	clrf	7
 18612  0488  0801               	movf	1,w
 18613  0489  00F3               	movwf	??_TMR0_ISR
 18614  048A  01F4               	clrf	??_TMR0_ISR+1
 18615  048B  09F3               	comf	??_TMR0_ISR,f
 18616  048C  09F4               	comf	??_TMR0_ISR+1,f
 18617  048D  0AF3               	incf	??_TMR0_ISR,f
 18618  048E  1903               	skipnz
 18619  048F  0AF4               	incf	??_TMR0_ISR+1,f
 18620  0490  0020               	movlb	0	; select bank0
 18621  0491  086D               	movf	_DimmerLights11,w
 18622  0492  3E04               	addlw	4
 18623  0493  0086               	movwf	6
 18624  0494  3001               	movlw	1	; select bank2/3
 18625  0495  0087               	movwf	7
 18626  0496  0801               	movf	1,w
 18627  0497  0773               	addwf	??_TMR0_ISR,w
 18628  0498  00F5               	movwf	??_TMR0_ISR+2
 18629  0499  0874               	movf	??_TMR0_ISR+1,w
 18630  049A  1803               	skipnc
 18631  049B  0A74               	incf	??_TMR0_ISR+1,w
 18632  049C  00F6               	movwf	??_TMR0_ISR+3
 18633  049D  086D               	movf	_DimmerLights11,w
 18634  049E  3E03               	addlw	3
 18635  049F  0086               	movwf	6
 18636  04A0  3001               	movlw	1	; select bank2/3
 18637  04A1  0087               	movwf	7
 18638  04A2  0876               	movf	??_TMR0_ISR+3,w
 18639  04A3  3A80               	xorlw	128
 18640  04A4  3C80               	sublw	128
 18641  04A5  1D03               	skipz
 18642  04A6  2CA9               	goto	u701_25
 18643  04A7  0875               	movf	??_TMR0_ISR+2,w
 18644  04A8  0201               	subwf	1,w
 18645  04A9                     u701_25:	
 18646  04A9  1C03               	skipc
 18647  04AA  2DC3               	goto	i1l2833
 18648  04AB  0020               	movlb	0	; select bank0
 18649  04AC  086D               	movf	_DimmerLights11,w
 18650  04AD  3E03               	addlw	3
 18651  04AE  0086               	movwf	6
 18652  04AF  3001               	movlw	1	; select bank2/3
 18653  04B0  0087               	movwf	7
 18654  04B1  0181               	clrf	1
 18655  04B2  086D               	movf	_DimmerLights11,w
 18656  04B3  0086               	movwf	6
 18657  04B4  3001               	movlw	1	; select bank2/3
 18658  04B5  0087               	movwf	7
 18659  04B6  1001               	bcf	1,0
 18660  04B7  086D               	movf	_DimmerLights11,w
 18661  04B8  3E07               	addlw	7
 18662  04B9  0086               	movwf	6
 18663  04BA  3001               	movlw	1	; select bank2/3
 18664  04BB  0087               	movwf	7
 18665  04BC  1401               	bsf	1,0
 18666  04BD  086D               	movf	_DimmerLights11,w
 18667  04BE  0086               	movwf	6
 18668  04BF  3001               	movlw	1	; select bank2/3
 18669  04C0  0087               	movwf	7
 18670  04C1  1F01               	btfss	1,6
 18671  04C2  2DC3               	goto	i1l2833
 18672  04C3  178C               	bsf	12,7	;volatile
 18673  04C4  086D               	movf	_DimmerLights11,w
 18674  04C5  3E09               	addlw	9
 18675  04C6  0086               	movwf	6
 18676  04C7  3001               	movlw	1	; select bank2/3
 18677  04C8  0087               	movwf	7
 18678  04C9  1F01               	btfss	1,6
 18679  04CA  2DC3               	goto	i1l2833
 18680  04CB  086D               	movf	_DimmerLights11,w
 18681  04CC  3E09               	addlw	9
 18682  04CD  0086               	movwf	6
 18683  04CE  3001               	movlw	1	; select bank2/3
 18684  04CF  0087               	movwf	7
 18685  04D0  1301               	bcf	1,6
 18686  04D1  086D               	movf	_DimmerLights11,w
 18687  04D2  0086               	movwf	6
 18688  04D3  3001               	movlw	1	; select bank2/3
 18689  04D4  0087               	movwf	7
 18690  04D5  1301               	bcf	1,6
 18691  04D6  086D               	movf	_DimmerLights11,w
 18692  04D7  3E0C               	addlw	12
 18693  04D8  0086               	movwf	6
 18694  04D9  3001               	movlw	1	; select bank2/3
 18695  04DA  0087               	movwf	7
 18696  04DB  1401               	bsf	1,0
 18697  04DC  118C               	bcf	12,3	;volatile
 18698  04DD  0021               	movlb	1	; select bank1
 18699  04DE  0839               	movf	_Dimmer^(0+128),w
 18700  04DF  0086               	movwf	6
 18701  04E0  0187               	clrf	7
 18702  04E1  1401               	bsf	1,0
 18703  04E2  01F1               	clrf	i1setLoad_StatusOff@command
 18704  04E3  0AF1               	incf	i1setLoad_StatusOff@command,f
 18705  04E4  3001               	movlw	1
 18706  04E5  319D  251C  3184   	fcall	i1_setLoad_StatusOff
 18707  04E8  2DC3               	goto	i1l2833
 18708  04E9                     i1l7787:	
 18709  04E9  0020               	movlb	0	; select bank0
 18710  04EA  086D               	movf	_DimmerLights11,w
 18711  04EB  3E09               	addlw	9
 18712  04EC  0086               	movwf	6
 18713  04ED  3001               	movlw	1	; select bank2/3
 18714  04EE  0087               	movwf	7
 18715  04EF  1E81               	btfss	1,5
 18716  04F0  2D0F               	goto	i1l7797
 18717  04F1  3001               	movlw	1
 18718  04F2  00F3               	movwf	??_TMR0_ISR
 18719  04F3  086D               	movf	_DimmerLights11,w
 18720  04F4  3E03               	addlw	3
 18721  04F5  0086               	movwf	6
 18722  04F6  3001               	movlw	1	; select bank2/3
 18723  04F7  0087               	movwf	7
 18724  04F8  0873               	movf	??_TMR0_ISR,w
 18725  04F9  0781               	addwf	1,f
 18726  04FA  086D               	movf	_DimmerLights11,w
 18727  04FB  3E03               	addlw	3
 18728  04FC  0086               	movwf	6
 18729  04FD  3001               	movlw	1	; select bank2/3
 18730  04FE  0087               	movwf	7
 18731  04FF  3014               	movlw	20
 18732  0500  0201               	subwf	1,w
 18733  0501  1C03               	skipc
 18734  0502  2D0F               	goto	i1l7797
 18735  0503  086D               	movf	_DimmerLights11,w
 18736  0504  3E03               	addlw	3
 18737  0505  0086               	movwf	6
 18738  0506  3001               	movlw	1	; select bank2/3
 18739  0507  0087               	movwf	7
 18740  0508  0181               	clrf	1
 18741  0509  086D               	movf	_DimmerLights11,w
 18742  050A  3E09               	addlw	9
 18743  050B  0086               	movwf	6
 18744  050C  3001               	movlw	1	; select bank2/3
 18745  050D  0087               	movwf	7
 18746  050E  1281               	bcf	1,5
 18747  050F                     i1l7797:	
 18748  050F  086D               	movf	_DimmerLights11,w
 18749  0510  3E07               	addlw	7
 18750  0511  0086               	movwf	6
 18751  0512  3001               	movlw	1	; select bank2/3
 18752  0513  0087               	movwf	7
 18753  0514  1C01               	btfss	1,0
 18754  0515  2DC3               	goto	i1l2833
 18755  0516  086D               	movf	_DimmerLights11,w
 18756  0517  3E07               	addlw	7
 18757  0518  0086               	movwf	6
 18758  0519  3001               	movlw	1	; select bank2/3
 18759  051A  0087               	movwf	7
 18760  051B  1001               	bcf	1,0
 18761  051C  086D               	movf	_DimmerLights11,w
 18762  051D  0086               	movwf	6
 18763  051E  3001               	movlw	1	; select bank2/3
 18764  051F  0087               	movwf	7
 18765  0520  1C81               	btfss	1,1
 18766  0521  2DC3               	goto	i1l2833
 18767  0522  3001               	movlw	1
 18768  0523  00F3               	movwf	??_TMR0_ISR
 18769  0524  0A6D               	incf	_DimmerLights11,w
 18770  0525  0086               	movwf	6
 18771  0526  3001               	movlw	1	; select bank2/3
 18772  0527  0087               	movwf	7
 18773  0528  0873               	movf	??_TMR0_ISR,w
 18774  0529  0781               	addwf	1,f
 18775  052A  0A6D               	incf	_DimmerLights11,w
 18776  052B  0086               	movwf	6
 18777  052C  3001               	movlw	1	; select bank2/3
 18778  052D  0087               	movwf	7
 18779  052E  086D               	movf	_DimmerLights11,w
 18780  052F  3E02               	addlw	2
 18781  0530  0084               	movwf	4
 18782  0531  3001               	movlw	1	; select bank2/3
 18783  0532  0085               	movwf	5
 18784  0533  0800               	movf	0,w
 18785  0534  0201               	subwf	1,w
 18786  0535  1C03               	skipc
 18787  0536  2DC3               	goto	i1l2833
 18788  0537  0A6D               	incf	_DimmerLights11,w
 18789  0538  0086               	movwf	6
 18790  0539  3001               	movlw	1	; select bank2/3
 18791  053A  0087               	movwf	7
 18792  053B  0181               	clrf	1
 18793  053C  086D               	movf	_DimmerLights11,w
 18794  053D  0086               	movwf	6
 18795  053E  3001               	movlw	1	; select bank2/3
 18796  053F  0087               	movwf	7
 18797  0540  1D81               	btfss	1,3
 18798  0541  2D78               	goto	i1l7823
 18799  0542  086D               	movf	_DimmerLights11,w
 18800  0543  0086               	movwf	6
 18801  0544  3001               	movlw	1	; select bank2/3
 18802  0545  0087               	movwf	7
 18803  0546  1A01               	btfsc	1,4
 18804  0547  2D61               	goto	i1l7817
 18805  0548  086D               	movf	_DimmerLights11,w
 18806  0549  3E04               	addlw	4
 18807  054A  0086               	movwf	6
 18808  054B  3001               	movlw	1	; select bank2/3
 18809  054C  0087               	movwf	7
 18810  054D  3061               	movlw	97
 18811  054E  0201               	subwf	1,w
 18812  054F  1803               	skipnc
 18813  0550  2D5B               	goto	i1l7815
 18814  0551  3001               	movlw	1
 18815  0552  00F3               	movwf	??_TMR0_ISR
 18816  0553  086D               	movf	_DimmerLights11,w
 18817  0554  3E04               	addlw	4
 18818  0555  0086               	movwf	6
 18819  0556  3001               	movlw	1	; select bank2/3
 18820  0557  0087               	movwf	7
 18821  0558  0873               	movf	??_TMR0_ISR,w
 18822  0559  0781               	addwf	1,f
 18823  055A  2DC3               	goto	i1l2833
 18824  055B                     i1l7815:	
 18825  055B  086D               	movf	_DimmerLights11,w
 18826  055C  0086               	movwf	6
 18827  055D  3001               	movlw	1	; select bank2/3
 18828  055E  0087               	movwf	7
 18829  055F  1601               	bsf	1,4
 18830  0560  2DC3               	goto	i1l2833
 18831  0561                     i1l7817:	
 18832  0561  086D               	movf	_DimmerLights11,w
 18833  0562  3E04               	addlw	4
 18834  0563  0086               	movwf	6
 18835  0564  3001               	movlw	1	; select bank2/3
 18836  0565  0087               	movwf	7
 18837  0566  301F               	movlw	31
 18838  0567  0201               	subwf	1,w
 18839  0568  1C03               	skipc
 18840  0569  2D72               	goto	i1l7821
 18841  056A  086D               	movf	_DimmerLights11,w
 18842  056B  3E04               	addlw	4
 18843  056C  0086               	movwf	6
 18844  056D  3001               	movlw	1	; select bank2/3
 18845  056E  0087               	movwf	7
 18846  056F  3001               	movlw	1
 18847  0570  0281               	subwf	1,f
 18848  0571  2DC3               	goto	i1l2833
 18849  0572                     i1l7821:	
 18850  0572  086D               	movf	_DimmerLights11,w
 18851  0573  0086               	movwf	6
 18852  0574  3001               	movlw	1	; select bank2/3
 18853  0575  0087               	movwf	7
 18854  0576  1201               	bcf	1,4
 18855  0577  2DC3               	goto	i1l2833
 18856  0578                     i1l7823:	
 18857  0578  086D               	movf	_DimmerLights11,w
 18858  0579  0086               	movwf	6
 18859  057A  3001               	movlw	1	; select bank2/3
 18860  057B  0087               	movwf	7
 18861  057C  1D01               	btfss	1,2
 18862  057D  2DBE               	goto	i1l7837
 18863  057E  086D               	movf	_DimmerLights11,w
 18864  057F  3E04               	addlw	4
 18865  0580  0086               	movwf	6
 18866  0581  3001               	movlw	1	; select bank2/3
 18867  0582  0087               	movwf	7
 18868  0583  086D               	movf	_DimmerLights11,w
 18869  0584  3E05               	addlw	5
 18870  0585  0084               	movwf	4
 18871  0586  3001               	movlw	1	; select bank2/3
 18872  0587  0085               	movwf	5
 18873  0588  0800               	movf	0,w
 18874  0589  0201               	subwf	1,w
 18875  058A  1803               	skipnc
 18876  058B  2D96               	goto	i1l7829
 18877  058C  3001               	movlw	1
 18878  058D  00F3               	movwf	??_TMR0_ISR
 18879  058E  086D               	movf	_DimmerLights11,w
 18880  058F  3E04               	addlw	4
 18881  0590  0086               	movwf	6
 18882  0591  3001               	movlw	1	; select bank2/3
 18883  0592  0087               	movwf	7
 18884  0593  0873               	movf	??_TMR0_ISR,w
 18885  0594  0781               	addwf	1,f
 18886  0595  2DAB               	goto	i1l7833
 18887  0596                     i1l7829:	
 18888  0596  086D               	movf	_DimmerLights11,w
 18889  0597  3E05               	addlw	5
 18890  0598  0086               	movwf	6
 18891  0599  3001               	movlw	1	; select bank2/3
 18892  059A  0087               	movwf	7
 18893  059B  086D               	movf	_DimmerLights11,w
 18894  059C  3E04               	addlw	4
 18895  059D  0084               	movwf	4
 18896  059E  3001               	movlw	1	; select bank2/3
 18897  059F  0085               	movwf	5
 18898  05A0  0800               	movf	0,w
 18899  05A1  0201               	subwf	1,w
 18900  05A2  1803               	skipnc
 18901  05A3  2DAB               	goto	i1l7833
 18902  05A4  086D               	movf	_DimmerLights11,w
 18903  05A5  3E04               	addlw	4
 18904  05A6  0086               	movwf	6
 18905  05A7  3001               	movlw	1	; select bank2/3
 18906  05A8  0087               	movwf	7
 18907  05A9  3001               	movlw	1
 18908  05AA  0281               	subwf	1,f
 18909  05AB                     i1l7833:	
 18910  05AB  086D               	movf	_DimmerLights11,w
 18911  05AC  3E05               	addlw	5
 18912  05AD  0086               	movwf	6
 18913  05AE  3001               	movlw	1	; select bank2/3
 18914  05AF  0087               	movwf	7
 18915  05B0  086D               	movf	_DimmerLights11,w
 18916  05B1  3E04               	addlw	4
 18917  05B2  0084               	movwf	4
 18918  05B3  3001               	movlw	1	; select bank2/3
 18919  05B4  0085               	movwf	5
 18920  05B5  0800               	movf	0,w
 18921  05B6  0601               	xorwf	1,w
 18922  05B7  1D03               	skipz
 18923  05B8  2DC3               	goto	i1l2833
 18924  05B9  086D               	movf	_DimmerLights11,w
 18925  05BA  0086               	movwf	6
 18926  05BB  3001               	movlw	1	; select bank2/3
 18927  05BC  0087               	movwf	7
 18928  05BD  1101               	bcf	1,2
 18929  05BE                     i1l7837:	
 18930  05BE  086D               	movf	_DimmerLights11,w
 18931  05BF  0086               	movwf	6
 18932  05C0  3001               	movlw	1	; select bank2/3
 18933  05C1  0087               	movwf	7
 18934  05C2  1081               	bcf	1,1
 18935  05C3                     i1l2833:	
 18936                           
 18937                           ;MCU_B1.c: 137: if(DimmerLights22->MosfetSignal) { DimmerLights22->MosfetSignalCount++; 
      +                          if(DimmerLights22->MosfetSignalCount == 157-10) { DimmerLights22->MosfetSignalCount=0; D
      +                          immerLights22->MosfetSignal=0; if(!DimmerLights22->GO && !DimmerLights22->MosfetOpen) { 
      +                          Di
 18938  05C3  0879               	movf	_DimmerLights22,w
 18939  05C4  3E0C               	addlw	12
 18940  05C5  0086               	movwf	6
 18941  05C6  3001               	movlw	1	; select bank2/3
 18942  05C7  0087               	movwf	7
 18943  05C8  1C81               	btfss	1,1
 18944  05C9  2E02               	goto	i1l7855
 18945  05CA  3001               	movlw	1
 18946  05CB  00F3               	movwf	??_TMR0_ISR
 18947  05CC  0879               	movf	_DimmerLights22,w
 18948  05CD  3E0D               	addlw	13
 18949  05CE  0086               	movwf	6
 18950  05CF  3001               	movlw	1	; select bank2/3
 18951  05D0  0087               	movwf	7
 18952  05D1  0873               	movf	??_TMR0_ISR,w
 18953  05D2  0781               	addwf	1,f
 18954  05D3  0879               	movf	_DimmerLights22,w
 18955  05D4  3E0D               	addlw	13
 18956  05D5  0086               	movwf	6
 18957  05D6  3001               	movlw	1	; select bank2/3
 18958  05D7  0087               	movwf	7
 18959  05D8  0801               	movf	1,w
 18960  05D9  3A93               	xorlw	147
 18961  05DA  1D03               	skipz
 18962  05DB  2E02               	goto	i1l7855
 18963  05DC  0879               	movf	_DimmerLights22,w
 18964  05DD  3E0D               	addlw	13
 18965  05DE  0086               	movwf	6
 18966  05DF  3001               	movlw	1	; select bank2/3
 18967  05E0  0087               	movwf	7
 18968  05E1  0181               	clrf	1
 18969  05E2  0879               	movf	_DimmerLights22,w
 18970  05E3  3E0C               	addlw	12
 18971  05E4  0086               	movwf	6
 18972  05E5  3001               	movlw	1	; select bank2/3
 18973  05E6  0087               	movwf	7
 18974  05E7  1081               	bcf	1,1
 18975  05E8  0879               	movf	_DimmerLights22,w
 18976  05E9  0086               	movwf	6
 18977  05EA  3001               	movlw	1	; select bank2/3
 18978  05EB  0087               	movwf	7
 18979  05EC  1801               	btfsc	1,0
 18980  05ED  2E02               	goto	i1l7855
 18981  05EE  0879               	movf	_DimmerLights22,w
 18982  05EF  3E09               	addlw	9
 18983  05F0  0086               	movwf	6
 18984  05F1  3001               	movlw	1	; select bank2/3
 18985  05F2  0087               	movwf	7
 18986  05F3  1A81               	btfsc	1,5
 18987  05F4  2E02               	goto	i1l7855
 18988  05F5  0879               	movf	_DimmerLights22,w
 18989  05F6  0086               	movwf	6
 18990  05F7  3001               	movlw	1	; select bank2/3
 18991  05F8  0087               	movwf	7
 18992  05F9  1401               	bsf	1,0
 18993  05FA  0879               	movf	_DimmerLights22,w
 18994  05FB  0086               	movwf	6
 18995  05FC  3001               	movlw	1	; select bank2/3
 18996  05FD  0087               	movwf	7
 18997  05FE  1F01               	btfss	1,6
 18998  05FF  2E02               	goto	i1l7855
 18999  0600  0020               	movlb	0	; select bank0
 19000  0601  120D               	bcf	13,4	;volatile
 19001  0602                     i1l7855:	
 19002  0602  0879               	movf	_DimmerLights22,w
 19003  0603  0086               	movwf	6
 19004  0604  3001               	movlw	1	; select bank2/3
 19005  0605  0087               	movwf	7
 19006  0606  1C01               	btfss	1,0
 19007  0607  2E76               	goto	i1l7877
 19008  0608  3001               	movlw	1
 19009  0609  00F3               	movwf	??_TMR0_ISR
 19010  060A  0879               	movf	_DimmerLights22,w
 19011  060B  3E03               	addlw	3
 19012  060C  0086               	movwf	6
 19013  060D  3001               	movlw	1	; select bank2/3
 19014  060E  0087               	movwf	7
 19015  060F  0873               	movf	??_TMR0_ISR,w
 19016  0610  0781               	addwf	1,f
 19017  0611  0021               	movlb	1	; select bank1
 19018  0612  0839               	movf	_Dimmer^(0+128),w
 19019  0613  3E02               	addlw	2
 19020  0614  0086               	movwf	6
 19021  0615  0187               	clrf	7
 19022  0616  0801               	movf	1,w
 19023  0617  00F3               	movwf	??_TMR0_ISR
 19024  0618  01F4               	clrf	??_TMR0_ISR+1
 19025  0619  09F3               	comf	??_TMR0_ISR,f
 19026  061A  09F4               	comf	??_TMR0_ISR+1,f
 19027  061B  0AF3               	incf	??_TMR0_ISR,f
 19028  061C  1903               	skipnz
 19029  061D  0AF4               	incf	??_TMR0_ISR+1,f
 19030  061E  0879               	movf	_DimmerLights22,w
 19031  061F  3E04               	addlw	4
 19032  0620  0086               	movwf	6
 19033  0621  3001               	movlw	1	; select bank2/3
 19034  0622  0087               	movwf	7
 19035  0623  0801               	movf	1,w
 19036  0624  0773               	addwf	??_TMR0_ISR,w
 19037  0625  00F5               	movwf	??_TMR0_ISR+2
 19038  0626  0874               	movf	??_TMR0_ISR+1,w
 19039  0627  1803               	skipnc
 19040  0628  0A74               	incf	??_TMR0_ISR+1,w
 19041  0629  00F6               	movwf	??_TMR0_ISR+3
 19042  062A  0879               	movf	_DimmerLights22,w
 19043  062B  3E03               	addlw	3
 19044  062C  0086               	movwf	6
 19045  062D  3001               	movlw	1	; select bank2/3
 19046  062E  0087               	movwf	7
 19047  062F  0876               	movf	??_TMR0_ISR+3,w
 19048  0630  3A80               	xorlw	128
 19049  0631  3C80               	sublw	128
 19050  0632  1D03               	skipz
 19051  0633  2E36               	goto	u723_25
 19052  0634  0875               	movf	??_TMR0_ISR+2,w
 19053  0635  0201               	subwf	1,w
 19054  0636                     u723_25:	
 19055  0636  1C03               	skipc
 19056  0637  2F4F               	goto	i1l7929
 19057  0638  0879               	movf	_DimmerLights22,w
 19058  0639  3E03               	addlw	3
 19059  063A  0086               	movwf	6
 19060  063B  3001               	movlw	1	; select bank2/3
 19061  063C  0087               	movwf	7
 19062  063D  0181               	clrf	1
 19063  063E  0879               	movf	_DimmerLights22,w
 19064  063F  0086               	movwf	6
 19065  0640  3001               	movlw	1	; select bank2/3
 19066  0641  0087               	movwf	7
 19067  0642  1001               	bcf	1,0
 19068  0643  0879               	movf	_DimmerLights22,w
 19069  0644  3E07               	addlw	7
 19070  0645  0086               	movwf	6
 19071  0646  3001               	movlw	1	; select bank2/3
 19072  0647  0087               	movwf	7
 19073  0648  1401               	bsf	1,0
 19074  0649  0879               	movf	_DimmerLights22,w
 19075  064A  0086               	movwf	6
 19076  064B  3001               	movlw	1	; select bank2/3
 19077  064C  0087               	movwf	7
 19078  064D  1F01               	btfss	1,6
 19079  064E  2F4F               	goto	i1l7929
 19080  064F  0020               	movlb	0	; select bank0
 19081  0650  160D               	bsf	13,4	;volatile
 19082  0651  0879               	movf	_DimmerLights22,w
 19083  0652  3E09               	addlw	9
 19084  0653  0086               	movwf	6
 19085  0654  3001               	movlw	1	; select bank2/3
 19086  0655  0087               	movwf	7
 19087  0656  1F01               	btfss	1,6
 19088  0657  2F4F               	goto	i1l7929
 19089  0658  0879               	movf	_DimmerLights22,w
 19090  0659  3E09               	addlw	9
 19091  065A  0086               	movwf	6
 19092  065B  3001               	movlw	1	; select bank2/3
 19093  065C  0087               	movwf	7
 19094  065D  1301               	bcf	1,6
 19095  065E  0879               	movf	_DimmerLights22,w
 19096  065F  0086               	movwf	6
 19097  0660  3001               	movlw	1	; select bank2/3
 19098  0661  0087               	movwf	7
 19099  0662  1301               	bcf	1,6
 19100  0663  0879               	movf	_DimmerLights22,w
 19101  0664  3E0C               	addlw	12
 19102  0665  0086               	movwf	6
 19103  0666  3001               	movlw	1	; select bank2/3
 19104  0667  0087               	movwf	7
 19105  0668  1401               	bsf	1,0
 19106  0669  138E               	bcf	14,7	;volatile
 19107  066A  0021               	movlb	1	; select bank1
 19108  066B  0839               	movf	_Dimmer^(0+128),w
 19109  066C  0086               	movwf	6
 19110  066D  0187               	clrf	7
 19111  066E  1401               	bsf	1,0
 19112  066F  01F1               	clrf	i1setLoad_StatusOff@command
 19113  0670  0AF1               	incf	i1setLoad_StatusOff@command,f
 19114  0671  3002               	movlw	2
 19115  0672  319D  251C  3184   	fcall	i1_setLoad_StatusOff
 19116  0675  2F4F               	goto	i1l7929
 19117  0676                     i1l7877:	
 19118  0676  0879               	movf	_DimmerLights22,w
 19119  0677  3E09               	addlw	9
 19120  0678  0086               	movwf	6
 19121  0679  3001               	movlw	1	; select bank2/3
 19122  067A  0087               	movwf	7
 19123  067B  1E81               	btfss	1,5
 19124  067C  2E9B               	goto	i1l7887
 19125  067D  3001               	movlw	1
 19126  067E  00F3               	movwf	??_TMR0_ISR
 19127  067F  0879               	movf	_DimmerLights22,w
 19128  0680  3E03               	addlw	3
 19129  0681  0086               	movwf	6
 19130  0682  3001               	movlw	1	; select bank2/3
 19131  0683  0087               	movwf	7
 19132  0684  0873               	movf	??_TMR0_ISR,w
 19133  0685  0781               	addwf	1,f
 19134  0686  0879               	movf	_DimmerLights22,w
 19135  0687  3E03               	addlw	3
 19136  0688  0086               	movwf	6
 19137  0689  3001               	movlw	1	; select bank2/3
 19138  068A  0087               	movwf	7
 19139  068B  3014               	movlw	20
 19140  068C  0201               	subwf	1,w
 19141  068D  1C03               	skipc
 19142  068E  2E9B               	goto	i1l7887
 19143  068F  0879               	movf	_DimmerLights22,w
 19144  0690  3E03               	addlw	3
 19145  0691  0086               	movwf	6
 19146  0692  3001               	movlw	1	; select bank2/3
 19147  0693  0087               	movwf	7
 19148  0694  0181               	clrf	1
 19149  0695  0879               	movf	_DimmerLights22,w
 19150  0696  3E09               	addlw	9
 19151  0697  0086               	movwf	6
 19152  0698  3001               	movlw	1	; select bank2/3
 19153  0699  0087               	movwf	7
 19154  069A  1281               	bcf	1,5
 19155  069B                     i1l7887:	
 19156  069B  0879               	movf	_DimmerLights22,w
 19157  069C  3E07               	addlw	7
 19158  069D  0086               	movwf	6
 19159  069E  3001               	movlw	1	; select bank2/3
 19160  069F  0087               	movwf	7
 19161  06A0  1C01               	btfss	1,0
 19162  06A1  2F4F               	goto	i1l7929
 19163  06A2  0879               	movf	_DimmerLights22,w
 19164  06A3  3E07               	addlw	7
 19165  06A4  0086               	movwf	6
 19166  06A5  3001               	movlw	1	; select bank2/3
 19167  06A6  0087               	movwf	7
 19168  06A7  1001               	bcf	1,0
 19169  06A8  0879               	movf	_DimmerLights22,w
 19170  06A9  0086               	movwf	6
 19171  06AA  3001               	movlw	1	; select bank2/3
 19172  06AB  0087               	movwf	7
 19173  06AC  1C81               	btfss	1,1
 19174  06AD  2F4F               	goto	i1l7929
 19175  06AE  3001               	movlw	1
 19176  06AF  00F3               	movwf	??_TMR0_ISR
 19177  06B0  0A79               	incf	_DimmerLights22,w
 19178  06B1  0086               	movwf	6
 19179  06B2  3001               	movlw	1	; select bank2/3
 19180  06B3  0087               	movwf	7
 19181  06B4  0873               	movf	??_TMR0_ISR,w
 19182  06B5  0781               	addwf	1,f
 19183  06B6  0A79               	incf	_DimmerLights22,w
 19184  06B7  0086               	movwf	6
 19185  06B8  3001               	movlw	1	; select bank2/3
 19186  06B9  0087               	movwf	7
 19187  06BA  0879               	movf	_DimmerLights22,w
 19188  06BB  3E02               	addlw	2
 19189  06BC  0084               	movwf	4
 19190  06BD  3001               	movlw	1	; select bank2/3
 19191  06BE  0085               	movwf	5
 19192  06BF  0800               	movf	0,w
 19193  06C0  0201               	subwf	1,w
 19194  06C1  1C03               	skipc
 19195  06C2  2F4F               	goto	i1l7929
 19196  06C3  0A79               	incf	_DimmerLights22,w
 19197  06C4  0086               	movwf	6
 19198  06C5  3001               	movlw	1	; select bank2/3
 19199  06C6  0087               	movwf	7
 19200  06C7  0181               	clrf	1
 19201  06C8  0879               	movf	_DimmerLights22,w
 19202  06C9  0086               	movwf	6
 19203  06CA  3001               	movlw	1	; select bank2/3
 19204  06CB  0087               	movwf	7
 19205  06CC  1D81               	btfss	1,3
 19206  06CD  2F04               	goto	i1l7913
 19207  06CE  0879               	movf	_DimmerLights22,w
 19208  06CF  0086               	movwf	6
 19209  06D0  3001               	movlw	1	; select bank2/3
 19210  06D1  0087               	movwf	7
 19211  06D2  1A01               	btfsc	1,4
 19212  06D3  2EED               	goto	i1l7907
 19213  06D4  0879               	movf	_DimmerLights22,w
 19214  06D5  3E04               	addlw	4
 19215  06D6  0086               	movwf	6
 19216  06D7  3001               	movlw	1	; select bank2/3
 19217  06D8  0087               	movwf	7
 19218  06D9  3061               	movlw	97
 19219  06DA  0201               	subwf	1,w
 19220  06DB  1803               	skipnc
 19221  06DC  2EE7               	goto	i1l7905
 19222  06DD  3001               	movlw	1
 19223  06DE  00F3               	movwf	??_TMR0_ISR
 19224  06DF  0879               	movf	_DimmerLights22,w
 19225  06E0  3E04               	addlw	4
 19226  06E1  0086               	movwf	6
 19227  06E2  3001               	movlw	1	; select bank2/3
 19228  06E3  0087               	movwf	7
 19229  06E4  0873               	movf	??_TMR0_ISR,w
 19230  06E5  0781               	addwf	1,f
 19231  06E6  2F4F               	goto	i1l7929
 19232  06E7                     i1l7905:	
 19233  06E7  0879               	movf	_DimmerLights22,w
 19234  06E8  0086               	movwf	6
 19235  06E9  3001               	movlw	1	; select bank2/3
 19236  06EA  0087               	movwf	7
 19237  06EB  1601               	bsf	1,4
 19238  06EC  2F4F               	goto	i1l7929
 19239  06ED                     i1l7907:	
 19240  06ED  0879               	movf	_DimmerLights22,w
 19241  06EE  3E04               	addlw	4
 19242  06EF  0086               	movwf	6
 19243  06F0  3001               	movlw	1	; select bank2/3
 19244  06F1  0087               	movwf	7
 19245  06F2  301F               	movlw	31
 19246  06F3  0201               	subwf	1,w
 19247  06F4  1C03               	skipc
 19248  06F5  2EFE               	goto	i1l7911
 19249  06F6  0879               	movf	_DimmerLights22,w
 19250  06F7  3E04               	addlw	4
 19251  06F8  0086               	movwf	6
 19252  06F9  3001               	movlw	1	; select bank2/3
 19253  06FA  0087               	movwf	7
 19254  06FB  3001               	movlw	1
 19255  06FC  0281               	subwf	1,f
 19256  06FD  2F4F               	goto	i1l7929
 19257  06FE                     i1l7911:	
 19258  06FE  0879               	movf	_DimmerLights22,w
 19259  06FF  0086               	movwf	6
 19260  0700  3001               	movlw	1	; select bank2/3
 19261  0701  0087               	movwf	7
 19262  0702  1201               	bcf	1,4
 19263  0703  2F4F               	goto	i1l7929
 19264  0704                     i1l7913:	
 19265  0704  0879               	movf	_DimmerLights22,w
 19266  0705  0086               	movwf	6
 19267  0706  3001               	movlw	1	; select bank2/3
 19268  0707  0087               	movwf	7
 19269  0708  1D01               	btfss	1,2
 19270  0709  2F4A               	goto	i1l7927
 19271  070A  0879               	movf	_DimmerLights22,w
 19272  070B  3E04               	addlw	4
 19273  070C  0086               	movwf	6
 19274  070D  3001               	movlw	1	; select bank2/3
 19275  070E  0087               	movwf	7
 19276  070F  0879               	movf	_DimmerLights22,w
 19277  0710  3E05               	addlw	5
 19278  0711  0084               	movwf	4
 19279  0712  3001               	movlw	1	; select bank2/3
 19280  0713  0085               	movwf	5
 19281  0714  0800               	movf	0,w
 19282  0715  0201               	subwf	1,w
 19283  0716  1803               	skipnc
 19284  0717  2F22               	goto	i1l7919
 19285  0718  3001               	movlw	1
 19286  0719  00F3               	movwf	??_TMR0_ISR
 19287  071A  0879               	movf	_DimmerLights22,w
 19288  071B  3E04               	addlw	4
 19289  071C  0086               	movwf	6
 19290  071D  3001               	movlw	1	; select bank2/3
 19291  071E  0087               	movwf	7
 19292  071F  0873               	movf	??_TMR0_ISR,w
 19293  0720  0781               	addwf	1,f
 19294  0721  2F37               	goto	i1l7923
 19295  0722                     i1l7919:	
 19296  0722  0879               	movf	_DimmerLights22,w
 19297  0723  3E05               	addlw	5
 19298  0724  0086               	movwf	6
 19299  0725  3001               	movlw	1	; select bank2/3
 19300  0726  0087               	movwf	7
 19301  0727  0879               	movf	_DimmerLights22,w
 19302  0728  3E04               	addlw	4
 19303  0729  0084               	movwf	4
 19304  072A  3001               	movlw	1	; select bank2/3
 19305  072B  0085               	movwf	5
 19306  072C  0800               	movf	0,w
 19307  072D  0201               	subwf	1,w
 19308  072E  1803               	skipnc
 19309  072F  2F37               	goto	i1l7923
 19310  0730  0879               	movf	_DimmerLights22,w
 19311  0731  3E04               	addlw	4
 19312  0732  0086               	movwf	6
 19313  0733  3001               	movlw	1	; select bank2/3
 19314  0734  0087               	movwf	7
 19315  0735  3001               	movlw	1
 19316  0736  0281               	subwf	1,f
 19317  0737                     i1l7923:	
 19318  0737  0879               	movf	_DimmerLights22,w
 19319  0738  3E05               	addlw	5
 19320  0739  0086               	movwf	6
 19321  073A  3001               	movlw	1	; select bank2/3
 19322  073B  0087               	movwf	7
 19323  073C  0879               	movf	_DimmerLights22,w
 19324  073D  3E04               	addlw	4
 19325  073E  0084               	movwf	4
 19326  073F  3001               	movlw	1	; select bank2/3
 19327  0740  0085               	movwf	5
 19328  0741  0800               	movf	0,w
 19329  0742  0601               	xorwf	1,w
 19330  0743  1D03               	skipz
 19331  0744  2F4F               	goto	i1l7929
 19332  0745  0879               	movf	_DimmerLights22,w
 19333  0746  0086               	movwf	6
 19334  0747  3001               	movlw	1	; select bank2/3
 19335  0748  0087               	movwf	7
 19336  0749  1101               	bcf	1,2
 19337  074A                     i1l7927:	
 19338  074A  0879               	movf	_DimmerLights22,w
 19339  074B  0086               	movwf	6
 19340  074C  3001               	movlw	1	; select bank2/3
 19341  074D  0087               	movwf	7
 19342  074E  1081               	bcf	1,1
 19343  074F                     i1l7929:	
 19344                           
 19345                           ;MCU_B1.c: 146: Timer0->Count++;
 19346  074F  0021               	movlb	1	; select bank1
 19347  0750  0A69               	incf	_Timer0^(0+128),w
 19348  0751  0086               	movwf	6
 19349  0752  0187               	clrf	7
 19350  0753  3001               	movlw	1
 19351  0754  0781               	addwf	1,f
 19352  0755  3141               	addfsr 1,1
 19353  0756  1803               	skipnc
 19354  0757  0A81               	incf	1,f
 19355                           
 19356                           ;MCU_B1.c: 147: if(Timer0->Count == 200)
 19357  0758  0A69               	incf	_Timer0^(0+128),w
 19358  0759  0086               	movwf	6
 19359  075A  0187               	clrf	7
 19360  075B  3F40               	moviw [0]fsr1
 19361  075C  3AC8               	xorlw	200
 19362  075D  1D03               	skipz
 19363  075E  2F61               	goto	u739_25
 19364  075F  3F41               	moviw [1]fsr1
 19365  0760  3A00               	xorlw	0
 19366  0761                     u739_25:	
 19367  0761  1D03               	skipz
 19368  0762  2F6E               	goto	i1l2881
 19369                           
 19370                           ;MCU_B1.c: 148: {
 19371                           ;MCU_B1.c: 149: Timer0->Count=0;
 19372  0763  0A69               	incf	_Timer0^(0+128),w
 19373  0764  0086               	movwf	6
 19374  0765  0187               	clrf	7
 19375  0766  3000               	movlw	0
 19376  0767  3FC0               	movwi [0]fsr1
 19377  0768  3FC1               	movwi [1]fsr1
 19378                           
 19379                           ;MCU_B1.c: 150: TMain->T0_Timerout=1;
 19380  0769  087D               	movf	_TMain,w
 19381  076A  0086               	movwf	6
 19382  076B  3001               	movlw	1	; select bank2/3
 19383  076C  0087               	movwf	7
 19384  076D  1481               	bsf	1,1
 19385  076E                     i1l2881:	
 19386                           
 19387                           ;MCU_B1.c: 151: }
 19388                           ;MCU_B1.c: 154: if(Buz->GO)
 19389  076E  0878               	movf	_Buz,w
 19390  076F  0086               	movwf	6
 19391  0770  3001               	movlw	1	; select bank2/3
 19392  0771  0087               	movwf	7
 19393  0772  1C81               	btfss	1,1
 19394  0773  0008               	return
 19395                           
 19396                           ;MCU_B1.c: 155: {
 19397                           ;MCU_B1.c: 156: Buz->Time++;
 19398  0774  0A78               	incf	_Buz,w
 19399  0775  0086               	movwf	6
 19400  0776  3001               	movlw	1	; select bank2/3
 19401  0777  0087               	movwf	7
 19402  0778  3001               	movlw	1
 19403  0779  0781               	addwf	1,f
 19404  077A  3141               	addfsr 1,1
 19405  077B  1803               	skipnc
 19406  077C  0A81               	incf	1,f
 19407  077D  0008               	return
 19408  077E                     __end_of_TMR0_ISR:	
 19409                           
 19410                           	psect	text121
 19411  1D1C                     __ptext121:	
 19412 ;; *************** function i1_setLoad_StatusOff *****************
 19413 ;; Defined at:
 19414 ;;		line 322 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 19415 ;; Parameters:    Size  Location     Type
 19416 ;;  lights          1    wreg     unsigned char 
 19417 ;;  command         1    0[COMMON] unsigned char 
 19418 ;; Auto vars:     Size  Location     Type
 19419 ;;  lights          1    1[COMMON] unsigned char 
 19420 ;; Return value:  Size  Location     Type
 19421 ;;		None               void
 19422 ;; Registers used:
 19423 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19424 ;; Tracked objects:
 19425 ;;		On entry : 0/0
 19426 ;;		On exit  : 0/0
 19427 ;;		Unchanged: 0/0
 19428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19433 ;;Total ram usage:        2 bytes
 19434 ;; Hardware stack levels used:    1
 19435 ;; This function calls:
 19436 ;;		Nothing
 19437 ;; This function is called by:
 19438 ;;		_TMR0_ISR
 19439 ;; This function uses a non-reentrant model
 19440 ;;
 19441                           
 19442                           
 19443                           ;psect for function i1_setLoad_StatusOff
 19444  1D1C                     i1_setLoad_StatusOff:	
 19445                           
 19446                           ;incstack = 0
 19447                           ; Regs used in i1_setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0]
 19448                           ;i1setLoad_StatusOff@lights stored from wreg
 19449  1D1C  00F2               	movwf	i1setLoad_StatusOff@lights
 19450                           
 19451                           ;OverLoad_B1.c: 324: Load->StatusOff=command;
 19452  1D1D  0020               	movlb	0	; select bank0
 19453  1D1E  086E               	movf	_Load,w
 19454  1D1F  3E46               	addlw	70
 19455  1D20  0086               	movwf	6
 19456  1D21  3002               	movlw	2	; select bank4/5
 19457  1D22  0087               	movwf	7
 19458  1D23  0871               	movf	i1setLoad_StatusOff@command,w
 19459  1D24  1081               	bcf	1,1
 19460  1D25  1D03               	skipz
 19461  1D26  1481               	bsf	1,1
 19462                           
 19463                           ;OverLoad_B1.c: 325: Load->SafeCount-=2;
 19464  1D27  086E               	movf	_Load,w
 19465  1D28  3E42               	addlw	66
 19466  1D29  0086               	movwf	6
 19467  1D2A  3002               	movlw	2	; select bank4/5
 19468  1D2B  0087               	movwf	7
 19469  1D2C  3002               	movlw	2
 19470  1D2D  0281               	subwf	1,f
 19471                           
 19472                           ;OverLoad_B1.c: 326: if(lights == 1)
 19473  1D2E  0872               	movf	i1setLoad_StatusOff@lights,w
 19474  1D2F  3A01               	xorlw	1
 19475  1D30  1D03               	skipz
 19476  1D31  2D38               	goto	i1l7327
 19477                           
 19478                           ;OverLoad_B1.c: 327: {
 19479                           ;OverLoad_B1.c: 328: Load->Lights1Status=0;
 19480  1D32  086E               	movf	_Load,w
 19481  1D33  3E43               	addlw	67
 19482  1D34  0086               	movwf	6
 19483  1D35  3002               	movlw	2	; select bank4/5
 19484  1D36  0087               	movwf	7
 19485  1D37  0181               	clrf	1
 19486  1D38                     i1l7327:	
 19487                           
 19488                           ;OverLoad_B1.c: 329: }
 19489                           ;OverLoad_B1.c: 330: if(lights == 2)
 19490  1D38  0872               	movf	i1setLoad_StatusOff@lights,w
 19491  1D39  3A02               	xorlw	2
 19492  1D3A  1D03               	skipz
 19493  1D3B  2D42               	goto	i1l7331
 19494                           
 19495                           ;OverLoad_B1.c: 331: {
 19496                           ;OverLoad_B1.c: 332: Load->Lights2Status=0;
 19497  1D3C  086E               	movf	_Load,w
 19498  1D3D  3E44               	addlw	68
 19499  1D3E  0086               	movwf	6
 19500  1D3F  3002               	movlw	2	; select bank4/5
 19501  1D40  0087               	movwf	7
 19502  1D41  0181               	clrf	1
 19503  1D42                     i1l7331:	
 19504                           
 19505                           ;OverLoad_B1.c: 333: }
 19506                           ;OverLoad_B1.c: 334: if(lights == 3)
 19507  1D42  0872               	movf	i1setLoad_StatusOff@lights,w
 19508  1D43  3A03               	xorlw	3
 19509  1D44  1D03               	skipz
 19510  1D45  0008               	return
 19511                           
 19512                           ;OverLoad_B1.c: 335: {
 19513                           ;OverLoad_B1.c: 336: Load->Lights3Status=0;
 19514  1D46  086E               	movf	_Load,w
 19515  1D47  3E45               	addlw	69
 19516  1D48  0086               	movwf	6
 19517  1D49  3002               	movlw	2	; select bank4/5
 19518  1D4A  0087               	movwf	7
 19519  1D4B  0181               	clrf	1
 19520  1D4C  0008               	return
 19521  1D4D                     __end_ofi1_setLoad_StatusOff:	
 19522                           
 19523                           	psect	text122
 19524  1914                     __ptext122:	
 19525 ;; *************** function _IOC_ISR *****************
 19526 ;; Defined at:
 19527 ;;		line 336 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19528 ;; Parameters:    Size  Location     Type
 19529 ;;		None
 19530 ;; Auto vars:     Size  Location     Type
 19531 ;;		None
 19532 ;; Return value:  Size  Location     Type
 19533 ;;		None               void
 19534 ;; Registers used:
 19535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19536 ;; Tracked objects:
 19537 ;;		On entry : 0/0
 19538 ;;		On exit  : 0/0
 19539 ;;		Unchanged: 0/0
 19540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19545 ;;Total ram usage:        0 bytes
 19546 ;; Hardware stack levels used:    1
 19547 ;; Hardware stack levels required when called:    1
 19548 ;; This function calls:
 19549 ;;		_setDimmerReClock
 19550 ;; This function is called by:
 19551 ;;		_ISR
 19552 ;; This function uses a non-reentrant model
 19553 ;;
 19554                           
 19555                           
 19556                           ;psect for function _IOC_ISR
 19557  1914                     _IOC_ISR:	
 19558                           
 19559                           ;MCU_B1.c: 338: if(IOCIE && IOCBF2)
 19560                           
 19561                           ;incstack = 0
 19562                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19563  1914  1D8B               	btfss	11,3	;volatile
 19564  1915  0008               	return
 19565  1916  0027               	movlb	7	; select bank7
 19566  1917  1D16               	btfss	22,2	;volatile
 19567  1918  0008               	return
 19568                           
 19569                           ;MCU_B1.c: 339: {
 19570                           ;MCU_B1.c: 340: IOCBF2=0;
 19571  1919  1116               	bcf	22,2	;volatile
 19572                           
 19573                           ;MCU_B1.c: 341: IOCIF=0;
 19574  191A  100B               	bcf	11,0	;volatile
 19575                           
 19576                           ;MCU_B1.c: 342: if(TMain->PowerON)
 19577  191B  087D               	movf	_TMain,w
 19578  191C  0086               	movwf	6
 19579  191D  3001               	movlw	1	; select bank2/3
 19580  191E  0087               	movwf	7
 19581  191F  1C01               	btfss	1,0
 19582  1920  0008               	return
 19583                           
 19584                           ;MCU_B1.c: 343: {
 19585                           ;MCU_B1.c: 359: Dimmer->Correction=0;
 19586  1921  0021               	movlb	1	; select bank1
 19587  1922  0839               	movf	_Dimmer^(0+128),w
 19588  1923  3E02               	addlw	2
 19589  1924  0086               	movwf	6
 19590  1925  0187               	clrf	7
 19591  1926  0181               	clrf	1
 19592                           
 19593                           ;MCU_B1.c: 360: setDimmerReClock();
 19594  1927  319A  226C         	fcall	_setDimmerReClock
 19595  1929  0008               	return
 19596  192A                     __end_of_IOC_ISR:	
 19597                           
 19598                           	psect	text123
 19599  1A6C                     __ptext123:	
 19600 ;; *************** function _setDimmerReClock *****************
 19601 ;; Defined at:
 19602 ;;		line 162 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19603 ;; Parameters:    Size  Location     Type
 19604 ;;		None
 19605 ;; Auto vars:     Size  Location     Type
 19606 ;;		None
 19607 ;; Return value:  Size  Location     Type
 19608 ;;		None               void
 19609 ;; Registers used:
 19610 ;;		wreg, fsr1l, fsr1h
 19611 ;; Tracked objects:
 19612 ;;		On entry : 0/0
 19613 ;;		On exit  : 0/0
 19614 ;;		Unchanged: 0/0
 19615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19620 ;;Total ram usage:        0 bytes
 19621 ;; Hardware stack levels used:    1
 19622 ;; This function calls:
 19623 ;;		Nothing
 19624 ;; This function is called by:
 19625 ;;		_IOC_ISR
 19626 ;; This function uses a non-reentrant model
 19627 ;;
 19628                           
 19629                           
 19630                           ;psect for function _setDimmerReClock
 19631  1A6C                     _setDimmerReClock:	
 19632                           
 19633                           ;MCU_B1.c: 164: TMR0=255;
 19634                           
 19635                           ;incstack = 0
 19636                           ; Regs used in _setDimmerReClock: [wregfsr1]
 19637  1A6C  30FF               	movlw	255
 19638  1A6D  0020               	movlb	0	; select bank0
 19639  1A6E  0095               	movwf	21	;volatile
 19640                           
 19641                           ;MCU_B1.c: 176: if(!DimmerLights11->MosfetSignal)
 19642  1A6F  086D               	movf	_DimmerLights11,w
 19643  1A70  3E0C               	addlw	12
 19644  1A71  0086               	movwf	6
 19645  1A72  3001               	movlw	1	; select bank2/3
 19646  1A73  0087               	movwf	7
 19647  1A74  1881               	btfsc	1,1
 19648  1A75  2A7C               	goto	i1l2886
 19649                           
 19650                           ;MCU_B1.c: 177: {
 19651                           ;MCU_B1.c: 178: DimmerLights11->MosfetSignal=1;
 19652  1A76  086D               	movf	_DimmerLights11,w
 19653  1A77  3E0C               	addlw	12
 19654  1A78  0086               	movwf	6
 19655  1A79  3001               	movlw	1	; select bank2/3
 19656  1A7A  0087               	movwf	7
 19657  1A7B  1481               	bsf	1,1
 19658  1A7C                     i1l2886:	
 19659                           
 19660                           ;MCU_B1.c: 179: }
 19661                           ;MCU_B1.c: 204: if(!DimmerLights22->MosfetSignal)
 19662  1A7C  0879               	movf	_DimmerLights22,w
 19663  1A7D  3E0C               	addlw	12
 19664  1A7E  0086               	movwf	6
 19665  1A7F  3001               	movlw	1	; select bank2/3
 19666  1A80  0087               	movwf	7
 19667  1A81  1881               	btfsc	1,1
 19668  1A82  0008               	return
 19669                           
 19670                           ;MCU_B1.c: 205: {
 19671                           ;MCU_B1.c: 206: DimmerLights22->MosfetSignal=1;
 19672  1A83  0879               	movf	_DimmerLights22,w
 19673  1A84  3E0C               	addlw	12
 19674  1A85  0086               	movwf	6
 19675  1A86  3001               	movlw	1	; select bank2/3
 19676  1A87  0087               	movwf	7
 19677  1A88  1481               	bsf	1,1
 19678  1A89  0008               	return
 19679  1A8A                     __end_of_setDimmerReClock:	
 19680                           
 19681                           	psect	text124
 19682  2706                     __ptext124:	
 19683 ;; *************** function _INT_ISR *****************
 19684 ;; Defined at:
 19685 ;;		line 287 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19686 ;; Parameters:    Size  Location     Type
 19687 ;;		None
 19688 ;; Auto vars:     Size  Location     Type
 19689 ;;		None
 19690 ;; Return value:  Size  Location     Type
 19691 ;;		None               void
 19692 ;; Registers used:
 19693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19694 ;; Tracked objects:
 19695 ;;		On entry : 0/0
 19696 ;;		On exit  : 0/0
 19697 ;;		Unchanged: 0/0
 19698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19703 ;;Total ram usage:        0 bytes
 19704 ;; Hardware stack levels used:    1
 19705 ;; Hardware stack levels required when called:    2
 19706 ;; This function calls:
 19707 ;;		_setRF_ReceiveGO
 19708 ;; This function is called by:
 19709 ;;		_ISR
 19710 ;; This function uses a non-reentrant model
 19711 ;;
 19712                           
 19713                           
 19714                           ;psect for function _INT_ISR
 19715  2706                     _INT_ISR:	
 19716                           
 19717                           ;MCU_B1.c: 289: if(INTE && INTF)
 19718                           
 19719                           ;incstack = 0
 19720                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19721  2706  1E0B               	btfss	11,4	;volatile
 19722  2707  0008               	return
 19723  2708  1C8B               	btfss	11,1	;volatile
 19724  2709  0008               	return
 19725                           
 19726                           ;MCU_B1.c: 290: {
 19727                           ;MCU_B1.c: 291: INTF=0;
 19728  270A  108B               	bcf	11,1	;volatile
 19729                           
 19730                           ;MCU_B1.c: 292: INTE=0;
 19731  270B  120B               	bcf	11,4	;volatile
 19732                           
 19733                           ;MCU_B1.c: 293: setRF_ReceiveGO(1,1);
 19734  270C  01F3               	clrf	setRF_ReceiveGO@command
 19735  270D  0AF3               	incf	setRF_ReceiveGO@command,f
 19736  270E  3001               	movlw	1
 19737  270F  31A6  26FA         	fcall	_setRF_ReceiveGO
 19738  2711  0008               	return
 19739  2712                     __end_of_INT_ISR:	
 19740                           
 19741                           	psect	text125
 19742  26FA                     __ptext125:	
 19743 ;; *************** function _setRF_ReceiveGO *****************
 19744 ;; Defined at:
 19745 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19746 ;; Parameters:    Size  Location     Type
 19747 ;;  rf              1    wreg     unsigned char 
 19748 ;;  command         1    2[COMMON] unsigned char 
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;  rf              1    3[COMMON] unsigned char 
 19751 ;; Return value:  Size  Location     Type
 19752 ;;		None               void
 19753 ;; Registers used:
 19754 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19760 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19764 ;;Total ram usage:        2 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:    1
 19767 ;; This function calls:
 19768 ;;		i1_RfPointSelect
 19769 ;; This function is called by:
 19770 ;;		_INT_ISR
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           
 19775                           ;psect for function _setRF_ReceiveGO
 19776  26FA                     _setRF_ReceiveGO:	
 19777                           
 19778                           ;incstack = 0
 19779                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19780                           ;setRF_ReceiveGO@rf stored from wreg
 19781  26FA  00F4               	movwf	setRF_ReceiveGO@rf
 19782                           
 19783                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 19784  26FB  0874               	movf	setRF_ReceiveGO@rf,w
 19785  26FC  31A6  26B9         	fcall	i1_RfPointSelect
 19786                           
 19787                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 19788  26FE  087A               	movf	_RF,w
 19789  26FF  0086               	movwf	6
 19790  2700  0187               	clrf	7
 19791  2701  0873               	movf	setRF_ReceiveGO@command,w
 19792  2702  1081               	bcf	1,1
 19793  2703  1D03               	skipz
 19794  2704  1481               	bsf	1,1
 19795  2705  0008               	return
 19796  2706                     __end_of_setRF_ReceiveGO:	
 19797                           
 19798                           	psect	text126
 19799  26B9                     __ptext126:	
 19800 ;; *************** function i1_RfPointSelect *****************
 19801 ;; Defined at:
 19802 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19803 ;; Parameters:    Size  Location     Type
 19804 ;;  rf              1    wreg     unsigned char 
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;  rf              1    1[COMMON] unsigned char 
 19807 ;; Return value:  Size  Location     Type
 19808 ;;		None               void
 19809 ;; Registers used:
 19810 ;;		wreg
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/0
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19820 ;;Total ram usage:        2 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; This function calls:
 19823 ;;		Nothing
 19824 ;; This function is called by:
 19825 ;;		_setRF_ReceiveGO
 19826 ;; This function uses a non-reentrant model
 19827 ;;
 19828                           
 19829                           
 19830                           ;psect for function i1_RfPointSelect
 19831  26B9                     i1_RfPointSelect:	
 19832                           
 19833                           ;incstack = 0
 19834                           ; Regs used in i1_RfPointSelect: [wreg]
 19835                           ;i1RfPointSelect@rf stored from wreg
 19836  26B9  00F2               	movwf	i1RfPointSelect@rf
 19837                           
 19838                           ;RF_Control_B1.c: 10: if(rf == 1)
 19839  26BA  0872               	movf	i1RfPointSelect@rf,w
 19840  26BB  3A01               	xorlw	1
 19841  26BC  1D03               	skipz
 19842  26BD  0008               	return
 19843                           
 19844                           ;RF_Control_B1.c: 11: {
 19845                           ;RF_Control_B1.c: 12: RF=&RF1;
 19846  26BE  30E4               	movlw	_RF1& (0+255)
 19847  26BF  00F1               	movwf	??i1_RfPointSelect
 19848  26C0  0871               	movf	??i1_RfPointSelect,w
 19849  26C1  00FA               	movwf	_RF
 19850  26C2  0008               	return
 19851  26C3                     __end_ofi1_RfPointSelect:	
 19852  007E                     btemp	set	126	;btemp
 19853  007E                     pic14e$flags	set	126
 19854  007E                     wtemp	set	126
 19855  007E                     wtemp0	set	126
 19856  0080                     wtemp1	set	128
 19857  0082                     wtemp2	set	130
 19858  0084                     wtemp3	set	132
 19859  0086                     wtemp4	set	134
 19860  0088                     wtemp5	set	136
 19861  007F                     wtemp6	set	127
 19862  007E                     ttemp	set	126
 19863  007E                     ttemp0	set	126
 19864  0081                     ttemp1	set	129
 19865  0084                     ttemp2	set	132
 19866  0087                     ttemp3	set	135
 19867  007F                     ttemp4	set	127
 19868  007E                     ltemp	set	126
 19869  007E                     ltemp0	set	126
 19870  0082                     ltemp1	set	130
 19871  0086                     ltemp2	set	134
 19872  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         262
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     76      80
    BANK1            80      0      74
    BANK2            80      0      74
    BANK3            80      0      69
    BANK4            80      0      71
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 7
		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 3
		 -> NULL(NULL[0]), RF1(BANK1[3]), 

    Load	PTR struct OverLoad size(1) Largest target is 71
		 -> NULL(NULL[0]), Load1(BANK4[71]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 16
		 -> NULL(NULL[0]), VarTMain(BANK2[16]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK3[37]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights1(BANK2[14]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), DimmerLights1(BANK2[14]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _TMR0_ISR->i1_setLoad_StatusOff
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getLoad_AD->_getAD
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setRF_DimmerLights
    _Sw_DimmerOffFunc->_setRF_DimmerLights
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setRF_DimmerLights
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _getPercentValue->___fttol
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _Load_Main->_setLoad_Exceptions
    _setLoad_Exceptions->_DimmerLights_Exceptions
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RfPointSelect
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _setDimmerLights_Clear->_DimmerLightsPointSelect
    _Load_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setRF_DimmerLights
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setRF_DimmerLights
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRF_DimmerLights->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   92124
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                              _MainT
               _MainT_Initialization
                 _Mcu_Initialization
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                         _getLoad_AD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           8     8      0     470
                                              4 BANK0      8     8      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     139
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0   22104
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0   22104
                                             69 BANK0      5     5      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     315
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    9690
                                             66 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    9103
                                             66 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     1     1      0    1258
                                              4 BANK0      1     1      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     260
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     260
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     916
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     916
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   29064
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   29064
                                             73 BANK0      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   28060
                                             72 BANK0      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1487
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   26520
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      2     2      0   10784
                                             66 BANK0      2     2      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2     981
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   11355
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   11179
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11113
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11047
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2502
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3118
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     152
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     160
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     503
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     161
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     114
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    1840
                             _setBuz
                     _setLoad_Enable
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (2) _setLoad_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                            5     5      0    7560
                                             13 BANK0      5     5      0
                            ___lwdiv
                             ___wmul
              _setDimmerLights_Clear
              _setLoad_AH_AL_Restore
                 _setLoad_Exceptions
 ---------------------------------------------------------------------------------
 (2) _setLoad_Exceptions                                   2     2      0    6064
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (2) _setSw_Enable                                         1     1      0     106
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (2) _setRF_Enable                                         2     1      1     269
                                              2 BANK0      2     1      1
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_Exceptions                              1     1      0    4587
                                             10 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerERROR                         2     1      1     353
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_ERROR                                2     2      0    2659
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                  _setLoad_StatusOff
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Clear                                2     1      1     414
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  1     1      0      90
                                              2 BANK0      1     1      0
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1013
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1013
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     307
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     307
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5827
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      47
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   10538
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0   10459
                                             69 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1    7025
                                             66 BANK0      3     2      1
            _DimmerLightsPointSelect
                  _setLoad_StatusOff
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setLoad_StatusOff                                    2     1      1     362
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1637
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                      _setLoad_Count
                   _setLoad_StatusOn
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOn                                     2     1      1     201
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _setLoad_Count                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     885
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      79
         _getDimmerLights_StatusFlag
                         _setLoad_GO
 ---------------------------------------------------------------------------------
 (3) _setLoad_GO                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_StatusFlag                           3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      66
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      66
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0   10231
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0   10231
                                             66 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            3     3      0      44
                                              2 BANK0      2     2      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _RfPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _setSw_Status                                         2     1      1     568
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1    6328
                                             61 BANK0      5     4      1
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (5) _setPercentValue                                      4     4      0    5458
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     380
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2712
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3    2267
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2048
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _setRFSW_Status                                       2     1      1     645
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfSWPointSelect                                      2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     491
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     491
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _DimmerLightsPointSelect                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setBuz                                               4     2      2    1434
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     444
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      75
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      75
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    1869
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     490
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     354
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     309
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     218
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     512
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     444
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      68
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     270
                                              6 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0     140
                                              2 COMMON     4     4      0
                i1_setLoad_StatusOff
 ---------------------------------------------------------------------------------
 (13) i1_setLoad_StatusOff                                 2     1      1     140
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             0     0      0       0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     130
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     130
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setLoad_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setLoad_Count
         _setLoad_StatusOn
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setLoad_StatusOff
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _setDimmerLights_Clear
       _DimmerLightsPointSelect
     _setLoad_AH_AL_Restore
     _setLoad_Exceptions
       _DimmerLights_Exceptions
         _getDimmerLights_StatusFlag
         _setBuz
           ___wmul
         _setDimmerLights_ERROR
           _DimmerLightsPointSelect
           _setLED
             _LedPointSelect
           _setLoad_StatusOff
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
         _setDimmerLights_TriggerERROR
           _DimmerLightsPointSelect
       _setLED
         _LedPointSelect
       _setRF_Enable
         _RfPointSelect
         _setINT_GO
       _setSw_Enable
         _SwPointSelect
   _MainT
     _setBuz
       ___wmul
     _setLoad_Enable
     _setRF_Enable
       _RfPointSelect
       _setINT_GO
     _setSw_Enable
       _SwPointSelect
   _MainT_Initialization
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_Count
             _setLoad_StatusOn
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
               _setPercentValue
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___wmul
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _getLoad_AD
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR
     i1_setLoad_StatusOff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      47      13       88.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     17E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     17E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Sep 24 16:48:24 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _RD 0CA8  
                                     _RF 007A                  __end_of_CC2500_WriteREG 19CC  
                                     _WR 0CA9                                       _Sw 007B  
     __end_of_getDimmerLights_StatusFlag 1956               _getDimmerLights_StatusFlag 1940  
                    ___wmul@multiplicand 0022                   __end_of_setDelayOff_GO 11B8  
                           ___ftadd@exp1 004A                             ___ftadd@exp2 0049  
              setDimmerLights_Adj@lights 0064                __end_of_setLoad_StatusOff 1D7E  
                   _setDimmerLights_Main 15DC                             ___ftadd@sign 0048  
                                    l300 1F68                                      l311 12EE  
                                    l307 12DD                                      l324 1D10  
                                    l327 1D16                                      l291 1F36  
                                    l357 19A6                                      l381 27B8  
                                    l358 19A8                                      l296 1F60  
                                    l393 1B75                                      l369 19BB  
                                    l297 1F65                                      l387 1A21  
                                    l674 1CBB                                      l886 12AD  
                                    _GIE 005F                                      _CRC 00B7  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 0015                                      _RB1 0069  
                                    _RA3 0063                                      _RC0 0070  
                                    _RA4 0064                                      _LED 00BB  
                                    _RC1 0071                                      _RB3 006B  
                                    _RC2 0072                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC4 0074  
                                    _RC5 0075                                      _RC7 0077  
                                    _RF1 00E4                                      _ISR 0004  
                                    _Sw1 0158                                      _Sw2 0161  
                                    _Buz 0078                setDimmerLights_Adj@status 0062  
               __end_of_CC2500_WriteByte 19B3           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 26C3                          __end_of_ADC_Set 2689  
                        ?_DelayTimejudge 0071                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023                          _setDimmerLights 0961  
                  _setDimmerLights_ERROR 1052                    _setDimmerLights_AdjRF 1B4D  
                  _setDimmerLights_AdjGo 1868                    _setDimmerLights_Clear 27E0  
                                   ?_ISR 0071                             ___ftdiv@cntr 0038  
                        __end_of_IOC_ISR 192A                               Load_Main@i 0031  
                           ___ftdiv@sign 003D                                     l2100 1E4F  
                                   l3113 1249                 ?_DimmerLightsPointSelect 0071  
                                   l2068 1FF9                                     l2086 1935  
                                   l3142 0E4F                                     l3119 1260  
                                   l1472 1ED1                                     l2272 2664  
                                   l1465 0360                          __end_of_IOC_Set 275C  
                                   l6023 1B20                                     l2912 1960  
                                   l6035 18B7                                     l6019 1B15  
                                   l7011 1E1E                                     l6131 1191  
                                   l6133 119E                                     l7007 1E17  
                                   l6127 118B                                     l2952 1A93  
                                   l6217 1DBD                                     l6137 11AA  
                                   l2938 1CE5                                     l5701 121F  
                                   l6253 1A5F                                     l8103 13FF  
                                   l7311 0828                                     l7303 080A  
                                   l6255 1A65                                     l6351 1E3D  
                                   l5705 1226                                     l8121 11C8  
                                   l7305 0816                                     l5715 124E  
                                   l5707 1230                                     l7315 0831  
                                   l6507 1F48                                     l5717 1256  
                                   l5709 1235                                     l8125 11CE  
                                   l8205 09C8                                     l8055 1A8D  
                                   l5735 1AF2                                     l5823 0ACF  
                                   l8151 1200                                     l8135 11DE  
                                   l8143 11EA                                     l8215 1D69  
                                   l5807 0E8E                                     l5751 0DDF  
                                   l8231 178D                                     l7353 0A5F  
                                   l7361 0A8D                                     l5817 0AB9  
                                   l8129 11D4                                     l8241 17B1  
                                   l9113 091D                                     l8411 1B86  
                                   l8075 15A0                                     l6387 1950  
                                   l8155 1206                                     l8139 11E4  
                                   l8219 1D73                                     l5747 0DD8  
                                   l8331 088B                                     l9107 08EC  
                                   l7365 0A94                                     l8413 1B91  
                                   l5845 0B29                                     l5837 0B10  
                                   l5909 167A                                     l8173 1DA4  
                                   l9053 0D40                                     l9205 00F7  
                                   l5781 0E2E                                     l5757 0DEE  
                                   l8245 17C7                                     l8341 08B0  
                                   l9117 0925                                     l7359 0A87  
                                   l8079 15BE                                     l5951 18DF  
                                   l5943 16DF                                     l5935 16C5  
                                   l5927 16AA                                     l8159 120C  
                                   l8423 1F00                                     l5775 0E1B  
                                   l5937 16CE                                     l5929 16B8  
                                   l8169 1D99                                     l8441 12A0  
                                   l9225 01A8                                     l5793 0E61  
                                   l5777 0E25                                     l5769 0E08  
                                   l5881 0BBB                                     l5865 0B78  
                                   l8345 08B9                                     l8337 08A7  
                                   l9129 095C                                     l5955 18E8  
                                   l5939 16D1                                     l9171 1EA1  
                                   l8443 12A5                                     l9219 018C  
                                   l9227 01C0                                     l5787 0E41  
                                   l5779 0E2A                                     l5859 0B62  
                                   l8613 1CCB                                     l8437 128D  
                                   l9253 025E                                     l9157 155F  
                                   l9149 1534                                     l5797 0E73  
                                   l5789 0E4B                                     l5893 0BD7  
                                   l5877 0BB3                                     l5981 1CA1  
                                   l8349 08C2                                     l9247 0246  
                                   l9183 007C                                     l8543 1429  
                                   l5969 1978                                     l9265 0295  
                                   l9273 02CD                                     l8385 1300  
                                   l5889 0BCF                                     l5993 1CB3  
                                   l5985 1CA7                                     l5977 1C9B  
                                   l8723 15F8                                     l9291 034A  
                                   l8387 1318                                     l8803 1703  
                                   l8563 146B                                     l8539 1419  
                                   l9363 10D7                                     l8741 162E  
                                   l5989 1CAD                                     l8813 1720  
                                   l8735 161C                                     l8719 15EB  
                                   l9199 00C9                                     l8399 1331  
                                   l8487 1017                                     l8911 0F78  
                                   l9359 10CA                                     l8753 165A  
                                   l9297 0366                                     l8841 1765  
                                   l8825 173B                                     l8921 0FAB  
                                   l8499 102D                                     l8827 173F  
                                   l8595 14CA                                     l8861 0EBD  
                                   l8871 0ECD                                     l8863 0EC3  
                                   l8873 0ED5                                     _CFGS 0CAE  
                                   l8799 16FC                                     l8887 0F02  
                                   l8897 0F34                                     l8995 135C  
                                   l8989 1345                                     l8999 139C  
                                   _FREE 0CAC                                     _LATA 010C  
                                   _LATB 010D                          __end_of_INT_ISR 2712  
                                   _LATC 010E                                     u4015 0E1C  
                                   u4045 0E2F                                     u4145 0AE1  
                                   u4305 0BDE                                     u4225 0B84  
                                   u4155 0AF1                                     u4075 0E42  
                                   u4235 0B94                                     u4165 0B11  
                                   u4175 0B20                                     u4335 1681  
                                   u4255 0BBC                                     u4185 0B2A  
                                   u4265 0BC2                                     _PEIE 005E  
                                   u4365 16AB                                     _INTE 005C  
                                   _INTF 0059                                     u3815 1244  
                                   u4295 0BD8                                     u3835 1251  
                                   u4395 16C6                                     u3865 1267  
                                   u3795 122B                                     u6355 080D  
                                   u8055 1B7B                                     u6375 0817  
                                   u9015 1508                                     u6465 0A20  
                                   u6385 0821                                     u9025 1549  
                                   u3985 0E09                                     u7610 13AE  
                                   u6395 0829                                     u7615 13AC  
                                   u9135 0143                                     u7545 1A94  
                                   u9065 1E88                                     u7555 1A99  
                                   u9185 01D8                                     u7880 07FE  
                                   u8945 0907                                     _LWLO 0CAD  
                                   _RFSW 00BC                                     _TMR0 0015  
                                   u8985 0948                          __end_of_INT_Set 266F  
                                   _RSSI 00BD                                     _WREN 0CAA  
                                   _Buz1 014C                                     _Load 006E  
                                   _main 10A9                             ___ftpack@arg 0020  
                    __end_of_DlyOff_Main 07F7                          __end_of_RF_Main 2664  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                                     ltemp 007E  
          __size_of_setRF_Initialization 0007                         _setDimmerReClock 1A6C  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                      DelayTimejudge@value 0022  
                          _RfPointSelect 26D9               __end_of_setRFSW_AdjControl 1E65  
                           ___ftmul@cntr 003C                             ___ftmul@sign 003D  
                                  ??_ISR 0077                             ___fttol@exp1 0058  
                           ___fttol@lval 0054                         __end_of_LED_Main 2742  
                  ?_setDimmerLights_Main 0071                          ?_setDelayOff_GO 0023  
                  __end_of_setLoad_Count 1914                                    ?_main 0071  
              setControl_Lights_Table@rf 0067                          __end_of___ftadd 0EA6  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0B4B  
                        __end_of___ftmul 0BFF                          __end_of___fttol 16E8  
           setDimmerLights_AdjGo@command 0022                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                        __end_of___lwdiv 0838                   _setDimmerLights_Switch 27C0  
          __size_of_CC2500_FrequencyCabr 000C                                    _RFSW1 00E7  
                                  _RFSW2 00E8                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0071                       setRF_Learn@command 0022  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E             __size_ofi1_setLoad_StatusOff 0031  
                                  _WPUB0 1068                                    _WPUB1 1069  
                                  _WPUB2 106A                                    _TMain 007D  
                          setRF_Learn@rf 0023                                    _MainT 14EF  
                                  _Load1 0220                            __CFG_WRT$HALF 0000  
                       __end_of_TMR0_ISR 077E             __size_of_CC2500_WriteCommand 0010  
                       __end_of_TMR0_Set 2769                                    _getAD 1956  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 12DB  
          DimmerLights_Exceptions@status 002A                            ___ftpack@sign 0024  
                         _setLoad_Enable 27F0              __size_of_CC2500_ClearRXFIFO 0004  
                          ??_Buzzer_Main 0020              __size_of_CC2500_ClearTXFIFO 0004  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 0380  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                       ?_CC2500_ReadByte 0071                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0011  
          __end_of_setLED_Initialization 1899                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                       _setRF_DimmerLights 13A4  
            __size_of_Flash_Memory_Write 002F                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0004  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
               setLoad_StatusOff@command 0020         __size_of_DelayOff_Initialization 0008  
                 ?_setLoad_AH_AL_Restore 0071                setDimmerLights_Main@clear 0065  
                  setLoad_Enable@command 0020                   ??_Flash_Memory_Erasing 0020  
                        _getPercentValue 1101                       ??_CC2500_SIDLEMode 0024  
                        __initialization 0018                         ?_CC2500_PowerRST 0071  
                      ??_Sw_DimmerOnFunc 0062                        ??_setPercentValue 0059  
                           __end_of_main 1101                      ?_setRF_DimmerLights 005D  
                       ?_CC2500_WriteREG 0022                                ??_ADC_Set 0020  
                __end_of_setDimmerLights 09FA                     _setSw_Initialization 26A0  
             __size_of_setLoad_StatusOff 0031                                   ??_main 006C  
                          ___fttol@sign1 0053                             ?_setLog_Code 0071  
                _setControl_Lights_Table 0838                   ?_Buzzer_Initialization 0071  
                ??_DlyOff_Initialization 0022                               _Receive_GO 0381  
                             _Receive_OK 0382                                ??_IOC_ISR 0071  
                 ?_setDimmerLights_ERROR 0071                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 18EA                                   ?_MainT 0071  
                 ?_setDimmerLights_AdjRF 0071                                ??_INT_ISR 0075  
                 ?_setDimmerLights_AdjGo 0022                 __size_of_setRFSW_Control 0090  
                       ??_setRFSW_Status 0023                                ??_INT_Set 0020  
                 ?_setDimmerLights_Clear 0022                  ??_Switch_Initialization 0025  
                 __end_of_setLoad_Enable 2800                        i1RfPointSelect@rf 0072  
                   ??_setRF_DimmerLights 005E                                   ?_getAD 0020  
                            _DlyOff_Main 077E                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 006C  
                                 _ADRESH 009C                                   _ADRESL 009B  
             i1setLoad_StatusOff@command 0071                           setRF_Enable@rf 0023  
                       __end_of___awtoft 1B09                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 1277                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 27D0                                   i1l2833 05C3  
                                 i1l2881 076E                                   i1l2886 1A7C  
                                 i1l7331 1D42                                   i1l7327 1D38  
                                 i1l7821 0572                                   i1l7911 06FE  
                                 i1l7815 055B                                   i1l7823 0578  
                                 i1l7905 06E7                                   i1l7913 0704  
                                 i1l7833 05AB                                   i1l7817 0561  
                                 i1l7923 0737                                   i1l7907 06ED  
                                 i1l7829 0596                                   i1l7837 05BE  
                                 i1l7765 0474                                   i1l7919 0722  
                                 i1l7927 074A                                   i1l7855 0602  
                                 i1l7929 074F                                   i1l7787 04E9  
                                 i1l7877 0676                                   i1l7797 050F  
                                 i1l7887 069B                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 _PMCON2 0196                                   u701_25 04A9  
                                 _OSCCON 0099                                   u723_25 0636  
                     __size_of_Load_Main 03E0                                   u739_25 0761  
                                 _TMR0IE 005D                                   _TMR0IF 005A  
                                 _IO_Set 19E5                       DelayTime_1us@count 0020  
                             _VarProduct 01C5                    _Dimmer_Initialization 267B  
         __size_of_CC2500_PowerOnInitial 0015            __end_of_CC2500_PowerOnInitial 18D5  
                                 _Dimmer 00B9                                   _DlySw1 00CB  
                                 _DlySw2 00D0              __size_of_setLoad_Exceptions 0043  
             __end_of_Mcu_Initialization 199A                      __end_of_Buzzer_Main 0AA2  
                                 _Memory 007C                                   _Timer0 00E9  
     __end_of_setDimmerLights_TriggerAdj 1888               _setDimmerLights_TriggerAdj 1878  
          setDimmerLights_Switch@command 0022                                   ___wmul 1A8A  
                              ??___ftadd 0044             __size_of_DelayOffPointSelect 0017  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___ftmul 0034                                ??___fttol 004F  
           ?_Flash_Memory_Initialization 0071                                ??___lwdiv 0024  
                        i1_RfPointSelect 26B9              setDimmerLights_AdjRF@lights 0060  
                 ??_setDimmerLights_Main 0065                                   _r_data 00C2  
                                 _s_data 00C3                                   _setLED 11B8  
                       _DimmerLightsIntr 00BA                    ?_setSw_Initialization 0071  
                  setDimmerLights@status 0024                                   _setBuz 1565  
            __end_of_Load_Initialization 274F         ??_setDimmerLights_Initialization 0022  
        ?_setDimmerLights_Initialization 0071                    ___ftmul@f3_as_product 0039  
           ??_getDimmerLights_StatusFlag 0020                 Flash_Memory_Read@address 0022  
                      RfSWPointSelect@sw 0021                         ??_setRF_RxStatus 0023  
                  __end_of_SwPointSelect 18C0                          ?_setLoad_Enable 0071  
                          ?_setRF_Enable 0022                          _RfSWPointSelect 192A  
           __size_of_Flash_Memory_Modify 0065              __size_of_DimmerLights_Close 001A  
                __size_of_LedPointSelect 0022                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 2664  
                      ?_Sw_DimmerAdjFunc 0071              __size_of_CC2500_InitPATable 001F  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 115C  
       __end_of_CC2500_registers_address 182F                  __end_of__initialization 004B  
                        ??_RfPointSelect 0020              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0071                               ___ftadd@f1 003E  
                             ___ftadd@f2 0041                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0071                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0071                               ___ftmul@f1 002E  
                             ___ftmul@f2 0031                            __end_of_MainT 1565  
                             ___fttol@f1 004B                           __pcstackCOMMON 0071  
                     ??_Sw_DimmerOffFunc 0062                             __pidataBANK3 1AC7  
                          __end_of_getAD 196C                                ?_TMR0_ISR 0071  
                              ?_TMR0_Set 0071                   setLoad_AH_AL_Restore@i 0021  
           __size_of_setDimmerLights_Adj 0044                       _LED_Initialization 272A  
              ??_setControl_Lights_Table 0067         __size_of_DimmerLights_Exceptions 0064  
                       ??_DelayTimejudge 0020              ?_getDimmerLights_StatusFlag 0071  
              __size_of_setLoad_StatusOn 0032            ??_Flash_Memory_Initialization 005D  
               __size_of_setRF_ReceiveGO 000C                         ?_setDimmerLights 0024  
                      __end_of_Load_Main 042F                 __end_of_setDimmerReClock 1A8A  
                     __size_of_getRxData 0052                      ?_LED_Initialization 0071  
                      ?_CC2500_WriteByte 0071                                  ??_MainT 002A  
                         ??_setRF_Enable 0023                           _DimmerLights11 006D  
                         _DimmerLights22 0079                     __size_of_setLED_Main 0040  
              ??_setDimmerLights_Trigger 0023                                  ??_getAD 0023  
                     ??_CC2500_WriteByte 0020             setDimmerLights_Switch@lights 0023  
                             __pbssBANK0 006C                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                               __pbssBANK3 01A0  
                             __pbssBANK4 0220                              _Buzzer_Main 09FA  
                      ??_setRFSW_Control 0062                   ?_Dimmer_Initialization 0071  
                                ?_IO_Set 0071                               ??_LED_Main 0025  
                _DelayOff_Initialization 2690                               __pnvCOMMON 007C  
                          ??_Switch_Main 006A                           DelayTime_1us@i 0022  
                         DelayTime_1us@j 0024                     ??_LED_Initialization 0025  
                           _DimmerLights 006C                        LedPointSelect@led 0021  
                __end_ofi1_RfPointSelect 26C3                      i1_setLoad_StatusOff 1D1C  
                     __size_of_setINT_GO 0009                   __size_of_DelayOff_Main 0008  
                   __size_of_setRF_Learn 000E                              setBuz@count 0029  
                             __pmaintext 10A9                      _CC2500_WriteCommand 27B0  
       __size_of_DimmerLightsPointSelect 0015                         ??_setDelayOff_GO 0025  
          ??_DimmerLights_Initialization 0024                                  ?___wmul 0020  
                             ??_TMR0_ISR 0073                               ??_TMR0_Set 0020  
                             _getLoad_AD 08CB                               __pintentry 0004  
                 ??_setSw_Initialization 0024                            ?_setSw_Enable 0071  
                     __size_of_setTxData 00C9                  ?_setDimmerLights_Switch 0022  
                                ?_setLED 0022                   __size_of_DelayTime_1us 0026  
                                _ADC_Set 2682                                  ?_setBuz 0026  
                              ?___awtoft 0028                                ?___ftpack 0020  
           __end_of_setRF_Initialization 2690                            ?_setSw_Status 0022  
                     _setRFSW_AdjControl 1E25                  __end_of_RfSWPointSelect 1940  
                      Sw_DimmerOnFunc@sw 0063                     ?i1_setLoad_StatusOff 0071  
                                _IOC_ISR 1914                                  _IOC_Set 274F  
                   __size_of_setLog_Code 0047                                  _INT_ISR 2706  
                                _INT_Set 2669                     ?_CC2500_WriteCommand 0071  
                      _Flash_Memory_Main 1E65                        _Flash_Memory_Read 19CC  
                 __size_of_CC2500_RxData 0064                   __size_of_CC2500_TxData 0044  
                    ?_setRFSW_AdjControl 0071      setDimmerLights_TriggerERROR@command 0022  
                            setTxData@rf 0023                                  _RF_Data 00A0  
                                _RF_Main 2660                       ?_Flash_Memory_Main 0071  
                     ?_Flash_Memory_Read 0071          __end_of_setControl_Lights_Table 08CB  
                            ?_TouchPower 0071                          _Sw_DimmerOnFunc 140F  
                        _setPercentValue 1F73                  ??_setLoad_AH_AL_Restore 0020  
                          setLog_Code@rf 002B                         ?_getPercentValue 0071  
                                _Dimmer1 00E1             __end_of_CC2500_FrequencyCabr 271E  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00D9  
                                _VarLED2 00DD                        __end_of_getRxData 1052  
               _CC2500_registers_address 1800                           RF_RxDisable@rf 0024  
        __end_of_setDimmerLights_Trigger 27E0                                  _Product 006F  
                   ??_setRFSW_AdjControl 0064           __end_of_setDimmerLights_Switch 27D0  
                                ___ftadd 0DB0                           ??_setSw_Enable 0022  
                                ___ftdiv 0AA2                          __size_of___wmul 001E  
                                ___ftmul 0B4B                                  ___fttol 1661  
                    __end_of_Switch_Main 26B0                                  ___lwdiv 0801  
                ??_Buzzer_Initialization 0020                               ??___awtoft 002B  
                             ??___ftpack 0025                          __size_of_setLED 005E  
                   setRFSW_AdjControl@sw 0066                  ??_setDimmerLights_ERROR 0024  
                        __size_of_setBuz 0077                           ??_setSw_Status 0023  
                                __ptext1 08CB                                  __ptext2 1956  
                                __ptext3 26A8                                  __ptext4 0EA6  
                                __ptext5 2784                                  __ptext6 140F  
                                __ptext7 147E                                  __ptext8 1B96  
                                __ptext9 1878                  ??_setDimmerLights_AdjRF 005F  
                ??_setDimmerLights_AdjGo 0023                __size_of_CC2500_SIDLEMode 0004  
                ??_setDimmerLights_Clear 0023                      Sw_DimmerOnFunc@Idle 0062  
                  ??i1_setLoad_StatusOff 0072                             __size_of_ISR 0012  
              __end_of_Flash_Memory_Main 1EA8                __end_of_Flash_Memory_Read 19E5  
                             _setRF_Main 16E8                            _DelayOff_Main 2698  
                      _DimmerLights_Main 26EF                        __end_of_setINT_GO 0800  
         __size_of_DlyOff_Initialization 000B                    ??_CC2500_WriteCommand 0022  
          __end_of_DlyOff_Initialization 26D9                        ??_setRF_ReceiveGO 0074  
             __end_of_CC2500_ClearRXFIFO 2654               __end_of_CC2500_ClearTXFIFO 2658  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 1B09  
                    _DelayOffPointSelect 196C                                  clrloop0 2676  
         __size_of_Switch_Initialization 000D            __end_of_Switch_Initialization 2776  
                   end_of_initialization 004B                ??_DelayOff_Initialization 0023  
                             _setLoad_GO 26E4                        _CC2500_InitSetREG 1BE3  
                          _DelayTime_1us 1B70                        __end_of_setTxData 0CC8  
             __end_of_Flash_Memory_Write 1CEC                                  init_ram 266F  
                     ?_CC2500_InitSetREG 0071                      ??_DimmerLights_Main 0067  
                   Flash_Memory_Read@ret 0023                                  initloop 2670  
                             _setSw_Main 0EA6                    CC2500_ReadByte@loop_b 0021  
                      _CC2500_ReadStatus 1A18                   __size_of_setLoad_Count 0015  
                   Flash_Memory_Modify@i 0026                    _setLED_Initialization 1888  
                          _CC2500_Enable 0380                         ?i1_RfPointSelect 0071  
                     ?_CC2500_ReadStatus 0071                         setRFSW_Status@sw 0023  
          __size_of_MainT_Initialization 0013                 __size_of_CC2500_ReadByte 001D  
                          _CC2500_RxData 12DB                            _CC2500_TxData 1F2F  
                    ??_CC2500_InitSetREG 0025                     __end_of_setRF_Enable 1C37  
            ?_setDimmerLights_TriggerAdj 0022            __size_of_Flash_Memory_Erasing 000C  
                   ?_DelayOffPointSelect 0071                      _Flash_Memory_Modify 133F  
                _DimmerLights_Exceptions 1277                              ?_getLoad_AD 0071  
                           __pstringtext 1800                      _Flash_Memory_Unlock 26B0  
                    ??_CC2500_ReadStatus 0022                   setRF_Initialization@rf 0071  
                       _setLoad_StatusOn 1D7E         getDimmerLights_StatusFlag@Status 0021  
                CC2500_InitSetREG@loop_c 0028                setLoad_Exceptions@command 002C  
                    __size_of_TouchPower 0005                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 26FA  
                     _Mcu_Initialization 1983                         ??_setLoad_Enable 0020  
               __size_of_CC2500_PowerRST 0030                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                          _setSw_Main$3898 0067  
                        _setSw_Main$3899 0068                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 1B2B                  __end_of_Sw_DimmerOnFunc 147E  
                __end_of_setPercentValue 1FB9                 __size_of_CC2500_WriteREG 0019  
              __end_of_CC2500_InitSetREG 1C0D                      ?_Mcu_Initialization 0071  
                   ?_Flash_Memory_Modify 0071              __size_of_setRF_DimmerLights 006B  
                         ?_DelayTime_1us 0020                      _setDimmerLights_Adj 1EEB  
                   ?_Flash_Memory_Unlock 0071                __end_of_CC2500_ReadStatus 1A33  
                          ?_RF_RxDisable 0071               __end_of_setLoad_Exceptions 1EEB  
                            ___ftdiv@exp 003C                           __end_of_IO_Set 19FE  
                   _setRF_Initialization 2689                              _Switch_Main 26A8  
            setDimmerLights_Clear@lights 0023                        __size_of_LED_Main 000C  
                         ?_CC2500_RxData 0071                           ?_CC2500_TxData 0071  
                _DimmerLightsPointSelect 18D5                              ___ftmul@exp 0038  
                  _CC2500_PowerOnInitial 18C0                     ??_Mcu_Initialization 0021  
                  ??_DelayOffPointSelect 0020                     ?_setDimmerLights_Adj 0062  
              __size_of_Sw_DimmerAdjFunc 0026                     setRF_DimmerLights@on 005D  
                         __end_of___wmul 1AA8                             setRF_Main@rf 006A  
                      __size_of_TMR0_ISR 034F                        __size_of_TMR0_Set 000D  
          __size_of_setDimmerLights_Main 0085                           __end_of_setLED 1216  
                         __end_of_setBuz 15DC                            _setLoad_Count 18FF  
        _getDimmerLights_StatusFlag$1692 0022                     _CC2500_FrequencyCabr 2712  
                setLoad_StatusOn@command 0020                __size_of_Sw_DimmerOffFunc 0071  
             __size_of_Flash_Memory_Main 0043               __size_of_Flash_Memory_Read 0019  
                            ?_setRF_Main 0071                          _setRFSW_Control 1770  
                      ?_setDimmerReClock 0071                      start_initialization 0018  
                      _setRF_DimmerValue 1DB0                          ?_LedPointSelect 0071  
             __end_of_DimmerLights_Close 1A18                                _Load_Main 004F  
                setLoad_StatusOff@lights 0021                              __end_of_ISR 0016  
                  ??_Flash_Memory_Modify 0024             __size_of_Load_Initialization 000D  
                     ??_setDimmerReClock 0071                       ?_setRF_DimmerValue 0071  
             __end_of_CC2500_InitPATable 1AC7                    ??_Flash_Memory_Unlock 0020  
                ??_Dimmer_Initialization 0020                              ?_setLoad_GO 0071  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 1A4F  
                        RfPointSelect@rf 0021                      __size_of_getLoad_AD 0096  
                           ?_Buzzer_Main 0071                                 ??_IO_Set 0020  
                              _VarErrLED 00D5                              ?_setSw_Main 0071  
                    ??_setRF_DimmerValue 0061                   ?_setLED_Initialization 0071  
                   __end_of_setSw_Status 27B0                       Sw_DimmerAdjFunc@sw 0024  
                  ?_setRF_Initialization 0071                i1setLoad_StatusOff@lights 0072  
                              _VarMemory 01A0                  __size_of_setRFSW_Status 000F  
                  __end_of_RfPointSelect 26E4                __size_of_CC2500_WriteByte 0019  
                              _VarTimer0 00C4                ??_DimmerLights_Exceptions 002A  
                              _Rx_Length 00BE                  setRF_DimmerValue@lights 0063  
                  ??_setDimmerLights_Adj 0063                                 ??___wmul 0024  
                 __size_of_SwPointSelect 0014                                _Tx_Length 00C0  
                            __pdataBANK3 01C5                                 ??_setLED 0023  
                               ?_ADC_Set 0071                                 ??_setBuz 0028  
                        ??_DelayOff_Main 0065                        ??_CC2500_ReadByte 0020  
                         ?_setLoad_Count 0071                         _CC2500_SIDLEMode 2658  
             __size_of_DimmerLights_Main 000B                __end_of_setRF_DimmerValue 1DE5  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0071  
                        _setRF_Main$3572 006B                              __pbssCOMMON 0078  
                               ?_IOC_Set 0071                                ___latbits 0003  
                             ?_Load_Main 0071                                 ?_INT_ISR 0071  
                    setRF_Enable@command 0022                         ?_Sw_DimmerOnFunc 0071  
                          __pcstackBANK0 0020                                 ?_INT_Set 0071  
                       ?_setPercentValue 0071                          ??_DelayTime_1us 0022  
             __size_of_CC2500_InitSetREG 002A                 __size_of_setDimmerLights 0099  
                          DlyOff_Main@sw 0064                        ??_CC2500_PowerRST 0026  
                               ?_RF_Main 0071             setDimmerLights_Clear@command 0022  
                           ??_TouchPower 0020                     __size_of_DlyOff_Main 0079  
             __size_of_CC2500_ReadStatus 001B                            ??_setRF_Learn 0023  
                      ??_CC2500_WriteREG 0023                            _DimmerLights1 0130  
                          _DimmerLights2 013E                    CC2500_WriteREG@w_addr 0024  
                  setDelayOff_GO@command 0023                ??_DimmerLightsPointSelect 0020  
         __size_of_setLoad_AH_AL_Restore 0022                    __size_of_setRF_Enable 002A  
                        ??_CC2500_RxData 0024            __end_of_setLoad_AH_AL_Restore 1B4D  
                __size_of_setRF_RxStatus 000E                          ??_CC2500_TxData 0024  
                              __pnvBANK0 006F                                __pnvBANK1 00E9  
            __size_of_LED_Initialization 000C                   ?_CC2500_PowerOnInitial 0071  
                    __size_of_setRF_Main 0088                         ___lwdiv@dividend 0022  
                  DelayOffPointSelect@sw 0021                               setBuz@time 0026  
                    setDelayOff_GO@value 0024                 ?_setControl_Lights_Table 0071  
    __end_of_Flash_Memory_Initialization 0DB0              _Flash_Memory_Initialization 0CC8  
                              __ptext100 1565                                __ptext101 1A8A  
                              __ptext110 19B3                                __ptext102 2690  
                              __ptext111 2712                                __ptext103 26CE  
                              __ptext120 042F                                __ptext112 1B70  
                              __ptext104 196C                                __ptext121 1D1C  
                              __ptext113 2654                                __ptext105 18C0  
                              __ptext122 1914                                __ptext114 2650  
                              __ptext106 2658                                __ptext123 1A6C  
                              __ptext115 27B0                                __ptext107 1CEC  
                              __ptext124 2706                                __ptext116 199A  
                              __ptext108 1BE3                                __ptext125 26FA  
                              __ptext117 09FA                                __ptext109 1AA8  
                               ?___ftadd 003E                                __ptext126 26B9  
                              __ptext118 26C3                                _getRxData 1000  
                               ?___ftdiv 002E                                 ?___ftmul 002E  
                               ?___fttol 004B                                 ?___lwdiv 0020  
                __end_of_setRFSW_Control 1800                          _setRF_ReceiveGO 26FA  
                    __size_of_setLoad_GO 000B            __size_of_setSw_Initialization 0008  
         __size_of_Buzzer_Initialization 000B            __end_of_Buzzer_Initialization 26CE  
                       getPercentValue@i 005C                         setPercentValue@i 005A  
                          ??_setLog_Code 002A                       __end_of_TouchPower 2669  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0057  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0021  
                    __size_of_setSw_Main 015A            __end_of_setDimmerLights_ERROR 10A9  
           CC2500_ReadStatus@status_addr 0023           __size_of_setDimmerLights_AdjRF 0023  
         __size_of_setDimmerLights_AdjGo 0010            __end_of_setDimmerLights_AdjRF 1B70  
          __end_of_setDimmerLights_AdjGo 1878                   CC2500_WriteByte@loop_a 0021  
         __size_of_setDimmerLights_Clear 0010            __end_of_setDimmerLights_Clear 27F0  
                         __size_of_MainT 0076                                _r_address 00C1  
           __end_of_CC2500_patable_vaule 1866                           __size_of_getAD 0016  
                           _setRF_Enable 1C0D                         ___lwdiv@quotient 0025  
                __size_of_DelayTimejudge 002E                            _SwPointSelect 18AC  
                     Sw_DimmerOffFunc@sw 0064                                _setINT_GO 07F7  
                    __end_of_setLED_Main 1E25                 __end_of_setLoad_StatusOn 1DB0  
                 ??_setRF_Initialization 0020                        _CC2500_rfSettings 182F  
                         ___wmul@product 0024                                 _LED_Main 2736  
                        SwPointSelect@sw 0021                                clear_ram0 2675  
               CC2500_InitPATable@loop_d 0027                                _setTxData 0BFF  
    __end_of_DimmerLights_Initialization 18FF              _DimmerLights_Initialization 18EA  
                     _CC2500_ClearRXFIFO 2650                       _CC2500_ClearTXFIFO 2654  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0061  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 2792  
               __size_of_getPercentValue 005B                 setRF_DimmerLights@status 0060  
                 setRF_ReceiveGO@command 0073              __size_of_setRFSW_AdjControl 0040  
                     _Flash_Memory_Write 1CBD                               ?_getRxData 0071  
                               _TMR0_ISR 042F                             ??_getLoad_AD 0024  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
            __end_ofi1_setLoad_StatusOff 1D4D                        setRF_ReceiveGO@rf 0074  
                               _TMR0_Set 275C                         _Sw_DimmerAdjFunc 1B96  
                    ?_CC2500_ClearRXFIFO 0071                      ?_CC2500_ClearTXFIFO 0071  
                        ??_setLoad_Count 0020        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 1BE3  
            __end_of_CC2500_WriteCommand 27C0                   ??_CC2500_FrequencyCabr 0026  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
                      ___wmul@multiplier 0020               __size_of_setRF_DimmerValue 0035  
                    ?_Flash_Memory_Write 0071                         _Sw_DimmerOffFunc 147E  
           __end_of_MainT_Initialization 18AC                  __size_of_setDelayOff_GO 005C  
                  __size_of_setSw_Enable 001C                                 _DelayOff 00B8  
                           setSw_Main@sw 0069                              ??_Load_Main 002D  
                       __size_of_IOC_ISR 0016                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 272A                           ?_SwPointSelect 0071  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 000C                           setLED_Main@led 0024  
                       __size_of_INT_Set 0006                      __end_of_setLog_Code 2000  
                  _DlyOff_Initialization 26CE                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 185E  
                       __size_of_RF_Main 0004                   setLoad_StatusOn@lights 0021  
                     __end_of_getLoad_AD 0961                    _Switch_Initialization 2769  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                         _setRFSW_Status 2792                     __size_of_Buzzer_Main 00A8  
                             ?_setTxData 0071                             ?_Switch_Main 0071  
                       _CC2500_WriteByte 199A                                 _VarTMain 0120  
                      getLoad_AD@channel 0029             Flash_Memory_Initialization@i 005E  
                __end_of_setRF_ReceiveGO 2706                        setRFSW_Control@sw 0063  
                    _Load_Initialization 2742                                setLED@led 0023  
                               _RxStatus 0383     __end_of_setDimmerLights_TriggerERROR 1C62  
  __size_of_setDimmerLights_TriggerERROR 002B             _setDimmerLights_TriggerERROR 1C37  
                               _TxStatus 0386                       _setLoad_Exceptions 1EA8  
                       __size_of___ftadd 00F6                         ?_setRFSW_Control 0071  
                       __size_of___ftdiv 00A9                             _setSw_Enable 1A33  
                       __size_of___ftmul 00B4                         __size_of___fttol 0087  
                       __size_of___lwdiv 0037                 __size_ofi1_RfPointSelect 000A  
                               ___awtoft 1AE7                         ??_LedPointSelect 0020  
                               ___ftpack 1216                             _setSw_Status 27A1  
                           ??_setRF_Main 0069                     CC2500_WriteREG@value 0022  
                            _setLED_Main 1DE5                      ?_setLoad_Exceptions 0071  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 140F  
               ?_DelayOff_Initialization 0071                         setDelayOff_GO@sw 0027  
                        ___lwdiv@divisor 0020                     ?_Load_Initialization 0071  
                        ___lwdiv@counter 0027                                 __ptext10 1868  
                               __ptext11 2769                                 __ptext20 115C  
                               __ptext12 26A0                                 __ptext21 1C8F  
                               __ptext13 2664                                 __ptext30 12DB  
                               __ptext22 1E25                                 __ptext14 2660  
                               __ptext31 2776                                 __ptext23 1DB0  
                               __ptext15 16E8                                 __ptext40 2669  
                               __ptext32 1A18                                 __ptext24 1B4D  
                               __ptext16 1000                                 __ptext41 2682  
                               __ptext33 1A4F                                 __ptext25 1101  
                               __ptext17 1FB9                                 __ptext50 1277  
                               __ptext42 1899                                 __ptext34 265C  
                               __ptext26 0B4B                                 __ptext18 0838  
                               __ptext51 1C37                                 __ptext43 14EF  
                               __ptext35 2689                                 __ptext27 0DB0  
                               __ptext19 1770                                 __ptext60 1888  
                               __ptext52 1052                                 __ptext44 27F0  
                               __ptext36 1983                                 __ptext28 1BBC  
                               __ptext61 1E65                                 __ptext53 27E0  
                               __ptext45 004F                                 __ptext37 275C  
                               __ptext29 1F2F                                 __ptext70 1EEB  
                               __ptext62 133F                                 __ptext54 0801  
                               __ptext46 1EA8                                 __ptext38 19E5  
                               __ptext71 1D4D                                 __ptext63 271E  
                               __ptext55 2742                                 __ptext47 1A33  
                               __ptext39 274F                                 __ptext80 18EA  
                               __ptext72 0961                                 __ptext64 0CC8  
                               __ptext56 1B2B                                 __ptext48 1C0D  
                               __ptext81 1C62                                 __ptext73 1D7E  
                               __ptext65 1CBD                                 __ptext57 2736  
                               __ptext49 07F7                                 __ptext90 1F73  
                               __ptext82 267B                                 __ptext74 18FF  
                               __ptext66 26B0                                 __ptext58 1DE5  
                               __ptext91 1661                                 __ptext83 2698  
                               __ptext75 11B8                                 __ptext67 19CC  
                               __ptext59 272A                                 __ptext92 0AA2  
                               __ptext84 077E                                 __ptext76 1B09  
                               __ptext68 26EF                                 __ptext93 1AE7  
                               __ptext85 0BFF                                 __ptext77 19FE  
                               __ptext69 15DC                                 __ptext94 1216  
                               __ptext86 26D9                                 __ptext78 26E4  
                               __ptext95 2792                                 __ptext87 27A1  
                               __ptext79 1940                                 __ptext96 192A  
                               __ptext88 18AC                                 __ptext97 27D0  
                               __ptext89 13A4                                 __ptext98 27C0  
                               __ptext99 18D5                             ??_setLoad_GO 0020  
                ??_setLED_Initialization 0024                 __size_of_RfSWPointSelect 0016  
         __size_of_Dimmer_Initialization 0007                   __end_of_setRFSW_Status 27A1  
          __end_of_Dimmer_Initialization 2682             __end_of_setDimmerLights_Main 1661  
            setDimmerLights_ERROR@lights 0025                             ??_setSw_Main 0065  
                          setLED@command 0022                            __size_of_main 0058  
                            _setRF_Learn 2784                 __end_of_CC2500_SIDLEMode 265C  
                         _setRF_RxStatus 2776               setDimmerLights_Main@lights 0066  
            __end_of_DelayOffPointSelect 1983               CC2500_WriteCommand@command 0023  
                     _DimmerLights_Close 19FE                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 001E                     ??_setLoad_Exceptions 002B  
                        _CC2500_ReadByte 1A4F                       _CC2500_InitPATable 1AA8  
    __size_of_getDimmerLights_StatusFlag 0016            setDimmerLights_Trigger@lights 0023  
                     __end_of_setRF_Main 1770              __size_of_Mcu_Initialization 0017  
                   _CC2500_patable_vaule 185E                              ??_getRxData 0068  
                    ?_DimmerLights_Close 0071         setDimmerLights_TriggerAdj@lights 0023  
          ?_setDimmerLights_TriggerERROR 0022                      ?_CC2500_InitPATable 0071  
                        _CC2500_PowerRST 1CEC                       __end_of_setLoad_GO 26EF  
            __end_of_Flash_Memory_Modify 13A4                        ??_getPercentValue 0059  
                            _setLog_Code 1FB9                    setRF_RxStatus@command 0022  
            __end_of_Flash_Memory_Unlock 26B9                          ??_SwPointSelect 0020  
                        _CC2500_WriteREG 19B3                       __end_of_setSw_Main 1000  
                      setLoad_GO@command 0020                    ??_Load_Initialization 0022  
                          _Transceive_GO 0384                            _Transceive_OK 0385  
                   setLoad_Count@command 0021                   ?_DlyOff_Initialization 0071  
                         _DelayTimejudge 1C8F                              pic14e$flags 007E  
                   ??_DimmerLights_Close 0023                              ??_setINT_GO 0020  
                               intlevel1 0000                     ??_CC2500_InitPATable 0025  
                __size_of_setLoad_Enable 0010                   ?_Switch_Initialization 0071  
                 __end_of_setRF_RxStatus 2784                          ?_setRFSW_Status 0022  
                ??_CC2500_PowerOnInitial 0029   __end_of_setDimmerLights_Initialization 1C8F  
__size_of_setDimmerLights_Initialization 002D           _setDimmerLights_Initialization 1C62  
            __end_of_setDimmerLights_Adj 1F2F                              ??_setTxData 0022  
                       ?_setRF_ReceiveGO 0073                   CC2500_InitPATable@temp 0026  
                   _MainT_Initialization 1899                    __size_of_RF_RxDisable 0027  
                      _RF_Initialization 265C                              getLoad_AD@i 002B  
                            getLoad_AD@j 002A                     _Flash_Memory_Erasing 271E  
                     ?_RF_Initialization 0071                               _SPI0Buffer 00BF  
        __end_of_DelayOff_Initialization 2698                               _OPTION_REG 0095  
                  __end_of_DelayOff_Main 26A0                      ??_RF_Initialization 0021  
                            getRxData@rf 0068                           _setDelayOff_GO 115C  
       __size_of_setControl_Lights_Table 0093                        _setLoad_StatusOff 1D4D  
                 __end_of_DelayTimejudge 1CBD                   __size_of_RfPointSelect 000B  
                      ??i1_RfPointSelect 0071     __size_of_Flash_Memory_Initialization 00E8  
                          ??_DlyOff_Main 0062                       ?_setLoad_StatusOff 0020  
                  __end_of_DelayTime_1us 1B96                 __end_of_Sw_DimmerAdjFunc 1BBC  
                __end_of_CC2500_ReadByte 1A6C             __end_of_setSw_Initialization 26A8  
                        ?_setRF_RxStatus 0022                     getPercentValue@value 005B  
                           _RF_RxDisable 1BBC               __end_of_LED_Initialization 2736  
       __size_of_setDimmerLights_Trigger 0010                        ?_setLoad_StatusOn 0020  
               __size_of_Sw_DimmerOnFunc 006F                      ??_setLoad_StatusOff 0021  
               ?_DimmerLights_Exceptions 0071                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 2660  
               __end_of_Sw_DimmerOffFunc 14EF                       ??_setLoad_StatusOn 0021  
        __size_of_setDimmerLights_Switch 0010                        ??_RfSWPointSelect 0020  
                  ?_MainT_Initialization 0071                         setRF_RxStatus@rf 0023  
                  __end_of_CC2500_RxData 133F                    __end_of_CC2500_TxData 1F73  
                  _setLoad_AH_AL_Restore 1B2B                      setSw_Status@command 0022  
                __end_of_CC2500_PowerRST 1D1C  
