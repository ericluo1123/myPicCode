

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Sep 24 15:22:00 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0096                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009F                     	;# 
   103  0108                     	;# 
   104  0109                     	;# 
   105  010C                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0185                     	;# 
   112  0186                     	;# 
   113  018C                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008F                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0096                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009F                     	;# 
   172  0108                     	;# 
   173  0109                     	;# 
   174  010C                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0185                     	;# 
   181  0186                     	;# 
   182  018C                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001D                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0086                     	;# 
   220  0087                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  008F                     	;# 
   226  0090                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0095                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0096                     	;# 
   236  0098                     	;# 
   237  0099                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009F                     	;# 
   241  0108                     	;# 
   242  0109                     	;# 
   243  010C                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  010F                     	;# 
   249  0185                     	;# 
   250  0186                     	;# 
   251  018C                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0096                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009F                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0186                     	;# 
   320  018C                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0095                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0096                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009F                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0186                     	;# 
   389  018C                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0096                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009F                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0186                     	;# 
   458  018C                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  000E                     	;# 
   474  000F                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0014                     	;# 
   480  0015                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  0081                     	;# 
   494  0085                     	;# 
   495  0086                     	;# 
   496  0087                     	;# 
   497  0089                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  008F                     	;# 
   502  0090                     	;# 
   503  0091                     	;# 
   504  0092                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0096                     	;# 
   512  0098                     	;# 
   513  0099                     	;# 
   514  009C                     	;# 
   515  009D                     	;# 
   516  009F                     	;# 
   517  0108                     	;# 
   518  0109                     	;# 
   519  010C                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  0185                     	;# 
   526  0186                     	;# 
   527  018C                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0009                     	;# 
   537  000A                     	;# 
   538  000B                     	;# 
   539  000C                     	;# 
   540  000D                     	;# 
   541  000E                     	;# 
   542  000E                     	;# 
   543  000F                     	;# 
   544  0010                     	;# 
   545  0011                     	;# 
   546  0012                     	;# 
   547  0013                     	;# 
   548  0014                     	;# 
   549  0015                     	;# 
   550  0015                     	;# 
   551  0016                     	;# 
   552  0017                     	;# 
   553  0018                     	;# 
   554  0019                     	;# 
   555  001A                     	;# 
   556  001B                     	;# 
   557  001B                     	;# 
   558  001C                     	;# 
   559  001D                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  0081                     	;# 
   563  0085                     	;# 
   564  0086                     	;# 
   565  0087                     	;# 
   566  0089                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  008F                     	;# 
   571  0090                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0093                     	;# 
   576  0094                     	;# 
   577  0095                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0096                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009F                     	;# 
   586  0108                     	;# 
   587  0109                     	;# 
   588  010C                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  010F                     	;# 
   594  0185                     	;# 
   595  0186                     	;# 
   596  018C                     	;# 
   597  0000                     	;# 
   598  0001                     	;# 
   599  0002                     	;# 
   600  0003                     	;# 
   601  0004                     	;# 
   602  0005                     	;# 
   603  0006                     	;# 
   604  0007                     	;# 
   605  0009                     	;# 
   606  000A                     	;# 
   607  000B                     	;# 
   608  000C                     	;# 
   609  000D                     	;# 
   610  000E                     	;# 
   611  000E                     	;# 
   612  000F                     	;# 
   613  0010                     	;# 
   614  0011                     	;# 
   615  0012                     	;# 
   616  0013                     	;# 
   617  0014                     	;# 
   618  0015                     	;# 
   619  0015                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001B                     	;# 
   627  001C                     	;# 
   628  001D                     	;# 
   629  001E                     	;# 
   630  001F                     	;# 
   631  0081                     	;# 
   632  0085                     	;# 
   633  0086                     	;# 
   634  0087                     	;# 
   635  0089                     	;# 
   636  008C                     	;# 
   637  008D                     	;# 
   638  008E                     	;# 
   639  008F                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0093                     	;# 
   644  0093                     	;# 
   645  0094                     	;# 
   646  0095                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0096                     	;# 
   650  0098                     	;# 
   651  0099                     	;# 
   652  009C                     	;# 
   653  009D                     	;# 
   654  009F                     	;# 
   655  0108                     	;# 
   656  0109                     	;# 
   657  010C                     	;# 
   658  010C                     	;# 
   659  010D                     	;# 
   660  010D                     	;# 
   661  010E                     	;# 
   662  010F                     	;# 
   663  0185                     	;# 
   664  0186                     	;# 
   665  018C                     	;# 
   666  0000                     	;# 
   667  0001                     	;# 
   668  0002                     	;# 
   669  0003                     	;# 
   670  0004                     	;# 
   671  0005                     	;# 
   672  0006                     	;# 
   673  0007                     	;# 
   674  0009                     	;# 
   675  000A                     	;# 
   676  000B                     	;# 
   677  000C                     	;# 
   678  000D                     	;# 
   679  000E                     	;# 
   680  000E                     	;# 
   681  000F                     	;# 
   682  0010                     	;# 
   683  0011                     	;# 
   684  0012                     	;# 
   685  0013                     	;# 
   686  0014                     	;# 
   687  0015                     	;# 
   688  0015                     	;# 
   689  0016                     	;# 
   690  0017                     	;# 
   691  0018                     	;# 
   692  0019                     	;# 
   693  001A                     	;# 
   694  001B                     	;# 
   695  001B                     	;# 
   696  001C                     	;# 
   697  001D                     	;# 
   698  001E                     	;# 
   699  001F                     	;# 
   700  0081                     	;# 
   701  0085                     	;# 
   702  0086                     	;# 
   703  0087                     	;# 
   704  0089                     	;# 
   705  008C                     	;# 
   706  008D                     	;# 
   707  008E                     	;# 
   708  008F                     	;# 
   709  0090                     	;# 
   710  0091                     	;# 
   711  0092                     	;# 
   712  0093                     	;# 
   713  0093                     	;# 
   714  0094                     	;# 
   715  0095                     	;# 
   716  0095                     	;# 
   717  0096                     	;# 
   718  0096                     	;# 
   719  0098                     	;# 
   720  0099                     	;# 
   721  009C                     	;# 
   722  009D                     	;# 
   723  009F                     	;# 
   724  0108                     	;# 
   725  0109                     	;# 
   726  010C                     	;# 
   727  010C                     	;# 
   728  010D                     	;# 
   729  010D                     	;# 
   730  010E                     	;# 
   731  010F                     	;# 
   732  0185                     	;# 
   733  0186                     	;# 
   734  018C                     	;# 
   735  0000                     	;# 
   736  0001                     	;# 
   737  0002                     	;# 
   738  0003                     	;# 
   739  0004                     	;# 
   740  0005                     	;# 
   741  0006                     	;# 
   742  0007                     	;# 
   743  0009                     	;# 
   744  000A                     	;# 
   745  000B                     	;# 
   746  000C                     	;# 
   747  000D                     	;# 
   748  000E                     	;# 
   749  000E                     	;# 
   750  000F                     	;# 
   751  0010                     	;# 
   752  0011                     	;# 
   753  0012                     	;# 
   754  0013                     	;# 
   755  0014                     	;# 
   756  0015                     	;# 
   757  0015                     	;# 
   758  0016                     	;# 
   759  0017                     	;# 
   760  0018                     	;# 
   761  0019                     	;# 
   762  001A                     	;# 
   763  001B                     	;# 
   764  001B                     	;# 
   765  001C                     	;# 
   766  001D                     	;# 
   767  001E                     	;# 
   768  001F                     	;# 
   769  0081                     	;# 
   770  0085                     	;# 
   771  0086                     	;# 
   772  0087                     	;# 
   773  0089                     	;# 
   774  008C                     	;# 
   775  008D                     	;# 
   776  008E                     	;# 
   777  008F                     	;# 
   778  0090                     	;# 
   779  0091                     	;# 
   780  0092                     	;# 
   781  0093                     	;# 
   782  0093                     	;# 
   783  0094                     	;# 
   784  0095                     	;# 
   785  0095                     	;# 
   786  0096                     	;# 
   787  0096                     	;# 
   788  0098                     	;# 
   789  0099                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009F                     	;# 
   793  0108                     	;# 
   794  0109                     	;# 
   795  010C                     	;# 
   796  010C                     	;# 
   797  010D                     	;# 
   798  010D                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  0185                     	;# 
   802  0186                     	;# 
   803  018C                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0009                     	;# 
   813  000A                     	;# 
   814  000B                     	;# 
   815  000C                     	;# 
   816  000D                     	;# 
   817  000E                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0014                     	;# 
   825  0015                     	;# 
   826  0015                     	;# 
   827  0016                     	;# 
   828  0017                     	;# 
   829  0018                     	;# 
   830  0019                     	;# 
   831  001A                     	;# 
   832  001B                     	;# 
   833  001B                     	;# 
   834  001C                     	;# 
   835  001D                     	;# 
   836  001E                     	;# 
   837  001F                     	;# 
   838  0081                     	;# 
   839  0085                     	;# 
   840  0086                     	;# 
   841  0087                     	;# 
   842  0089                     	;# 
   843  008C                     	;# 
   844  008D                     	;# 
   845  008E                     	;# 
   846  008F                     	;# 
   847  0090                     	;# 
   848  0091                     	;# 
   849  0092                     	;# 
   850  0093                     	;# 
   851  0093                     	;# 
   852  0094                     	;# 
   853  0095                     	;# 
   854  0095                     	;# 
   855  0096                     	;# 
   856  0096                     	;# 
   857  0098                     	;# 
   858  0099                     	;# 
   859  009C                     	;# 
   860  009D                     	;# 
   861  009F                     	;# 
   862  0108                     	;# 
   863  0109                     	;# 
   864  010C                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010D                     	;# 
   868  010E                     	;# 
   869  010F                     	;# 
   870  0185                     	;# 
   871  0186                     	;# 
   872  018C                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0009                     	;# 
   882  000A                     	;# 
   883  000B                     	;# 
   884  000C                     	;# 
   885  000D                     	;# 
   886  000E                     	;# 
   887  000E                     	;# 
   888  000F                     	;# 
   889  0010                     	;# 
   890  0011                     	;# 
   891  0012                     	;# 
   892  0013                     	;# 
   893  0014                     	;# 
   894  0015                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0017                     	;# 
   898  0018                     	;# 
   899  0019                     	;# 
   900  001A                     	;# 
   901  001B                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001D                     	;# 
   905  001E                     	;# 
   906  001F                     	;# 
   907  0081                     	;# 
   908  0085                     	;# 
   909  0086                     	;# 
   910  0087                     	;# 
   911  0089                     	;# 
   912  008C                     	;# 
   913  008D                     	;# 
   914  008E                     	;# 
   915  008F                     	;# 
   916  0090                     	;# 
   917  0091                     	;# 
   918  0092                     	;# 
   919  0093                     	;# 
   920  0093                     	;# 
   921  0094                     	;# 
   922  0095                     	;# 
   923  0095                     	;# 
   924  0096                     	;# 
   925  0096                     	;# 
   926  0098                     	;# 
   927  0099                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009F                     	;# 
   931  0108                     	;# 
   932  0109                     	;# 
   933  010C                     	;# 
   934  010C                     	;# 
   935  010D                     	;# 
   936  010D                     	;# 
   937  010E                     	;# 
   938  010F                     	;# 
   939  0185                     	;# 
   940  0186                     	;# 
   941  018C                     	;# 
   942  0000                     	;# 
   943  0001                     	;# 
   944  0002                     	;# 
   945  0003                     	;# 
   946  0004                     	;# 
   947  0005                     	;# 
   948  0006                     	;# 
   949  0007                     	;# 
   950  0009                     	;# 
   951  000A                     	;# 
   952  000B                     	;# 
   953  000C                     	;# 
   954  000D                     	;# 
   955  000E                     	;# 
   956  000E                     	;# 
   957  000F                     	;# 
   958  0010                     	;# 
   959  0011                     	;# 
   960  0012                     	;# 
   961  0013                     	;# 
   962  0014                     	;# 
   963  0015                     	;# 
   964  0015                     	;# 
   965  0016                     	;# 
   966  0017                     	;# 
   967  0018                     	;# 
   968  0019                     	;# 
   969  001A                     	;# 
   970  001B                     	;# 
   971  001B                     	;# 
   972  001C                     	;# 
   973  001D                     	;# 
   974  001E                     	;# 
   975  001F                     	;# 
   976  0081                     	;# 
   977  0085                     	;# 
   978  0086                     	;# 
   979  0087                     	;# 
   980  0089                     	;# 
   981  008C                     	;# 
   982  008D                     	;# 
   983  008E                     	;# 
   984  008F                     	;# 
   985  0090                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0093                     	;# 
   989  0093                     	;# 
   990  0094                     	;# 
   991  0095                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0096                     	;# 
   995  0098                     	;# 
   996  0099                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009F                     	;# 
  1000  0108                     	;# 
  1001  0109                     	;# 
  1002  010C                     	;# 
  1003  010C                     	;# 
  1004  010D                     	;# 
  1005  010D                     	;# 
  1006  010E                     	;# 
  1007  010F                     	;# 
  1008  0185                     	;# 
  1009  0186                     	;# 
  1010  018C                     	;# 
  1011  0000                     	;# 
  1012  0001                     	;# 
  1013  0002                     	;# 
  1014  0003                     	;# 
  1015  0004                     	;# 
  1016  0005                     	;# 
  1017  0006                     	;# 
  1018  0007                     	;# 
  1019  0009                     	;# 
  1020  000A                     	;# 
  1021  000B                     	;# 
  1022  000C                     	;# 
  1023  000D                     	;# 
  1024  000E                     	;# 
  1025  000E                     	;# 
  1026  000F                     	;# 
  1027  0010                     	;# 
  1028  0011                     	;# 
  1029  0012                     	;# 
  1030  0013                     	;# 
  1031  0014                     	;# 
  1032  0015                     	;# 
  1033  0015                     	;# 
  1034  0016                     	;# 
  1035  0017                     	;# 
  1036  0018                     	;# 
  1037  0019                     	;# 
  1038  001A                     	;# 
  1039  001B                     	;# 
  1040  001B                     	;# 
  1041  001C                     	;# 
  1042  001D                     	;# 
  1043  001E                     	;# 
  1044  001F                     	;# 
  1045  0081                     	;# 
  1046  0085                     	;# 
  1047  0086                     	;# 
  1048  0087                     	;# 
  1049  0089                     	;# 
  1050  008C                     	;# 
  1051  008D                     	;# 
  1052  008E                     	;# 
  1053  008F                     	;# 
  1054  0090                     	;# 
  1055  0091                     	;# 
  1056  0092                     	;# 
  1057  0093                     	;# 
  1058  0093                     	;# 
  1059  0094                     	;# 
  1060  0095                     	;# 
  1061  0095                     	;# 
  1062  0096                     	;# 
  1063  0096                     	;# 
  1064  0098                     	;# 
  1065  0099                     	;# 
  1066  009C                     	;# 
  1067  009D                     	;# 
  1068  009F                     	;# 
  1069  0108                     	;# 
  1070  0109                     	;# 
  1071  010C                     	;# 
  1072  010C                     	;# 
  1073  010D                     	;# 
  1074  010D                     	;# 
  1075  010E                     	;# 
  1076  010F                     	;# 
  1077  0185                     	;# 
  1078  0186                     	;# 
  1079  018C                     	;# 
  1080  0000                     	;# 
  1081  0001                     	;# 
  1082  0002                     	;# 
  1083  0003                     	;# 
  1084  0004                     	;# 
  1085  0005                     	;# 
  1086  0006                     	;# 
  1087  0007                     	;# 
  1088  0009                     	;# 
  1089  000A                     	;# 
  1090  000B                     	;# 
  1091  000C                     	;# 
  1092  000D                     	;# 
  1093  000E                     	;# 
  1094  000E                     	;# 
  1095  000F                     	;# 
  1096  0010                     	;# 
  1097  0011                     	;# 
  1098  0012                     	;# 
  1099  0013                     	;# 
  1100  0014                     	;# 
  1101  0015                     	;# 
  1102  0015                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001B                     	;# 
  1110  001C                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  0081                     	;# 
  1115  0085                     	;# 
  1116  0086                     	;# 
  1117  0087                     	;# 
  1118  0089                     	;# 
  1119  008C                     	;# 
  1120  008D                     	;# 
  1121  008E                     	;# 
  1122  008F                     	;# 
  1123  0090                     	;# 
  1124  0091                     	;# 
  1125  0092                     	;# 
  1126  0093                     	;# 
  1127  0093                     	;# 
  1128  0094                     	;# 
  1129  0095                     	;# 
  1130  0095                     	;# 
  1131  0096                     	;# 
  1132  0096                     	;# 
  1133  0098                     	;# 
  1134  0099                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009F                     	;# 
  1138  0108                     	;# 
  1139  0109                     	;# 
  1140  010C                     	;# 
  1141  010C                     	;# 
  1142  010D                     	;# 
  1143  010D                     	;# 
  1144  010E                     	;# 
  1145  010F                     	;# 
  1146  0185                     	;# 
  1147  0186                     	;# 
  1148  018C                     	;# 
  1149                           
  1150                           	psect	nvCOMMON
  1151  0077                     __pnvCOMMON:	
  1152  0077                     _Timer0:	
  1153  0077                     	ds	1
  1154                           
  1155                           	psect	nvBANK0
  1156  006F                     __pnvBANK0:	
  1157  006F                     _TMain:	
  1158  006F                     	ds	1
  1159  001F                     _ADCON0	set	31
  1160  001E                     _ADRES	set	30
  1161  0005                     _PORTA	set	5
  1162  0006                     _PORTB	set	6
  1163  0007                     _PORTC	set	7
  1164  0001                     _TMR0	set	1
  1165  005F                     _GIE	set	95
  1166  00F9                     _GO_nDONE	set	249
  1167  002C                     _RA4	set	44
  1168  0031                     _RB1	set	49
  1169  0032                     _RB2	set	50
  1170  0033                     _RB3	set	51
  1171  0034                     _RB4	set	52
  1172  0035                     _RB5	set	53
  1173  005D                     _TMR0IE	set	93
  1174  005A                     _TMR0IF	set	90
  1175  009F                     _ADCON1	set	159
  1176  009D                     _FVRCON	set	157
  1177  0081                     _OPTION_REG	set	129
  1178  0090                     _OSCCON	set	144
  1179  0085                     _TRISA	set	133
  1180  0086                     _TRISB	set	134
  1181  0087                     _TRISC	set	135
  1182  0185                     _ANSELA	set	389
  1183  0186                     _ANSELB	set	390
  1184                           
  1185                           ; #config settings
  1186  0000                     
  1187                           	psect	cinit
  1188  0013                     start_initialization:	
  1189  0013                     __initialization:	
  1190                           
  1191                           ; Clear objects allocated to BANK0
  1192  0013  1383               	bcf	3,7	;select IRP bank0
  1193  0014  3020               	movlw	low __pbssBANK0
  1194  0015  0084               	movwf	4
  1195  0016  3062               	movlw	low (__pbssBANK0+66)
  1196  0017  118A  2531         	fcall	clear_ram0
  1197  0019                     end_of_initialization:	
  1198                           ;End of C runtime variable initialization code
  1199                           
  1200  0019                     __end_of__initialization:	
  1201  0019  0183               	clrf	3
  1202  001A  118A  2AAB         	ljmp	_main	;jump to C main() function
  1203                           
  1204                           	psect	bssBANK0
  1205  0020                     __pbssBANK0:	
  1206  0020                     _Buz:	
  1207  0020                     	ds	1
  1208  0021                     _CDS:	
  1209  0021                     	ds	1
  1210  0022                     _LED:	
  1211  0022                     	ds	1
  1212  0023                     _Lights:	
  1213  0023                     	ds	1
  1214  0024                     _VarTMain:	
  1215  0024                     	ds	16
  1216  0034                     _Buz1:	
  1217  0034                     	ds	12
  1218  0040                     _Lights1:	
  1219  0040                     	ds	10
  1220  004A                     _VarTimer0:	
  1221  004A                     	ds	7
  1222  0051                     __CDS1:	
  1223  0051                     	ds	5
  1224  0056                     _VarErrLED:	
  1225  0056                     	ds	4
  1226  005A                     _VarLED1:	
  1227  005A                     	ds	4
  1228  005E                     _VarLED2:	
  1229  005E                     	ds	4
  1230                           
  1231                           	psect	clrtext
  1232  0531                     clear_ram0:	
  1233                           ;	Called with FSR containing the base address, and
  1234                           ;	W with the last address+1
  1235                           
  1236  0531  0064               	clrwdt	;clear the watchdog before getting into this loop
  1237  0532                     clrloop0:	
  1238  0532  0180               	clrf	0	;clear RAM location pointed to by FSR
  1239  0533  0A84               	incf	4,f	;increment pointer
  1240  0534  0604               	xorwf	4,w	;XOR with final address
  1241  0535  1903               	btfsc	3,2	;have we reached the end yet?
  1242  0536  3400               	retlw	0	;all done for this memory range, return
  1243  0537  0604               	xorwf	4,w	;XOR again to restore value
  1244  0538  2D32               	goto	clrloop0	;do the next byte
  1245                           
  1246                           	psect	cstackCOMMON
  1247  0070                     __pcstackCOMMON:	
  1248  0070                     ?_setLED_Initialization:	
  1249  0070                     ?_setLED_Main:	
  1250                           ; 0 bytes @ 0x0
  1251                           
  1252  0070                     ?_MainT_Initialization:	
  1253                           ; 0 bytes @ 0x0
  1254                           
  1255  0070                     ?_Mcu_Initialization:	
  1256                           ; 0 bytes @ 0x0
  1257                           
  1258  0070                     ?_Lights_Initialization:	
  1259                           ; 0 bytes @ 0x0
  1260                           
  1261  0070                     ?_MainT:	
  1262                           ; 0 bytes @ 0x0
  1263                           
  1264  0070                     ?_Lights_Main:	
  1265                           ; 0 bytes @ 0x0
  1266                           
  1267  0070                     ?_setLights_Initialization:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0070                     ?_setLights_Main:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273  0070                     ?_Lights_Control:	
  1274                           ; 0 bytes @ 0x0
  1275                           
  1276  0070                     ?_IO_Set:	
  1277                           ; 0 bytes @ 0x0
  1278                           
  1279  0070                     ?_TMR0_Set:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0070                     ?_ADC_Set:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0070                     ?_TMR0_ISR:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0070                     ??_TMR0_ISR:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0070                     ?_Buzzer_Initialization:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0070                     ?_Buzzer_Main:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0070                     ?_CDS_Initialization:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0070                     ?_CDS_Main:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0070                     ?_LedPointSelect:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0070                     ?_LED_Initialization:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0070                     ?_LED_Main:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0070                     ?_main:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0070                     ?_LightsPointSelect:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0070                     ?_ISR:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     getCDS_AD@cds:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324                           
  1325                           ; 1 bytes @ 0x0
  1326  0070                     	ds	2
  1327  0072                     ??_ISR:	
  1328                           
  1329                           ; 0 bytes @ 0x2
  1330  0072                     	ds	4
  1331  0076                     ??_MainT_Initialization:	
  1332  0076                     ??_IO_Set:	
  1333                           ; 0 bytes @ 0x6
  1334                           
  1335  0076                     ??_TMR0_Set:	
  1336                           ; 0 bytes @ 0x6
  1337                           
  1338  0076                     ??_ADC_Set:	
  1339                           ; 0 bytes @ 0x6
  1340                           
  1341  0076                     ??_Buzzer_Initialization:	
  1342                           ; 0 bytes @ 0x6
  1343                           
  1344  0076                     ??_setBuz:	
  1345                           ; 0 bytes @ 0x6
  1346                           
  1347  0076                     ??_LedPointSelect:	
  1348                           ; 0 bytes @ 0x6
  1349                           
  1350  0076                     ??_LightsPointSelect:	
  1351                           ; 0 bytes @ 0x6
  1352                           
  1353  0076                     ??___wmul:	
  1354                           ; 0 bytes @ 0x6
  1355                           
  1356  0076                     ?_getAD:	
  1357                           ; 0 bytes @ 0x6
  1358                           
  1359  0076                     getAD@adcon1:	
  1360                           ; 1 bytes @ 0x6
  1361                           
  1362                           
  1363                           ; 1 bytes @ 0x6
  1364  0076                     	ds	1
  1365  0077                     ??_setLED:	
  1366  0077                     ??_setLights_Trigger:	
  1367                           ; 0 bytes @ 0x7
  1368                           
  1369  0077                     ??_setLights_Switch:	
  1370                           ; 0 bytes @ 0x7
  1371                           
  1372  0077                     ??_getAD:	
  1373                           ; 0 bytes @ 0x7
  1374                           
  1375  0077                     ??_setLED_Initialization:	
  1376                           ; 0 bytes @ 0x7
  1377                           
  1378  0077                     ??_Mcu_Initialization:	
  1379                           ; 0 bytes @ 0x7
  1380                           
  1381  0077                     ??_Lights_Initialization:	
  1382                           ; 0 bytes @ 0x7
  1383                           
  1384  0077                     ??_Lights_Main:	
  1385                           ; 0 bytes @ 0x7
  1386                           
  1387  0077                     ??_setLights_Initialization:	
  1388                           ; 0 bytes @ 0x7
  1389                           
  1390  0077                     ??_setLights_Main:	
  1391                           ; 0 bytes @ 0x7
  1392                           
  1393  0077                     ??_LED_Initialization:	
  1394                           ; 0 bytes @ 0x7
  1395                           
  1396  0077                     ??_LED_Main:	
  1397                           ; 0 bytes @ 0x7
  1398                           
  1399                           
  1400                           	psect	cstackBANK0
  1401  0062                     __pcstackBANK0:	
  1402                           ; 0 bytes @ 0x7
  1403                           
  1404  0062                     ??_Buzzer_Main:	
  1405  0062                     ?___wmul:	
  1406                           ; 0 bytes @ 0x0
  1407                           
  1408  0062                     LedPointSelect@led:	
  1409                           ; 2 bytes @ 0x0
  1410                           
  1411  0062                     LightsPointSelect@lights:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0062                     getAD@adcon0:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0062                     ___wmul@multiplier:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420                           
  1421                           ; 2 bytes @ 0x0
  1422  0062                     	ds	1
  1423  0063                     ?_setLED:	
  1424  0063                     ?_setLights_Trigger:	
  1425                           ; 0 bytes @ 0x1
  1426                           
  1427  0063                     ?_setLights_Switch:	
  1428                           ; 0 bytes @ 0x1
  1429                           
  1430  0063                     ??_setLED_Main:	
  1431                           ; 0 bytes @ 0x1
  1432                           
  1433  0063                     ??_Lights_Control:	
  1434                           ; 0 bytes @ 0x1
  1435                           
  1436  0063                     ?_setLights:	
  1437                           ; 0 bytes @ 0x1
  1438                           
  1439  0063                     ?_getCDS_AD:	
  1440                           ; 0 bytes @ 0x1
  1441                           
  1442  0063                     getCDS_AD@channel1:	
  1443                           ; 0 bytes @ 0x1
  1444                           
  1445  0063                     setLED@command:	
  1446                           ; 1 bytes @ 0x1
  1447                           
  1448  0063                     setLights_Initialization@lights:	
  1449                           ; 1 bytes @ 0x1
  1450                           
  1451  0063                     setLights_Trigger@command:	
  1452                           ; 1 bytes @ 0x1
  1453                           
  1454  0063                     setLights_Switch@command:	
  1455                           ; 1 bytes @ 0x1
  1456                           
  1457  0063                     setLights@command:	
  1458                           ; 1 bytes @ 0x1
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x1
  1462  0063                     	ds	1
  1463  0064                     ??_setLights:	
  1464  0064                     getCDS_AD@channel2:	
  1465                           ; 0 bytes @ 0x2
  1466                           
  1467  0064                     setLED@led:	
  1468                           ; 1 bytes @ 0x2
  1469                           
  1470  0064                     setLights_Trigger@lights:	
  1471                           ; 1 bytes @ 0x2
  1472                           
  1473  0064                     setLights_Switch@lights:	
  1474                           ; 1 bytes @ 0x2
  1475                           
  1476  0064                     ___wmul@multiplicand:	
  1477                           ; 1 bytes @ 0x2
  1478                           
  1479                           
  1480                           ; 2 bytes @ 0x2
  1481  0064                     	ds	1
  1482  0065                     ??_CDS_Initialization:	
  1483  0065                     ??_CDS_Main:	
  1484                           ; 0 bytes @ 0x3
  1485                           
  1486  0065                     ??_getCDS_AD:	
  1487                           ; 0 bytes @ 0x3
  1488                           
  1489  0065                     setLED_Initialization@led:	
  1490                           ; 0 bytes @ 0x3
  1491                           
  1492  0065                     setLED_Main@led:	
  1493                           ; 1 bytes @ 0x3
  1494                           
  1495  0065                     setLights@lights:	
  1496                           ; 1 bytes @ 0x3
  1497                           
  1498  0065                     Lights_Control@lights:	
  1499                           ; 1 bytes @ 0x3
  1500                           
  1501                           
  1502                           ; 1 bytes @ 0x3
  1503  0065                     	ds	1
  1504  0066                     setLights_Main@clear:	
  1505  0066                     ___wmul@product:	
  1506                           ; 1 bytes @ 0x4
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x4
  1510  0066                     	ds	1
  1511  0067                     getCDS_AD@i:	
  1512  0067                     setLights_Main@lights:	
  1513                           ; 1 bytes @ 0x5
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x5
  1517  0067                     	ds	1
  1518  0068                     ?_setBuz:	
  1519  0068                     getCDS_AD@j:	
  1520                           ; 0 bytes @ 0x6
  1521                           
  1522  0068                     setBuz@time:	
  1523                           ; 1 bytes @ 0x6
  1524                           
  1525                           
  1526                           ; 2 bytes @ 0x6
  1527  0068                     	ds	2
  1528  006A                     setBuz@count:	
  1529                           
  1530                           ; 1 bytes @ 0x8
  1531  006A                     	ds	1
  1532  006B                     ??_MainT:	
  1533                           
  1534                           ; 0 bytes @ 0x9
  1535  006B                     	ds	2
  1536  006D                     ??_main:	
  1537                           
  1538                           ; 0 bytes @ 0xB
  1539  006D                     	ds	2
  1540                           
  1541                           	psect	maintext
  1542  02AB                     __pmaintext:	
  1543 ;;
  1544 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1545 ;;
  1546 ;; *************** function _main *****************
  1547 ;; Defined at:
  1548 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 17F/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1562 ;;      Params:         0       0       0       0
  1563 ;;      Locals:         0       0       0       0
  1564 ;;      Temps:          0       2       0       0
  1565 ;;      Totals:         0       2       0       0
  1566 ;;Total ram usage:        2 bytes
  1567 ;; Hardware stack levels required when called:    6
  1568 ;; This function calls:
  1569 ;;		_Buzzer_Initialization
  1570 ;;		_Buzzer_Main
  1571 ;;		_CDS_Initialization
  1572 ;;		_CDS_Main
  1573 ;;		_LED_Initialization
  1574 ;;		_LED_Main
  1575 ;;		_Lights_Initialization
  1576 ;;		_Lights_Main
  1577 ;;		_MainT
  1578 ;;		_MainT_Initialization
  1579 ;;		_Mcu_Initialization
  1580 ;;		_getCDS_AD
  1581 ;; This function is called by:
  1582 ;;		Startup code after reset
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _main
  1588  02AB                     _main:	
  1589                           
  1590                           ;main.c: 9: MainT_Initialization();
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1594  02AB  118A  2548  118A   	fcall	_MainT_Initialization
  1595                           
  1596                           ;main.c: 10: Mcu_Initialization();
  1597  02AE  118A  24F5  118A   	fcall	_Mcu_Initialization
  1598                           
  1599                           ;main.c: 11: ;;
  1600                           ;main.c: 12: LED_Initialization();
  1601  02B1  118A  250E  118A   	fcall	_LED_Initialization
  1602                           
  1603                           ;main.c: 13: Buzzer_Initialization();
  1604  02B4  118A  2526  118A   	fcall	_Buzzer_Initialization
  1605                           
  1606                           ;main.c: 15: ;;
  1607                           ;main.c: 16: ;;
  1608                           ;main.c: 17: ;;
  1609                           ;main.c: 18: ;;
  1610                           ;main.c: 19: ;;
  1611                           ;main.c: 21: ;;
  1612                           ;main.c: 22: Lights_Initialization();
  1613  02B7  118A  254F  118A   	fcall	_Lights_Initialization
  1614                           
  1615                           ;main.c: 23: CDS_Initialization();
  1616  02BA  118A  2459  118A   	fcall	_CDS_Initialization
  1617                           
  1618                           ;main.c: 24: ;;
  1619                           ;main.c: 26: ;;
  1620                           ;main.c: 27: ;;
  1621                           ;main.c: 28: __nop();
  1622  02BD  0000               	nop
  1623  02BE                     l2384:	
  1624                           ;main.c: 30: while(1)
  1625                           
  1626                           
  1627                           ;main.c: 31: {
  1628                           ;main.c: 32: if(TMain->PowerON)
  1629  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1630  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1631  02C0  086F               	movf	_TMain,w
  1632  02C1  0084               	movwf	4
  1633  02C2  1383               	bcf	3,7	;select IRP bank0
  1634  02C3  1C00               	btfss	0,0
  1635  02C4  2AD4               	goto	l2388
  1636                           
  1637                           ;main.c: 33: {
  1638                           ;main.c: 35: ;;
  1639                           ;main.c: 43: ;;
  1640                           ;main.c: 51: getCDS_AD(1,0x09,0x31);
  1641  02C5  3009               	movlw	9
  1642  02C6  00ED               	movwf	??_main
  1643  02C7  086D               	movf	??_main,w
  1644  02C8  00E3               	movwf	getCDS_AD@channel1
  1645  02C9  3031               	movlw	49
  1646  02CA  00EE               	movwf	??_main+1
  1647  02CB  086E               	movf	??_main+1,w
  1648  02CC  00E4               	movwf	getCDS_AD@channel2
  1649  02CD  3001               	movlw	1
  1650  02CE  118A  22F2  118A   	fcall	_getCDS_AD
  1651                           
  1652                           ;main.c: 55: ;;
  1653                           ;main.c: 59: Buzzer_Main();
  1654  02D1  118A  201C  118A   	fcall	_Buzzer_Main
  1655  02D4                     l2388:	
  1656                           
  1657                           ;main.c: 61: }
  1658                           ;main.c: 63: if(TMain->T0_Timerout)
  1659  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1660  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1661  02D6  086F               	movf	_TMain,w
  1662  02D7  0084               	movwf	4
  1663  02D8  1383               	bcf	3,7	;select IRP bank0
  1664  02D9  1C80               	btfss	0,1
  1665  02DA  2ABE               	goto	l2384
  1666                           
  1667                           ;main.c: 64: {
  1668                           ;main.c: 65: TMain->T0_Timerout = 0;
  1669  02DB  086F               	movf	_TMain,w
  1670  02DC  0084               	movwf	4
  1671  02DD  1080               	bcf	0,1
  1672                           
  1673                           ;main.c: 66: MainT();
  1674  02DE  118A  2120  118A   	fcall	_MainT
  1675                           
  1676                           ;main.c: 67: if(TMain->PowerON)
  1677  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1678  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1679  02E3  086F               	movf	_TMain,w
  1680  02E4  0084               	movwf	4
  1681  02E5  1383               	bcf	3,7	;select IRP bank0
  1682  02E6  1C00               	btfss	0,0
  1683  02E7  2ABE               	goto	l2384
  1684                           
  1685                           ;main.c: 68: {
  1686                           ;main.c: 69: ;;
  1687                           ;main.c: 71: LED_Main();
  1688  02E8  118A  2502  118A   	fcall	_LED_Main
  1689                           
  1690                           ;main.c: 73: ;;
  1691                           ;main.c: 74: ;;
  1692                           ;main.c: 75: ;;
  1693                           ;main.c: 76: ;;
  1694                           ;main.c: 78: Lights_Main();
  1695  02EB  118A  2539  118A   	fcall	_Lights_Main
  1696                           
  1697                           ;main.c: 79: ;;
  1698                           ;main.c: 80: ;;
  1699                           ;main.c: 81: CDS_Main();
  1700  02EE  118A  20A8  118A   	fcall	_CDS_Main
  1701                           
  1702                           ;main.c: 82: ;;
  1703                           ;main.c: 84: ;;
  1704                           ;main.c: 85: ;;
  1705  02F1  2ABE               	goto	l2384
  1706  02F2                     __end_of_main:	
  1707                           
  1708                           	psect	text1
  1709  02F2                     __ptext1:	
  1710 ;; *************** function _getCDS_AD *****************
  1711 ;; Defined at:
  1712 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CDS_B1.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  cds             1    wreg     unsigned char 
  1715 ;;  channel1        1    1[BANK0 ] unsigned char 
  1716 ;;  channel2        1    2[BANK0 ] unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  cds             1    0[COMMON] unsigned char 
  1719 ;;  j               1    6[BANK0 ] unsigned char 
  1720 ;;  i               1    5[BANK0 ] unsigned char 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;		None               void
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1730 ;;      Params:         0       2       0       0
  1731 ;;      Locals:         0       2       0       0
  1732 ;;      Temps:          0       2       0       0
  1733 ;;      Totals:         0       6       0       0
  1734 ;;Total ram usage:        6 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    3
  1737 ;; This function calls:
  1738 ;;		_getAD
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _getCDS_AD
  1746  02F2                     _getCDS_AD:	
  1747                           
  1748                           ;CDS_B1.c: 69: char i=0,j=0;
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _getCDS_AD: [wreg-fsr0h+status,2+pclath+cstack]
  1752  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1753  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1754  02F4  01E7               	clrf	getCDS_AD@i
  1755  02F5  01E8               	clrf	getCDS_AD@j
  1756                           
  1757                           ;CDS_B1.c: 71: if(CDS->ADtoGO)
  1758  02F6  0821               	movf	_CDS,w
  1759  02F7  0084               	movwf	4
  1760  02F8  1383               	bcf	3,7	;select IRP bank0
  1761  02F9  1D80               	btfss	0,3
  1762  02FA  0008               	return
  1763                           
  1764                           ;CDS_B1.c: 72: {
  1765                           ;CDS_B1.c: 73: CDS->ADtoGO=0;
  1766  02FB  0821               	movf	_CDS,w
  1767  02FC  0084               	movwf	4
  1768  02FD  1180               	bcf	0,3
  1769                           
  1770                           ;CDS_B1.c: 74: CDS->GO=1;
  1771  02FE  0821               	movf	_CDS,w
  1772  02FF  0084               	movwf	4
  1773  0300  1480               	bsf	0,1
  1774                           
  1775                           ;CDS_B1.c: 75: CDS->ADRES=getAD(channel1,0x70);
  1776  0301  3070               	movlw	112
  1777  0302  00E5               	movwf	??_getCDS_AD
  1778  0303  0865               	movf	??_getCDS_AD,w
  1779  0304  00F6               	movwf	getAD@adcon1
  1780  0305  0863               	movf	getCDS_AD@channel1,w
  1781  0306  118A  2497  118A   	fcall	_getAD
  1782  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1783  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1784  030B  00E6               	movwf	??_getCDS_AD+1
  1785  030C  0821               	movf	_CDS,w
  1786  030D  3E04               	addlw	4
  1787  030E  0084               	movwf	4
  1788  030F  0866               	movf	??_getCDS_AD+1,w
  1789  0310  1383               	bcf	3,7	;select IRP bank0
  1790  0311  0080               	movwf	0
  1791                           
  1792                           ;CDS_B1.c: 76: CDS->VRAD=CDS->ADRES;
  1793  0312  0821               	movf	_CDS,w
  1794  0313  3E04               	addlw	4
  1795  0314  0084               	movwf	4
  1796  0315  0800               	movf	0,w
  1797  0316  00E5               	movwf	??_getCDS_AD
  1798  0317  0821               	movf	_CDS,w
  1799  0318  3E02               	addlw	2
  1800  0319  0084               	movwf	4
  1801  031A  0865               	movf	??_getCDS_AD,w
  1802  031B  0080               	movwf	0
  1803                           
  1804                           ;CDS_B1.c: 77: CDS->ADRES=getAD(channel2,0x70);
  1805  031C  3070               	movlw	112
  1806  031D  00E5               	movwf	??_getCDS_AD
  1807  031E  0865               	movf	??_getCDS_AD,w
  1808  031F  00F6               	movwf	getAD@adcon1
  1809  0320  0864               	movf	getCDS_AD@channel2,w
  1810  0321  118A  2497         	fcall	_getAD
  1811  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0325  00E6               	movwf	??_getCDS_AD+1
  1814  0326  0821               	movf	_CDS,w
  1815  0327  3E04               	addlw	4
  1816  0328  0084               	movwf	4
  1817  0329  0866               	movf	??_getCDS_AD+1,w
  1818  032A  1383               	bcf	3,7	;select IRP bank0
  1819  032B  0080               	movwf	0
  1820                           
  1821                           ;CDS_B1.c: 78: CDS->SignalAD=CDS->ADRES;
  1822  032C  0821               	movf	_CDS,w
  1823  032D  3E04               	addlw	4
  1824  032E  0084               	movwf	4
  1825  032F  0800               	movf	0,w
  1826  0330  00E5               	movwf	??_getCDS_AD
  1827  0331  0821               	movf	_CDS,w
  1828  0332  3E03               	addlw	3
  1829  0333  0084               	movwf	4
  1830  0334  0865               	movf	??_getCDS_AD,w
  1831  0335  0080               	movwf	0
  1832  0336  0008               	return
  1833  0337                     __end_of_getCDS_AD:	
  1834                           
  1835                           	psect	text2
  1836  0497                     __ptext2:	
  1837 ;; *************** function _getAD *****************
  1838 ;; Defined at:
  1839 ;;		line 379 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  adcon0          1    wreg     unsigned char 
  1842 ;;  adcon1          1    6[COMMON] unsigned char 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  adcon0          1    0[BANK0 ] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      unsigned char 
  1847 ;; Registers used:
  1848 ;;		wreg
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1854 ;;      Params:         1       0       0       0
  1855 ;;      Locals:         0       1       0       0
  1856 ;;      Temps:          0       0       0       0
  1857 ;;      Totals:         1       1       0       0
  1858 ;;Total ram usage:        2 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    2
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_getCDS_AD
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _getAD
  1870  0497                     _getAD:	
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _getAD: [wreg]
  1874                           ;getAD@adcon0 stored from wreg
  1875  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0499  00E2               	movwf	getAD@adcon0
  1878                           
  1879                           ;MCU_B1.c: 381: ADCON0=adcon0;
  1880  049A  0862               	movf	getAD@adcon0,w
  1881  049B  009F               	movwf	31	;volatile
  1882                           
  1883                           ;MCU_B1.c: 382: ADCON1=adcon1;
  1884  049C  0876               	movf	getAD@adcon1,w
  1885  049D  1683               	bsf	3,5	;RP0=1, select bank1
  1886  049E  1303               	bcf	3,6	;RP1=0, select bank1
  1887  049F  009F               	movwf	31	;volatile
  1888                           
  1889                           ;MCU_B1.c: 383: GO_nDONE=1;
  1890  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1891  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1892  04A2  149F               	bsf	31,1	;volatile
  1893  04A3                     l772:	
  1894                           ;MCU_B1.c: 384: while(GO_nDONE);
  1895                           
  1896  04A3  189F               	btfsc	31,1	;volatile
  1897  04A4  2CA3               	goto	l772
  1898                           
  1899                           ;MCU_B1.c: 385: return ADRES;
  1900  04A5  081E               	movf	30,w	;volatile
  1901  04A6  0008               	return
  1902  04A7                     __end_of_getAD:	
  1903                           
  1904                           	psect	text3
  1905  04F5                     __ptext3:	
  1906 ;; *************** function _Mcu_Initialization *****************
  1907 ;; Defined at:
  1908 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;		None               void
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1922 ;;      Params:         0       0       0       0
  1923 ;;      Locals:         0       0       0       0
  1924 ;;      Temps:          0       0       0       0
  1925 ;;      Totals:         0       0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    3
  1929 ;; This function calls:
  1930 ;;		_ADC_Set
  1931 ;;		_IO_Set
  1932 ;;		_TMR0_Set
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _Mcu_Initialization
  1940  04F5                     _Mcu_Initialization:	
  1941                           
  1942                           ;MCU_B1.c: 27: OSCCON=0x3c; ;;
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  1946  04F5  303C               	movlw	60
  1947  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  1948  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  1949  04F8  0090               	movwf	16	;volatile
  1950                           
  1951                           ;MCU_B1.c: 29: IO_Set();
  1952  04F9  118A  2470  118A   	fcall	_IO_Set
  1953                           
  1954                           ;MCU_B1.c: 31: TMR0_Set();
  1955  04FC  118A  24E7  118A   	fcall	_TMR0_Set
  1956                           
  1957                           ;MCU_B1.c: 33: ;;
  1958                           ;MCU_B1.c: 35: ADC_Set();
  1959  04FF  118A  2541         	fcall	_ADC_Set
  1960  0501  0008               	return
  1961  0502                     __end_of_Mcu_Initialization:	
  1962                           
  1963                           	psect	text4
  1964  04E7                     __ptext4:	
  1965 ;; *************** function _TMR0_Set *****************
  1966 ;; Defined at:
  1967 ;;		line 114 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;		None               void
  1974 ;; Registers used:
  1975 ;;		wreg, status,2
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1981 ;;      Params:         0       0       0       0
  1982 ;;      Locals:         0       0       0       0
  1983 ;;      Temps:          1       0       0       0
  1984 ;;      Totals:         1       0       0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    2
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_Mcu_Initialization
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _TMR0_Set
  1997  04E7                     _TMR0_Set:	
  1998                           
  1999                           ;MCU_B1.c: 116: Timer0=&VarTimer0;
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _TMR0_Set: [wreg+status,2]
  2003  04E7  304A               	movlw	_VarTimer0& (0+255)
  2004  04E8  00F6               	movwf	??_TMR0_Set
  2005  04E9  0876               	movf	??_TMR0_Set,w
  2006  04EA  00F7               	movwf	_Timer0
  2007                           
  2008                           ;MCU_B1.c: 117: OPTION_REG=0x00;
  2009  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  2010  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  2011  04ED  0181               	clrf	1	;volatile
  2012                           
  2013                           ;MCU_B1.c: 118: TMR0=(256-90);
  2014  04EE  30A6               	movlw	166
  2015  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2016  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2017  04F1  0081               	movwf	1	;volatile
  2018                           
  2019                           ;MCU_B1.c: 119: TMR0IE=1;
  2020  04F2  168B               	bsf	11,5	;volatile
  2021                           
  2022                           ;MCU_B1.c: 120: GIE=1;
  2023  04F3  178B               	bsf	11,7	;volatile
  2024  04F4  0008               	return
  2025  04F5                     __end_of_TMR0_Set:	
  2026                           
  2027                           	psect	text5
  2028  0470                     __ptext5:	
  2029 ;; *************** function _IO_Set *****************
  2030 ;; Defined at:
  2031 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;		None               void
  2038 ;; Registers used:
  2039 ;;		wreg, status,2
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2045 ;;      Params:         0       0       0       0
  2046 ;;      Locals:         0       0       0       0
  2047 ;;      Temps:          0       0       0       0
  2048 ;;      Totals:         0       0       0       0
  2049 ;;Total ram usage:        0 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    2
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_Mcu_Initialization
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _IO_Set
  2061  0470                     _IO_Set:	
  2062                           
  2063                           ;MCU_B1.c: 53: TRISA=0b00101111;;
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _IO_Set: [wreg+status,2]
  2067  0470  302F               	movlw	47
  2068  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2069  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2070  0473  0085               	movwf	5	;volatile
  2071                           
  2072                           ;MCU_B1.c: 54: TRISB=0b00000001;;
  2073  0474  3001               	movlw	1
  2074  0475  0086               	movwf	6	;volatile
  2075                           
  2076                           ;MCU_B1.c: 55: TRISC=0b00000000;;
  2077  0476  0187               	clrf	7	;volatile
  2078                           
  2079                           ;MCU_B1.c: 56: ANSELA=0b00000111;;
  2080  0477  3007               	movlw	7
  2081  0478  1683               	bsf	3,5	;RP0=1, select bank3
  2082  0479  1703               	bsf	3,6	;RP1=1, select bank3
  2083  047A  0085               	movwf	5	;volatile
  2084                           
  2085                           ;MCU_B1.c: 57: ANSELB=0b00000001;;
  2086  047B  3001               	movlw	1
  2087  047C  0086               	movwf	6	;volatile
  2088                           
  2089                           ;MCU_B1.c: 58: PORTA=0b10101111;;
  2090  047D  30AF               	movlw	175
  2091  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2092  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0480  0085               	movwf	5	;volatile
  2094                           
  2095                           ;MCU_B1.c: 59: PORTB=0b00000001;;
  2096  0481  3001               	movlw	1
  2097  0482  0086               	movwf	6	;volatile
  2098                           
  2099                           ;MCU_B1.c: 60: PORTC=0b00000000;;
  2100  0483  0187               	clrf	7	;volatile
  2101  0484  0008               	return
  2102  0485                     __end_of_IO_Set:	
  2103                           
  2104                           	psect	text6
  2105  0541                     __ptext6:	
  2106 ;; *************** function _ADC_Set *****************
  2107 ;; Defined at:
  2108 ;;		line 373 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;		None               void
  2115 ;; Registers used:
  2116 ;;		wreg
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2122 ;;      Params:         0       0       0       0
  2123 ;;      Locals:         0       0       0       0
  2124 ;;      Temps:          0       0       0       0
  2125 ;;      Totals:         0       0       0       0
  2126 ;;Total ram usage:        0 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    2
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_Mcu_Initialization
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _ADC_Set
  2138  0541                     _ADC_Set:	
  2139                           
  2140                           ;MCU_B1.c: 375: ADCON1=0x72;
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _ADC_Set: [wreg]
  2144  0541  3072               	movlw	114
  2145  0542  1683               	bsf	3,5	;RP0=1, select bank1
  2146  0543  1303               	bcf	3,6	;RP1=0, select bank1
  2147  0544  009F               	movwf	31	;volatile
  2148                           
  2149                           ;MCU_B1.c: 376: FVRCON=0xc1;
  2150  0545  30C1               	movlw	193
  2151  0546  009D               	movwf	29	;volatile
  2152  0547  0008               	return
  2153  0548                     __end_of_ADC_Set:	
  2154                           
  2155                           	psect	text7
  2156  0548                     __ptext7:	
  2157 ;; *************** function _MainT_Initialization *****************
  2158 ;; Defined at:
  2159 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2173 ;;      Params:         0       0       0       0
  2174 ;;      Locals:         0       0       0       0
  2175 ;;      Temps:          1       0       0       0
  2176 ;;      Totals:         1       0       0       0
  2177 ;;Total ram usage:        1 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    2
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _MainT_Initialization
  2189  0548                     _MainT_Initialization:	
  2190                           
  2191                           ;main.c: 99: TMain=&VarTMain;
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in _MainT_Initialization: [wreg]
  2195  0548  3024               	movlw	_VarTMain& (0+255)
  2196  0549  00F6               	movwf	??_MainT_Initialization
  2197  054A  0876               	movf	??_MainT_Initialization,w
  2198  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2199  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2200  054D  00EF               	movwf	_TMain
  2201  054E  0008               	return
  2202  054F                     __end_of_MainT_Initialization:	
  2203                           
  2204                           	psect	text8
  2205  0120                     __ptext8:	
  2206 ;; *************** function _MainT *****************
  2207 ;; Defined at:
  2208 ;;		line 104 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;		None               void
  2215 ;; Registers used:
  2216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2222 ;;      Params:         0       0       0       0
  2223 ;;      Locals:         0       0       0       0
  2224 ;;      Temps:          0       2       0       0
  2225 ;;      Totals:         0       2       0       0
  2226 ;;Total ram usage:        2 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    4
  2229 ;; This function calls:
  2230 ;;		_setBuz
  2231 ;;		_setLights_Switch
  2232 ;;		_setLights_Trigger
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function _MainT
  2240  0120                     _MainT:	
  2241                           
  2242                           ;main.c: 107: if(!TMain->PowerON)
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _MainT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2246  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0122  086F               	movf	_TMain,w
  2249  0123  0084               	movwf	4
  2250  0124  1383               	bcf	3,7	;select IRP bank0
  2251  0125  1800               	btfsc	0,0
  2252  0126  2951               	goto	l2350
  2253                           
  2254                           ;main.c: 108: {
  2255                           ;main.c: 109: TMain->PowerCount++;
  2256  0127  0A6F               	incf	_TMain,w
  2257  0128  0084               	movwf	4
  2258  0129  3001               	movlw	1
  2259  012A  0780               	addwf	0,f
  2260  012B  0A84               	incf	4,f
  2261  012C  1803               	skipnc
  2262  012D  0A80               	incf	0,f
  2263                           
  2264                           ;main.c: 110: if(TMain->PowerCount == 150)
  2265  012E  0A6F               	incf	_TMain,w
  2266  012F  0084               	movwf	4
  2267  0130  0800               	movf	0,w
  2268  0131  00EB               	movwf	??_MainT
  2269  0132  0A84               	incf	4,f
  2270  0133  0800               	movf	0,w
  2271  0134  00EC               	movwf	??_MainT+1
  2272  0135  3096               	movlw	150
  2273  0136  066B               	xorwf	??_MainT,w
  2274  0137  046C               	iorwf	??_MainT+1,w
  2275  0138  1D03               	skipz
  2276  0139  0008               	return
  2277                           
  2278                           ;main.c: 111: {
  2279                           ;main.c: 112: TMain->PowerCount=0;
  2280  013A  0A6F               	incf	_TMain,w
  2281  013B  0084               	movwf	4
  2282  013C  0180               	clrf	0
  2283  013D  0A84               	incf	4,f
  2284  013E  0180               	clrf	0
  2285                           
  2286                           ;main.c: 113: TMain->PowerON=1;
  2287  013F  086F               	movf	_TMain,w
  2288  0140  0084               	movwf	4
  2289  0141  1400               	bsf	0,0
  2290                           
  2291                           ;main.c: 116: ;;
  2292                           ;main.c: 126: setBuz(3,50);
  2293  0142  3032               	movlw	50
  2294  0143  00E8               	movwf	setBuz@time
  2295  0144  3000               	movlw	0
  2296  0145  00E9               	movwf	setBuz@time+1
  2297  0146  3003               	movlw	3
  2298  0147  118A  2194         	fcall	_setBuz
  2299                           
  2300                           ;main.c: 127: TMain->SelfTest=1;
  2301  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2302  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2303  014B  086F               	movf	_TMain,w
  2304  014C  3E03               	addlw	3
  2305  014D  0084               	movwf	4
  2306  014E  1383               	bcf	3,7	;select IRP bank0
  2307  014F  1400               	bsf	0,0
  2308                           
  2309                           ;main.c: 136: }
  2310                           ;main.c: 137: }
  2311                           
  2312                           ;main.c: 129: ;;
  2313  0150  0008               	return
  2314  0151                     l2350:	
  2315                           
  2316                           ;main.c: 138: else
  2317                           ;main.c: 139: {
  2318                           ;main.c: 147: TMain->Count1++;
  2319  0151  086F               	movf	_TMain,w
  2320  0152  3E06               	addlw	6
  2321  0153  0084               	movwf	4
  2322  0154  3001               	movlw	1
  2323  0155  0780               	addwf	0,f
  2324  0156  0A84               	incf	4,f
  2325  0157  1803               	skipnc
  2326  0158  0A80               	incf	0,f
  2327                           
  2328                           ;main.c: 148: if(TMain->Count1 == 100)
  2329  0159  086F               	movf	_TMain,w
  2330  015A  3E06               	addlw	6
  2331  015B  0084               	movwf	4
  2332  015C  0800               	movf	0,w
  2333  015D  00EB               	movwf	??_MainT
  2334  015E  0A84               	incf	4,f
  2335  015F  0800               	movf	0,w
  2336  0160  00EC               	movwf	??_MainT+1
  2337  0161  3064               	movlw	100
  2338  0162  066B               	xorwf	??_MainT,w
  2339  0163  046C               	iorwf	??_MainT+1,w
  2340  0164  1D03               	skipz
  2341  0165  0008               	return
  2342                           
  2343                           ;main.c: 149: {
  2344                           ;main.c: 150: TMain->Count1=0;
  2345  0166  086F               	movf	_TMain,w
  2346  0167  3E06               	addlw	6
  2347  0168  0084               	movwf	4
  2348  0169  0180               	clrf	0
  2349  016A  0A84               	incf	4,f
  2350  016B  0180               	clrf	0
  2351                           
  2352                           ;main.c: 163: if(TMain->Flag)
  2353  016C  086F               	movf	_TMain,w
  2354  016D  0084               	movwf	4
  2355  016E  1D80               	btfss	0,3
  2356  016F  2981               	goto	l2364
  2357                           
  2358                           ;main.c: 164: {
  2359                           ;main.c: 165: TMain->Flag=0;
  2360  0170  086F               	movf	_TMain,w
  2361  0171  0084               	movwf	4
  2362  0172  1180               	bcf	0,3
  2363                           
  2364                           ;main.c: 167: setLights_Trigger(1,1);
  2365  0173  01E3               	clrf	setLights_Trigger@command
  2366  0174  0AE3               	incf	setLights_Trigger@command,f
  2367  0175  3001               	movlw	1
  2368  0176  118A  24B7  118A   	fcall	_setLights_Trigger
  2369                           
  2370                           ;main.c: 168: setLights_Switch(1,1);
  2371  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2372  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2373  017B  01E3               	clrf	setLights_Switch@command
  2374  017C  0AE3               	incf	setLights_Switch@command,f
  2375  017D  3001               	movlw	1
  2376  017E  118A  24C7         	fcall	_setLights_Switch
  2377                           
  2378                           ;main.c: 174: }
  2379  0180  0008               	return
  2380  0181                     l2364:	
  2381                           
  2382                           ;main.c: 175: else
  2383                           ;main.c: 176: {
  2384                           ;main.c: 177: TMain->Flag=1;
  2385  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0183  086F               	movf	_TMain,w
  2388  0184  0084               	movwf	4
  2389  0185  1383               	bcf	3,7	;select IRP bank0
  2390  0186  1580               	bsf	0,3
  2391                           
  2392                           ;main.c: 179: setLights_Trigger(1,1);
  2393  0187  01E3               	clrf	setLights_Trigger@command
  2394  0188  0AE3               	incf	setLights_Trigger@command,f
  2395  0189  3001               	movlw	1
  2396  018A  118A  24B7  118A   	fcall	_setLights_Trigger
  2397                           
  2398                           ;main.c: 180: setLights_Switch(1,0);
  2399  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2400  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2401  018F  01E3               	clrf	setLights_Switch@command
  2402  0190  3001               	movlw	1
  2403  0191  118A  24C7         	fcall	_setLights_Switch
  2404  0193  0008               	return
  2405  0194                     __end_of_MainT:	
  2406                           
  2407                           	psect	text9
  2408  0194                     __ptext9:	
  2409 ;; *************** function _setBuz *****************
  2410 ;; Defined at:
  2411 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  count           1    wreg     unsigned char 
  2414 ;;  time            2    6[BANK0 ] int 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  count           1    8[BANK0 ] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2426 ;;      Params:         0       2       0       0
  2427 ;;      Locals:         0       1       0       0
  2428 ;;      Temps:          1       0       0       0
  2429 ;;      Totals:         1       3       0       0
  2430 ;;Total ram usage:        4 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    3
  2433 ;; This function calls:
  2434 ;;		___wmul
  2435 ;; This function is called by:
  2436 ;;		_MainT
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function _setBuz
  2442  0194                     _setBuz:	
  2443                           
  2444                           ;incstack = 0
  2445                           ; Regs used in _setBuz: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2446                           ;setBuz@count stored from wreg
  2447  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0196  00EA               	movwf	setBuz@count
  2450                           
  2451                           ;Buzzer_B1.c: 24: time*=20;
  2452  0197  3014               	movlw	20
  2453  0198  00E2               	movwf	___wmul@multiplier
  2454  0199  3000               	movlw	0
  2455  019A  00E3               	movwf	___wmul@multiplier+1
  2456  019B  0869               	movf	setBuz@time+1,w
  2457  019C  01E5               	clrf	___wmul@multiplicand+1
  2458  019D  07E5               	addwf	___wmul@multiplicand+1,f
  2459  019E  0868               	movf	setBuz@time,w
  2460  019F  01E4               	clrf	___wmul@multiplicand
  2461  01A0  07E4               	addwf	___wmul@multiplicand,f
  2462  01A1  118A  2416  118A   	fcall	___wmul
  2463  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2464  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2465  01A6  0863               	movf	?___wmul+1,w
  2466  01A7  01E9               	clrf	setBuz@time+1
  2467  01A8  07E9               	addwf	setBuz@time+1,f
  2468  01A9  0862               	movf	?___wmul,w
  2469  01AA  01E8               	clrf	setBuz@time
  2470  01AB  07E8               	addwf	setBuz@time,f
  2471                           
  2472                           ;Buzzer_B1.c: 25: if(Buz->Enable)
  2473  01AC  0820               	movf	_Buz,w
  2474  01AD  0084               	movwf	4
  2475  01AE  1383               	bcf	3,7	;select IRP bank0
  2476  01AF  1C00               	btfss	0,0
  2477  01B0  0008               	return
  2478                           
  2479                           ;Buzzer_B1.c: 26: {
  2480                           ;Buzzer_B1.c: 27: if(!Buz->GO)
  2481  01B1  0820               	movf	_Buz,w
  2482  01B2  0084               	movwf	4
  2483  01B3  1880               	btfsc	0,1
  2484  01B4  29C9               	goto	l2172
  2485                           
  2486                           ;Buzzer_B1.c: 28: {
  2487                           ;Buzzer_B1.c: 29: Buz->GO=1;
  2488  01B5  0820               	movf	_Buz,w
  2489  01B6  0084               	movwf	4
  2490  01B7  1480               	bsf	0,1
  2491                           
  2492                           ;Buzzer_B1.c: 30: Buz->Count=count;
  2493  01B8  086A               	movf	setBuz@count,w
  2494  01B9  00F6               	movwf	??_setBuz
  2495  01BA  0820               	movf	_Buz,w
  2496  01BB  3E03               	addlw	3
  2497  01BC  0084               	movwf	4
  2498  01BD  0876               	movf	??_setBuz,w
  2499  01BE  0080               	movwf	0
  2500                           
  2501                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
  2502  01BF  0820               	movf	_Buz,w
  2503  01C0  3E06               	addlw	6
  2504  01C1  0084               	movwf	4
  2505  01C2  0868               	movf	setBuz@time,w
  2506  01C3  0080               	movwf	0
  2507  01C4  0A84               	incf	4,f
  2508  01C5  0869               	movf	setBuz@time+1,w
  2509  01C6  0080               	movwf	0
  2510                           
  2511                           ;Buzzer_B1.c: 33: RB1=1;
  2512  01C7  1486               	bsf	6,1	;volatile
  2513                           
  2514                           ;Buzzer_B1.c: 34: }
  2515  01C8  0008               	return
  2516  01C9                     l2172:	
  2517                           
  2518                           ;Buzzer_B1.c: 35: else
  2519                           ;Buzzer_B1.c: 36: {
  2520                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
  2521  01C9  0820               	movf	_Buz,w
  2522  01CA  0084               	movwf	4
  2523  01CB  1980               	btfsc	0,3
  2524  01CC  29E0               	goto	l2176
  2525                           
  2526                           ;Buzzer_B1.c: 38: {
  2527                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
  2528  01CD  0820               	movf	_Buz,w
  2529  01CE  0084               	movwf	4
  2530  01CF  1580               	bsf	0,3
  2531                           
  2532                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
  2533  01D0  086A               	movf	setBuz@count,w
  2534  01D1  00F6               	movwf	??_setBuz
  2535  01D2  0820               	movf	_Buz,w
  2536  01D3  3E04               	addlw	4
  2537  01D4  0084               	movwf	4
  2538  01D5  0876               	movf	??_setBuz,w
  2539  01D6  0080               	movwf	0
  2540                           
  2541                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
  2542  01D7  0820               	movf	_Buz,w
  2543  01D8  3E08               	addlw	8
  2544  01D9  0084               	movwf	4
  2545  01DA  0868               	movf	setBuz@time,w
  2546  01DB  0080               	movwf	0
  2547  01DC  0A84               	incf	4,f
  2548  01DD  0869               	movf	setBuz@time+1,w
  2549  01DE  0080               	movwf	0
  2550                           
  2551                           ;Buzzer_B1.c: 42: }
  2552  01DF  0008               	return
  2553  01E0                     l2176:	
  2554                           
  2555                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
  2556  01E0  0820               	movf	_Buz,w
  2557  01E1  0084               	movwf	4
  2558  01E2  1A00               	btfsc	0,4
  2559  01E3  0008               	return
  2560                           
  2561                           ;Buzzer_B1.c: 44: {
  2562                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
  2563  01E4  0820               	movf	_Buz,w
  2564  01E5  0084               	movwf	4
  2565  01E6  1600               	bsf	0,4
  2566                           
  2567                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
  2568  01E7  086A               	movf	setBuz@count,w
  2569  01E8  00F6               	movwf	??_setBuz
  2570  01E9  0820               	movf	_Buz,w
  2571  01EA  3E05               	addlw	5
  2572  01EB  0084               	movwf	4
  2573  01EC  0876               	movf	??_setBuz,w
  2574  01ED  0080               	movwf	0
  2575                           
  2576                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
  2577  01EE  0820               	movf	_Buz,w
  2578  01EF  3E0A               	addlw	10
  2579  01F0  0084               	movwf	4
  2580  01F1  0868               	movf	setBuz@time,w
  2581  01F2  0080               	movwf	0
  2582  01F3  0A84               	incf	4,f
  2583  01F4  0869               	movf	setBuz@time+1,w
  2584  01F5  0080               	movwf	0
  2585  01F6  0008               	return
  2586  01F7                     __end_of_setBuz:	
  2587                           
  2588                           	psect	text10
  2589  0416                     __ptext10:	
  2590 ;; *************** function ___wmul *****************
  2591 ;; Defined at:
  2592 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2595 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  product         2    4[BANK0 ] unsigned int 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  2    0[BANK0 ] unsigned int 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2607 ;;      Params:         0       4       0       0
  2608 ;;      Locals:         0       2       0       0
  2609 ;;      Temps:          0       0       0       0
  2610 ;;      Totals:         0       6       0       0
  2611 ;;Total ram usage:        6 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    2
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_setBuz
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function ___wmul
  2623  0416                     ___wmul:	
  2624                           
  2625                           ;incstack = 0
  2626                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2627  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0418  01E6               	clrf	___wmul@product
  2630  0419  01E7               	clrf	___wmul@product+1
  2631  041A                     l2152:	
  2632  041A  1C62               	btfss	___wmul@multiplier,0
  2633  041B  2C22               	goto	l779
  2634  041C  0864               	movf	___wmul@multiplicand,w
  2635  041D  07E6               	addwf	___wmul@product,f
  2636  041E  1803               	skipnc
  2637  041F  0AE7               	incf	___wmul@product+1,f
  2638  0420  0865               	movf	___wmul@multiplicand+1,w
  2639  0421  07E7               	addwf	___wmul@product+1,f
  2640  0422                     l779:	
  2641  0422  3001               	movlw	1
  2642  0423                     u1645:	
  2643  0423  1003               	clrc
  2644  0424  0DE4               	rlf	___wmul@multiplicand,f
  2645  0425  0DE5               	rlf	___wmul@multiplicand+1,f
  2646  0426  3EFF               	addlw	-1
  2647  0427  1D03               	skipz
  2648  0428  2C23               	goto	u1645
  2649  0429  3001               	movlw	1
  2650  042A                     u1655:	
  2651  042A  1003               	clrc
  2652  042B  0CE3               	rrf	___wmul@multiplier+1,f
  2653  042C  0CE2               	rrf	___wmul@multiplier,f
  2654  042D  3EFF               	addlw	-1
  2655  042E  1D03               	skipz
  2656  042F  2C2A               	goto	u1655
  2657  0430  0863               	movf	___wmul@multiplier+1,w
  2658  0431  0462               	iorwf	___wmul@multiplier,w
  2659  0432  1D03               	skipz
  2660  0433  2C1A               	goto	l2152
  2661  0434  0867               	movf	___wmul@product+1,w
  2662  0435  01E3               	clrf	?___wmul+1
  2663  0436  07E3               	addwf	?___wmul+1,f
  2664  0437  0866               	movf	___wmul@product,w
  2665  0438  01E2               	clrf	?___wmul
  2666  0439  07E2               	addwf	?___wmul,f
  2667  043A  0008               	return
  2668  043B                     __end_of___wmul:	
  2669                           
  2670                           	psect	text11
  2671  0539                     __ptext11:	
  2672 ;; *************** function _Lights_Main *****************
  2673 ;; Defined at:
  2674 ;;		line 52 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2688 ;;      Params:         0       0       0       0
  2689 ;;      Locals:         0       0       0       0
  2690 ;;      Temps:          0       0       0       0
  2691 ;;      Totals:         0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    5
  2695 ;; This function calls:
  2696 ;;		_Lights_Control
  2697 ;;		_setLights_Main
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _Lights_Main
  2705  0539                     _Lights_Main:	
  2706                           
  2707                           ;TriacRelay_B1.c: 55: setLights_Main(1);
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2711  0539  3001               	movlw	1
  2712  053A  118A  23E7  118A   	fcall	_setLights_Main
  2713                           
  2714                           ;TriacRelay_B1.c: 67: Lights_Control(1);
  2715  053D  3001               	movlw	1
  2716  053E  118A  2253         	fcall	_Lights_Control
  2717  0540  0008               	return
  2718  0541                     __end_of_Lights_Main:	
  2719                           
  2720                           	psect	text12
  2721  03E7                     __ptext12:	
  2722 ;; *************** function _setLights_Main *****************
  2723 ;; Defined at:
  2724 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  lights          1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  lights          1    5[BANK0 ] unsigned char 
  2729 ;;  clear           1    4[BANK0 ] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;		None               void
  2732 ;; Registers used:
  2733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2739 ;;      Params:         0       0       0       0
  2740 ;;      Locals:         0       2       0       0
  2741 ;;      Temps:          0       0       0       0
  2742 ;;      Totals:         0       2       0       0
  2743 ;;Total ram usage:        2 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    4
  2746 ;; This function calls:
  2747 ;;		_LightsPointSelect
  2748 ;;		_setLights
  2749 ;; This function is called by:
  2750 ;;		_Lights_Main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _setLights_Main
  2756  03E7                     _setLights_Main:	
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2760                           ;setLights_Main@lights stored from wreg
  2761  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2762  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2763  03E9  00E7               	movwf	setLights_Main@lights
  2764                           
  2765                           ;TriacRelay_B1.c: 80: char clear=1;
  2766  03EA  01E6               	clrf	setLights_Main@clear
  2767  03EB  0AE6               	incf	setLights_Main@clear,f
  2768                           
  2769                           ;TriacRelay_B1.c: 81: LightsPointSelect(lights);
  2770  03EC  0867               	movf	setLights_Main@lights,w
  2771  03ED  118A  251A  118A   	fcall	_LightsPointSelect
  2772                           
  2773                           ;TriacRelay_B1.c: 109: if(Lights->Trigger)
  2774  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2775  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2776  03F2  0823               	movf	_Lights,w
  2777  03F3  0084               	movwf	4
  2778  03F4  1383               	bcf	3,7	;select IRP bank0
  2779  03F5  1E80               	btfss	0,5
  2780  03F6  0008               	return
  2781                           
  2782                           ;TriacRelay_B1.c: 110: {
  2783                           ;TriacRelay_B1.c: 111: if(clear)
  2784  03F7  0866               	movf	setLights_Main@clear,w
  2785  03F8  1903               	btfsc	3,2
  2786  03F9  0008               	return
  2787                           
  2788                           ;TriacRelay_B1.c: 112: {
  2789                           ;TriacRelay_B1.c: 113: if(Lights->Switch)
  2790  03FA  0823               	movf	_Lights,w
  2791  03FB  0084               	movwf	4
  2792  03FC  1F00               	btfss	0,6
  2793  03FD  2C09               	goto	l2244
  2794                           
  2795                           ;TriacRelay_B1.c: 114: {
  2796                           ;TriacRelay_B1.c: 115: Lights->Trigger=0;
  2797  03FE  0823               	movf	_Lights,w
  2798  03FF  0084               	movwf	4
  2799  0400  1280               	bcf	0,5
  2800                           
  2801                           ;TriacRelay_B1.c: 116: setLights(lights,1);
  2802  0401  01E3               	clrf	setLights@command
  2803  0402  0AE3               	incf	setLights@command,f
  2804  0403  0867               	movf	setLights_Main@lights,w
  2805  0404  118A  2337         	fcall	_setLights
  2806                           
  2807                           ;TriacRelay_B1.c: 121: }
  2808  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0408  0008               	return
  2811  0409                     l2244:	
  2812                           
  2813                           ;TriacRelay_B1.c: 122: else
  2814                           ;TriacRelay_B1.c: 123: {
  2815                           ;TriacRelay_B1.c: 124: Lights->Trigger=0;
  2816  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2817  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2818  040B  0823               	movf	_Lights,w
  2819  040C  0084               	movwf	4
  2820  040D  1383               	bcf	3,7	;select IRP bank0
  2821  040E  1280               	bcf	0,5
  2822                           
  2823                           ;TriacRelay_B1.c: 125: setLights(lights,0);
  2824  040F  01E3               	clrf	setLights@command
  2825  0410  0867               	movf	setLights_Main@lights,w
  2826  0411  118A  2337         	fcall	_setLights
  2827  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0415  0008               	return
  2830  0416                     __end_of_setLights_Main:	
  2831                           
  2832                           	psect	text13
  2833  0337                     __ptext13:	
  2834 ;; *************** function _setLights *****************
  2835 ;; Defined at:
  2836 ;;		line 170 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  lights          1    wreg     unsigned char 
  2839 ;;  command         1    1[BANK0 ] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  lights          1    3[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2851 ;;      Params:         0       1       0       0
  2852 ;;      Locals:         0       1       0       0
  2853 ;;      Temps:          0       1       0       0
  2854 ;;      Totals:         0       3       0       0
  2855 ;;Total ram usage:        3 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    3
  2858 ;; This function calls:
  2859 ;;		_LightsPointSelect
  2860 ;; This function is called by:
  2861 ;;		_setLights_Main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _setLights
  2867  0337                     _setLights:	
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2871                           ;setLights@lights stored from wreg
  2872  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0339  00E5               	movwf	setLights@lights
  2875                           
  2876                           ;TriacRelay_B1.c: 172: LightsPointSelect(lights);
  2877  033A  0865               	movf	setLights@lights,w
  2878  033B  118A  251A  118A   	fcall	_LightsPointSelect
  2879                           
  2880                           ;TriacRelay_B1.c: 174: Lights->GO=1;
  2881  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2882  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0340  0823               	movf	_Lights,w
  2884  0341  0084               	movwf	4
  2885  0342  1383               	bcf	3,7	;select IRP bank0
  2886  0343  1480               	bsf	0,1
  2887                           
  2888                           ;TriacRelay_B1.c: 175: Lights->RelaySet=0;
  2889  0344  0823               	movf	_Lights,w
  2890  0345  3E07               	addlw	7
  2891  0346  0084               	movwf	4
  2892  0347  1000               	bcf	0,0
  2893                           
  2894                           ;TriacRelay_B1.c: 176: if(command)
  2895  0348  0863               	movf	setLights@command,w
  2896  0349  1903               	btfsc	3,2
  2897  034A  2B62               	goto	l2144
  2898                           
  2899                           ;TriacRelay_B1.c: 177: {
  2900                           ;TriacRelay_B1.c: 178: Lights->Status=1;
  2901  034B  0823               	movf	_Lights,w
  2902  034C  0084               	movwf	4
  2903  034D  1500               	bsf	0,2
  2904                           
  2905                           ;TriacRelay_B1.c: 179: Lights->TriacValue=13;
  2906  034E  300D               	movlw	13
  2907  034F  00E4               	movwf	??_setLights
  2908  0350  0823               	movf	_Lights,w
  2909  0351  3E04               	addlw	4
  2910  0352  0084               	movwf	4
  2911  0353  0864               	movf	??_setLights,w
  2912  0354  0080               	movwf	0
  2913                           
  2914                           ;TriacRelay_B1.c: 180: Lights->RelayValue=10;
  2915  0355  300A               	movlw	10
  2916  0356  00E4               	movwf	??_setLights
  2917  0357  0823               	movf	_Lights,w
  2918  0358  3E06               	addlw	6
  2919  0359  0084               	movwf	4
  2920  035A  0864               	movf	??_setLights,w
  2921  035B  0080               	movwf	0
  2922                           
  2923                           ;TriacRelay_B1.c: 183: if(lights == 1)
  2924  035C  0865               	movf	setLights@lights,w
  2925  035D  3A01               	xorlw	1
  2926  035E  1D03               	skipz
  2927  035F  0008               	return
  2928                           
  2929                           ;TriacRelay_B1.c: 184: {
  2930                           ;TriacRelay_B1.c: 185: RB2=1;
  2931  0360  1506               	bsf	6,2	;volatile
  2932                           
  2933                           ;TriacRelay_B1.c: 186: }
  2934                           ;TriacRelay_B1.c: 202: }
  2935  0361  0008               	return
  2936  0362                     l2144:	
  2937                           
  2938                           ;TriacRelay_B1.c: 203: else
  2939                           ;TriacRelay_B1.c: 204: {
  2940                           ;TriacRelay_B1.c: 205: Lights->Status=0;
  2941  0362  0823               	movf	_Lights,w
  2942  0363  0084               	movwf	4
  2943  0364  1100               	bcf	0,2
  2944                           
  2945                           ;TriacRelay_B1.c: 206: Lights->TriacValue=5;
  2946  0365  3005               	movlw	5
  2947  0366  00E4               	movwf	??_setLights
  2948  0367  0823               	movf	_Lights,w
  2949  0368  3E04               	addlw	4
  2950  0369  0084               	movwf	4
  2951  036A  0864               	movf	??_setLights,w
  2952  036B  0080               	movwf	0
  2953                           
  2954                           ;TriacRelay_B1.c: 207: Lights->RelayValue=2;
  2955  036C  3002               	movlw	2
  2956  036D  00E4               	movwf	??_setLights
  2957  036E  0823               	movf	_Lights,w
  2958  036F  3E06               	addlw	6
  2959  0370  0084               	movwf	4
  2960  0371  0864               	movf	??_setLights,w
  2961  0372  0080               	movwf	0
  2962                           
  2963                           ;TriacRelay_B1.c: 209: if(lights == 1)
  2964  0373  0865               	movf	setLights@lights,w
  2965  0374  3A01               	xorlw	1
  2966  0375  1D03               	skipz
  2967  0376  0008               	return
  2968                           
  2969                           ;TriacRelay_B1.c: 210: {
  2970                           ;TriacRelay_B1.c: 211: RB2=1;
  2971  0377  1506               	bsf	6,2	;volatile
  2972  0378  0008               	return
  2973  0379                     __end_of_setLights:	
  2974                           
  2975                           	psect	text14
  2976  0253                     __ptext14:	
  2977 ;; *************** function _Lights_Control *****************
  2978 ;; Defined at:
  2979 ;;		line 239 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  lights          1    wreg     unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  lights          1    3[BANK0 ] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;		None               void
  2986 ;; Registers used:
  2987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2993 ;;      Params:         0       0       0       0
  2994 ;;      Locals:         0       1       0       0
  2995 ;;      Temps:          0       2       0       0
  2996 ;;      Totals:         0       3       0       0
  2997 ;;Total ram usage:        3 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    3
  3000 ;; This function calls:
  3001 ;;		_LightsPointSelect
  3002 ;; This function is called by:
  3003 ;;		_Lights_Main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function _Lights_Control
  3009  0253                     _Lights_Control:	
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3013                           ;Lights_Control@lights stored from wreg
  3014  0253  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0254  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0255  00E5               	movwf	Lights_Control@lights
  3017                           
  3018                           ;TriacRelay_B1.c: 241: LightsPointSelect(lights);
  3019  0256  0865               	movf	Lights_Control@lights,w
  3020  0257  118A  251A  118A   	fcall	_LightsPointSelect
  3021                           
  3022                           ;TriacRelay_B1.c: 242: if(Lights->GO)
  3023  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3024  025B  1303               	bcf	3,6	;RP1=0, select bank0
  3025  025C  0823               	movf	_Lights,w
  3026  025D  0084               	movwf	4
  3027  025E  1383               	bcf	3,7	;select IRP bank0
  3028  025F  1C80               	btfss	0,1
  3029  0260  0008               	return
  3030                           
  3031                           ;TriacRelay_B1.c: 243: {
  3032                           ;TriacRelay_B1.c: 244: Lights->Time++;
  3033  0261  3001               	movlw	1
  3034  0262  00E3               	movwf	??_Lights_Control
  3035  0263  0823               	movf	_Lights,w
  3036  0264  3E02               	addlw	2
  3037  0265  0084               	movwf	4
  3038  0266  0863               	movf	??_Lights_Control,w
  3039  0267  0780               	addwf	0,f
  3040                           
  3041                           ;TriacRelay_B1.c: 245: if(Lights->Time >= Lights->RelayValue && !Lights->RelaySet)
  3042  0268  0823               	movf	_Lights,w
  3043  0269  3E06               	addlw	6
  3044  026A  0084               	movwf	4
  3045  026B  0800               	movf	0,w
  3046  026C  00E3               	movwf	??_Lights_Control
  3047  026D  0823               	movf	_Lights,w
  3048  026E  3E02               	addlw	2
  3049  026F  0084               	movwf	4
  3050  0270  0800               	movf	0,w
  3051  0271  00E4               	movwf	??_Lights_Control+1
  3052  0272  0863               	movf	??_Lights_Control,w
  3053  0273  0264               	subwf	??_Lights_Control+1,w
  3054  0274  1C03               	skipc
  3055  0275  2A8F               	goto	l2264
  3056  0276  0823               	movf	_Lights,w
  3057  0277  3E07               	addlw	7
  3058  0278  0084               	movwf	4
  3059  0279  1800               	btfsc	0,0
  3060  027A  2A8F               	goto	l2264
  3061                           
  3062                           ;TriacRelay_B1.c: 246: {
  3063                           ;TriacRelay_B1.c: 247: Lights->RelaySet=1;
  3064  027B  0823               	movf	_Lights,w
  3065  027C  3E07               	addlw	7
  3066  027D  0084               	movwf	4
  3067  027E  1400               	bsf	0,0
  3068                           
  3069                           ;TriacRelay_B1.c: 249: if(lights == 1)
  3070  027F  0865               	movf	Lights_Control@lights,w
  3071  0280  3A01               	xorlw	1
  3072  0281  1D03               	skipz
  3073  0282  0008               	return
  3074                           
  3075                           ;TriacRelay_B1.c: 250: {
  3076                           ;TriacRelay_B1.c: 251: RA4=Lights->Status?1:0;
  3077  0283  0823               	movf	_Lights,w
  3078  0284  0084               	movwf	4
  3079  0285  1D00               	btfss	0,2
  3080  0286  2A8B               	goto	u1840
  3081  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0288  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0289  1605               	bsf	5,4	;volatile
  3084  028A  0008               	return
  3085  028B                     u1840:	
  3086  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3087  028C  1303               	bcf	3,6	;RP1=0, select bank0
  3088  028D  1205               	bcf	5,4	;volatile
  3089                           
  3090                           ;TriacRelay_B1.c: 252: }
  3091                           ;TriacRelay_B1.c: 268: }
  3092  028E  0008               	return
  3093  028F                     l2264:	
  3094                           
  3095                           ;TriacRelay_B1.c: 269: else if(Lights->Time >= Lights->TriacValue)
  3096  028F  0823               	movf	_Lights,w
  3097  0290  3E04               	addlw	4
  3098  0291  0084               	movwf	4
  3099  0292  1383               	bcf	3,7	;select IRP bank0
  3100  0293  0800               	movf	0,w
  3101  0294  00E3               	movwf	??_Lights_Control
  3102  0295  0823               	movf	_Lights,w
  3103  0296  3E02               	addlw	2
  3104  0297  0084               	movwf	4
  3105  0298  0800               	movf	0,w
  3106  0299  00E4               	movwf	??_Lights_Control+1
  3107  029A  0863               	movf	??_Lights_Control,w
  3108  029B  0264               	subwf	??_Lights_Control+1,w
  3109  029C  1C03               	skipc
  3110  029D  0008               	return
  3111                           
  3112                           ;TriacRelay_B1.c: 270: {
  3113                           ;TriacRelay_B1.c: 271: Lights->Time=0;
  3114  029E  0823               	movf	_Lights,w
  3115  029F  3E02               	addlw	2
  3116  02A0  0084               	movwf	4
  3117  02A1  0180               	clrf	0
  3118                           
  3119                           ;TriacRelay_B1.c: 272: Lights->GO=0;
  3120  02A2  0823               	movf	_Lights,w
  3121  02A3  0084               	movwf	4
  3122  02A4  1080               	bcf	0,1
  3123                           
  3124                           ;TriacRelay_B1.c: 275: if(lights == 1)
  3125  02A5  0865               	movf	Lights_Control@lights,w
  3126  02A6  3A01               	xorlw	1
  3127  02A7  1D03               	skipz
  3128  02A8  0008               	return
  3129                           
  3130                           ;TriacRelay_B1.c: 276: {
  3131                           ;TriacRelay_B1.c: 277: RB2=0;
  3132  02A9  1106               	bcf	6,2	;volatile
  3133  02AA  0008               	return
  3134  02AB                     __end_of_Lights_Control:	
  3135                           
  3136                           	psect	text15
  3137  054F                     __ptext15:	
  3138 ;; *************** function _Lights_Initialization *****************
  3139 ;; Defined at:
  3140 ;;		line 32 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;		None               void
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3154 ;;      Params:         0       0       0       0
  3155 ;;      Locals:         0       0       0       0
  3156 ;;      Temps:          0       0       0       0
  3157 ;;      Totals:         0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    4
  3161 ;; This function calls:
  3162 ;;		_setLights_Initialization
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _Lights_Initialization
  3170  054F                     _Lights_Initialization:	
  3171                           
  3172                           ;TriacRelay_B1.c: 35: setLights_Initialization(1);
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _Lights_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3176  054F  3001               	movlw	1
  3177  0550  118A  24A7         	fcall	_setLights_Initialization
  3178  0552  0008               	return
  3179  0553                     __end_of_Lights_Initialization:	
  3180                           
  3181                           	psect	text16
  3182  04A7                     __ptext16:	
  3183 ;; *************** function _setLights_Initialization *****************
  3184 ;; Defined at:
  3185 ;;		line 46 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  lights          1    wreg     unsigned char 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  lights          1    1[BANK0 ] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;		None               void
  3192 ;; Registers used:
  3193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3199 ;;      Params:         0       0       0       0
  3200 ;;      Locals:         0       1       0       0
  3201 ;;      Temps:          0       0       0       0
  3202 ;;      Totals:         0       1       0       0
  3203 ;;Total ram usage:        1 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    3
  3206 ;; This function calls:
  3207 ;;		_LightsPointSelect
  3208 ;; This function is called by:
  3209 ;;		_Lights_Initialization
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _setLights_Initialization
  3215  04A7                     _setLights_Initialization:	
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _setLights_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3219                           ;setLights_Initialization@lights stored from wreg
  3220  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3221  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3222  04A9  00E3               	movwf	setLights_Initialization@lights
  3223                           
  3224                           ;TriacRelay_B1.c: 48: LightsPointSelect(lights);
  3225  04AA  0863               	movf	setLights_Initialization@lights,w
  3226  04AB  118A  251A         	fcall	_LightsPointSelect
  3227                           
  3228                           ;TriacRelay_B1.c: 49: Lights->Open=1;
  3229  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  3230  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  3231  04AF  0823               	movf	_Lights,w
  3232  04B0  0084               	movwf	4
  3233  04B1  1383               	bcf	3,7	;select IRP bank0
  3234  04B2  1580               	bsf	0,3
  3235                           
  3236                           ;TriacRelay_B1.c: 50: Lights->Close=1;
  3237  04B3  0823               	movf	_Lights,w
  3238  04B4  0084               	movwf	4
  3239  04B5  1600               	bsf	0,4
  3240  04B6  0008               	return
  3241  04B7                     __end_of_setLights_Initialization:	
  3242                           
  3243                           	psect	text17
  3244  0502                     __ptext17:	
  3245 ;; *************** function _LED_Main *****************
  3246 ;; Defined at:
  3247 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;		None               void
  3254 ;; Registers used:
  3255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3261 ;;      Params:         0       0       0       0
  3262 ;;      Locals:         0       0       0       0
  3263 ;;      Temps:          0       0       0       0
  3264 ;;      Totals:         0       0       0       0
  3265 ;;Total ram usage:        0 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    4
  3268 ;; This function calls:
  3269 ;;		_setLED_Main
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _LED_Main
  3277  0502                     _LED_Main:	
  3278                           
  3279                           ;LED_B1.c: 54: setLED_Main(1);
  3280                           
  3281                           ;incstack = 0
  3282                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3283  0502  3001               	movlw	1
  3284  0503  118A  2379  118A   	fcall	_setLED_Main
  3285                           
  3286                           ;LED_B1.c: 57: setLED_Main(2);
  3287  0506  3002               	movlw	2
  3288  0507  118A  2379  118A   	fcall	_setLED_Main
  3289                           
  3290                           ;LED_B1.c: 63: setLED_Main(99);
  3291  050A  3063               	movlw	99
  3292  050B  118A  2379         	fcall	_setLED_Main
  3293  050D  0008               	return
  3294  050E                     __end_of_LED_Main:	
  3295                           
  3296                           	psect	text18
  3297  0379                     __ptext18:	
  3298 ;; *************** function _setLED_Main *****************
  3299 ;; Defined at:
  3300 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  led             1    wreg     unsigned char 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  led             1    3[BANK0 ] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;		None               void
  3307 ;; Registers used:
  3308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3314 ;;      Params:         0       0       0       0
  3315 ;;      Locals:         0       1       0       0
  3316 ;;      Temps:          0       2       0       0
  3317 ;;      Totals:         0       3       0       0
  3318 ;;Total ram usage:        3 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    3
  3321 ;; This function calls:
  3322 ;;		_LedPointSelect
  3323 ;; This function is called by:
  3324 ;;		_LED_Main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function _setLED_Main
  3330  0379                     _setLED_Main:	
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in _setLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3334                           ;setLED_Main@led stored from wreg
  3335  0379  1283               	bcf	3,5	;RP0=0, select bank0
  3336  037A  1303               	bcf	3,6	;RP1=0, select bank0
  3337  037B  00E5               	movwf	setLED_Main@led
  3338                           
  3339                           ;LED_B1.c: 216: LedPointSelect(led);
  3340  037C  0865               	movf	setLED_Main@led,w
  3341  037D  118A  243B  118A   	fcall	_LedPointSelect
  3342                           
  3343                           ;LED_B1.c: 217: if(LED->GO)
  3344  0380  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0381  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0382  0822               	movf	_LED,w
  3347  0383  0084               	movwf	4
  3348  0384  1383               	bcf	3,7	;select IRP bank0
  3349  0385  1C80               	btfss	0,1
  3350  0386  0008               	return
  3351                           
  3352                           ;LED_B1.c: 218: {
  3353                           ;LED_B1.c: 219: LED->Time++;
  3354  0387  0A22               	incf	_LED,w
  3355  0388  0084               	movwf	4
  3356  0389  3001               	movlw	1
  3357  038A  0780               	addwf	0,f
  3358  038B  0A84               	incf	4,f
  3359  038C  1803               	skipnc
  3360  038D  0A80               	incf	0,f
  3361                           
  3362                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
  3363  038E  0A22               	incf	_LED,w
  3364  038F  0084               	movwf	4
  3365  0390  0800               	movf	0,w
  3366  0391  00E3               	movwf	??_setLED_Main
  3367  0392  0A84               	incf	4,f
  3368  0393  0800               	movf	0,w
  3369  0394  00E4               	movwf	??_setLED_Main+1
  3370  0395  3000               	movlw	0
  3371  0396  0264               	subwf	??_setLED_Main+1,w
  3372  0397  3032               	movlw	50
  3373  0398  1903               	skipnz
  3374  0399  0263               	subwf	??_setLED_Main,w
  3375  039A  1C03               	skipc
  3376  039B  0008               	return
  3377                           
  3378                           ;LED_B1.c: 221: {
  3379                           ;LED_B1.c: 222: LED->Time=0;
  3380  039C  0A22               	incf	_LED,w
  3381  039D  0084               	movwf	4
  3382  039E  0180               	clrf	0
  3383  039F  0A84               	incf	4,f
  3384  03A0  0180               	clrf	0
  3385                           
  3386                           ;LED_B1.c: 224: if(led == 1)
  3387  03A1  0865               	movf	setLED_Main@led,w
  3388  03A2  3A01               	xorlw	1
  3389  03A3  1D03               	skipz
  3390  03A4  2BA8               	goto	l2216
  3391                           
  3392                           ;LED_B1.c: 225: {
  3393                           ;LED_B1.c: 226: RB4=~RB4;
  3394  03A5  3010               	movlw	16
  3395  03A6  0686               	xorwf	6,f
  3396                           
  3397                           ;LED_B1.c: 227: }
  3398  03A7  0008               	return
  3399  03A8                     l2216:	
  3400                           
  3401                           ;LED_B1.c: 230: else if(led == 2)
  3402  03A8  0865               	movf	setLED_Main@led,w
  3403  03A9  3A02               	xorlw	2
  3404  03AA  1D03               	skipz
  3405  03AB  2BAF               	goto	l2220
  3406                           
  3407                           ;LED_B1.c: 231: {
  3408                           ;LED_B1.c: 232: RB5=~RB5;
  3409  03AC  3020               	movlw	32
  3410  03AD  0686               	xorwf	6,f
  3411                           
  3412                           ;LED_B1.c: 233: }
  3413  03AE  0008               	return
  3414  03AF                     l2220:	
  3415                           
  3416                           ;LED_B1.c: 242: else if(led == 99)
  3417  03AF  0865               	movf	setLED_Main@led,w
  3418  03B0  3A63               	xorlw	99
  3419  03B1  1D03               	skipz
  3420  03B2  0008               	return
  3421                           
  3422                           ;LED_B1.c: 243: {
  3423                           ;LED_B1.c: 244: RB3=~RB3;
  3424  03B3  3008               	movlw	8
  3425  03B4  0686               	xorwf	6,f
  3426  03B5  0008               	return
  3427  03B6                     __end_of_setLED_Main:	
  3428                           
  3429                           	psect	text19
  3430  050E                     __ptext19:	
  3431 ;; *************** function _LED_Initialization *****************
  3432 ;; Defined at:
  3433 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;		None               void
  3440 ;; Registers used:
  3441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3447 ;;      Params:         0       0       0       0
  3448 ;;      Locals:         0       0       0       0
  3449 ;;      Temps:          0       0       0       0
  3450 ;;      Totals:         0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    5
  3454 ;; This function calls:
  3455 ;;		_setLED_Initialization
  3456 ;; This function is called by:
  3457 ;;		_main
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function _LED_Initialization
  3463  050E                     _LED_Initialization:	
  3464                           
  3465                           ;LED_B1.c: 38: setLED_Initialization(1);
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3469  050E  3001               	movlw	1
  3470  050F  118A  2485  118A   	fcall	_setLED_Initialization
  3471                           
  3472                           ;LED_B1.c: 41: setLED_Initialization(2);
  3473  0512  3002               	movlw	2
  3474  0513  118A  2485  118A   	fcall	_setLED_Initialization
  3475                           
  3476                           ;LED_B1.c: 47: setLED_Initialization(99);
  3477  0516  3063               	movlw	99
  3478  0517  118A  2485         	fcall	_setLED_Initialization
  3479  0519  0008               	return
  3480  051A                     __end_of_LED_Initialization:	
  3481                           
  3482                           	psect	text20
  3483  0485                     __ptext20:	
  3484 ;; *************** function _setLED_Initialization *****************
  3485 ;; Defined at:
  3486 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  led             1    wreg     unsigned char 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  led             1    3[BANK0 ] unsigned char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;		None               void
  3493 ;; Registers used:
  3494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3500 ;;      Params:         0       0       0       0
  3501 ;;      Locals:         0       1       0       0
  3502 ;;      Temps:          0       0       0       0
  3503 ;;      Totals:         0       1       0       0
  3504 ;;Total ram usage:        1 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    4
  3507 ;; This function calls:
  3508 ;;		_LedPointSelect
  3509 ;;		_setLED
  3510 ;; This function is called by:
  3511 ;;		_LED_Initialization
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           
  3516                           ;psect for function _setLED_Initialization
  3517  0485                     _setLED_Initialization:	
  3518                           
  3519                           ;incstack = 0
  3520                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3521                           ;setLED_Initialization@led stored from wreg
  3522  0485  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0486  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0487  00E5               	movwf	setLED_Initialization@led
  3525                           
  3526                           ;LED_B1.c: 69: LedPointSelect(led);
  3527  0488  0865               	movf	setLED_Initialization@led,w
  3528  0489  118A  243B  118A   	fcall	_LedPointSelect
  3529                           
  3530                           ;LED_B1.c: 70: LED->Enable=1;
  3531  048C  1283               	bcf	3,5	;RP0=0, select bank0
  3532  048D  1303               	bcf	3,6	;RP1=0, select bank0
  3533  048E  0822               	movf	_LED,w
  3534  048F  0084               	movwf	4
  3535  0490  1383               	bcf	3,7	;select IRP bank0
  3536  0491  1400               	bsf	0,0
  3537                           
  3538                           ;LED_B1.c: 71: setLED(led,0);
  3539  0492  01E3               	clrf	setLED@command
  3540  0493  0865               	movf	setLED_Initialization@led,w
  3541  0494  118A  21F7         	fcall	_setLED
  3542  0496  0008               	return
  3543  0497                     __end_of_setLED_Initialization:	
  3544                           
  3545                           	psect	text21
  3546  00A8                     __ptext21:	
  3547 ;; *************** function _CDS_Main *****************
  3548 ;; Defined at:
  3549 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CDS_B1.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;		None               void
  3556 ;; Registers used:
  3557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3563 ;;      Params:         0       0       0       0
  3564 ;;      Locals:         0       0       0       0
  3565 ;;      Temps:          0       3       0       0
  3566 ;;      Totals:         0       3       0       0
  3567 ;;Total ram usage:        3 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    4
  3570 ;; This function calls:
  3571 ;;		_setLights_Switch
  3572 ;;		_setLights_Trigger
  3573 ;; This function is called by:
  3574 ;;		_main
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           
  3579                           ;psect for function _CDS_Main
  3580  00A8                     _CDS_Main:	
  3581                           
  3582                           ;CDS_B1.c: 27: if(CDS->Enable)
  3583                           
  3584                           ;incstack = 0
  3585                           ; Regs used in _CDS_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3586  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  3587  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  3588  00AA  0821               	movf	_CDS,w
  3589  00AB  0084               	movwf	4
  3590  00AC  1383               	bcf	3,7	;select IRP bank0
  3591  00AD  1C00               	btfss	0,0
  3592  00AE  0008               	return
  3593                           
  3594                           ;CDS_B1.c: 28: {
  3595                           ;CDS_B1.c: 29: if(!CDS->GO)
  3596  00AF  0821               	movf	_CDS,w
  3597  00B0  0084               	movwf	4
  3598  00B1  1880               	btfsc	0,1
  3599  00B2  28CA               	goto	l2296
  3600                           
  3601                           ;CDS_B1.c: 30: {
  3602                           ;CDS_B1.c: 31: if(!CDS->ADtoGO)
  3603  00B3  0821               	movf	_CDS,w
  3604  00B4  0084               	movwf	4
  3605  00B5  1980               	btfsc	0,3
  3606  00B6  0008               	return
  3607                           
  3608                           ;CDS_B1.c: 32: {
  3609                           ;CDS_B1.c: 33: CDS->Time++;
  3610  00B7  3001               	movlw	1
  3611  00B8  00E5               	movwf	??_CDS_Main
  3612  00B9  0A21               	incf	_CDS,w
  3613  00BA  0084               	movwf	4
  3614  00BB  0865               	movf	??_CDS_Main,w
  3615  00BC  0780               	addwf	0,f
  3616                           
  3617                           ;CDS_B1.c: 34: if(CDS->Time >= 100)
  3618  00BD  0A21               	incf	_CDS,w
  3619  00BE  0084               	movwf	4
  3620  00BF  3064               	movlw	100
  3621  00C0  0200               	subwf	0,w
  3622  00C1  1C03               	skipc
  3623  00C2  0008               	return
  3624                           
  3625                           ;CDS_B1.c: 35: {
  3626                           ;CDS_B1.c: 36: CDS->Time=0;
  3627  00C3  0A21               	incf	_CDS,w
  3628  00C4  0084               	movwf	4
  3629  00C5  0180               	clrf	0
  3630                           
  3631                           ;CDS_B1.c: 37: CDS->ADtoGO=1;
  3632  00C6  0821               	movf	_CDS,w
  3633  00C7  0084               	movwf	4
  3634  00C8  1580               	bsf	0,3
  3635                           
  3636                           ;CDS_B1.c: 38: }
  3637                           ;CDS_B1.c: 39: }
  3638                           ;CDS_B1.c: 40: }
  3639  00C9  0008               	return
  3640  00CA                     l2296:	
  3641                           
  3642                           ;CDS_B1.c: 41: else
  3643                           ;CDS_B1.c: 42: {
  3644                           ;CDS_B1.c: 43: CDS->GO=0;
  3645  00CA  0821               	movf	_CDS,w
  3646  00CB  0084               	movwf	4
  3647  00CC  1080               	bcf	0,1
  3648                           
  3649                           ;CDS_B1.c: 44: if(CDS->High)
  3650  00CD  0821               	movf	_CDS,w
  3651  00CE  0084               	movwf	4
  3652  00CF  1E00               	btfss	0,4
  3653  00D0  28F1               	goto	l2308
  3654                           
  3655                           ;CDS_B1.c: 45: {
  3656                           ;CDS_B1.c: 46: if(CDS->SignalAD >= CDS->VRAD)
  3657  00D1  0821               	movf	_CDS,w
  3658  00D2  3E02               	addlw	2
  3659  00D3  0084               	movwf	4
  3660  00D4  0800               	movf	0,w
  3661  00D5  00E5               	movwf	??_CDS_Main
  3662  00D6  0821               	movf	_CDS,w
  3663  00D7  3E03               	addlw	3
  3664  00D8  0084               	movwf	4
  3665  00D9  0800               	movf	0,w
  3666  00DA  00E6               	movwf	??_CDS_Main+1
  3667  00DB  0865               	movf	??_CDS_Main,w
  3668  00DC  0266               	subwf	??_CDS_Main+1,w
  3669  00DD  1C03               	skipc
  3670  00DE  0008               	return
  3671                           
  3672                           ;CDS_B1.c: 47: {
  3673                           ;CDS_B1.c: 48: CDS->High=0;
  3674  00DF  0821               	movf	_CDS,w
  3675  00E0  0084               	movwf	4
  3676  00E1  1200               	bcf	0,4
  3677                           
  3678                           ;CDS_B1.c: 49: RB3=0;
  3679  00E2  1186               	bcf	6,3	;volatile
  3680                           
  3681                           ;CDS_B1.c: 50: setLights_Trigger(1,1);
  3682  00E3  01E3               	clrf	setLights_Trigger@command
  3683  00E4  0AE3               	incf	setLights_Trigger@command,f
  3684  00E5  3001               	movlw	1
  3685  00E6  118A  24B7  118A   	fcall	_setLights_Trigger
  3686                           
  3687                           ;CDS_B1.c: 51: setLights_Switch(1,1);
  3688  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  3689  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  3690  00EB  01E3               	clrf	setLights_Switch@command
  3691  00EC  0AE3               	incf	setLights_Switch@command,f
  3692  00ED  3001               	movlw	1
  3693  00EE  118A  24C7         	fcall	_setLights_Switch
  3694                           
  3695                           ;CDS_B1.c: 52: }
  3696                           ;CDS_B1.c: 53: }
  3697  00F0  0008               	return
  3698  00F1                     l2308:	
  3699                           
  3700                           ;CDS_B1.c: 54: else
  3701                           ;CDS_B1.c: 55: {
  3702                           ;CDS_B1.c: 56: if(CDS->SignalAD <= (CDS->VRAD-100))
  3703  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  3704  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  3705  00F3  0821               	movf	_CDS,w
  3706  00F4  3E02               	addlw	2
  3707  00F5  0084               	movwf	4
  3708  00F6  1383               	bcf	3,7	;select IRP bank0
  3709  00F7  0800               	movf	0,w
  3710  00F8  3E9C               	addlw	156
  3711  00F9  00E5               	movwf	??_CDS_Main
  3712  00FA  30FF               	movlw	255
  3713  00FB  1803               	skipnc
  3714  00FC  3000               	movlw	0
  3715  00FD  00E6               	movwf	??_CDS_Main+1
  3716  00FE  0821               	movf	_CDS,w
  3717  00FF  3E03               	addlw	3
  3718  0100  0084               	movwf	4
  3719  0101  0866               	movf	??_CDS_Main+1,w
  3720  0102  3A80               	xorlw	128
  3721  0103  00E7               	movwf	??_CDS_Main+2
  3722  0104  3080               	movlw	128
  3723  0105  0267               	subwf	??_CDS_Main+2,w
  3724  0106  1D03               	skipz
  3725  0107  290A               	goto	u1945
  3726  0108  0800               	movf	0,w
  3727  0109  0265               	subwf	??_CDS_Main,w
  3728  010A                     u1945:	
  3729  010A  1C03               	skipc
  3730  010B  0008               	return
  3731                           
  3732                           ;CDS_B1.c: 57: {
  3733                           ;CDS_B1.c: 58: CDS->High=1;
  3734  010C  1283               	bcf	3,5	;RP0=0, select bank0
  3735  010D  1303               	bcf	3,6	;RP1=0, select bank0
  3736  010E  0821               	movf	_CDS,w
  3737  010F  0084               	movwf	4
  3738  0110  1383               	bcf	3,7	;select IRP bank0
  3739  0111  1600               	bsf	0,4
  3740                           
  3741                           ;CDS_B1.c: 59: RB3=1;
  3742  0112  1586               	bsf	6,3	;volatile
  3743                           
  3744                           ;CDS_B1.c: 60: setLights_Trigger(1,1);
  3745  0113  01E3               	clrf	setLights_Trigger@command
  3746  0114  0AE3               	incf	setLights_Trigger@command,f
  3747  0115  3001               	movlw	1
  3748  0116  118A  24B7  118A   	fcall	_setLights_Trigger
  3749                           
  3750                           ;CDS_B1.c: 61: setLights_Switch(1,0);
  3751  0119  1283               	bcf	3,5	;RP0=0, select bank0
  3752  011A  1303               	bcf	3,6	;RP1=0, select bank0
  3753  011B  01E3               	clrf	setLights_Switch@command
  3754  011C  3001               	movlw	1
  3755  011D  118A  24C7         	fcall	_setLights_Switch
  3756  011F  0008               	return
  3757  0120                     __end_of_CDS_Main:	
  3758                           
  3759                           	psect	text22
  3760  04B7                     __ptext22:	
  3761 ;; *************** function _setLights_Trigger *****************
  3762 ;; Defined at:
  3763 ;;		line 139 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  lights          1    wreg     unsigned char 
  3766 ;;  command         1    1[BANK0 ] unsigned char 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  lights          1    2[BANK0 ] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;		None               void
  3771 ;; Registers used:
  3772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3778 ;;      Params:         0       1       0       0
  3779 ;;      Locals:         0       1       0       0
  3780 ;;      Temps:          0       0       0       0
  3781 ;;      Totals:         0       2       0       0
  3782 ;;Total ram usage:        2 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    3
  3785 ;; This function calls:
  3786 ;;		_LightsPointSelect
  3787 ;; This function is called by:
  3788 ;;		_CDS_Main
  3789 ;;		_MainT
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _setLights_Trigger
  3795  04B7                     _setLights_Trigger:	
  3796                           
  3797                           ;incstack = 0
  3798                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3799                           ;setLights_Trigger@lights stored from wreg
  3800  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3801  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3802  04B9  00E4               	movwf	setLights_Trigger@lights
  3803                           
  3804                           ;TriacRelay_B1.c: 141: LightsPointSelect(lights);
  3805  04BA  0864               	movf	setLights_Trigger@lights,w
  3806  04BB  118A  251A         	fcall	_LightsPointSelect
  3807                           
  3808                           ;TriacRelay_B1.c: 142: Lights->Trigger=command;
  3809  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  3810  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  3811  04BF  0823               	movf	_Lights,w
  3812  04C0  0084               	movwf	4
  3813  04C1  0863               	movf	setLights_Trigger@command,w
  3814  04C2  1383               	bcf	3,7	;select IRP bank0
  3815  04C3  1280               	bcf	0,5
  3816  04C4  1D03               	skipz
  3817  04C5  1680               	bsf	0,5
  3818  04C6  0008               	return
  3819  04C7                     __end_of_setLights_Trigger:	
  3820                           
  3821                           	psect	text23
  3822  04C7                     __ptext23:	
  3823 ;; *************** function _setLights_Switch *****************
  3824 ;; Defined at:
  3825 ;;		line 144 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  lights          1    wreg     unsigned char 
  3828 ;;  command         1    1[BANK0 ] unsigned char 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  lights          1    2[BANK0 ] unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;		None               void
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3840 ;;      Params:         0       1       0       0
  3841 ;;      Locals:         0       1       0       0
  3842 ;;      Temps:          0       0       0       0
  3843 ;;      Totals:         0       2       0       0
  3844 ;;Total ram usage:        2 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    3
  3847 ;; This function calls:
  3848 ;;		_LightsPointSelect
  3849 ;; This function is called by:
  3850 ;;		_CDS_Main
  3851 ;;		_MainT
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           
  3856                           ;psect for function _setLights_Switch
  3857  04C7                     _setLights_Switch:	
  3858                           
  3859                           ;incstack = 0
  3860                           ; Regs used in _setLights_Switch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3861                           ;setLights_Switch@lights stored from wreg
  3862  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3863  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3864  04C9  00E4               	movwf	setLights_Switch@lights
  3865                           
  3866                           ;TriacRelay_B1.c: 146: LightsPointSelect(lights);
  3867  04CA  0864               	movf	setLights_Switch@lights,w
  3868  04CB  118A  251A         	fcall	_LightsPointSelect
  3869                           
  3870                           ;TriacRelay_B1.c: 147: Lights->Switch=command;
  3871  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  3872  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  3873  04CF  0823               	movf	_Lights,w
  3874  04D0  0084               	movwf	4
  3875  04D1  0863               	movf	setLights_Switch@command,w
  3876  04D2  1383               	bcf	3,7	;select IRP bank0
  3877  04D3  1300               	bcf	0,6
  3878  04D4  1D03               	skipz
  3879  04D5  1700               	bsf	0,6
  3880  04D6  0008               	return
  3881  04D7                     __end_of_setLights_Switch:	
  3882                           
  3883                           	psect	text24
  3884  051A                     __ptext24:	
  3885 ;; *************** function _LightsPointSelect *****************
  3886 ;; Defined at:
  3887 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\TriacRelay_B1.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  lights          1    wreg     unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  lights          1    0[BANK0 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;		None               void
  3894 ;; Registers used:
  3895 ;;		wreg
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3901 ;;      Params:         0       0       0       0
  3902 ;;      Locals:         0       1       0       0
  3903 ;;      Temps:          1       0       0       0
  3904 ;;      Totals:         1       1       0       0
  3905 ;;Total ram usage:        2 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    2
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_setLights_Initialization
  3912 ;;		_setLights_Main
  3913 ;;		_setLights_Trigger
  3914 ;;		_setLights_Switch
  3915 ;;		_setLights
  3916 ;;		_Lights_Control
  3917 ;;		_setLights_Clear
  3918 ;;		_setLights_Open
  3919 ;;		_getLights_Open
  3920 ;;		_setLights_Close
  3921 ;;		_getLights_Close
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _LightsPointSelect
  3927  051A                     _LightsPointSelect:	
  3928                           
  3929                           ;incstack = 0
  3930                           ; Regs used in _LightsPointSelect: [wreg]
  3931                           ;LightsPointSelect@lights stored from wreg
  3932  051A  1283               	bcf	3,5	;RP0=0, select bank0
  3933  051B  1303               	bcf	3,6	;RP1=0, select bank0
  3934  051C  00E2               	movwf	LightsPointSelect@lights
  3935                           
  3936                           ;TriacRelay_B1.c: 12: if(lights == 1)
  3937  051D  0862               	movf	LightsPointSelect@lights,w
  3938  051E  3A01               	xorlw	1
  3939  051F  1D03               	skipz
  3940  0520  0008               	return
  3941                           
  3942                           ;TriacRelay_B1.c: 13: {
  3943                           ;TriacRelay_B1.c: 14: Lights=&Lights1;
  3944  0521  3040               	movlw	_Lights1& (0+255)
  3945  0522  00F6               	movwf	??_LightsPointSelect
  3946  0523  0876               	movf	??_LightsPointSelect,w
  3947  0524  00A3               	movwf	_Lights
  3948  0525  0008               	return
  3949  0526                     __end_of_LightsPointSelect:	
  3950                           
  3951                           	psect	text25
  3952  0459                     __ptext25:	
  3953 ;; *************** function _CDS_Initialization *****************
  3954 ;; Defined at:
  3955 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CDS_B1.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;		None               void
  3962 ;; Registers used:
  3963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3969 ;;      Params:         0       0       0       0
  3970 ;;      Locals:         0       0       0       0
  3971 ;;      Temps:          0       1       0       0
  3972 ;;      Totals:         0       1       0       0
  3973 ;;Total ram usage:        1 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    4
  3976 ;; This function calls:
  3977 ;;		_setLED
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           
  3984                           ;psect for function _CDS_Initialization
  3985  0459                     _CDS_Initialization:	
  3986                           
  3987                           ;CDS_B1.c: 19: CDS=&_CDS1;
  3988                           
  3989                           ;incstack = 0
  3990                           ; Regs used in _CDS_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3991  0459  3051               	movlw	__CDS1& (0+255)
  3992  045A  1283               	bcf	3,5	;RP0=0, select bank0
  3993  045B  1303               	bcf	3,6	;RP1=0, select bank0
  3994  045C  00E5               	movwf	??_CDS_Initialization
  3995  045D  0865               	movf	??_CDS_Initialization,w
  3996  045E  00A1               	movwf	_CDS
  3997                           
  3998                           ;CDS_B1.c: 20: CDS->Enable=1;
  3999  045F  0821               	movf	_CDS,w
  4000  0460  0084               	movwf	4
  4001  0461  1383               	bcf	3,7	;select IRP bank0
  4002  0462  1400               	bsf	0,0
  4003                           
  4004                           ;CDS_B1.c: 21: setLED(1,1);
  4005  0463  01E3               	clrf	setLED@command
  4006  0464  0AE3               	incf	setLED@command,f
  4007  0465  3001               	movlw	1
  4008  0466  118A  21F7  118A   	fcall	_setLED
  4009                           
  4010                           ;CDS_B1.c: 22: setLED(2,0);
  4011  0469  1283               	bcf	3,5	;RP0=0, select bank0
  4012  046A  1303               	bcf	3,6	;RP1=0, select bank0
  4013  046B  01E3               	clrf	setLED@command
  4014  046C  3002               	movlw	2
  4015  046D  118A  21F7         	fcall	_setLED
  4016  046F  0008               	return
  4017  0470                     __end_of_CDS_Initialization:	
  4018                           
  4019                           	psect	text26
  4020  01F7                     __ptext26:	
  4021 ;; *************** function _setLED *****************
  4022 ;; Defined at:
  4023 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  led             1    wreg     unsigned char 
  4026 ;;  command         1    1[BANK0 ] unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  led             1    2[BANK0 ] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4038 ;;      Params:         0       1       0       0
  4039 ;;      Locals:         0       1       0       0
  4040 ;;      Temps:          0       0       0       0
  4041 ;;      Totals:         0       2       0       0
  4042 ;;Total ram usage:        2 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    3
  4045 ;; This function calls:
  4046 ;;		_LedPointSelect
  4047 ;; This function is called by:
  4048 ;;		_CDS_Initialization
  4049 ;;		_setLED_Initialization
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           
  4054                           ;psect for function _setLED
  4055  01F7                     _setLED:	
  4056                           
  4057                           ;incstack = 0
  4058                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4059                           ;setLED@led stored from wreg
  4060  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  4061  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  4062  01F9  00E4               	movwf	setLED@led
  4063                           
  4064                           ;LED_B1.c: 76: LedPointSelect(led);
  4065  01FA  0864               	movf	setLED@led,w
  4066  01FB  118A  243B  118A   	fcall	_LedPointSelect
  4067                           
  4068                           ;LED_B1.c: 77: if(command == 0)
  4069  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  4070  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0200  08E3               	movf	setLED@command,f
  4072  0201  1D03               	skipz
  4073  0202  2A15               	goto	l2094
  4074                           
  4075                           ;LED_B1.c: 78: {
  4076                           ;LED_B1.c: 80: if(led == 1)
  4077  0203  0864               	movf	setLED@led,w
  4078  0204  3A01               	xorlw	1
  4079  0205  1D03               	skipz
  4080  0206  2A09               	goto	l2086
  4081                           
  4082                           ;LED_B1.c: 81: {
  4083                           ;LED_B1.c: 85: RB4=1;
  4084  0207  1606               	bsf	6,4	;volatile
  4085                           
  4086                           ;LED_B1.c: 87: }
  4087  0208  0008               	return
  4088  0209                     l2086:	
  4089                           
  4090                           ;LED_B1.c: 90: else if(led == 2)
  4091  0209  0864               	movf	setLED@led,w
  4092  020A  3A02               	xorlw	2
  4093  020B  1D03               	skipz
  4094  020C  2A0F               	goto	l2090
  4095                           
  4096                           ;LED_B1.c: 91: {
  4097                           ;LED_B1.c: 95: RB5=1;
  4098  020D  1686               	bsf	6,5	;volatile
  4099                           
  4100                           ;LED_B1.c: 97: }
  4101  020E  0008               	return
  4102  020F                     l2090:	
  4103                           
  4104                           ;LED_B1.c: 110: else if(led == 99)
  4105  020F  0864               	movf	setLED@led,w
  4106  0210  3A63               	xorlw	99
  4107  0211  1D03               	skipz
  4108  0212  0008               	return
  4109                           
  4110                           ;LED_B1.c: 111: {
  4111                           ;LED_B1.c: 115: RB3=1;
  4112  0213  1586               	bsf	6,3	;volatile
  4113                           
  4114                           ;LED_B1.c: 117: }
  4115                           ;LED_B1.c: 119: }
  4116  0214  0008               	return
  4117  0215                     l2094:	
  4118                           
  4119                           ;LED_B1.c: 120: else if(command == 1)
  4120  0215  0863               	movf	setLED@command,w
  4121  0216  3A01               	xorlw	1
  4122  0217  1D03               	skipz
  4123  0218  2A2B               	goto	l2108
  4124                           
  4125                           ;LED_B1.c: 121: {
  4126                           ;LED_B1.c: 123: if(led == 1)
  4127  0219  0864               	movf	setLED@led,w
  4128  021A  3A01               	xorlw	1
  4129  021B  1D03               	skipz
  4130  021C  2A1F               	goto	l2100
  4131                           
  4132                           ;LED_B1.c: 124: {
  4133                           ;LED_B1.c: 128: RB4=0;
  4134  021D  1206               	bcf	6,4	;volatile
  4135                           
  4136                           ;LED_B1.c: 130: }
  4137  021E  0008               	return
  4138  021F                     l2100:	
  4139                           
  4140                           ;LED_B1.c: 133: else if(led == 2)
  4141  021F  0864               	movf	setLED@led,w
  4142  0220  3A02               	xorlw	2
  4143  0221  1D03               	skipz
  4144  0222  2A25               	goto	l2104
  4145                           
  4146                           ;LED_B1.c: 134: {
  4147                           ;LED_B1.c: 138: RB5=0;
  4148  0223  1286               	bcf	6,5	;volatile
  4149                           
  4150                           ;LED_B1.c: 140: }
  4151  0224  0008               	return
  4152  0225                     l2104:	
  4153                           
  4154                           ;LED_B1.c: 153: else if(led == 99)
  4155  0225  0864               	movf	setLED@led,w
  4156  0226  3A63               	xorlw	99
  4157  0227  1D03               	skipz
  4158  0228  0008               	return
  4159                           
  4160                           ;LED_B1.c: 154: {
  4161                           ;LED_B1.c: 158: RB3=0;
  4162  0229  1186               	bcf	6,3	;volatile
  4163                           
  4164                           ;LED_B1.c: 160: }
  4165                           ;LED_B1.c: 162: }
  4166  022A  0008               	return
  4167  022B                     l2108:	
  4168                           
  4169                           ;LED_B1.c: 163: else if(command == 10)
  4170  022B  0863               	movf	setLED@command,w
  4171  022C  3A0A               	xorlw	10
  4172  022D  1D03               	skipz
  4173  022E  2A4A               	goto	l2126
  4174                           
  4175                           ;LED_B1.c: 164: {
  4176                           ;LED_B1.c: 165: LED->GO=0;
  4177  022F  0822               	movf	_LED,w
  4178  0230  0084               	movwf	4
  4179  0231  1383               	bcf	3,7	;select IRP bank0
  4180  0232  1080               	bcf	0,1
  4181                           
  4182                           ;LED_B1.c: 166: LED->Time=0;
  4183  0233  0A22               	incf	_LED,w
  4184  0234  0084               	movwf	4
  4185  0235  0180               	clrf	0
  4186  0236  0A84               	incf	4,f
  4187  0237  0180               	clrf	0
  4188                           
  4189                           ;LED_B1.c: 168: if(led == 1)
  4190  0238  0864               	movf	setLED@led,w
  4191  0239  3A01               	xorlw	1
  4192  023A  1D03               	skipz
  4193  023B  2A3E               	goto	l2118
  4194                           
  4195                           ;LED_B1.c: 169: {
  4196                           ;LED_B1.c: 173: RB4=1;
  4197  023C  1606               	bsf	6,4	;volatile
  4198                           
  4199                           ;LED_B1.c: 175: }
  4200  023D  0008               	return
  4201  023E                     l2118:	
  4202                           
  4203                           ;LED_B1.c: 178: else if(led == 2)
  4204  023E  0864               	movf	setLED@led,w
  4205  023F  3A02               	xorlw	2
  4206  0240  1D03               	skipz
  4207  0241  2A44               	goto	l2122
  4208                           
  4209                           ;LED_B1.c: 179: {
  4210                           ;LED_B1.c: 183: RB5=1;
  4211  0242  1686               	bsf	6,5	;volatile
  4212                           
  4213                           ;LED_B1.c: 185: }
  4214  0243  0008               	return
  4215  0244                     l2122:	
  4216                           
  4217                           ;LED_B1.c: 198: else if(led == 99)
  4218  0244  0864               	movf	setLED@led,w
  4219  0245  3A63               	xorlw	99
  4220  0246  1D03               	skipz
  4221  0247  0008               	return
  4222                           
  4223                           ;LED_B1.c: 199: {
  4224                           ;LED_B1.c: 203: RB3=1;
  4225  0248  1586               	bsf	6,3	;volatile
  4226                           
  4227                           ;LED_B1.c: 205: }
  4228                           ;LED_B1.c: 207: }
  4229  0249  0008               	return
  4230  024A                     l2126:	
  4231                           
  4232                           ;LED_B1.c: 208: else if(command == 11)
  4233  024A  0863               	movf	setLED@command,w
  4234  024B  3A0B               	xorlw	11
  4235  024C  1D03               	skipz
  4236  024D  0008               	return
  4237                           
  4238                           ;LED_B1.c: 209: {
  4239                           ;LED_B1.c: 210: LED->GO=1;
  4240  024E  0822               	movf	_LED,w
  4241  024F  0084               	movwf	4
  4242  0250  1383               	bcf	3,7	;select IRP bank0
  4243  0251  1480               	bsf	0,1
  4244  0252  0008               	return
  4245  0253                     __end_of_setLED:	
  4246                           
  4247                           	psect	text27
  4248  043B                     __ptext27:	
  4249 ;; *************** function _LedPointSelect *****************
  4250 ;; Defined at:
  4251 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  led             1    wreg     unsigned char 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  led             1    0[BANK0 ] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;		None               void
  4258 ;; Registers used:
  4259 ;;		wreg
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4265 ;;      Params:         0       0       0       0
  4266 ;;      Locals:         0       1       0       0
  4267 ;;      Temps:          1       0       0       0
  4268 ;;      Totals:         1       1       0       0
  4269 ;;Total ram usage:        2 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    2
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_setLED_Initialization
  4276 ;;		_setLED
  4277 ;;		_setLED_Main
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function _LedPointSelect
  4283  043B                     _LedPointSelect:	
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _LedPointSelect: [wreg]
  4287                           ;LedPointSelect@led stored from wreg
  4288  043B  1283               	bcf	3,5	;RP0=0, select bank0
  4289  043C  1303               	bcf	3,6	;RP1=0, select bank0
  4290  043D  00E2               	movwf	LedPointSelect@led
  4291                           
  4292                           ;LED_B1.c: 10: if(led == 1)
  4293  043E  0862               	movf	LedPointSelect@led,w
  4294  043F  3A01               	xorlw	1
  4295  0440  1D03               	skipz
  4296  0441  2C47               	goto	l2066
  4297                           
  4298                           ;LED_B1.c: 11: {
  4299                           ;LED_B1.c: 12: LED=&VarLED1;
  4300  0442  305A               	movlw	_VarLED1& (0+255)
  4301  0443  00F6               	movwf	??_LedPointSelect
  4302  0444  0876               	movf	??_LedPointSelect,w
  4303  0445  00A2               	movwf	_LED
  4304                           
  4305                           ;LED_B1.c: 13: }
  4306  0446  0008               	return
  4307  0447                     l2066:	
  4308                           
  4309                           ;LED_B1.c: 16: else if(led == 2)
  4310  0447  0862               	movf	LedPointSelect@led,w
  4311  0448  3A02               	xorlw	2
  4312  0449  1D03               	skipz
  4313  044A  2C50               	goto	l2070
  4314                           
  4315                           ;LED_B1.c: 17: {
  4316                           ;LED_B1.c: 18: LED=&VarLED2;
  4317  044B  305E               	movlw	_VarLED2& (0+255)
  4318  044C  00F6               	movwf	??_LedPointSelect
  4319  044D  0876               	movf	??_LedPointSelect,w
  4320  044E  00A2               	movwf	_LED
  4321                           
  4322                           ;LED_B1.c: 19: }
  4323  044F  0008               	return
  4324  0450                     l2070:	
  4325                           
  4326                           ;LED_B1.c: 28: else if(led == 99)
  4327  0450  0862               	movf	LedPointSelect@led,w
  4328  0451  3A63               	xorlw	99
  4329  0452  1D03               	skipz
  4330  0453  0008               	return
  4331                           
  4332                           ;LED_B1.c: 29: {
  4333                           ;LED_B1.c: 30: LED=&VarErrLED;
  4334  0454  3056               	movlw	_VarErrLED& (0+255)
  4335  0455  00F6               	movwf	??_LedPointSelect
  4336  0456  0876               	movf	??_LedPointSelect,w
  4337  0457  00A2               	movwf	_LED
  4338  0458  0008               	return
  4339  0459                     __end_of_LedPointSelect:	
  4340                           
  4341                           	psect	text28
  4342  001C                     __ptext28:	
  4343 ;; *************** function _Buzzer_Main *****************
  4344 ;; Defined at:
  4345 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;		None               void
  4352 ;; Registers used:
  4353 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4359 ;;      Params:         0       0       0       0
  4360 ;;      Locals:         0       0       0       0
  4361 ;;      Temps:          0       4       0       0
  4362 ;;      Totals:         0       4       0       0
  4363 ;;Total ram usage:        4 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    2
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           
  4374                           ;psect for function _Buzzer_Main
  4375  001C                     _Buzzer_Main:	
  4376                           
  4377                           ;Buzzer_B1.c: 55: Buz->Switch=(RB1)?1:0;
  4378                           
  4379                           ;incstack = 0
  4380                           ; Regs used in _Buzzer_Main: [wreg-fsr0h+status,2+status,0]
  4381  001C  1283               	bcf	3,5	;RP0=0, select bank0
  4382  001D  1303               	bcf	3,6	;RP1=0, select bank0
  4383  001E  0820               	movf	_Buz,w
  4384  001F  0084               	movwf	4
  4385  0020  1383               	bcf	3,7	;select IRP bank0
  4386  0021  1280               	bcf	0,5
  4387  0022  1886               	btfsc	6,1	;volatile
  4388  0023  1680               	bsf	0,5
  4389                           
  4390                           ;Buzzer_B1.c: 57: if(Buz->GO)
  4391  0024  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0025  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0026  0820               	movf	_Buz,w
  4394  0027  0084               	movwf	4
  4395  0028  1383               	bcf	3,7	;select IRP bank0
  4396  0029  1C80               	btfss	0,1
  4397  002A  0008               	return
  4398                           
  4399                           ;Buzzer_B1.c: 58: {
  4400                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
  4401  002B  0820               	movf	_Buz,w
  4402  002C  3E06               	addlw	6
  4403  002D  0084               	movwf	4
  4404  002E  0800               	movf	0,w
  4405  002F  00E2               	movwf	??_Buzzer_Main
  4406  0030  0A84               	incf	4,f
  4407  0031  0800               	movf	0,w
  4408  0032  00E3               	movwf	??_Buzzer_Main+1
  4409  0033  0A20               	incf	_Buz,w
  4410  0034  0084               	movwf	4
  4411  0035  0800               	movf	0,w
  4412  0036  00E4               	movwf	??_Buzzer_Main+2
  4413  0037  0A84               	incf	4,f
  4414  0038  0800               	movf	0,w
  4415  0039  00E5               	movwf	??_Buzzer_Main+3
  4416  003A  0863               	movf	??_Buzzer_Main+1,w
  4417  003B  0265               	subwf	??_Buzzer_Main+3,w
  4418  003C  1D03               	skipz
  4419  003D  2840               	goto	u1195
  4420  003E  0862               	movf	??_Buzzer_Main,w
  4421  003F  0264               	subwf	??_Buzzer_Main+2,w
  4422  0040                     u1195:	
  4423  0040  1C03               	skipc
  4424  0041  0008               	return
  4425                           
  4426                           ;Buzzer_B1.c: 61: {
  4427                           ;Buzzer_B1.c: 62: Buz->Time=0;
  4428  0042  0A20               	incf	_Buz,w
  4429  0043  0084               	movwf	4
  4430  0044  0180               	clrf	0
  4431  0045  0A84               	incf	4,f
  4432  0046  0180               	clrf	0
  4433                           
  4434                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
  4435  0047  0820               	movf	_Buz,w
  4436  0048  0084               	movwf	4
  4437  0049  1A80               	btfsc	0,5
  4438  004A  289E               	goto	l1878
  4439                           
  4440                           ;Buzzer_B1.c: 64: {
  4441                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
  4442  004B  0820               	movf	_Buz,w
  4443  004C  3E03               	addlw	3
  4444  004D  0084               	movwf	4
  4445  004E  0880               	movf	0,f
  4446  004F  1D03               	skipz
  4447  0050  2899               	goto	l1874
  4448                           
  4449                           ;Buzzer_B1.c: 66: {
  4450                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
  4451  0051  0820               	movf	_Buz,w
  4452  0052  0084               	movwf	4
  4453  0053  1D80               	btfss	0,3
  4454  0054  2873               	goto	l1866
  4455                           
  4456                           ;Buzzer_B1.c: 68: {
  4457                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
  4458  0055  0820               	movf	_Buz,w
  4459  0056  0084               	movwf	4
  4460  0057  1180               	bcf	0,3
  4461                           
  4462                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
  4463  0058  0820               	movf	_Buz,w
  4464  0059  3E04               	addlw	4
  4465  005A  0084               	movwf	4
  4466  005B  0800               	movf	0,w
  4467  005C  00E2               	movwf	??_Buzzer_Main
  4468  005D  0820               	movf	_Buz,w
  4469  005E  3E03               	addlw	3
  4470  005F  0084               	movwf	4
  4471  0060  0862               	movf	??_Buzzer_Main,w
  4472  0061  0080               	movwf	0
  4473                           
  4474                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
  4475  0062  0820               	movf	_Buz,w
  4476  0063  3E08               	addlw	8
  4477  0064  0084               	movwf	4
  4478  0065  0800               	movf	0,w
  4479  0066  00E2               	movwf	??_Buzzer_Main
  4480  0067  0A84               	incf	4,f
  4481  0068  0800               	movf	0,w
  4482  0069  00E3               	movwf	??_Buzzer_Main+1
  4483  006A  0820               	movf	_Buz,w
  4484  006B  3E06               	addlw	6
  4485  006C  0084               	movwf	4
  4486  006D  0862               	movf	??_Buzzer_Main,w
  4487  006E  0080               	movwf	0
  4488  006F  0A84               	incf	4,f
  4489  0070  0863               	movf	??_Buzzer_Main+1,w
  4490  0071  0080               	movwf	0
  4491                           
  4492                           ;Buzzer_B1.c: 72: }
  4493  0072  0008               	return
  4494  0073                     l1866:	
  4495                           
  4496                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
  4497  0073  0820               	movf	_Buz,w
  4498  0074  0084               	movwf	4
  4499  0075  1E00               	btfss	0,4
  4500  0076  2895               	goto	l1872
  4501                           
  4502                           ;Buzzer_B1.c: 74: {
  4503                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
  4504  0077  0820               	movf	_Buz,w
  4505  0078  0084               	movwf	4
  4506  0079  1200               	bcf	0,4
  4507                           
  4508                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
  4509  007A  0820               	movf	_Buz,w
  4510  007B  3E05               	addlw	5
  4511  007C  0084               	movwf	4
  4512  007D  0800               	movf	0,w
  4513  007E  00E2               	movwf	??_Buzzer_Main
  4514  007F  0820               	movf	_Buz,w
  4515  0080  3E03               	addlw	3
  4516  0081  0084               	movwf	4
  4517  0082  0862               	movf	??_Buzzer_Main,w
  4518  0083  0080               	movwf	0
  4519                           
  4520                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
  4521  0084  0820               	movf	_Buz,w
  4522  0085  3E0A               	addlw	10
  4523  0086  0084               	movwf	4
  4524  0087  0800               	movf	0,w
  4525  0088  00E2               	movwf	??_Buzzer_Main
  4526  0089  0A84               	incf	4,f
  4527  008A  0800               	movf	0,w
  4528  008B  00E3               	movwf	??_Buzzer_Main+1
  4529  008C  0820               	movf	_Buz,w
  4530  008D  3E06               	addlw	6
  4531  008E  0084               	movwf	4
  4532  008F  0862               	movf	??_Buzzer_Main,w
  4533  0090  0080               	movwf	0
  4534  0091  0A84               	incf	4,f
  4535  0092  0863               	movf	??_Buzzer_Main+1,w
  4536  0093  0080               	movwf	0
  4537                           
  4538                           ;Buzzer_B1.c: 78: }
  4539  0094  0008               	return
  4540  0095                     l1872:	
  4541                           
  4542                           ;Buzzer_B1.c: 79: else
  4543                           ;Buzzer_B1.c: 80: {
  4544                           ;Buzzer_B1.c: 81: Buz->GO=0;
  4545  0095  0820               	movf	_Buz,w
  4546  0096  0084               	movwf	4
  4547  0097  1080               	bcf	0,1
  4548                           
  4549                           ;Buzzer_B1.c: 82: }
  4550                           ;Buzzer_B1.c: 83: }
  4551  0098  0008               	return
  4552  0099                     l1874:	
  4553                           
  4554                           ;Buzzer_B1.c: 84: else
  4555                           ;Buzzer_B1.c: 85: {
  4556                           ;Buzzer_B1.c: 86: Buz->Switch=1;
  4557  0099  0820               	movf	_Buz,w
  4558  009A  0084               	movwf	4
  4559  009B  1680               	bsf	0,5
  4560                           
  4561                           ;Buzzer_B1.c: 88: RB1=1;
  4562  009C  1486               	bsf	6,1	;volatile
  4563                           
  4564                           ;Buzzer_B1.c: 89: }
  4565                           ;Buzzer_B1.c: 90: }
  4566  009D  0008               	return
  4567  009E                     l1878:	
  4568                           
  4569                           ;Buzzer_B1.c: 91: else
  4570                           ;Buzzer_B1.c: 92: {
  4571                           ;Buzzer_B1.c: 93: Buz->Switch=0;
  4572  009E  0820               	movf	_Buz,w
  4573  009F  0084               	movwf	4
  4574  00A0  1280               	bcf	0,5
  4575                           
  4576                           ;Buzzer_B1.c: 95: RB1=0;
  4577  00A1  1086               	bcf	6,1	;volatile
  4578                           
  4579                           ;Buzzer_B1.c: 97: Buz->Count--;
  4580  00A2  0820               	movf	_Buz,w
  4581  00A3  3E03               	addlw	3
  4582  00A4  0084               	movwf	4
  4583  00A5  3001               	movlw	1
  4584  00A6  0280               	subwf	0,f
  4585  00A7  0008               	return
  4586  00A8                     __end_of_Buzzer_Main:	
  4587                           
  4588                           	psect	text29
  4589  0526                     __ptext29:	
  4590 ;; *************** function _Buzzer_Initialization *****************
  4591 ;; Defined at:
  4592 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;		None
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;		None               void
  4599 ;; Registers used:
  4600 ;;		wreg, fsr0l, fsr0h
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4606 ;;      Params:         0       0       0       0
  4607 ;;      Locals:         0       0       0       0
  4608 ;;      Temps:          1       0       0       0
  4609 ;;      Totals:         1       0       0       0
  4610 ;;Total ram usage:        1 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    2
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_main
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function _Buzzer_Initialization
  4622  0526                     _Buzzer_Initialization:	
  4623                           
  4624                           ;Buzzer_B1.c: 12: Buz=&Buz1;
  4625                           
  4626                           ;incstack = 0
  4627                           ; Regs used in _Buzzer_Initialization: [wregfsr0]
  4628  0526  3034               	movlw	_Buz1& (0+255)
  4629  0527  00F6               	movwf	??_Buzzer_Initialization
  4630  0528  0876               	movf	??_Buzzer_Initialization,w
  4631  0529  1283               	bcf	3,5	;RP0=0, select bank0
  4632  052A  1303               	bcf	3,6	;RP1=0, select bank0
  4633  052B  00A0               	movwf	_Buz
  4634                           
  4635                           ;Buzzer_B1.c: 13: Buz->Enable=1;
  4636  052C  0820               	movf	_Buz,w
  4637  052D  0084               	movwf	4
  4638  052E  1383               	bcf	3,7	;select IRP bank0
  4639  052F  1400               	bsf	0,0
  4640  0530  0008               	return
  4641  0531                     __end_of_Buzzer_Initialization:	
  4642                           
  4643                           	psect	text30
  4644  04D7                     __ptext30:	
  4645 ;; *************** function _ISR *****************
  4646 ;; Defined at:
  4647 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;		None               void
  4654 ;; Registers used:
  4655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4661 ;;      Params:         0       0       0       0
  4662 ;;      Locals:         0       0       0       0
  4663 ;;      Temps:          4       0       0       0
  4664 ;;      Totals:         4       0       0       0
  4665 ;;Total ram usage:        4 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    1
  4668 ;; This function calls:
  4669 ;;		_TMR0_ISR
  4670 ;; This function is called by:
  4671 ;;		Interrupt level 1
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _ISR
  4677  04D7                     _ISR:	
  4678                           
  4679                           ;MCU_B1.c: 99: ;;
  4680                           ;MCU_B1.c: 101: TMR0_ISR();
  4681  04D7  118A  23B6  118A   	fcall	_TMR0_ISR
  4682  04DA  0875               	movf	??_ISR+3,w
  4683  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  4684  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  4685  04DD  00FF               	movwf	127
  4686  04DE  0874               	movf	??_ISR+2,w
  4687  04DF  008A               	movwf	10
  4688  04E0  0873               	movf	??_ISR+1,w
  4689  04E1  0084               	movwf	4
  4690  04E2  0E72               	swapf	??_ISR^(0+-128),w
  4691  04E3  0083               	movwf	3
  4692  04E4  0EFE               	swapf	126,f
  4693  04E5  0E7E               	swapf	126,w
  4694  04E6  0009               	retfie
  4695  04E7                     __end_of_ISR:	
  4696                           
  4697                           	psect	intentry
  4698  0004                     __pintentry:	
  4699                           ;incstack = 0
  4700                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4701                           
  4702  0004                     interrupt_function:	
  4703  007E                     saved_w	set	btemp
  4704  0004  00FE               	movwf	btemp
  4705  0005  0E03               	swapf	3,w
  4706  0006  00F2               	movwf	??_ISR
  4707  0007  0804               	movf	4,w
  4708  0008  00F3               	movwf	??_ISR+1
  4709  0009  080A               	movf	10,w
  4710  000A  00F4               	movwf	??_ISR+2
  4711  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4712  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4713  000D  087F               	movf	btemp+1,w
  4714  000E  00F5               	movwf	??_ISR+3
  4715  000F  118A  2CD7         	ljmp	_ISR
  4716                           
  4717                           	psect	text31
  4718  03B6                     __ptext31:	
  4719 ;; *************** function _TMR0_ISR *****************
  4720 ;; Defined at:
  4721 ;;		line 123 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;		None               void
  4728 ;; Registers used:
  4729 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4735 ;;      Params:         0       0       0       0
  4736 ;;      Locals:         0       0       0       0
  4737 ;;      Temps:          2       0       0       0
  4738 ;;      Totals:         2       0       0       0
  4739 ;;Total ram usage:        2 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_ISR
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function _TMR0_ISR
  4750  03B6                     _TMR0_ISR:	
  4751                           
  4752                           ;MCU_B1.c: 125: if(TMR0IE && TMR0IF)
  4753                           
  4754                           ;incstack = 0
  4755                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0]
  4756  03B6  1E8B               	btfss	11,5	;volatile
  4757  03B7  0008               	return
  4758  03B8  1D0B               	btfss	11,2	;volatile
  4759  03B9  0008               	return
  4760                           
  4761                           ;MCU_B1.c: 126: {
  4762                           ;MCU_B1.c: 127: TMR0=(256-90);
  4763  03BA  30A6               	movlw	166
  4764  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  4765  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  4766  03BD  0081               	movwf	1	;volatile
  4767                           
  4768                           ;MCU_B1.c: 128: TMR0IF=0;
  4769  03BE  110B               	bcf	11,2	;volatile
  4770                           
  4771                           ;MCU_B1.c: 146: Timer0->Count++;
  4772  03BF  0A77               	incf	_Timer0,w
  4773  03C0  0084               	movwf	4
  4774  03C1  3001               	movlw	1
  4775  03C2  1383               	bcf	3,7	;select IRP bank0
  4776  03C3  0780               	addwf	0,f
  4777  03C4  0A84               	incf	4,f
  4778  03C5  1803               	skipnc
  4779  03C6  0A80               	incf	0,f
  4780                           
  4781                           ;MCU_B1.c: 147: if(Timer0->Count == 200)
  4782  03C7  0A77               	incf	_Timer0,w
  4783  03C8  0084               	movwf	4
  4784  03C9  0800               	movf	0,w
  4785  03CA  00F0               	movwf	??_TMR0_ISR
  4786  03CB  0A84               	incf	4,f
  4787  03CC  0800               	movf	0,w
  4788  03CD  00F1               	movwf	??_TMR0_ISR+1
  4789  03CE  30C8               	movlw	200
  4790  03CF  0670               	xorwf	??_TMR0_ISR,w
  4791  03D0  0471               	iorwf	??_TMR0_ISR+1,w
  4792  03D1  1D03               	skipz
  4793  03D2  2BDB               	goto	i1l2008
  4794                           
  4795                           ;MCU_B1.c: 148: {
  4796                           ;MCU_B1.c: 149: Timer0->Count=0;
  4797  03D3  0A77               	incf	_Timer0,w
  4798  03D4  0084               	movwf	4
  4799  03D5  0180               	clrf	0
  4800  03D6  0A84               	incf	4,f
  4801  03D7  0180               	clrf	0
  4802                           
  4803                           ;MCU_B1.c: 150: TMain->T0_Timerout=1;
  4804  03D8  086F               	movf	_TMain,w
  4805  03D9  0084               	movwf	4
  4806  03DA  1480               	bsf	0,1
  4807  03DB                     i1l2008:	
  4808                           
  4809                           ;MCU_B1.c: 151: }
  4810                           ;MCU_B1.c: 154: if(Buz->GO)
  4811  03DB  0820               	movf	_Buz,w
  4812  03DC  0084               	movwf	4
  4813  03DD  1C80               	btfss	0,1
  4814  03DE  0008               	return
  4815                           
  4816                           ;MCU_B1.c: 155: {
  4817                           ;MCU_B1.c: 156: Buz->Time++;
  4818  03DF  0A20               	incf	_Buz,w
  4819  03E0  0084               	movwf	4
  4820  03E1  3001               	movlw	1
  4821  03E2  0780               	addwf	0,f
  4822  03E3  0A84               	incf	4,f
  4823  03E4  1803               	skipnc
  4824  03E5  0A80               	incf	0,f
  4825  03E6  0008               	return
  4826  03E7                     __end_of_TMR0_ISR:	
  4827  007E                     btemp	set	126	;btemp
  4828  007E                     wtemp	set	126
  4829  007E                     wtemp0	set	126
  4830  0080                     wtemp1	set	128
  4831  0082                     wtemp2	set	130
  4832  0084                     wtemp3	set	132
  4833  0086                     wtemp4	set	134
  4834  0088                     wtemp5	set	136
  4835  007F                     wtemp6	set	127
  4836  007E                     ttemp	set	126
  4837  007E                     ttemp0	set	126
  4838  0081                     ttemp1	set	129
  4839  0084                     ttemp2	set	132
  4840  0087                     ttemp3	set	135
  4841  007F                     ttemp4	set	127
  4842  007E                     ltemp	set	126
  4843  007E                     ltemp0	set	126
  4844  0082                     ltemp1	set	130
  4845  0086                     ltemp2	set	134
  4846  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         66
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     13      80
    BANK1            80      0       0
    BANK2            16      0       0

Pointer List with Targets:

    Timer0	PTR struct Timer0 size(1) Largest target is 7
		 -> NULL(NULL[0]), VarTimer0(BANK0[7]), 

    Lights	PTR struct Lights size(1) Largest target is 10
		 -> NULL(NULL[0]), Lights1(BANK0[10]), 

    TMain	PTR struct TMain size(1) Largest target is 16
		 -> NULL(NULL[0]), VarTMain(BANK0[16]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    CDS	PTR struct CDS size(1) Largest target is 5
		 -> NULL(NULL[0]), _CDS1(BANK0[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK0[12]), 


Critical Paths under _main in COMMON

    _main->_Buzzer_Initialization
    _main->_MainT_Initialization
    _getCDS_AD->_getAD
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _setLights_Main->_LightsPointSelect
    _setLights->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _setLights_Initialization->_LightsPointSelect
    _setLED_Main->_LedPointSelect
    _setLED_Initialization->_LedPointSelect
    _setLights_Trigger->_LightsPointSelect
    _setLights_Switch->_LightsPointSelect
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR

Critical Paths under _main in BANK0

    _main->_MainT
    _getCDS_AD->_getAD
    _MainT->_setBuz
    _setBuz->___wmul
    _Lights_Main->_setLights_Main
    _setLights_Main->_setLights
    _setLights->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _CDS_Main->_setLights_Switch
    _CDS_Main->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _setLights_Switch->_LightsPointSelect
    _CDS_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4798
                                             11 BANK0      2     2      0
              _Buzzer_Initialization
                        _Buzzer_Main
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                              _MainT
               _MainT_Initialization
                 _Mcu_Initialization
                          _getCDS_AD
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            7     5      2     390
                                              1 BANK0      6     4      2
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     192
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                2     2      0    1257
                                              9 BANK0      2     2      0
                             _setBuz
                   _setLights_Switch
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2     551
                                              6 COMMON     1     1      0
                                              6 BANK0      3     1      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     567
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       2     2      0     443
                                              4 BANK0      2     2      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     285
                                              1 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0     124
                                              1 BANK0      3     3      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              1 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              1 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     877
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     877
                                              3 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0     706
                                              3 BANK0      3     3      0
                   _setLights_Switch
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (2) _setLights_Trigger                                    2     1      1     353
                                              1 BANK0      2     1      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLights_Switch                                     2     1      1     353
                                              1 BANK0      2     1      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _LightsPointSelect                                    2     2      0      31
                                              6 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   1     1      0     722
                                              3 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     722
                                              1 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              6 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              2 COMMON     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CDS_Initialization
     _setLED
       _LedPointSelect
   _CDS_Main
     _setLights_Switch
       _LightsPointSelect
     _setLights_Trigger
       _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
   _MainT
     _setBuz
       ___wmul
     _setLights_Switch
       _LightsPointSelect
     _setLights_Trigger
       _LightsPointSelect
   _MainT_Initialization
   _Mcu_Initialization
     _ADC_Set
     _IO_Set
     _TMR0_Set
   _getCDS_AD
     _getAD

 _ISR (ROOT)
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      58       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      58      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Sep 24 15:22:00 2014

                               fsr 0004                ___wmul@multiplicand 0064  
                              l772 04A3                                _CDS 0021  
                              l779 0422                                _GIE 005F  
                              _RB1 0031                                _RB2 0032  
                              _RA4 002C                                _LED 0022  
                              _RB3 0033                                _RB4 0034  
                              _RB5 0035                                _ISR 04D7  
                              _Buz 0020                                fsr0 0004  
                              indf 0000              _Buzzer_Initialization 0526  
                  __end_of_ADC_Set 0548          __end_of_LightsPointSelect 0526  
          __size_of_Lights_Control 0058                               ?_ISR 0070  
                             l2100 021F                               l2104 0225  
                             l2122 0244                               l2108 022B  
                             l2220 03AF                               l2070 0450  
                             l2118 023E                               l2126 024A  
                             l2216 03A8                               l2144 0362  
                             l2152 041A                               l2066 0447  
                             l2090 020F                               l2308 00F1  
                             l2244 0409                               l2172 01C9  
                             l2086 0209                               l2094 0215  
                             l2350 0151                               l2264 028F  
                             l2176 01E0                               l2364 0181  
                             l2296 00CA                               l2384 02BE  
                             l2388 02D4                               l1872 0095  
                             l1866 0073                               l1874 0099  
                             l1878 009E                  ?_setLights_Switch 0063  
                             u1195 0040                               u1645 0423  
                             u1655 042A                               u1840 028B  
                             u1945 010A                               _TMR0 0001  
                             _Buz1 0034                 ??_setLights_Switch 0077  
                             _main 02AB                               btemp 007E  
                             ltemp 007E                               start 0011  
                             ttemp 007E                               wtemp 007E  
                 __end_of_CDS_Main 0120                              ??_ISR 0072  
                _setLights_Trigger 04B7                      ??_Lights_Main 0077  
                 __end_of_LED_Main 050E                 ?_setLights_Trigger 0063  
                            ?_main 0070                              _ADRES 001E  
                    __CFG_WDTE$OFF 0000                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                     ?_setLED_Main 0070                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            __CDS1 0051                              _TMain 006F  
                            _MainT 0120                ??_setLights_Trigger 0077  
                 __end_of_TMR0_ISR 03E7                   __end_of_TMR0_Set 04F5  
                            _getAD 0497                      ??_Buzzer_Main 0062  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012      __end_of_setLED_Initialization 0497  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F             ??_MainT_Initialization 0076  
                   _setLights_Main 03E7                    __initialization 0013  
        __end_of_setLights_Trigger 04C7                       __end_of_main 02F2  
                        ??_ADC_Set 0076                             ??_main 006D  
           ?_Buzzer_Initialization 0070                __end_of_Lights_Main 0541  
       __size_of_LightsPointSelect 000C                             ?_MainT 0070  
                           ?_getAD 0076                             _ADCON0 001F  
                           _ADCON1 009F                             _ANSELA 0185  
                           _ANSELB 0186                             i1l2008 03DB  
                           _FVRCON 009D                             _OSCCON 0090  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _IO_Set 0470                   setLights@command 0063  
           __end_of_setLights_Main 0416         __end_of_Mcu_Initialization 0502  
              __end_of_Buzzer_Main 00A8                             _Lights 0023  
                           _Timer0 0077        __size_of_CDS_Initialization 0017  
          ??_Lights_Initialization 0077                             ___wmul 0416  
                           _setLED 01F7                             _setBuz 0194  
                           saved_w 007E                     _Lights_Control 0253  
          __size_of_LedPointSelect 001E                          ?_CDS_Main 0070  
          __end_of__initialization 0019                          ?_LED_Main 0070  
                  ?_setLights_Main 0070                      __end_of_MainT 0194  
       __size_of_setLights_Trigger 0010                     __pcstackCOMMON 0070  
               __size_of_getCDS_AD 0045                      __end_of_getAD 04A7  
                        ?_TMR0_ISR 0070                          ?_TMR0_Set 0070  
               _LED_Initialization 050E                        _Lights_Main 0539  
         _setLights_Initialization 04A7                ?_LED_Initialization 0070  
           __end_of_Lights_Control 02AB                            ??_MainT 006B  
             __size_of_setLED_Main 003D                            ??_getAD 0077  
                       ??_CDS_Main 0065                         __pbssBANK0 0020  
                      _Buzzer_Main 001C                            ?_IO_Set 0070  
                       ??_LED_Main 0077                         __pnvCOMMON 0077  
             ??_LED_Initialization 0077                  LedPointSelect@led 0062  
                      setBuz@count 006A                         __pmaintext 02AB  
                          ?___wmul 0062                         ??_TMR0_ISR 0070  
        __size_of_setLights_Switch 0010                 __size_of_setLights 0042  
                       ??_TMR0_Set 0076                         __pintentry 0004  
           setLights_Switch@lights 0064                            ?_setLED 0063  
          setLights_Trigger@lights 0064                            _ADC_Set 0541  
                          ?_setBuz 0068                    ?_Lights_Control 0070  
                __end_of_getCDS_AD 0337                    __size_of_IO_Set 0015  
                       getCDS_AD@i 0067                         getCDS_AD@j 0068  
                          _Lights1 0040                            _VarLED1 005A  
                          _VarLED2 005E                    __size_of___wmul 0025  
          ??_Buzzer_Initialization 0076                    __size_of_setLED 005C  
                  __size_of_setBuz 0063                            __ptext1 02F2  
                          __ptext2 0497                            __ptext3 04F5  
                          __ptext4 04E7                            __ptext5 0470  
                          __ptext6 0541                            __ptext7 0548  
                          __ptext8 0120                            __ptext9 0194  
                     __size_of_ISR 0010                     _LedPointSelect 043B  
                          clrloop0 0532                  __end_of_setLights 0379  
             end_of_initialization 0019              _setLED_Initialization 0485  
    __size_of_MainT_Initialization 0007     __size_of_Lights_Initialization 0004  
    __end_of_Lights_Initialization 0553           setLED_Initialization@led 0065  
               _Mcu_Initialization 04F5             __end_of_LedPointSelect 0459  
              ?_Mcu_Initialization 0070                   ??_setLights_Main 0077  
             setLights_Main@lights 0067                  __size_of_CDS_Main 0078  
                   __end_of_IO_Set 0485         __end_of_CDS_Initialization 0470  
       ??_setLights_Initialization 0077                  __size_of_LED_Main 000C  
             ??_Mcu_Initialization 0077                   _setLights_Switch 04C7  
                     ?_Lights_Main 0070                     __end_of___wmul 043B  
                __size_of_TMR0_ISR 0031                  __size_of_TMR0_Set 000E  
                   __end_of_setLED 0253                     __end_of_setBuz 01F7  
                     getCDS_AD@cds 0070                start_initialization 0013  
                  ?_LedPointSelect 0070                        __end_of_ISR 04E7  
                     ?_Buzzer_Main 0070                           ??_IO_Set 0076  
                        _VarErrLED 0056             ?_setLED_Initialization 0070  
                        _VarTimer0 004A                    setLights@lights 0065  
                         ??___wmul 0076                           ??_setLED 0077  
                         ?_ADC_Set 0070                   ??_Lights_Control 0063  
                         ??_setBuz 0076                      ??_setLED_Main 0063  
                        ___latbits 0001                      __pcstackBANK0 0062  
                        _getCDS_AD 02F2                          __pnvBANK0 006F  
      __size_of_LED_Initialization 000C                         setBuz@time 0068  
          setLights_Switch@command 0063     __size_of_Buzzer_Initialization 000B  
    __end_of_Buzzer_Initialization 0531           setLights_Trigger@command 0063  
                   __size_of_MainT 0074                     __size_of_getAD 0010  
                         _CDS_Main 00A8                __end_of_setLED_Main 03B6  
                interrupt_function 0004                         ?_getCDS_AD 0063  
                   ___wmul@product 0066                           _LED_Main 0502  
                        _setLights 0337                          clear_ram0 0531  
 __end_of_setLights_Initialization 04B7                           _GO_nDONE 00F9  
                         _TMR0_ISR 03B6                           _TMR0_Set 04E7  
              setLights_Main@clear 0066                   __size_of_ADC_Set 0007  
                ___wmul@multiplier 0062               __size_of_Lights_Main 0008  
     __end_of_MainT_Initialization 054F                        getAD@adcon0 0062  
                      getAD@adcon1 0076                     setLED_Main@led 0065  
         __end_of_setLights_Switch 04D7               __size_of_Buzzer_Main 008C  
                       ?_setLights 0063                           _VarTMain 0024  
                        setLED@led 0064                   ??_LedPointSelect 0076  
               _CDS_Initialization 0459              _Lights_Initialization 054F  
                      _setLED_Main 0379                ?_CDS_Initialization 0070  
                         __ptext10 0416                           __ptext11 0539  
                         __ptext20 0485                           __ptext12 03E7  
                         __ptext21 00A8                           __ptext13 0337  
                         __ptext30 04D7                           __ptext22 04B7  
                         __ptext14 0253                           __ptext31 03B6  
                         __ptext23 04C7                           __ptext15 054F  
                         __ptext24 051A                           __ptext16 04A7  
                         __ptext25 0459                           __ptext17 0502  
                         __ptext26 01F7                           __ptext18 0379  
                         __ptext27 043B                           __ptext19 050E  
                         __ptext28 001C                           __ptext29 0526  
          ??_setLED_Initialization 0077                        ??_getCDS_AD 0065  
                    setLED@command 0063                      __size_of_main 0047  
             ??_CDS_Initialization 0065        __size_of_Mcu_Initialization 000D  
__size_of_setLights_Initialization 0010          ?_setLights_Initialization 0070  
             Lights_Control@lights 0065                           intlevel1 0000  
                      ??_setLights 0064            LightsPointSelect@lights 0062  
             _MainT_Initialization 0548            __size_of_setLights_Main 002F  
           ?_Lights_Initialization 0070                         _OPTION_REG 0081  
   setLights_Initialization@lights 0063                  _LightsPointSelect 051A  
               __CFG_FOSC$INTOSCIO 0000                 ?_LightsPointSelect 0070  
       __end_of_LED_Initialization 051A                  getCDS_AD@channel1 0063  
                getCDS_AD@channel2 0064                ??_LightsPointSelect 0076  
            ?_MainT_Initialization 0070  
