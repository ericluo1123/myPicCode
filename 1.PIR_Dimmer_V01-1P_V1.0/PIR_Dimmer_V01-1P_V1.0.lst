

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu May 08 08:37:41 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F723A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 9 "G:\Program\PIC\Source_File\MCU_16F723A.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 9 "G:\Program\PIC\Source_File\MCU_16F723A.c"
    45  2007  FFF4               	dw 0xFFFC & 0xFFF7 & 0xFFFF ;#
    46                           # 10 "G:\Program\PIC\Source_File\MCU_16F723A.c"
    47                           	psect config,class=CONFIG,delta=2 ;#
    48                           # 10 "G:\Program\PIC\Source_File\MCU_16F723A.c"
    49  2008  FFFF               	dw 0xFFFF ;#
    50                           	FNCALL	_main,_Mcu_Initial
    51                           	FNCALL	_main,_LED_Setting
    52                           	FNCALL	_main,_TMR1_Main
    53                           	FNCALL	_main,_LED_Main
    54                           	FNCALL	_main,_Buzzer_Main
    55                           	FNCALL	_main,_CDS_Main
    56                           	FNCALL	_main,_PIR_Main
    57                           	FNCALL	_PIR_Main,___awdiv
    58                           	FNCALL	_PIR_Main,___wmul
    59                           	FNCALL	_PIR_Main,___lwdiv
    60                           	FNCALL	_PIR_Main,_PIR_Switch
    61                           	FNCALL	_PIR_Main,_LED_Setting
    62                           	FNCALL	_PIR_Main,_Dimmer_Control
    63                           	FNCALL	_PIR_Switch,_LED_Setting
    64                           	FNCALL	_PIR_Switch,_Dimmer_Control
    65                           	FNROOT	_main
    66                           	FNCALL	_ISR,_Dimmer_Main
    67                           	FNCALL	intlevel1,_ISR
    68                           	global	intlevel1
    69                           	FNROOT	intlevel1
    70                           	global	_PIRSwitch
    71                           psect	idataCOMMON,class=CODE,space=0,delta=2
    72                           global __pidataCOMMON
    73  07F9                     __pidataCOMMON:
    74                           	file	"G:\Program\PIC\Source_File\../Header_File/PIR_Dimmer_V01-1P_V1.0.h"
    75                           	line	7
    76                           
    77                           ;initializer for _PIRSwitch
    78  07F9  3401               	retlw	01h
    79                           	global	_Buzzer
    80                           	global	_CDS
    81                           	global	_PIR
    82                           	global	_VarDimmer
    83                           	global	_VarTimer1
    84                           	global	_VarCDS
    85                           	global	_VarBuzzer
    86                           	global	_VarLED
    87                           	global	_VarPIR
    88                           	global	_Dimmer
    89                           psect	nvBANK0,class=BANK0,space=1
    90                           global __pnvBANK0
    91  0055                     __pnvBANK0:
    92  0055                     _Dimmer:
    93  0055                            ds      1
    94                           
    95                           	global	_LED
    96  0056                     _LED:
    97  0056                            ds      1
    98                           
    99                           	global	_Timer1
   100  0057                     _Timer1:
   101  0057                            ds      1
   102                           
   103                           	global	_ADCON0
   104  001F                     _ADCON0	set	31
   105                           	global	_ADRES
   106  001E                     _ADRES	set	30
   107                           	global	_PORTA
   108  0005                     _PORTA	set	5
   109                           	global	_PORTB
   110  0006                     _PORTB	set	6
   111                           	global	_PORTC
   112  0007                     _PORTC	set	7
   113                           	global	_T1CON
   114  0010                     _T1CON	set	16
   115                           	global	_TMR0
   116  0001                     _TMR0	set	1
   117                           	global	_TMR1H
   118  000F                     _TMR1H	set	15
   119                           	global	_TMR1L
   120  000E                     _TMR1L	set	14
   121                           	global	_GIE
   122  005F                     _GIE	set	95
   123                           	global	_GO_nDONE
   124  00F9                     _GO_nDONE	set	249
   125                           	global	_PEIE
   126  005E                     _PEIE	set	94
   127                           	global	_RA7
   128  002F                     _RA7	set	47
   129                           	global	_RB1
   130  0031                     _RB1	set	49
   131                           	global	_RB2
   132  0032                     _RB2	set	50
   133                           	global	_RB3
   134  0033                     _RB3	set	51
   135                           	global	_RB4
   136  0034                     _RB4	set	52
   137                           	global	_RB5
   138  0035                     _RB5	set	53
   139                           	global	_TMR0IE
   140  005D                     _TMR0IE	set	93
   141                           	global	_TMR1IF
   142  0060                     _TMR1IF	set	96
   143                           	global	_ADCON1
   144  009F                     _ADCON1	set	159
   145                           	global	_FVRCON
   146  009D                     _FVRCON	set	157
   147                           	global	_OSCCON
   148  0090                     _OSCCON	set	144
   149                           	global	_TRISA
   150  0085                     _TRISA	set	133
   151                           	global	_TRISB
   152  0086                     _TRISB	set	134
   153                           	global	_TRISC
   154  0087                     _TRISC	set	135
   155                           	global	_TMR1IE
   156  0460                     _TMR1IE	set	1120
   157                           	global	_ANSELA
   158  0185                     _ANSELA	set	389
   159                           	global	_ANSELB
   160  0186                     _ANSELB	set	390
   161                           	file	"PIR_Dimmer_V01-1P_V1.0.as"
   162                           	line	#
   163                           psect cinit,class=CODE,delta=2
   164                           global start_initialization
   165  07E5                     start_initialization:
   166                           
   167                           psect	dataCOMMON,class=COMMON,space=1
   168                           global __pdataCOMMON
   169  0078                     __pdataCOMMON:
   170                           	file	"G:\Program\PIC\Source_File\../Header_File/PIR_Dimmer_V01-1P_V1.0.h"
   171  0078                     _PIRSwitch:
   172  0078                            ds      1
   173                           
   174                           psect	bssBANK0,class=BANK0,space=1
   175                           global __pbssBANK0
   176  0020                     __pbssBANK0:
   177  0020                     _Buzzer:
   178  0020                            ds      1
   179                           
   180  0021                     _CDS:
   181  0021                            ds      1
   182                           
   183  0022                     _PIR:
   184  0022                            ds      1
   185                           
   186  0023                     _VarDimmer:
   187  0023                            ds      14
   188                           
   189  0031                     _VarTimer1:
   190  0031                            ds      9
   191                           
   192  003A                     _VarCDS:
   193  003A                            ds      6
   194                           
   195  0040                     _VarBuzzer:
   196  0040                            ds      4
   197                           
   198  0044                     _VarLED:
   199  0044                            ds      2
   200                           
   201                           psect	bssBANK1,class=BANK1,space=1
   202                           global __pbssBANK1
   203  00A0                     __pbssBANK1:
   204  00A0                     _VarPIR:
   205  00A0                            ds      32
   206                           
   207                           psect clrtext,class=CODE,delta=2
   208                           global clear_ram
   209                           ;	Called with FSR containing the base address, and
   210                           ;	W with the last address+1
   211  0EE5                     clear_ram:
   212  0EE5  0064               	clrwdt			;clear the watchdog before getting into this loop
   213  0EE6                     clrloop:
   214  0EE6  0180               	clrf	indf		;clear RAM location pointed to by FSR
   215  0EE7  0A84               	incf	fsr,f		;increment pointer
   216  0EE8  0604               	xorwf	fsr,w		;XOR with final address
   217  0EE9  1903               	btfsc	status,2	;have we reached the end yet?
   218  0EEA  3400               	retlw	0		;all done for this memory range, return
   219  0EEB  0604               	xorwf	fsr,w		;XOR again to restore value
   220  0EEC  2EE6               	goto	clrloop		;do the next byte
   221                           
   222                           ; Clear objects allocated to BANK0
   223                           psect cinit,class=CODE,delta=2
   224  07E5  1383               	bcf	status, 7	;select IRP bank0
   225  07E6  3020               	movlw	low(__pbssBANK0)
   226  07E7  0084               	movwf	fsr
   227  07E8  3046               	movlw	low((__pbssBANK0)+026h)
   228  07E9  158A  26E5  118A   	fcall	clear_ram
   229                           ; Clear objects allocated to BANK1
   230                           psect cinit,class=CODE,delta=2
   231  07EC  30A0               	movlw	low(__pbssBANK1)
   232  07ED  0084               	movwf	fsr
   233  07EE  30C0               	movlw	low((__pbssBANK1)+020h)
   234  07EF  158A  26E5  118A   	fcall	clear_ram
   235                           ; Initialize objects allocated to COMMON
   236                           	global __pidataCOMMON
   237                           psect cinit,class=CODE,delta=2
   238  07F2  118A  27F9  118A   	fcall	__pidataCOMMON+0		;fetch initializer
   239  07F5  00F8               	movwf	__pdataCOMMON+0&07fh		
   240                           psect cinit,class=CODE,delta=2
   241                           global end_of_initialization
   242                           
   243                           ;End of C runtime variable initialization code
   244                           
   245  07F6                     end_of_initialization:
   246  07F6  0183               clrf status
   247  07F7  118A  2D83         ljmp _main	;jump to C main() function
   248                           psect	cstackCOMMON,class=COMMON,space=1
   249                           global __pcstackCOMMON
   250  0070                     __pcstackCOMMON:
   251                           	global	?_TMR1_Main
   252  0070                     ?_TMR1_Main:	; 0 bytes @ 0x0
   253                           	global	?_CDS_Main
   254  0070                     ?_CDS_Main:	; 0 bytes @ 0x0
   255                           	global	?_PIR_Main
   256  0070                     ?_PIR_Main:	; 0 bytes @ 0x0
   257                           	global	?_PIR_Switch
   258  0070                     ?_PIR_Switch:	; 0 bytes @ 0x0
   259                           	global	?_Buzzer_Main
   260  0070                     ?_Buzzer_Main:	; 0 bytes @ 0x0
   261                           	global	?_Dimmer_Main
   262  0070                     ?_Dimmer_Main:	; 0 bytes @ 0x0
   263                           	global	??_Dimmer_Main
   264  0070                     ??_Dimmer_Main:	; 0 bytes @ 0x0
   265                           	global	?_Dimmer_Control
   266  0070                     ?_Dimmer_Control:	; 0 bytes @ 0x0
   267                           	global	?_LED_Setting
   268  0070                     ?_LED_Setting:	; 0 bytes @ 0x0
   269                           	global	?_LED_Main
   270  0070                     ?_LED_Main:	; 0 bytes @ 0x0
   271                           	global	?_ISR
   272  0070                     ?_ISR:	; 0 bytes @ 0x0
   273                           	global	?_Mcu_Initial
   274  0070                     ?_Mcu_Initial:	; 0 bytes @ 0x0
   275                           	global	?_main
   276  0070                     ?_main:	; 0 bytes @ 0x0
   277  0070                     	ds	2
   278                           	global	??_ISR
   279  0072                     ??_ISR:	; 0 bytes @ 0x2
   280  0072                     	ds	6
   281                           psect	cstackBANK0,class=BANK0,space=1
   282                           global __pcstackBANK0
   283  0046                     __pcstackBANK0:
   284                           	global	??_TMR1_Main
   285  0046                     ??_TMR1_Main:	; 0 bytes @ 0x0
   286                           	global	??_CDS_Main
   287  0046                     ??_CDS_Main:	; 0 bytes @ 0x0
   288                           	global	??_Buzzer_Main
   289  0046                     ??_Buzzer_Main:	; 0 bytes @ 0x0
   290                           	global	??_Dimmer_Control
   291  0046                     ??_Dimmer_Control:	; 0 bytes @ 0x0
   292                           	global	??_LED_Setting
   293  0046                     ??_LED_Setting:	; 0 bytes @ 0x0
   294                           	global	??_LED_Main
   295  0046                     ??_LED_Main:	; 0 bytes @ 0x0
   296                           	global	??_Mcu_Initial
   297  0046                     ??_Mcu_Initial:	; 0 bytes @ 0x0
   298                           	global	?___wmul
   299  0046                     ?___wmul:	; 2 bytes @ 0x0
   300                           	global	?___lwdiv
   301  0046                     ?___lwdiv:	; 2 bytes @ 0x0
   302                           	global	?___awdiv
   303  0046                     ?___awdiv:	; 2 bytes @ 0x0
   304                           	global	LED_Setting@number
   305  0046                     LED_Setting@number:	; 1 bytes @ 0x0
   306                           	global	___wmul@multiplier
   307  0046                     ___wmul@multiplier:	; 2 bytes @ 0x0
   308                           	global	___lwdiv@divisor
   309  0046                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   310                           	global	___awdiv@divisor
   311  0046                     ___awdiv@divisor:	; 2 bytes @ 0x0
   312  0046                     	ds	1
   313                           	global	Dimmer_Control@number
   314  0047                     Dimmer_Control@number:	; 1 bytes @ 0x1
   315  0047                     	ds	1
   316                           	global	??_PIR_Switch
   317  0048                     ??_PIR_Switch:	; 0 bytes @ 0x2
   318                           	global	___wmul@multiplicand
   319  0048                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   320                           	global	___lwdiv@dividend
   321  0048                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   322                           	global	___awdiv@dividend
   323  0048                     ___awdiv@dividend:	; 2 bytes @ 0x2
   324  0048                     	ds	2
   325                           	global	??___wmul
   326  004A                     ??___wmul:	; 0 bytes @ 0x4
   327                           	global	??___lwdiv
   328  004A                     ??___lwdiv:	; 0 bytes @ 0x4
   329                           	global	??___awdiv
   330  004A                     ??___awdiv:	; 0 bytes @ 0x4
   331                           	global	___wmul@product
   332  004A                     ___wmul@product:	; 2 bytes @ 0x4
   333  004A                     	ds	1
   334                           	global	___awdiv@counter
   335  004B                     ___awdiv@counter:	; 1 bytes @ 0x5
   336                           	global	___lwdiv@quotient
   337  004B                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   338  004B                     	ds	1
   339                           	global	___awdiv@sign
   340  004C                     ___awdiv@sign:	; 1 bytes @ 0x6
   341  004C                     	ds	1
   342                           	global	___lwdiv@counter
   343  004D                     ___lwdiv@counter:	; 1 bytes @ 0x7
   344                           	global	___awdiv@quotient
   345  004D                     ___awdiv@quotient:	; 2 bytes @ 0x7
   346  004D                     	ds	2
   347                           	global	??_PIR_Main
   348  004F                     ??_PIR_Main:	; 0 bytes @ 0x9
   349  004F                     	ds	4
   350                           	global	PIR_Main@i
   351  0053                     PIR_Main@i:	; 1 bytes @ 0xD
   352  0053                     	ds	1
   353                           	global	??_main
   354  0054                     ??_main:	; 0 bytes @ 0xE
   355  0054                     	ds	1
   356 ;;Data sizes: Strings 0, constant 0, data 1, bss 70, persistent 3 stack 0
   357 ;;Auto spaces:   Size  Autos    Used
   358 ;; COMMON          14      8       9
   359 ;; BANK0           80     15      56
   360 ;; BANK1           80      0      32
   361 ;; BANK2           16      0       0
   362                           
   363 ;;
   364 ;; Pointer list with targets:
   365                           
   366 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   367 ;;
   368 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   369 ;;
   370 ;; ?___awdiv	int  size(1) Largest target is 0
   371 ;;
   372 ;; CDS	PTR struct CDS size(1) Largest target is 6
   373 ;;		 -> NULL(NULL[0]), VarCDS(BANK0[6]), 
   374 ;;
   375 ;; Timer1	PTR struct Timer1 size(1) Largest target is 9
   376 ;;		 -> NULL(NULL[0]), VarTimer1(BANK0[9]), 
   377 ;;
   378 ;; LED	PTR struct LED size(1) Largest target is 2
   379 ;;		 -> NULL(NULL[0]), VarLED(BANK0[2]), 
   380 ;;
   381 ;; PIR	PTR struct PIR size(1) Largest target is 32
   382 ;;		 -> NULL(NULL[0]), VarPIR(BANK1[32]), 
   383 ;;
   384 ;; Dimmer	PTR struct Dimmer size(1) Largest target is 14
   385 ;;		 -> NULL(NULL[0]), VarDimmer(BANK0[14]), 
   386 ;;
   387 ;; Buzzer	PTR struct Buzzer size(1) Largest target is 4
   388 ;;		 -> NULL(NULL[0]), VarBuzzer(BANK0[4]), 
   389 ;;
   390                           
   391                           
   392 ;;
   393 ;; Critical Paths under _main in COMMON
   394 ;;
   395 ;;   None.
   396 ;;
   397 ;; Critical Paths under _ISR in COMMON
   398 ;;
   399 ;;   _ISR->_Dimmer_Main
   400 ;;
   401 ;; Critical Paths under _main in BANK0
   402 ;;
   403 ;;   _main->_PIR_Main
   404 ;;   _PIR_Main->___awdiv
   405 ;;   _PIR_Switch->_Dimmer_Control
   406 ;;
   407 ;; Critical Paths under _ISR in BANK0
   408 ;;
   409 ;;   None.
   410 ;;
   411 ;; Critical Paths under _main in BANK1
   412 ;;
   413 ;;   None.
   414 ;;
   415 ;; Critical Paths under _ISR in BANK1
   416 ;;
   417 ;;   None.
   418 ;;
   419 ;; Critical Paths under _main in BANK2
   420 ;;
   421 ;;   None.
   422 ;;
   423 ;; Critical Paths under _ISR in BANK2
   424 ;;
   425 ;;   None.
   426                           
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   429 ;;
   430                           
   431 ;;
   432 ;;Call Graph Tables:
   433 ;;
   434 ;; ---------------------------------------------------------------------------------
   435 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (0) _main                                                 1     1      0     974
   438 ;;                                             14 BANK0      1     1      0
   439 ;;                        _Mcu_Initial
   440 ;;                        _LED_Setting
   441 ;;                          _TMR1_Main
   442 ;;                           _LED_Main
   443 ;;                        _Buzzer_Main
   444 ;;                           _CDS_Main
   445 ;;                           _PIR_Main
   446 ;; ---------------------------------------------------------------------------------
   447 ;; (1) _PIR_Main                                             5     5      0     886
   448 ;;                                              9 BANK0      5     5      0
   449 ;;                            ___awdiv
   450 ;;                             ___wmul
   451 ;;                            ___lwdiv
   452 ;;                         _PIR_Switch
   453 ;;                        _LED_Setting
   454 ;;                     _Dimmer_Control
   455 ;; ---------------------------------------------------------------------------------
   456 ;; (2) _PIR_Switch                                           1     1      0     132
   457 ;;                                              2 BANK0      1     1      0
   458 ;;                        _LED_Setting
   459 ;;                     _Dimmer_Control
   460 ;; ---------------------------------------------------------------------------------
   461 ;; (2) ___awdiv                                              9     5      4     300
   462 ;;                                              0 BANK0      9     5      4
   463 ;; ---------------------------------------------------------------------------------
   464 ;; (2) ___lwdiv                                              8     4      4     162
   465 ;;                                              0 BANK0      8     4      4
   466 ;; ---------------------------------------------------------------------------------
   467 ;; (2) ___wmul                                               6     2      4      92
   468 ;;                                              0 BANK0      6     2      4
   469 ;; ---------------------------------------------------------------------------------
   470 ;; (1) _CDS_Main                                             3     3      0       0
   471 ;;                                              0 BANK0      3     3      0
   472 ;; ---------------------------------------------------------------------------------
   473 ;; (1) _TMR1_Main                                            2     2      0       0
   474 ;;                                              0 BANK0      2     2      0
   475 ;; ---------------------------------------------------------------------------------
   476 ;; (1) _Mcu_Initial                                          1     1      0       0
   477 ;;                                              0 BANK0      1     1      0
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (1) _LED_Main                                             1     1      0       0
   480 ;;                                              0 BANK0      1     1      0
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (2) _LED_Setting                                          1     1      0      88
   483 ;;                                              0 BANK0      1     1      0
   484 ;; ---------------------------------------------------------------------------------
   485 ;; (2) _Dimmer_Control                                       2     2      0      44
   486 ;;                                              0 BANK0      2     2      0
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (1) _Buzzer_Main                                          1     1      0       0
   489 ;;                                              0 BANK0      1     1      0
   490 ;; ---------------------------------------------------------------------------------
   491 ;; Estimated maximum stack depth 2
   492 ;; ---------------------------------------------------------------------------------
   493 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (4) _ISR                                                  6     6      0       0
   496 ;;                                              2 COMMON     6     6      0
   497 ;;                        _Dimmer_Main
   498 ;; ---------------------------------------------------------------------------------
   499 ;; (5) _Dimmer_Main                                          2     2      0       0
   500 ;;                                              0 COMMON     2     2      0
   501 ;; ---------------------------------------------------------------------------------
   502 ;; Estimated maximum stack depth 5
   503 ;; ---------------------------------------------------------------------------------
   504                           
   505 ;; Call Graph Graphs:
   506                           
   507 ;; _main (ROOT)
   508 ;;   _Mcu_Initial
   509 ;;   _LED_Setting
   510 ;;   _TMR1_Main
   511 ;;   _LED_Main
   512 ;;   _Buzzer_Main
   513 ;;   _CDS_Main
   514 ;;   _PIR_Main
   515 ;;     ___awdiv
   516 ;;     ___wmul
   517 ;;     ___lwdiv
   518 ;;     _PIR_Switch
   519 ;;       _LED_Setting
   520 ;;       _Dimmer_Control
   521 ;;     _LED_Setting
   522 ;;     _Dimmer_Control
   523 ;;
   524 ;; _ISR (ROOT)
   525 ;;   _Dimmer_Main
   526 ;;
   527                           
   528 ;; Address spaces:
   529                           
   530 ;;Name               Size   Autos  Total    Cost      Usage
   531 ;;SFR3                 0      0       0       4        0.0%
   532 ;;BITSFR3              0      0       0       4        0.0%
   533 ;;BANK2               10      0       0       9        0.0%
   534 ;;BITBANK2            10      0       0       8        0.0%
   535 ;;SFR2                 0      0       0       5        0.0%
   536 ;;BITSFR2              0      0       0       5        0.0%
   537 ;;SFR1                 0      0       0       2        0.0%
   538 ;;BITSFR1              0      0       0       2        0.0%
   539 ;;BANK1               50      0      20       7       40.0%
   540 ;;BITBANK1            50      0       0       6        0.0%
   541 ;;CODE                 0      0       0       0        0.0%
   542 ;;DATA                 0      0      68      10        0.0%
   543 ;;ABS                  0      0      61       3        0.0%
   544 ;;NULL                 0      0       0       0        0.0%
   545 ;;STACK                0      0       7       2        0.0%
   546 ;;BANK0               50      F      38       5       70.0%
   547 ;;BITBANK0            50      0       0       4        0.0%
   548 ;;SFR0                 0      0       0       1        0.0%
   549 ;;BITSFR0              0      0       0       1        0.0%
   550 ;;COMMON               E      8       9       1       64.3%
   551 ;;BITCOMMON            E      0       0       0        0.0%
   552                           
   553                           	global	_main
   554                           psect	maintext,global,class=CODE,delta=2
   555                           global __pmaintext
   556  0583                     __pmaintext:
   557                           
   558 ;; *************** function _main *****************
   559 ;; Defined at:
   560 ;;		line 7 in file "G:\Program\PIC\Source_File\PIR_Dimmer_V01-1P_V1.0.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;		None               void
   567 ;; Registers used:
   568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 17F/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   574 ;;      Params:         0       0       0       0
   575 ;;      Locals:         0       0       0       0
   576 ;;      Temps:          0       1       0       0
   577 ;;      Totals:         0       1       0       0
   578 ;;Total ram usage:        1 bytes
   579 ;; Hardware stack levels required when called:    5
   580 ;; This function calls:
   581 ;;		_Mcu_Initial
   582 ;;		_LED_Setting
   583 ;;		_TMR1_Main
   584 ;;		_LED_Main
   585 ;;		_Buzzer_Main
   586 ;;		_CDS_Main
   587 ;;		_PIR_Main
   588 ;; This function is called by:
   589 ;;		Startup code after reset
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           psect	maintext
   593                           	file	"G:\Program\PIC\Source_File\PIR_Dimmer_V01-1P_V1.0.c"
   594                           	global	__size_of_main
   595  0088                     	__size_of_main	equ	__end_of_main-_main
   596                           	
   597  0583                     _main:	
   598                           	opt	stack 3
   599                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   600                           	line	8
   601                           	
   602  0583                     l8153:	
   603                           ;PIR_Dimmer_V01-1P_V1.0.c: 8: Mcu_Initial();
   604  0583  158A  273B  118A   	fcall	_Mcu_Initial
   605                           	line	9
   606                           	
   607  0586                     l8155:	
   608                           ;PIR_Dimmer_V01-1P_V1.0.c: 9: Dimmer=&VarDimmer; Dimmer->Enable=1; Dimmer->Maxmum=41; Di
                                 mmer->Minimum=132; Dimmer->DimmingValue=Dimmer->Minimum; Dimmer->GO_nDONE=0;
   609  0586  3023               	movlw	(_VarDimmer)&0ffh
   610  0587  1283               	bcf	status, 5	;RP0=0, select bank0
   611  0588  1303               	bcf	status, 6	;RP1=0, select bank0
   612  0589  00D4               	movwf	(??_main+0)+0
   613  058A  0854               	movf	(??_main+0)+0,w
   614  058B  00D5               	movwf	(_Dimmer)
   615                           	
   616  058C                     l8157:	
   617  058C  0855               	movf	(_Dimmer),w
   618  058D  0084               	movwf	fsr0
   619  058E  1383               	bcf	status, 7	;select IRP bank0
   620  058F  1400               	bsf	indf,0
   621                           	
   622  0590                     l8159:	
   623  0590  3029               	movlw	(029h)
   624  0591  00D4               	movwf	(??_main+0)+0
   625  0592  0855               	movf	(_Dimmer),w
   626  0593  3E0B               	addlw	0Bh
   627  0594  0084               	movwf	fsr0
   628  0595  0854               	movf	(??_main+0)+0,w
   629  0596  0080               	movwf	indf
   630                           	
   631  0597                     l8161:	
   632  0597  3084               	movlw	(084h)
   633  0598  00D4               	movwf	(??_main+0)+0
   634  0599  0855               	movf	(_Dimmer),w
   635  059A  3E0C               	addlw	0Ch
   636  059B  0084               	movwf	fsr0
   637  059C  0854               	movf	(??_main+0)+0,w
   638  059D  0080               	movwf	indf
   639                           	
   640  059E                     l8163:	
   641  059E  0855               	movf	(_Dimmer),w
   642  059F  3E0C               	addlw	0Ch
   643  05A0  0084               	movwf	fsr0
   644  05A1  0800               	movf	indf,w
   645  05A2  00D4               	movwf	(??_main+0)+0
   646  05A3  0855               	movf	(_Dimmer),w
   647  05A4  3E09               	addlw	09h
   648  05A5  0084               	movwf	fsr0
   649  05A6  0854               	movf	(??_main+0)+0,w
   650  05A7  0080               	movwf	indf
   651                           	
   652  05A8                     l8165:	
   653  05A8  0855               	movf	(_Dimmer),w
   654  05A9  0084               	movwf	fsr0
   655  05AA  1080               	bcf	indf,1
   656                           	line	10
   657                           	
   658  05AB                     l8167:	
   659                           ;PIR_Dimmer_V01-1P_V1.0.c: 10: LED=&VarLED; LED->Enable=1; if(RB5 == 0) RB5 = 1; if(RB4 
                                 == 0) RB4 = 1; if(RB3 == 0) RB3 = 1;
   660  05AB  3044               	movlw	(_VarLED)&0ffh
   661  05AC  00D4               	movwf	(??_main+0)+0
   662  05AD  0854               	movf	(??_main+0)+0,w
   663  05AE  00D6               	movwf	(_LED)
   664                           	
   665  05AF                     l8169:	
   666  05AF  0856               	movf	(_LED),w
   667  05B0  0084               	movwf	fsr0
   668  05B1  1400               	bsf	indf,0
   669                           	
   670  05B2                     l8171:	
   671  05B2  1A86               	btfsc	(53/8),(53)&7
   672  05B3  2DB5               	goto	u4171
   673  05B4  2DB6               	goto	u4170
   674  05B5                     u4171:
   675  05B5  2DB7               	goto	l4242
   676  05B6                     u4170:
   677                           	
   678  05B6                     l8173:	
   679  05B6  1686               	bsf	(53/8),(53)&7
   680                           	
   681  05B7                     l4242:	
   682  05B7  1A06               	btfsc	(52/8),(52)&7
   683  05B8  2DBA               	goto	u4181
   684  05B9  2DBB               	goto	u4180
   685  05BA                     u4181:
   686  05BA  2DBC               	goto	l4243
   687  05BB                     u4180:
   688                           	
   689  05BB                     l8175:	
   690  05BB  1606               	bsf	(52/8),(52)&7
   691                           	
   692  05BC                     l4243:	
   693  05BC  1986               	btfsc	(51/8),(51)&7
   694  05BD  2DBF               	goto	u4191
   695  05BE  2DC0               	goto	u4190
   696  05BF                     u4191:
   697  05BF  2DC2               	goto	l8179
   698  05C0                     u4190:
   699                           	
   700  05C0                     l8177:	
   701  05C0  1586               	bsf	(51/8),(51)&7
   702  05C1  2DC2               	goto	l8179
   703                           	
   704  05C2                     l4244:	
   705                           	line	11
   706                           	
   707  05C2                     l8179:	
   708                           ;PIR_Dimmer_V01-1P_V1.0.c: 11: Buzzer=&VarBuzzer; Buzzer->Enable=1;
   709  05C2  3040               	movlw	(_VarBuzzer)&0ffh
   710  05C3  00D4               	movwf	(??_main+0)+0
   711  05C4  0854               	movf	(??_main+0)+0,w
   712  05C5  00A0               	movwf	(_Buzzer)
   713                           	
   714  05C6                     l8181:	
   715  05C6  0820               	movf	(_Buzzer),w
   716  05C7  0084               	movwf	fsr0
   717  05C8  1400               	bsf	indf,0
   718                           	line	12
   719                           	
   720  05C9                     l8183:	
   721                           ;PIR_Dimmer_V01-1P_V1.0.c: 12: CDS=&VarCDS; CDS->Enable=1;
   722  05C9  303A               	movlw	(_VarCDS)&0ffh
   723  05CA  00D4               	movwf	(??_main+0)+0
   724  05CB  0854               	movf	(??_main+0)+0,w
   725  05CC  00A1               	movwf	(_CDS)
   726  05CD  0821               	movf	(_CDS),w
   727  05CE  0084               	movwf	fsr0
   728  05CF  1400               	bsf	indf,0
   729                           	line	13
   730                           	
   731  05D0                     l8185:	
   732                           ;PIR_Dimmer_V01-1P_V1.0.c: 13: PIR=&VarPIR; PIR->Enable=1; PIR->RangeValue=8; PIR->Close
                                 TimeValue=150; LED_Setting(1);
   733  05D0  30A0               	movlw	(_VarPIR)&0ffh
   734  05D1  00D4               	movwf	(??_main+0)+0
   735  05D2  0854               	movf	(??_main+0)+0,w
   736  05D3  00A2               	movwf	(_PIR)
   737                           	
   738  05D4                     l8187:	
   739  05D4  0822               	movf	(_PIR),w
   740  05D5  0084               	movwf	fsr0
   741  05D6  1400               	bsf	indf,0
   742                           	
   743  05D7                     l8189:	
   744  05D7  3008               	movlw	(08h)
   745  05D8  00D4               	movwf	(??_main+0)+0
   746  05D9  0822               	movf	(_PIR),w
   747  05DA  3E1E               	addlw	01Eh
   748  05DB  0084               	movwf	fsr0
   749  05DC  0854               	movf	(??_main+0)+0,w
   750  05DD  0080               	movwf	indf
   751                           	
   752  05DE                     l8191:	
   753  05DE  0822               	movf	(_PIR),w
   754  05DF  3E18               	addlw	018h
   755  05E0  0084               	movwf	fsr0
   756  05E1  3096               	movlw	low(096h)
   757  05E2  0080               	movwf	indf
   758  05E3  0A84               	incf	fsr0,f
   759  05E4  3000               	movlw	high(096h)
   760  05E5  0080               	movwf	indf
   761                           	
   762  05E6                     l8193:	
   763  05E6  3001               	movlw	(01h)
   764  05E7  158A  276F  118A   	fcall	_LED_Setting
   765  05EA  2DEB               	goto	l8195
   766                           	line	14
   767                           ;PIR_Dimmer_V01-1P_V1.0.c: 14: while(1)
   768                           	
   769  05EB                     l4245:	
   770                           	line	16
   771                           	
   772  05EB                     l8195:	
   773                           ;PIR_Dimmer_V01-1P_V1.0.c: 15: {
   774                           ;PIR_Dimmer_V01-1P_V1.0.c: 16: if(Timer1->Timeout==1)
   775  05EB  1283               	bcf	status, 5	;RP0=0, select bank0
   776  05EC  1303               	bcf	status, 6	;RP1=0, select bank0
   777  05ED  0857               	movf	(_Timer1),w
   778  05EE  0084               	movwf	fsr0
   779  05EF  1383               	bcf	status, 7	;select IRP bank0
   780  05F0  1D00               	btfss	indf,2
   781  05F1  2DF3               	goto	u4201
   782  05F2  2DF4               	goto	u4200
   783  05F3                     u4201:
   784  05F3  2DEB               	goto	l8195
   785  05F4                     u4200:
   786                           	line	18
   787                           	
   788  05F4                     l8197:	
   789                           ;PIR_Dimmer_V01-1P_V1.0.c: 17: {
   790                           ;PIR_Dimmer_V01-1P_V1.0.c: 18: Timer1->Timeout=0;
   791  05F4  0857               	movf	(_Timer1),w
   792  05F5  0084               	movwf	fsr0
   793  05F6  1100               	bcf	indf,2
   794                           	line	19
   795                           	
   796  05F7                     l8199:	
   797                           ;PIR_Dimmer_V01-1P_V1.0.c: 19: TMR1_Main();
   798  05F7  118A  24E7  118A   	fcall	_TMR1_Main
   799                           	line	20
   800                           	
   801  05FA                     l8201:	
   802                           ;PIR_Dimmer_V01-1P_V1.0.c: 20: LED_Main();
   803  05FA  158A  26ED  118A   	fcall	_LED_Main
   804                           	line	21
   805                           	
   806  05FD                     l8203:	
   807                           ;PIR_Dimmer_V01-1P_V1.0.c: 21: Buzzer_Main();
   808  05FD  118A  26F0  118A   	fcall	_Buzzer_Main
   809                           	line	22
   810                           	
   811  0600                     l8205:	
   812                           ;PIR_Dimmer_V01-1P_V1.0.c: 22: CDS_Main();
   813  0600  118A  243D  118A   	fcall	_CDS_Main
   814                           	line	23
   815                           	
   816  0603                     l8207:	
   817                           ;PIR_Dimmer_V01-1P_V1.0.c: 23: PIR_Main();
   818  0603  118A  2013  118A   	fcall	_PIR_Main
   819  0606  2DEB               	goto	l8195
   820                           	line	24
   821                           	
   822  0607                     l4246:	
   823  0607  2DEB               	goto	l8195
   824                           	line	25
   825                           	
   826  0608                     l4247:	
   827                           	line	14
   828  0608  2DEB               	goto	l8195
   829                           	
   830  0609                     l4248:	
   831                           	line	26
   832                           	
   833  0609                     l4249:	
   834                           	global	start
   835  0609  118A  2811         	ljmp	start
   836                           	opt stack 0
   837                           GLOBAL	__end_of_main
   838  060B                     	__end_of_main:
   839 ;; =============== function _main ends ============
   840                           
   841                           	signat	_main,88
   842                           	global	_PIR_Main
   843                           psect	text381,local,class=CODE,delta=2
   844                           global __ptext381
   845  0013                     __ptext381:
   846                           
   847 ;; *************** function _PIR_Main *****************
   848 ;; Defined at:
   849 ;;		line 62 in file "G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  i               1   13[BANK0 ] unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;		None               void
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   863 ;;      Params:         0       0       0       0
   864 ;;      Locals:         0       1       0       0
   865 ;;      Temps:          0       4       0       0
   866 ;;      Totals:         0       5       0       0
   867 ;;Total ram usage:        5 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    4
   870 ;; This function calls:
   871 ;;		___awdiv
   872 ;;		___wmul
   873 ;;		___lwdiv
   874 ;;		_PIR_Switch
   875 ;;		_LED_Setting
   876 ;;		_Dimmer_Control
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           psect	text381
   882                           	file	"G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
   883                           	line	62
   884                           	global	__size_of_PIR_Main
   885  0318                     	__size_of_PIR_Main	equ	__end_of_PIR_Main-_PIR_Main
   886                           	
   887  0013                     _PIR_Main:	
   888                           	opt	stack 3
   889                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   890                           	line	64
   891                           	
   892  0013                     l8017:	
   893                           ;Sensor_PIR+CDS.c: 63: char i;
   894                           ;Sensor_PIR+CDS.c: 64: if(PIR->Enable == 1)
   895  0013  1283               	bcf	status, 5	;RP0=0, select bank0
   896  0014  1303               	bcf	status, 6	;RP1=0, select bank0
   897  0015  0822               	movf	(_PIR),w
   898  0016  0084               	movwf	fsr0
   899  0017  1383               	bcf	status, 7	;select IRP bank0
   900  0018  1C00               	btfss	indf,0
   901  0019  281B               	goto	u3881
   902  001A  281C               	goto	u3880
   903  001B                     u3881:
   904  001B  2B2A               	goto	l5145
   905  001C                     u3880:
   906                           	line	66
   907                           	
   908  001C                     l8019:	
   909                           ;Sensor_PIR+CDS.c: 65: {
   910                           ;Sensor_PIR+CDS.c: 66: PIR->Time++;
   911  001C  3001               	movlw	(01h)
   912  001D  00CF               	movwf	(??_PIR_Main+0)+0
   913  001E  0822               	movf	(_PIR),w
   914  001F  3E04               	addlw	04h
   915  0020  0084               	movwf	fsr0
   916  0021  084F               	movf	(??_PIR_Main+0)+0,w
   917  0022  0780               	addwf	indf,f
   918                           	line	67
   919                           	
   920  0023                     l8021:	
   921                           ;Sensor_PIR+CDS.c: 67: if(PIR->Time == 10)
   922  0023  0822               	movf	(_PIR),w
   923  0024  3E04               	addlw	04h
   924  0025  0084               	movwf	fsr0
   925  0026  0800               	movf	indf,w
   926  0027  3A0A               	xorlw	0Ah
   927  0028  1D03               	skipz
   928  0029  282B               	goto	u3891
   929  002A  282C               	goto	u3890
   930  002B                     u3891:
   931  002B  2B2A               	goto	l5145
   932  002C                     u3890:
   933                           	line	69
   934                           	
   935  002C                     l8023:	
   936                           ;Sensor_PIR+CDS.c: 68: {
   937                           ;Sensor_PIR+CDS.c: 69: PIR->Time=0;
   938  002C  0822               	movf	(_PIR),w
   939  002D  3E04               	addlw	04h
   940  002E  0084               	movwf	fsr0
   941  002F  0180               	clrf	indf
   942                           	line	70
   943                           ;Sensor_PIR+CDS.c: 70: PIR->GO_nDONE=1;
   944  0030  0822               	movf	(_PIR),w
   945  0031  0084               	movwf	fsr0
   946  0032  1480               	bsf	indf,1
   947                           	line	71
   948                           	
   949  0033                     l8025:	
   950                           ;Sensor_PIR+CDS.c: 71: ADCON1=0x70;
   951  0033  3070               	movlw	(070h)
   952  0034  1683               	bsf	status, 5	;RP0=1, select bank1
   953  0035  1303               	bcf	status, 6	;RP1=0, select bank1
   954  0036  009F               	movwf	(159)^080h	;volatile
   955                           	line	74
   956                           	
   957  0037                     l8027:	
   958                           ;Sensor_PIR+CDS.c: 74: ADCON0=0x05;
   959  0037  3005               	movlw	(05h)
   960  0038  1283               	bcf	status, 5	;RP0=0, select bank0
   961  0039  1303               	bcf	status, 6	;RP1=0, select bank0
   962  003A  009F               	movwf	(31)	;volatile
   963                           	line	76
   964                           	
   965  003B                     l8029:	
   966                           ;Sensor_PIR+CDS.c: 76: GO_nDONE=1;
   967  003B  149F               	bsf	(249/8),(249)&7
   968                           	line	77
   969                           ;Sensor_PIR+CDS.c: 77: while(GO_nDONE);
   970  003C  283D               	goto	l5102
   971                           	
   972  003D                     l5103:	
   973                           	
   974  003D                     l5102:	
   975  003D  189F               	btfsc	(249/8),(249)&7
   976  003E  2840               	goto	u3901
   977  003F  2841               	goto	u3900
   978  0040                     u3901:
   979  0040  283D               	goto	l5102
   980  0041                     u3900:
   981  0041  2842               	goto	l8031
   982                           	
   983  0042                     l5104:	
   984                           	line	78
   985                           	
   986  0042                     l8031:	
   987                           ;Sensor_PIR+CDS.c: 78: PIR->VRAD=ADRES/13;
   988  0042  300D               	movlw	low(0Dh)
   989  0043  00C6               	movwf	(?___awdiv)
   990  0044  3000               	movlw	high(0Dh)
   991  0045  00C7               	movwf	((?___awdiv))+1
   992  0046  081E               	movf	(30),w	;volatile
   993  0047  00CF               	movwf	(??_PIR_Main+0)+0
   994  0048  01D0               	clrf	(??_PIR_Main+0)+0+1
   995  0049  084F               	movf	0+(??_PIR_Main+0)+0,w
   996  004A  00C8               	movwf	0+(?___awdiv)+02h
   997  004B  0850               	movf	1+(??_PIR_Main+0)+0,w
   998  004C  00C9               	movwf	1+(?___awdiv)+02h
   999  004D  118A  260B  118A   	fcall	___awdiv
  1000  0050  1283               	bcf	status, 5	;RP0=0, select bank0
  1001  0051  1303               	bcf	status, 6	;RP1=0, select bank0
  1002  0052  0846               	movf	(0+(?___awdiv)),w
  1003  0053  00D1               	movwf	(??_PIR_Main+2)+0
  1004  0054  0822               	movf	(_PIR),w
  1005  0055  3E01               	addlw	01h
  1006  0056  0084               	movwf	fsr0
  1007  0057  0851               	movf	(??_PIR_Main+2)+0,w
  1008  0058  1383               	bcf	status, 7	;select IRP bank0
  1009  0059  0080               	movwf	indf
  1010                           	line	81
  1011                           	
  1012  005A                     l8033:	
  1013                           ;Sensor_PIR+CDS.c: 81: ADCON0=0x0d;
  1014  005A  300D               	movlw	(0Dh)
  1015  005B  009F               	movwf	(31)	;volatile
  1016                           	line	83
  1017                           	
  1018  005C                     l8035:	
  1019                           ;Sensor_PIR+CDS.c: 83: GO_nDONE=1;
  1020  005C  149F               	bsf	(249/8),(249)&7
  1021                           	line	84
  1022                           ;Sensor_PIR+CDS.c: 84: while(GO_nDONE);
  1023  005D  285E               	goto	l5105
  1024                           	
  1025  005E                     l5106:	
  1026                           	
  1027  005E                     l5105:	
  1028  005E  189F               	btfsc	(249/8),(249)&7
  1029  005F  2861               	goto	u3911
  1030  0060  2862               	goto	u3910
  1031  0061                     u3911:
  1032  0061  285E               	goto	l5105
  1033  0062                     u3910:
  1034  0062  2863               	goto	l8037
  1035                           	
  1036  0063                     l5107:	
  1037                           	line	85
  1038                           	
  1039  0063                     l8037:	
  1040                           ;Sensor_PIR+CDS.c: 85: PIR->SignalAD=ADRES;
  1041  0063  081E               	movf	(30),w	;volatile
  1042  0064  00CF               	movwf	(??_PIR_Main+0)+0
  1043  0065  0822               	movf	(_PIR),w
  1044  0066  3E03               	addlw	03h
  1045  0067  0084               	movwf	fsr0
  1046  0068  084F               	movf	(??_PIR_Main+0)+0,w
  1047  0069  1383               	bcf	status, 7	;select IRP bank0
  1048  006A  0080               	movwf	indf
  1049                           	line	87
  1050                           ;Sensor_PIR+CDS.c: 87: PIR->GO_nDONE=0;
  1051  006B  0822               	movf	(_PIR),w
  1052  006C  0084               	movwf	fsr0
  1053  006D  1080               	bcf	indf,1
  1054                           	line	88
  1055                           ;Sensor_PIR+CDS.c: 88: PIR->GO=1;
  1056  006E  0822               	movf	(_PIR),w
  1057  006F  3E13               	addlw	013h
  1058  0070  0084               	movwf	fsr0
  1059  0071  1400               	bsf	indf,0
  1060                           	line	91
  1061                           	
  1062  0072                     l8039:	
  1063                           ;Sensor_PIR+CDS.c: 91: if(PIR->VRAD==0)
  1064  0072  0822               	movf	(_PIR),w
  1065  0073  3E01               	addlw	01h
  1066  0074  0084               	movwf	fsr0
  1067  0075  0880               	movf	indf,f
  1068  0076  1D03               	skipz
  1069  0077  2879               	goto	u3921
  1070  0078  287A               	goto	u3920
  1071  0079                     u3921:
  1072  0079  2883               	goto	l8043
  1073  007A                     u3920:
  1074                           	line	92
  1075                           	
  1076  007A                     l8041:	
  1077                           ;Sensor_PIR+CDS.c: 92: PIR->CloseTimeValue=150;
  1078  007A  0822               	movf	(_PIR),w
  1079  007B  3E18               	addlw	018h
  1080  007C  0084               	movwf	fsr0
  1081  007D  3096               	movlw	low(096h)
  1082  007E  0080               	movwf	indf
  1083  007F  0A84               	incf	fsr0,f
  1084  0080  3000               	movlw	high(096h)
  1085  0081  0080               	movwf	indf
  1086  0082  28A0               	goto	l8045
  1087                           	line	93
  1088                           	
  1089  0083                     l5108:	
  1090                           	line	94
  1091                           	
  1092  0083                     l8043:	
  1093                           ;Sensor_PIR+CDS.c: 93: else
  1094                           ;Sensor_PIR+CDS.c: 94: PIR->CloseTimeValue=350*PIR->VRAD;
  1095  0083  0822               	movf	(_PIR),w
  1096  0084  3E01               	addlw	01h
  1097  0085  0084               	movwf	fsr0
  1098  0086  0800               	movf	indf,w
  1099  0087  00CF               	movwf	(??_PIR_Main+0)+0
  1100  0088  01D0               	clrf	(??_PIR_Main+0)+0+1
  1101  0089  084F               	movf	0+(??_PIR_Main+0)+0,w
  1102  008A  00C6               	movwf	(?___wmul)
  1103  008B  0850               	movf	1+(??_PIR_Main+0)+0,w
  1104  008C  00C7               	movwf	(?___wmul+1)
  1105  008D  305E               	movlw	low(015Eh)
  1106  008E  00C8               	movwf	0+(?___wmul)+02h
  1107  008F  3001               	movlw	high(015Eh)
  1108  0090  00C9               	movwf	(0+(?___wmul)+02h)+1
  1109  0091  158A  270F  118A   	fcall	___wmul
  1110  0094  1283               	bcf	status, 5	;RP0=0, select bank0
  1111  0095  1303               	bcf	status, 6	;RP1=0, select bank0
  1112  0096  0822               	movf	(_PIR),w
  1113  0097  3E18               	addlw	018h
  1114  0098  0084               	movwf	fsr0
  1115  0099  0846               	movf	(0+(?___wmul)),w
  1116  009A  1383               	bcf	status, 7	;select IRP bank0
  1117  009B  0080               	movwf	indf
  1118  009C  0A84               	incf	fsr0,f
  1119  009D  0847               	movf	(1+(?___wmul)),w
  1120  009E  0080               	movwf	indf
  1121  009F  28A0               	goto	l8045
  1122                           	
  1123  00A0                     l5109:	
  1124                           	line	97
  1125                           	
  1126  00A0                     l8045:	
  1127                           ;Sensor_PIR+CDS.c: 97: PIR->TenAverage[PIR->ADCount]=PIR->SignalAD;
  1128  00A0  0822               	movf	(_PIR),w
  1129  00A1  3E03               	addlw	03h
  1130  00A2  0084               	movwf	fsr0
  1131  00A3  0800               	movf	indf,w
  1132  00A4  00CF               	movwf	(??_PIR_Main+0)+0
  1133  00A5  0822               	movf	(_PIR),w
  1134  00A6  3E05               	addlw	05h
  1135  00A7  0084               	movwf	fsr0
  1136  00A8  0800               	movf	indf,w
  1137  00A9  3E07               	addlw	07h
  1138  00AA  0722               	addwf	(_PIR),w
  1139  00AB  00D0               	movwf	(??_PIR_Main+1)+0
  1140  00AC  0850               	movf	0+(??_PIR_Main+1)+0,w
  1141  00AD  0084               	movwf	fsr0
  1142  00AE  084F               	movf	(??_PIR_Main+0)+0,w
  1143  00AF  0080               	movwf	indf
  1144                           	line	98
  1145                           	
  1146  00B0                     l8047:	
  1147                           ;Sensor_PIR+CDS.c: 98: for(i=0;i<=9;i++)
  1148  00B0  01D3               	clrf	(PIR_Main@i)
  1149                           	
  1150  00B1                     l8049:	
  1151  00B1  300A               	movlw	(0Ah)
  1152  00B2  0253               	subwf	(PIR_Main@i),w
  1153  00B3  1C03               	skipc
  1154  00B4  28B6               	goto	u3931
  1155  00B5  28B7               	goto	u3930
  1156  00B6                     u3931:
  1157  00B6  28B9               	goto	l8053
  1158  00B7                     u3930:
  1159  00B7  28DB               	goto	l8059
  1160                           	
  1161  00B8                     l8051:	
  1162  00B8  28DB               	goto	l8059
  1163                           	line	99
  1164                           	
  1165  00B9                     l5110:	
  1166                           	
  1167  00B9                     l8053:	
  1168                           ;Sensor_PIR+CDS.c: 99: PIR->TenAverageValue+=PIR->TenAverage[i];
  1169  00B9  0853               	movf	(PIR_Main@i),w
  1170  00BA  3E07               	addlw	07h
  1171  00BB  0722               	addwf	(_PIR),w
  1172  00BC  00CF               	movwf	(??_PIR_Main+0)+0
  1173  00BD  084F               	movf	0+(??_PIR_Main+0)+0,w
  1174  00BE  0084               	movwf	fsr0
  1175  00BF  0800               	movf	indf,w
  1176  00C0  00D0               	movwf	(??_PIR_Main+1)+0
  1177  00C1  01D1               	clrf	(??_PIR_Main+1)+0+1
  1178  00C2  0822               	movf	(_PIR),w
  1179  00C3  3E11               	addlw	011h
  1180  00C4  0084               	movwf	fsr0
  1181  00C5  0850               	movf	0+(??_PIR_Main+1)+0,w
  1182  00C6  0780               	addwf	indf,f
  1183  00C7  0F84               	incfsz	fsr0,f
  1184  00C8  0800               	movf	indf,w
  1185  00C9  1803               	skipnc
  1186  00CA  0A00               	incf	indf,w
  1187  00CB  00FF               	movwf	btemp+1
  1188  00CC  0851               	movf	1+(??_PIR_Main+1)+0,w
  1189  00CD  077F               	addwf	btemp+1,w
  1190  00CE  0080               	movwf	indf
  1191  00CF  0384               	decf	fsr0,f
  1192                           	line	98
  1193                           	
  1194  00D0                     l8055:	
  1195  00D0  3001               	movlw	(01h)
  1196  00D1  00CF               	movwf	(??_PIR_Main+0)+0
  1197  00D2  084F               	movf	(??_PIR_Main+0)+0,w
  1198  00D3  07D3               	addwf	(PIR_Main@i),f
  1199                           	
  1200  00D4                     l8057:	
  1201  00D4  300A               	movlw	(0Ah)
  1202  00D5  0253               	subwf	(PIR_Main@i),w
  1203  00D6  1C03               	skipc
  1204  00D7  28D9               	goto	u3941
  1205  00D8  28DA               	goto	u3940
  1206  00D9                     u3941:
  1207  00D9  28B9               	goto	l8053
  1208  00DA                     u3940:
  1209  00DA  28DB               	goto	l8059
  1210                           	
  1211  00DB                     l5111:	
  1212                           	line	100
  1213                           	
  1214  00DB                     l8059:	
  1215                           ;Sensor_PIR+CDS.c: 100: PIR->CenterVoltage=PIR->TenAverageValue/10;
  1216  00DB  300A               	movlw	low(0Ah)
  1217  00DC  00C6               	movwf	(?___lwdiv)
  1218  00DD  3000               	movlw	high(0Ah)
  1219  00DE  00C7               	movwf	((?___lwdiv))+1
  1220  00DF  0822               	movf	(_PIR),w
  1221  00E0  3E11               	addlw	011h
  1222  00E1  0084               	movwf	fsr0
  1223  00E2  0800               	movf	indf,w
  1224  00E3  00C8               	movwf	0+(?___lwdiv)+02h
  1225  00E4  0A84               	incf	fsr0,f
  1226  00E5  0800               	movf	indf,w
  1227  00E6  00C9               	movwf	1+(?___lwdiv)+02h
  1228  00E7  118A  2795  118A   	fcall	___lwdiv
  1229  00EA  1283               	bcf	status, 5	;RP0=0, select bank0
  1230  00EB  1303               	bcf	status, 6	;RP1=0, select bank0
  1231  00EC  0846               	movf	(0+(?___lwdiv)),w
  1232  00ED  00CF               	movwf	(??_PIR_Main+0)+0
  1233  00EE  0822               	movf	(_PIR),w
  1234  00EF  3E06               	addlw	06h
  1235  00F0  0084               	movwf	fsr0
  1236  00F1  084F               	movf	(??_PIR_Main+0)+0,w
  1237  00F2  1383               	bcf	status, 7	;select IRP bank0
  1238  00F3  0080               	movwf	indf
  1239                           	line	101
  1240                           	
  1241  00F4                     l8061:	
  1242                           ;Sensor_PIR+CDS.c: 101: PIR->TenAverageValue=0;
  1243  00F4  0822               	movf	(_PIR),w
  1244  00F5  3E11               	addlw	011h
  1245  00F6  0084               	movwf	fsr0
  1246  00F7  3000               	movlw	low(0)
  1247  00F8  0080               	movwf	indf
  1248  00F9  0A84               	incf	fsr0,f
  1249  00FA  3000               	movlw	high(0)
  1250  00FB  0080               	movwf	indf
  1251                           	line	103
  1252                           	
  1253  00FC                     l8063:	
  1254                           ;Sensor_PIR+CDS.c: 103: if(PIR->ADCount<10)
  1255  00FC  0822               	movf	(_PIR),w
  1256  00FD  3E05               	addlw	05h
  1257  00FE  0084               	movwf	fsr0
  1258  00FF  300A               	movlw	(0Ah)
  1259  0100  0200               	subwf	indf,w
  1260  0101  1803               	skipnc
  1261  0102  2904               	goto	u3951
  1262  0103  2905               	goto	u3950
  1263  0104                     u3951:
  1264  0104  290D               	goto	l8067
  1265  0105                     u3950:
  1266                           	line	104
  1267                           	
  1268  0105                     l8065:	
  1269                           ;Sensor_PIR+CDS.c: 104: PIR->ADCount++;
  1270  0105  3001               	movlw	(01h)
  1271  0106  00CF               	movwf	(??_PIR_Main+0)+0
  1272  0107  0822               	movf	(_PIR),w
  1273  0108  3E05               	addlw	05h
  1274  0109  0084               	movwf	fsr0
  1275  010A  084F               	movf	(??_PIR_Main+0)+0,w
  1276  010B  0780               	addwf	indf,f
  1277  010C  2912               	goto	l8069
  1278                           	line	105
  1279                           	
  1280  010D                     l5112:	
  1281                           	line	106
  1282                           	
  1283  010D                     l8067:	
  1284                           ;Sensor_PIR+CDS.c: 105: else
  1285                           ;Sensor_PIR+CDS.c: 106: PIR->ADCount=0;
  1286  010D  0822               	movf	(_PIR),w
  1287  010E  3E05               	addlw	05h
  1288  010F  0084               	movwf	fsr0
  1289  0110  0180               	clrf	indf
  1290  0111  2912               	goto	l8069
  1291                           	
  1292  0112                     l5113:	
  1293                           	line	108
  1294                           	
  1295  0112                     l8069:	
  1296                           ;Sensor_PIR+CDS.c: 108: PIR_Switch();
  1297  0112  118A  2743  118A   	fcall	_PIR_Switch
  1298                           	line	110
  1299                           	
  1300  0115                     l8071:	
  1301                           ;Sensor_PIR+CDS.c: 110: if(PIR->OK==1)
  1302  0115  1283               	bcf	status, 5	;RP0=0, select bank0
  1303  0116  1303               	bcf	status, 6	;RP1=0, select bank0
  1304  0117  0822               	movf	(_PIR),w
  1305  0118  3E13               	addlw	013h
  1306  0119  0084               	movwf	fsr0
  1307  011A  1383               	bcf	status, 7	;select IRP bank0
  1308  011B  1C80               	btfss	indf,1
  1309  011C  291E               	goto	u3961
  1310  011D  291F               	goto	u3960
  1311  011E                     u3961:
  1312  011E  2AF9               	goto	l8145
  1313  011F                     u3960:
  1314                           	line	112
  1315                           	
  1316  011F                     l8073:	
  1317                           ;Sensor_PIR+CDS.c: 111: {
  1318                           ;Sensor_PIR+CDS.c: 112: if(PIR->GO==1)
  1319  011F  0822               	movf	(_PIR),w
  1320  0120  3E13               	addlw	013h
  1321  0121  0084               	movwf	fsr0
  1322  0122  1C00               	btfss	indf,0
  1323  0123  2925               	goto	u3971
  1324  0124  2926               	goto	u3970
  1325  0125                     u3971:
  1326  0125  2B2A               	goto	l5145
  1327  0126                     u3970:
  1328                           	line	114
  1329                           	
  1330  0126                     l8075:	
  1331                           ;Sensor_PIR+CDS.c: 113: {
  1332                           ;Sensor_PIR+CDS.c: 114: PIR->GO=0;
  1333  0126  0822               	movf	(_PIR),w
  1334  0127  3E13               	addlw	013h
  1335  0128  0084               	movwf	fsr0
  1336  0129  1000               	bcf	indf,0
  1337                           	line	116
  1338                           ;Sensor_PIR+CDS.c: 116: if(PIR->Switch==1)
  1339  012A  0822               	movf	(_PIR),w
  1340  012B  3E13               	addlw	013h
  1341  012C  0084               	movwf	fsr0
  1342  012D  1D00               	btfss	indf,2
  1343  012E  2930               	goto	u3981
  1344  012F  2931               	goto	u3980
  1345  0130                     u3981:
  1346  0130  2B2A               	goto	l5145
  1347  0131                     u3980:
  1348                           	line	119
  1349                           	
  1350  0131                     l8077:	
  1351                           ;Sensor_PIR+CDS.c: 117: {
  1352                           ;Sensor_PIR+CDS.c: 119: if(PIR->RangeTime<100)
  1353  0131  0822               	movf	(_PIR),w
  1354  0132  3E1B               	addlw	01Bh
  1355  0133  0084               	movwf	fsr0
  1356  0134  3064               	movlw	(064h)
  1357  0135  0200               	subwf	indf,w
  1358  0136  1803               	skipnc
  1359  0137  2939               	goto	u3991
  1360  0138  293A               	goto	u3990
  1361  0139                     u3991:
  1362  0139  2942               	goto	l8081
  1363  013A                     u3990:
  1364                           	line	120
  1365                           	
  1366  013A                     l8079:	
  1367                           ;Sensor_PIR+CDS.c: 120: PIR->RangeTime++;
  1368  013A  3001               	movlw	(01h)
  1369  013B  00CF               	movwf	(??_PIR_Main+0)+0
  1370  013C  0822               	movf	(_PIR),w
  1371  013D  3E1B               	addlw	01Bh
  1372  013E  0084               	movwf	fsr0
  1373  013F  084F               	movf	(??_PIR_Main+0)+0,w
  1374  0140  0780               	addwf	indf,f
  1375  0141  29D5               	goto	l8109
  1376                           	line	121
  1377                           	
  1378  0142                     l5117:	
  1379                           	line	123
  1380                           	
  1381  0142                     l8081:	
  1382                           ;Sensor_PIR+CDS.c: 121: else
  1383                           ;Sensor_PIR+CDS.c: 122: {
  1384                           ;Sensor_PIR+CDS.c: 123: PIR->RangeTime=0;
  1385  0142  0822               	movf	(_PIR),w
  1386  0143  3E1B               	addlw	01Bh
  1387  0144  0084               	movwf	fsr0
  1388  0145  0180               	clrf	indf
  1389                           	line	124
  1390                           ;Sensor_PIR+CDS.c: 124: if(PIR->RangeCount>=90)
  1391  0146  0822               	movf	(_PIR),w
  1392  0147  3E1D               	addlw	01Dh
  1393  0148  0084               	movwf	fsr0
  1394  0149  305A               	movlw	(05Ah)
  1395  014A  0200               	subwf	indf,w
  1396  014B  1C03               	skipc
  1397  014C  294E               	goto	u4001
  1398  014D  294F               	goto	u4000
  1399  014E                     u4001:
  1400  014E  297F               	goto	l8091
  1401  014F                     u4000:
  1402                           	line	126
  1403                           	
  1404  014F                     l8083:	
  1405                           ;Sensor_PIR+CDS.c: 125: {
  1406                           ;Sensor_PIR+CDS.c: 126: PIR->RangeCount=0;
  1407  014F  0822               	movf	(_PIR),w
  1408  0150  3E1D               	addlw	01Dh
  1409  0151  0084               	movwf	fsr0
  1410  0152  0180               	clrf	indf
  1411                           	line	127
  1412                           ;Sensor_PIR+CDS.c: 127: PIR->RangeTime1=0;
  1413  0153  0822               	movf	(_PIR),w
  1414  0154  3E1C               	addlw	01Ch
  1415  0155  0084               	movwf	fsr0
  1416  0156  0180               	clrf	indf
  1417                           	line	128
  1418                           ;Sensor_PIR+CDS.c: 128: PIR->RangeCount1=0;
  1419  0157  0822               	movf	(_PIR),w
  1420  0158  3E1F               	addlw	01Fh
  1421  0159  0084               	movwf	fsr0
  1422  015A  0180               	clrf	indf
  1423                           	line	130
  1424                           ;Sensor_PIR+CDS.c: 130: if(PIR->RangeValue==8)
  1425  015B  0822               	movf	(_PIR),w
  1426  015C  3E1E               	addlw	01Eh
  1427  015D  0084               	movwf	fsr0
  1428  015E  0800               	movf	indf,w
  1429  015F  3A08               	xorlw	08h
  1430  0160  1D03               	skipz
  1431  0161  2963               	goto	u4011
  1432  0162  2964               	goto	u4010
  1433  0163                     u4011:
  1434  0163  296C               	goto	l8087
  1435  0164                     u4010:
  1436                           	line	131
  1437                           	
  1438  0164                     l8085:	
  1439                           ;Sensor_PIR+CDS.c: 131: PIR->RangeValue=25;
  1440  0164  3019               	movlw	(019h)
  1441  0165  00CF               	movwf	(??_PIR_Main+0)+0
  1442  0166  0822               	movf	(_PIR),w
  1443  0167  3E1E               	addlw	01Eh
  1444  0168  0084               	movwf	fsr0
  1445  0169  084F               	movf	(??_PIR_Main+0)+0,w
  1446  016A  0080               	movwf	indf
  1447  016B  29D5               	goto	l8109
  1448                           	line	132
  1449                           	
  1450  016C                     l5120:	
  1451                           	
  1452  016C                     l8087:	
  1453                           ;Sensor_PIR+CDS.c: 132: else if(PIR->RangeValue==25)
  1454  016C  0822               	movf	(_PIR),w
  1455  016D  3E1E               	addlw	01Eh
  1456  016E  0084               	movwf	fsr0
  1457  016F  0800               	movf	indf,w
  1458  0170  3A19               	xorlw	019h
  1459  0171  1D03               	skipz
  1460  0172  2974               	goto	u4021
  1461  0173  2975               	goto	u4020
  1462  0174                     u4021:
  1463  0174  29D5               	goto	l8109
  1464  0175                     u4020:
  1465                           	line	133
  1466                           	
  1467  0175                     l8089:	
  1468                           ;Sensor_PIR+CDS.c: 133: PIR->RangeValue=45;
  1469  0175  302D               	movlw	(02Dh)
  1470  0176  00CF               	movwf	(??_PIR_Main+0)+0
  1471  0177  0822               	movf	(_PIR),w
  1472  0178  3E1E               	addlw	01Eh
  1473  0179  0084               	movwf	fsr0
  1474  017A  084F               	movf	(??_PIR_Main+0)+0,w
  1475  017B  0080               	movwf	indf
  1476  017C  29D5               	goto	l8109
  1477                           	
  1478  017D                     l5122:	
  1479  017D  29D5               	goto	l8109
  1480                           	line	134
  1481                           	
  1482  017E                     l5121:	
  1483                           ;Sensor_PIR+CDS.c: 134: }
  1484  017E  29D5               	goto	l8109
  1485                           	line	135
  1486                           	
  1487  017F                     l5119:	
  1488                           	line	137
  1489                           	
  1490  017F                     l8091:	
  1491                           ;Sensor_PIR+CDS.c: 135: else
  1492                           ;Sensor_PIR+CDS.c: 136: {
  1493                           ;Sensor_PIR+CDS.c: 137: PIR->RangeCount1+=PIR->RangeCount;
  1494  017F  0822               	movf	(_PIR),w
  1495  0180  3E1D               	addlw	01Dh
  1496  0181  0084               	movwf	fsr0
  1497  0182  0800               	movf	indf,w
  1498  0183  00CF               	movwf	(??_PIR_Main+0)+0
  1499  0184  0822               	movf	(_PIR),w
  1500  0185  3E1F               	addlw	01Fh
  1501  0186  0084               	movwf	fsr0
  1502  0187  084F               	movf	(??_PIR_Main+0)+0,w
  1503  0188  0780               	addwf	indf,f
  1504                           	line	138
  1505                           	
  1506  0189                     l8093:	
  1507                           ;Sensor_PIR+CDS.c: 138: PIR->RangeCount=0;
  1508  0189  0822               	movf	(_PIR),w
  1509  018A  3E1D               	addlw	01Dh
  1510  018B  0084               	movwf	fsr0
  1511  018C  0180               	clrf	indf
  1512                           	line	140
  1513                           	
  1514  018D                     l8095:	
  1515                           ;Sensor_PIR+CDS.c: 140: if(PIR->RangeTime1<6)
  1516  018D  0822               	movf	(_PIR),w
  1517  018E  3E1C               	addlw	01Ch
  1518  018F  0084               	movwf	fsr0
  1519  0190  3006               	movlw	(06h)
  1520  0191  0200               	subwf	indf,w
  1521  0192  1803               	skipnc
  1522  0193  2995               	goto	u4031
  1523  0194  2996               	goto	u4030
  1524  0195                     u4031:
  1525  0195  299E               	goto	l8099
  1526  0196                     u4030:
  1527                           	line	141
  1528                           	
  1529  0196                     l8097:	
  1530                           ;Sensor_PIR+CDS.c: 141: PIR->RangeTime1++;
  1531  0196  3001               	movlw	(01h)
  1532  0197  00CF               	movwf	(??_PIR_Main+0)+0
  1533  0198  0822               	movf	(_PIR),w
  1534  0199  3E1C               	addlw	01Ch
  1535  019A  0084               	movwf	fsr0
  1536  019B  084F               	movf	(??_PIR_Main+0)+0,w
  1537  019C  0780               	addwf	indf,f
  1538  019D  29D5               	goto	l8109
  1539                           	line	142
  1540                           	
  1541  019E                     l5124:	
  1542                           	line	144
  1543                           	
  1544  019E                     l8099:	
  1545                           ;Sensor_PIR+CDS.c: 142: else
  1546                           ;Sensor_PIR+CDS.c: 143: {
  1547                           ;Sensor_PIR+CDS.c: 144: PIR->RangeTime1=0;
  1548  019E  0822               	movf	(_PIR),w
  1549  019F  3E1C               	addlw	01Ch
  1550  01A0  0084               	movwf	fsr0
  1551  01A1  0180               	clrf	indf
  1552                           	line	145
  1553                           ;Sensor_PIR+CDS.c: 145: if(PIR->RangeCount1<=10)
  1554  01A2  0822               	movf	(_PIR),w
  1555  01A3  3E1F               	addlw	01Fh
  1556  01A4  0084               	movwf	fsr0
  1557  01A5  300B               	movlw	(0Bh)
  1558  01A6  0200               	subwf	indf,w
  1559  01A7  1803               	skipnc
  1560  01A8  29AA               	goto	u4041
  1561  01A9  29AB               	goto	u4040
  1562  01AA                     u4041:
  1563  01AA  29CE               	goto	l5126
  1564  01AB                     u4040:
  1565                           	line	147
  1566                           	
  1567  01AB                     l8101:	
  1568                           ;Sensor_PIR+CDS.c: 146: {
  1569                           ;Sensor_PIR+CDS.c: 147: if(PIR->RangeValue==45)
  1570  01AB  0822               	movf	(_PIR),w
  1571  01AC  3E1E               	addlw	01Eh
  1572  01AD  0084               	movwf	fsr0
  1573  01AE  0800               	movf	indf,w
  1574  01AF  3A2D               	xorlw	02Dh
  1575  01B0  1D03               	skipz
  1576  01B1  29B3               	goto	u4051
  1577  01B2  29B4               	goto	u4050
  1578  01B3                     u4051:
  1579  01B3  29BC               	goto	l8105
  1580  01B4                     u4050:
  1581                           	line	148
  1582                           	
  1583  01B4                     l8103:	
  1584                           ;Sensor_PIR+CDS.c: 148: PIR->RangeValue=25;
  1585  01B4  3019               	movlw	(019h)
  1586  01B5  00CF               	movwf	(??_PIR_Main+0)+0
  1587  01B6  0822               	movf	(_PIR),w
  1588  01B7  3E1E               	addlw	01Eh
  1589  01B8  0084               	movwf	fsr0
  1590  01B9  084F               	movf	(??_PIR_Main+0)+0,w
  1591  01BA  0080               	movwf	indf
  1592  01BB  29CE               	goto	l5126
  1593                           	line	149
  1594                           	
  1595  01BC                     l5127:	
  1596                           	
  1597  01BC                     l8105:	
  1598                           ;Sensor_PIR+CDS.c: 149: else if(PIR->RangeValue==25)
  1599  01BC  0822               	movf	(_PIR),w
  1600  01BD  3E1E               	addlw	01Eh
  1601  01BE  0084               	movwf	fsr0
  1602  01BF  0800               	movf	indf,w
  1603  01C0  3A19               	xorlw	019h
  1604  01C1  1D03               	skipz
  1605  01C2  29C4               	goto	u4061
  1606  01C3  29C5               	goto	u4060
  1607  01C4                     u4061:
  1608  01C4  29CE               	goto	l5126
  1609  01C5                     u4060:
  1610                           	line	150
  1611                           	
  1612  01C5                     l8107:	
  1613                           ;Sensor_PIR+CDS.c: 150: PIR->RangeValue=8;
  1614  01C5  3008               	movlw	(08h)
  1615  01C6  00CF               	movwf	(??_PIR_Main+0)+0
  1616  01C7  0822               	movf	(_PIR),w
  1617  01C8  3E1E               	addlw	01Eh
  1618  01C9  0084               	movwf	fsr0
  1619  01CA  084F               	movf	(??_PIR_Main+0)+0,w
  1620  01CB  0080               	movwf	indf
  1621  01CC  29CE               	goto	l5126
  1622                           	
  1623  01CD                     l5129:	
  1624  01CD  29CE               	goto	l5126
  1625                           	line	151
  1626                           	
  1627  01CE                     l5128:	
  1628                           	
  1629  01CE                     l5126:	
  1630                           	line	152
  1631                           ;Sensor_PIR+CDS.c: 151: }
  1632                           ;Sensor_PIR+CDS.c: 152: PIR->RangeCount1=0;
  1633  01CE  0822               	movf	(_PIR),w
  1634  01CF  3E1F               	addlw	01Fh
  1635  01D0  0084               	movwf	fsr0
  1636  01D1  0180               	clrf	indf
  1637  01D2  29D5               	goto	l8109
  1638                           	line	153
  1639                           	
  1640  01D3                     l5125:	
  1641  01D3  29D5               	goto	l8109
  1642                           	line	154
  1643                           	
  1644  01D4                     l5123:	
  1645  01D4  29D5               	goto	l8109
  1646                           	line	155
  1647                           	
  1648  01D5                     l5118:	
  1649                           	line	159
  1650                           	
  1651  01D5                     l8109:	
  1652                           ;Sensor_PIR+CDS.c: 153: }
  1653                           ;Sensor_PIR+CDS.c: 154: }
  1654                           ;Sensor_PIR+CDS.c: 155: }
  1655                           ;Sensor_PIR+CDS.c: 159: if((PIR->SignalAD>=(PIR->CenterVoltage-PIR->RangeValue)) && (PIR
                                 ->SignalAD<=(PIR->CenterVoltage+PIR->RangeValue)))
  1656  01D5  0822               	movf	(_PIR),w
  1657  01D6  3E1E               	addlw	01Eh
  1658  01D7  0084               	movwf	fsr0
  1659  01D8  0800               	movf	indf,w
  1660  01D9  00CF               	movwf	(??_PIR_Main+0)+0
  1661  01DA  01D0               	clrf	(??_PIR_Main+0)+0+1
  1662  01DB  09CF               	comf	(??_PIR_Main+0)+0,f
  1663  01DC  09D0               	comf	(??_PIR_Main+0)+1,f
  1664  01DD  0ACF               	incf	(??_PIR_Main+0)+0,f
  1665  01DE  1903               	skipnz
  1666  01DF  0AD0               	incf	(??_PIR_Main+0)+1,f
  1667  01E0  0822               	movf	(_PIR),w
  1668  01E1  3E06               	addlw	06h
  1669  01E2  0084               	movwf	fsr0
  1670  01E3  0800               	movf	indf,w
  1671  01E4  074F               	addwf	0+(??_PIR_Main+0)+0,w
  1672  01E5  00D1               	movwf	(??_PIR_Main+2)+0
  1673  01E6  0850               	movf	1+(??_PIR_Main+0)+0,w
  1674  01E7  1803               	skipnc
  1675  01E8  0A50               	incf	1+(??_PIR_Main+0)+0,w
  1676  01E9  00D2               	movwf	((??_PIR_Main+2)+0)+1
  1677  01EA  0822               	movf	(_PIR),w
  1678  01EB  3E03               	addlw	03h
  1679  01EC  0084               	movwf	fsr0
  1680  01ED  0852               	movf	1+(??_PIR_Main+2)+0,w
  1681  01EE  3A80               	xorlw	80h
  1682  01EF  3C80               	sublw	080h
  1683  01F0  1D03               	skipz
  1684  01F1  29F4               	goto	u4075
  1685  01F2  0851               	movf	0+(??_PIR_Main+2)+0,w
  1686  01F3  0200               	subwf	indf,w
  1687  01F4                     u4075:
  1688                           
  1689  01F4  1C03               	skipc
  1690  01F5  29F7               	goto	u4071
  1691  01F6  29F8               	goto	u4070
  1692  01F7                     u4071:
  1693  01F7  2A6A               	goto	l8127
  1694  01F8                     u4070:
  1695                           	
  1696  01F8                     l8111:	
  1697  01F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1698  01F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1699  01FA  0822               	movf	(_PIR),w
  1700  01FB  3E1E               	addlw	01Eh
  1701  01FC  0084               	movwf	fsr
  1702  01FD  1383               	bcf	status, 7	;select IRP bank0
  1703  01FE  0800               	movf	indf,w
  1704  01FF  00CF               	movwf	(??_PIR_Main+0)+0
  1705  0200  0822               	movf	(_PIR),w
  1706  0201  3E06               	addlw	06h
  1707  0202  0084               	movwf	fsr0
  1708  0203  0800               	movf	indf,w
  1709  0204  074F               	addwf	(??_PIR_Main+0)+0,w
  1710  0205  00D0               	movwf	(??_PIR_Main+1)+0
  1711  0206  01D1               	clrf	(??_PIR_Main+1)+0+1
  1712  0207  0DD1               	rlf	1+(??_PIR_Main+1)+0,f
  1713                           	
  1714  0208  0822               	movf	(_PIR),w
  1715  0209  3E03               	addlw	03h
  1716  020A  0084               	movwf	fsr0
  1717  020B  0851               	movf	1+(??_PIR_Main+1)+0,w
  1718  020C  3A80               	xorlw	80h
  1719  020D  00D2               	movwf	(??_PIR_Main+3)+0
  1720  020E  3080               	movlw	80h
  1721  020F  0252               	subwf	(??_PIR_Main+3)+0,w
  1722  0210  1D03               	skipz
  1723  0211  2A14               	goto	u4085
  1724  0212  0800               	movf	indf,w
  1725  0213  0250               	subwf	0+(??_PIR_Main+1)+0,w
  1726  0214                     u4085:
  1727                           
  1728  0214  1C03               	skipc
  1729  0215  2A17               	goto	u4081
  1730  0216  2A18               	goto	u4080
  1731  0217                     u4081:
  1732  0217  2A6A               	goto	l8127
  1733  0218                     u4080:
  1734                           	line	161
  1735                           	
  1736  0218                     l8113:	
  1737                           ;Sensor_PIR+CDS.c: 160: {
  1738                           ;Sensor_PIR+CDS.c: 161: PIR->Count=0;
  1739  0218  1283               	bcf	status, 5	;RP0=0, select bank0
  1740  0219  1303               	bcf	status, 6	;RP1=0, select bank0
  1741  021A  0822               	movf	(_PIR),w
  1742  021B  3E14               	addlw	014h
  1743  021C  0084               	movwf	fsr0
  1744  021D  3000               	movlw	low(0)
  1745  021E  1383               	bcf	status, 7	;select IRP bank0
  1746  021F  0080               	movwf	indf
  1747  0220  0A84               	incf	fsr0,f
  1748  0221  3000               	movlw	high(0)
  1749  0222  0080               	movwf	indf
  1750                           	line	162
  1751                           	
  1752  0223                     l8115:	
  1753                           ;Sensor_PIR+CDS.c: 162: LED_Setting(0);
  1754  0223  3000               	movlw	(0)
  1755  0224  158A  276F  118A   	fcall	_LED_Setting
  1756                           	line	164
  1757                           	
  1758  0227                     l8117:	
  1759                           ;Sensor_PIR+CDS.c: 164: PIR->CloseTime++;
  1760  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  1761  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  1762  0229  0822               	movf	(_PIR),w
  1763  022A  3E16               	addlw	016h
  1764  022B  0084               	movwf	fsr0
  1765  022C  3001               	movlw	01h
  1766  022D  1383               	bcf	status, 7	;select IRP bank0
  1767  022E  0780               	addwf	indf,f
  1768  022F  0A84               	incf	fsr0,f
  1769  0230  1803               	skipnc
  1770  0231  0A80               	incf	indf,f
  1771                           	line	165
  1772                           	
  1773  0232                     l8119:	
  1774                           ;Sensor_PIR+CDS.c: 165: if(PIR->CloseTime == PIR->CloseTimeValue)
  1775  0232  0822               	movf	(_PIR),w
  1776  0233  3E18               	addlw	018h
  1777  0234  0084               	movwf	fsr0
  1778  0235  0800               	movf	indf,w
  1779  0236  00CF               	movwf	(??_PIR_Main+0)+0+0
  1780  0237  0A84               	incf	fsr0,f
  1781  0238  0800               	movf	indf,w
  1782  0239  00D0               	movwf	(??_PIR_Main+0)+0+1
  1783  023A  0822               	movf	(_PIR),w
  1784  023B  3E16               	addlw	016h
  1785  023C  0084               	movwf	fsr0
  1786  023D  0800               	movf	indf,w
  1787  023E  00D1               	movwf	(??_PIR_Main+2)+0+0
  1788  023F  0A84               	incf	fsr0,f
  1789  0240  0800               	movf	indf,w
  1790  0241  00D2               	movwf	(??_PIR_Main+2)+0+1
  1791  0242  0850               	movf	1+(??_PIR_Main+0)+0,w
  1792  0243  0652               	xorwf	1+(??_PIR_Main+2)+0,w
  1793  0244  1D03               	skipz
  1794  0245  2A48               	goto	u4095
  1795  0246  084F               	movf	0+(??_PIR_Main+0)+0,w
  1796  0247  0651               	xorwf	0+(??_PIR_Main+2)+0,w
  1797  0248                     u4095:
  1798                           
  1799  0248  1D03               	skipz
  1800  0249  2A4B               	goto	u4091
  1801  024A  2A4C               	goto	u4090
  1802  024B                     u4091:
  1803  024B  2B2A               	goto	l5145
  1804  024C                     u4090:
  1805                           	line	167
  1806                           	
  1807  024C                     l8121:	
  1808                           ;Sensor_PIR+CDS.c: 166: {
  1809                           ;Sensor_PIR+CDS.c: 167: PIR->CloseTime=0;
  1810  024C  0822               	movf	(_PIR),w
  1811  024D  3E16               	addlw	016h
  1812  024E  0084               	movwf	fsr0
  1813  024F  3000               	movlw	low(0)
  1814  0250  0080               	movwf	indf
  1815  0251  0A84               	incf	fsr0,f
  1816  0252  3000               	movlw	high(0)
  1817  0253  0080               	movwf	indf
  1818                           	line	168
  1819                           ;Sensor_PIR+CDS.c: 168: if(Dimmer->Lights==1 || Dimmer->Phase2 == 1) Dimmer_Control(0);
  1820  0254  0855               	movf	(_Dimmer),w
  1821  0255  3E0A               	addlw	0Ah
  1822  0256  0084               	movwf	fsr0
  1823  0257  1880               	btfsc	indf,1
  1824  0258  2A5A               	goto	u4101
  1825  0259  2A5B               	goto	u4100
  1826  025A                     u4101:
  1827  025A  2A63               	goto	l8125
  1828  025B                     u4100:
  1829                           	
  1830  025B                     l8123:	
  1831  025B  0855               	movf	(_Dimmer),w
  1832  025C  3E0A               	addlw	0Ah
  1833  025D  0084               	movwf	fsr0
  1834  025E  1D80               	btfss	indf,3
  1835  025F  2A61               	goto	u4111
  1836  0260  2A62               	goto	u4110
  1837  0261                     u4111:
  1838  0261  2B2A               	goto	l5145
  1839  0262                     u4110:
  1840  0262  2A63               	goto	l8125
  1841                           	
  1842  0263                     l5134:	
  1843                           	
  1844  0263                     l8125:	
  1845  0263  3000               	movlw	(0)
  1846  0264  118A  2681  118A   	fcall	_Dimmer_Control
  1847  0267  2B2A               	goto	l5145
  1848                           	
  1849  0268                     l5132:	
  1850  0268  2B2A               	goto	l5145
  1851                           	line	169
  1852                           	
  1853  0269                     l5131:	
  1854                           	line	171
  1855                           ;Sensor_PIR+CDS.c: 169: }
  1856                           ;Sensor_PIR+CDS.c: 171: }
  1857  0269  2B2A               	goto	l5145
  1858                           	line	172
  1859                           	
  1860  026A                     l5130:	
  1861                           	line	174
  1862                           	
  1863  026A                     l8127:	
  1864                           ;Sensor_PIR+CDS.c: 172: else
  1865                           ;Sensor_PIR+CDS.c: 173: {
  1866                           ;Sensor_PIR+CDS.c: 174: PIR->RangeCount++;
  1867  026A  3001               	movlw	(01h)
  1868  026B  1283               	bcf	status, 5	;RP0=0, select bank0
  1869  026C  1303               	bcf	status, 6	;RP1=0, select bank0
  1870  026D  00CF               	movwf	(??_PIR_Main+0)+0
  1871  026E  0822               	movf	(_PIR),w
  1872  026F  3E1D               	addlw	01Dh
  1873  0270  0084               	movwf	fsr0
  1874  0271  084F               	movf	(??_PIR_Main+0)+0,w
  1875  0272  1383               	bcf	status, 7	;select IRP bank0
  1876  0273  0780               	addwf	indf,f
  1877                           	line	175
  1878                           	
  1879  0274                     l8129:	
  1880                           ;Sensor_PIR+CDS.c: 175: if(PIR->Count<1)
  1881  0274  0822               	movf	(_PIR),w
  1882  0275  3E14               	addlw	014h
  1883  0276  0084               	movwf	fsr0
  1884  0277  0800               	movf	indf,w
  1885  0278  0A84               	incf	fsr0,f
  1886  0279  0400               	iorwf	indf,w
  1887  027A  1D03               	skipz
  1888  027B  2A7D               	goto	u4121
  1889  027C  2A7E               	goto	u4120
  1890  027D                     u4121:
  1891  027D  2A87               	goto	l8133
  1892  027E                     u4120:
  1893                           	line	176
  1894                           	
  1895  027E                     l8131:	
  1896                           ;Sensor_PIR+CDS.c: 176: PIR->Count++;
  1897  027E  0822               	movf	(_PIR),w
  1898  027F  3E14               	addlw	014h
  1899  0280  0084               	movwf	fsr0
  1900  0281  3001               	movlw	01h
  1901  0282  0780               	addwf	indf,f
  1902  0283  0A84               	incf	fsr0,f
  1903  0284  1803               	skipnc
  1904  0285  0A80               	incf	indf,f
  1905  0286  2AA4               	goto	l8137
  1906                           	line	177
  1907                           	
  1908  0287                     l5136:	
  1909                           	line	179
  1910                           	
  1911  0287                     l8133:	
  1912                           ;Sensor_PIR+CDS.c: 177: else
  1913                           ;Sensor_PIR+CDS.c: 178: {
  1914                           ;Sensor_PIR+CDS.c: 179: PIR->Count=0;
  1915  0287  0822               	movf	(_PIR),w
  1916  0288  3E14               	addlw	014h
  1917  0289  0084               	movwf	fsr0
  1918  028A  3000               	movlw	low(0)
  1919  028B  0080               	movwf	indf
  1920  028C  0A84               	incf	fsr0,f
  1921  028D  3000               	movlw	high(0)
  1922  028E  0080               	movwf	indf
  1923                           	line	180
  1924                           ;Sensor_PIR+CDS.c: 180: PIR->CloseTime=0;
  1925  028F  0822               	movf	(_PIR),w
  1926  0290  3E16               	addlw	016h
  1927  0291  0084               	movwf	fsr0
  1928  0292  3000               	movlw	low(0)
  1929  0293  0080               	movwf	indf
  1930  0294  0A84               	incf	fsr0,f
  1931  0295  3000               	movlw	high(0)
  1932  0296  0080               	movwf	indf
  1933                           	line	182
  1934                           ;Sensor_PIR+CDS.c: 182: if(Dimmer->Lights==0) Dimmer_Control(1);
  1935  0297  0855               	movf	(_Dimmer),w
  1936  0298  3E0A               	addlw	0Ah
  1937  0299  0084               	movwf	fsr0
  1938  029A  1880               	btfsc	indf,1
  1939  029B  2A9D               	goto	u4131
  1940  029C  2A9E               	goto	u4130
  1941  029D                     u4131:
  1942  029D  2AA4               	goto	l8137
  1943  029E                     u4130:
  1944                           	
  1945  029E                     l8135:	
  1946  029E  3001               	movlw	(01h)
  1947  029F  118A  2681  118A   	fcall	_Dimmer_Control
  1948  02A2  2AA4               	goto	l8137
  1949                           	
  1950  02A3                     l5138:	
  1951  02A3  2AA4               	goto	l8137
  1952                           	line	184
  1953                           	
  1954  02A4                     l5137:	
  1955                           	line	186
  1956                           	
  1957  02A4                     l8137:	
  1958                           ;Sensor_PIR+CDS.c: 184: }
  1959                           ;Sensor_PIR+CDS.c: 186: if(PIR->SignalAD<(PIR->CenterVoltage-PIR->RangeValue)) LED_Setti
                                 ng(1); else if(PIR->SignalAD>(PIR->CenterVoltage+PIR->RangeValue)) LED_Setting(2);
  1960  02A4  1283               	bcf	status, 5	;RP0=0, select bank0
  1961  02A5  1303               	bcf	status, 6	;RP1=0, select bank0
  1962  02A6  0822               	movf	(_PIR),w
  1963  02A7  3E1E               	addlw	01Eh
  1964  02A8  0084               	movwf	fsr0
  1965  02A9  1383               	bcf	status, 7	;select IRP bank0
  1966  02AA  0800               	movf	indf,w
  1967  02AB  00CF               	movwf	(??_PIR_Main+0)+0
  1968  02AC  01D0               	clrf	(??_PIR_Main+0)+0+1
  1969  02AD  09CF               	comf	(??_PIR_Main+0)+0,f
  1970  02AE  09D0               	comf	(??_PIR_Main+0)+1,f
  1971  02AF  0ACF               	incf	(??_PIR_Main+0)+0,f
  1972  02B0  1903               	skipnz
  1973  02B1  0AD0               	incf	(??_PIR_Main+0)+1,f
  1974  02B2  0822               	movf	(_PIR),w
  1975  02B3  3E06               	addlw	06h
  1976  02B4  0084               	movwf	fsr0
  1977  02B5  0800               	movf	indf,w
  1978  02B6  074F               	addwf	0+(??_PIR_Main+0)+0,w
  1979  02B7  00D1               	movwf	(??_PIR_Main+2)+0
  1980  02B8  0850               	movf	1+(??_PIR_Main+0)+0,w
  1981  02B9  1803               	skipnc
  1982  02BA  0A50               	incf	1+(??_PIR_Main+0)+0,w
  1983  02BB  00D2               	movwf	((??_PIR_Main+2)+0)+1
  1984  02BC  0822               	movf	(_PIR),w
  1985  02BD  3E03               	addlw	03h
  1986  02BE  0084               	movwf	fsr0
  1987  02BF  0852               	movf	1+(??_PIR_Main+2)+0,w
  1988  02C0  3A80               	xorlw	80h
  1989  02C1  3C80               	sublw	080h
  1990  02C2  1D03               	skipz
  1991  02C3  2AC6               	goto	u4145
  1992  02C4  0851               	movf	0+(??_PIR_Main+2)+0,w
  1993  02C5  0200               	subwf	indf,w
  1994  02C6                     u4145:
  1995                           
  1996  02C6  1803               	skipnc
  1997  02C7  2AC9               	goto	u4141
  1998  02C8  2ACA               	goto	u4140
  1999  02C9                     u4141:
  2000  02C9  2ACF               	goto	l8141
  2001  02CA                     u4140:
  2002                           	
  2003  02CA                     l8139:	
  2004  02CA  3001               	movlw	(01h)
  2005  02CB  158A  276F  118A   	fcall	_LED_Setting
  2006  02CE  2B2A               	goto	l5145
  2007                           	
  2008  02CF                     l5139:	
  2009                           	
  2010  02CF                     l8141:	
  2011  02CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2012  02D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2013  02D1  0822               	movf	(_PIR),w
  2014  02D2  3E1E               	addlw	01Eh
  2015  02D3  0084               	movwf	fsr
  2016  02D4  1383               	bcf	status, 7	;select IRP bank0
  2017  02D5  0800               	movf	indf,w
  2018  02D6  00CF               	movwf	(??_PIR_Main+0)+0
  2019  02D7  0822               	movf	(_PIR),w
  2020  02D8  3E06               	addlw	06h
  2021  02D9  0084               	movwf	fsr0
  2022  02DA  0800               	movf	indf,w
  2023  02DB  074F               	addwf	(??_PIR_Main+0)+0,w
  2024  02DC  00D0               	movwf	(??_PIR_Main+1)+0
  2025  02DD  01D1               	clrf	(??_PIR_Main+1)+0+1
  2026  02DE  0DD1               	rlf	1+(??_PIR_Main+1)+0,f
  2027                           	
  2028  02DF  0822               	movf	(_PIR),w
  2029  02E0  3E03               	addlw	03h
  2030  02E1  0084               	movwf	fsr0
  2031  02E2  0851               	movf	1+(??_PIR_Main+1)+0,w
  2032  02E3  3A80               	xorlw	80h
  2033  02E4  00D2               	movwf	(??_PIR_Main+3)+0
  2034  02E5  3080               	movlw	80h
  2035  02E6  0252               	subwf	(??_PIR_Main+3)+0,w
  2036  02E7  1D03               	skipz
  2037  02E8  2AEB               	goto	u4155
  2038  02E9  0800               	movf	indf,w
  2039  02EA  0250               	subwf	0+(??_PIR_Main+1)+0,w
  2040  02EB                     u4155:
  2041                           
  2042  02EB  1803               	skipnc
  2043  02EC  2AEE               	goto	u4151
  2044  02ED  2AEF               	goto	u4150
  2045  02EE                     u4151:
  2046  02EE  2B2A               	goto	l5145
  2047  02EF                     u4150:
  2048                           	
  2049  02EF                     l8143:	
  2050  02EF  3002               	movlw	(02h)
  2051  02F0  158A  276F  118A   	fcall	_LED_Setting
  2052  02F3  2B2A               	goto	l5145
  2053                           	
  2054  02F4                     l5141:	
  2055  02F4  2B2A               	goto	l5145
  2056                           	line	187
  2057                           	
  2058  02F5                     l5140:	
  2059  02F5  2B2A               	goto	l5145
  2060                           	
  2061  02F6                     l5135:	
  2062  02F6  2B2A               	goto	l5145
  2063                           	line	188
  2064                           	
  2065  02F7                     l5116:	
  2066  02F7  2B2A               	goto	l5145
  2067                           	line	189
  2068                           	
  2069  02F8                     l5115:	
  2070                           	line	190
  2071                           ;Sensor_PIR+CDS.c: 187: }
  2072                           ;Sensor_PIR+CDS.c: 188: }
  2073                           ;Sensor_PIR+CDS.c: 189: }
  2074                           ;Sensor_PIR+CDS.c: 190: }
  2075  02F8  2B2A               	goto	l5145
  2076                           	line	191
  2077                           	
  2078  02F9                     l5114:	
  2079                           	line	194
  2080                           	
  2081  02F9                     l8145:	
  2082                           ;Sensor_PIR+CDS.c: 191: else
  2083                           ;Sensor_PIR+CDS.c: 192: {
  2084                           ;Sensor_PIR+CDS.c: 194: if(PIR->Count<250)
  2085  02F9  1283               	bcf	status, 5	;RP0=0, select bank0
  2086  02FA  1303               	bcf	status, 6	;RP1=0, select bank0
  2087  02FB  0822               	movf	(_PIR),w
  2088  02FC  3E14               	addlw	014h
  2089  02FD  0084               	movwf	fsr0
  2090  02FE  1383               	bcf	status, 7	;select IRP bank0
  2091  02FF  0800               	movf	indf,w
  2092  0300  00CF               	movwf	(??_PIR_Main+0)+0+0
  2093  0301  0A84               	incf	fsr0,f
  2094  0302  0800               	movf	indf,w
  2095  0303  00D0               	movwf	(??_PIR_Main+0)+0+1
  2096  0304  3000               	movlw	high(0FAh)
  2097  0305  0250               	subwf	1+(??_PIR_Main+0)+0,w
  2098  0306  30FA               	movlw	low(0FAh)
  2099  0307  1903               	skipnz
  2100  0308  024F               	subwf	0+(??_PIR_Main+0)+0,w
  2101  0309  1803               	skipnc
  2102  030A  2B0C               	goto	u4161
  2103  030B  2B0D               	goto	u4160
  2104  030C                     u4161:
  2105  030C  2B16               	goto	l8149
  2106  030D                     u4160:
  2107                           	line	195
  2108                           	
  2109  030D                     l8147:	
  2110                           ;Sensor_PIR+CDS.c: 195: PIR->Count++;
  2111  030D  0822               	movf	(_PIR),w
  2112  030E  3E14               	addlw	014h
  2113  030F  0084               	movwf	fsr0
  2114  0310  3001               	movlw	01h
  2115  0311  0780               	addwf	indf,f
  2116  0312  0A84               	incf	fsr0,f
  2117  0313  1803               	skipnc
  2118  0314  0A80               	incf	indf,f
  2119  0315  2B2A               	goto	l5145
  2120                           	line	196
  2121                           	
  2122  0316                     l5143:	
  2123                           	line	198
  2124                           	
  2125  0316                     l8149:	
  2126                           ;Sensor_PIR+CDS.c: 196: else
  2127                           ;Sensor_PIR+CDS.c: 197: {
  2128                           ;Sensor_PIR+CDS.c: 198: PIR->Count=0;
  2129  0316  0822               	movf	(_PIR),w
  2130  0317  3E14               	addlw	014h
  2131  0318  0084               	movwf	fsr0
  2132  0319  3000               	movlw	low(0)
  2133  031A  0080               	movwf	indf
  2134  031B  0A84               	incf	fsr0,f
  2135  031C  3000               	movlw	high(0)
  2136  031D  0080               	movwf	indf
  2137                           	line	199
  2138                           ;Sensor_PIR+CDS.c: 199: PIR->OK=1;
  2139  031E  0822               	movf	(_PIR),w
  2140  031F  3E13               	addlw	013h
  2141  0320  0084               	movwf	fsr0
  2142  0321  1480               	bsf	indf,1
  2143                           	line	200
  2144                           	
  2145  0322                     l8151:	
  2146                           ;Sensor_PIR+CDS.c: 200: LED_Setting(0);
  2147  0322  3000               	movlw	(0)
  2148  0323  158A  276F  118A   	fcall	_LED_Setting
  2149  0326  2B2A               	goto	l5145
  2150                           	line	202
  2151                           ;Sensor_PIR+CDS.c: 201: ;
  2152                           	
  2153  0327                     l5144:	
  2154  0327  2B2A               	goto	l5145
  2155                           	line	203
  2156                           	
  2157  0328                     l5142:	
  2158  0328  2B2A               	goto	l5145
  2159                           	line	205
  2160                           	
  2161  0329                     l5101:	
  2162  0329  2B2A               	goto	l5145
  2163                           	line	206
  2164                           	
  2165  032A                     l5100:	
  2166                           	line	207
  2167                           	
  2168  032A                     l5145:	
  2169  032A  0008               	return
  2170                           	opt stack 0
  2171                           GLOBAL	__end_of_PIR_Main
  2172  032B                     	__end_of_PIR_Main:
  2173 ;; =============== function _PIR_Main ends ============
  2174                           
  2175                           	signat	_PIR_Main,88
  2176                           	global	_PIR_Switch
  2177                           psect	text382,local,class=CODE,delta=2
  2178                           global __ptext382
  2179  0743                     __ptext382:
  2180                           
  2181 ;; *************** function _PIR_Switch *****************
  2182 ;; Defined at:
  2183 ;;		line 211 in file "G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;		None               void
  2190 ;; Registers used:
  2191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2197 ;;      Params:         0       0       0       0
  2198 ;;      Locals:         0       0       0       0
  2199 ;;      Temps:          0       1       0       0
  2200 ;;      Totals:         0       1       0       0
  2201 ;;Total ram usage:        1 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    3
  2204 ;; This function calls:
  2205 ;;		_LED_Setting
  2206 ;;		_Dimmer_Control
  2207 ;; This function is called by:
  2208 ;;		_PIR_Main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           psect	text382
  2212                           	file	"G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
  2213                           	line	211
  2214                           	global	__size_of_PIR_Switch
  2215  0052                     	__size_of_PIR_Switch	equ	__end_of_PIR_Switch-_PIR_Switch
  2216                           	
  2217  0743                     _PIR_Switch:	
  2218                           	opt	stack 3
  2219                           ; Regs used in _PIR_Switch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2220                           	line	212
  2221                           	
  2222  0743                     l7995:	
  2223                           ;Sensor_PIR+CDS.c: 212: if(PIR->Switch==0)
  2224  0743  1283               	bcf	status, 5	;RP0=0, select bank0
  2225  0744  1303               	bcf	status, 6	;RP1=0, select bank0
  2226  0745  0822               	movf	(_PIR),w
  2227  0746  3E13               	addlw	013h
  2228  0747  0084               	movwf	fsr0
  2229  0748  1383               	bcf	status, 7	;select IRP bank0
  2230  0749  1900               	btfsc	indf,2
  2231  074A  2F4C               	goto	u3811
  2232  074B  2F4D               	goto	u3810
  2233  074C                     u3811:
  2234  074C  2F67               	goto	l8003
  2235  074D                     u3810:
  2236                           	line	214
  2237                           	
  2238  074D                     l7997:	
  2239                           ;Sensor_PIR+CDS.c: 213: {
  2240                           ;Sensor_PIR+CDS.c: 214: if(PIRSwitch==1 && CDS->OK==1)
  2241  074D  0878               	movf	(_PIRSwitch),w
  2242  074E  3A01               	xorlw	01h
  2243  074F  1D03               	skipz
  2244  0750  2F52               	goto	u3821
  2245  0751  2F53               	goto	u3820
  2246  0752                     u3821:
  2247  0752  2F94               	goto	l5157
  2248  0753                     u3820:
  2249                           	
  2250  0753                     l7999:	
  2251  0753  0821               	movf	(_CDS),w
  2252  0754  3E02               	addlw	02h
  2253  0755  0084               	movwf	fsr0
  2254  0756  1C00               	btfss	indf,0
  2255  0757  2F59               	goto	u3831
  2256  0758  2F5A               	goto	u3830
  2257  0759                     u3831:
  2258  0759  2F94               	goto	l5157
  2259  075A                     u3830:
  2260                           	line	216
  2261                           	
  2262  075A                     l8001:	
  2263                           ;Sensor_PIR+CDS.c: 215: {
  2264                           ;Sensor_PIR+CDS.c: 216: PIR->Switch=1;
  2265  075A  0822               	movf	(_PIR),w
  2266  075B  3E13               	addlw	013h
  2267  075C  0084               	movwf	fsr0
  2268  075D  1500               	bsf	indf,2
  2269                           	line	217
  2270                           ;Sensor_PIR+CDS.c: 217: PIR->RangeValue=8;
  2271  075E  3008               	movlw	(08h)
  2272  075F  00C8               	movwf	(??_PIR_Switch+0)+0
  2273  0760  0822               	movf	(_PIR),w
  2274  0761  3E1E               	addlw	01Eh
  2275  0762  0084               	movwf	fsr0
  2276  0763  0848               	movf	(??_PIR_Switch+0)+0,w
  2277  0764  0080               	movwf	indf
  2278  0765  2F94               	goto	l5157
  2279                           	line	218
  2280                           	
  2281  0766                     l5149:	
  2282                           	line	219
  2283                           ;Sensor_PIR+CDS.c: 218: }
  2284                           ;Sensor_PIR+CDS.c: 219: }
  2285  0766  2F94               	goto	l5157
  2286                           	line	220
  2287                           	
  2288  0767                     l5148:	
  2289                           	line	222
  2290                           	
  2291  0767                     l8003:	
  2292                           ;Sensor_PIR+CDS.c: 220: else
  2293                           ;Sensor_PIR+CDS.c: 221: {
  2294                           ;Sensor_PIR+CDS.c: 222: if(PIRSwitch==0 || CDS->OK==0)
  2295  0767  0878               	movf	(_PIRSwitch),w
  2296  0768  1D03               	skipz
  2297  0769  2F6B               	goto	u3840
  2298  076A  2F73               	goto	l8007
  2299  076B                     u3840:
  2300                           	
  2301  076B                     l8005:	
  2302  076B  0821               	movf	(_CDS),w
  2303  076C  3E02               	addlw	02h
  2304  076D  0084               	movwf	fsr0
  2305  076E  1800               	btfsc	indf,0
  2306  076F  2F71               	goto	u3851
  2307  0770  2F72               	goto	u3850
  2308  0771                     u3851:
  2309  0771  2F94               	goto	l5157
  2310  0772                     u3850:
  2311  0772  2F73               	goto	l8007
  2312                           	
  2313  0773                     l5153:	
  2314                           	line	224
  2315                           	
  2316  0773                     l8007:	
  2317                           ;Sensor_PIR+CDS.c: 223: {
  2318                           ;Sensor_PIR+CDS.c: 224: PIR->Switch=0;
  2319  0773  0822               	movf	(_PIR),w
  2320  0774  3E13               	addlw	013h
  2321  0775  0084               	movwf	fsr0
  2322  0776  1100               	bcf	indf,2
  2323                           	line	225
  2324                           	
  2325  0777                     l8009:	
  2326                           ;Sensor_PIR+CDS.c: 225: LED_Setting(0);
  2327  0777  3000               	movlw	(0)
  2328  0778  158A  276F  118A   	fcall	_LED_Setting
  2329                           	line	226
  2330                           	
  2331  077B                     l8011:	
  2332                           ;Sensor_PIR+CDS.c: 226: if(Dimmer->Lights==1 || Dimmer->Phase2 == 1) Dimmer_Control(0);
  2333  077B  1283               	bcf	status, 5	;RP0=0, select bank0
  2334  077C  1303               	bcf	status, 6	;RP1=0, select bank0
  2335  077D  0855               	movf	(_Dimmer),w
  2336  077E  3E0A               	addlw	0Ah
  2337  077F  0084               	movwf	fsr0
  2338  0780  1383               	bcf	status, 7	;select IRP bank0
  2339  0781  1880               	btfsc	indf,1
  2340  0782  2F84               	goto	u3861
  2341  0783  2F85               	goto	u3860
  2342  0784                     u3861:
  2343  0784  2F8D               	goto	l8015
  2344  0785                     u3860:
  2345                           	
  2346  0785                     l8013:	
  2347  0785  0855               	movf	(_Dimmer),w
  2348  0786  3E0A               	addlw	0Ah
  2349  0787  0084               	movwf	fsr0
  2350  0788  1D80               	btfss	indf,3
  2351  0789  2F8B               	goto	u3871
  2352  078A  2F8C               	goto	u3870
  2353  078B                     u3871:
  2354  078B  2F94               	goto	l5157
  2355  078C                     u3870:
  2356  078C  2F8D               	goto	l8015
  2357                           	
  2358  078D                     l5156:	
  2359                           	
  2360  078D                     l8015:	
  2361  078D  3000               	movlw	(0)
  2362  078E  118A  2681  118A   	fcall	_Dimmer_Control
  2363  0791  2F94               	goto	l5157
  2364                           	
  2365  0792                     l5154:	
  2366  0792  2F94               	goto	l5157
  2367                           	line	227
  2368                           	
  2369  0793                     l5151:	
  2370  0793  2F94               	goto	l5157
  2371                           	line	228
  2372                           	
  2373  0794                     l5150:	
  2374                           	line	229
  2375                           	
  2376  0794                     l5157:	
  2377  0794  0008               	return
  2378                           	opt stack 0
  2379                           GLOBAL	__end_of_PIR_Switch
  2380  0795                     	__end_of_PIR_Switch:
  2381 ;; =============== function _PIR_Switch ends ============
  2382                           
  2383                           	signat	_PIR_Switch,88
  2384                           	global	___awdiv
  2385                           psect	text383,local,class=CODE,delta=2
  2386                           global __ptext383
  2387  060B                     __ptext383:
  2388                           
  2389 ;; *************** function ___awdiv *****************
  2390 ;; Defined at:
  2391 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  divisor         2    0[BANK0 ] int 
  2394 ;;  dividend        2    2[BANK0 ] int 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  quotient        2    7[BANK0 ] int 
  2397 ;;  sign            1    6[BANK0 ] unsigned char 
  2398 ;;  counter         1    5[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    0[BANK0 ] int 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2408 ;;      Params:         0       4       0       0
  2409 ;;      Locals:         0       4       0       0
  2410 ;;      Temps:          0       1       0       0
  2411 ;;      Totals:         0       9       0       0
  2412 ;;Total ram usage:        9 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    2
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_PIR_Main
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           psect	text383
  2422                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  2423                           	line	5
  2424                           	global	__size_of___awdiv
  2425  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2426                           	
  2427  060B                     ___awdiv:	
  2428                           	opt	stack 4
  2429                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2430                           	line	9
  2431                           	
  2432  060B                     l7955:	
  2433  060B  1283               	bcf	status, 5	;RP0=0, select bank0
  2434  060C  1303               	bcf	status, 6	;RP1=0, select bank0
  2435  060D  01CC               	clrf	(___awdiv@sign)
  2436                           	line	10
  2437  060E  1FC7               	btfss	(___awdiv@divisor+1),7
  2438  060F  2E11               	goto	u3711
  2439  0610  2E12               	goto	u3710
  2440  0611                     u3711:
  2441  0611  2E1B               	goto	l7959
  2442  0612                     u3710:
  2443                           	line	11
  2444                           	
  2445  0612                     l7957:	
  2446  0612  09C6               	comf	(___awdiv@divisor),f
  2447  0613  09C7               	comf	(___awdiv@divisor+1),f
  2448  0614  0AC6               	incf	(___awdiv@divisor),f
  2449  0615  1903               	skipnz
  2450  0616  0AC7               	incf	(___awdiv@divisor+1),f
  2451                           	line	12
  2452  0617  01CC               	clrf	(___awdiv@sign)
  2453  0618  1403               	bsf	status,0
  2454  0619  0DCC               	rlf	(___awdiv@sign),f
  2455  061A  2E1B               	goto	l7959
  2456                           	line	13
  2457                           	
  2458  061B                     l6145:	
  2459                           	line	14
  2460                           	
  2461  061B                     l7959:	
  2462  061B  1FC9               	btfss	(___awdiv@dividend+1),7
  2463  061C  2E1E               	goto	u3721
  2464  061D  2E1F               	goto	u3720
  2465  061E                     u3721:
  2466  061E  2E29               	goto	l7965
  2467  061F                     u3720:
  2468                           	line	15
  2469                           	
  2470  061F                     l7961:	
  2471  061F  09C8               	comf	(___awdiv@dividend),f
  2472  0620  09C9               	comf	(___awdiv@dividend+1),f
  2473  0621  0AC8               	incf	(___awdiv@dividend),f
  2474  0622  1903               	skipnz
  2475  0623  0AC9               	incf	(___awdiv@dividend+1),f
  2476                           	line	16
  2477                           	
  2478  0624                     l7963:	
  2479  0624  3001               	movlw	(01h)
  2480  0625  00CA               	movwf	(??___awdiv+0)+0
  2481  0626  084A               	movf	(??___awdiv+0)+0,w
  2482  0627  06CC               	xorwf	(___awdiv@sign),f
  2483  0628  2E29               	goto	l7965
  2484                           	line	17
  2485                           	
  2486  0629                     l6146:	
  2487                           	line	18
  2488                           	
  2489  0629                     l7965:	
  2490  0629  01CD               	clrf	(___awdiv@quotient)
  2491  062A  01CE               	clrf	(___awdiv@quotient+1)
  2492                           	line	19
  2493                           	
  2494  062B                     l7967:	
  2495  062B  0847               	movf	(___awdiv@divisor+1),w
  2496  062C  0446               	iorwf	(___awdiv@divisor),w
  2497  062D  1903               	skipnz
  2498  062E  2E30               	goto	u3731
  2499  062F  2E31               	goto	u3730
  2500  0630                     u3731:
  2501  0630  2E6F               	goto	l7987
  2502  0631                     u3730:
  2503                           	line	20
  2504                           	
  2505  0631                     l7969:	
  2506  0631  01CB               	clrf	(___awdiv@counter)
  2507  0632  1403               	bsf	status,0
  2508  0633  0DCB               	rlf	(___awdiv@counter),f
  2509                           	line	21
  2510  0634  2E41               	goto	l7975
  2511                           	
  2512  0635                     l6149:	
  2513                           	line	22
  2514                           	
  2515  0635                     l7971:	
  2516  0635  3001               	movlw	01h
  2517                           	
  2518  0636                     u3745:
  2519  0636  1003               	clrc
  2520  0637  0DC6               	rlf	(___awdiv@divisor),f
  2521  0638  0DC7               	rlf	(___awdiv@divisor+1),f
  2522  0639  3EFF               	addlw	-1
  2523  063A  1D03               	skipz
  2524  063B  2E36               	goto	u3745
  2525                           	line	23
  2526                           	
  2527  063C                     l7973:	
  2528  063C  3001               	movlw	(01h)
  2529  063D  00CA               	movwf	(??___awdiv+0)+0
  2530  063E  084A               	movf	(??___awdiv+0)+0,w
  2531  063F  07CB               	addwf	(___awdiv@counter),f
  2532  0640  2E41               	goto	l7975
  2533                           	line	24
  2534                           	
  2535  0641                     l6148:	
  2536                           	line	21
  2537                           	
  2538  0641                     l7975:	
  2539  0641  1FC7               	btfss	(___awdiv@divisor+1),(15)&7
  2540  0642  2E44               	goto	u3751
  2541  0643  2E45               	goto	u3750
  2542  0644                     u3751:
  2543  0644  2E35               	goto	l7971
  2544  0645                     u3750:
  2545  0645  2E47               	goto	l7977
  2546                           	
  2547  0646                     l6150:	
  2548  0646  2E47               	goto	l7977
  2549                           	line	25
  2550                           	
  2551  0647                     l6151:	
  2552                           	line	26
  2553                           	
  2554  0647                     l7977:	
  2555  0647  3001               	movlw	01h
  2556                           	
  2557  0648                     u3765:
  2558  0648  1003               	clrc
  2559  0649  0DCD               	rlf	(___awdiv@quotient),f
  2560  064A  0DCE               	rlf	(___awdiv@quotient+1),f
  2561  064B  3EFF               	addlw	-1
  2562  064C  1D03               	skipz
  2563  064D  2E48               	goto	u3765
  2564                           	line	27
  2565  064E  0847               	movf	(___awdiv@divisor+1),w
  2566  064F  0249               	subwf	(___awdiv@dividend+1),w
  2567  0650  1D03               	skipz
  2568  0651  2E54               	goto	u3775
  2569  0652  0846               	movf	(___awdiv@divisor),w
  2570  0653  0248               	subwf	(___awdiv@dividend),w
  2571  0654                     u3775:
  2572  0654  1C03               	skipc
  2573  0655  2E57               	goto	u3771
  2574  0656  2E58               	goto	u3770
  2575  0657                     u3771:
  2576  0657  2E60               	goto	l7983
  2577  0658                     u3770:
  2578                           	line	28
  2579                           	
  2580  0658                     l7979:	
  2581  0658  0846               	movf	(___awdiv@divisor),w
  2582  0659  02C8               	subwf	(___awdiv@dividend),f
  2583  065A  0847               	movf	(___awdiv@divisor+1),w
  2584  065B  1C03               	skipc
  2585  065C  03C9               	decf	(___awdiv@dividend+1),f
  2586  065D  02C9               	subwf	(___awdiv@dividend+1),f
  2587                           	line	29
  2588                           	
  2589  065E                     l7981:	
  2590  065E  144D               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2591  065F  2E60               	goto	l7983
  2592                           	line	30
  2593                           	
  2594  0660                     l6152:	
  2595                           	line	31
  2596                           	
  2597  0660                     l7983:	
  2598  0660  3001               	movlw	01h
  2599                           	
  2600  0661                     u3785:
  2601  0661  1003               	clrc
  2602  0662  0CC7               	rrf	(___awdiv@divisor+1),f
  2603  0663  0CC6               	rrf	(___awdiv@divisor),f
  2604  0664  3EFF               	addlw	-1
  2605  0665  1D03               	skipz
  2606  0666  2E61               	goto	u3785
  2607                           	line	32
  2608                           	
  2609  0667                     l7985:	
  2610  0667  3001               	movlw	low(01h)
  2611  0668  02CB               	subwf	(___awdiv@counter),f
  2612  0669  1D03               	btfss	status,2
  2613  066A  2E6C               	goto	u3791
  2614  066B  2E6D               	goto	u3790
  2615  066C                     u3791:
  2616  066C  2E47               	goto	l7977
  2617  066D                     u3790:
  2618  066D  2E6F               	goto	l7987
  2619                           	
  2620  066E                     l6153:	
  2621  066E  2E6F               	goto	l7987
  2622                           	line	33
  2623                           	
  2624  066F                     l6147:	
  2625                           	line	34
  2626                           	
  2627  066F                     l7987:	
  2628  066F  084C               	movf	(___awdiv@sign),w
  2629  0670  1D03               	skipz
  2630  0671  2E73               	goto	u3800
  2631  0672  2E79               	goto	l7991
  2632  0673                     u3800:
  2633                           	line	35
  2634                           	
  2635  0673                     l7989:	
  2636  0673  09CD               	comf	(___awdiv@quotient),f
  2637  0674  09CE               	comf	(___awdiv@quotient+1),f
  2638  0675  0ACD               	incf	(___awdiv@quotient),f
  2639  0676  1903               	skipnz
  2640  0677  0ACE               	incf	(___awdiv@quotient+1),f
  2641  0678  2E79               	goto	l7991
  2642                           	
  2643  0679                     l6154:	
  2644                           	line	36
  2645                           	
  2646  0679                     l7991:	
  2647  0679  084E               	movf	(___awdiv@quotient+1),w
  2648  067A  01C7               	clrf	(?___awdiv+1)
  2649  067B  07C7               	addwf	(?___awdiv+1)
  2650  067C  084D               	movf	(___awdiv@quotient),w
  2651  067D  01C6               	clrf	(?___awdiv)
  2652  067E  07C6               	addwf	(?___awdiv)
  2653                           
  2654  067F  2E80               	goto	l6155
  2655                           	
  2656  0680                     l7993:	
  2657                           	line	37
  2658                           	
  2659  0680                     l6155:	
  2660  0680  0008               	return
  2661                           	opt stack 0
  2662                           GLOBAL	__end_of___awdiv
  2663  0681                     	__end_of___awdiv:
  2664 ;; =============== function ___awdiv ends ============
  2665                           
  2666                           	signat	___awdiv,8314
  2667                           	global	___lwdiv
  2668                           psect	text384,local,class=CODE,delta=2
  2669                           global __ptext384
  2670  0795                     __ptext384:
  2671                           
  2672 ;; *************** function ___lwdiv *****************
  2673 ;; Defined at:
  2674 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  divisor         2    0[BANK0 ] unsigned int 
  2677 ;;  dividend        2    2[BANK0 ] unsigned int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  quotient        2    5[BANK0 ] unsigned int 
  2680 ;;  counter         1    7[BANK0 ] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2    0[BANK0 ] unsigned int 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2690 ;;      Params:         0       4       0       0
  2691 ;;      Locals:         0       3       0       0
  2692 ;;      Temps:          0       1       0       0
  2693 ;;      Totals:         0       8       0       0
  2694 ;;Total ram usage:        8 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    2
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_PIR_Main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           psect	text384
  2704                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  2705                           	line	5
  2706                           	global	__size_of___lwdiv
  2707  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2708                           	
  2709  0795                     ___lwdiv:	
  2710                           	opt	stack 4
  2711                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2712                           	line	9
  2713                           	
  2714  0795                     l7929:	
  2715  0795  1283               	bcf	status, 5	;RP0=0, select bank0
  2716  0796  1303               	bcf	status, 6	;RP1=0, select bank0
  2717  0797  01CB               	clrf	(___lwdiv@quotient)
  2718  0798  01CC               	clrf	(___lwdiv@quotient+1)
  2719                           	line	10
  2720                           	
  2721  0799                     l7931:	
  2722  0799  0847               	movf	(___lwdiv@divisor+1),w
  2723  079A  0446               	iorwf	(___lwdiv@divisor),w
  2724  079B  1903               	skipnz
  2725  079C  2F9E               	goto	u3641
  2726  079D  2F9F               	goto	u3640
  2727  079E                     u3641:
  2728  079E  2FDD               	goto	l7951
  2729  079F                     u3640:
  2730                           	line	11
  2731                           	
  2732  079F                     l7933:	
  2733  079F  01CD               	clrf	(___lwdiv@counter)
  2734  07A0  1403               	bsf	status,0
  2735  07A1  0DCD               	rlf	(___lwdiv@counter),f
  2736                           	line	12
  2737  07A2  2FAF               	goto	l7939
  2738                           	
  2739  07A3                     l6013:	
  2740                           	line	13
  2741                           	
  2742  07A3                     l7935:	
  2743  07A3  3001               	movlw	01h
  2744                           	
  2745  07A4                     u3655:
  2746  07A4  1003               	clrc
  2747  07A5  0DC6               	rlf	(___lwdiv@divisor),f
  2748  07A6  0DC7               	rlf	(___lwdiv@divisor+1),f
  2749  07A7  3EFF               	addlw	-1
  2750  07A8  1D03               	skipz
  2751  07A9  2FA4               	goto	u3655
  2752                           	line	14
  2753                           	
  2754  07AA                     l7937:	
  2755  07AA  3001               	movlw	(01h)
  2756  07AB  00CA               	movwf	(??___lwdiv+0)+0
  2757  07AC  084A               	movf	(??___lwdiv+0)+0,w
  2758  07AD  07CD               	addwf	(___lwdiv@counter),f
  2759  07AE  2FAF               	goto	l7939
  2760                           	line	15
  2761                           	
  2762  07AF                     l6012:	
  2763                           	line	12
  2764                           	
  2765  07AF                     l7939:	
  2766  07AF  1FC7               	btfss	(___lwdiv@divisor+1),(15)&7
  2767  07B0  2FB2               	goto	u3661
  2768  07B1  2FB3               	goto	u3660
  2769  07B2                     u3661:
  2770  07B2  2FA3               	goto	l7935
  2771  07B3                     u3660:
  2772  07B3  2FB5               	goto	l7941
  2773                           	
  2774  07B4                     l6014:	
  2775  07B4  2FB5               	goto	l7941
  2776                           	line	16
  2777                           	
  2778  07B5                     l6015:	
  2779                           	line	17
  2780                           	
  2781  07B5                     l7941:	
  2782  07B5  3001               	movlw	01h
  2783                           	
  2784  07B6                     u3675:
  2785  07B6  1003               	clrc
  2786  07B7  0DCB               	rlf	(___lwdiv@quotient),f
  2787  07B8  0DCC               	rlf	(___lwdiv@quotient+1),f
  2788  07B9  3EFF               	addlw	-1
  2789  07BA  1D03               	skipz
  2790  07BB  2FB6               	goto	u3675
  2791                           	line	18
  2792  07BC  0847               	movf	(___lwdiv@divisor+1),w
  2793  07BD  0249               	subwf	(___lwdiv@dividend+1),w
  2794  07BE  1D03               	skipz
  2795  07BF  2FC2               	goto	u3685
  2796  07C0  0846               	movf	(___lwdiv@divisor),w
  2797  07C1  0248               	subwf	(___lwdiv@dividend),w
  2798  07C2                     u3685:
  2799  07C2  1C03               	skipc
  2800  07C3  2FC5               	goto	u3681
  2801  07C4  2FC6               	goto	u3680
  2802  07C5                     u3681:
  2803  07C5  2FCE               	goto	l7947
  2804  07C6                     u3680:
  2805                           	line	19
  2806                           	
  2807  07C6                     l7943:	
  2808  07C6  0846               	movf	(___lwdiv@divisor),w
  2809  07C7  02C8               	subwf	(___lwdiv@dividend),f
  2810  07C8  0847               	movf	(___lwdiv@divisor+1),w
  2811  07C9  1C03               	skipc
  2812  07CA  03C9               	decf	(___lwdiv@dividend+1),f
  2813  07CB  02C9               	subwf	(___lwdiv@dividend+1),f
  2814                           	line	20
  2815                           	
  2816  07CC                     l7945:	
  2817  07CC  144B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2818  07CD  2FCE               	goto	l7947
  2819                           	line	21
  2820                           	
  2821  07CE                     l6016:	
  2822                           	line	22
  2823                           	
  2824  07CE                     l7947:	
  2825  07CE  3001               	movlw	01h
  2826                           	
  2827  07CF                     u3695:
  2828  07CF  1003               	clrc
  2829  07D0  0CC7               	rrf	(___lwdiv@divisor+1),f
  2830  07D1  0CC6               	rrf	(___lwdiv@divisor),f
  2831  07D2  3EFF               	addlw	-1
  2832  07D3  1D03               	skipz
  2833  07D4  2FCF               	goto	u3695
  2834                           	line	23
  2835                           	
  2836  07D5                     l7949:	
  2837  07D5  3001               	movlw	low(01h)
  2838  07D6  02CD               	subwf	(___lwdiv@counter),f
  2839  07D7  1D03               	btfss	status,2
  2840  07D8  2FDA               	goto	u3701
  2841  07D9  2FDB               	goto	u3700
  2842  07DA                     u3701:
  2843  07DA  2FB5               	goto	l7941
  2844  07DB                     u3700:
  2845  07DB  2FDD               	goto	l7951
  2846                           	
  2847  07DC                     l6017:	
  2848  07DC  2FDD               	goto	l7951
  2849                           	line	24
  2850                           	
  2851  07DD                     l6011:	
  2852                           	line	25
  2853                           	
  2854  07DD                     l7951:	
  2855  07DD  084C               	movf	(___lwdiv@quotient+1),w
  2856  07DE  01C7               	clrf	(?___lwdiv+1)
  2857  07DF  07C7               	addwf	(?___lwdiv+1)
  2858  07E0  084B               	movf	(___lwdiv@quotient),w
  2859  07E1  01C6               	clrf	(?___lwdiv)
  2860  07E2  07C6               	addwf	(?___lwdiv)
  2861                           
  2862  07E3  2FE4               	goto	l6018
  2863                           	
  2864  07E4                     l7953:	
  2865                           	line	26
  2866                           	
  2867  07E4                     l6018:	
  2868  07E4  0008               	return
  2869                           	opt stack 0
  2870                           GLOBAL	__end_of___lwdiv
  2871  07E5                     	__end_of___lwdiv:
  2872 ;; =============== function ___lwdiv ends ============
  2873                           
  2874                           	signat	___lwdiv,8314
  2875                           	global	___wmul
  2876                           psect	text385,local,class=CODE,delta=2
  2877                           global __ptext385
  2878  0F0F                     __ptext385:
  2879                           
  2880 ;; *************** function ___wmul *****************
  2881 ;; Defined at:
  2882 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2885 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  product         2    4[BANK0 ] unsigned int 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  2    0[BANK0 ] unsigned int 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2897 ;;      Params:         0       4       0       0
  2898 ;;      Locals:         0       2       0       0
  2899 ;;      Temps:          0       0       0       0
  2900 ;;      Totals:         0       6       0       0
  2901 ;;Total ram usage:        6 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    2
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_PIR_Main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           psect	text385
  2911                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  2912                           	line	3
  2913                           	global	__size_of___wmul
  2914  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  2915                           	
  2916  0F0F                     ___wmul:	
  2917                           	opt	stack 4
  2918                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2919                           	line	4
  2920                           	
  2921  0F0F                     l7917:	
  2922  0F0F  1283               	bcf	status, 5	;RP0=0, select bank0
  2923  0F10  1303               	bcf	status, 6	;RP1=0, select bank0
  2924  0F11  01CA               	clrf	(___wmul@product)
  2925  0F12  01CB               	clrf	(___wmul@product+1)
  2926  0F13  2F14               	goto	l7919
  2927                           	line	6
  2928                           	
  2929  0F14                     l6005:	
  2930                           	line	7
  2931                           	
  2932  0F14                     l7919:	
  2933  0F14  1C46               	btfss	(___wmul@multiplier),(0)&7
  2934  0F15  2F17               	goto	u3601
  2935  0F16  2F18               	goto	u3600
  2936  0F17                     u3601:
  2937  0F17  2F1E               	goto	l6006
  2938  0F18                     u3600:
  2939                           	line	8
  2940                           	
  2941  0F18                     l7921:	
  2942  0F18  0848               	movf	(___wmul@multiplicand),w
  2943  0F19  07CA               	addwf	(___wmul@product),f
  2944  0F1A  1803               	skipnc
  2945  0F1B  0ACB               	incf	(___wmul@product+1),f
  2946  0F1C  0849               	movf	(___wmul@multiplicand+1),w
  2947  0F1D  07CB               	addwf	(___wmul@product+1),f
  2948                           	
  2949  0F1E                     l6006:	
  2950                           	line	9
  2951  0F1E  3001               	movlw	01h
  2952                           	
  2953  0F1F                     u3615:
  2954  0F1F  1003               	clrc
  2955  0F20  0DC8               	rlf	(___wmul@multiplicand),f
  2956  0F21  0DC9               	rlf	(___wmul@multiplicand+1),f
  2957  0F22  3EFF               	addlw	-1
  2958  0F23  1D03               	skipz
  2959  0F24  2F1F               	goto	u3615
  2960                           	line	10
  2961                           	
  2962  0F25                     l7923:	
  2963  0F25  3001               	movlw	01h
  2964                           	
  2965  0F26                     u3625:
  2966  0F26  1003               	clrc
  2967  0F27  0CC7               	rrf	(___wmul@multiplier+1),f
  2968  0F28  0CC6               	rrf	(___wmul@multiplier),f
  2969  0F29  3EFF               	addlw	-1
  2970  0F2A  1D03               	skipz
  2971  0F2B  2F26               	goto	u3625
  2972                           	line	11
  2973  0F2C  0847               	movf	((___wmul@multiplier+1)),w
  2974  0F2D  0446               	iorwf	((___wmul@multiplier)),w
  2975  0F2E  1D03               	skipz
  2976  0F2F  2F31               	goto	u3631
  2977  0F30  2F32               	goto	u3630
  2978  0F31                     u3631:
  2979  0F31  2F14               	goto	l7919
  2980  0F32                     u3630:
  2981  0F32  2F33               	goto	l7925
  2982                           	
  2983  0F33                     l6007:	
  2984                           	line	12
  2985                           	
  2986  0F33                     l7925:	
  2987  0F33  084B               	movf	(___wmul@product+1),w
  2988  0F34  01C7               	clrf	(?___wmul+1)
  2989  0F35  07C7               	addwf	(?___wmul+1)
  2990  0F36  084A               	movf	(___wmul@product),w
  2991  0F37  01C6               	clrf	(?___wmul)
  2992  0F38  07C6               	addwf	(?___wmul)
  2993                           
  2994  0F39  2F3A               	goto	l6008
  2995                           	
  2996  0F3A                     l7927:	
  2997                           	line	13
  2998                           	
  2999  0F3A                     l6008:	
  3000  0F3A  0008               	return
  3001                           	opt stack 0
  3002                           GLOBAL	__end_of___wmul
  3003  0F3B                     	__end_of___wmul:
  3004 ;; =============== function ___wmul ends ============
  3005                           
  3006                           	signat	___wmul,8314
  3007                           	global	_CDS_Main
  3008                           psect	text386,local,class=CODE,delta=2
  3009                           global __ptext386
  3010  043D                     __ptext386:
  3011                           
  3012 ;; *************** function _CDS_Main *****************
  3013 ;; Defined at:
  3014 ;;		line 9 in file "G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;		None               void
  3021 ;; Registers used:
  3022 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3028 ;;      Params:         0       0       0       0
  3029 ;;      Locals:         0       0       0       0
  3030 ;;      Temps:          0       3       0       0
  3031 ;;      Totals:         0       3       0       0
  3032 ;;Total ram usage:        3 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    2
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           psect	text386
  3042                           	file	"G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
  3043                           	line	9
  3044                           	global	__size_of_CDS_Main
  3045  00AA                     	__size_of_CDS_Main	equ	__end_of_CDS_Main-_CDS_Main
  3046                           	
  3047  043D                     _CDS_Main:	
  3048                           	opt	stack 5
  3049                           ; Regs used in _CDS_Main: [wreg-fsr0h+status,2+status,0]
  3050                           	line	10
  3051                           	
  3052  043D                     l7883:	
  3053                           ;Sensor_PIR+CDS.c: 10: if(CDS->Enable==1)
  3054  043D  1283               	bcf	status, 5	;RP0=0, select bank0
  3055  043E  1303               	bcf	status, 6	;RP1=0, select bank0
  3056  043F  0821               	movf	(_CDS),w
  3057  0440  0084               	movwf	fsr0
  3058  0441  1383               	bcf	status, 7	;select IRP bank0
  3059  0442  1C00               	btfss	indf,0
  3060  0443  2C45               	goto	u3521
  3061  0444  2C46               	goto	u3520
  3062  0445                     u3521:
  3063  0445  2CE6               	goto	l5097
  3064  0446                     u3520:
  3065                           	line	12
  3066                           	
  3067  0446                     l7885:	
  3068                           ;Sensor_PIR+CDS.c: 11: {
  3069                           ;Sensor_PIR+CDS.c: 12: CDS->Time++;
  3070  0446  3001               	movlw	(01h)
  3071  0447  00C6               	movwf	(??_CDS_Main+0)+0
  3072  0448  0821               	movf	(_CDS),w
  3073  0449  3E01               	addlw	01h
  3074  044A  0084               	movwf	fsr0
  3075  044B  0846               	movf	(??_CDS_Main+0)+0,w
  3076  044C  0780               	addwf	indf,f
  3077                           	line	13
  3078                           	
  3079  044D                     l7887:	
  3080                           ;Sensor_PIR+CDS.c: 13: if(CDS->Time == 10)
  3081  044D  0821               	movf	(_CDS),w
  3082  044E  3E01               	addlw	01h
  3083  044F  0084               	movwf	fsr0
  3084  0450  0800               	movf	indf,w
  3085  0451  3A0A               	xorlw	0Ah
  3086  0452  1D03               	skipz
  3087  0453  2C55               	goto	u3531
  3088  0454  2C56               	goto	u3530
  3089  0455                     u3531:
  3090  0455  2CE6               	goto	l5097
  3091  0456                     u3530:
  3092                           	line	15
  3093                           	
  3094  0456                     l7889:	
  3095                           ;Sensor_PIR+CDS.c: 14: {
  3096                           ;Sensor_PIR+CDS.c: 15: CDS->Time=0;
  3097  0456  0821               	movf	(_CDS),w
  3098  0457  3E01               	addlw	01h
  3099  0458  0084               	movwf	fsr0
  3100  0459  0180               	clrf	indf
  3101                           	line	16
  3102                           	
  3103  045A                     l7891:	
  3104                           ;Sensor_PIR+CDS.c: 16: CDS->GO_nDONE=1;
  3105  045A  0821               	movf	(_CDS),w
  3106  045B  3E05               	addlw	05h
  3107  045C  0084               	movwf	fsr0
  3108  045D  0180               	clrf	indf
  3109  045E  1403               	bsf	status,0
  3110  045F  0D80               	rlf	indf,f
  3111                           	line	17
  3112                           	
  3113  0460                     l7893:	
  3114                           ;Sensor_PIR+CDS.c: 17: ADCON1=0x70;
  3115  0460  3070               	movlw	(070h)
  3116  0461  1683               	bsf	status, 5	;RP0=1, select bank1
  3117  0462  1303               	bcf	status, 6	;RP1=0, select bank1
  3118  0463  009F               	movwf	(159)^080h	;volatile
  3119                           	line	21
  3120                           	
  3121  0464                     l7895:	
  3122                           ;Sensor_PIR+CDS.c: 21: ADCON0=0x31;
  3123  0464  3031               	movlw	(031h)
  3124  0465  1283               	bcf	status, 5	;RP0=0, select bank0
  3125  0466  1303               	bcf	status, 6	;RP1=0, select bank0
  3126  0467  009F               	movwf	(31)	;volatile
  3127                           	line	23
  3128                           	
  3129  0468                     l7897:	
  3130                           ;Sensor_PIR+CDS.c: 23: GO_nDONE=1;
  3131  0468  149F               	bsf	(249/8),(249)&7
  3132                           	line	24
  3133                           ;Sensor_PIR+CDS.c: 24: while(GO_nDONE);
  3134  0469  2C6A               	goto	l5086
  3135                           	
  3136  046A                     l5087:	
  3137                           	
  3138  046A                     l5086:	
  3139  046A  189F               	btfsc	(249/8),(249)&7
  3140  046B  2C6D               	goto	u3541
  3141  046C  2C6E               	goto	u3540
  3142  046D                     u3541:
  3143  046D  2C6A               	goto	l5086
  3144  046E                     u3540:
  3145  046E  2C6F               	goto	l7899
  3146                           	
  3147  046F                     l5088:	
  3148                           	line	25
  3149                           	
  3150  046F                     l7899:	
  3151                           ;Sensor_PIR+CDS.c: 25: CDS->SignalAD=ADRES;
  3152  046F  081E               	movf	(30),w	;volatile
  3153  0470  00C6               	movwf	(??_CDS_Main+0)+0
  3154  0471  0821               	movf	(_CDS),w
  3155  0472  3E04               	addlw	04h
  3156  0473  0084               	movwf	fsr0
  3157  0474  0846               	movf	(??_CDS_Main+0)+0,w
  3158  0475  1383               	bcf	status, 7	;select IRP bank0
  3159  0476  0080               	movwf	indf
  3160                           	line	28
  3161                           	
  3162  0477                     l7901:	
  3163                           ;Sensor_PIR+CDS.c: 28: ADCON0=0x09;
  3164  0477  3009               	movlw	(09h)
  3165  0478  009F               	movwf	(31)	;volatile
  3166                           	line	30
  3167                           	
  3168  0479                     l7903:	
  3169                           ;Sensor_PIR+CDS.c: 30: GO_nDONE=1;
  3170  0479  149F               	bsf	(249/8),(249)&7
  3171                           	line	31
  3172                           ;Sensor_PIR+CDS.c: 31: while(GO_nDONE);
  3173  047A  2C7B               	goto	l5089
  3174                           	
  3175  047B                     l5090:	
  3176                           	
  3177  047B                     l5089:	
  3178  047B  189F               	btfsc	(249/8),(249)&7
  3179  047C  2C7E               	goto	u3551
  3180  047D  2C7F               	goto	u3550
  3181  047E                     u3551:
  3182  047E  2C7B               	goto	l5089
  3183  047F                     u3550:
  3184  047F  2C80               	goto	l7905
  3185                           	
  3186  0480                     l5091:	
  3187                           	line	32
  3188                           	
  3189  0480                     l7905:	
  3190                           ;Sensor_PIR+CDS.c: 32: CDS->VRAD=ADRES;
  3191  0480  081E               	movf	(30),w	;volatile
  3192  0481  00C6               	movwf	(??_CDS_Main+0)+0
  3193  0482  0821               	movf	(_CDS),w
  3194  0483  3E03               	addlw	03h
  3195  0484  0084               	movwf	fsr0
  3196  0485  0846               	movf	(??_CDS_Main+0)+0,w
  3197  0486  1383               	bcf	status, 7	;select IRP bank0
  3198  0487  0080               	movwf	indf
  3199                           	line	34
  3200                           ;Sensor_PIR+CDS.c: 34: CDS->GO_nDONE=0;
  3201  0488  0821               	movf	(_CDS),w
  3202  0489  3E05               	addlw	05h
  3203  048A  0084               	movwf	fsr0
  3204  048B  0180               	clrf	indf
  3205                           	line	35
  3206                           ;Sensor_PIR+CDS.c: 35: CDS->GO=1;
  3207  048C  0821               	movf	(_CDS),w
  3208  048D  0084               	movwf	fsr0
  3209  048E  1480               	bsf	indf,1
  3210                           	line	38
  3211                           ;Sensor_PIR+CDS.c: 38: if(CDS->GO==1)
  3212  048F  0821               	movf	(_CDS),w
  3213  0490  0084               	movwf	fsr0
  3214  0491  1C80               	btfss	indf,1
  3215  0492  2C94               	goto	u3561
  3216  0493  2C95               	goto	u3560
  3217  0494                     u3561:
  3218  0494  2CE6               	goto	l5097
  3219  0495                     u3560:
  3220                           	line	40
  3221                           	
  3222  0495                     l7907:	
  3223                           ;Sensor_PIR+CDS.c: 39: {
  3224                           ;Sensor_PIR+CDS.c: 40: CDS->GO=0;
  3225  0495  0821               	movf	(_CDS),w
  3226  0496  0084               	movwf	fsr0
  3227  0497  1080               	bcf	indf,1
  3228                           	line	41
  3229                           ;Sensor_PIR+CDS.c: 41: if(CDS->OK==0)
  3230  0498  0821               	movf	(_CDS),w
  3231  0499  3E02               	addlw	02h
  3232  049A  0084               	movwf	fsr0
  3233  049B  1800               	btfsc	indf,0
  3234  049C  2C9E               	goto	u3571
  3235  049D  2C9F               	goto	u3570
  3236  049E                     u3571:
  3237  049E  2CC0               	goto	l7913
  3238  049F                     u3570:
  3239                           	line	43
  3240                           	
  3241  049F                     l7909:	
  3242                           ;Sensor_PIR+CDS.c: 42: {
  3243                           ;Sensor_PIR+CDS.c: 43: if(CDS->SignalAD >= (CDS->VRAD-40))
  3244  049F  0821               	movf	(_CDS),w
  3245  04A0  3E03               	addlw	03h
  3246  04A1  0084               	movwf	fsr0
  3247  04A2  0800               	movf	indf,w
  3248  04A3  3ED8               	addlw	low(-40)
  3249  04A4  00C6               	movwf	(??_CDS_Main+0)+0
  3250  04A5  30FF               	movlw	high(-40)
  3251  04A6  1803               	skipnc
  3252  04A7  3000               	movlw	(high(-40)+1)&0ffh
  3253  04A8  00C7               	movwf	((??_CDS_Main+0)+0)+1
  3254  04A9  0821               	movf	(_CDS),w
  3255  04AA  3E04               	addlw	04h
  3256  04AB  0084               	movwf	fsr0
  3257  04AC  0847               	movf	1+(??_CDS_Main+0)+0,w
  3258  04AD  3A80               	xorlw	80h
  3259  04AE  3C80               	sublw	080h
  3260  04AF  1D03               	skipz
  3261  04B0  2CB3               	goto	u3585
  3262  04B1  0846               	movf	0+(??_CDS_Main+0)+0,w
  3263  04B2  0200               	subwf	indf,w
  3264  04B3                     u3585:
  3265                           
  3266  04B3  1C03               	skipc
  3267  04B4  2CB6               	goto	u3581
  3268  04B5  2CB7               	goto	u3580
  3269  04B6                     u3581:
  3270  04B6  2CE6               	goto	l5097
  3271  04B7                     u3580:
  3272                           	line	45
  3273                           	
  3274  04B7                     l7911:	
  3275                           ;Sensor_PIR+CDS.c: 44: {
  3276                           ;Sensor_PIR+CDS.c: 45: CDS->OK=1;
  3277  04B7  1283               	bcf	status, 5	;RP0=0, select bank0
  3278  04B8  1303               	bcf	status, 6	;RP1=0, select bank0
  3279  04B9  0821               	movf	(_CDS),w
  3280  04BA  3E02               	addlw	02h
  3281  04BB  0084               	movwf	fsr0
  3282  04BC  1383               	bcf	status, 7	;select IRP bank0
  3283  04BD  1400               	bsf	indf,0
  3284  04BE  2CE6               	goto	l5097
  3285                           	line	46
  3286                           	
  3287  04BF                     l5094:	
  3288                           	line	47
  3289                           ;Sensor_PIR+CDS.c: 46: }
  3290                           ;Sensor_PIR+CDS.c: 47: }
  3291  04BF  2CE6               	goto	l5097
  3292                           	line	48
  3293                           	
  3294  04C0                     l5093:	
  3295                           	line	50
  3296                           	
  3297  04C0                     l7913:	
  3298                           ;Sensor_PIR+CDS.c: 48: else
  3299                           ;Sensor_PIR+CDS.c: 49: {
  3300                           ;Sensor_PIR+CDS.c: 50: if(CDS->SignalAD <= (CDS->VRAD-120))
  3301  04C0  0821               	movf	(_CDS),w
  3302  04C1  3E03               	addlw	03h
  3303  04C2  0084               	movwf	fsr0
  3304  04C3  0800               	movf	indf,w
  3305  04C4  3E88               	addlw	low(-120)
  3306  04C5  00C6               	movwf	(??_CDS_Main+0)+0
  3307  04C6  30FF               	movlw	high(-120)
  3308  04C7  1803               	skipnc
  3309  04C8  3000               	movlw	(high(-120)+1)&0ffh
  3310  04C9  00C7               	movwf	((??_CDS_Main+0)+0)+1
  3311  04CA  0821               	movf	(_CDS),w
  3312  04CB  3E04               	addlw	04h
  3313  04CC  0084               	movwf	fsr0
  3314  04CD  0847               	movf	1+(??_CDS_Main+0)+0,w
  3315  04CE  3A80               	xorlw	80h
  3316  04CF  00C8               	movwf	(??_CDS_Main+2)+0
  3317  04D0  3080               	movlw	80h
  3318  04D1  0248               	subwf	(??_CDS_Main+2)+0,w
  3319  04D2  1D03               	skipz
  3320  04D3  2CD6               	goto	u3595
  3321  04D4  0800               	movf	indf,w
  3322  04D5  0246               	subwf	0+(??_CDS_Main+0)+0,w
  3323  04D6                     u3595:
  3324                           
  3325  04D6  1C03               	skipc
  3326  04D7  2CD9               	goto	u3591
  3327  04D8  2CDA               	goto	u3590
  3328  04D9                     u3591:
  3329  04D9  2CE6               	goto	l5097
  3330  04DA                     u3590:
  3331                           	line	52
  3332                           	
  3333  04DA                     l7915:	
  3334                           ;Sensor_PIR+CDS.c: 51: {
  3335                           ;Sensor_PIR+CDS.c: 52: CDS->OK=0;
  3336  04DA  1283               	bcf	status, 5	;RP0=0, select bank0
  3337  04DB  1303               	bcf	status, 6	;RP1=0, select bank0
  3338  04DC  0821               	movf	(_CDS),w
  3339  04DD  3E02               	addlw	02h
  3340  04DE  0084               	movwf	fsr0
  3341  04DF  1383               	bcf	status, 7	;select IRP bank0
  3342  04E0  1000               	bcf	indf,0
  3343  04E1  2CE6               	goto	l5097
  3344                           	line	53
  3345                           	
  3346  04E2                     l5096:	
  3347  04E2  2CE6               	goto	l5097
  3348                           	line	54
  3349                           	
  3350  04E3                     l5095:	
  3351  04E3  2CE6               	goto	l5097
  3352                           	line	55
  3353                           	
  3354  04E4                     l5092:	
  3355  04E4  2CE6               	goto	l5097
  3356                           	line	56
  3357                           	
  3358  04E5                     l5085:	
  3359  04E5  2CE6               	goto	l5097
  3360                           	line	57
  3361                           	
  3362  04E6                     l5084:	
  3363                           	line	58
  3364                           	
  3365  04E6                     l5097:	
  3366  04E6  0008               	return
  3367                           	opt stack 0
  3368                           GLOBAL	__end_of_CDS_Main
  3369  04E7                     	__end_of_CDS_Main:
  3370 ;; =============== function _CDS_Main ends ============
  3371                           
  3372                           	signat	_CDS_Main,88
  3373                           	global	_TMR1_Main
  3374                           psect	text387,local,class=CODE,delta=2
  3375                           global __ptext387
  3376  04E7                     __ptext387:
  3377                           
  3378 ;; *************** function _TMR1_Main *****************
  3379 ;; Defined at:
  3380 ;;		line 8 in file "G:\Program\PIC\Source_File\Timer1.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;		None               void
  3387 ;; Registers used:
  3388 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3394 ;;      Params:         0       0       0       0
  3395 ;;      Locals:         0       0       0       0
  3396 ;;      Temps:          0       2       0       0
  3397 ;;      Totals:         0       2       0       0
  3398 ;;Total ram usage:        2 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    2
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           psect	text387
  3408                           	file	"G:\Program\PIC\Source_File\Timer1.c"
  3409                           	line	8
  3410                           	global	__size_of_TMR1_Main
  3411  009C                     	__size_of_TMR1_Main	equ	__end_of_TMR1_Main-_TMR1_Main
  3412                           	
  3413  04E7                     _TMR1_Main:	
  3414                           	opt	stack 5
  3415                           ; Regs used in _TMR1_Main: [wreg-fsr0h+status,2+status,0]
  3416                           	line	10
  3417                           	
  3418  04E7                     l7857:	
  3419                           ;Timer1.c: 10: if(Timer1->Count1<200)
  3420  04E7  1283               	bcf	status, 5	;RP0=0, select bank0
  3421  04E8  1303               	bcf	status, 6	;RP1=0, select bank0
  3422  04E9  0857               	movf	(_Timer1),w
  3423  04EA  3E03               	addlw	03h
  3424  04EB  0084               	movwf	fsr0
  3425  04EC  1383               	bcf	status, 7	;select IRP bank0
  3426  04ED  0800               	movf	indf,w
  3427  04EE  00C6               	movwf	(??_TMR1_Main+0)+0+0
  3428  04EF  0A84               	incf	fsr0,f
  3429  04F0  0800               	movf	indf,w
  3430  04F1  00C7               	movwf	(??_TMR1_Main+0)+0+1
  3431  04F2  3000               	movlw	high(0C8h)
  3432  04F3  0247               	subwf	1+(??_TMR1_Main+0)+0,w
  3433  04F4  30C8               	movlw	low(0C8h)
  3434  04F5  1903               	skipnz
  3435  04F6  0246               	subwf	0+(??_TMR1_Main+0)+0,w
  3436  04F7  1803               	skipnc
  3437  04F8  2CFA               	goto	u3471
  3438  04F9  2CFB               	goto	u3470
  3439  04FA                     u3471:
  3440  04FA  2D04               	goto	l7861
  3441  04FB                     u3470:
  3442                           	line	11
  3443                           	
  3444  04FB                     l7859:	
  3445                           ;Timer1.c: 11: Timer1->Count1++;
  3446  04FB  0857               	movf	(_Timer1),w
  3447  04FC  3E03               	addlw	03h
  3448  04FD  0084               	movwf	fsr0
  3449  04FE  3001               	movlw	01h
  3450  04FF  0780               	addwf	indf,f
  3451  0500  0A84               	incf	fsr0,f
  3452  0501  1803               	skipnc
  3453  0502  0A80               	incf	indf,f
  3454  0503  2D0C               	goto	l5987
  3455                           	line	12
  3456                           	
  3457  0504                     l5986:	
  3458                           	line	14
  3459                           	
  3460  0504                     l7861:	
  3461                           ;Timer1.c: 12: else
  3462                           ;Timer1.c: 13: {
  3463                           ;Timer1.c: 14: Timer1->Count1=0;
  3464  0504  0857               	movf	(_Timer1),w
  3465  0505  3E03               	addlw	03h
  3466  0506  0084               	movwf	fsr0
  3467  0507  3000               	movlw	low(0)
  3468  0508  0080               	movwf	indf
  3469  0509  0A84               	incf	fsr0,f
  3470  050A  3000               	movlw	high(0)
  3471  050B  0080               	movwf	indf
  3472                           	line	16
  3473                           	
  3474  050C                     l5987:	
  3475                           	line	18
  3476                           ;Timer1.c: 16: }
  3477                           ;Timer1.c: 18: if(Timer1->PowerON==0)
  3478  050C  0857               	movf	(_Timer1),w
  3479  050D  0084               	movwf	fsr0
  3480  050E  1800               	btfsc	indf,0
  3481  050F  2D11               	goto	u3481
  3482  0510  2D12               	goto	u3480
  3483  0511                     u3481:
  3484  0511  2D39               	goto	l7869
  3485  0512                     u3480:
  3486                           	line	20
  3487                           	
  3488  0512                     l7863:	
  3489                           ;Timer1.c: 19: {
  3490                           ;Timer1.c: 20: if(Timer1->Count2<200)
  3491  0512  0857               	movf	(_Timer1),w
  3492  0513  3E05               	addlw	05h
  3493  0514  0084               	movwf	fsr0
  3494  0515  0800               	movf	indf,w
  3495  0516  00C6               	movwf	(??_TMR1_Main+0)+0+0
  3496  0517  0A84               	incf	fsr0,f
  3497  0518  0800               	movf	indf,w
  3498  0519  00C7               	movwf	(??_TMR1_Main+0)+0+1
  3499  051A  3000               	movlw	high(0C8h)
  3500  051B  0247               	subwf	1+(??_TMR1_Main+0)+0,w
  3501  051C  30C8               	movlw	low(0C8h)
  3502  051D  1903               	skipnz
  3503  051E  0246               	subwf	0+(??_TMR1_Main+0)+0,w
  3504  051F  1803               	skipnc
  3505  0520  2D22               	goto	u3491
  3506  0521  2D23               	goto	u3490
  3507  0522                     u3491:
  3508  0522  2D2C               	goto	l7867
  3509  0523                     u3490:
  3510                           	line	21
  3511                           	
  3512  0523                     l7865:	
  3513                           ;Timer1.c: 21: Timer1->Count2++;
  3514  0523  0857               	movf	(_Timer1),w
  3515  0524  3E05               	addlw	05h
  3516  0525  0084               	movwf	fsr0
  3517  0526  3001               	movlw	01h
  3518  0527  0780               	addwf	indf,f
  3519  0528  0A84               	incf	fsr0,f
  3520  0529  1803               	skipnc
  3521  052A  0A80               	incf	indf,f
  3522  052B  2D82               	goto	l5996
  3523                           	line	22
  3524                           	
  3525  052C                     l5989:	
  3526                           	line	24
  3527                           	
  3528  052C                     l7867:	
  3529                           ;Timer1.c: 22: else
  3530                           ;Timer1.c: 23: {
  3531                           ;Timer1.c: 24: Timer1->Count2=0;
  3532  052C  0857               	movf	(_Timer1),w
  3533  052D  3E05               	addlw	05h
  3534  052E  0084               	movwf	fsr0
  3535  052F  3000               	movlw	low(0)
  3536  0530  0080               	movwf	indf
  3537  0531  0A84               	incf	fsr0,f
  3538  0532  3000               	movlw	high(0)
  3539  0533  0080               	movwf	indf
  3540                           	line	25
  3541                           ;Timer1.c: 25: Timer1->PowerON=1;
  3542  0534  0857               	movf	(_Timer1),w
  3543  0535  0084               	movwf	fsr0
  3544  0536  1400               	bsf	indf,0
  3545  0537  2D82               	goto	l5996
  3546                           	line	26
  3547                           	
  3548  0538                     l5990:	
  3549                           	line	27
  3550                           ;Timer1.c: 26: }
  3551                           ;Timer1.c: 27: }
  3552  0538  2D82               	goto	l5996
  3553                           	line	28
  3554                           	
  3555  0539                     l5988:	
  3556                           	line	30
  3557                           	
  3558  0539                     l7869:	
  3559                           ;Timer1.c: 28: else
  3560                           ;Timer1.c: 29: {
  3561                           ;Timer1.c: 30: if(Timer1->Count2<100)
  3562  0539  0857               	movf	(_Timer1),w
  3563  053A  3E05               	addlw	05h
  3564  053B  0084               	movwf	fsr0
  3565  053C  0800               	movf	indf,w
  3566  053D  00C6               	movwf	(??_TMR1_Main+0)+0+0
  3567  053E  0A84               	incf	fsr0,f
  3568  053F  0800               	movf	indf,w
  3569  0540  00C7               	movwf	(??_TMR1_Main+0)+0+1
  3570  0541  3000               	movlw	high(064h)
  3571  0542  0247               	subwf	1+(??_TMR1_Main+0)+0,w
  3572  0543  3064               	movlw	low(064h)
  3573  0544  1903               	skipnz
  3574  0545  0246               	subwf	0+(??_TMR1_Main+0)+0,w
  3575  0546  1803               	skipnc
  3576  0547  2D49               	goto	u3501
  3577  0548  2D4A               	goto	u3500
  3578  0549                     u3501:
  3579  0549  2D53               	goto	l7873
  3580  054A                     u3500:
  3581                           	line	31
  3582                           	
  3583  054A                     l7871:	
  3584                           ;Timer1.c: 31: Timer1->Count2++;
  3585  054A  0857               	movf	(_Timer1),w
  3586  054B  3E05               	addlw	05h
  3587  054C  0084               	movwf	fsr0
  3588  054D  3001               	movlw	01h
  3589  054E  0780               	addwf	indf,f
  3590  054F  0A84               	incf	fsr0,f
  3591  0550  1803               	skipnc
  3592  0551  0A80               	incf	indf,f
  3593  0552  2D5E               	goto	l7877
  3594                           	line	32
  3595                           	
  3596  0553                     l5992:	
  3597                           	line	34
  3598                           	
  3599  0553                     l7873:	
  3600                           ;Timer1.c: 32: else
  3601                           ;Timer1.c: 33: {
  3602                           ;Timer1.c: 34: Timer1->Count2=0;
  3603  0553  0857               	movf	(_Timer1),w
  3604  0554  3E05               	addlw	05h
  3605  0555  0084               	movwf	fsr0
  3606  0556  3000               	movlw	low(0)
  3607  0557  0080               	movwf	indf
  3608  0558  0A84               	incf	fsr0,f
  3609  0559  3000               	movlw	high(0)
  3610  055A  0080               	movwf	indf
  3611                           	line	35
  3612                           	
  3613  055B                     l7875:	
  3614                           ;Timer1.c: 35: RB5=~RB5;
  3615  055B  3020               	movlw	1<<((53)&7)
  3616  055C  0686               	xorwf	((53)/8),f
  3617  055D  2D5E               	goto	l7877
  3618                           	line	48
  3619                           	
  3620  055E                     l5993:	
  3621                           	line	50
  3622                           	
  3623  055E                     l7877:	
  3624                           ;Timer1.c: 48: }
  3625                           ;Timer1.c: 50: if(Timer1->Count3<500)
  3626  055E  0857               	movf	(_Timer1),w
  3627  055F  3E07               	addlw	07h
  3628  0560  0084               	movwf	fsr0
  3629  0561  0800               	movf	indf,w
  3630  0562  00C6               	movwf	(??_TMR1_Main+0)+0+0
  3631  0563  0A84               	incf	fsr0,f
  3632  0564  0800               	movf	indf,w
  3633  0565  00C7               	movwf	(??_TMR1_Main+0)+0+1
  3634  0566  3001               	movlw	high(01F4h)
  3635  0567  0247               	subwf	1+(??_TMR1_Main+0)+0,w
  3636  0568  30F4               	movlw	low(01F4h)
  3637  0569  1903               	skipnz
  3638  056A  0246               	subwf	0+(??_TMR1_Main+0)+0,w
  3639  056B  1803               	skipnc
  3640  056C  2D6E               	goto	u3511
  3641  056D  2D6F               	goto	u3510
  3642  056E                     u3511:
  3643  056E  2D78               	goto	l7881
  3644  056F                     u3510:
  3645                           	line	51
  3646                           	
  3647  056F                     l7879:	
  3648                           ;Timer1.c: 51: Timer1->Count3++;
  3649  056F  0857               	movf	(_Timer1),w
  3650  0570  3E07               	addlw	07h
  3651  0571  0084               	movwf	fsr0
  3652  0572  3001               	movlw	01h
  3653  0573  0780               	addwf	indf,f
  3654  0574  0A84               	incf	fsr0,f
  3655  0575  1803               	skipnc
  3656  0576  0A80               	incf	indf,f
  3657  0577  2D82               	goto	l5996
  3658                           	line	52
  3659                           	
  3660  0578                     l5994:	
  3661                           	line	54
  3662                           	
  3663  0578                     l7881:	
  3664                           ;Timer1.c: 52: else
  3665                           ;Timer1.c: 53: {
  3666                           ;Timer1.c: 54: Timer1->Count3=0;
  3667  0578  0857               	movf	(_Timer1),w
  3668  0579  3E07               	addlw	07h
  3669  057A  0084               	movwf	fsr0
  3670  057B  3000               	movlw	low(0)
  3671  057C  0080               	movwf	indf
  3672  057D  0A84               	incf	fsr0,f
  3673  057E  3000               	movlw	high(0)
  3674  057F  0080               	movwf	indf
  3675  0580  2D82               	goto	l5996
  3676                           	line	61
  3677                           	
  3678  0581                     l5995:	
  3679  0581  2D82               	goto	l5996
  3680                           	line	62
  3681                           	
  3682  0582                     l5991:	
  3683                           	line	63
  3684                           	
  3685  0582                     l5996:	
  3686  0582  0008               	return
  3687                           	opt stack 0
  3688                           GLOBAL	__end_of_TMR1_Main
  3689  0583                     	__end_of_TMR1_Main:
  3690 ;; =============== function _TMR1_Main ends ============
  3691                           
  3692                           	signat	_TMR1_Main,88
  3693                           	global	_Mcu_Initial
  3694                           psect	text388,local,class=CODE,delta=2
  3695                           global __ptext388
  3696  0F3B                     __ptext388:
  3697                           
  3698 ;; *************** function _Mcu_Initial *****************
  3699 ;; Defined at:
  3700 ;;		line 73 in file "G:\Program\PIC\Source_File\MCU_16F723A.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;		None               void
  3707 ;; Registers used:
  3708 ;;		wreg, status,2
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3714 ;;      Params:         0       0       0       0
  3715 ;;      Locals:         0       0       0       0
  3716 ;;      Temps:          0       1       0       0
  3717 ;;      Totals:         0       1       0       0
  3718 ;;Total ram usage:        1 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    2
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           psect	text388
  3728                           	file	"G:\Program\PIC\Source_File\MCU_16F723A.c"
  3729                           	line	73
  3730                           	global	__size_of_Mcu_Initial
  3731  0034                     	__size_of_Mcu_Initial	equ	__end_of_Mcu_Initial-_Mcu_Initial
  3732                           	
  3733  0F3B                     _Mcu_Initial:	
  3734                           	opt	stack 5
  3735                           ; Regs used in _Mcu_Initial: [wreg+status,2]
  3736                           	line	75
  3737                           	
  3738  0F3B                     l7833:	
  3739                           ;MCU_16F723A.c: 75: TRISA=0xaf; TRISB=0x01; TRISC=0x00; ANSELA=0x07; ANSELB=0x01; PORTA=
                                 0xaf; PORTB=0x01; PORTC=0x00;
  3740  0F3B  30AF               	movlw	(0AFh)
  3741  0F3C  1683               	bsf	status, 5	;RP0=1, select bank1
  3742  0F3D  1303               	bcf	status, 6	;RP1=0, select bank1
  3743  0F3E  0085               	movwf	(133)^080h	;volatile
  3744  0F3F  3001               	movlw	(01h)
  3745  0F40  0086               	movwf	(134)^080h	;volatile
  3746                           	
  3747  0F41                     l7835:	
  3748  0F41  0187               	clrf	(135)^080h	;volatile
  3749                           	
  3750  0F42                     l7837:	
  3751  0F42  3007               	movlw	(07h)
  3752  0F43  1683               	bsf	status, 5	;RP0=1, select bank3
  3753  0F44  1703               	bsf	status, 6	;RP1=1, select bank3
  3754  0F45  0085               	movwf	(389)^0180h	;volatile
  3755                           	
  3756  0F46                     l7839:	
  3757  0F46  3001               	movlw	(01h)
  3758  0F47  0086               	movwf	(390)^0180h	;volatile
  3759                           	
  3760  0F48                     l7841:	
  3761  0F48  30AF               	movlw	(0AFh)
  3762  0F49  1283               	bcf	status, 5	;RP0=0, select bank0
  3763  0F4A  1303               	bcf	status, 6	;RP1=0, select bank0
  3764  0F4B  0085               	movwf	(5)	;volatile
  3765                           	
  3766  0F4C                     l7843:	
  3767  0F4C  3001               	movlw	(01h)
  3768  0F4D  0086               	movwf	(6)	;volatile
  3769                           	
  3770  0F4E                     l7845:	
  3771  0F4E  0187               	clrf	(7)	;volatile
  3772                           	line	79
  3773                           ;MCU_16F723A.c: 79: OSCCON=0x3c;
  3774  0F4F  303C               	movlw	(03Ch)
  3775  0F50  1683               	bsf	status, 5	;RP0=1, select bank1
  3776  0F51  1303               	bcf	status, 6	;RP1=0, select bank1
  3777  0F52  0090               	movwf	(144)^080h	;volatile
  3778                           	line	83
  3779                           ;MCU_16F723A.c: 83: ADCON1=0x73;
  3780  0F53  3073               	movlw	(073h)
  3781  0F54  009F               	movwf	(159)^080h	;volatile
  3782                           	line	84
  3783                           ;MCU_16F723A.c: 84: FVRCON=0xc1;
  3784  0F55  30C1               	movlw	(0C1h)
  3785  0F56  009D               	movwf	(157)^080h	;volatile
  3786                           	line	88
  3787                           ;MCU_16F723A.c: 88: Timer1=&VarTimer1; GIE=1; PEIE=1; T1CON=(0x00 | 0x41); TMR1IE=1; TMR
                                 1H=((65536-(1*200))/256); TMR1L=((65536-(1*200))%256); TMR1IF=0;;
  3788  0F57  3031               	movlw	(_VarTimer1)&0ffh
  3789  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  3790  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  3791  0F5A  00C6               	movwf	(??_Mcu_Initial+0)+0
  3792  0F5B  0846               	movf	(??_Mcu_Initial+0)+0,w
  3793  0F5C  00D7               	movwf	(_Timer1)
  3794                           	
  3795  0F5D                     l7847:	
  3796  0F5D  178B               	bsf	(95/8),(95)&7
  3797                           	
  3798  0F5E                     l7849:	
  3799  0F5E  170B               	bsf	(94/8),(94)&7
  3800  0F5F  3041               	movlw	(041h)
  3801  0F60  0090               	movwf	(16)	;volatile
  3802                           	
  3803  0F61                     l7851:	
  3804  0F61  1683               	bsf	status, 5	;RP0=1, select bank1
  3805  0F62  1303               	bcf	status, 6	;RP1=0, select bank1
  3806  0F63  140C               	bsf	(1120/8)^080h,(1120)&7
  3807  0F64  30FF               	movlw	(0FFh)
  3808  0F65  1283               	bcf	status, 5	;RP0=0, select bank0
  3809  0F66  1303               	bcf	status, 6	;RP1=0, select bank0
  3810  0F67  008F               	movwf	(15)	;volatile
  3811  0F68  3038               	movlw	(038h)
  3812  0F69  008E               	movwf	(14)	;volatile
  3813                           	
  3814  0F6A                     l7853:	
  3815  0F6A  100C               	bcf	(96/8),(96)&7
  3816                           	line	90
  3817                           	
  3818  0F6B                     l7855:	
  3819                           ;MCU_16F723A.c: 90: TMR0IE=0;
  3820  0F6B  128B               	bcf	(93/8),(93)&7
  3821                           	line	91
  3822                           ;MCU_16F723A.c: 91: TMR0=256-10;
  3823  0F6C  30F6               	movlw	(0F6h)
  3824  0F6D  0081               	movwf	(1)	;volatile
  3825                           	line	105
  3826                           	
  3827  0F6E                     l3399:	
  3828  0F6E  0008               	return
  3829                           	opt stack 0
  3830                           GLOBAL	__end_of_Mcu_Initial
  3831  0F6F                     	__end_of_Mcu_Initial:
  3832 ;; =============== function _Mcu_Initial ends ============
  3833                           
  3834                           	signat	_Mcu_Initial,88
  3835                           	global	_LED_Main
  3836                           psect	text389,local,class=CODE,delta=2
  3837                           global __ptext389
  3838  0EED                     __ptext389:
  3839                           
  3840 ;; *************** function _LED_Main *****************
  3841 ;; Defined at:
  3842 ;;		line 35 in file "G:\Program\PIC\Source_File\LED.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;		None               void
  3849 ;; Registers used:
  3850 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3856 ;;      Params:         0       0       0       0
  3857 ;;      Locals:         0       0       0       0
  3858 ;;      Temps:          0       1       0       0
  3859 ;;      Totals:         0       1       0       0
  3860 ;;Total ram usage:        1 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    2
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           psect	text389
  3870                           	file	"G:\Program\PIC\Source_File\LED.c"
  3871                           	line	35
  3872                           	global	__size_of_LED_Main
  3873  0022                     	__size_of_LED_Main	equ	__end_of_LED_Main-_LED_Main
  3874                           	
  3875  0EED                     _LED_Main:	
  3876                           	opt	stack 5
  3877                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0]
  3878                           	line	36
  3879                           	
  3880  0EED                     l7803:	
  3881                           ;LED.c: 36: if(LED->GO==1)
  3882  0EED  1283               	bcf	status, 5	;RP0=0, select bank0
  3883  0EEE  1303               	bcf	status, 6	;RP1=0, select bank0
  3884  0EEF  0856               	movf	(_LED),w
  3885  0EF0  0084               	movwf	fsr0
  3886  0EF1  1383               	bcf	status, 7	;select IRP bank0
  3887  0EF2  1C80               	btfss	indf,1
  3888  0EF3  2EF5               	goto	u3411
  3889  0EF4  2EF6               	goto	u3410
  3890  0EF5                     u3411:
  3891  0EF5  2F0E               	goto	l2562
  3892  0EF6                     u3410:
  3893                           	line	38
  3894                           	
  3895  0EF6                     l7805:	
  3896                           ;LED.c: 37: {
  3897                           ;LED.c: 38: LED->Time++;
  3898  0EF6  3001               	movlw	(01h)
  3899  0EF7  00C6               	movwf	(??_LED_Main+0)+0
  3900  0EF8  0856               	movf	(_LED),w
  3901  0EF9  3E01               	addlw	01h
  3902  0EFA  0084               	movwf	fsr0
  3903  0EFB  0846               	movf	(??_LED_Main+0)+0,w
  3904  0EFC  0780               	addwf	indf,f
  3905                           	line	39
  3906                           	
  3907  0EFD                     l7807:	
  3908                           ;LED.c: 39: if(LED->Time == 10)
  3909  0EFD  0856               	movf	(_LED),w
  3910  0EFE  3E01               	addlw	01h
  3911  0EFF  0084               	movwf	fsr0
  3912  0F00  0800               	movf	indf,w
  3913  0F01  3A0A               	xorlw	0Ah
  3914  0F02  1D03               	skipz
  3915  0F03  2F05               	goto	u3421
  3916  0F04  2F06               	goto	u3420
  3917  0F05                     u3421:
  3918  0F05  2F0E               	goto	l2562
  3919  0F06                     u3420:
  3920                           	line	41
  3921                           	
  3922  0F06                     l7809:	
  3923                           ;LED.c: 40: {
  3924                           ;LED.c: 41: LED->Time=0;
  3925  0F06  0856               	movf	(_LED),w
  3926  0F07  3E01               	addlw	01h
  3927  0F08  0084               	movwf	fsr0
  3928  0F09  0180               	clrf	indf
  3929                           	line	42
  3930                           	
  3931  0F0A                     l7811:	
  3932                           ;LED.c: 42: RB3=~RB3;
  3933  0F0A  3008               	movlw	1<<((51)&7)
  3934  0F0B  0686               	xorwf	((51)/8),f
  3935  0F0C  2F0E               	goto	l2562
  3936                           	line	43
  3937                           	
  3938  0F0D                     l2561:	
  3939  0F0D  2F0E               	goto	l2562
  3940                           	line	44
  3941                           	
  3942  0F0E                     l2560:	
  3943                           	line	45
  3944                           	
  3945  0F0E                     l2562:	
  3946  0F0E  0008               	return
  3947                           	opt stack 0
  3948                           GLOBAL	__end_of_LED_Main
  3949  0F0F                     	__end_of_LED_Main:
  3950 ;; =============== function _LED_Main ends ============
  3951                           
  3952                           	signat	_LED_Main,88
  3953                           	global	_LED_Setting
  3954                           psect	text390,local,class=CODE,delta=2
  3955                           global __ptext390
  3956  0F6F                     __ptext390:
  3957                           
  3958 ;; *************** function _LED_Setting *****************
  3959 ;; Defined at:
  3960 ;;		line 9 in file "G:\Program\PIC\Source_File\LED.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  number          1    wreg     unsigned char 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  number          1    0[BANK0 ] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;		None               void
  3967 ;; Registers used:
  3968 ;;		wreg, fsr0l, fsr0h
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3974 ;;      Params:         0       0       0       0
  3975 ;;      Locals:         0       1       0       0
  3976 ;;      Temps:          0       0       0       0
  3977 ;;      Totals:         0       1       0       0
  3978 ;;Total ram usage:        1 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    2
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;;		_PIR_Main
  3986 ;;		_PIR_Switch
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           psect	text390
  3990                           	file	"G:\Program\PIC\Source_File\LED.c"
  3991                           	line	9
  3992                           	global	__size_of_LED_Setting
  3993  0042                     	__size_of_LED_Setting	equ	__end_of_LED_Setting-_LED_Setting
  3994                           	
  3995  0F6F                     _LED_Setting:	
  3996                           	opt	stack 4
  3997                           ; Regs used in _LED_Setting: [wregfsr0]
  3998                           ;LED_Setting@number stored from wreg
  3999  0F6F  1283               	bcf	status, 5	;RP0=0, select bank0
  4000  0F70  1303               	bcf	status, 6	;RP1=0, select bank0
  4001  0F71  00C6               	movwf	(LED_Setting@number)
  4002                           	line	10
  4003                           	
  4004  0F72                     l7775:	
  4005                           ;LED.c: 10: if(LED->Enable == 1)
  4006  0F72  0856               	movf	(_LED),w
  4007  0F73  0084               	movwf	fsr0
  4008  0F74  1383               	bcf	status, 7	;select IRP bank0
  4009  0F75  1C00               	btfss	indf,0
  4010  0F76  2F78               	goto	u3341
  4011  0F77  2F79               	goto	u3340
  4012  0F78                     u3341:
  4013  0F78  2FB0               	goto	l2557
  4014  0F79                     u3340:
  4015                           	line	12
  4016                           	
  4017  0F79                     l7777:	
  4018                           ;LED.c: 11: {
  4019                           ;LED.c: 12: if(RB5 == 0)
  4020  0F79  1A86               	btfsc	(53/8),(53)&7
  4021  0F7A  2F7C               	goto	u3351
  4022  0F7B  2F7D               	goto	u3350
  4023  0F7C                     u3351:
  4024  0F7C  2F7F               	goto	l2547
  4025  0F7D                     u3350:
  4026                           	line	13
  4027                           	
  4028  0F7D                     l7779:	
  4029                           ;LED.c: 13: RB5 = 1;
  4030  0F7D  1686               	bsf	(53/8),(53)&7
  4031  0F7E  2F86               	goto	l7783
  4032                           	line	14
  4033                           	
  4034  0F7F                     l2547:	
  4035                           ;LED.c: 14: else if(RB4 == 0)
  4036  0F7F  1A06               	btfsc	(52/8),(52)&7
  4037  0F80  2F82               	goto	u3361
  4038  0F81  2F83               	goto	u3360
  4039  0F82                     u3361:
  4040  0F82  2F86               	goto	l7783
  4041  0F83                     u3360:
  4042                           	line	15
  4043                           	
  4044  0F83                     l7781:	
  4045                           ;LED.c: 15: RB4 = 1;
  4046  0F83  1606               	bsf	(52/8),(52)&7
  4047  0F84  2F86               	goto	l7783
  4048                           	
  4049  0F85                     l2549:	
  4050  0F85  2F86               	goto	l7783
  4051                           	line	17
  4052                           	
  4053  0F86                     l2548:	
  4054                           	
  4055  0F86                     l7783:	
  4056                           ;LED.c: 17: if(number == 1)
  4057  0F86  0846               	movf	(LED_Setting@number),w
  4058  0F87  3A01               	xorlw	01h
  4059  0F88  1D03               	skipz
  4060  0F89  2F8B               	goto	u3371
  4061  0F8A  2F8C               	goto	u3370
  4062  0F8B                     u3371:
  4063  0F8B  2F8E               	goto	l7787
  4064  0F8C                     u3370:
  4065                           	line	18
  4066                           	
  4067  0F8C                     l7785:	
  4068                           ;LED.c: 18: RB5 = 0;
  4069  0F8C  1286               	bcf	(53/8),(53)&7
  4070  0F8D  2FB0               	goto	l2557
  4071                           	line	19
  4072                           	
  4073  0F8E                     l2550:	
  4074                           	
  4075  0F8E                     l7787:	
  4076                           ;LED.c: 19: else if(number == 2)
  4077  0F8E  0846               	movf	(LED_Setting@number),w
  4078  0F8F  3A02               	xorlw	02h
  4079  0F90  1D03               	skipz
  4080  0F91  2F93               	goto	u3381
  4081  0F92  2F94               	goto	u3380
  4082  0F93                     u3381:
  4083  0F93  2F96               	goto	l7791
  4084  0F94                     u3380:
  4085                           	line	20
  4086                           	
  4087  0F94                     l7789:	
  4088                           ;LED.c: 20: RB4 = 0;
  4089  0F94  1206               	bcf	(52/8),(52)&7
  4090  0F95  2FB0               	goto	l2557
  4091                           	line	21
  4092                           	
  4093  0F96                     l2552:	
  4094                           	
  4095  0F96                     l7791:	
  4096                           ;LED.c: 21: else if(number == 31)
  4097  0F96  0846               	movf	(LED_Setting@number),w
  4098  0F97  3A1F               	xorlw	01Fh
  4099  0F98  1D03               	skipz
  4100  0F99  2F9B               	goto	u3391
  4101  0F9A  2F9C               	goto	u3390
  4102  0F9B                     u3391:
  4103  0F9B  2FA1               	goto	l7797
  4104  0F9C                     u3390:
  4105                           	line	23
  4106                           	
  4107  0F9C                     l7793:	
  4108                           ;LED.c: 22: {
  4109                           ;LED.c: 23: RB3 = 0;
  4110  0F9C  1186               	bcf	(51/8),(51)&7
  4111                           	line	24
  4112                           	
  4113  0F9D                     l7795:	
  4114                           ;LED.c: 24: LED->GO=1;
  4115  0F9D  0856               	movf	(_LED),w
  4116  0F9E  0084               	movwf	fsr0
  4117  0F9F  1480               	bsf	indf,1
  4118                           	line	25
  4119                           ;LED.c: 25: }
  4120  0FA0  2FB0               	goto	l2557
  4121                           	line	26
  4122                           	
  4123  0FA1                     l2554:	
  4124                           	
  4125  0FA1                     l7797:	
  4126                           ;LED.c: 26: else if(number == 30)
  4127  0FA1  0846               	movf	(LED_Setting@number),w
  4128  0FA2  3A1E               	xorlw	01Eh
  4129  0FA3  1D03               	skipz
  4130  0FA4  2FA6               	goto	u3401
  4131  0FA5  2FA7               	goto	u3400
  4132  0FA6                     u3401:
  4133  0FA6  2FB0               	goto	l2557
  4134  0FA7                     u3400:
  4135                           	line	28
  4136                           	
  4137  0FA7                     l7799:	
  4138                           ;LED.c: 27: {
  4139                           ;LED.c: 28: RB3 = 1;
  4140  0FA7  1586               	bsf	(51/8),(51)&7
  4141                           	line	29
  4142                           	
  4143  0FA8                     l7801:	
  4144                           ;LED.c: 29: LED->GO=0;
  4145  0FA8  0856               	movf	(_LED),w
  4146  0FA9  0084               	movwf	fsr0
  4147  0FAA  1080               	bcf	indf,1
  4148  0FAB  2FB0               	goto	l2557
  4149                           	line	30
  4150                           	
  4151  0FAC                     l2556:	
  4152  0FAC  2FB0               	goto	l2557
  4153                           	line	31
  4154                           	
  4155  0FAD                     l2555:	
  4156  0FAD  2FB0               	goto	l2557
  4157                           	
  4158  0FAE                     l2553:	
  4159  0FAE  2FB0               	goto	l2557
  4160                           	
  4161  0FAF                     l2551:	
  4162  0FAF  2FB0               	goto	l2557
  4163                           	
  4164  0FB0                     l2546:	
  4165                           	line	32
  4166                           	
  4167  0FB0                     l2557:	
  4168  0FB0  0008               	return
  4169                           	opt stack 0
  4170                           GLOBAL	__end_of_LED_Setting
  4171  0FB1                     	__end_of_LED_Setting:
  4172 ;; =============== function _LED_Setting ends ============
  4173                           
  4174                           	signat	_LED_Setting,4216
  4175                           	global	_Dimmer_Control
  4176                           psect	text391,local,class=CODE,delta=2
  4177                           global __ptext391
  4178  0681                     __ptext391:
  4179                           
  4180 ;; *************** function _Dimmer_Control *****************
  4181 ;; Defined at:
  4182 ;;		line 107 in file "G:\Program\PIC\Source_File\Dimmer.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  number          1    wreg     unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  number          1    1[BANK0 ] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;		None               void
  4189 ;; Registers used:
  4190 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4196 ;;      Params:         0       0       0       0
  4197 ;;      Locals:         0       1       0       0
  4198 ;;      Temps:          0       1       0       0
  4199 ;;      Totals:         0       2       0       0
  4200 ;;Total ram usage:        2 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    2
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_PIR_Main
  4207 ;;		_PIR_Switch
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           psect	text391
  4211                           	file	"G:\Program\PIC\Source_File\Dimmer.c"
  4212                           	line	107
  4213                           	global	__size_of_Dimmer_Control
  4214  006F                     	__size_of_Dimmer_Control	equ	__end_of_Dimmer_Control-_Dimmer_Control
  4215                           	
  4216  0681                     _Dimmer_Control:	
  4217                           	opt	stack 4
  4218                           ; Regs used in _Dimmer_Control: [wreg-fsr0h+status,2+status,0]
  4219                           ;Dimmer_Control@number stored from wreg
  4220  0681  1283               	bcf	status, 5	;RP0=0, select bank0
  4221  0682  1303               	bcf	status, 6	;RP1=0, select bank0
  4222  0683  00C7               	movwf	(Dimmer_Control@number)
  4223                           	line	108
  4224                           	
  4225  0684                     l7757:	
  4226                           ;Dimmer.c: 108: if(number==0)
  4227  0684  08C7               	movf	(Dimmer_Control@number),f
  4228  0685  1D03               	skipz
  4229  0686  2E88               	goto	u3301
  4230  0687  2E89               	goto	u3300
  4231  0688                     u3301:
  4232  0688  2ED5               	goto	l7771
  4233  0689                     u3300:
  4234                           	line	110
  4235                           	
  4236  0689                     l7759:	
  4237                           ;Dimmer.c: 109: {
  4238                           ;Dimmer.c: 110: Dimmer->Lights=0;
  4239  0689  0855               	movf	(_Dimmer),w
  4240  068A  3E0A               	addlw	0Ah
  4241  068B  0084               	movwf	fsr0
  4242  068C  1383               	bcf	status, 7	;select IRP bank0
  4243  068D  1080               	bcf	indf,1
  4244                           	line	111
  4245                           ;Dimmer.c: 112: if(2 == 2)
  4246  068E  0855               	movf	(_Dimmer),w
  4247  068F  3E0A               	addlw	0Ah
  4248  0690  0084               	movwf	fsr0
  4249  0691  1400               	bsf	indf,0
  4250                           	line	114
  4251                           ;Dimmer.c: 113: {
  4252                           ;Dimmer.c: 114: if(Dimmer->Phase2 == 1) { Dimmer->Minimum=157; Dimmer->DimmingTimeValue=
                                 4; } else { Dimmer->DimmingTimeValue=2; if(PIR->Switch == 0) { Dimmer->Phase2 = 1; Dimme
                                 r->Minimum=157; } else { Dimmer->Minimum=132; } };
  4253  0692  0855               	movf	(_Dimmer),w
  4254  0693  3E0A               	addlw	0Ah
  4255  0694  0084               	movwf	fsr0
  4256  0695  1D80               	btfss	indf,3
  4257  0696  2E98               	goto	u3311
  4258  0697  2E99               	goto	u3310
  4259  0698                     u3311:
  4260  0698  2EA8               	goto	l7763
  4261  0699                     u3310:
  4262                           	
  4263  0699                     l7761:	
  4264  0699  309D               	movlw	(09Dh)
  4265  069A  00C6               	movwf	(??_Dimmer_Control+0)+0
  4266  069B  0855               	movf	(_Dimmer),w
  4267  069C  3E0C               	addlw	0Ch
  4268  069D  0084               	movwf	fsr0
  4269  069E  0846               	movf	(??_Dimmer_Control+0)+0,w
  4270  069F  0080               	movwf	indf
  4271  06A0  3004               	movlw	(04h)
  4272  06A1  00C6               	movwf	(??_Dimmer_Control+0)+0
  4273  06A2  0855               	movf	(_Dimmer),w
  4274  06A3  3E08               	addlw	08h
  4275  06A4  0084               	movwf	fsr0
  4276  06A5  0846               	movf	(??_Dimmer_Control+0)+0,w
  4277  06A6  0080               	movwf	indf
  4278  06A7  2EEF               	goto	l1714
  4279                           	
  4280  06A8                     l1704:	
  4281                           	
  4282  06A8                     l7763:	
  4283  06A8  3002               	movlw	(02h)
  4284  06A9  00C6               	movwf	(??_Dimmer_Control+0)+0
  4285  06AA  0855               	movf	(_Dimmer),w
  4286  06AB  3E08               	addlw	08h
  4287  06AC  0084               	movwf	fsr0
  4288  06AD  0846               	movf	(??_Dimmer_Control+0)+0,w
  4289  06AE  0080               	movwf	indf
  4290  06AF  0822               	movf	(_PIR),w
  4291  06B0  3E13               	addlw	013h
  4292  06B1  0084               	movwf	fsr0
  4293  06B2  1900               	btfsc	indf,2
  4294  06B3  2EB5               	goto	u3321
  4295  06B4  2EB6               	goto	u3320
  4296  06B5                     u3321:
  4297  06B5  2EC2               	goto	l7767
  4298  06B6                     u3320:
  4299                           	
  4300  06B6                     l7765:	
  4301  06B6  0855               	movf	(_Dimmer),w
  4302  06B7  3E0A               	addlw	0Ah
  4303  06B8  0084               	movwf	fsr0
  4304  06B9  1580               	bsf	indf,3
  4305  06BA  309D               	movlw	(09Dh)
  4306  06BB  00C6               	movwf	(??_Dimmer_Control+0)+0
  4307  06BC  0855               	movf	(_Dimmer),w
  4308  06BD  3E0C               	addlw	0Ch
  4309  06BE  0084               	movwf	fsr0
  4310  06BF  0846               	movf	(??_Dimmer_Control+0)+0,w
  4311  06C0  0080               	movwf	indf
  4312  06C1  2EEF               	goto	l1714
  4313                           	
  4314  06C2                     l1706:	
  4315                           	
  4316  06C2                     l7767:	
  4317  06C2  3084               	movlw	(084h)
  4318  06C3  00C6               	movwf	(??_Dimmer_Control+0)+0
  4319  06C4  0855               	movf	(_Dimmer),w
  4320  06C5  3E0C               	addlw	0Ch
  4321  06C6  0084               	movwf	fsr0
  4322  06C7  0846               	movf	(??_Dimmer_Control+0)+0,w
  4323  06C8  0080               	movwf	indf
  4324  06C9  2EEF               	goto	l1714
  4325                           	
  4326  06CA                     l1707:	
  4327  06CA  2EEF               	goto	l1714
  4328                           	
  4329  06CB                     l1705:	
  4330                           	line	115
  4331                           ;Dimmer.c: 115: }
  4332  06CB  2EEF               	goto	l1714
  4333                           	line	116
  4334                           	
  4335  06CC                     l1703:	
  4336                           	line	117
  4337                           	
  4338  06CC                     l7769:	
  4339                           ;Dimmer.c: 116: else
  4340                           ;Dimmer.c: 117: Dimmer->DimmingTimeValue=2;
  4341  06CC  3002               	movlw	(02h)
  4342  06CD  00C6               	movwf	(??_Dimmer_Control+0)+0
  4343  06CE  0855               	movf	(_Dimmer),w
  4344  06CF  3E08               	addlw	08h
  4345  06D0  0084               	movwf	fsr0
  4346  06D1  0846               	movf	(??_Dimmer_Control+0)+0,w
  4347  06D2  0080               	movwf	indf
  4348  06D3  2EEF               	goto	l1714
  4349                           	
  4350  06D4                     l1708:	
  4351                           	line	118
  4352                           ;Dimmer.c: 118: }
  4353  06D4  2EEF               	goto	l1714
  4354                           	line	119
  4355                           	
  4356  06D5                     l1702:	
  4357                           	
  4358  06D5                     l7771:	
  4359                           ;Dimmer.c: 119: else if(number==1)
  4360  06D5  0847               	movf	(Dimmer_Control@number),w
  4361  06D6  3A01               	xorlw	01h
  4362  06D7  1D03               	skipz
  4363  06D8  2EDA               	goto	u3331
  4364  06D9  2EDB               	goto	u3330
  4365  06DA                     u3331:
  4366  06DA  2EEF               	goto	l1714
  4367  06DB                     u3330:
  4368                           	line	121
  4369                           	
  4370  06DB                     l7773:	
  4371                           ;Dimmer.c: 120: {
  4372                           ;Dimmer.c: 121: Dimmer->Lights=1;
  4373  06DB  0855               	movf	(_Dimmer),w
  4374  06DC  3E0A               	addlw	0Ah
  4375  06DD  0084               	movwf	fsr0
  4376  06DE  1383               	bcf	status, 7	;select IRP bank0
  4377  06DF  1480               	bsf	indf,1
  4378                           	line	122
  4379                           ;Dimmer.c: 122: Dimmer->Signal=1;
  4380  06E0  0855               	movf	(_Dimmer),w
  4381  06E1  3E0A               	addlw	0Ah
  4382  06E2  0084               	movwf	fsr0
  4383  06E3  1400               	bsf	indf,0
  4384                           	line	123
  4385                           ;Dimmer.c: 124: if(2 == 0 || 2 == 2)
  4386  06E4  0855               	movf	(_Dimmer),w
  4387  06E5  3E08               	addlw	08h
  4388  06E6  0084               	movwf	fsr0
  4389  06E7  0180               	clrf	indf
  4390                           	line	124
  4391                           	
  4392  06E8                     l1713:	
  4393                           	line	125
  4394                           ;Dimmer.c: 125: Dimmer->Triac=1;
  4395  06E8  0855               	movf	(_Dimmer),w
  4396  06E9  3E0A               	addlw	0Ah
  4397  06EA  0084               	movwf	fsr0
  4398  06EB  1500               	bsf	indf,2
  4399  06EC  2EEF               	goto	l1714
  4400                           	
  4401  06ED                     l1711:	
  4402  06ED  2EEF               	goto	l1714
  4403                           	line	126
  4404                           	
  4405  06EE                     l1710:	
  4406  06EE  2EEF               	goto	l1714
  4407                           	line	127
  4408                           	
  4409  06EF                     l1709:	
  4410                           	
  4411  06EF                     l1714:	
  4412  06EF  0008               	return
  4413                           	opt stack 0
  4414                           GLOBAL	__end_of_Dimmer_Control
  4415  06F0                     	__end_of_Dimmer_Control:
  4416 ;; =============== function _Dimmer_Control ends ============
  4417                           
  4418                           	signat	_Dimmer_Control,4216
  4419                           	global	_Buzzer_Main
  4420                           psect	text392,local,class=CODE,delta=2
  4421                           global __ptext392
  4422  06F0                     __ptext392:
  4423                           
  4424 ;; *************** function _Buzzer_Main *****************
  4425 ;; Defined at:
  4426 ;;		line 25 in file "G:\Program\PIC\Source_File\Buzzer.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;		None               void
  4433 ;; Registers used:
  4434 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4440 ;;      Params:         0       0       0       0
  4441 ;;      Locals:         0       0       0       0
  4442 ;;      Temps:          0       1       0       0
  4443 ;;      Totals:         0       1       0       0
  4444 ;;Total ram usage:        1 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    2
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_main
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           psect	text392
  4454                           	file	"G:\Program\PIC\Source_File\Buzzer.c"
  4455                           	line	25
  4456                           	global	__size_of_Buzzer_Main
  4457  0053                     	__size_of_Buzzer_Main	equ	__end_of_Buzzer_Main-_Buzzer_Main
  4458                           	
  4459  06F0                     _Buzzer_Main:	
  4460                           	opt	stack 5
  4461                           ; Regs used in _Buzzer_Main: [wreg-fsr0h+status,2+status,0]
  4462                           	line	26
  4463                           	
  4464  06F0                     l7677:	
  4465                           ;Buzzer.c: 26: if(Buzzer->GO==1)
  4466  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
  4467  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
  4468  06F2  0820               	movf	(_Buzzer),w
  4469  06F3  0084               	movwf	fsr0
  4470  06F4  1383               	bcf	status, 7	;select IRP bank0
  4471  06F5  1C80               	btfss	indf,1
  4472  06F6  2EF8               	goto	u3091
  4473  06F7  2EF9               	goto	u3090
  4474  06F8                     u3091:
  4475  06F8  2F42               	goto	l843
  4476  06F9                     u3090:
  4477                           	line	28
  4478                           	
  4479  06F9                     l7679:	
  4480                           ;Buzzer.c: 27: {
  4481                           ;Buzzer.c: 28: Buzzer->Time++;
  4482  06F9  3001               	movlw	(01h)
  4483  06FA  00C6               	movwf	(??_Buzzer_Main+0)+0
  4484  06FB  0820               	movf	(_Buzzer),w
  4485  06FC  3E03               	addlw	03h
  4486  06FD  0084               	movwf	fsr0
  4487  06FE  0846               	movf	(??_Buzzer_Main+0)+0,w
  4488  06FF  0780               	addwf	indf,f
  4489                           	line	30
  4490                           	
  4491  0700                     l7681:	
  4492                           ;Buzzer.c: 30: if(Buzzer->Time==8)
  4493  0700  0820               	movf	(_Buzzer),w
  4494  0701  3E03               	addlw	03h
  4495  0702  0084               	movwf	fsr0
  4496  0703  0800               	movf	indf,w
  4497  0704  3A08               	xorlw	08h
  4498  0705  1D03               	skipz
  4499  0706  2F08               	goto	u3101
  4500  0707  2F09               	goto	u3100
  4501  0708                     u3101:
  4502  0708  2F42               	goto	l843
  4503  0709                     u3100:
  4504                           	line	32
  4505                           	
  4506  0709                     l7683:	
  4507                           ;Buzzer.c: 31: {
  4508                           ;Buzzer.c: 32: Buzzer->Time=0;
  4509  0709  0820               	movf	(_Buzzer),w
  4510  070A  3E03               	addlw	03h
  4511  070B  0084               	movwf	fsr0
  4512  070C  0180               	clrf	indf
  4513                           	line	33
  4514                           	
  4515  070D                     l7685:	
  4516                           ;Buzzer.c: 33: if(RB1==0)
  4517  070D  1886               	btfsc	(49/8),(49)&7
  4518  070E  2F10               	goto	u3111
  4519  070F  2F11               	goto	u3110
  4520  0710                     u3111:
  4521  0710  2F13               	goto	l837
  4522  0711                     u3110:
  4523                           	line	34
  4524                           	
  4525  0711                     l7687:	
  4526                           ;Buzzer.c: 34: RB1=1;
  4527  0711  1486               	bsf	(49/8),(49)&7
  4528  0712  2F42               	goto	l843
  4529                           	line	35
  4530                           	
  4531  0713                     l837:	
  4532                           	line	37
  4533                           ;Buzzer.c: 35: else
  4534                           ;Buzzer.c: 36: {
  4535                           ;Buzzer.c: 37: RB1=0;
  4536  0713  1086               	bcf	(49/8),(49)&7
  4537                           	line	39
  4538                           	
  4539  0714                     l7689:	
  4540                           ;Buzzer.c: 39: if(Buzzer->Count>1)
  4541  0714  0820               	movf	(_Buzzer),w
  4542  0715  3E01               	addlw	01h
  4543  0716  0084               	movwf	fsr0
  4544  0717  3002               	movlw	(02h)
  4545  0718  0200               	subwf	indf,w
  4546  0719  1C03               	skipc
  4547  071A  2F1C               	goto	u3121
  4548  071B  2F1D               	goto	u3120
  4549  071C                     u3121:
  4550  071C  2F23               	goto	l7693
  4551  071D                     u3120:
  4552                           	line	40
  4553                           	
  4554  071D                     l7691:	
  4555                           ;Buzzer.c: 40: Buzzer->Count--;
  4556  071D  0820               	movf	(_Buzzer),w
  4557  071E  3E01               	addlw	01h
  4558  071F  0084               	movwf	fsr0
  4559  0720  3001               	movlw	low(01h)
  4560  0721  0280               	subwf	indf,f
  4561  0722  2F42               	goto	l843
  4562                           	line	41
  4563                           	
  4564  0723                     l839:	
  4565                           	line	43
  4566                           	
  4567  0723                     l7693:	
  4568                           ;Buzzer.c: 41: else
  4569                           ;Buzzer.c: 42: {
  4570                           ;Buzzer.c: 43: if(Buzzer->Register==0)
  4571  0723  0820               	movf	(_Buzzer),w
  4572  0724  3E02               	addlw	02h
  4573  0725  0084               	movwf	fsr0
  4574  0726  0880               	movf	indf,f
  4575  0727  1D03               	skipz
  4576  0728  2F2A               	goto	u3131
  4577  0729  2F2B               	goto	u3130
  4578  072A                     u3131:
  4579  072A  2F2F               	goto	l7697
  4580  072B                     u3130:
  4581                           	line	44
  4582                           	
  4583  072B                     l7695:	
  4584                           ;Buzzer.c: 44: Buzzer->GO=0;
  4585  072B  0820               	movf	(_Buzzer),w
  4586  072C  0084               	movwf	fsr0
  4587  072D  1080               	bcf	indf,1
  4588  072E  2F42               	goto	l843
  4589                           	line	45
  4590                           	
  4591  072F                     l841:	
  4592                           	line	47
  4593                           	
  4594  072F                     l7697:	
  4595                           ;Buzzer.c: 45: else
  4596                           ;Buzzer.c: 46: {
  4597                           ;Buzzer.c: 47: Buzzer->Count += Buzzer->Register;
  4598  072F  0820               	movf	(_Buzzer),w
  4599  0730  3E02               	addlw	02h
  4600  0731  0084               	movwf	fsr0
  4601  0732  0800               	movf	indf,w
  4602  0733  00C6               	movwf	(??_Buzzer_Main+0)+0
  4603  0734  0820               	movf	(_Buzzer),w
  4604  0735  3E01               	addlw	01h
  4605  0736  0084               	movwf	fsr0
  4606  0737  0846               	movf	(??_Buzzer_Main+0)+0,w
  4607  0738  0780               	addwf	indf,f
  4608                           	line	48
  4609                           	
  4610  0739                     l7699:	
  4611                           ;Buzzer.c: 48: Buzzer->Register=0;
  4612  0739  0820               	movf	(_Buzzer),w
  4613  073A  3E02               	addlw	02h
  4614  073B  0084               	movwf	fsr0
  4615  073C  0180               	clrf	indf
  4616  073D  2F42               	goto	l843
  4617                           	line	49
  4618                           	
  4619  073E                     l842:	
  4620  073E  2F42               	goto	l843
  4621                           	line	50
  4622                           	
  4623  073F                     l840:	
  4624  073F  2F42               	goto	l843
  4625                           	line	51
  4626                           	
  4627  0740                     l838:	
  4628  0740  2F42               	goto	l843
  4629                           	line	52
  4630                           	
  4631  0741                     l836:	
  4632  0741  2F42               	goto	l843
  4633                           	line	53
  4634                           	
  4635  0742                     l835:	
  4636                           	line	54
  4637                           	
  4638  0742                     l843:	
  4639  0742  0008               	return
  4640                           	opt stack 0
  4641                           GLOBAL	__end_of_Buzzer_Main
  4642  0743                     	__end_of_Buzzer_Main:
  4643 ;; =============== function _Buzzer_Main ends ============
  4644                           
  4645                           	signat	_Buzzer_Main,88
  4646                           	global	_ISR
  4647                           psect	text393,local,class=CODE,delta=2
  4648                           global __ptext393
  4649  0FB1                     __ptext393:
  4650                           
  4651 ;; *************** function _ISR *****************
  4652 ;; Defined at:
  4653 ;;		line 16 in file "G:\Program\PIC\Source_File\MCU_16F723A.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;		None               void
  4660 ;; Registers used:
  4661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4667 ;;      Params:         0       0       0       0
  4668 ;;      Locals:         0       0       0       0
  4669 ;;      Temps:          6       0       0       0
  4670 ;;      Totals:         6       0       0       0
  4671 ;;Total ram usage:        6 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    1
  4674 ;; This function calls:
  4675 ;;		_Dimmer_Main
  4676 ;; This function is called by:
  4677 ;;		Interrupt level 1
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           psect	text393
  4681                           	file	"G:\Program\PIC\Source_File\MCU_16F723A.c"
  4682                           	line	16
  4683                           	global	__size_of_ISR
  4684  004F                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  4685                           	
  4686  0FB1                     _ISR:	
  4687                           	opt	stack 3
  4688                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4689                           psect	intentry,class=CODE,delta=2
  4690                           global __pintentry
  4691  0004                     __pintentry:
  4692                           global interrupt_function
  4693  0004                     interrupt_function:
  4694                           	global saved_w
  4695  007E                     	saved_w	set	btemp+0
  4696  0004  00FE               	movwf	saved_w
  4697  0005  0E03               	swapf	status,w
  4698  0006  00F4               	movwf	(??_ISR+2)
  4699  0007  0804               	movf	fsr0,w
  4700  0008  00F5               	movwf	(??_ISR+3)
  4701  0009  080A               	movf	pclath,w
  4702  000A  00F6               	movwf	(??_ISR+4)
  4703  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  4704  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  4705  000D  087F               	movf	btemp+1,w
  4706  000E  00F7               	movwf	(??_ISR+5)
  4707  000F  158A  2FB1         	ljmp	_ISR
  4708                           psect	text393
  4709                           	line	42
  4710                           	
  4711  0FB1                     i1l7813:	
  4712                           ;MCU_16F723A.c: 42: if(TMR1IE && TMR1IF)
  4713  0FB1  1683               	bsf	status, 5	;RP0=1, select bank1
  4714  0FB2  1303               	bcf	status, 6	;RP1=0, select bank1
  4715  0FB3  1C0C               	btfss	(1120/8)^080h,(1120)&7
  4716  0FB4  2FB6               	goto	u343_21
  4717  0FB5  2FB7               	goto	u343_20
  4718  0FB6                     u343_21:
  4719  0FB6  2FF4               	goto	i1l3396
  4720  0FB7                     u343_20:
  4721                           	
  4722  0FB7                     i1l7815:	
  4723  0FB7  1283               	bcf	status, 5	;RP0=0, select bank0
  4724  0FB8  1303               	bcf	status, 6	;RP1=0, select bank0
  4725  0FB9  1C0C               	btfss	(96/8),(96)&7
  4726  0FBA  2FBC               	goto	u344_21
  4727  0FBB  2FBD               	goto	u344_20
  4728  0FBC                     u344_21:
  4729  0FBC  2FF4               	goto	i1l3396
  4730  0FBD                     u344_20:
  4731                           	line	44
  4732                           	
  4733  0FBD                     i1l7817:	
  4734                           ;MCU_16F723A.c: 43: {
  4735                           ;MCU_16F723A.c: 44: if(Timer1->PowerON==1)
  4736  0FBD  0857               	movf	(_Timer1),w
  4737  0FBE  0084               	movwf	fsr0
  4738  0FBF  1383               	bcf	status, 7	;select IRP bank0
  4739  0FC0  1C00               	btfss	indf,0
  4740  0FC1  2FC3               	goto	u345_21
  4741  0FC2  2FC4               	goto	u345_20
  4742  0FC3                     u345_21:
  4743  0FC3  2FC8               	goto	i1l7821
  4744  0FC4                     u345_20:
  4745                           	line	46
  4746                           	
  4747  0FC4                     i1l7819:	
  4748                           ;MCU_16F723A.c: 45: {
  4749                           ;MCU_16F723A.c: 46: Dimmer_Main();
  4750  0FC4  118A  232B  158A   	fcall	_Dimmer_Main
  4751  0FC7  2FC8               	goto	i1l7821
  4752                           	line	47
  4753                           	
  4754  0FC8                     i1l3394:	
  4755                           	line	49
  4756                           	
  4757  0FC8                     i1l7821:	
  4758                           ;MCU_16F723A.c: 47: }
  4759                           ;MCU_16F723A.c: 49: Timer1->Count++;
  4760  0FC8  1283               	bcf	status, 5	;RP0=0, select bank0
  4761  0FC9  1303               	bcf	status, 6	;RP1=0, select bank0
  4762  0FCA  0857               	movf	(_Timer1),w
  4763  0FCB  3E01               	addlw	01h
  4764  0FCC  0084               	movwf	fsr0
  4765  0FCD  3001               	movlw	01h
  4766  0FCE  1383               	bcf	status, 7	;select IRP bank0
  4767  0FCF  0780               	addwf	indf,f
  4768  0FD0  0A84               	incf	fsr0,f
  4769  0FD1  1803               	skipnc
  4770  0FD2  0A80               	incf	indf,f
  4771                           	line	50
  4772                           	
  4773  0FD3                     i1l7823:	
  4774                           ;MCU_16F723A.c: 50: if(Timer1->Count == 200)
  4775  0FD3  0857               	movf	(_Timer1),w
  4776  0FD4  3E01               	addlw	01h
  4777  0FD5  0084               	movwf	fsr0
  4778  0FD6  0800               	movf	indf,w
  4779  0FD7  00F2               	movwf	(??_ISR+0)+0+0
  4780  0FD8  0A84               	incf	fsr0,f
  4781  0FD9  0800               	movf	indf,w
  4782  0FDA  00F3               	movwf	(??_ISR+0)+0+1
  4783  0FDB  30C8               	movlw	0C8h
  4784  0FDC  0672               	xorwf	0+(??_ISR+0)+0,w
  4785  0FDD  0473               	iorwf	1+(??_ISR+0)+0,w
  4786  0FDE  1D03               	skipz
  4787  0FDF  2FE1               	goto	u346_21
  4788  0FE0  2FE2               	goto	u346_20
  4789  0FE1                     u346_21:
  4790  0FE1  2FEE               	goto	i1l7827
  4791  0FE2                     u346_20:
  4792                           	line	52
  4793                           	
  4794  0FE2                     i1l7825:	
  4795                           ;MCU_16F723A.c: 51: {
  4796                           ;MCU_16F723A.c: 52: Timer1->Count=0;
  4797  0FE2  0857               	movf	(_Timer1),w
  4798  0FE3  3E01               	addlw	01h
  4799  0FE4  0084               	movwf	fsr0
  4800  0FE5  3000               	movlw	low(0)
  4801  0FE6  0080               	movwf	indf
  4802  0FE7  0A84               	incf	fsr0,f
  4803  0FE8  3000               	movlw	high(0)
  4804  0FE9  0080               	movwf	indf
  4805                           	line	53
  4806                           ;MCU_16F723A.c: 53: Timer1->Timeout=1;
  4807  0FEA  0857               	movf	(_Timer1),w
  4808  0FEB  0084               	movwf	fsr0
  4809  0FEC  1500               	bsf	indf,2
  4810  0FED  2FEE               	goto	i1l7827
  4811                           	line	54
  4812                           	
  4813  0FEE                     i1l3395:	
  4814                           	line	56
  4815                           	
  4816  0FEE                     i1l7827:	
  4817                           ;MCU_16F723A.c: 54: }
  4818                           ;MCU_16F723A.c: 56: TMR1H=((65536-(1*200))/256);
  4819  0FEE  30FF               	movlw	(0FFh)
  4820  0FEF  008F               	movwf	(15)	;volatile
  4821                           	line	57
  4822                           	
  4823  0FF0                     i1l7829:	
  4824                           ;MCU_16F723A.c: 57: TMR1L=((65536-(1*200))%256);
  4825  0FF0  3038               	movlw	(038h)
  4826  0FF1  008E               	movwf	(14)	;volatile
  4827                           	line	58
  4828                           	
  4829  0FF2                     i1l7831:	
  4830                           ;MCU_16F723A.c: 58: TMR1IF=0;
  4831  0FF2  100C               	bcf	(96/8),(96)&7
  4832  0FF3  2FF4               	goto	i1l3396
  4833                           	line	59
  4834                           	
  4835  0FF4                     i1l3393:	
  4836                           	line	68
  4837                           	
  4838  0FF4                     i1l3396:	
  4839  0FF4  0877               	movf	(??_ISR+5),w
  4840  0FF5  1283               	bcf	status, 5	;RP0=0, select bank0
  4841  0FF6  00FF               	movwf	btemp+1
  4842  0FF7  0876               	movf	(??_ISR+4),w
  4843  0FF8  008A               	movwf	pclath
  4844  0FF9  0875               	movf	(??_ISR+3),w
  4845  0FFA  0084               	movwf	fsr0
  4846  0FFB  0E74               	swapf	(??_ISR+2)^0FFFFFF80h,w
  4847  0FFC  0083               	movwf	status
  4848  0FFD  0EFE               	swapf	saved_w,f
  4849  0FFE  0E7E               	swapf	saved_w,w
  4850  0FFF  0009               	retfie
  4851                           	opt stack 0
  4852                           GLOBAL	__end_of_ISR
  4853  1000                     	__end_of_ISR:
  4854 ;; =============== function _ISR ends ============
  4855                           
  4856                           	signat	_ISR,88
  4857                           	global	_Dimmer_Main
  4858                           psect	text394,local,class=CODE,delta=2
  4859                           global __ptext394
  4860  032B                     __ptext394:
  4861                           
  4862 ;; *************** function _Dimmer_Main *****************
  4863 ;; Defined at:
  4864 ;;		line 11 in file "G:\Program\PIC\Source_File\Dimmer.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;		None               void
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4878 ;;      Params:         0       0       0       0
  4879 ;;      Locals:         0       0       0       0
  4880 ;;      Temps:          2       0       0       0
  4881 ;;      Totals:         2       0       0       0
  4882 ;;Total ram usage:        2 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_ISR
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           psect	text394
  4891                           	file	"G:\Program\PIC\Source_File\Dimmer.c"
  4892                           	line	11
  4893                           	global	__size_of_Dimmer_Main
  4894  0112                     	__size_of_Dimmer_Main	equ	__end_of_Dimmer_Main-_Dimmer_Main
  4895                           	
  4896  032B                     _Dimmer_Main:	
  4897                           	opt	stack 3
  4898                           ; Regs used in _Dimmer_Main: [wreg-fsr0h+status,2+status,0]
  4899                           	line	12
  4900                           	
  4901  032B                     i1l7701:	
  4902                           ;Dimmer.c: 12: Dimmer->Count++;
  4903  032B  3001               	movlw	(01h)
  4904  032C  00F0               	movwf	(??_Dimmer_Main+0)+0
  4905  032D  1283               	bcf	status, 5	;RP0=0, select bank0
  4906  032E  1303               	bcf	status, 6	;RP1=0, select bank0
  4907  032F  0855               	movf	(_Dimmer),w
  4908  0330  3E06               	addlw	06h
  4909  0331  0084               	movwf	fsr0
  4910  0332  0870               	movf	(??_Dimmer_Main+0)+0,w
  4911  0333  1383               	bcf	status, 7	;select IRP bank0
  4912  0334  0780               	addwf	indf,f
  4913                           	line	13
  4914                           	
  4915  0335                     i1l7703:	
  4916                           ;Dimmer.c: 13: if(RA7==1)
  4917  0335  1F85               	btfss	(47/8),(47)&7
  4918  0336  2B38               	goto	u314_21
  4919  0337  2B39               	goto	u314_20
  4920  0338                     u314_21:
  4921  0338  2B5A               	goto	i1l7711
  4922  0339                     u314_20:
  4923                           	line	15
  4924                           	
  4925  0339                     i1l7705:	
  4926                           ;Dimmer.c: 14: {
  4927                           ;Dimmer.c: 15: if(Dimmer->Input==0)
  4928  0339  0855               	movf	(_Dimmer),w
  4929  033A  3E05               	addlw	05h
  4930  033B  0084               	movwf	fsr0
  4931  033C  1800               	btfsc	indf,0
  4932  033D  2B3F               	goto	u315_21
  4933  033E  2B40               	goto	u315_20
  4934  033F                     u315_21:
  4935  033F  2B7F               	goto	i1l1675
  4936  0340                     u315_20:
  4937                           	line	17
  4938                           	
  4939  0340                     i1l7707:	
  4940                           ;Dimmer.c: 16: {
  4941                           ;Dimmer.c: 17: Dimmer->Input=1;
  4942  0340  0855               	movf	(_Dimmer),w
  4943  0341  3E05               	addlw	05h
  4944  0342  0084               	movwf	fsr0
  4945  0343  1400               	bsf	indf,0
  4946                           	line	18
  4947                           ;Dimmer.c: 18: Dimmer->Offset = 0;
  4948  0344  0855               	movf	(_Dimmer),w
  4949  0345  3E0D               	addlw	0Dh
  4950  0346  0084               	movwf	fsr0
  4951  0347  0180               	clrf	indf
  4952                           	line	19
  4953                           ;Dimmer.c: 19: if(Dimmer->Ready==1)
  4954  0348  0855               	movf	(_Dimmer),w
  4955  0349  3E05               	addlw	05h
  4956  034A  0084               	movwf	fsr0
  4957  034B  1C80               	btfss	indf,1
  4958  034C  2B4E               	goto	u316_21
  4959  034D  2B4F               	goto	u316_20
  4960  034E                     u316_21:
  4961  034E  2B7F               	goto	i1l1675
  4962  034F                     u316_20:
  4963                           	line	21
  4964                           	
  4965  034F                     i1l7709:	
  4966                           ;Dimmer.c: 20: {
  4967                           ;Dimmer.c: 21: Dimmer->GO=1;
  4968  034F  0855               	movf	(_Dimmer),w
  4969  0350  3E05               	addlw	05h
  4970  0351  0084               	movwf	fsr0
  4971  0352  1500               	bsf	indf,2
  4972                           	line	22
  4973                           ;Dimmer.c: 22: Dimmer->Count=0;
  4974  0353  0855               	movf	(_Dimmer),w
  4975  0354  3E06               	addlw	06h
  4976  0355  0084               	movwf	fsr0
  4977  0356  0180               	clrf	indf
  4978  0357  2B7F               	goto	i1l1675
  4979                           	line	23
  4980                           	
  4981  0358                     i1l1674:	
  4982  0358  2B7F               	goto	i1l1675
  4983                           	line	24
  4984                           	
  4985  0359                     i1l1673:	
  4986                           	line	25
  4987                           ;Dimmer.c: 23: }
  4988                           ;Dimmer.c: 24: }
  4989                           ;Dimmer.c: 25: }
  4990  0359  2B7F               	goto	i1l1675
  4991                           	line	26
  4992                           	
  4993  035A                     i1l1672:	
  4994                           	line	28
  4995                           	
  4996  035A                     i1l7711:	
  4997                           ;Dimmer.c: 26: else
  4998                           ;Dimmer.c: 27: {
  4999                           ;Dimmer.c: 28: if(Dimmer->Input==1)
  5000  035A  0855               	movf	(_Dimmer),w
  5001  035B  3E05               	addlw	05h
  5002  035C  0084               	movwf	fsr0
  5003  035D  1C00               	btfss	indf,0
  5004  035E  2B60               	goto	u317_21
  5005  035F  2B61               	goto	u317_20
  5006  0360                     u317_21:
  5007  0360  2B7F               	goto	i1l1675
  5008  0361                     u317_20:
  5009                           	line	30
  5010                           	
  5011  0361                     i1l7713:	
  5012                           ;Dimmer.c: 29: {
  5013                           ;Dimmer.c: 30: Dimmer->Input=0;
  5014  0361  0855               	movf	(_Dimmer),w
  5015  0362  3E05               	addlw	05h
  5016  0363  0084               	movwf	fsr0
  5017  0364  1000               	bcf	indf,0
  5018                           	line	31
  5019                           ;Dimmer.c: 31: Dimmer->Offset = 0;
  5020  0365  0855               	movf	(_Dimmer),w
  5021  0366  3E0D               	addlw	0Dh
  5022  0367  0084               	movwf	fsr0
  5023  0368  0180               	clrf	indf
  5024                           	line	32
  5025                           ;Dimmer.c: 32: if(Dimmer->Ready==0)
  5026  0369  0855               	movf	(_Dimmer),w
  5027  036A  3E05               	addlw	05h
  5028  036B  0084               	movwf	fsr0
  5029  036C  1880               	btfsc	indf,1
  5030  036D  2B6F               	goto	u318_21
  5031  036E  2B70               	goto	u318_20
  5032  036F                     u318_21:
  5033  036F  2B75               	goto	i1l7717
  5034  0370                     u318_20:
  5035                           	line	33
  5036                           	
  5037  0370                     i1l7715:	
  5038                           ;Dimmer.c: 33: Dimmer->Ready=1;
  5039  0370  0855               	movf	(_Dimmer),w
  5040  0371  3E05               	addlw	05h
  5041  0372  0084               	movwf	fsr0
  5042  0373  1480               	bsf	indf,1
  5043  0374  2B7F               	goto	i1l1675
  5044                           	line	34
  5045                           	
  5046  0375                     i1l1677:	
  5047                           	line	36
  5048                           	
  5049  0375                     i1l7717:	
  5050                           ;Dimmer.c: 34: else
  5051                           ;Dimmer.c: 35: {
  5052                           ;Dimmer.c: 36: Dimmer->GO=1;
  5053  0375  0855               	movf	(_Dimmer),w
  5054  0376  3E05               	addlw	05h
  5055  0377  0084               	movwf	fsr0
  5056  0378  1500               	bsf	indf,2
  5057                           	line	37
  5058                           ;Dimmer.c: 37: Dimmer->Count=0;
  5059  0379  0855               	movf	(_Dimmer),w
  5060  037A  3E06               	addlw	06h
  5061  037B  0084               	movwf	fsr0
  5062  037C  0180               	clrf	indf
  5063  037D  2B7F               	goto	i1l1675
  5064                           	line	38
  5065                           	
  5066  037E                     i1l1678:	
  5067  037E  2B7F               	goto	i1l1675
  5068                           	line	39
  5069                           	
  5070  037F                     i1l1676:	
  5071                           	line	40
  5072                           	
  5073  037F                     i1l1675:	
  5074                           	line	43
  5075                           ;Dimmer.c: 38: }
  5076                           ;Dimmer.c: 39: }
  5077                           ;Dimmer.c: 40: }
  5078                           ;Dimmer.c: 43: if(Dimmer->GO==1)
  5079  037F  0855               	movf	(_Dimmer),w
  5080  0380  3E05               	addlw	05h
  5081  0381  0084               	movwf	fsr0
  5082  0382  1D00               	btfss	indf,2
  5083  0383  2B85               	goto	u319_21
  5084  0384  2B86               	goto	u319_20
  5085  0385                     u319_21:
  5086  0385  2BA7               	goto	i1l1679
  5087  0386                     u319_20:
  5088                           	line	45
  5089                           	
  5090  0386                     i1l7719:	
  5091                           ;Dimmer.c: 44: {
  5092                           ;Dimmer.c: 45: if(Dimmer->Count == Dimmer->DimmingValue)
  5093  0386  0855               	movf	(_Dimmer),w
  5094  0387  3E09               	addlw	09h
  5095  0388  0084               	movwf	fsr
  5096  0389  0800               	movf	indf,w
  5097  038A  00F0               	movwf	(??_Dimmer_Main+0)+0
  5098  038B  0855               	movf	(_Dimmer),w
  5099  038C  3E06               	addlw	06h
  5100  038D  0084               	movwf	fsr0
  5101  038E  0800               	movf	indf,w
  5102  038F  0670               	xorwf	(??_Dimmer_Main+0)+0,w
  5103  0390  1D03               	skipz
  5104  0391  2B93               	goto	u320_21
  5105  0392  2B94               	goto	u320_20
  5106  0393                     u320_21:
  5107  0393  2C3C               	goto	i1l1699
  5108  0394                     u320_20:
  5109                           	line	47
  5110                           	
  5111  0394                     i1l7721:	
  5112                           ;Dimmer.c: 46: {
  5113                           ;Dimmer.c: 47: Dimmer->Count=0;
  5114  0394  0855               	movf	(_Dimmer),w
  5115  0395  3E06               	addlw	06h
  5116  0396  0084               	movwf	fsr0
  5117  0397  0180               	clrf	indf
  5118                           	line	48
  5119                           ;Dimmer.c: 48: Dimmer->GO=0;
  5120  0398  0855               	movf	(_Dimmer),w
  5121  0399  3E05               	addlw	05h
  5122  039A  0084               	movwf	fsr0
  5123  039B  1100               	bcf	indf,2
  5124                           	line	49
  5125                           ;Dimmer.c: 49: if(Dimmer->Triac==1)
  5126  039C  0855               	movf	(_Dimmer),w
  5127  039D  3E0A               	addlw	0Ah
  5128  039E  0084               	movwf	fsr0
  5129  039F  1D00               	btfss	indf,2
  5130  03A0  2BA2               	goto	u321_21
  5131  03A1  2BA3               	goto	u321_20
  5132  03A2                     u321_21:
  5133  03A2  2C3C               	goto	i1l1699
  5134  03A3                     u321_20:
  5135                           	line	50
  5136                           	
  5137  03A3                     i1l7723:	
  5138                           ;Dimmer.c: 50: RB2=1;
  5139  03A3  1506               	bsf	(50/8),(50)&7
  5140  03A4  2C3C               	goto	i1l1699
  5141                           	
  5142  03A5                     i1l1681:	
  5143  03A5  2C3C               	goto	i1l1699
  5144                           	line	51
  5145                           	
  5146  03A6                     i1l1680:	
  5147                           	line	52
  5148                           ;Dimmer.c: 51: }
  5149                           ;Dimmer.c: 52: }
  5150  03A6  2C3C               	goto	i1l1699
  5151                           	line	53
  5152                           	
  5153  03A7                     i1l1679:	
  5154                           	line	55
  5155                           ;Dimmer.c: 53: else
  5156                           ;Dimmer.c: 54: {
  5157                           ;Dimmer.c: 55: if(RB2==1)
  5158  03A7  1D06               	btfss	(50/8),(50)&7
  5159  03A8  2BAA               	goto	u322_21
  5160  03A9  2BAB               	goto	u322_20
  5161  03AA                     u322_21:
  5162  03AA  2C3C               	goto	i1l1699
  5163  03AB                     u322_20:
  5164                           	line	57
  5165                           	
  5166  03AB                     i1l7725:	
  5167                           ;Dimmer.c: 56: {
  5168                           ;Dimmer.c: 57: RB2=0;
  5169  03AB  1106               	bcf	(50/8),(50)&7
  5170                           	line	59
  5171                           	
  5172  03AC                     i1l7727:	
  5173                           ;Dimmer.c: 59: if(Dimmer->Signal==1)
  5174  03AC  0855               	movf	(_Dimmer),w
  5175  03AD  3E0A               	addlw	0Ah
  5176  03AE  0084               	movwf	fsr0
  5177  03AF  1C00               	btfss	indf,0
  5178  03B0  2BB2               	goto	u323_21
  5179  03B1  2BB3               	goto	u323_20
  5180  03B2                     u323_21:
  5181  03B2  2C3C               	goto	i1l1699
  5182  03B3                     u323_20:
  5183                           	line	62
  5184                           	
  5185  03B3                     i1l7729:	
  5186                           ;Dimmer.c: 60: {
  5187                           ;Dimmer.c: 62: if(Dimmer->DimmingTime < Dimmer->DimmingTimeValue)
  5188  03B3  0855               	movf	(_Dimmer),w
  5189  03B4  3E08               	addlw	08h
  5190  03B5  0084               	movwf	fsr
  5191  03B6  0800               	movf	indf,w
  5192  03B7  00F0               	movwf	(??_Dimmer_Main+0)+0
  5193  03B8  0855               	movf	(_Dimmer),w
  5194  03B9  3E07               	addlw	07h
  5195  03BA  0084               	movwf	fsr0
  5196  03BB  0800               	movf	indf,w
  5197  03BC  00F1               	movwf	(??_Dimmer_Main+1)+0
  5198  03BD  0870               	movf	(??_Dimmer_Main+0)+0,w
  5199  03BE  0271               	subwf	(??_Dimmer_Main+1)+0,w
  5200  03BF  1803               	skipnc
  5201  03C0  2BC2               	goto	u324_21
  5202  03C1  2BC3               	goto	u324_20
  5203  03C2                     u324_21:
  5204  03C2  2BCB               	goto	i1l7733
  5205  03C3                     u324_20:
  5206                           	line	63
  5207                           	
  5208  03C3                     i1l7731:	
  5209                           ;Dimmer.c: 63: Dimmer->DimmingTime++;
  5210  03C3  3001               	movlw	(01h)
  5211  03C4  00F0               	movwf	(??_Dimmer_Main+0)+0
  5212  03C5  0855               	movf	(_Dimmer),w
  5213  03C6  3E07               	addlw	07h
  5214  03C7  0084               	movwf	fsr0
  5215  03C8  0870               	movf	(??_Dimmer_Main+0)+0,w
  5216  03C9  0780               	addwf	indf,f
  5217  03CA  2C3C               	goto	i1l1699
  5218                           	line	64
  5219                           	
  5220  03CB                     i1l1685:	
  5221                           	line	66
  5222                           	
  5223  03CB                     i1l7733:	
  5224                           ;Dimmer.c: 64: else
  5225                           ;Dimmer.c: 65: {
  5226                           ;Dimmer.c: 66: Dimmer->DimmingTime=0;
  5227  03CB  0855               	movf	(_Dimmer),w
  5228  03CC  3E07               	addlw	07h
  5229  03CD  0084               	movwf	fsr0
  5230  03CE  0180               	clrf	indf
  5231                           	line	67
  5232                           ;Dimmer.c: 67: if(Dimmer->Lights==1)
  5233  03CF  0855               	movf	(_Dimmer),w
  5234  03D0  3E0A               	addlw	0Ah
  5235  03D1  0084               	movwf	fsr0
  5236  03D2  1C80               	btfss	indf,1
  5237  03D3  2BD5               	goto	u325_21
  5238  03D4  2BD6               	goto	u325_20
  5239  03D5                     u325_21:
  5240  03D5  2BFD               	goto	i1l7743
  5241  03D6                     u325_20:
  5242                           	line	69
  5243                           	
  5244  03D6                     i1l7735:	
  5245                           ;Dimmer.c: 68: {
  5246                           ;Dimmer.c: 69: if(Dimmer->DimmingValue >= Dimmer->Maxmum)
  5247  03D6  0855               	movf	(_Dimmer),w
  5248  03D7  3E0B               	addlw	0Bh
  5249  03D8  0084               	movwf	fsr
  5250  03D9  0800               	movf	indf,w
  5251  03DA  00F0               	movwf	(??_Dimmer_Main+0)+0
  5252  03DB  0855               	movf	(_Dimmer),w
  5253  03DC  3E09               	addlw	09h
  5254  03DD  0084               	movwf	fsr0
  5255  03DE  0800               	movf	indf,w
  5256  03DF  00F1               	movwf	(??_Dimmer_Main+1)+0
  5257  03E0  0870               	movf	(??_Dimmer_Main+0)+0,w
  5258  03E1  0271               	subwf	(??_Dimmer_Main+1)+0,w
  5259  03E2  1C03               	skipc
  5260  03E3  2BE5               	goto	u326_21
  5261  03E4  2BE6               	goto	u326_20
  5262  03E5                     u326_21:
  5263  03E5  2BEC               	goto	i1l7739
  5264  03E6                     u326_20:
  5265                           	line	70
  5266                           	
  5267  03E6                     i1l7737:	
  5268                           ;Dimmer.c: 70: Dimmer->DimmingValue--;
  5269  03E6  0855               	movf	(_Dimmer),w
  5270  03E7  3E09               	addlw	09h
  5271  03E8  0084               	movwf	fsr0
  5272  03E9  3001               	movlw	low(01h)
  5273  03EA  0280               	subwf	indf,f
  5274  03EB  2BF0               	goto	i1l1689
  5275                           	line	71
  5276                           	
  5277  03EC                     i1l1688:	
  5278                           	line	72
  5279                           	
  5280  03EC                     i1l7739:	
  5281                           ;Dimmer.c: 71: else
  5282                           ;Dimmer.c: 72: Dimmer->Signal=0;
  5283  03EC  0855               	movf	(_Dimmer),w
  5284  03ED  3E0A               	addlw	0Ah
  5285  03EE  0084               	movwf	fsr0
  5286  03EF  1000               	bcf	indf,0
  5287                           	
  5288  03F0                     i1l1689:	
  5289                           	line	74
  5290                           ;Dimmer.c: 74: if(Dimmer->Phase2 == 1)
  5291  03F0  0855               	movf	(_Dimmer),w
  5292  03F1  3E0A               	addlw	0Ah
  5293  03F2  0084               	movwf	fsr0
  5294  03F3  1D80               	btfss	indf,3
  5295  03F4  2BF6               	goto	u327_21
  5296  03F5  2BF7               	goto	u327_20
  5297  03F6                     u327_21:
  5298  03F6  2C3C               	goto	i1l1699
  5299  03F7                     u327_20:
  5300                           	line	75
  5301                           	
  5302  03F7                     i1l7741:	
  5303                           ;Dimmer.c: 75: Dimmer->Phase2 = 0;
  5304  03F7  0855               	movf	(_Dimmer),w
  5305  03F8  3E0A               	addlw	0Ah
  5306  03F9  0084               	movwf	fsr0
  5307  03FA  1180               	bcf	indf,3
  5308  03FB  2C3C               	goto	i1l1699
  5309                           	
  5310  03FC                     i1l1690:	
  5311                           	line	76
  5312                           ;Dimmer.c: 76: }
  5313  03FC  2C3C               	goto	i1l1699
  5314                           	line	77
  5315                           	
  5316  03FD                     i1l1687:	
  5317                           	line	79
  5318                           	
  5319  03FD                     i1l7743:	
  5320                           ;Dimmer.c: 77: else
  5321                           ;Dimmer.c: 78: {
  5322                           ;Dimmer.c: 79: if(Dimmer->DimmingValue <= Dimmer->Minimum)
  5323  03FD  0855               	movf	(_Dimmer),w
  5324  03FE  3E09               	addlw	09h
  5325  03FF  0084               	movwf	fsr
  5326  0400  0800               	movf	indf,w
  5327  0401  00F0               	movwf	(??_Dimmer_Main+0)+0
  5328  0402  0855               	movf	(_Dimmer),w
  5329  0403  3E0C               	addlw	0Ch
  5330  0404  0084               	movwf	fsr0
  5331  0405  0800               	movf	indf,w
  5332  0406  00F1               	movwf	(??_Dimmer_Main+1)+0
  5333  0407  0870               	movf	(??_Dimmer_Main+0)+0,w
  5334  0408  0271               	subwf	(??_Dimmer_Main+1)+0,w
  5335  0409  1C03               	skipc
  5336  040A  2C0C               	goto	u328_21
  5337  040B  2C0D               	goto	u328_20
  5338  040C                     u328_21:
  5339  040C  2C15               	goto	i1l7747
  5340  040D                     u328_20:
  5341                           	line	80
  5342                           	
  5343  040D                     i1l7745:	
  5344                           ;Dimmer.c: 80: Dimmer->DimmingValue++;
  5345  040D  3001               	movlw	(01h)
  5346  040E  00F0               	movwf	(??_Dimmer_Main+0)+0
  5347  040F  0855               	movf	(_Dimmer),w
  5348  0410  3E09               	addlw	09h
  5349  0411  0084               	movwf	fsr0
  5350  0412  0870               	movf	(??_Dimmer_Main+0)+0,w
  5351  0413  0780               	addwf	indf,f
  5352  0414  2C3C               	goto	i1l1699
  5353                           	line	81
  5354                           	
  5355  0415                     i1l1692:	
  5356                           	line	83
  5357                           	
  5358  0415                     i1l7747:	
  5359                           ;Dimmer.c: 81: else
  5360                           ;Dimmer.c: 82: {
  5361                           ;Dimmer.c: 83: Dimmer->Signal=0;
  5362  0415  0855               	movf	(_Dimmer),w
  5363  0416  3E0A               	addlw	0Ah
  5364  0417  0084               	movwf	fsr0
  5365  0418  1000               	bcf	indf,0
  5366                           	line	85
  5367                           ;Dimmer.c: 85: if(2 == 0)
  5368  0419  2C1F               	goto	i1l7751
  5369                           	line	86
  5370                           	
  5371  041A                     i1l7749:	
  5372                           ;Dimmer.c: 86: Dimmer->Triac=0;
  5373  041A  0855               	movf	(_Dimmer),w
  5374  041B  3E0A               	addlw	0Ah
  5375  041C  0084               	movwf	fsr0
  5376  041D  1100               	bcf	indf,2
  5377  041E  2C3C               	goto	i1l1699
  5378                           	line	87
  5379                           ;Dimmer.c: 87: else if(2 == 2)
  5380                           	
  5381  041F                     i1l1694:	
  5382                           	line	89
  5383                           	
  5384  041F                     i1l7751:	
  5385                           ;Dimmer.c: 88: {
  5386                           ;Dimmer.c: 89: if(Dimmer->Phase2 == 0)
  5387  041F  0855               	movf	(_Dimmer),w
  5388  0420  3E0A               	addlw	0Ah
  5389  0421  0084               	movwf	fsr0
  5390  0422  1980               	btfsc	indf,3
  5391  0423  2C25               	goto	u329_21
  5392  0424  2C26               	goto	u329_20
  5393  0425                     u329_21:
  5394  0425  2C2B               	goto	i1l7755
  5395  0426                     u329_20:
  5396                           	line	90
  5397                           	
  5398  0426                     i1l7753:	
  5399                           ;Dimmer.c: 90: Dimmer->Phase2 = 1;
  5400  0426  0855               	movf	(_Dimmer),w
  5401  0427  3E0A               	addlw	0Ah
  5402  0428  0084               	movwf	fsr0
  5403  0429  1580               	bsf	indf,3
  5404  042A  2C3C               	goto	i1l1699
  5405                           	line	91
  5406                           	
  5407  042B                     i1l1697:	
  5408                           	line	93
  5409                           	
  5410  042B                     i1l7755:	
  5411                           ;Dimmer.c: 91: else
  5412                           ;Dimmer.c: 92: {
  5413                           ;Dimmer.c: 93: Dimmer->Triac=0;
  5414  042B  0855               	movf	(_Dimmer),w
  5415  042C  3E0A               	addlw	0Ah
  5416  042D  0084               	movwf	fsr0
  5417  042E  1100               	bcf	indf,2
  5418                           	line	94
  5419                           ;Dimmer.c: 94: Dimmer->Phase2 = 0;
  5420  042F  0855               	movf	(_Dimmer),w
  5421  0430  3E0A               	addlw	0Ah
  5422  0431  0084               	movwf	fsr0
  5423  0432  1180               	bcf	indf,3
  5424  0433  2C3C               	goto	i1l1699
  5425                           	line	95
  5426                           	
  5427  0434                     i1l1698:	
  5428  0434  2C3C               	goto	i1l1699
  5429                           	line	96
  5430                           	
  5431  0435                     i1l1696:	
  5432  0435  2C3C               	goto	i1l1699
  5433                           	line	97
  5434                           	
  5435  0436                     i1l1695:	
  5436  0436  2C3C               	goto	i1l1699
  5437                           	
  5438  0437                     i1l1693:	
  5439  0437  2C3C               	goto	i1l1699
  5440                           	line	98
  5441                           	
  5442  0438                     i1l1691:	
  5443  0438  2C3C               	goto	i1l1699
  5444                           	line	99
  5445                           	
  5446  0439                     i1l1686:	
  5447  0439  2C3C               	goto	i1l1699
  5448                           	line	100
  5449                           	
  5450  043A                     i1l1684:	
  5451  043A  2C3C               	goto	i1l1699
  5452                           	line	101
  5453                           	
  5454  043B                     i1l1683:	
  5455  043B  2C3C               	goto	i1l1699
  5456                           	line	102
  5457                           	
  5458  043C                     i1l1682:	
  5459                           	line	103
  5460                           	
  5461  043C                     i1l1699:	
  5462  043C  0008               	return
  5463                           	opt stack 0
  5464                           GLOBAL	__end_of_Dimmer_Main
  5465  043D                     	__end_of_Dimmer_Main:
  5466 ;; =============== function _Dimmer_Main ends ============
  5467                           
  5468                           	signat	_Dimmer_Main,88
  5469                           psect	text395,local,class=CODE,delta=2
  5470                           global __ptext395
  5471  0000                     __ptext395:
  5472                           	global	btemp
  5473  007E                     	btemp set 07Eh
  5474                           
  5475                           	DABS	1,126,2	;btemp
  5476                           	global	wtemp0
  5477  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu May 08 08:37:41 2014

           ___awdiv@sign 004C                       fsr 0004      ___wmul@multiplicand 0048  
                    l840 073F                      l841 072F                      l842 073E  
                    l835 0742                      l843 0742                      l836 0741  
                    l837 0713                      l838 0740                      l839 0723  
                    _CDS 0021                      _GIE 005F                      _RB1 0031  
                    _RB2 0032                      _LED 0056                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      _RA7 002F  
                    _ISR 0FB1                      _PIR 0022                      fsr0 0004  
                    indf 0000                     ?_ISR 0070             ?_LED_Setting 0070  
                   l1710 06EE                     l1702 06D5                     l1711 06ED  
                   l1703 06CC                     l1704 06A8                     l1713 06E8  
                   l1705 06CB                     l1706 06C2                     l1714 06EF  
                   l1707 06CA                     l1708 06D4                     l5100 032A  
                   l1709 06EF                     l5101 0329                     l2550 0F8E  
                   l5110 00B9                     l5102 003D                     l2551 0FAF  
                   l5111 00DB                     l5103 003D                     l2552 0F96  
                   l2560 0F0E                     l5120 016C                     l5112 010D  
                   l5104 0042                     l2553 0FAE                     l2561 0F0D  
                   l5121 017E                     l5113 0112                     l5105 005E  
                   l2546 0FB0                     l2554 0FA1                     l2562 0F0E  
                   l5114 02F9                     l5130 026A                     l5122 017D  
                   l5106 005E                     l4242 05B7                     l2555 0FAD  
                   l2547 0F7F                     l6011 07DD                     l5115 02F8  
                   l5131 0269                     l5123 01D4                     l5107 0063  
                   l4243 05BC                     l2556 0FAC                     l2548 0F86  
                   l6012 07AF                     l5116 02F7                     l5140 02F5  
                   l5132 0268                     l5124 019E                     l5108 0083  
                   l4244 05C2                     l2549 0F85                     l2557 0FB0  
                   l6005 0F14                     l6013 07A3                     l5141 02F4  
                   l5125 01D3                     l5117 0142                     l5109 00A0  
                   l4245 05EB                     l6006 0F1E                     l6014 07B4  
                   l5150 0794                     l5142 0328                     l5134 0263  
                   l5118 01D5                     l5126 01CE                     l4246 0607  
                   l6007 0F33                     l6015 07B5                     l5151 0793  
                   l5143 0316                     l5135 02F6                     l5127 01BC  
                   l5119 017F                     l4247 0608                     l6008 0F3A  
                   l6016 07CE                     l5144 0327                     l5136 0287  
                   l5128 01CE                     l4248 0609                     l6017 07DC  
                   l5153 0773                     l5137 02A4                     l5129 01CD  
                   l5145 032A                     l4249 0609                     l5090 047B  
                   l6018 07E4                     l5154 0792                     l5138 02A3  
                   l5091 0480                     l5139 02CF            ??_Mcu_Initial 0046  
                   l5084 04E6                     l5092 04E4                     l5156 078D  
                   l5148 0767                     l5085 04E5                     l5093 04C0  
                   l5149 0766                     l5157 0794                     l5094 04BF  
                   l5086 046A                     l6150 0646                     l3399 0F6E  
                   l5095 04E3                     l5087 046A                     l6151 0647  
                   l5096 04E2                     l5088 046F                     l6152 0660  
                   l5089 047B                     l5097 04E6                     l6153 066E  
                   l6145 061B                     l8001 075A                     l6154 0679  
                   l6146 0629                     l6155 0680                     l6147 066F  
                   l8011 077B                     l8003 0767                     l6148 0641  
                   l6149 0635                     l8013 0785                     l8005 076B  
                   l8101 01AB                     l8021 0023                     l8015 078D  
                   l8007 0773                     l8111 01F8                     l8103 01B4  
                   l8031 0042                     l8023 002C                     l8009 0777  
                   l8121 024C                     l8113 0218                     l8105 01BC  
                   l8041 007A                     l8033 005A                     l8025 0033  
                   l8017 0013                     l8201 05FA                     l8131 027E  
                   l8123 025B                     l8115 0223                     l8107 01C5  
                   l8051 00B8                     l8043 0083                     l8035 005C  
                   l8027 0037                     l8019 001C                     l8203 05FD  
                   l8141 02CF                     l8133 0287                     l8125 0263  
                   l8117 0227                     l8109 01D5                     l8061 00F4  
                   l8053 00B9                     l8045 00A0                     l8037 0063  
                   l8029 003B                     l8205 0600                     l8151 0322  
                   l8143 02EF                     l8135 029E                     l8119 0232  
                   l8127 026A                     l8071 0115                     l8063 00FC  
                   l8055 00D0                     l8047 00B0                     l8039 0072  
                   l8207 0603                     l8137 02A4                     l8129 0274  
                   l8081 0142                     l8073 011F                     l8145 02F9  
                   l8065 0105                     l8057 00D4                     l8049 00B1  
                   l8161 0597                     l8153 0583                     l8147 030D  
                   l8139 02CA                     l8083 014F                     l8091 017F  
                   l8075 0126                     l8067 010D                     l8059 00DB  
                   l8171 05B2                     l8163 059E                     l8155 0586  
                   l8149 0316                     l8093 0189                     l8085 0164  
                   l8077 0131                     l8069 0112                     l8181 05C6  
                   l8173 05B6                     l8165 05A8                     l8157 058C  
                   l8095 018D                     l8087 016C                     l8079 013A  
                   l8191 05DE                     l8183 05C9                     l8175 05BB  
                   l8167 05AB                     l8159 0590                     l7801 0FA8  
                   l8097 0196                     l8089 0175                     l8193 05E6  
                   l8185 05D0                     l8177 05C0                     l8169 05AF  
                   l7811 0F0A                     l7803 0EED                     l8099 019E  
                   l8195 05EB                     l8187 05D4                     l8179 05C2  
                   l7805 0EF6                     l7901 0477                     l8197 05F4  
                   l8189 05D7                     l5990 0538                     l7807 0EFD  
                   l5991 0582                     l7911 04B7                     l7903 0479  
                   l8199 05F7                     l5992 0553                     l7681 0700  
                   l7761 0699                     l7809 0F06                     l7841 0F48  
                   l7833 0F3B                     l5993 055E                     l7913 04C0  
                   l7905 0480                     l7921 0F18                     l5994 0578  
                   l5986 0504                     l7691 071D                     l7683 0709  
                   l7763 06A8                     l7771 06D5                     l7851 0F61  
                   l7843 0F4C                     l7835 0F41                     l5995 0581  
                   l5987 050C                     l7915 04DA                     l7907 0495  
                   l7923 0F25                     l7931 0799                     l5988 0539  
                   l5996 0582                     l7693 0723                     l7685 070D  
                   l7677 06F0                     l7773 06DB                     l7765 06B6  
                   l7757 0684                     l7781 0F83                     l7853 0F6A  
                   l7845 0F4E                     l7837 0F42                     l5989 052C  
                   l7861 0504                     l7909 049F                     l7925 0F33  
                   l7917 0F0F                     l7941 07B5                     l7933 079F  
                   l7695 072B                     l7687 0711                     l7679 06F9  
                   l7767 06C2                     l7759 0689                     l7791 0F96  
                   l7783 0F86                     l7775 0F72                     l7855 0F6B  
                   l7847 0F5D                     l7839 0F46                     l7871 054A  
                   l7863 0512                     l7927 0F3A                     l7919 0F14  
                   l7943 07C6                     l7935 07A3                     l7951 07DD  
                   l7697 072F                     l7689 0714                     l7769 06CC  
                   l7793 0F9C                     l7785 0F8C                     l7777 0F79  
                   l7849 0F5E                     l7881 0578                     l7873 0553  
                   l7865 0523                     l7857 04E7                     l7953 07E4  
                   l7945 07CC                     l7937 07AA                     l7929 0795  
                   l7961 061F                     l7699 0739                     l7795 0F9D  
                   l7787 0F8E                     l7779 0F7D                     l7875 055B  
                   l7867 052C                     l7859 04FB                     l7891 045A  
                   l7883 043D                     l7947 07CE                     l7939 07AF  
                   l7971 0635                     l7963 0624                     l7955 060B  
                   l7797 0FA1                     l7789 0F94                     l7877 055E  
                   l7869 0539                     l7893 0460                     l7885 0446  
                   l7949 07D5                     l7981 065E                     l7973 063C  
                   l7965 0629                     l7957 0612                     l7799 0FA7  
                   l7879 056F                     l7895 0464                     l7887 044D  
                   l7991 0679                     l7983 0660                     l7975 0641  
                   l7967 062B                     l7959 061B                     l7897 0468  
                   l7889 0456                     l7993 0680                     l7985 0667  
                   l7977 0647                     l7969 0631                     l7899 046F  
                   l7979 0658                     l7987 066F                     l7995 0743  
                   l7989 0673                     l7997 074D                     l7999 0753  
                   u3100 0709                     u3101 0708                     u3110 0711  
                   u3111 0710                     u3120 071D                     u4000 014F  
                   u3121 071C                     u4001 014E                     u3130 072B  
                   u4010 0164                     u3131 072A                     u4011 0163  
                   u3300 0689                     u4100 025B                     u4020 0175  
                   u3301 0688                     u4101 025A                     u4021 0174  
                   u3310 0699                     u4110 0262                     u4030 0196  
                   u3311 0698                     u4111 0261                     u4031 0195  
                   u3320 06B6                     u3400 0FA7                     u4120 027E  
                   u4040 01AB                     u4200 05F4                     u3321 06B5  
                   u3401 0FA6                     u4121 027D                     u4041 01AA  
                   u4201 05F3                     u3090 06F9                     u3330 06DB  
                   u3410 0EF6                     u4130 029E                     u4050 01B4  
                   u3091 06F8                     u3331 06DA                     u3411 0EF5  
                   u4131 029D                     u4051 01B3                     u3340 0F79  
                   u3420 0F06                     u3500 054A                     u4140 02CA  
                   u4060 01C5                     u3341 0F78                     u3421 0F05  
                   u3501 0549                     u4141 02C9                     u4061 01C4  
                   u3350 0F7D                     u3510 056F                     u4150 02EF  
                   u4070 01F8                     u3351 0F7C                     u3511 056E  
                   u4151 02EE                     u4071 01F7                     u3360 0F83  
                   u3520 0446                     u3600 0F18                     u4160 030D  
                   u4080 0218                     u3361 0F82                     u3521 0445  
                   u3601 0F17                     u4161 030C                     u4145 02C6  
                   u4081 0217                     u3370 0F8C                     u3530 0456  
                   u4090 024C                     u4170 05B6                     u3371 0F8B  
                   u3531 0455                     u4155 02EB                     u4091 024B  
                   u4075 01F4                     u4171 05B5                     u3380 0F94  
                   u3540 046E                     u3700 07DB                     u4180 05BB  
                   u3381 0F93                     u3541 046D                     u3701 07DA  
                   u4085 0214                     u4181 05BA                     u3390 0F9C  
                   u3470 04FB                     u3550 047F                     u3630 0F32  
                   u3710 0612                     u4190 05C0                     u3391 0F9B  
                   u3471 04FA                     u3551 047E                     u3631 0F31  
                   u3615 0F1F                     u3711 0611                     u4095 0248  
                   u4191 05BF                     u3480 0512                     u3560 0495  
                   u3640 079F                     u3800 0673                     u3720 061F  
                   u3481 0511                     u3561 0494                     u3625 0F26  
                   u3641 079E                     u3721 061E                     u3490 0523  
                   u3570 049F                     u3730 0631                     u3810 074D  
                   u3491 0522                     u3571 049E                     u3731 0630  
                   u3811 074C                     _PEIE 005E                     u3580 04B7  
                   u3660 07B3                     u3820 0753                     u3900 0041  
                   u3581 04B6                     u3661 07B2                     u3821 0752  
                   u3901 0040                     u3590 04DA                     u3750 0645  
                   u3830 075A                     u3910 0062                     u3591 04D9  
                   u3655 07A4                     u3751 0644                     u3831 0759  
                   u3911 0061                     u3680 07C6                     u3840 076B  
                   u3920 007A                     u3585 04B3                     u3681 07C5  
                   u3745 0636                     u3921 0079                     u3770 0658  
                   u3850 0772                     u3930 00B7                     u3595 04D6  
                   u3675 07B6                     u3771 0657                     u3851 0771  
                   u3931 00B6                     u3860 0785                     u3940 00DA  
                   u3685 07C2                     u3765 0648                     u3861 0784  
                   u3941 00D9                     u3790 066D                     u3870 078C  
                   u3950 0105                     u3695 07CF                     u3791 066C  
                   u3775 0654                     u3871 078B                     u3951 0104  
                   u3960 011F                     u3880 001C                     u3785 0661  
                   u3961 011E                     u3881 001B                     u3970 0126  
                   u3890 002C                     u3971 0125                     u3891 002B  
                   u3980 0131                     u3981 0130                     u3990 013A  
                   u3991 0139      __end_of_Dimmer_Main 043D                     _TMR0 0001  
                   _main 0583                     btemp 007E                     start 0011  
       __end_of_CDS_Main 04E7                    ??_ISR 0072         __end_of_LED_Main 0F0F  
                  ?_main 0070          __end_of___awdiv 0681                    _ADRES 001E  
        ___awdiv@divisor 0046                    _T1CON 0010          __end_of___lwdiv 07E5  
        ___awdiv@counter 004B                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
       __end_of_PIR_Main 032B       __size_of_TMR1_Main 009C              ?_PIR_Switch 0070  
          ??_Buzzer_Main 0046  __size_of_Dimmer_Control 006F                    pclath 000A  
                  status 0003                    wtemp0 007E      __end_of_Mcu_Initial 0F6F  
           __end_of_main 060B                   ??_main 0054              _Dimmer_Main 032B  
                 _ADCON0 001F                   _ADCON1 009F         ___awdiv@dividend 0048  
                 _ANSELA 0185                   _ANSELB 0186                   i1l1680 03A6  
                 i1l1672 035A                   i1l1681 03A5                   i1l1673 0359  
                 i1l1682 043C                   i1l1690 03FC                   i1l1674 0358  
                 i1l1683 043B                   i1l1691 0438                   i1l1675 037F  
                 i1l1684 043A                   i1l1692 0415                   i1l1676 037F  
                 i1l1693 0437                   i1l1685 03CB                   i1l1677 0375  
                 i1l1686 0439                   i1l1694 041F                   i1l1678 037E  
                 i1l1695 0436                   i1l1687 03FD                   i1l1679 03A7  
                 i1l1696 0435                   i1l1688 03EC                   i1l1697 042B  
                 i1l1689 03F0                   i1l3393 0FF4                   i1l1698 0434  
                 i1l3394 0FC8                   i1l1699 043C                   i1l3395 0FEE  
                 i1l3396 0FF4                   i1l7701 032B                   i1l7711 035A  
                 i1l7703 0335                   i1l7721 0394                   i1l7713 0361  
                 i1l7705 0339                   i1l7731 03C3                   i1l7723 03A3  
                 i1l7715 0370                   i1l7707 0340                   i1l7741 03F7  
                 i1l7733 03CB                   i1l7725 03AB                   i1l7717 0375  
                 i1l7709 034F                   i1l7821 0FC8                   i1l7813 0FB1  
                 i1l7751 041F                   i1l7735 03D6                   i1l7743 03FD  
                 i1l7727 03AC                   i1l7719 0386                   i1l7831 0FF2  
                 i1l7823 0FD3                   i1l7815 0FB7                   u320_20 0394  
                 i1l7753 0426                   i1l7745 040D                   i1l7737 03E6  
                 i1l7729 03B3                   u320_21 0393                   i1l7825 0FE2  
                 i1l7817 0FBD                   i1l7755 042B                   i1l7747 0415  
                 i1l7739 03EC                   i1l7827 0FEE                   i1l7819 0FC4  
                 i1l7749 041A                   i1l7829 0FF0                   u321_20 03A3  
                 u321_21 03A2                   u322_20 03AB                   u314_20 0339  
                 u322_21 03AA                   u314_21 0338                   u323_20 03B3  
                 u315_20 0340                   _FVRCON 009D                   u323_21 03B2  
                 u315_21 033F                   u324_20 03C3                   u316_20 034F  
                 u324_21 03C2                   u316_21 034E                   u325_20 03D6  
                 u317_20 0361                   u325_21 03D5                   u317_21 0360  
                 u326_20 03E6                   u318_20 0370                   u326_21 03E5  
                 u318_21 036F                   u327_20 03F7                   u319_20 0386  
                 u343_20 0FB7                   u327_21 03F6                   u319_21 0385  
                 u343_21 0FB6                   u328_20 040D                   u344_20 0FBD  
                 u328_21 040C                   u344_21 0FBC                   u329_20 0426  
                 u345_20 0FC4                   u329_21 0425                   u345_21 0FC3  
                 u346_20 0FE2                   u346_21 0FE1                   _OSCCON 0090  
                 _TMR0IE 005D                   _TMR1IE 0460                   _TMR1IF 0060  
                 _Dimmer 0055      __end_of_Buzzer_Main 0743                   _VarCDS 003A  
                 _VarLED 0044                   _VarPIR 00A0                   _Buzzer 0020  
                 _Timer1 0057        __end_of_TMR1_Main 0583                   ___wmul 0F0F  
              ??___awdiv 004A      __size_of_PIR_Switch 0052                ??___lwdiv 004A  
       ___awdiv@quotient 004D                   clrloop 0EE6             __pdataCOMMON 0078  
                 saved_w 007E                ?_CDS_Main 0070              _Mcu_Initial 0F3B  
   __size_of_LED_Setting 0042                ?_LED_Main 0070           __pcstackCOMMON 0070  
              ?_PIR_Main 0070     Dimmer_Control@number 0047               ??_CDS_Main 0046  
         _Dimmer_Control 0681               __pbssBANK0 0020               __pbssBANK1 00A0  
            _Buzzer_Main 06F0               ??_LED_Main 0046               __pmaintext 0583  
                ?___wmul 0046               ??_PIR_Main 004F               __pintentry 0004  
              PIR_Main@i 0053   __end_of_Dimmer_Control 06F0             ??_PIR_Switch 0048  
                ___awdiv 060B          __size_of___wmul 002C                  ___lwdiv 0795  
     __end_of_PIR_Switch 0795             __size_of_ISR 004F             ?_Dimmer_Main 0070  
        ?_Dimmer_Control 0070     end_of_initialization 07F6                _TMR1_Main 04E7  
              _PIRSwitch 0078             ?_Mcu_Initial 0070        __size_of_CDS_Main 00AA  
      __size_of_LED_Main 0022           __end_of___wmul 0F3B            __pidataCOMMON 07F9  
      __size_of_PIR_Main 0318               ?_TMR1_Main 0070      start_initialization 07E5  
            __end_of_ISR 1000            ??_LED_Setting 0046             ?_Buzzer_Main 0070  
              _VarDimmer 0023                _VarBuzzer 0040                _VarTimer1 0031  
               ??___wmul 004A            __pcstackBANK0 0046     __size_of_Dimmer_Main 0112  
              __pnvBANK0 0055      __end_of_LED_Setting 0FB1         ___lwdiv@dividend 0048  
               ?___awdiv 0046                __ptext381 0013                __ptext390 0F6F  
              __ptext382 0743                __ptext391 0681                __ptext383 060B  
              __ptext392 06F0                __ptext384 0795                __ptext393 0FB1  
              __ptext385 0F0F                __ptext394 032B                __ptext386 043D  
              __ptext395 0000                __ptext387 04E7                __ptext388 0F3B  
              __ptext389 0EED                 ?___lwdiv 0046              ??_TMR1_Main 0046  
       ??_Dimmer_Control 0046         ___lwdiv@quotient 004B                 _CDS_Main 043D  
      LED_Setting@number 0046        interrupt_function 0004           ___wmul@product 004A  
               _LED_Main 0EED     __size_of_Mcu_Initial 0034                 _GO_nDONE 00F9  
               _PIR_Main 0013        ___wmul@multiplier 0046              _LED_Setting 0F6F  
   __size_of_Buzzer_Main 0053         __size_of___awdiv 0076         __size_of___lwdiv 0050  
        ___lwdiv@divisor 0046          ___lwdiv@counter 004D            __size_of_main 0088  
               clear_ram 0EE5                 intlevel1 0000            ??_Dimmer_Main 0070  
             _PIR_Switch 0743  
