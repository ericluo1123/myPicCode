

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Sep 14 12:34:47 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  011D                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020D                     	;# 
   134  0210                     	;# 
   135  0211                     	;# 
   136  0211                     	;# 
   137  0212                     	;# 
   138  0212                     	;# 
   139  0213                     	;# 
   140  0213                     	;# 
   141  0214                     	;# 
   142  0214                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0216                     	;# 
   147  0216                     	;# 
   148  0217                     	;# 
   149  0217                     	;# 
   150  0291                     	;# 
   151  0291                     	;# 
   152  0292                     	;# 
   153  0293                     	;# 
   154  0298                     	;# 
   155  0298                     	;# 
   156  0299                     	;# 
   157  029A                     	;# 
   158  0394                     	;# 
   159  0395                     	;# 
   160  0396                     	;# 
   161  0FE4                     	;# 
   162  0FE5                     	;# 
   163  0FE6                     	;# 
   164  0FE7                     	;# 
   165  0FE8                     	;# 
   166  0FE9                     	;# 
   167  0FEA                     	;# 
   168  0FEB                     	;# 
   169  0FED                     	;# 
   170  0FEE                     	;# 
   171  0FEF                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  0116                     	;# 
   219  0117                     	;# 
   220  011D                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  018E                     	;# 
   224  0191                     	;# 
   225  0191                     	;# 
   226  0192                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0194                     	;# 
   230  0195                     	;# 
   231  0196                     	;# 
   232  0197                     	;# 
   233  0199                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  019C                     	;# 
   241  019D                     	;# 
   242  019E                     	;# 
   243  019F                     	;# 
   244  020D                     	;# 
   245  0210                     	;# 
   246  0211                     	;# 
   247  0211                     	;# 
   248  0212                     	;# 
   249  0212                     	;# 
   250  0213                     	;# 
   251  0213                     	;# 
   252  0214                     	;# 
   253  0214                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0216                     	;# 
   258  0216                     	;# 
   259  0217                     	;# 
   260  0217                     	;# 
   261  0291                     	;# 
   262  0291                     	;# 
   263  0292                     	;# 
   264  0293                     	;# 
   265  0298                     	;# 
   266  0298                     	;# 
   267  0299                     	;# 
   268  029A                     	;# 
   269  0394                     	;# 
   270  0395                     	;# 
   271  0396                     	;# 
   272  0FE4                     	;# 
   273  0FE5                     	;# 
   274  0FE6                     	;# 
   275  0FE7                     	;# 
   276  0FE8                     	;# 
   277  0FE9                     	;# 
   278  0FEA                     	;# 
   279  0FEB                     	;# 
   280  0FED                     	;# 
   281  0FEE                     	;# 
   282  0FEF                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0015                     	;# 
   302  0016                     	;# 
   303  0016                     	;# 
   304  0017                     	;# 
   305  0018                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001C                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  0090                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0095                     	;# 
   317  0096                     	;# 
   318  0097                     	;# 
   319  0099                     	;# 
   320  009A                     	;# 
   321  009B                     	;# 
   322  009B                     	;# 
   323  009C                     	;# 
   324  009D                     	;# 
   325  009E                     	;# 
   326  010C                     	;# 
   327  010D                     	;# 
   328  010E                     	;# 
   329  0116                     	;# 
   330  0117                     	;# 
   331  011D                     	;# 
   332  018C                     	;# 
   333  018D                     	;# 
   334  018E                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0194                     	;# 
   341  0195                     	;# 
   342  0196                     	;# 
   343  0197                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020D                     	;# 
   356  0210                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0216                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0217                     	;# 
   372  0291                     	;# 
   373  0291                     	;# 
   374  0292                     	;# 
   375  0293                     	;# 
   376  0298                     	;# 
   377  0298                     	;# 
   378  0299                     	;# 
   379  029A                     	;# 
   380  0394                     	;# 
   381  0395                     	;# 
   382  0396                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  0116                     	;# 
   441  0117                     	;# 
   442  011D                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  018E                     	;# 
   446  0191                     	;# 
   447  0191                     	;# 
   448  0192                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0194                     	;# 
   452  0195                     	;# 
   453  0196                     	;# 
   454  0197                     	;# 
   455  0199                     	;# 
   456  019A                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019C                     	;# 
   462  019C                     	;# 
   463  019D                     	;# 
   464  019E                     	;# 
   465  019F                     	;# 
   466  020D                     	;# 
   467  0210                     	;# 
   468  0211                     	;# 
   469  0211                     	;# 
   470  0212                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0213                     	;# 
   474  0214                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0216                     	;# 
   480  0216                     	;# 
   481  0217                     	;# 
   482  0217                     	;# 
   483  0291                     	;# 
   484  0291                     	;# 
   485  0292                     	;# 
   486  0293                     	;# 
   487  0298                     	;# 
   488  0298                     	;# 
   489  0299                     	;# 
   490  029A                     	;# 
   491  0394                     	;# 
   492  0395                     	;# 
   493  0396                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000D                     	;# 
   519  000E                     	;# 
   520  0010                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  0090                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0095                     	;# 
   539  0096                     	;# 
   540  0097                     	;# 
   541  0099                     	;# 
   542  009A                     	;# 
   543  009B                     	;# 
   544  009B                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009E                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  0116                     	;# 
   552  0117                     	;# 
   553  011D                     	;# 
   554  018C                     	;# 
   555  018D                     	;# 
   556  018E                     	;# 
   557  0191                     	;# 
   558  0191                     	;# 
   559  0192                     	;# 
   560  0193                     	;# 
   561  0193                     	;# 
   562  0194                     	;# 
   563  0195                     	;# 
   564  0196                     	;# 
   565  0197                     	;# 
   566  0199                     	;# 
   567  019A                     	;# 
   568  019B                     	;# 
   569  019B                     	;# 
   570  019B                     	;# 
   571  019B                     	;# 
   572  019C                     	;# 
   573  019C                     	;# 
   574  019D                     	;# 
   575  019E                     	;# 
   576  019F                     	;# 
   577  020D                     	;# 
   578  0210                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0216                     	;# 
   591  0216                     	;# 
   592  0217                     	;# 
   593  0217                     	;# 
   594  0291                     	;# 
   595  0291                     	;# 
   596  0292                     	;# 
   597  0293                     	;# 
   598  0298                     	;# 
   599  0298                     	;# 
   600  0299                     	;# 
   601  029A                     	;# 
   602  0394                     	;# 
   603  0395                     	;# 
   604  0396                     	;# 
   605  0FE4                     	;# 
   606  0FE5                     	;# 
   607  0FE6                     	;# 
   608  0FE7                     	;# 
   609  0FE8                     	;# 
   610  0FE9                     	;# 
   611  0FEA                     	;# 
   612  0FEB                     	;# 
   613  0FED                     	;# 
   614  0FEE                     	;# 
   615  0FEF                     	;# 
   616                           
   617                           	psect	idataBANK1
   618  04B7                     __pidataBANK1:	
   619                           
   620                           ;initializer for _VarProduct
   621  04B7  3463               	retlw	99
   622  04B8  3402               	retlw	2
   623  04B9  3400               	retlw	0
   624  04BA  3400               	retlw	0
   625  04BB  3400               	retlw	0
   626  04BC  3400               	retlw	0
   627  04BD  3400               	retlw	0
   628  04BE  3400               	retlw	0
   629  04BF  3400               	retlw	0
   630  04C0  3400               	retlw	0
   631  04C1  3400               	retlw	0
   632  04C2  3400               	retlw	0
   633  04C3  34FF               	retlw	255
   634  04C4  34FF               	retlw	255
   635  04C5  34FF               	retlw	255
   636  04C6  3400               	retlw	0
   637  04C7  3400               	retlw	0
   638  04C8  3400               	retlw	0
   639  04C9  3400               	retlw	0
   640  04CA  3400               	retlw	0
   641  04CB  3400               	retlw	0
   642  04CC  3400               	retlw	0
   643  04CD  3400               	retlw	0
   644  04CE  3400               	retlw	0
   645  04CF  3400               	retlw	0
   646  04D0  3400               	retlw	0
   647  04D1  3400               	retlw	0
   648  04D2  3400               	retlw	0
   649  04D3  3400               	retlw	0
   650  04D4  3400               	retlw	0
   651  04D5  3400               	retlw	0
   652  04D6  3400               	retlw	0
   653                           
   654                           	psect	stringtext
   655  0200                     __pstringtext:	
   656  0200                     _CC2500_registers_address:	
   657  0200  3403               	retlw	3
   658  0201  3416               	retlw	22
   659  0202  3417               	retlw	23
   660  0203  341E               	retlw	30
   661  0204  341F               	retlw	31
   662  0205  3420               	retlw	32
   663  0206  342A               	retlw	42
   664  0207  342B               	retlw	43
   665  0208  340B               	retlw	11
   666  0209  340C               	retlw	12
   667  020A  340D               	retlw	13
   668  020B  340E               	retlw	14
   669  020C  340F               	retlw	15
   670  020D  3410               	retlw	16
   671  020E  3411               	retlw	17
   672  020F  3412               	retlw	18
   673  0210  3413               	retlw	19
   674  0211  3414               	retlw	20
   675  0212  340A               	retlw	10
   676  0213  3415               	retlw	21
   677  0214  3421               	retlw	33
   678  0215  3422               	retlw	34
   679  0216  3418               	retlw	24
   680  0217  3419               	retlw	25
   681  0218  341A               	retlw	26
   682  0219  341B               	retlw	27
   683  021A  341C               	retlw	28
   684  021B  341D               	retlw	29
   685  021C  3423               	retlw	35
   686  021D  3424               	retlw	36
   687  021E  3425               	retlw	37
   688  021F  3426               	retlw	38
   689  0220  3429               	retlw	41
   690  0221  342C               	retlw	44
   691  0222  342D               	retlw	45
   692  0223  342E               	retlw	46
   693  0224  3400               	retlw	0
   694  0225  3401               	retlw	1
   695  0226  3402               	retlw	2
   696  0227  3407               	retlw	7
   697  0228  3408               	retlw	8
   698  0229  3409               	retlw	9
   699  022A  3406               	retlw	6
   700  022B  3404               	retlw	4
   701  022C  3405               	retlw	5
   702  022D  3427               	retlw	39
   703  022E  3428               	retlw	40
   704  022F                     __end_of_CC2500_registers_address:	
   705  022F                     _CC2500_rfSettings:	
   706  022F  3407               	retlw	7
   707  0230  3407               	retlw	7
   708  0231  3430               	retlw	48
   709  0232  3487               	retlw	135
   710  0233  346B               	retlw	107
   711  0234  34F8               	retlw	248
   712  0235  347F               	retlw	127
   713  0236  343F               	retlw	63
   714  0237  3409               	retlw	9
   715  0238  3400               	retlw	0
   716  0239  345C               	retlw	92
   717  023A  34A7               	retlw	167
   718  023B  3462               	retlw	98
   719  023C  3486               	retlw	134
   720  023D  3483               	retlw	131
   721  023E  3403               	retlw	3
   722  023F  3422               	retlw	34
   723  0240  34F8               	retlw	248
   724  0241  3400               	retlw	0
   725  0242  3444               	retlw	68
   726  0243  34B6               	retlw	182
   727  0244  3410               	retlw	16
   728  0245  3418               	retlw	24
   729  0246  341D               	retlw	29
   730  0247  341C               	retlw	28
   731  0248  34C7               	retlw	199
   732  0249  3400               	retlw	0
   733  024A  34B2               	retlw	178
   734  024B  34EA               	retlw	234
   735  024C  340A               	retlw	10
   736  024D  3400               	retlw	0
   737  024E  3411               	retlw	17
   738  024F  3459               	retlw	89
   739  0250  3488               	retlw	136
   740  0251  3431               	retlw	49
   741  0252  340B               	retlw	11
   742  0253  342F               	retlw	47
   743  0254  342E               	retlw	46
   744  0255  3406               	retlw	6
   745  0256  3404               	retlw	4
   746  0257  3405               	retlw	5
   747  0258  3400               	retlw	0
   748  0259  3430               	retlw	48
   749  025A  34D3               	retlw	211
   750  025B  3491               	retlw	145
   751  025C  3441               	retlw	65
   752  025D  3400               	retlw	0
   753  025E                     __end_of_CC2500_rfSettings:	
   754  025E                     _CC2500_patable_vaule:	
   755  025E  34FE               	retlw	254
   756  025F  34FE               	retlw	254
   757  0260  34FE               	retlw	254
   758  0261  34FE               	retlw	254
   759  0262  34FE               	retlw	254
   760  0263  34FE               	retlw	254
   761  0264  34FE               	retlw	254
   762  0265  34FE               	retlw	254
   763  0266                     __end_of_CC2500_patable_vaule:	
   764                           
   765                           	psect	nvCOMMON
   766  0079                     __pnvCOMMON:	
   767  0079                     _Product:	
   768  0079                     	ds	1
   769                           
   770                           	psect	nvBANK0
   771  005D                     __pnvBANK0:	
   772  005D                     _TMain:	
   773  005D                     	ds	1
   774  000C                     _PORTA	set	12
   775  000D                     _PORTB	set	13
   776  000E                     _PORTC	set	14
   777  0018                     _T1CON	set	24
   778  0017                     _TMR1H	set	23
   779  0016                     _TMR1L	set	22
   780  005F                     _GIE	set	95
   781  005C                     _INTE	set	92
   782  0059                     _INTF	set	89
   783  005E                     _PEIE	set	94
   784  0060                     _RA0	set	96
   785  0061                     _RA1	set	97
   786  0068                     _RB0	set	104
   787  0069                     _RB1	set	105
   788  006A                     _RB2	set	106
   789  006B                     _RB3	set	107
   790  006D                     _RB5	set	109
   791  0070                     _RC0	set	112
   792  008B                     _SSPIF	set	139
   793  0088                     _TMR1IF	set	136
   794  0099                     _OSCCON	set	153
   795  008C                     _TRISA	set	140
   796  008D                     _TRISB	set	141
   797  008E                     _TRISC	set	142
   798  048B                     _SSPIE	set	1163
   799  0488                     _TMR1IE	set	1160
   800  010C                     _LATA	set	268
   801  010D                     _LATB	set	269
   802  010E                     _LATC	set	270
   803  018C                     _ANSELA	set	396
   804  018D                     _ANSELB	set	397
   805  018E                     _ANSELC	set	398
   806  0212                     _SSPADD	set	530
   807  0211                     _SSPBUF	set	529
   808  0215                     _SSPCON1	set	533
   809  0216                     _SSPCON2	set	534
   810  0214                     _SSPSTAT	set	532
   811  10B4                     _ACKEN	set	4276
   812  10B6                     _ACKSTAT	set	4278
   813  10B9                     _AHEN	set	4281
   814  10A0                     _BF	set	4256
   815  10AC                     _CKP	set	4268
   816  10B8                     _DHEN	set	4280
   817  10B2                     _PEN	set	4274
   818  10B3                     _RCEN	set	4275
   819  10A2                     _R_nW	set	4258
   820  10B0                     _SEN	set	4272
   821  10AE                     _SSPOV	set	4270
   822  1068                     _WPUB0	set	4200
   823                           
   824                           ; #config settings
   825  0000                     
   826                           	psect	cinit
   827  001A                     start_initialization:	
   828  001A                     __initialization:	
   829                           
   830                           ; Clear objects allocated to BITCOMMON
   831  001A  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   832                           
   833                           ; Clear objects allocated to COMMON
   834  001B  01F6               	clrf	__pbssCOMMON& (0+127)
   835  001C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   836  001D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   837                           
   838                           ; Clear objects allocated to BANK0
   839  001E  3020               	movlw	low __pbssBANK0
   840  001F  0084               	movwf	4
   841  0020  3000               	movlw	high __pbssBANK0
   842  0021  0085               	movwf	5
   843  0022  3034               	movlw	52
   844  0023  3186  262C  3180   	fcall	clear_ram0
   845                           
   846                           ; Clear objects allocated to BANK2
   847  0026  3020               	movlw	low __pbssBANK2
   848  0027  0084               	movwf	4
   849  0028  3001               	movlw	high __pbssBANK2
   850  0029  0085               	movwf	5
   851  002A  3043               	movlw	67
   852  002B  3186  262C  3180   	fcall	clear_ram0
   853                           
   854                           ; Initialize objects allocated to BANK1
   855  002E  30B7               	movlw	low __pidataBANK1
   856  002F  0084               	movwf	4
   857  0030  3084               	movlw	(high __pidataBANK1)| (0+128)
   858  0031  0085               	movwf	5
   859  0032  30A0               	movlw	low __pdataBANK1
   860  0033  0086               	movwf	6
   861  0034  3000               	movlw	high __pdataBANK1
   862  0035  0087               	movwf	7
   863  0036  3020               	movlw	32
   864  0037  3186  2632         	fcall	init_ram
   865  0039                     end_of_initialization:	
   866                           ;End of C runtime variable initialization code
   867                           
   868  0039                     __end_of__initialization:	
   869  0039  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   870  003A  0020               	movlb	0
   871  003B  3184  2C47         	ljmp	_main	;jump to C main() function
   872                           
   873                           	psect	bitbssCOMMON
   874  0380                     __pbitbssCOMMON:	
   875  0380                     _CC2500_Enable:	
   876  0380                     	ds	1
   877  0381                     _Receive_GO:	
   878  0381                     	ds	1
   879  0382                     _Receive_OK:	
   880  0382                     	ds	1
   881  0383                     _RxStatus:	
   882  0383                     	ds	1
   883  0384                     _Transceive_GO:	
   884  0384                     	ds	1
   885  0385                     _Transceive_OK:	
   886  0385                     	ds	1
   887  0386                     _TxStatus:	
   888  0386                     	ds	1
   889                           
   890                           	psect	bssCOMMON
   891  0076                     __pbssCOMMON:	
   892  0076                     _RF:	
   893  0076                     	ds	1
   894  0077                     _RFSW:	
   895  0077                     	ds	1
   896  0078                     _Timer1:	
   897  0078                     	ds	1
   898                           
   899                           	psect	bssBANK0
   900  0020                     __pbssBANK0:	
   901  0020                     _RF_Data:	
   902  0020                     	ds	21
   903  0035                     _RF_Count:	
   904  0035                     	ds	2
   905  0037                     _CRC:	
   906  0037                     	ds	1
   907  0038                     _I2C:	
   908  0038                     	ds	1
   909  0039                     _RSSI:	
   910  0039                     	ds	1
   911  003A                     _Rx_Length:	
   912  003A                     	ds	1
   913  003B                     _SPI0Buffer:	
   914  003B                     	ds	1
   915  003C                     _Tx_Length:	
   916  003C                     	ds	1
   917  003D                     _r_address:	
   918  003D                     	ds	1
   919  003E                     _r_data:	
   920  003E                     	ds	1
   921  003F                     _s_data:	
   922  003F                     	ds	1
   923  0040                     _VarTMain:	
   924  0040                     	ds	15
   925  004F                     _VarTimer1:	
   926  004F                     	ds	3
   927  0052                     _RF1:	
   928  0052                     	ds	2
   929                           
   930                           	psect	dataBANK1
   931  00A0                     __pdataBANK1:	
   932  00A0                     _VarProduct:	
   933  00A0                     	ds	32
   934                           
   935                           	psect	bssBANK2
   936  0120                     __pbssBANK2:	
   937  0120                     _VarI2C:	
   938  0120                     	ds	67
   939                           
   940                           	psect	clrtext
   941  062C                     clear_ram0:	
   942                           ;	Called with FSR0 containing the base address, and
   943                           ;	WREG with the size to clear
   944                           
   945  062C  0064               	clrwdt	;clear the watchdog before getting into this loop
   946  062D                     clrloop0:	
   947  062D  0180               	clrf	0	;clear RAM location pointed to by FSR
   948  062E  3101               	addfsr 0,1
   949  062F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   950  0630  2E2D               	goto	clrloop0	;have we reached the end yet?
   951  0631  3400               	retlw	0	;all done for this memory range, return
   952                           
   953                           	psect	inittext
   954  0632                     init_ram:	
   955  0632  00FE               	movwf	126
   956  0633                     initloop:	
   957  0633  0012               	moviw fsr0++
   958  0634  001E               	movwi fsr1++
   959  0635  0BFE               	decfsz	126,f
   960  0636  2E33               	goto	initloop
   961  0637  3400               	retlw	0
   962                           
   963                           	psect	cstackCOMMON
   964  0071                     __pcstackCOMMON:	
   965  0071                     ?_MainT_Initial:	
   966  0071                     ?_Mcu_Initial:	
   967                           ; 0 bytes @ 0x0
   968                           
   969  0071                     ?_RF_Initialization:	
   970                           ; 0 bytes @ 0x0
   971                           
   972  0071                     ?_CC2500_PowerOnInitial:	
   973                           ; 0 bytes @ 0x0
   974                           
   975  0071                     ?_MainT:	
   976                           ; 0 bytes @ 0x0
   977                           
   978  0071                     ?_RF_Main:	
   979                           ; 0 bytes @ 0x0
   980                           
   981  0071                     ?_I2C_Main:	
   982                           ; 0 bytes @ 0x0
   983                           
   984  0071                     ?_CC2500_WriteByte:	
   985                           ; 0 bytes @ 0x0
   986                           
   987  0071                     ?_CC2500_WriteCommand:	
   988                           ; 0 bytes @ 0x0
   989                           
   990  0071                     ?_CC2500_ReadStatus:	
   991                           ; 0 bytes @ 0x0
   992                           
   993  0071                     ?_CC2500_ReadByte:	
   994                           ; 0 bytes @ 0x0
   995                           
   996  0071                     ?_CC2500_PowerRST:	
   997                           ; 0 bytes @ 0x0
   998                           
   999  0071                     ?_CC2500_InitSetREG:	
  1000                           ; 0 bytes @ 0x0
  1001                           
  1002  0071                     ?_CC2500_InitPATable:	
  1003                           ; 0 bytes @ 0x0
  1004                           
  1005  0071                     ?_CC2500_ClearTXFIFO:	
  1006                           ; 0 bytes @ 0x0
  1007                           
  1008  0071                     ?_CC2500_ClearRXFIFO:	
  1009                           ; 0 bytes @ 0x0
  1010                           
  1011  0071                     ?_CC2500_FrequencyCabr:	
  1012                           ; 0 bytes @ 0x0
  1013                           
  1014  0071                     ?_CC2500_SIDLEMode:	
  1015                           ; 0 bytes @ 0x0
  1016                           
  1017  0071                     ?_setRF_Initialization:	
  1018                           ; 0 bytes @ 0x0
  1019                           
  1020  0071                     ?_setRF_Main:	
  1021                           ; 0 bytes @ 0x0
  1022                           
  1023  0071                     ?_RF_RxDisable:	
  1024                           ; 0 bytes @ 0x0
  1025                           
  1026  0071                     ?_I2C_SetData:	
  1027                           ; 0 bytes @ 0x0
  1028                           
  1029  0071                     ?_setINT_GO:	
  1030                           ; 0 bytes @ 0x0
  1031                           
  1032  0071                     ?_IO_Set:	
  1033                           ; 0 bytes @ 0x0
  1034                           
  1035  0071                     ?_TMR1_Set:	
  1036                           ; 0 bytes @ 0x0
  1037                           
  1038  0071                     ?_INT_Set:	
  1039                           ; 0 bytes @ 0x0
  1040                           
  1041  0071                     ?_I2C_Set:	
  1042                           ; 0 bytes @ 0x0
  1043                           
  1044  0071                     ?_TMR1_ISR:	
  1045                           ; 0 bytes @ 0x0
  1046                           
  1047  0071                     ??_TMR1_ISR:	
  1048                           ; 0 bytes @ 0x0
  1049                           
  1050  0071                     ?_INT_ISR:	
  1051                           ; 0 bytes @ 0x0
  1052                           
  1053  0071                     ?_I2C_ISR:	
  1054                           ; 0 bytes @ 0x0
  1055                           
  1056  0071                     ??_I2C_ISR:	
  1057                           ; 0 bytes @ 0x0
  1058                           
  1059  0071                     ?_I2C_Slave_Mode:	
  1060                           ; 0 bytes @ 0x0
  1061                           
  1062  0071                     ?_main:	
  1063                           ; 0 bytes @ 0x0
  1064                           
  1065  0071                     ?_CC2500_TxData:	
  1066                           ; 0 bytes @ 0x0
  1067                           
  1068  0071                     ?_CC2500_RxData:	
  1069                           ; 0 bytes @ 0x0
  1070                           
  1071  0071                     ?_RfPointSelect:	
  1072                           ; 0 bytes @ 0x0
  1073                           
  1074  0071                     ?_ISR:	
  1075                           ; 0 bytes @ 0x0
  1076                           
  1077  0071                     ?i1_RfPointSelect:	
  1078                           ; 0 bytes @ 0x0
  1079                           
  1080  0071                     ??i1_RfPointSelect:	
  1081                           ; 0 bytes @ 0x0
  1082                           
  1083  0071                     setRF_Initialization@rf:	
  1084                           ; 0 bytes @ 0x0
  1085                           
  1086                           
  1087                           ; 1 bytes @ 0x0
  1088  0071                     	ds	1
  1089  0072                     i1RfPointSelect@rf:	
  1090                           
  1091                           ; 1 bytes @ 0x1
  1092  0072                     	ds	1
  1093  0073                     ?_setRF_ReceiveGO:	
  1094  0073                     setRF_ReceiveGO@command:	
  1095                           ; 0 bytes @ 0x2
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x2
  1099  0073                     	ds	1
  1100  0074                     ??_setRF_ReceiveGO:	
  1101  0074                     setRF_ReceiveGO@rf:	
  1102                           ; 0 bytes @ 0x3
  1103                           
  1104                           
  1105                           ; 1 bytes @ 0x3
  1106  0074                     	ds	1
  1107  0075                     ??_INT_ISR:	
  1108  0075                     ??_ISR:	
  1109                           ; 0 bytes @ 0x4
  1110                           
  1111                           
  1112                           ; 0 bytes @ 0x4
  1113  0075                     	ds	1
  1114                           
  1115                           	psect	cstackBANK0
  1116  0054                     __pcstackBANK0:	
  1117  0054                     ??_MainT_Initial:	
  1118  0054                     ??_CC2500_WriteByte:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0054                     ??_CC2500_ReadByte:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0054                     ?_DelayTime_1us:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0054                     ??_setRF_Initialization:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0054                     ??_I2C_SetData:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0054                     ??_setINT_GO:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0054                     ??_IO_Set:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0054                     ??_TMR1_Set:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0054                     ??_INT_Set:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0054                     ??_I2C_Set:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0054                     ??_I2C_Slave_Mode:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0054                     ??_RfPointSelect:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0054                     setINT_GO@command:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0054                     DelayTime_1us@count:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160                           
  1161                           ; 2 bytes @ 0x0
  1162  0054                     	ds	1
  1163  0055                     ??_Mcu_Initial:	
  1164  0055                     ??_RF_Initialization:	
  1165                           ; 0 bytes @ 0x1
  1166                           
  1167  0055                     CC2500_WriteByte@loop_a:	
  1168                           ; 0 bytes @ 0x1
  1169                           
  1170  0055                     CC2500_ReadByte@loop_b:	
  1171                           ; 1 bytes @ 0x1
  1172                           
  1173  0055                     RfPointSelect@rf:	
  1174                           ; 1 bytes @ 0x1
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0x1
  1178  0055                     	ds	1
  1179  0056                     ??_CC2500_WriteCommand:	
  1180  0056                     ??_CC2500_ReadStatus:	
  1181                           ; 0 bytes @ 0x2
  1182                           
  1183  0056                     ?_setRF_RxStatus:	
  1184                           ; 0 bytes @ 0x2
  1185                           
  1186  0056                     ??_DelayTime_1us:	
  1187                           ; 0 bytes @ 0x2
  1188                           
  1189  0056                     ?_CC2500_WriteREG:	
  1190                           ; 0 bytes @ 0x2
  1191                           
  1192  0056                     CC2500_WriteREG@value:	
  1193                           ; 0 bytes @ 0x2
  1194                           
  1195  0056                     setRF_RxStatus@command:	
  1196                           ; 1 bytes @ 0x2
  1197                           
  1198  0056                     I2C_SetData@command:	
  1199                           ; 1 bytes @ 0x2
  1200                           
  1201  0056                     I2C_Slave_Mode@i:	
  1202                           ; 1 bytes @ 0x2
  1203                           
  1204  0056                     DelayTime_1us@i:	
  1205                           ; 1 bytes @ 0x2
  1206                           
  1207                           
  1208                           ; 2 bytes @ 0x2
  1209  0056                     	ds	1
  1210  0057                     ??_setRF_RxStatus:	
  1211  0057                     ??_CC2500_WriteREG:	
  1212                           ; 0 bytes @ 0x3
  1213                           
  1214  0057                     CC2500_WriteCommand@command:	
  1215                           ; 0 bytes @ 0x3
  1216                           
  1217  0057                     CC2500_ReadStatus@status_addr:	
  1218                           ; 1 bytes @ 0x3
  1219                           
  1220  0057                     setRF_RxStatus@rf:	
  1221                           ; 1 bytes @ 0x3
  1222                           
  1223  0057                     I2C_SetData@i:	
  1224                           ; 1 bytes @ 0x3
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0x3
  1228  0057                     	ds	1
  1229  0058                     ??_I2C_Main:	
  1230  0058                     ??_CC2500_ClearTXFIFO:	
  1231                           ; 0 bytes @ 0x4
  1232                           
  1233  0058                     ??_CC2500_ClearRXFIFO:	
  1234                           ; 0 bytes @ 0x4
  1235                           
  1236  0058                     ??_CC2500_SIDLEMode:	
  1237                           ; 0 bytes @ 0x4
  1238                           
  1239  0058                     ??_RF_RxDisable:	
  1240                           ; 0 bytes @ 0x4
  1241                           
  1242  0058                     ??_CC2500_TxData:	
  1243                           ; 0 bytes @ 0x4
  1244                           
  1245  0058                     ??_CC2500_RxData:	
  1246                           ; 0 bytes @ 0x4
  1247                           
  1248  0058                     CC2500_WriteREG@w_addr:	
  1249                           ; 0 bytes @ 0x4
  1250                           
  1251  0058                     RF_RxDisable@rf:	
  1252                           ; 1 bytes @ 0x4
  1253                           
  1254  0058                     DelayTime_1us@j:	
  1255                           ; 1 bytes @ 0x4
  1256                           
  1257                           
  1258                           ; 2 bytes @ 0x4
  1259  0058                     	ds	1
  1260  0059                     ?_setRF_Enable:	
  1261  0059                     ??_CC2500_InitSetREG:	
  1262                           ; 0 bytes @ 0x5
  1263                           
  1264  0059                     ??_CC2500_InitPATable:	
  1265                           ; 0 bytes @ 0x5
  1266                           
  1267  0059                     CC2500_TxData@loop_e:	
  1268                           ; 0 bytes @ 0x5
  1269                           
  1270  0059                     CC2500_RxData@loop_f:	
  1271                           ; 1 bytes @ 0x5
  1272                           
  1273  0059                     setRF_Enable@command:	
  1274                           ; 1 bytes @ 0x5
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0x5
  1278  0059                     	ds	1
  1279  005A                     ??_setRF_Enable:	
  1280  005A                     ??_CC2500_PowerRST:	
  1281                           ; 0 bytes @ 0x6
  1282                           
  1283  005A                     ??_CC2500_FrequencyCabr:	
  1284                           ; 0 bytes @ 0x6
  1285                           
  1286  005A                     ??_setRF_Main:	
  1287                           ; 0 bytes @ 0x6
  1288                           
  1289  005A                     CC2500_InitSetREG@temp1:	
  1290                           ; 0 bytes @ 0x6
  1291                           
  1292  005A                     CC2500_InitPATable@temp:	
  1293                           ; 1 bytes @ 0x6
  1294                           
  1295  005A                     setRF_Enable@rf:	
  1296                           ; 1 bytes @ 0x6
  1297                           
  1298                           
  1299                           ; 1 bytes @ 0x6
  1300  005A                     	ds	1
  1301  005B                     ??_MainT:	
  1302  005B                     CC2500_InitSetREG@temp2:	
  1303                           ; 0 bytes @ 0x7
  1304                           
  1305  005B                     CC2500_InitPATable@loop_d:	
  1306                           ; 1 bytes @ 0x7
  1307                           
  1308  005B                     setRF_Main@rf:	
  1309                           ; 1 bytes @ 0x7
  1310                           
  1311                           
  1312                           ; 1 bytes @ 0x7
  1313  005B                     	ds	1
  1314  005C                     ??_RF_Main:	
  1315  005C                     CC2500_InitSetREG@loop_c:	
  1316                           ; 0 bytes @ 0x8
  1317                           
  1318                           
  1319                           ; 1 bytes @ 0x8
  1320  005C                     	ds	1
  1321  005D                     ??_CC2500_PowerOnInitial:	
  1322  005D                     ??_main:	
  1323                           ; 0 bytes @ 0x9
  1324                           
  1325                           
  1326                           	psect	maintext
  1327  0447                     __pmaintext:	
  1328                           ; 0 bytes @ 0x9
  1329 ;;
  1330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1331 ;;
  1332 ;; *************** function _main *****************
  1333 ;; Defined at:
  1334 ;;		line 6 in file "I:\Program\PIC\Source_File\myMain.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 17F/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1348 ;;      Params:         0       0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels required when called:    9
  1354 ;; This function calls:
  1355 ;;		_CC2500_PowerOnInitial
  1356 ;;		_I2C_Main
  1357 ;;		_MainT
  1358 ;;		_MainT_Initial
  1359 ;;		_Mcu_Initial
  1360 ;;		_RF_Initialization
  1361 ;;		_RF_Main
  1362 ;; This function is called by:
  1363 ;;		Startup code after reset
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _main
  1369  0447                     _main:	
  1370                           
  1371                           ;myMain.c: 8: MainT_Initial();
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1375  0447  3185  25BF  3184   	fcall	_MainT_Initial
  1376                           
  1377                           ;myMain.c: 9: Mcu_Initial();
  1378  044A  3185  258D  3184   	fcall	_Mcu_Initial
  1379                           
  1380                           ;myMain.c: 10: ;;
  1381                           ;myMain.c: 11: RF_Initialization();
  1382  044D  3186  2647  3184   	fcall	_RF_Initialization
  1383                           
  1384                           ;myMain.c: 12: CC2500_PowerOnInitial();
  1385  0450  3185  2564  3184   	fcall	_CC2500_PowerOnInitial
  1386  0453                     l3161:	
  1387                           ;myMain.c: 13: while(1)
  1388                           
  1389                           
  1390                           ;myMain.c: 14: {
  1391                           ;myMain.c: 17: if(TMain->T1_Timerout)
  1392  0453  0020               	movlb	0	; select bank0
  1393  0454  085D               	movf	_TMain,w
  1394  0455  0086               	movwf	6
  1395  0456  0187               	clrf	7
  1396  0457  1D01               	btfss	1,2
  1397  0458  2C53               	goto	l3161
  1398                           
  1399                           ;myMain.c: 18: {
  1400                           ;myMain.c: 19: TMain->T1_Timerout = 0;
  1401  0459  085D               	movf	_TMain,w
  1402  045A  0086               	movwf	6
  1403  045B  0187               	clrf	7
  1404  045C  1101               	bcf	1,2
  1405                           
  1406                           ;myMain.c: 20: MainT();
  1407  045D  3181  2114  3184   	fcall	_MainT
  1408                           
  1409                           ;myMain.c: 21: if(TMain->PowerON)
  1410  0460  0020               	movlb	0	; select bank0
  1411  0461  085D               	movf	_TMain,w
  1412  0462  0086               	movwf	6
  1413  0463  0187               	clrf	7
  1414  0464  1C01               	btfss	1,0
  1415  0465  2C53               	goto	l3161
  1416                           
  1417                           ;myMain.c: 22: {
  1418                           ;myMain.c: 23: RF_Main();
  1419  0466  3186  2643  3184   	fcall	_RF_Main
  1420                           
  1421                           ;myMain.c: 24: I2C_Main();
  1422  0469  3183  235E  3184   	fcall	_I2C_Main
  1423                           
  1424                           ;myMain.c: 25: ;;
  1425                           ;myMain.c: 26: ;;
  1426  046C  2C53               	goto	l3161
  1427  046D                     __end_of_main:	
  1428                           
  1429                           	psect	text1
  1430  0643                     __ptext1:	
  1431 ;; *************** function _RF_Main *****************
  1432 ;; Defined at:
  1433 ;;		line 24 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;		None               void
  1440 ;; Registers used:
  1441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1447 ;;      Params:         0       0       0       0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    8
  1454 ;; This function calls:
  1455 ;;		_setRF_Main
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _RF_Main
  1463  0643                     _RF_Main:	
  1464                           
  1465                           ;RF_Control_B1.c: 27: setRF_Main(1);
  1466                           
  1467                           ;incstack = 0
  1468                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1469  0643  3001               	movlw	1
  1470  0644  3180  20AA         	fcall	_setRF_Main
  1471  0646  0008               	return
  1472  0647                     __end_of_RF_Main:	
  1473                           
  1474                           	psect	text2
  1475  00AA                     __ptext2:	
  1476 ;; *************** function _setRF_Main *****************
  1477 ;; Defined at:
  1478 ;;		line 58 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  rf              1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  rf              1    7[BANK0 ] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;		None               void
  1485 ;; Registers used:
  1486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1492 ;;      Params:         0       0       0       0       0       0       0       0
  1493 ;;      Locals:         0       1       0       0       0       0       0       0
  1494 ;;      Temps:          0       1       0       0       0       0       0       0
  1495 ;;      Totals:         0       2       0       0       0       0       0       0
  1496 ;;Total ram usage:        2 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    7
  1499 ;; This function calls:
  1500 ;;		_CC2500_RxData
  1501 ;;		_CC2500_TxData
  1502 ;;		_CC2500_WriteCommand
  1503 ;;		_I2C_SetData
  1504 ;;		_RF_RxDisable
  1505 ;;		_RfPointSelect
  1506 ;;		_setINT_GO
  1507 ;; This function is called by:
  1508 ;;		_RF_Main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _setRF_Main
  1514  00AA                     _setRF_Main:	
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1518                           ;setRF_Main@rf stored from wreg
  1519  00AA  0020               	movlb	0	; select bank0
  1520  00AB  00DB               	movwf	setRF_Main@rf
  1521                           
  1522                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  1523  00AC  085B               	movf	setRF_Main@rf,w
  1524  00AD  3186  260E  3180   	fcall	_RfPointSelect
  1525                           
  1526                           ;RF_Control_B1.c: 61: if(RF->Enable)
  1527  00B0  0876               	movf	_RF,w
  1528  00B1  0086               	movwf	6
  1529  00B2  0187               	clrf	7
  1530  00B3  1C01               	btfss	1,0
  1531  00B4  0008               	return
  1532                           
  1533                           ;RF_Control_B1.c: 62: {
  1534                           ;RF_Control_B1.c: 75: if(RF->Key)
  1535  00B5  0876               	movf	_RF,w
  1536  00B6  0086               	movwf	6
  1537  00B7  0187               	clrf	7
  1538  00B8  1F81               	btfss	1,7
  1539  00B9  28BE               	goto	l2941
  1540                           
  1541                           ;RF_Control_B1.c: 76: {
  1542                           ;RF_Control_B1.c: 77: RF_RxDisable(1);
  1543  00BA  3001               	movlw	1
  1544  00BB  3183  23C8         	fcall	_RF_RxDisable
  1545                           
  1546                           ;RF_Control_B1.c: 78: }
  1547  00BD  0008               	return
  1548  00BE                     l2941:	
  1549                           
  1550                           ;RF_Control_B1.c: 79: else
  1551                           ;RF_Control_B1.c: 80: {
  1552                           ;RF_Control_B1.c: 81: if(RF->ReceiveGO)
  1553  00BE  0876               	movf	_RF,w
  1554  00BF  0086               	movwf	6
  1555  00C0  0187               	clrf	7
  1556  00C1  1C81               	btfss	1,1
  1557  00C2  28CE               	goto	l2949
  1558                           
  1559                           ;RF_Control_B1.c: 82: {
  1560                           ;RF_Control_B1.c: 83: RF->ReceiveGO=0;
  1561  00C3  0876               	movf	_RF,w
  1562  00C4  0086               	movwf	6
  1563  00C5  0187               	clrf	7
  1564  00C6  1081               	bcf	1,1
  1565                           
  1566                           ;RF_Control_B1.c: 84: CC2500_RxData();
  1567  00C7  3182  22CC  3180   	fcall	_CC2500_RxData
  1568                           
  1569                           ;RF_Control_B1.c: 86: I2C_SetData(1);
  1570  00CA  3001               	movlw	1
  1571  00CB  3180  203D         	fcall	_I2C_SetData
  1572                           
  1573                           ;RF_Control_B1.c: 93: }
  1574  00CD  0008               	return
  1575  00CE                     l2949:	
  1576                           
  1577                           ;RF_Control_B1.c: 94: else
  1578                           ;RF_Control_B1.c: 95: {
  1579                           ;RF_Control_B1.c: 96: if(RF->TransceiveGO)
  1580  00CE  0876               	movf	_RF,w
  1581  00CF  0086               	movwf	6
  1582  00D0  0187               	clrf	7
  1583  00D1  1D01               	btfss	1,2
  1584  00D2  28FF               	goto	l2967
  1585                           
  1586                           ;RF_Control_B1.c: 97: {
  1587                           ;RF_Control_B1.c: 98: RF_RxDisable(1);
  1588  00D3  3001               	movlw	1
  1589  00D4  3183  23C8  3180   	fcall	_RF_RxDisable
  1590                           
  1591                           ;RF_Control_B1.c: 99: if(RF->Debounce == 0)
  1592  00D7  0876               	movf	_RF,w
  1593  00D8  0086               	movwf	6
  1594  00D9  0187               	clrf	7
  1595  00DA  1A81               	btfsc	1,5
  1596  00DB  28F4               	goto	l2963
  1597                           
  1598                           ;RF_Control_B1.c: 100: {
  1599                           ;RF_Control_B1.c: 101: RF->DebounceTime++;
  1600  00DC  3001               	movlw	1
  1601  00DD  0020               	movlb	0	; select bank0
  1602  00DE  00DA               	movwf	??_setRF_Main
  1603  00DF  0A76               	incf	_RF,w
  1604  00E0  0086               	movwf	6
  1605  00E1  0187               	clrf	7
  1606  00E2  085A               	movf	??_setRF_Main,w
  1607  00E3  0781               	addwf	1,f
  1608                           
  1609                           ;RF_Control_B1.c: 102: if(RF->DebounceTime == 25)
  1610  00E4  0A76               	incf	_RF,w
  1611  00E5  0086               	movwf	6
  1612  00E6  0187               	clrf	7
  1613  00E7  0801               	movf	1,w
  1614  00E8  3A19               	xorlw	25
  1615  00E9  1D03               	skipz
  1616  00EA  0008               	return
  1617                           
  1618                           ;RF_Control_B1.c: 103: {
  1619                           ;RF_Control_B1.c: 104: RF->DebounceTime=0;
  1620  00EB  0A76               	incf	_RF,w
  1621  00EC  0086               	movwf	6
  1622  00ED  0187               	clrf	7
  1623  00EE  0181               	clrf	1
  1624                           
  1625                           ;RF_Control_B1.c: 105: RF->Debounce=1;
  1626  00EF  0876               	movf	_RF,w
  1627  00F0  0086               	movwf	6
  1628  00F1  0187               	clrf	7
  1629  00F2  1681               	bsf	1,5
  1630                           
  1631                           ;RF_Control_B1.c: 106: }
  1632                           ;RF_Control_B1.c: 107: }
  1633  00F3  0008               	return
  1634  00F4                     l2963:	
  1635                           
  1636                           ;RF_Control_B1.c: 108: else
  1637                           ;RF_Control_B1.c: 109: {
  1638                           ;RF_Control_B1.c: 110: RF->Debounce=0;
  1639  00F4  0876               	movf	_RF,w
  1640  00F5  0086               	movwf	6
  1641  00F6  0187               	clrf	7
  1642  00F7  1281               	bcf	1,5
  1643                           
  1644                           ;RF_Control_B1.c: 111: RF->TransceiveGO=0;
  1645  00F8  0876               	movf	_RF,w
  1646  00F9  0086               	movwf	6
  1647  00FA  0187               	clrf	7
  1648  00FB  1101               	bcf	1,2
  1649                           
  1650                           ;RF_Control_B1.c: 112: CC2500_TxData();
  1651  00FC  3183  2321         	fcall	_CC2500_TxData
  1652                           
  1653                           ;RF_Control_B1.c: 113: }
  1654                           ;RF_Control_B1.c: 114: }
  1655  00FE  0008               	return
  1656  00FF                     l2967:	
  1657                           
  1658                           ;RF_Control_B1.c: 115: else
  1659                           ;RF_Control_B1.c: 116: {
  1660                           ;RF_Control_B1.c: 117: if(RF->RxStatus == 0 && 1)
  1661  00FF  0876               	movf	_RF,w
  1662  0100  0086               	movwf	6
  1663  0101  0187               	clrf	7
  1664  0102  1981               	btfsc	1,3
  1665  0103  0008               	return
  1666                           
  1667                           ;RF_Control_B1.c: 118: {
  1668                           ;RF_Control_B1.c: 119: RF->RxStatus=1;
  1669  0104  0876               	movf	_RF,w
  1670  0105  0086               	movwf	6
  1671  0106  0187               	clrf	7
  1672  0107  1581               	bsf	1,3
  1673                           
  1674                           ;RF_Control_B1.c: 120: CC2500_WriteCommand(0x36);
  1675  0108  3036               	movlw	54
  1676  0109  3185  25DC  3180   	fcall	_CC2500_WriteCommand
  1677                           
  1678                           ;RF_Control_B1.c: 121: CC2500_WriteCommand(0x34);
  1679  010C  3034               	movlw	52
  1680  010D  3185  25DC  3180   	fcall	_CC2500_WriteCommand
  1681                           
  1682                           ;RF_Control_B1.c: 122: setINT_GO(1);
  1683  0110  3001               	movlw	1
  1684  0111  3186  2623         	fcall	_setINT_GO
  1685  0113  0008               	return
  1686  0114                     __end_of_setRF_Main:	
  1687                           
  1688                           	psect	text3
  1689  0321                     __ptext3:	
  1690 ;; *************** function _CC2500_TxData *****************
  1691 ;; Defined at:
  1692 ;;		line 30 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  loop_e          1    5[BANK0 ] unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;		None               void
  1699 ;; Registers used:
  1700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1706 ;;      Params:         0       0       0       0       0       0       0       0
  1707 ;;      Locals:         0       1       0       0       0       0       0       0
  1708 ;;      Temps:          0       1       0       0       0       0       0       0
  1709 ;;      Totals:         0       2       0       0       0       0       0       0
  1710 ;;Total ram usage:        2 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    6
  1713 ;; This function calls:
  1714 ;;		_CC2500_WriteByte
  1715 ;;		_CC2500_WriteCommand
  1716 ;; This function is called by:
  1717 ;;		_setRF_Main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _CC2500_TxData
  1723  0321                     _CC2500_TxData:	
  1724                           
  1725                           ;CC2500_B1.c: 32: unsigned char loop_e;
  1726                           ;CC2500_B1.c: 34: RB5=0;
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1730  0321  0020               	movlb	0	; select bank0
  1731  0322  128D               	bcf	13,5	;volatile
  1732                           
  1733                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  1734  0323  307F               	movlw	127
  1735  0324  00D8               	movwf	??_CC2500_TxData
  1736  0325  0858               	movf	??_CC2500_TxData,w
  1737  0326  00BB               	movwf	_SPI0Buffer
  1738  0327                     l266:	
  1739                           ;CC2500_B1.c: 36: while(RB3==1);
  1740                           
  1741  0327  198D               	btfsc	13,3	;volatile
  1742  0328  2B27               	goto	l266
  1743                           
  1744                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  1745  0329  3185  2579  3183   	fcall	_CC2500_WriteByte
  1746                           
  1747                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  1748  032C  0020               	movlb	0	; select bank0
  1749  032D  083C               	movf	_Tx_Length,w
  1750  032E  00D8               	movwf	??_CC2500_TxData
  1751  032F  0858               	movf	??_CC2500_TxData,w
  1752  0330  00BB               	movwf	_SPI0Buffer
  1753                           
  1754                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  1755  0331  3185  2579  3183   	fcall	_CC2500_WriteByte
  1756                           
  1757                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  1758  0334  0020               	movlb	0	; select bank0
  1759  0335  01D9               	clrf	CC2500_TxData@loop_e
  1760  0336                     l2737:	
  1761  0336  083C               	movf	_Tx_Length,w
  1762  0337  0259               	subwf	CC2500_TxData@loop_e,w
  1763  0338  1803               	btfsc	3,0
  1764  0339  2B4B               	goto	l271
  1765                           
  1766                           ;CC2500_B1.c: 41: {
  1767                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  1768  033A  0859               	movf	CC2500_TxData@loop_e,w
  1769  033B  3E20               	addlw	_RF_Data& (0+255)
  1770  033C  0086               	movwf	6
  1771  033D  0187               	clrf	7
  1772  033E  0801               	movf	1,w
  1773  033F  00D8               	movwf	??_CC2500_TxData
  1774  0340  0858               	movf	??_CC2500_TxData,w
  1775  0341  00BB               	movwf	_SPI0Buffer
  1776                           
  1777                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  1778  0342  3185  2579  3183   	fcall	_CC2500_WriteByte
  1779  0345  3001               	movlw	1
  1780  0346  0020               	movlb	0	; select bank0
  1781  0347  00D8               	movwf	??_CC2500_TxData
  1782  0348  0858               	movf	??_CC2500_TxData,w
  1783  0349  07D9               	addwf	CC2500_TxData@loop_e,f
  1784  034A  2B36               	goto	l2737
  1785  034B                     l271:	
  1786                           
  1787                           ;CC2500_B1.c: 44: }
  1788                           ;CC2500_B1.c: 45: RB5=1;
  1789  034B  168D               	bsf	13,5	;volatile
  1790                           
  1791                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  1792  034C  3035               	movlw	53
  1793  034D  3185  25DC  3183   	fcall	_CC2500_WriteCommand
  1794  0350                     l272:	
  1795                           ;CC2500_B1.c: 47: while(RB0==0);
  1796                           
  1797  0350  0020               	movlb	0	; select bank0
  1798  0351  1C0D               	btfss	13,0	;volatile
  1799  0352  2B50               	goto	l272
  1800  0353                     l275:	
  1801                           ;CC2500_B1.c: 48: while(RB0==1);
  1802                           
  1803  0353  180D               	btfsc	13,0	;volatile
  1804  0354  2B53               	goto	l275
  1805                           
  1806                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  1807  0355  3036               	movlw	54
  1808  0356  3185  25DC  3183   	fcall	_CC2500_WriteCommand
  1809                           
  1810                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  1811  0359  303B               	movlw	59
  1812  035A  3185  25DC         	fcall	_CC2500_WriteCommand
  1813                           
  1814                           ;CC2500_B1.c: 51: Transceive_OK=1;
  1815  035C  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  1816  035D  0008               	return
  1817  035E                     __end_of_CC2500_TxData:	
  1818                           
  1819                           	psect	text4
  1820  02CC                     __ptext4:	
  1821 ;; *************** function _CC2500_RxData *****************
  1822 ;; Defined at:
  1823 ;;		line 56 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  loop_f          1    5[BANK0 ] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;		None               void
  1830 ;; Registers used:
  1831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1837 ;;      Params:         0       0       0       0       0       0       0       0
  1838 ;;      Locals:         0       1       0       0       0       0       0       0
  1839 ;;      Temps:          0       1       0       0       0       0       0       0
  1840 ;;      Totals:         0       2       0       0       0       0       0       0
  1841 ;;Total ram usage:        2 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    6
  1844 ;; This function calls:
  1845 ;;		_CC2500_ReadByte
  1846 ;;		_CC2500_ReadStatus
  1847 ;;		_CC2500_WriteByte
  1848 ;;		_CC2500_WriteCommand
  1849 ;;		_setRF_RxStatus
  1850 ;; This function is called by:
  1851 ;;		_setRF_Main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function _CC2500_RxData
  1857  02CC                     _CC2500_RxData:	
  1858                           
  1859                           ;CC2500_B1.c: 58: unsigned char loop_f;
  1860                           ;CC2500_B1.c: 62: if(RB0 == 1)
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1864  02CC  0020               	movlb	0	; select bank0
  1865  02CD  180D               	btfsc	13,0	;volatile
  1866  02CE                     l282:	
  1867                           ;CC2500_B1.c: 63: {
  1868                           ;CC2500_B1.c: 64: while(RB0 == 1);
  1869                           
  1870  02CE  180D               	btfsc	13,0	;volatile
  1871  02CF  2ACE               	goto	l282
  1872                           
  1873                           ;CC2500_B1.c: 65: }
  1874                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  1875  02D0  303B               	movlw	59
  1876  02D1  3185  250D  3182   	fcall	_CC2500_ReadStatus
  1877                           
  1878                           ;CC2500_B1.c: 67: if(s_data != 0)
  1879  02D4  0020               	movlb	0	; select bank0
  1880  02D5  083F               	movf	_s_data,w
  1881  02D6  1903               	btfsc	3,2
  1882  02D7  2B13               	goto	l2783
  1883                           
  1884                           ;CC2500_B1.c: 69: {
  1885                           ;CC2500_B1.c: 70: RB5=0;
  1886  02D8  128D               	bcf	13,5	;volatile
  1887                           
  1888                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  1889  02D9  30FF               	movlw	255
  1890  02DA  00D8               	movwf	??_CC2500_RxData
  1891  02DB  0858               	movf	??_CC2500_RxData,w
  1892  02DC  00BB               	movwf	_SPI0Buffer
  1893  02DD                     l286:	
  1894                           ;CC2500_B1.c: 72: while(RB3==1);
  1895                           
  1896  02DD  198D               	btfsc	13,3	;volatile
  1897  02DE  2ADD               	goto	l286
  1898                           
  1899                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  1900  02DF  3185  2579  3182   	fcall	_CC2500_WriteByte
  1901                           
  1902                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  1903  02E2  3184  24F6  3182   	fcall	_CC2500_ReadByte
  1904                           
  1905                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  1906  02E5  0020               	movlb	0	; select bank0
  1907  02E6  083B               	movf	_SPI0Buffer,w
  1908  02E7  00D8               	movwf	??_CC2500_RxData
  1909  02E8  0858               	movf	??_CC2500_RxData,w
  1910  02E9  00BA               	movwf	_Rx_Length
  1911                           
  1912                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  1913  02EA  01D9               	clrf	CC2500_RxData@loop_f
  1914  02EB                     l2769:	
  1915  02EB  083A               	movf	_Rx_Length,w
  1916  02EC  0259               	subwf	CC2500_RxData@loop_f,w
  1917  02ED  1803               	btfsc	3,0
  1918  02EE  2B00               	goto	l2771
  1919                           
  1920                           ;CC2500_B1.c: 78: {
  1921                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  1922  02EF  3184  24F6  3182   	fcall	_CC2500_ReadByte
  1923                           
  1924                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  1925  02F2  0020               	movlb	0	; select bank0
  1926  02F3  083B               	movf	_SPI0Buffer,w
  1927  02F4  00D8               	movwf	??_CC2500_RxData
  1928  02F5  0859               	movf	CC2500_RxData@loop_f,w
  1929  02F6  3E20               	addlw	_RF_Data& (0+255)
  1930  02F7  0086               	movwf	6
  1931  02F8  0187               	clrf	7
  1932  02F9  0858               	movf	??_CC2500_RxData,w
  1933  02FA  0081               	movwf	1
  1934  02FB  3001               	movlw	1
  1935  02FC  00D8               	movwf	??_CC2500_RxData
  1936  02FD  0858               	movf	??_CC2500_RxData,w
  1937  02FE  07D9               	addwf	CC2500_RxData@loop_f,f
  1938  02FF  2AEB               	goto	l2769
  1939  0300                     l2771:	
  1940                           
  1941                           ;CC2500_B1.c: 81: }
  1942                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  1943  0300  3184  24F6  3182   	fcall	_CC2500_ReadByte
  1944                           
  1945                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  1946  0303  0020               	movlb	0	; select bank0
  1947  0304  083B               	movf	_SPI0Buffer,w
  1948  0305  00D8               	movwf	??_CC2500_RxData
  1949  0306  0858               	movf	??_CC2500_RxData,w
  1950  0307  00B9               	movwf	_RSSI
  1951                           
  1952                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  1953  0308  3184  24F6  3182   	fcall	_CC2500_ReadByte
  1954                           
  1955                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  1956  030B  0020               	movlb	0	; select bank0
  1957  030C  083B               	movf	_SPI0Buffer,w
  1958  030D  00D8               	movwf	??_CC2500_RxData
  1959  030E  0858               	movf	??_CC2500_RxData,w
  1960  030F  00B7               	movwf	_CRC
  1961                           
  1962                           ;CC2500_B1.c: 86: RB5=1;
  1963  0310  168D               	bsf	13,5	;volatile
  1964                           
  1965                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  1966  0311  1BB7               	btfsc	_CRC,7
  1967                           
  1968                           ;CC2500_B1.c: 88: Receive_OK=1;
  1969  0312  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  1970  0313                     l2783:	
  1971                           
  1972                           ;CC2500_B1.c: 89: }
  1973                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  1974  0313  3036               	movlw	54
  1975  0314  3185  25DC  3182   	fcall	_CC2500_WriteCommand
  1976                           
  1977                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  1978  0317  303A               	movlw	58
  1979  0318  3185  25DC  3182   	fcall	_CC2500_WriteCommand
  1980                           
  1981                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  1982  031B  0020               	movlb	0	; select bank0
  1983  031C  01D6               	clrf	setRF_RxStatus@command
  1984  031D  3001               	movlw	1
  1985  031E  3185  25CE         	fcall	_setRF_RxStatus
  1986  0320  0008               	return
  1987  0321                     __end_of_CC2500_RxData:	
  1988                           
  1989                           	psect	text5
  1990  05CE                     __ptext5:	
  1991 ;; *************** function _setRF_RxStatus *****************
  1992 ;; Defined at:
  1993 ;;		line 43 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  rf              1    wreg     unsigned char 
  1996 ;;  command         1    2[BANK0 ] unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  rf              1    3[BANK0 ] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;		None               void
  2001 ;; Registers used:
  2002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2008 ;;      Params:         0       1       0       0       0       0       0       0
  2009 ;;      Locals:         0       1       0       0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0
  2011 ;;      Totals:         0       2       0       0       0       0       0       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    5
  2015 ;; This function calls:
  2016 ;;		_RfPointSelect
  2017 ;; This function is called by:
  2018 ;;		_CC2500_RxData
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _setRF_RxStatus
  2024  05CE                     _setRF_RxStatus:	
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2028                           ;setRF_RxStatus@rf stored from wreg
  2029  05CE  0020               	movlb	0	; select bank0
  2030  05CF  00D7               	movwf	setRF_RxStatus@rf
  2031                           
  2032                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  2033  05D0  0857               	movf	setRF_RxStatus@rf,w
  2034  05D1  3186  260E         	fcall	_RfPointSelect
  2035                           
  2036                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  2037  05D3  0876               	movf	_RF,w
  2038  05D4  0086               	movwf	6
  2039  05D5  0187               	clrf	7
  2040  05D6  0020               	movlb	0	; select bank0
  2041  05D7  0856               	movf	setRF_RxStatus@command,w
  2042  05D8  1181               	bcf	1,3
  2043  05D9  1D03               	skipz
  2044  05DA  1581               	bsf	1,3
  2045  05DB  0008               	return
  2046  05DC                     __end_of_setRF_RxStatus:	
  2047                           
  2048                           	psect	text6
  2049  050D                     __ptext6:	
  2050 ;; *************** function _CC2500_ReadStatus *****************
  2051 ;; Defined at:
  2052 ;;		line 267 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  status_addr     1    wreg     unsigned char 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  status_addr     1    3[BANK0 ] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;		None               void
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2066 ;;      Params:         0       0       0       0       0       0       0       0
  2067 ;;      Locals:         0       1       0       0       0       0       0       0
  2068 ;;      Temps:          0       1       0       0       0       0       0       0
  2069 ;;      Totals:         0       2       0       0       0       0       0       0
  2070 ;;Total ram usage:        2 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    5
  2073 ;; This function calls:
  2074 ;;		_CC2500_ReadByte
  2075 ;;		_CC2500_WriteByte
  2076 ;; This function is called by:
  2077 ;;		_CC2500_RxData
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _CC2500_ReadStatus
  2083  050D                     _CC2500_ReadStatus:	
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  2087                           ;CC2500_ReadStatus@status_addr stored from wreg
  2088  050D  0020               	movlb	0	; select bank0
  2089  050E  00D7               	movwf	CC2500_ReadStatus@status_addr
  2090                           
  2091                           ;CC2500_B1.c: 269: RB5=0;
  2092  050F  128D               	bcf	13,5	;volatile
  2093                           
  2094                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  2095  0510  0857               	movf	CC2500_ReadStatus@status_addr,w
  2096  0511  3EC0               	addlw	192
  2097  0512  00D6               	movwf	??_CC2500_ReadStatus
  2098  0513  0856               	movf	??_CC2500_ReadStatus,w
  2099  0514  00BB               	movwf	_SPI0Buffer
  2100  0515                     l362:	
  2101                           ;CC2500_B1.c: 272: while(RB3==1);
  2102                           
  2103  0515  198D               	btfsc	13,3	;volatile
  2104  0516  2D15               	goto	l362
  2105                           
  2106                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  2107  0517  3185  2579  3185   	fcall	_CC2500_WriteByte
  2108                           
  2109                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  2110  051A  3184  24F6         	fcall	_CC2500_ReadByte
  2111                           
  2112                           ;CC2500_B1.c: 276: RB5=1;
  2113  051C  0020               	movlb	0	; select bank0
  2114  051D  168D               	bsf	13,5	;volatile
  2115                           
  2116                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  2117  051E  083B               	movf	_SPI0Buffer,w
  2118  051F  00D6               	movwf	??_CC2500_ReadStatus
  2119  0520  0856               	movf	??_CC2500_ReadStatus,w
  2120  0521  00BF               	movwf	_s_data
  2121  0522  0008               	return
  2122  0523                     __end_of_CC2500_ReadStatus:	
  2123                           
  2124                           	psect	text7
  2125  04F6                     __ptext7:	
  2126 ;; *************** function _CC2500_ReadByte *****************
  2127 ;; Defined at:
  2128 ;;		line 210 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  loop_b          1    1[BANK0 ] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2142 ;;      Params:         0       0       0       0       0       0       0       0
  2143 ;;      Locals:         0       1       0       0       0       0       0       0
  2144 ;;      Temps:          0       1       0       0       0       0       0       0
  2145 ;;      Totals:         0       2       0       0       0       0       0       0
  2146 ;;Total ram usage:        2 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    4
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_CC2500_RxData
  2153 ;;		_CC2500_ReadStatus
  2154 ;;		_CC2500_ReadREG
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _CC2500_ReadByte
  2160  04F6                     _CC2500_ReadByte:	
  2161                           
  2162                           ;CC2500_B1.c: 212: unsigned char loop_b;
  2163                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  2167  04F6  0020               	movlb	0	; select bank0
  2168  04F7  01D5               	clrf	CC2500_ReadByte@loop_b
  2169  04F8                     L1:	
  2170  04F8  3008               	movlw	8
  2171  04F9  0255               	subwf	CC2500_ReadByte@loop_b,w
  2172  04FA  1803               	btfsc	3,0
  2173  04FB  0008               	return
  2174                           
  2175                           ;CC2500_B1.c: 214: {
  2176                           ;CC2500_B1.c: 215: RB2=1;
  2177  04FC  150D               	bsf	13,2	;volatile
  2178                           
  2179                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  2180  04FD  1003               	clrc
  2181  04FE  0DBB               	rlf	_SPI0Buffer,f
  2182                           
  2183                           ;CC2500_B1.c: 217: if(RB3 == 1)
  2184  04FF  1D8D               	btfss	13,3	;volatile
  2185  0500  2D03               	goto	l2683
  2186                           
  2187                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  2188  0501  143B               	bsf	_SPI0Buffer,0
  2189  0502  2D07               	goto	l2685
  2190  0503                     l2683:	
  2191                           
  2192                           ;CC2500_B1.c: 219: else
  2193                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  2194  0503  30FE               	movlw	254
  2195  0504  00D4               	movwf	??_CC2500_ReadByte
  2196  0505  0854               	movf	??_CC2500_ReadByte,w
  2197  0506  05BB               	andwf	_SPI0Buffer,f
  2198  0507                     l2685:	
  2199                           
  2200                           ;CC2500_B1.c: 221: RB2=0;
  2201  0507  110D               	bcf	13,2	;volatile
  2202  0508  3001               	movlw	1
  2203  0509  00D4               	movwf	??_CC2500_ReadByte
  2204  050A  0854               	movf	??_CC2500_ReadByte,w
  2205  050B  07D5               	addwf	CC2500_ReadByte@loop_b,f
  2206  050C  2CF8               	goto	L1
  2207  050D                     __end_of_CC2500_ReadByte:	
  2208                           
  2209                           	psect	text8
  2210  0647                     __ptext8:	
  2211 ;; *************** function _RF_Initialization *****************
  2212 ;; Defined at:
  2213 ;;		line 17 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;		None               void
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2227 ;;      Params:         0       0       0       0       0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0
  2230 ;;      Totals:         0       0       0       0       0       0       0       0
  2231 ;;Total ram usage:        0 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    5
  2234 ;; This function calls:
  2235 ;;		_setRF_Initialization
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _RF_Initialization
  2243  0647                     _RF_Initialization:	
  2244                           
  2245                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  2246                           
  2247                           ;incstack = 0
  2248                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  2249  0647  3001               	movlw	1
  2250  0648  3186  2638         	fcall	_setRF_Initialization
  2251  064A  0008               	return
  2252  064B                     __end_of_RF_Initialization:	
  2253                           
  2254                           	psect	text9
  2255  0638                     __ptext9:	
  2256 ;; *************** function _setRF_Initialization *****************
  2257 ;; Defined at:
  2258 ;;		line 50 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  rf              1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  rf              1    0[COMMON] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;		None               void
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2272 ;;      Params:         0       0       0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0
  2274 ;;      Temps:          0       1       0       0       0       0       0       0
  2275 ;;      Totals:         0       1       0       0       0       0       0       0
  2276 ;;Total ram usage:        1 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    4
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_RF_Initialization
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _setRF_Initialization
  2288  0638                     _setRF_Initialization:	
  2289                           
  2290                           ;RF_Control_B1.c: 54: Tx_Length=21;
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _setRF_Initialization: [wreg]
  2294  0638  3015               	movlw	21
  2295  0639  0020               	movlb	0	; select bank0
  2296  063A  00D4               	movwf	??_setRF_Initialization
  2297  063B  0854               	movf	??_setRF_Initialization,w
  2298  063C  00BC               	movwf	_Tx_Length
  2299  063D  0008               	return
  2300  063E                     __end_of_setRF_Initialization:	
  2301                           
  2302                           	psect	text10
  2303  058D                     __ptext10:	
  2304 ;; *************** function _Mcu_Initial *****************
  2305 ;; Defined at:
  2306 ;;		line 11 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;		None               void
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2320 ;;      Params:         0       0       0       0       0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0       0       0       0
  2323 ;;      Totals:         0       0       0       0       0       0       0       0
  2324 ;;Total ram usage:        0 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    5
  2327 ;; This function calls:
  2328 ;;		_I2C_Set
  2329 ;;		_INT_Set
  2330 ;;		_IO_Set
  2331 ;;		_TMR1_Set
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _Mcu_Initial
  2339  058D                     _Mcu_Initial:	
  2340                           
  2341                           ;MCU_16f1516_B1.c: 14: OSCCON=0x78; ;;
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _Mcu_Initial: [wreg+status,2+status,0+pclath+cstack]
  2345  058D  3078               	movlw	120
  2346  058E  0021               	movlb	1	; select bank1
  2347  058F  0099               	movwf	25	;volatile
  2348                           
  2349                           ;MCU_16f1516_B1.c: 16: IO_Set();
  2350  0590  3185  254F  3185   	fcall	_IO_Set
  2351                           
  2352                           ;MCU_16f1516_B1.c: 18: __nop();
  2353  0593  0000               	nop
  2354                           
  2355                           ;MCU_16f1516_B1.c: 20: TMR1_Set();
  2356  0594  3185  259F  3185   	fcall	_TMR1_Set
  2357                           
  2358                           ;MCU_16f1516_B1.c: 22: __nop();
  2359  0597  0000               	nop
  2360                           
  2361                           ;MCU_16f1516_B1.c: 26: INT_Set();
  2362  0598  3186  263E  3185   	fcall	_INT_Set
  2363                           
  2364                           ;MCU_16f1516_B1.c: 28: __nop();
  2365  059B  0000               	nop
  2366                           
  2367                           ;MCU_16f1516_B1.c: 30: I2C_Set();
  2368  059C  3185  2523         	fcall	_I2C_Set
  2369  059E  0008               	return
  2370  059F                     __end_of_Mcu_Initial:	
  2371                           
  2372                           	psect	text11
  2373  059F                     __ptext11:	
  2374 ;; *************** function _TMR1_Set *****************
  2375 ;; Defined at:
  2376 ;;		line 114 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;		None
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;		None               void
  2383 ;; Registers used:
  2384 ;;		wreg
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2390 ;;      Params:         0       0       0       0       0       0       0       0
  2391 ;;      Locals:         0       0       0       0       0       0       0       0
  2392 ;;      Temps:          0       1       0       0       0       0       0       0
  2393 ;;      Totals:         0       1       0       0       0       0       0       0
  2394 ;;Total ram usage:        1 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    4
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_Mcu_Initial
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function _TMR1_Set
  2406  059F                     _TMR1_Set:	
  2407                           
  2408                           ;MCU_16f1516_B1.c: 116: Timer1=&VarTimer1;
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _TMR1_Set: [wreg]
  2412  059F  304F               	movlw	_VarTimer1& (0+255)
  2413  05A0  0020               	movlb	0	; select bank0
  2414  05A1  00D4               	movwf	??_TMR1_Set
  2415  05A2  0854               	movf	??_TMR1_Set,w
  2416  05A3  00F8               	movwf	_Timer1
  2417                           
  2418                           ;MCU_16f1516_B1.c: 117: T1CON=(0x40 | 0x00 | 0x01);
  2419  05A4  3041               	movlw	65
  2420  05A5  0098               	movwf	24	;volatile
  2421                           
  2422                           ;MCU_16f1516_B1.c: 118: TMR1H=((65536-700)/256);
  2423  05A6  30FD               	movlw	253
  2424  05A7  0097               	movwf	23	;volatile
  2425                           
  2426                           ;MCU_16f1516_B1.c: 119: TMR1L=((65536-700)%256);
  2427  05A8  3044               	movlw	68
  2428  05A9  0096               	movwf	22	;volatile
  2429                           
  2430                           ;MCU_16f1516_B1.c: 120: TMR1IE=1;
  2431  05AA  0021               	movlb	1	; select bank1
  2432  05AB  1411               	bsf	17,0	;volatile
  2433                           
  2434                           ;MCU_16f1516_B1.c: 121: PEIE=1;
  2435  05AC  170B               	bsf	11,6	;volatile
  2436                           
  2437                           ;MCU_16f1516_B1.c: 122: GIE=1;
  2438  05AD  178B               	bsf	11,7	;volatile
  2439  05AE  0008               	return
  2440  05AF                     __end_of_TMR1_Set:	
  2441                           
  2442                           	psect	text12
  2443  054F                     __ptext12:	
  2444 ;; *************** function _IO_Set *****************
  2445 ;; Defined at:
  2446 ;;		line 37 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;		None               void
  2453 ;; Registers used:
  2454 ;;		wreg, status,2
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2460 ;;      Params:         0       0       0       0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    4
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_Mcu_Initial
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           
  2475                           ;psect for function _IO_Set
  2476  054F                     _IO_Set:	
  2477                           
  2478                           ;MCU_16f1516_B1.c: 39: TRISA=0b00000000;;
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _IO_Set: [wreg+status,2]
  2482  054F  0021               	movlb	1	; select bank1
  2483  0550  018C               	clrf	12	;volatile
  2484                           
  2485                           ;MCU_16f1516_B1.c: 40: TRISB=0b00011001;;
  2486  0551  3019               	movlw	25
  2487  0552  008D               	movwf	13	;volatile
  2488                           
  2489                           ;MCU_16f1516_B1.c: 41: TRISC=0b00011000;;
  2490  0553  3018               	movlw	24
  2491  0554  008E               	movwf	14	;volatile
  2492                           
  2493                           ;MCU_16f1516_B1.c: 42: LATA=0b00000000;;
  2494  0555  0022               	movlb	2	; select bank2
  2495  0556  018C               	clrf	12	;volatile
  2496                           
  2497                           ;MCU_16f1516_B1.c: 43: LATB=0b00000000;;
  2498  0557  018D               	clrf	13	;volatile
  2499                           
  2500                           ;MCU_16f1516_B1.c: 44: LATC=0b00000000;;
  2501  0558  018E               	clrf	14	;volatile
  2502                           
  2503                           ;MCU_16f1516_B1.c: 45: ANSELA=0b00000000;;
  2504  0559  0023               	movlb	3	; select bank3
  2505  055A  018C               	clrf	12	;volatile
  2506                           
  2507                           ;MCU_16f1516_B1.c: 46: ANSELB=0b00000000;;
  2508  055B  018D               	clrf	13	;volatile
  2509                           
  2510                           ;MCU_16f1516_B1.c: 47: ANSELC=0b00000000;;
  2511  055C  018E               	clrf	14	;volatile
  2512                           
  2513                           ;MCU_16f1516_B1.c: 48: PORTA=0b00000000;;
  2514  055D  0020               	movlb	0	; select bank0
  2515  055E  018C               	clrf	12	;volatile
  2516                           
  2517                           ;MCU_16f1516_B1.c: 49: PORTB=0b00011001;;
  2518  055F  3019               	movlw	25
  2519  0560  008D               	movwf	13	;volatile
  2520                           
  2521                           ;MCU_16f1516_B1.c: 50: PORTC=0b00011000;;
  2522  0561  3018               	movlw	24
  2523  0562  008E               	movwf	14	;volatile
  2524  0563  0008               	return
  2525  0564                     __end_of_IO_Set:	
  2526                           
  2527                           	psect	text13
  2528  063E                     __ptext13:	
  2529 ;; *************** function _INT_Set *****************
  2530 ;; Defined at:
  2531 ;;		line 148 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;		None               void
  2538 ;; Registers used:
  2539 ;;		None
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2545 ;;      Params:         0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    4
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_Mcu_Initial
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function _INT_Set
  2561  063E                     _INT_Set:	
  2562                           
  2563                           ;MCU_16f1516_B1.c: 150: WPUB0=0;
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _INT_Set: []
  2567  063E  0024               	movlb	4	; select bank4
  2568  063F  100D               	bcf	13,0	;volatile
  2569                           
  2570                           ;MCU_16f1516_B1.c: 152: PEIE=1;
  2571  0640  170B               	bsf	11,6	;volatile
  2572                           
  2573                           ;MCU_16f1516_B1.c: 153: GIE=1;
  2574  0641  178B               	bsf	11,7	;volatile
  2575  0642  0008               	return
  2576  0643                     __end_of_INT_Set:	
  2577                           
  2578                           	psect	text14
  2579  0523                     __ptext14:	
  2580 ;; *************** function _I2C_Set *****************
  2581 ;; Defined at:
  2582 ;;		line 233 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;		None               void
  2589 ;; Registers used:
  2590 ;;		wreg
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2596 ;;      Params:         0       0       0       0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0
  2598 ;;      Temps:          0       1       0       0       0       0       0       0
  2599 ;;      Totals:         0       1       0       0       0       0       0       0
  2600 ;;Total ram usage:        1 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    4
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_Mcu_Initial
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function _I2C_Set
  2612  0523                     _I2C_Set:	
  2613                           
  2614                           ;MCU_16f1516_B1.c: 235: I2C=&VarI2C;
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _I2C_Set: [wreg]
  2618  0523  3020               	movlw	_VarI2C& (0+255)
  2619  0524  0020               	movlb	0	; select bank0
  2620  0525  00D4               	movwf	??_I2C_Set
  2621  0526  0854               	movf	??_I2C_Set,w
  2622  0527  00B8               	movwf	_I2C
  2623                           
  2624                           ;MCU_16f1516_B1.c: 245: SSPADD=0x10;
  2625  0528  3010               	movlw	16
  2626  0529  0024               	movlb	4	; select bank4
  2627  052A  0092               	movwf	18	;volatile
  2628                           
  2629                           ;MCU_16f1516_B1.c: 247: SSPSTAT = 0x80;
  2630  052B  3080               	movlw	128
  2631  052C  0094               	movwf	20	;volatile
  2632                           
  2633                           ;MCU_16f1516_B1.c: 248: SSPCON2 = 0x80;
  2634  052D  3080               	movlw	128
  2635  052E  0096               	movwf	22	;volatile
  2636                           
  2637                           ;MCU_16f1516_B1.c: 249: SSPCON1=0b100110;
  2638  052F  3026               	movlw	38
  2639  0530  0095               	movwf	21	;volatile
  2640                           
  2641                           ;MCU_16f1516_B1.c: 251: SEN=1;
  2642  0531  1416               	bsf	22,0	;volatile
  2643                           
  2644                           ;MCU_16f1516_B1.c: 252: AHEN=0;
  2645  0532  1097               	bcf	23,1	;volatile
  2646                           
  2647                           ;MCU_16f1516_B1.c: 253: DHEN=0;
  2648  0533  1017               	bcf	23,0	;volatile
  2649                           
  2650                           ;MCU_16f1516_B1.c: 254: SSPIE=1;
  2651  0534  0021               	movlb	1	; select bank1
  2652  0535  1591               	bsf	17,3	;volatile
  2653                           
  2654                           ;MCU_16f1516_B1.c: 255: PEIE=1;
  2655  0536  170B               	bsf	11,6	;volatile
  2656                           
  2657                           ;MCU_16f1516_B1.c: 256: GIE=1;
  2658  0537  178B               	bsf	11,7	;volatile
  2659  0538  0008               	return
  2660  0539                     __end_of_I2C_Set:	
  2661                           
  2662                           	psect	text15
  2663  05BF                     __ptext15:	
  2664 ;; *************** function _MainT_Initial *****************
  2665 ;; Defined at:
  2666 ;;		line 33 in file "I:\Program\PIC\Source_File\myMain.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;		None               void
  2673 ;; Registers used:
  2674 ;;		wreg, fsr1l, fsr1h
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2680 ;;      Params:         0       0       0       0       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0
  2682 ;;      Temps:          0       1       0       0       0       0       0       0
  2683 ;;      Totals:         0       1       0       0       0       0       0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    4
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _MainT_Initial
  2696  05BF                     _MainT_Initial:	
  2697                           
  2698                           ;myMain.c: 35: TMain=&VarTMain;
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _MainT_Initial: [wregfsr1]
  2702  05BF  3040               	movlw	_VarTMain& (0+255)
  2703  05C0  0020               	movlb	0	; select bank0
  2704  05C1  00D4               	movwf	??_MainT_Initial
  2705  05C2  0854               	movf	??_MainT_Initial,w
  2706  05C3  00DD               	movwf	_TMain
  2707                           
  2708                           ;myMain.c: 36: TMain->FirstOpen=1;
  2709  05C4  085D               	movf	_TMain,w
  2710  05C5  3E0D               	addlw	13
  2711  05C6  0086               	movwf	6
  2712  05C7  0187               	clrf	7
  2713  05C8  1401               	bsf	1,0
  2714                           
  2715                           ;myMain.c: 37: Product=&VarProduct;
  2716  05C9  30A0               	movlw	_VarProduct& (0+255)
  2717  05CA  00D4               	movwf	??_MainT_Initial
  2718  05CB  0854               	movf	??_MainT_Initial,w
  2719  05CC  00F9               	movwf	_Product
  2720  05CD  0008               	return
  2721  05CE                     __end_of_MainT_Initial:	
  2722                           
  2723                           	psect	text16
  2724  0114                     __ptext16:	
  2725 ;; *************** function _MainT *****************
  2726 ;; Defined at:
  2727 ;;		line 41 in file "I:\Program\PIC\Source_File\myMain.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  i               1    0        unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2741 ;;      Params:         0       0       0       0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0
  2743 ;;      Temps:          0       1       0       0       0       0       0       0
  2744 ;;      Totals:         0       1       0       0       0       0       0       0
  2745 ;;Total ram usage:        1 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    8
  2748 ;; This function calls:
  2749 ;;		_setRF_Enable
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function _MainT
  2757  0114                     _MainT:	
  2758                           
  2759                           ;myMain.c: 43: char i;
  2760                           ;myMain.c: 45: if(!TMain->PowerON)
  2761                           
  2762                           ;incstack = 0
  2763                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2764  0114  0020               	movlb	0	; select bank0
  2765  0115  085D               	movf	_TMain,w
  2766  0116  0086               	movwf	6
  2767  0117  0187               	clrf	7
  2768  0118  1801               	btfsc	1,0
  2769  0119  293D               	goto	l3089
  2770                           
  2771                           ;myMain.c: 46: {
  2772                           ;myMain.c: 47: TMain->PowerCount++;
  2773  011A  0A5D               	incf	_TMain,w
  2774  011B  0086               	movwf	6
  2775  011C  0187               	clrf	7
  2776  011D  3001               	movlw	1
  2777  011E  0781               	addwf	1,f
  2778  011F  3141               	addfsr 1,1
  2779  0120  1803               	skipnc
  2780  0121  0A81               	incf	1,f
  2781                           
  2782                           ;myMain.c: 48: if(TMain->PowerCount == 1500)
  2783  0122  0A5D               	incf	_TMain,w
  2784  0123  0086               	movwf	6
  2785  0124  0187               	clrf	7
  2786  0125  3F40               	moviw [0]fsr1
  2787  0126  3ADC               	xorlw	220
  2788  0127  1D03               	skipz
  2789  0128  292B               	goto	u3035
  2790  0129  3F41               	moviw [1]fsr1
  2791  012A  3A05               	xorlw	5
  2792  012B                     u3035:	
  2793  012B  1D03               	skipz
  2794  012C  0008               	return
  2795                           
  2796                           ;myMain.c: 49: {
  2797                           ;myMain.c: 50: TMain->PowerCount=0;
  2798  012D  0A5D               	incf	_TMain,w
  2799  012E  0086               	movwf	6
  2800  012F  0187               	clrf	7
  2801  0130  3000               	movlw	0
  2802  0131  3FC0               	movwi [0]fsr1
  2803  0132  3FC1               	movwi [1]fsr1
  2804                           
  2805                           ;myMain.c: 51: TMain->PowerON=1;
  2806  0133  085D               	movf	_TMain,w
  2807  0134  0086               	movwf	6
  2808  0135  0187               	clrf	7
  2809  0136  1401               	bsf	1,0
  2810                           
  2811                           ;myMain.c: 54: setRF_Enable(1,1);
  2812  0137  01D9               	clrf	setRF_Enable@command
  2813  0138  0AD9               	incf	setRF_Enable@command,f
  2814  0139  3001               	movlw	1
  2815  013A  3184  2493         	fcall	_setRF_Enable
  2816                           
  2817                           ;myMain.c: 56: }
  2818                           ;myMain.c: 57: }
  2819  013C  0008               	return
  2820  013D                     l3089:	
  2821                           
  2822                           ;myMain.c: 58: else
  2823                           ;myMain.c: 59: {
  2824                           ;myMain.c: 60: TMain->Count1++;
  2825  013D  0020               	movlb	0	; select bank0
  2826  013E  085D               	movf	_TMain,w
  2827  013F  3E05               	addlw	5
  2828  0140  0086               	movwf	6
  2829  0141  0187               	clrf	7
  2830  0142  3001               	movlw	1
  2831  0143  0781               	addwf	1,f
  2832  0144  3141               	addfsr 1,1
  2833  0145  1803               	skipnc
  2834  0146  0A81               	incf	1,f
  2835                           
  2836                           ;myMain.c: 61: if(TMain->Count1 == 1000)
  2837  0147  085D               	movf	_TMain,w
  2838  0148  3E05               	addlw	5
  2839  0149  0086               	movwf	6
  2840  014A  0187               	clrf	7
  2841  014B  3F40               	moviw [0]fsr1
  2842  014C  3AE8               	xorlw	232
  2843  014D  1D03               	skipz
  2844  014E  2951               	goto	u3045
  2845  014F  3F41               	moviw [1]fsr1
  2846  0150  3A03               	xorlw	3
  2847  0151                     u3045:	
  2848  0151  1D03               	skipz
  2849  0152  0008               	return
  2850                           
  2851                           ;myMain.c: 62: {
  2852                           ;myMain.c: 63: TMain->Count1=0;
  2853  0153  085D               	movf	_TMain,w
  2854  0154  3E05               	addlw	5
  2855  0155  0086               	movwf	6
  2856  0156  0187               	clrf	7
  2857  0157  3000               	movlw	0
  2858  0158  3FC0               	movwi [0]fsr1
  2859  0159  3FC1               	movwi [1]fsr1
  2860                           
  2861                           ;myMain.c: 64: RA0=~RA0;
  2862  015A  3001               	movlw	1
  2863  015B  068C               	xorwf	12,f
  2864                           
  2865                           ;myMain.c: 82: }
  2866                           ;myMain.c: 84: if(TMain->Test)
  2867                           
  2868                           ;myMain.c: 79: {
  2869  015C  085D               	movf	_TMain,w
  2870  015D  3E0C               	addlw	12
  2871  015E  0086               	movwf	6
  2872  015F  0187               	clrf	7
  2873  0160  0801               	movf	1,w
  2874  0161  3A00               	xorlw	0
  2875  0162  1903               	skipnz
  2876  0163  0008               	return
  2877                           
  2878                           ;myMain.c: 85: {
  2879                           ;myMain.c: 86: ;;
  2880                           ;myMain.c: 87: I2C->Count++;
  2881  0164  3001               	movlw	1
  2882  0165  00DB               	movwf	??_MainT
  2883  0166  0838               	movf	_I2C,w
  2884  0167  3E40               	addlw	64
  2885  0168  0086               	movwf	6
  2886  0169  3001               	movlw	1	; select bank2/3
  2887  016A  0087               	movwf	7
  2888  016B  085B               	movf	??_MainT,w
  2889  016C  0781               	addwf	1,f
  2890                           
  2891                           ;myMain.c: 88: if(I2C->Count==32)
  2892  016D  0838               	movf	_I2C,w
  2893  016E  3E40               	addlw	64
  2894  016F  0086               	movwf	6
  2895  0170  3001               	movlw	1	; select bank2/3
  2896  0171  0087               	movwf	7
  2897  0172  0801               	movf	1,w
  2898  0173  3A20               	xorlw	32
  2899  0174  1D03               	skipz
  2900  0175  0008               	return
  2901                           
  2902                           ;myMain.c: 89: {
  2903                           ;myMain.c: 90: I2C->Count=0;
  2904  0176  0838               	movf	_I2C,w
  2905  0177  3E40               	addlw	64
  2906  0178  0086               	movwf	6
  2907  0179  3001               	movlw	1	; select bank2/3
  2908  017A  0087               	movwf	7
  2909  017B  0181               	clrf	1
  2910  017C  0008               	return
  2911  017D                     __end_of_MainT:	
  2912                           
  2913                           	psect	text17
  2914  0493                     __ptext17:	
  2915 ;; *************** function _setRF_Enable *****************
  2916 ;; Defined at:
  2917 ;;		line 173 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  rf              1    wreg     unsigned char 
  2920 ;;  command         1    5[BANK0 ] unsigned char 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  rf              1    6[BANK0 ] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;		None               void
  2925 ;; Registers used:
  2926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2932 ;;      Params:         0       1       0       0       0       0       0       0
  2933 ;;      Locals:         0       1       0       0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0
  2935 ;;      Totals:         0       2       0       0       0       0       0       0
  2936 ;;Total ram usage:        2 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    7
  2939 ;; This function calls:
  2940 ;;		_CC2500_WriteCommand
  2941 ;;		_RF_RxDisable
  2942 ;;		_RfPointSelect
  2943 ;; This function is called by:
  2944 ;;		_MainT
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _setRF_Enable
  2950  0493                     _setRF_Enable:	
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2954                           ;setRF_Enable@rf stored from wreg
  2955  0493  0020               	movlb	0	; select bank0
  2956  0494  00DA               	movwf	setRF_Enable@rf
  2957                           
  2958                           ;RF_Control_B1.c: 175: RfPointSelect(rf);
  2959  0495  085A               	movf	setRF_Enable@rf,w
  2960  0496  3186  260E  3184   	fcall	_RfPointSelect
  2961                           
  2962                           ;RF_Control_B1.c: 176: if(command)
  2963  0499  0020               	movlb	0	; select bank0
  2964  049A  0859               	movf	setRF_Enable@command,w
  2965  049B  1903               	btfsc	3,2
  2966  049C  2CA2               	goto	l2871
  2967                           
  2968                           ;RF_Control_B1.c: 177: {
  2969                           ;RF_Control_B1.c: 178: RF->Enable=1;
  2970  049D  0876               	movf	_RF,w
  2971  049E  0086               	movwf	6
  2972  049F  0187               	clrf	7
  2973  04A0  1401               	bsf	1,0
  2974                           
  2975                           ;RF_Control_B1.c: 179: }
  2976  04A1  0008               	return
  2977  04A2                     l2871:	
  2978                           
  2979                           ;RF_Control_B1.c: 180: else
  2980                           ;RF_Control_B1.c: 181: {
  2981                           ;RF_Control_B1.c: 182: RF->Enable=0;
  2982  04A2  0876               	movf	_RF,w
  2983  04A3  0086               	movwf	6
  2984  04A4  0187               	clrf	7
  2985  04A5  1001               	bcf	1,0
  2986                           
  2987                           ;RF_Control_B1.c: 183: RF->Learn=0;
  2988  04A6  0876               	movf	_RF,w
  2989  04A7  0086               	movwf	6
  2990  04A8  0187               	clrf	7
  2991  04A9  1301               	bcf	1,6
  2992                           
  2993                           ;RF_Control_B1.c: 184: Transceive_GO=0;
  2994  04AA  1270               	bcf	_Transceive_GO/(0+8),_Transceive_GO& (0+7)
  2995                           
  2996                           ;RF_Control_B1.c: 185: CC2500_WriteCommand(0x36);
  2997  04AB  3036               	movlw	54
  2998  04AC  3185  25DC  3184   	fcall	_CC2500_WriteCommand
  2999                           
  3000                           ;RF_Control_B1.c: 186: CC2500_WriteCommand(0x3B);
  3001  04AF  303B               	movlw	59
  3002  04B0  3185  25DC  3184   	fcall	_CC2500_WriteCommand
  3003                           
  3004                           ;RF_Control_B1.c: 187: RF_RxDisable(1);
  3005  04B3  3001               	movlw	1
  3006  04B4  3183  23C8         	fcall	_RF_RxDisable
  3007  04B6  0008               	return
  3008  04B7                     __end_of_setRF_Enable:	
  3009                           
  3010                           	psect	text18
  3011  03C8                     __ptext18:	
  3012 ;; *************** function _RF_RxDisable *****************
  3013 ;; Defined at:
  3014 ;;		line 191 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  rf              1    wreg     unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  rf              1    4[BANK0 ] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;		None               void
  3021 ;; Registers used:
  3022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3028 ;;      Params:         0       0       0       0       0       0       0       0
  3029 ;;      Locals:         0       1       0       0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0
  3031 ;;      Totals:         0       1       0       0       0       0       0       0
  3032 ;;Total ram usage:        1 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    6
  3035 ;; This function calls:
  3036 ;;		_CC2500_WriteCommand
  3037 ;;		_RfPointSelect
  3038 ;;		_setINT_GO
  3039 ;; This function is called by:
  3040 ;;		_setRF_Main
  3041 ;;		_setRF_Enable
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _RF_RxDisable
  3047  03C8                     _RF_RxDisable:	
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3051                           ;RF_RxDisable@rf stored from wreg
  3052  03C8  0020               	movlb	0	; select bank0
  3053  03C9  00D8               	movwf	RF_RxDisable@rf
  3054                           
  3055                           ;RF_Control_B1.c: 193: RfPointSelect(rf);
  3056  03CA  0858               	movf	RF_RxDisable@rf,w
  3057  03CB  3186  260E  3183   	fcall	_RfPointSelect
  3058                           
  3059                           ;RF_Control_B1.c: 194: if(RF->RxStatus || RF->ReceiveGO)
  3060  03CE  0876               	movf	_RF,w
  3061  03CF  0086               	movwf	6
  3062  03D0  0187               	clrf	7
  3063  03D1  1981               	btfsc	1,3
  3064  03D2  2BD8               	goto	l2817
  3065  03D3  0876               	movf	_RF,w
  3066  03D4  0086               	movwf	6
  3067  03D5  0187               	clrf	7
  3068  03D6  1C81               	btfss	1,1
  3069  03D7  0008               	return
  3070  03D8                     l2817:	
  3071                           
  3072                           ;RF_Control_B1.c: 195: {
  3073                           ;RF_Control_B1.c: 196: RF->RxStatus=0;
  3074  03D8  0876               	movf	_RF,w
  3075  03D9  0086               	movwf	6
  3076  03DA  0187               	clrf	7
  3077  03DB  1181               	bcf	1,3
  3078                           
  3079                           ;RF_Control_B1.c: 197: RF->ReceiveGO=0;
  3080  03DC  0876               	movf	_RF,w
  3081  03DD  0086               	movwf	6
  3082  03DE  0187               	clrf	7
  3083  03DF  1081               	bcf	1,1
  3084                           
  3085                           ;RF_Control_B1.c: 198: RF->DebounceTime=0;
  3086  03E0  0A76               	incf	_RF,w
  3087  03E1  0086               	movwf	6
  3088  03E2  0187               	clrf	7
  3089  03E3  0181               	clrf	1
  3090                           
  3091                           ;RF_Control_B1.c: 199: RF->Debounce=0;
  3092  03E4  0876               	movf	_RF,w
  3093  03E5  0086               	movwf	6
  3094  03E6  0187               	clrf	7
  3095  03E7  1281               	bcf	1,5
  3096                           
  3097                           ;RF_Control_B1.c: 200: CC2500_WriteCommand(0x36);
  3098  03E8  3036               	movlw	54
  3099  03E9  3185  25DC  3183   	fcall	_CC2500_WriteCommand
  3100                           
  3101                           ;RF_Control_B1.c: 201: CC2500_WriteCommand(0x3A);
  3102  03EC  303A               	movlw	58
  3103  03ED  3185  25DC  3183   	fcall	_CC2500_WriteCommand
  3104                           
  3105                           ;RF_Control_B1.c: 202: setINT_GO(0);
  3106  03F0  3000               	movlw	0
  3107  03F1  3186  2623         	fcall	_setINT_GO
  3108  03F3  0008               	return
  3109  03F4                     __end_of_RF_RxDisable:	
  3110                           
  3111                           	psect	text19
  3112  0623                     __ptext19:	
  3113 ;; *************** function _setINT_GO *****************
  3114 ;; Defined at:
  3115 ;;		line 166 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  command         1    wreg     unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  command         1    0[BANK0 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;		None               void
  3122 ;; Registers used:
  3123 ;;		wreg
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3129 ;;      Params:         0       0       0       0       0       0       0       0
  3130 ;;      Locals:         0       1       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0
  3132 ;;      Totals:         0       1       0       0       0       0       0       0
  3133 ;;Total ram usage:        1 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    4
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_setRF_Main
  3140 ;;		_RF_RxDisable
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _setINT_GO
  3146  0623                     _setINT_GO:	
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in _setINT_GO: [wreg]
  3150                           ;setINT_GO@command stored from wreg
  3151  0623  0020               	movlb	0	; select bank0
  3152  0624  00D4               	movwf	setINT_GO@command
  3153                           
  3154                           ;MCU_16f1516_B1.c: 168: INTF=0;
  3155  0625  108B               	bcf	11,1	;volatile
  3156                           
  3157                           ;MCU_16f1516_B1.c: 169: INTE=command;
  3158  0626  1C54               	btfss	setINT_GO@command,0
  3159  0627  2E2A               	goto	u2560
  3160  0628  160B               	bsf	11,4	;volatile
  3161  0629  0008               	return
  3162  062A                     u2560:	
  3163  062A  120B               	bcf	11,4	;volatile
  3164  062B  0008               	return
  3165  062C                     __end_of_setINT_GO:	
  3166                           
  3167                           	psect	text20
  3168  060E                     __ptext20:	
  3169 ;; *************** function _RfPointSelect *****************
  3170 ;; Defined at:
  3171 ;;		line 7 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  rf              1    wreg     unsigned char 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  rf              1    1[BANK0 ] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;		None               void
  3178 ;; Registers used:
  3179 ;;		wreg
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3185 ;;      Params:         0       0       0       0       0       0       0       0
  3186 ;;      Locals:         0       1       0       0       0       0       0       0
  3187 ;;      Temps:          0       1       0       0       0       0       0       0
  3188 ;;      Totals:         0       2       0       0       0       0       0       0
  3189 ;;Total ram usage:        2 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    4
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_setRF_RxStatus
  3196 ;;		_setRF_Main
  3197 ;;		_setRF_Enable
  3198 ;;		_RF_RxDisable
  3199 ;;		_setRF_Learn
  3200 ;;		_setTxData
  3201 ;;		_getRxData
  3202 ;;		_setLog_Code
  3203 ;;		_setControl_Lights_Table
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _RfPointSelect
  3209  060E                     _RfPointSelect:	
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _RfPointSelect: [wreg]
  3213                           ;RfPointSelect@rf stored from wreg
  3214  060E  0020               	movlb	0	; select bank0
  3215  060F  00D5               	movwf	RfPointSelect@rf
  3216                           
  3217                           ;RF_Control_B1.c: 10: if(rf == 1)
  3218  0610  0855               	movf	RfPointSelect@rf,w
  3219  0611  3A01               	xorlw	1
  3220  0612  1D03               	skipz
  3221  0613  0008               	return
  3222                           
  3223                           ;RF_Control_B1.c: 11: {
  3224                           ;RF_Control_B1.c: 12: RF=&RF1;
  3225  0614  3052               	movlw	_RF1& (0+255)
  3226  0615  00D4               	movwf	??_RfPointSelect
  3227  0616  0854               	movf	??_RfPointSelect,w
  3228  0617  00F6               	movwf	_RF
  3229  0618  0008               	return
  3230  0619                     __end_of_RfPointSelect:	
  3231                           
  3232                           	psect	text21
  3233  035E                     __ptext21:	
  3234 ;; *************** function _I2C_Main *****************
  3235 ;; Defined at:
  3236 ;;		line 275 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  i               1    0        unsigned char 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;		None               void
  3243 ;; Registers used:
  3244 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3250 ;;      Params:         0       0       0       0       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0
  3253 ;;      Totals:         0       0       0       0       0       0       0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    5
  3257 ;; This function calls:
  3258 ;;		_I2C_SetData
  3259 ;;		_I2C_Slave_Mode
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           
  3266                           ;psect for function _I2C_Main
  3267  035E                     _I2C_Main:	
  3268                           
  3269                           ;MCU_16f1516_B1.c: 277: char i;
  3270                           ;MCU_16f1516_B1.c: 279: if(I2C->SlaveGO)
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _I2C_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3274  035E  0020               	movlb	0	; select bank0
  3275  035F  0838               	movf	_I2C,w
  3276  0360  3E42               	addlw	66
  3277  0361  0086               	movwf	6
  3278  0362  3001               	movlw	1	; select bank2/3
  3279  0363  0087               	movwf	7
  3280  0364  1C01               	btfss	1,0
  3281  0365  0008               	return
  3282                           
  3283                           ;MCU_16f1516_B1.c: 280: {
  3284                           ;MCU_16f1516_B1.c: 281: I2C->SlaveGO=0;
  3285  0366  0838               	movf	_I2C,w
  3286  0367  3E42               	addlw	66
  3287  0368  0086               	movwf	6
  3288  0369  3001               	movlw	1	; select bank2/3
  3289  036A  0087               	movwf	7
  3290  036B  1001               	bcf	1,0
  3291                           
  3292                           ;MCU_16f1516_B1.c: 282: I2C_Slave_Mode();
  3293  036C  3182  2266  3183   	fcall	_I2C_Slave_Mode
  3294                           
  3295                           ;MCU_16f1516_B1.c: 283: SSPIE=1;
  3296  036F  0021               	movlb	1	; select bank1
  3297  0370  1591               	bsf	17,3	;volatile
  3298                           
  3299                           ;MCU_16f1516_B1.c: 285: if(I2C->SlaveTxGO)
  3300  0371  0020               	movlb	0	; select bank0
  3301  0372  0838               	movf	_I2C,w
  3302  0373  3E42               	addlw	66
  3303  0374  0086               	movwf	6
  3304  0375  3001               	movlw	1	; select bank2/3
  3305  0376  0087               	movwf	7
  3306  0377  1D01               	btfss	1,2
  3307  0378  2B86               	goto	l762
  3308                           
  3309                           ;MCU_16f1516_B1.c: 286: {
  3310                           ;MCU_16f1516_B1.c: 287: I2C->SlaveTxGO=0;
  3311  0379  0838               	movf	_I2C,w
  3312  037A  3E42               	addlw	66
  3313  037B  0086               	movwf	6
  3314  037C  3001               	movlw	1	; select bank2/3
  3315  037D  0087               	movwf	7
  3316  037E  1101               	bcf	1,2
  3317                           
  3318                           ;MCU_16f1516_B1.c: 288: RC0=0;
  3319  037F  100E               	bcf	14,0	;volatile
  3320                           
  3321                           ;MCU_16f1516_B1.c: 289: I2C->SS=0;
  3322  0380  0838               	movf	_I2C,w
  3323  0381  3E42               	addlw	66
  3324  0382  0086               	movwf	6
  3325  0383  3001               	movlw	1	; select bank2/3
  3326  0384  0087               	movwf	7
  3327  0385  1281               	bcf	1,5
  3328  0386                     l762:	
  3329                           
  3330                           ;MCU_16f1516_B1.c: 290: }
  3331                           ;MCU_16f1516_B1.c: 291: if(I2C->SlaveRxGO)
  3332  0386  0838               	movf	_I2C,w
  3333  0387  3E42               	addlw	66
  3334  0388  0086               	movwf	6
  3335  0389  3001               	movlw	1	; select bank2/3
  3336  038A  0087               	movwf	7
  3337  038B  1C81               	btfss	1,1
  3338  038C  2B96               	goto	l3127
  3339                           
  3340                           ;MCU_16f1516_B1.c: 292: {
  3341                           ;MCU_16f1516_B1.c: 293: I2C->SlaveRxGO=0;
  3342  038D  0838               	movf	_I2C,w
  3343  038E  3E42               	addlw	66
  3344  038F  0086               	movwf	6
  3345  0390  3001               	movlw	1	; select bank2/3
  3346  0391  0087               	movwf	7
  3347  0392  1081               	bcf	1,1
  3348                           
  3349                           ;MCU_16f1516_B1.c: 294: I2C_SetData(0);
  3350  0393  3000               	movlw	0
  3351  0394  3180  203D         	fcall	_I2C_SetData
  3352  0396                     l3127:	
  3353                           
  3354                           ;MCU_16f1516_B1.c: 295: }
  3355                           ;MCU_16f1516_B1.c: 296: RA1=~RA1;
  3356  0396  3002               	movlw	2
  3357  0397  0020               	movlb	0	; select bank0
  3358  0398  068C               	xorwf	12,f
  3359  0399  0008               	return
  3360  039A                     __end_of_I2C_Main:	
  3361                           
  3362                           	psect	text22
  3363  0266                     __ptext22:	
  3364 ;; *************** function _I2C_Slave_Mode *****************
  3365 ;; Defined at:
  3366 ;;		line 446 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  i               1    2[BANK0 ] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3380 ;;      Params:         0       0       0       0       0       0       0       0
  3381 ;;      Locals:         0       1       0       0       0       0       0       0
  3382 ;;      Temps:          0       2       0       0       0       0       0       0
  3383 ;;      Totals:         0       3       0       0       0       0       0       0
  3384 ;;Total ram usage:        3 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    4
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_I2C_Main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           
  3395                           ;psect for function _I2C_Slave_Mode
  3396  0266                     _I2C_Slave_Mode:	
  3397                           
  3398                           ;MCU_16f1516_B1.c: 448: char i;
  3399                           ;MCU_16f1516_B1.c: 449: SSPIF=0;
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in _I2C_Slave_Mode: [wreg+fsr1l+fsr1h+status,2+status,0]
  3403  0266  0020               	movlb	0	; select bank0
  3404  0267  1191               	bcf	17,3	;volatile
  3405                           
  3406                           ;MCU_16f1516_B1.c: 450: I2C->Address=SSPBUF;
  3407  0268  0024               	movlb	4	; select bank4
  3408  0269  0811               	movf	17,w	;volatile
  3409  026A  0020               	movlb	0	; select bank0
  3410  026B  00D4               	movwf	??_I2C_Slave_Mode
  3411  026C  0838               	movf	_I2C,w
  3412  026D  3E41               	addlw	65
  3413  026E  0086               	movwf	6
  3414  026F  3001               	movlw	1	; select bank2/3
  3415  0270  0087               	movwf	7
  3416  0271  0854               	movf	??_I2C_Slave_Mode,w
  3417  0272  0081               	movwf	1
  3418                           
  3419                           ;MCU_16f1516_B1.c: 452: if(R_nW)
  3420  0273  0024               	movlb	4	; select bank4
  3421  0274  1D14               	btfss	20,2	;volatile
  3422  0275  2AA3               	goto	l859
  3423                           
  3424                           ;MCU_16f1516_B1.c: 453: {
  3425                           ;MCU_16f1516_B1.c: 454: SSPOV=0;
  3426  0276  1315               	bcf	21,6	;volatile
  3427                           
  3428                           ;MCU_16f1516_B1.c: 455: for(i=0;i<32;i++)
  3429  0277  0020               	movlb	0	; select bank0
  3430  0278  01D6               	clrf	I2C_Slave_Mode@i
  3431  0279  3020               	movlw	32
  3432  027A  0256               	subwf	I2C_Slave_Mode@i,w
  3433  027B  1803               	btfsc	3,0
  3434  027C  2A99               	goto	l861
  3435  027D                     l3025:	
  3436                           
  3437                           ;MCU_16f1516_B1.c: 456: {
  3438                           ;MCU_16f1516_B1.c: 457: SSPBUF=I2C->BufferWriter[i];
  3439  027D  0856               	movf	I2C_Slave_Mode@i,w
  3440  027E  3E20               	addlw	32
  3441  027F  0738               	addwf	_I2C,w
  3442  0280  00D4               	movwf	??_I2C_Slave_Mode
  3443  0281  0854               	movf	??_I2C_Slave_Mode,w
  3444  0282  0086               	movwf	6
  3445  0283  3001               	movlw	1	; select bank2/3
  3446  0284  0087               	movwf	7
  3447  0285  0801               	movf	1,w
  3448  0286  0024               	movlb	4	; select bank4
  3449  0287  0091               	movwf	17	;volatile
  3450                           
  3451                           ;MCU_16f1516_B1.c: 459: CKP=1;
  3452  0288  1615               	bsf	21,4	;volatile
  3453  0289                     l862:	
  3454                           ;MCU_16f1516_B1.c: 460: while(!SSPIF);
  3455                           
  3456  0289  0020               	movlb	0	; select bank0
  3457  028A  1D91               	btfss	17,3	;volatile
  3458  028B  2A89               	goto	l862
  3459                           
  3460                           ;MCU_16f1516_B1.c: 461: SSPIF=0;
  3461  028C  1191               	bcf	17,3	;volatile
  3462  028D                     l865:	
  3463                           ;MCU_16f1516_B1.c: 462: while(ACKSTAT);
  3464                           
  3465  028D  0024               	movlb	4	; select bank4
  3466  028E  1B16               	btfsc	22,6	;volatile
  3467  028F  2A8D               	goto	l865
  3468  0290  3001               	movlw	1
  3469  0291  0020               	movlb	0	; select bank0
  3470  0292  00D4               	movwf	??_I2C_Slave_Mode
  3471  0293  0854               	movf	??_I2C_Slave_Mode,w
  3472  0294  07D6               	addwf	I2C_Slave_Mode@i,f
  3473  0295  3020               	movlw	32
  3474  0296  0256               	subwf	I2C_Slave_Mode@i,w
  3475  0297  1C03               	skipc
  3476  0298  2A7D               	goto	l3025
  3477  0299                     l861:	
  3478                           
  3479                           ;MCU_16f1516_B1.c: 463: }
  3480                           ;MCU_16f1516_B1.c: 464: CKP=1;
  3481  0299  0024               	movlb	4	; select bank4
  3482  029A  1615               	bsf	21,4	;volatile
  3483                           
  3484                           ;MCU_16f1516_B1.c: 466: I2C->SlaveTxGO=1;
  3485  029B  0020               	movlb	0	; select bank0
  3486  029C  0838               	movf	_I2C,w
  3487  029D  3E42               	addlw	66
  3488  029E  0086               	movwf	6
  3489  029F  3001               	movlw	1	; select bank2/3
  3490  02A0  0087               	movwf	7
  3491  02A1  1501               	bsf	1,2
  3492                           
  3493                           ;MCU_16f1516_B1.c: 467: }
  3494  02A2  0008               	return
  3495  02A3                     l859:	
  3496                           
  3497                           ;MCU_16f1516_B1.c: 468: else
  3498                           ;MCU_16f1516_B1.c: 469: {
  3499                           ;MCU_16f1516_B1.c: 470: CKP=1;
  3500  02A3  1615               	bsf	21,4	;volatile
  3501                           
  3502                           ;MCU_16f1516_B1.c: 471: for(i=0;i<32;i++)
  3503  02A4  0020               	movlb	0	; select bank0
  3504  02A5  01D6               	clrf	I2C_Slave_Mode@i
  3505  02A6  3020               	movlw	32
  3506  02A7  0256               	subwf	I2C_Slave_Mode@i,w
  3507  02A8  1803               	btfsc	3,0
  3508  02A9  2AC5               	goto	l3049
  3509  02AA                     l871:	
  3510                           ;MCU_16f1516_B1.c: 472: {
  3511                           ;MCU_16f1516_B1.c: 473: while(!SSPIF);
  3512                           
  3513  02AA  1D91               	btfss	17,3	;volatile
  3514  02AB  2AAA               	goto	l871
  3515                           
  3516                           ;MCU_16f1516_B1.c: 474: SSPIF=0;
  3517  02AC  1191               	bcf	17,3	;volatile
  3518                           
  3519                           ;MCU_16f1516_B1.c: 475: I2C->BufferReader[i]=SSPBUF;
  3520  02AD  0024               	movlb	4	; select bank4
  3521  02AE  0811               	movf	17,w	;volatile
  3522  02AF  0020               	movlb	0	; select bank0
  3523  02B0  00D4               	movwf	??_I2C_Slave_Mode
  3524  02B1  0856               	movf	I2C_Slave_Mode@i,w
  3525  02B2  0738               	addwf	_I2C,w
  3526  02B3  00D5               	movwf	??_I2C_Slave_Mode+1
  3527  02B4  0855               	movf	??_I2C_Slave_Mode+1,w
  3528  02B5  0086               	movwf	6
  3529  02B6  3001               	movlw	1	; select bank2/3
  3530  02B7  0087               	movwf	7
  3531  02B8  0854               	movf	??_I2C_Slave_Mode,w
  3532  02B9  0081               	movwf	1
  3533                           
  3534                           ;MCU_16f1516_B1.c: 477: CKP=1;
  3535  02BA  0024               	movlb	4	; select bank4
  3536  02BB  1615               	bsf	21,4	;volatile
  3537  02BC  3001               	movlw	1
  3538  02BD  0020               	movlb	0	; select bank0
  3539  02BE  00D4               	movwf	??_I2C_Slave_Mode
  3540  02BF  0854               	movf	??_I2C_Slave_Mode,w
  3541  02C0  07D6               	addwf	I2C_Slave_Mode@i,f
  3542  02C1  3020               	movlw	32
  3543  02C2  0256               	subwf	I2C_Slave_Mode@i,w
  3544  02C3  1C03               	skipc
  3545  02C4  2AAA               	goto	l871
  3546  02C5                     l3049:	
  3547                           
  3548                           ;MCU_16f1516_B1.c: 478: }
  3549                           ;MCU_16f1516_B1.c: 480: I2C->SlaveRxGO=1;
  3550  02C5  0838               	movf	_I2C,w
  3551  02C6  3E42               	addlw	66
  3552  02C7  0086               	movwf	6
  3553  02C8  3001               	movlw	1	; select bank2/3
  3554  02C9  0087               	movwf	7
  3555  02CA  1481               	bsf	1,1
  3556  02CB  0008               	return
  3557  02CC                     __end_of_I2C_Slave_Mode:	
  3558                           
  3559                           	psect	text23
  3560  003D                     __ptext23:	
  3561 ;; *************** function _I2C_SetData *****************
  3562 ;; Defined at:
  3563 ;;		line 342 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  command         1    wreg     unsigned char 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  command         1    2[BANK0 ] unsigned char 
  3568 ;;  i               1    3[BANK0 ] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;		None               void
  3571 ;; Registers used:
  3572 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3578 ;;      Params:         0       0       0       0       0       0       0       0
  3579 ;;      Locals:         0       2       0       0       0       0       0       0
  3580 ;;      Temps:          0       2       0       0       0       0       0       0
  3581 ;;      Totals:         0       4       0       0       0       0       0       0
  3582 ;;Total ram usage:        4 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    4
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_setRF_Main
  3589 ;;		_I2C_Main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _I2C_SetData
  3595  003D                     _I2C_SetData:	
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in _I2C_SetData: [wreg+fsr1l+fsr1h+status,2+status,0]
  3599                           ;I2C_SetData@command stored from wreg
  3600  003D  0020               	movlb	0	; select bank0
  3601  003E  00D6               	movwf	I2C_SetData@command
  3602                           
  3603                           ;MCU_16f1516_B1.c: 345: char i;
  3604                           ;MCU_16f1516_B1.c: 346: if(command)
  3605  003F  0856               	movf	I2C_SetData@command,w
  3606  0040  1903               	btfsc	3,2
  3607  0041  2889               	goto	l2851
  3608                           
  3609                           ;MCU_16f1516_B1.c: 347: {
  3610                           ;MCU_16f1516_B1.c: 348: if(!I2C->SS)
  3611  0042  0838               	movf	_I2C,w
  3612  0043  3E42               	addlw	66
  3613  0044  0086               	movwf	6
  3614  0045  3001               	movlw	1	; select bank2/3
  3615  0046  0087               	movwf	7
  3616  0047  1A81               	btfsc	1,5
  3617  0048  0008               	return
  3618                           
  3619                           ;MCU_16f1516_B1.c: 349: {
  3620                           ;MCU_16f1516_B1.c: 350: I2C->SS=1;
  3621  0049  0838               	movf	_I2C,w
  3622  004A  3E42               	addlw	66
  3623  004B  0086               	movwf	6
  3624  004C  3001               	movlw	1	; select bank2/3
  3625  004D  0087               	movwf	7
  3626  004E  1681               	bsf	1,5
  3627                           
  3628                           ;MCU_16f1516_B1.c: 351: for(i=0 ;i< 21 ;i++)
  3629  004F  01D7               	clrf	I2C_SetData@i
  3630  0050  3015               	movlw	21
  3631  0051  0257               	subwf	I2C_SetData@i,w
  3632  0052  1803               	btfsc	3,0
  3633  0053  286C               	goto	l2847
  3634  0054                     l2841:	
  3635                           
  3636                           ;MCU_16f1516_B1.c: 352: {
  3637                           ;MCU_16f1516_B1.c: 353: I2C->BufferWriter[i]=RF_Data[i];
  3638  0054  0857               	movf	I2C_SetData@i,w
  3639  0055  3E20               	addlw	_RF_Data& (0+255)
  3640  0056  0086               	movwf	6
  3641  0057  0187               	clrf	7
  3642  0058  0801               	movf	1,w
  3643  0059  00D4               	movwf	??_I2C_SetData
  3644  005A  0857               	movf	I2C_SetData@i,w
  3645  005B  3E20               	addlw	32
  3646  005C  0738               	addwf	_I2C,w
  3647  005D  00D5               	movwf	??_I2C_SetData+1
  3648  005E  0855               	movf	??_I2C_SetData+1,w
  3649  005F  0086               	movwf	6
  3650  0060  3001               	movlw	1	; select bank2/3
  3651  0061  0087               	movwf	7
  3652  0062  0854               	movf	??_I2C_SetData,w
  3653  0063  0081               	movwf	1
  3654  0064  3001               	movlw	1
  3655  0065  00D4               	movwf	??_I2C_SetData
  3656  0066  0854               	movf	??_I2C_SetData,w
  3657  0067  07D7               	addwf	I2C_SetData@i,f
  3658  0068  3015               	movlw	21
  3659  0069  0257               	subwf	I2C_SetData@i,w
  3660  006A  1C03               	skipc
  3661  006B  2854               	goto	l2841
  3662  006C                     l2847:	
  3663                           
  3664                           ;MCU_16f1516_B1.c: 354: }
  3665                           ;MCU_16f1516_B1.c: 355: I2C->BufferWriter[21]=Tx_Length;
  3666  006C  083C               	movf	_Tx_Length,w
  3667  006D  00D4               	movwf	??_I2C_SetData
  3668  006E  0838               	movf	_I2C,w
  3669  006F  3E35               	addlw	53
  3670  0070  0086               	movwf	6
  3671  0071  3001               	movlw	1	; select bank2/3
  3672  0072  0087               	movwf	7
  3673  0073  0854               	movf	??_I2C_SetData,w
  3674  0074  0081               	movwf	1
  3675                           
  3676                           ;MCU_16f1516_B1.c: 356: I2C->BufferWriter[22]=RSSI;
  3677  0075  0839               	movf	_RSSI,w
  3678  0076  00D4               	movwf	??_I2C_SetData
  3679  0077  0838               	movf	_I2C,w
  3680  0078  3E36               	addlw	54
  3681  0079  0086               	movwf	6
  3682  007A  3001               	movlw	1	; select bank2/3
  3683  007B  0087               	movwf	7
  3684  007C  0854               	movf	??_I2C_SetData,w
  3685  007D  0081               	movwf	1
  3686                           
  3687                           ;MCU_16f1516_B1.c: 357: I2C->BufferWriter[23]=CRC;
  3688  007E  0837               	movf	_CRC,w
  3689  007F  00D4               	movwf	??_I2C_SetData
  3690  0080  0838               	movf	_I2C,w
  3691  0081  3E37               	addlw	55
  3692  0082  0086               	movwf	6
  3693  0083  3001               	movlw	1	; select bank2/3
  3694  0084  0087               	movwf	7
  3695  0085  0854               	movf	??_I2C_SetData,w
  3696  0086  0081               	movwf	1
  3697                           
  3698                           ;MCU_16f1516_B1.c: 358: RC0=1;
  3699  0087  140E               	bsf	14,0	;volatile
  3700                           
  3701                           ;MCU_16f1516_B1.c: 359: }
  3702                           ;MCU_16f1516_B1.c: 360: }
  3703  0088  0008               	return
  3704  0089                     l2851:	
  3705                           
  3706                           ;MCU_16f1516_B1.c: 361: else
  3707                           ;MCU_16f1516_B1.c: 362: {
  3708                           ;MCU_16f1516_B1.c: 363: for(i=0;i<21;i++)
  3709  0089  01D7               	clrf	I2C_SetData@i
  3710  008A  3015               	movlw	21
  3711  008B  0257               	subwf	I2C_SetData@i,w
  3712  008C  1803               	btfsc	3,0
  3713  008D  28A5               	goto	l2863
  3714  008E                     l2857:	
  3715                           
  3716                           ;MCU_16f1516_B1.c: 364: {
  3717                           ;MCU_16f1516_B1.c: 365: RF_Data[i]=I2C->BufferReader[i];
  3718  008E  0857               	movf	I2C_SetData@i,w
  3719  008F  0738               	addwf	_I2C,w
  3720  0090  00D4               	movwf	??_I2C_SetData
  3721  0091  0854               	movf	??_I2C_SetData,w
  3722  0092  0086               	movwf	6
  3723  0093  3001               	movlw	1	; select bank2/3
  3724  0094  0087               	movwf	7
  3725  0095  0801               	movf	1,w
  3726  0096  00D5               	movwf	??_I2C_SetData+1
  3727  0097  0857               	movf	I2C_SetData@i,w
  3728  0098  3E20               	addlw	_RF_Data& (0+255)
  3729  0099  0086               	movwf	6
  3730  009A  0187               	clrf	7
  3731  009B  0855               	movf	??_I2C_SetData+1,w
  3732  009C  0081               	movwf	1
  3733  009D  3001               	movlw	1
  3734  009E  00D4               	movwf	??_I2C_SetData
  3735  009F  0854               	movf	??_I2C_SetData,w
  3736  00A0  07D7               	addwf	I2C_SetData@i,f
  3737  00A1  3015               	movlw	21
  3738  00A2  0257               	subwf	I2C_SetData@i,w
  3739  00A3  1C03               	skipc
  3740  00A4  288E               	goto	l2857
  3741  00A5                     l2863:	
  3742                           
  3743                           ;MCU_16f1516_B1.c: 366: }
  3744                           ;MCU_16f1516_B1.c: 368: RF->TransceiveGO=1;
  3745  00A5  0876               	movf	_RF,w
  3746  00A6  0086               	movwf	6
  3747  00A7  0187               	clrf	7
  3748  00A8  1501               	bsf	1,2
  3749  00A9  0008               	return
  3750  00AA                     __end_of_I2C_SetData:	
  3751                           
  3752                           	psect	text24
  3753  0564                     __ptext24:	
  3754 ;; *************** function _CC2500_PowerOnInitial *****************
  3755 ;; Defined at:
  3756 ;;		line 97 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;		None               void
  3763 ;; Registers used:
  3764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3770 ;;      Params:         0       0       0       0       0       0       0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0
  3773 ;;      Totals:         0       0       0       0       0       0       0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    7
  3777 ;; This function calls:
  3778 ;;		_CC2500_ClearRXFIFO
  3779 ;;		_CC2500_ClearTXFIFO
  3780 ;;		_CC2500_FrequencyCabr
  3781 ;;		_CC2500_InitPATable
  3782 ;;		_CC2500_InitSetREG
  3783 ;;		_CC2500_PowerRST
  3784 ;;		_CC2500_SIDLEMode
  3785 ;; This function is called by:
  3786 ;;		_main
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _CC2500_PowerOnInitial
  3792  0564                     _CC2500_PowerOnInitial:	
  3793                           
  3794                           ;CC2500_B1.c: 99: CC2500_PowerRST();
  3795                           
  3796                           ;incstack = 0
  3797                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3798  0564  3183  239A  3185   	fcall	_CC2500_PowerRST
  3799                           
  3800                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
  3801  0567  3183  23F4  3185   	fcall	_CC2500_InitSetREG
  3802                           
  3803                           ;CC2500_B1.c: 101: CC2500_InitPATable();
  3804  056A  3184  24D7  3185   	fcall	_CC2500_InitPATable
  3805                           
  3806                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
  3807  056D  3186  264F  3185   	fcall	_CC2500_ClearTXFIFO
  3808                           
  3809                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
  3810  0570  3186  2653  3185   	fcall	_CC2500_ClearRXFIFO
  3811                           
  3812                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
  3813  0573  3185  25EA  3185   	fcall	_CC2500_FrequencyCabr
  3814                           
  3815                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
  3816  0576  3186  264B         	fcall	_CC2500_SIDLEMode
  3817  0578  0008               	return
  3818  0579                     __end_of_CC2500_PowerOnInitial:	
  3819                           
  3820                           	psect	text25
  3821  064B                     __ptext25:	
  3822 ;; *************** function _CC2500_SIDLEMode *****************
  3823 ;; Defined at:
  3824 ;;		line 183 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;		None
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;		None               void
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0, pclath, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3838 ;;      Params:         0       0       0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0
  3841 ;;      Totals:         0       0       0       0       0       0       0       0
  3842 ;;Total ram usage:        0 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    6
  3845 ;; This function calls:
  3846 ;;		_CC2500_WriteCommand
  3847 ;; This function is called by:
  3848 ;;		_CC2500_PowerOnInitial
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function _CC2500_SIDLEMode
  3854  064B                     _CC2500_SIDLEMode:	
  3855                           
  3856                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
  3857                           
  3858                           ;incstack = 0
  3859                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
  3860  064B  3036               	movlw	54
  3861  064C  3185  25DC         	fcall	_CC2500_WriteCommand
  3862  064E  0008               	return
  3863  064F                     __end_of_CC2500_SIDLEMode:	
  3864                           
  3865                           	psect	text26
  3866  039A                     __ptext26:	
  3867 ;; *************** function _CC2500_PowerRST *****************
  3868 ;; Defined at:
  3869 ;;		line 110 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;		None               void
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0, pclath, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3883 ;;      Params:         0       0       0       0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0
  3885 ;;      Temps:          0       1       0       0       0       0       0       0
  3886 ;;      Totals:         0       1       0       0       0       0       0       0
  3887 ;;Total ram usage:        1 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    5
  3890 ;; This function calls:
  3891 ;;		_CC2500_WriteByte
  3892 ;;		_DelayTime_1us
  3893 ;; This function is called by:
  3894 ;;		_CC2500_PowerOnInitial
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _CC2500_PowerRST
  3900  039A                     _CC2500_PowerRST:	
  3901                           
  3902                           ;CC2500_B1.c: 112: RB2=0;
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
  3906  039A  0020               	movlb	0	; select bank0
  3907  039B  110D               	bcf	13,2	;volatile
  3908                           
  3909                           ;CC2500_B1.c: 113: RB1=0;
  3910  039C  108D               	bcf	13,1	;volatile
  3911                           
  3912                           ;CC2500_B1.c: 114: RB5=1;
  3913  039D  168D               	bsf	13,5	;volatile
  3914                           
  3915                           ;CC2500_B1.c: 115: DelayTime_1us(10);
  3916  039E  300A               	movlw	10
  3917  039F  00D4               	movwf	DelayTime_1us@count
  3918  03A0  3000               	movlw	0
  3919  03A1  00D5               	movwf	DelayTime_1us@count+1
  3920  03A2  3184  246D  3183   	fcall	_DelayTime_1us
  3921                           
  3922                           ;CC2500_B1.c: 116: RB5=0;
  3923  03A5  0020               	movlb	0	; select bank0
  3924  03A6  128D               	bcf	13,5	;volatile
  3925                           
  3926                           ;CC2500_B1.c: 117: DelayTime_1us(10);
  3927  03A7  300A               	movlw	10
  3928  03A8  00D4               	movwf	DelayTime_1us@count
  3929  03A9  3000               	movlw	0
  3930  03AA  00D5               	movwf	DelayTime_1us@count+1
  3931  03AB  3184  246D  3183   	fcall	_DelayTime_1us
  3932                           
  3933                           ;CC2500_B1.c: 118: RB5=1;
  3934  03AE  0020               	movlb	0	; select bank0
  3935  03AF  168D               	bsf	13,5	;volatile
  3936                           
  3937                           ;CC2500_B1.c: 119: DelayTime_1us(40);
  3938  03B0  3028               	movlw	40
  3939  03B1  00D4               	movwf	DelayTime_1us@count
  3940  03B2  3000               	movlw	0
  3941  03B3  00D5               	movwf	DelayTime_1us@count+1
  3942  03B4  3184  246D  3183   	fcall	_DelayTime_1us
  3943                           
  3944                           ;CC2500_B1.c: 120: RB5=0;
  3945  03B7  0020               	movlb	0	; select bank0
  3946  03B8  128D               	bcf	13,5	;volatile
  3947                           
  3948                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
  3949  03B9  3030               	movlw	48
  3950  03BA  00DA               	movwf	??_CC2500_PowerRST
  3951  03BB  085A               	movf	??_CC2500_PowerRST,w
  3952  03BC  00BB               	movwf	_SPI0Buffer
  3953  03BD                     l299:	
  3954                           ;CC2500_B1.c: 122: while(RB3==1);
  3955                           
  3956  03BD  198D               	btfsc	13,3	;volatile
  3957  03BE  2BBD               	goto	l299
  3958                           
  3959                           ;CC2500_B1.c: 123: CC2500_WriteByte();
  3960  03BF  3185  2579  3183   	fcall	_CC2500_WriteByte
  3961  03C2                     l302:	
  3962                           ;CC2500_B1.c: 124: while(RB3==1);
  3963                           
  3964  03C2  0020               	movlb	0	; select bank0
  3965  03C3  198D               	btfsc	13,3	;volatile
  3966  03C4  2BC2               	goto	l302
  3967                           
  3968                           ;CC2500_B1.c: 125: RB1=0;
  3969  03C5  108D               	bcf	13,1	;volatile
  3970                           
  3971                           ;CC2500_B1.c: 126: RB5=1;
  3972  03C6  168D               	bsf	13,5	;volatile
  3973  03C7  0008               	return
  3974  03C8                     __end_of_CC2500_PowerRST:	
  3975                           
  3976                           	psect	text27
  3977  03F4                     __ptext27:	
  3978 ;; *************** function _CC2500_InitSetREG *****************
  3979 ;; Defined at:
  3980 ;;		line 131 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  loop_c          1    8[BANK0 ] unsigned char 
  3985 ;;  temp2           1    7[BANK0 ] unsigned char 
  3986 ;;  temp1           1    6[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;		None               void
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3996 ;;      Params:         0       0       0       0       0       0       0       0
  3997 ;;      Locals:         0       3       0       0       0       0       0       0
  3998 ;;      Temps:          0       1       0       0       0       0       0       0
  3999 ;;      Totals:         0       4       0       0       0       0       0       0
  4000 ;;Total ram usage:        4 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    6
  4003 ;; This function calls:
  4004 ;;		_CC2500_WriteREG
  4005 ;; This function is called by:
  4006 ;;		_CC2500_PowerOnInitial
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function _CC2500_InitSetREG
  4012  03F4                     _CC2500_InitSetREG:	
  4013                           
  4014                           ;CC2500_B1.c: 133: unsigned char loop_c;
  4015                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
  4016                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4020  03F4  0020               	movlb	0	; select bank0
  4021  03F5  01DC               	clrf	CC2500_InitSetREG@loop_c
  4022  03F6                     L2:	
  4023  03F6  302F               	movlw	47
  4024  03F7  025C               	subwf	CC2500_InitSetREG@loop_c,w
  4025  03F8  1803               	btfsc	3,0
  4026  03F9  0008               	return
  4027                           
  4028                           ;CC2500_B1.c: 137: {
  4029                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
  4030  03FA  085C               	movf	CC2500_InitSetREG@loop_c,w
  4031  03FB  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
  4032  03FC  0084               	movwf	4
  4033  03FD  3082               	movlw	high (_CC2500_registers_address| (0+32768))
  4034  03FE  1803               	skipnc
  4035  03FF  3E01               	addlw	1
  4036  0400  0085               	movwf	5
  4037  0401  0800               	movf	0,w	;code access
  4038  0402  00D9               	movwf	??_CC2500_InitSetREG
  4039  0403  0859               	movf	??_CC2500_InitSetREG,w
  4040  0404  00DA               	movwf	CC2500_InitSetREG@temp1
  4041                           
  4042                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
  4043  0405  085C               	movf	CC2500_InitSetREG@loop_c,w
  4044  0406  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
  4045  0407  0084               	movwf	4
  4046  0408  3082               	movlw	high (_CC2500_rfSettings| (0+32768))
  4047  0409  1803               	skipnc
  4048  040A  3E01               	addlw	1
  4049  040B  0085               	movwf	5
  4050  040C  0800               	movf	0,w	;code access
  4051  040D  00D9               	movwf	??_CC2500_InitSetREG
  4052  040E  0859               	movf	??_CC2500_InitSetREG,w
  4053  040F  00DB               	movwf	CC2500_InitSetREG@temp2
  4054                           
  4055                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
  4056  0410  085B               	movf	CC2500_InitSetREG@temp2,w
  4057  0411  00D9               	movwf	??_CC2500_InitSetREG
  4058  0412  0859               	movf	??_CC2500_InitSetREG,w
  4059  0413  00D6               	movwf	CC2500_WriteREG@value
  4060  0414  085A               	movf	CC2500_InitSetREG@temp1,w
  4061  0415  3185  2539  3183   	fcall	_CC2500_WriteREG
  4062  0418  3001               	movlw	1
  4063  0419  0020               	movlb	0	; select bank0
  4064  041A  00D9               	movwf	??_CC2500_InitSetREG
  4065  041B  0859               	movf	??_CC2500_InitSetREG,w
  4066  041C  07DC               	addwf	CC2500_InitSetREG@loop_c,f
  4067  041D  2BF6               	goto	L2
  4068  041E                     __end_of_CC2500_InitSetREG:	
  4069                           
  4070                           	psect	text28
  4071  04D7                     __ptext28:	
  4072 ;; *************** function _CC2500_InitPATable *****************
  4073 ;; Defined at:
  4074 ;;		line 147 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  loop_d          1    7[BANK0 ] unsigned char 
  4079 ;;  temp            1    6[BANK0 ] unsigned char 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;		None               void
  4082 ;; Registers used:
  4083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4089 ;;      Params:         0       0       0       0       0       0       0       0
  4090 ;;      Locals:         0       2       0       0       0       0       0       0
  4091 ;;      Temps:          0       1       0       0       0       0       0       0
  4092 ;;      Totals:         0       3       0       0       0       0       0       0
  4093 ;;Total ram usage:        3 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    6
  4096 ;; This function calls:
  4097 ;;		_CC2500_WriteREG
  4098 ;; This function is called by:
  4099 ;;		_CC2500_PowerOnInitial
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           
  4104                           ;psect for function _CC2500_InitPATable
  4105  04D7                     _CC2500_InitPATable:	
  4106                           
  4107                           ;CC2500_B1.c: 149: unsigned char loop_d;
  4108                           ;CC2500_B1.c: 150: unsigned char temp;
  4109                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
  4110                           
  4111                           ;incstack = 0
  4112                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4113  04D7  0020               	movlb	0	; select bank0
  4114  04D8  01DB               	clrf	CC2500_InitPATable@loop_d
  4115  04D9                     L3:	
  4116  04D9  3008               	movlw	8
  4117  04DA  025B               	subwf	CC2500_InitPATable@loop_d,w
  4118  04DB  1803               	btfsc	3,0
  4119  04DC  0008               	return
  4120                           
  4121                           ;CC2500_B1.c: 153: {
  4122                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
  4123  04DD  085B               	movf	CC2500_InitPATable@loop_d,w
  4124  04DE  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
  4125  04DF  0084               	movwf	4
  4126  04E0  3082               	movlw	high (_CC2500_patable_vaule| (0+32768))
  4127  04E1  1803               	skipnc
  4128  04E2  3E01               	addlw	1
  4129  04E3  0085               	movwf	5
  4130  04E4  0800               	movf	0,w	;code access
  4131  04E5  00D9               	movwf	??_CC2500_InitPATable
  4132  04E6  0859               	movf	??_CC2500_InitPATable,w
  4133  04E7  00DA               	movwf	CC2500_InitPATable@temp
  4134                           
  4135                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
  4136  04E8  085A               	movf	CC2500_InitPATable@temp,w
  4137  04E9  00D9               	movwf	??_CC2500_InitPATable
  4138  04EA  0859               	movf	??_CC2500_InitPATable,w
  4139  04EB  00D6               	movwf	CC2500_WriteREG@value
  4140  04EC  303E               	movlw	62
  4141  04ED  3185  2539  3184   	fcall	_CC2500_WriteREG
  4142  04F0  3001               	movlw	1
  4143  04F1  0020               	movlb	0	; select bank0
  4144  04F2  00D9               	movwf	??_CC2500_InitPATable
  4145  04F3  0859               	movf	??_CC2500_InitPATable,w
  4146  04F4  07DB               	addwf	CC2500_InitPATable@loop_d,f
  4147  04F5  2CD9               	goto	L3
  4148  04F6                     __end_of_CC2500_InitPATable:	
  4149                           
  4150                           	psect	text29
  4151  0539                     __ptext29:	
  4152 ;; *************** function _CC2500_WriteREG *****************
  4153 ;; Defined at:
  4154 ;;		line 227 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  w_addr          1    wreg     unsigned char 
  4157 ;;  value           1    2[BANK0 ] unsigned char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  w_addr          1    4[BANK0 ] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0, pclath, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4169 ;;      Params:         0       1       0       0       0       0       0       0
  4170 ;;      Locals:         0       1       0       0       0       0       0       0
  4171 ;;      Temps:          0       1       0       0       0       0       0       0
  4172 ;;      Totals:         0       3       0       0       0       0       0       0
  4173 ;;Total ram usage:        3 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    5
  4176 ;; This function calls:
  4177 ;;		_CC2500_WriteByte
  4178 ;; This function is called by:
  4179 ;;		_CC2500_InitSetREG
  4180 ;;		_CC2500_InitPATable
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function _CC2500_WriteREG
  4186  0539                     _CC2500_WriteREG:	
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
  4190                           ;CC2500_WriteREG@w_addr stored from wreg
  4191  0539  0020               	movlb	0	; select bank0
  4192  053A  00D8               	movwf	CC2500_WriteREG@w_addr
  4193                           
  4194                           ;CC2500_B1.c: 229: RB5=0;
  4195  053B  128D               	bcf	13,5	;volatile
  4196                           
  4197                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
  4198  053C  0858               	movf	CC2500_WriteREG@w_addr,w
  4199  053D  00D7               	movwf	??_CC2500_WriteREG
  4200  053E  0857               	movf	??_CC2500_WriteREG,w
  4201  053F  00BB               	movwf	_SPI0Buffer
  4202  0540                     l344:	
  4203                           ;CC2500_B1.c: 231: while(RB3==1);
  4204                           
  4205  0540  198D               	btfsc	13,3	;volatile
  4206  0541  2D40               	goto	l344
  4207                           
  4208                           ;CC2500_B1.c: 232: CC2500_WriteByte();
  4209  0542  3185  2579  3185   	fcall	_CC2500_WriteByte
  4210                           
  4211                           ;CC2500_B1.c: 233: SPI0Buffer=value;
  4212  0545  0020               	movlb	0	; select bank0
  4213  0546  0856               	movf	CC2500_WriteREG@value,w
  4214  0547  00D7               	movwf	??_CC2500_WriteREG
  4215  0548  0857               	movf	??_CC2500_WriteREG,w
  4216  0549  00BB               	movwf	_SPI0Buffer
  4217                           
  4218                           ;CC2500_B1.c: 234: CC2500_WriteByte();
  4219  054A  3185  2579         	fcall	_CC2500_WriteByte
  4220                           
  4221                           ;CC2500_B1.c: 235: RB5=1;
  4222  054C  0020               	movlb	0	; select bank0
  4223  054D  168D               	bsf	13,5	;volatile
  4224  054E  0008               	return
  4225  054F                     __end_of_CC2500_WriteREG:	
  4226                           
  4227                           	psect	text30
  4228  05EA                     __ptext30:	
  4229 ;; *************** function _CC2500_FrequencyCabr *****************
  4230 ;; Defined at:
  4231 ;;		line 175 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;		None               void
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0, pclath, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4245 ;;      Params:         0       0       0       0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    6
  4252 ;; This function calls:
  4253 ;;		_CC2500_WriteCommand
  4254 ;;		_DelayTime_1us
  4255 ;; This function is called by:
  4256 ;;		_CC2500_PowerOnInitial
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           
  4261                           ;psect for function _CC2500_FrequencyCabr
  4262  05EA                     _CC2500_FrequencyCabr:	
  4263                           
  4264                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
  4268  05EA  3033               	movlw	51
  4269  05EB  3185  25DC  3185   	fcall	_CC2500_WriteCommand
  4270                           
  4271                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
  4272  05EE  30E8               	movlw	232
  4273  05EF  0020               	movlb	0	; select bank0
  4274  05F0  00D4               	movwf	DelayTime_1us@count
  4275  05F1  3003               	movlw	3
  4276  05F2  00D5               	movwf	DelayTime_1us@count+1
  4277  05F3  3184  246D         	fcall	_DelayTime_1us
  4278  05F5  0008               	return
  4279  05F6                     __end_of_CC2500_FrequencyCabr:	
  4280                           
  4281                           	psect	text31
  4282  046D                     __ptext31:	
  4283 ;; *************** function _DelayTime_1us *****************
  4284 ;; Defined at:
  4285 ;;		line 283 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  count           2    0[BANK0 ] int 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  j               2    4[BANK0 ] unsigned int 
  4290 ;;  i               2    2[BANK0 ] unsigned int 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;		None               void
  4293 ;; Registers used:
  4294 ;;		wreg, status,2
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4300 ;;      Params:         0       2       0       0       0       0       0       0
  4301 ;;      Locals:         0       4       0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0       0
  4303 ;;      Totals:         0       6       0       0       0       0       0       0
  4304 ;;Total ram usage:        6 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    4
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_CC2500_PowerRST
  4311 ;;		_CC2500_FrequencyCabr
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function _DelayTime_1us
  4317  046D                     _DelayTime_1us:	
  4318                           
  4319                           ;CC2500_B1.c: 285: unsigned int i,j;
  4320                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _DelayTime_1us: [wreg+status,2]
  4324  046D  3001               	movlw	1
  4325  046E  0020               	movlb	0	; select bank0
  4326  046F  00D6               	movwf	DelayTime_1us@i
  4327  0470  3000               	movlw	0
  4328  0471  00D7               	movwf	DelayTime_1us@i+1
  4329  0472                     l368:	
  4330  0472  0855               	movf	DelayTime_1us@count+1,w
  4331  0473  0257               	subwf	DelayTime_1us@i+1,w
  4332  0474  1D03               	skipz
  4333  0475  2C78               	goto	u2705
  4334  0476  0854               	movf	DelayTime_1us@count,w
  4335  0477  0256               	subwf	DelayTime_1us@i,w
  4336  0478                     u2705:	
  4337  0478  1803               	btfsc	3,0
  4338  0479  0008               	return
  4339                           
  4340                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
  4341  047A  01D8               	clrf	DelayTime_1us@j
  4342  047B  01D9               	clrf	DelayTime_1us@j+1
  4343  047C  3000               	movlw	0
  4344  047D  0259               	subwf	DelayTime_1us@j+1,w
  4345  047E  3002               	movlw	2
  4346  047F  1903               	skipnz
  4347  0480  0258               	subwf	DelayTime_1us@j,w
  4348  0481  1803               	btfsc	3,0
  4349  0482  2C8E               	goto	l2797
  4350  0483                     l2795:	
  4351  0483  3001               	movlw	1
  4352  0484  07D8               	addwf	DelayTime_1us@j,f
  4353  0485  3000               	movlw	0
  4354  0486  3DD9               	addwfc	DelayTime_1us@j+1,f
  4355  0487  3000               	movlw	0
  4356  0488  0259               	subwf	DelayTime_1us@j+1,w
  4357  0489  3002               	movlw	2
  4358  048A  1903               	skipnz
  4359  048B  0258               	subwf	DelayTime_1us@j,w
  4360  048C  1C03               	skipc
  4361  048D  2C83               	goto	l2795
  4362  048E                     l2797:	
  4363  048E  3001               	movlw	1
  4364  048F  07D6               	addwf	DelayTime_1us@i,f
  4365  0490  3000               	movlw	0
  4366  0491  3DD7               	addwfc	DelayTime_1us@i+1,f
  4367  0492  2C72               	goto	l368
  4368  0493                     __end_of_DelayTime_1us:	
  4369                           
  4370                           	psect	text32
  4371  064F                     __ptext32:	
  4372 ;; *************** function _CC2500_ClearTXFIFO *****************
  4373 ;; Defined at:
  4374 ;;		line 161 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;		None               void
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0, pclath, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4388 ;;      Params:         0       0       0       0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    6
  4395 ;; This function calls:
  4396 ;;		_CC2500_WriteCommand
  4397 ;; This function is called by:
  4398 ;;		_CC2500_PowerOnInitial
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           
  4403                           ;psect for function _CC2500_ClearTXFIFO
  4404  064F                     _CC2500_ClearTXFIFO:	
  4405                           
  4406                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
  4410  064F  303B               	movlw	59
  4411  0650  3185  25DC         	fcall	_CC2500_WriteCommand
  4412  0652  0008               	return
  4413  0653                     __end_of_CC2500_ClearTXFIFO:	
  4414                           
  4415                           	psect	text33
  4416  0653                     __ptext33:	
  4417 ;; *************** function _CC2500_ClearRXFIFO *****************
  4418 ;; Defined at:
  4419 ;;		line 168 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;		None               void
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0, pclath, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4433 ;;      Params:         0       0       0       0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0
  4436 ;;      Totals:         0       0       0       0       0       0       0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    6
  4440 ;; This function calls:
  4441 ;;		_CC2500_WriteCommand
  4442 ;; This function is called by:
  4443 ;;		_CC2500_PowerOnInitial
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function _CC2500_ClearRXFIFO
  4449  0653                     _CC2500_ClearRXFIFO:	
  4450                           
  4451                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
  4452                           
  4453                           ;incstack = 0
  4454                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
  4455  0653  303A               	movlw	58
  4456  0654  3185  25DC         	fcall	_CC2500_WriteCommand
  4457  0656  0008               	return
  4458  0657                     __end_of_CC2500_ClearRXFIFO:	
  4459                           
  4460                           	psect	text34
  4461  05DC                     __ptext34:	
  4462 ;; *************** function _CC2500_WriteCommand *****************
  4463 ;; Defined at:
  4464 ;;		line 253 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  command         1    wreg     unsigned char 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  command         1    3[BANK0 ] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;		None               void
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0, pclath, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4478 ;;      Params:         0       0       0       0       0       0       0       0
  4479 ;;      Locals:         0       1       0       0       0       0       0       0
  4480 ;;      Temps:          0       1       0       0       0       0       0       0
  4481 ;;      Totals:         0       2       0       0       0       0       0       0
  4482 ;;Total ram usage:        2 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    5
  4485 ;; This function calls:
  4486 ;;		_CC2500_WriteByte
  4487 ;; This function is called by:
  4488 ;;		_CC2500_TxData
  4489 ;;		_CC2500_RxData
  4490 ;;		_CC2500_ClearTXFIFO
  4491 ;;		_CC2500_ClearRXFIFO
  4492 ;;		_CC2500_FrequencyCabr
  4493 ;;		_CC2500_SIDLEMode
  4494 ;;		_setRF_Main
  4495 ;;		_setRF_Enable
  4496 ;;		_RF_RxDisable
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _CC2500_WriteCommand
  4502  05DC                     _CC2500_WriteCommand:	
  4503                           
  4504                           ;incstack = 0
  4505                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  4506                           ;CC2500_WriteCommand@command stored from wreg
  4507  05DC  0020               	movlb	0	; select bank0
  4508  05DD  00D7               	movwf	CC2500_WriteCommand@command
  4509                           
  4510                           ;CC2500_B1.c: 255: RB5=0;
  4511  05DE  128D               	bcf	13,5	;volatile
  4512                           
  4513                           ;CC2500_B1.c: 256: SPI0Buffer=command;
  4514  05DF  0857               	movf	CC2500_WriteCommand@command,w
  4515  05E0  00D6               	movwf	??_CC2500_WriteCommand
  4516  05E1  0856               	movf	??_CC2500_WriteCommand,w
  4517  05E2  00BB               	movwf	_SPI0Buffer
  4518  05E3                     l356:	
  4519                           ;CC2500_B1.c: 258: while(RB3==1);
  4520                           
  4521  05E3  198D               	btfsc	13,3	;volatile
  4522  05E4  2DE3               	goto	l356
  4523                           
  4524                           ;CC2500_B1.c: 260: CC2500_WriteByte();
  4525  05E5  3185  2579         	fcall	_CC2500_WriteByte
  4526                           
  4527                           ;CC2500_B1.c: 261: RB5=1;
  4528  05E7  0020               	movlb	0	; select bank0
  4529  05E8  168D               	bsf	13,5	;volatile
  4530  05E9  0008               	return
  4531  05EA                     __end_of_CC2500_WriteCommand:	
  4532                           
  4533                           	psect	text35
  4534  0579                     __ptext35:	
  4535 ;; *************** function _CC2500_WriteByte *****************
  4536 ;; Defined at:
  4537 ;;		line 193 in file "I:\Program\PIC\Source_File\CC2500_B1.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  loop_a          1    1[BANK0 ] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;		None               void
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4551 ;;      Params:         0       0       0       0       0       0       0       0
  4552 ;;      Locals:         0       1       0       0       0       0       0       0
  4553 ;;      Temps:          0       1       0       0       0       0       0       0
  4554 ;;      Totals:         0       2       0       0       0       0       0       0
  4555 ;;Total ram usage:        2 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    4
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_CC2500_TxData
  4562 ;;		_CC2500_RxData
  4563 ;;		_CC2500_PowerRST
  4564 ;;		_CC2500_WriteREG
  4565 ;;		_CC2500_WriteCommand
  4566 ;;		_CC2500_ReadStatus
  4567 ;;		_CC2500_ReadREG
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function _CC2500_WriteByte
  4573  0579                     _CC2500_WriteByte:	
  4574                           
  4575                           ;CC2500_B1.c: 195: unsigned char loop_a;
  4576                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
  4577                           
  4578                           ;incstack = 0
  4579                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
  4580  0579  0020               	movlb	0	; select bank0
  4581  057A  01D5               	clrf	CC2500_WriteByte@loop_a
  4582  057B                     L4:	
  4583  057B  3008               	movlw	8
  4584  057C  0255               	subwf	CC2500_WriteByte@loop_a,w
  4585  057D  1803               	btfsc	3,0
  4586  057E  0008               	return
  4587                           
  4588                           ;CC2500_B1.c: 197: {
  4589                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
  4590  057F  1FBB               	btfss	_SPI0Buffer,7
  4591  0580  2D83               	goto	l332
  4592                           
  4593                           ;CC2500_B1.c: 199: RB1=1;
  4594  0581  148D               	bsf	13,1	;volatile
  4595  0582  2D84               	goto	l333
  4596  0583                     l332:	
  4597                           
  4598                           ;CC2500_B1.c: 200: else
  4599                           ;CC2500_B1.c: 201: RB1=0;
  4600  0583  108D               	bcf	13,1	;volatile
  4601  0584                     l333:	
  4602                           
  4603                           ;CC2500_B1.c: 202: RB2=1;
  4604  0584  150D               	bsf	13,2	;volatile
  4605                           
  4606                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
  4607  0585  1003               	clrc
  4608  0586  0DBB               	rlf	_SPI0Buffer,f
  4609                           
  4610                           ;CC2500_B1.c: 204: RB2=0;
  4611  0587  110D               	bcf	13,2	;volatile
  4612  0588  3001               	movlw	1
  4613  0589  00D4               	movwf	??_CC2500_WriteByte
  4614  058A  0854               	movf	??_CC2500_WriteByte,w
  4615  058B  07D5               	addwf	CC2500_WriteByte@loop_a,f
  4616  058C  2D7B               	goto	L4
  4617  058D                     __end_of_CC2500_WriteByte:	
  4618                           
  4619                           	psect	intentry
  4620  0004                     __pintentry:	
  4621 ;; *************** function _ISR *****************
  4622 ;; Defined at:
  4623 ;;		line 56 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;		None               void
  4630 ;; Registers used:
  4631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4637 ;;      Params:         0       0       0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0       0
  4639 ;;      Temps:          1       0       0       0       0       0       0       0
  4640 ;;      Totals:         1       0       0       0       0       0       0       0
  4641 ;;Total ram usage:        1 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    3
  4644 ;; This function calls:
  4645 ;;		_I2C_ISR
  4646 ;;		_INT_ISR
  4647 ;;		_TMR1_ISR
  4648 ;; This function is called by:
  4649 ;;		Interrupt level 1
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653  0004                     _ISR:	
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4657  0004  147E               	bsf	126,0	;set compiler interrupt flag
  4658  0005  3180               	pagesel	$
  4659  0006  0020               	movlb	0	; select bank0
  4660  0007  087F               	movf	127,w
  4661  0008  00F5               	movwf	??_ISR
  4662                           
  4663                           ;MCU_16f1516_B1.c: 58: __nop();
  4664  0009  0000               	nop
  4665                           
  4666                           ;MCU_16f1516_B1.c: 60: __nop();
  4667  000A  0000               	nop
  4668                           
  4669                           ;MCU_16f1516_B1.c: 62: TMR1_ISR();
  4670  000B  3184  241E  3180   	fcall	_TMR1_ISR
  4671                           
  4672                           ;MCU_16f1516_B1.c: 66: INT_ISR();
  4673  000E  3185  25F6  3180   	fcall	_INT_ISR
  4674                           
  4675                           ;MCU_16f1516_B1.c: 68: ;;
  4676                           ;MCU_16f1516_B1.c: 70: I2C_ISR();
  4677  0011  3185  25AF         	fcall	_I2C_ISR
  4678  0013  0875               	movf	??_ISR,w
  4679  0014  0020               	movlb	0	; select bank0
  4680  0015  00FF               	movwf	127
  4681  0016  107E               	bcf	126,0	;clear compiler interrupt flag
  4682  0017  0009               	retfie
  4683  0018                     __end_of_ISR:	
  4684                           
  4685                           	psect	text37
  4686  041E                     __ptext37:	
  4687 ;; *************** function _TMR1_ISR *****************
  4688 ;; Defined at:
  4689 ;;		line 125 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;		None
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;		None
  4694 ;; Return value:  Size  Location     Type
  4695 ;;		None               void
  4696 ;; Registers used:
  4697 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4703 ;;      Params:         0       0       0       0       0       0       0       0
  4704 ;;      Locals:         0       0       0       0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0       0
  4706 ;;      Totals:         0       0       0       0       0       0       0       0
  4707 ;;Total ram usage:        0 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_ISR
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function _TMR1_ISR
  4718  041E                     _TMR1_ISR:	
  4719                           
  4720                           ;MCU_16f1516_B1.c: 127: if(TMR1IE && TMR1IF)
  4721                           
  4722                           ;incstack = 0
  4723                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4724  041E  0021               	movlb	1	; select bank1
  4725  041F  1C11               	btfss	17,0	;volatile
  4726  0420  0008               	return
  4727  0421  0020               	movlb	0	; select bank0
  4728  0422  1C11               	btfss	17,0	;volatile
  4729  0423  0008               	return
  4730                           
  4731                           ;MCU_16f1516_B1.c: 128: {
  4732                           ;MCU_16f1516_B1.c: 129: TMR1H=((65536-700)/256);
  4733  0424  30FD               	movlw	253
  4734  0425  0097               	movwf	23	;volatile
  4735                           
  4736                           ;MCU_16f1516_B1.c: 130: TMR1L=((65536-700)%256);
  4737  0426  3044               	movlw	68
  4738  0427  0096               	movwf	22	;volatile
  4739                           
  4740                           ;MCU_16f1516_B1.c: 131: TMR1IF=0;
  4741  0428  1011               	bcf	17,0	;volatile
  4742                           
  4743                           ;MCU_16f1516_B1.c: 132: Timer1->Count++;
  4744  0429  0A78               	incf	_Timer1,w
  4745  042A  0086               	movwf	6
  4746  042B  0187               	clrf	7
  4747  042C  3001               	movlw	1
  4748  042D  0781               	addwf	1,f
  4749  042E  3141               	addfsr 1,1
  4750  042F  1803               	skipnc
  4751  0430  0A81               	incf	1,f
  4752                           
  4753                           ;MCU_16f1516_B1.c: 133: if(Timer1->Count == 20)
  4754  0431  0A78               	incf	_Timer1,w
  4755  0432  0086               	movwf	6
  4756  0433  0187               	clrf	7
  4757  0434  3F40               	moviw [0]fsr1
  4758  0435  3A14               	xorlw	20
  4759  0436  1D03               	skipz
  4760  0437  2C3A               	goto	u194_25
  4761  0438  3F41               	moviw [1]fsr1
  4762  0439  3A00               	xorlw	0
  4763  043A                     u194_25:	
  4764  043A  1D03               	skipz
  4765  043B  0008               	return
  4766                           
  4767                           ;MCU_16f1516_B1.c: 134: {
  4768                           ;MCU_16f1516_B1.c: 135: Timer1->Count=0;
  4769  043C  0A78               	incf	_Timer1,w
  4770  043D  0086               	movwf	6
  4771  043E  0187               	clrf	7
  4772  043F  3000               	movlw	0
  4773  0440  3FC0               	movwi [0]fsr1
  4774  0441  3FC1               	movwi [1]fsr1
  4775                           
  4776                           ;MCU_16f1516_B1.c: 136: TMain->T1_Timerout=1;
  4777  0442  085D               	movf	_TMain,w
  4778  0443  0086               	movwf	6
  4779  0444  0187               	clrf	7
  4780  0445  1501               	bsf	1,2
  4781  0446  0008               	return
  4782  0447                     __end_of_TMR1_ISR:	
  4783                           
  4784                           	psect	text38
  4785  05F6                     __ptext38:	
  4786 ;; *************** function _INT_ISR *****************
  4787 ;; Defined at:
  4788 ;;		line 156 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;		None
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;		None               void
  4795 ;; Registers used:
  4796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4802 ;;      Params:         0       0       0       0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0
  4805 ;;      Totals:         0       0       0       0       0       0       0       0
  4806 ;;Total ram usage:        0 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    2
  4809 ;; This function calls:
  4810 ;;		_setRF_ReceiveGO
  4811 ;; This function is called by:
  4812 ;;		_ISR
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           
  4817                           ;psect for function _INT_ISR
  4818  05F6                     _INT_ISR:	
  4819                           
  4820                           ;MCU_16f1516_B1.c: 158: if(INTE && INTF)
  4821                           
  4822                           ;incstack = 0
  4823                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4824  05F6  1E0B               	btfss	11,4	;volatile
  4825  05F7  0008               	return
  4826  05F8  1C8B               	btfss	11,1	;volatile
  4827  05F9  0008               	return
  4828                           
  4829                           ;MCU_16f1516_B1.c: 159: {
  4830                           ;MCU_16f1516_B1.c: 160: INTF=0;
  4831  05FA  108B               	bcf	11,1	;volatile
  4832                           
  4833                           ;MCU_16f1516_B1.c: 161: INTE=0;
  4834  05FB  120B               	bcf	11,4	;volatile
  4835                           
  4836                           ;MCU_16f1516_B1.c: 162: setRF_ReceiveGO(1,1);
  4837  05FC  01F3               	clrf	setRF_ReceiveGO@command
  4838  05FD  0AF3               	incf	setRF_ReceiveGO@command,f
  4839  05FE  3001               	movlw	1
  4840  05FF  3186  2602         	fcall	_setRF_ReceiveGO
  4841  0601  0008               	return
  4842  0602                     __end_of_INT_ISR:	
  4843                           
  4844                           	psect	text39
  4845  0602                     __ptext39:	
  4846 ;; *************** function _setRF_ReceiveGO *****************
  4847 ;; Defined at:
  4848 ;;		line 37 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  rf              1    wreg     unsigned char 
  4851 ;;  command         1    2[COMMON] unsigned char 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  rf              1    3[COMMON] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;		None               void
  4856 ;; Registers used:
  4857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4863 ;;      Params:         1       0       0       0       0       0       0       0
  4864 ;;      Locals:         1       0       0       0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0       0
  4866 ;;      Totals:         2       0       0       0       0       0       0       0
  4867 ;;Total ram usage:        2 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    1
  4870 ;; This function calls:
  4871 ;;		i1_RfPointSelect
  4872 ;; This function is called by:
  4873 ;;		_INT_ISR
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           
  4878                           ;psect for function _setRF_ReceiveGO
  4879  0602                     _setRF_ReceiveGO:	
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4883                           ;setRF_ReceiveGO@rf stored from wreg
  4884  0602  00F4               	movwf	setRF_ReceiveGO@rf
  4885                           
  4886                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
  4887  0603  0874               	movf	setRF_ReceiveGO@rf,w
  4888  0604  3186  2619         	fcall	i1_RfPointSelect
  4889                           
  4890                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
  4891  0606  0876               	movf	_RF,w
  4892  0607  0086               	movwf	6
  4893  0608  0187               	clrf	7
  4894  0609  0873               	movf	setRF_ReceiveGO@command,w
  4895  060A  1081               	bcf	1,1
  4896  060B  1D03               	skipz
  4897  060C  1481               	bsf	1,1
  4898  060D  0008               	return
  4899  060E                     __end_of_setRF_ReceiveGO:	
  4900                           
  4901                           	psect	text40
  4902  0619                     __ptext40:	
  4903 ;; *************** function i1_RfPointSelect *****************
  4904 ;; Defined at:
  4905 ;;		line 7 in file "I:\Program\PIC\Source_File\RF_Control_B1.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  rf              1    wreg     unsigned char 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  rf              1    1[COMMON] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;		None               void
  4912 ;; Registers used:
  4913 ;;		wreg
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4919 ;;      Params:         0       0       0       0       0       0       0       0
  4920 ;;      Locals:         1       0       0       0       0       0       0       0
  4921 ;;      Temps:          1       0       0       0       0       0       0       0
  4922 ;;      Totals:         2       0       0       0       0       0       0       0
  4923 ;;Total ram usage:        2 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_setRF_ReceiveGO
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           
  4933                           ;psect for function i1_RfPointSelect
  4934  0619                     i1_RfPointSelect:	
  4935                           
  4936                           ;incstack = 0
  4937                           ; Regs used in i1_RfPointSelect: [wreg]
  4938                           ;i1RfPointSelect@rf stored from wreg
  4939  0619  00F2               	movwf	i1RfPointSelect@rf
  4940                           
  4941                           ;RF_Control_B1.c: 10: if(rf == 1)
  4942  061A  0872               	movf	i1RfPointSelect@rf,w
  4943  061B  3A01               	xorlw	1
  4944  061C  1D03               	skipz
  4945  061D  0008               	return
  4946                           
  4947                           ;RF_Control_B1.c: 11: {
  4948                           ;RF_Control_B1.c: 12: RF=&RF1;
  4949  061E  3052               	movlw	_RF1& (0+255)
  4950  061F  00F1               	movwf	??i1_RfPointSelect
  4951  0620  0871               	movf	??i1_RfPointSelect,w
  4952  0621  00F6               	movwf	_RF
  4953  0622  0008               	return
  4954  0623                     __end_ofi1_RfPointSelect:	
  4955                           
  4956                           	psect	text41
  4957  05AF                     __ptext41:	
  4958 ;; *************** function _I2C_ISR *****************
  4959 ;; Defined at:
  4960 ;;		line 260 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;		None               void
  4967 ;; Registers used:
  4968 ;;		wreg, fsr1l, fsr1h
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4974 ;;      Params:         0       0       0       0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_ISR
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           
  4988                           ;psect for function _I2C_ISR
  4989  05AF                     _I2C_ISR:	
  4990                           
  4991                           ;MCU_16f1516_B1.c: 262: if(SSPIE && SSPIF)
  4992                           
  4993                           ;incstack = 0
  4994                           ; Regs used in _I2C_ISR: [wregfsr1]
  4995  05AF  0021               	movlb	1	; select bank1
  4996  05B0  1D91               	btfss	17,3	;volatile
  4997  05B1  0008               	return
  4998  05B2  0020               	movlb	0	; select bank0
  4999  05B3  1D91               	btfss	17,3	;volatile
  5000  05B4  0008               	return
  5001                           
  5002                           ;MCU_16f1516_B1.c: 263: {
  5003                           ;MCU_16f1516_B1.c: 264: SSPIE=0;
  5004  05B5  0021               	movlb	1	; select bank1
  5005  05B6  1191               	bcf	17,3	;volatile
  5006                           
  5007                           ;MCU_16f1516_B1.c: 265: I2C->SlaveGO=1;
  5008  05B7  0020               	movlb	0	; select bank0
  5009  05B8  0838               	movf	_I2C,w
  5010  05B9  3E42               	addlw	66
  5011  05BA  0086               	movwf	6
  5012  05BB  3001               	movlw	1	; select bank2/3
  5013  05BC  0087               	movwf	7
  5014  05BD  1401               	bsf	1,0
  5015  05BE  0008               	return
  5016  05BF                     __end_of_I2C_ISR:	
  5017  007E                     btemp	set	126	;btemp
  5018  007E                     pic14e$flags	set	126
  5019  007E                     wtemp	set	126
  5020  007E                     wtemp0	set	126
  5021  0080                     wtemp1	set	128
  5022  0082                     wtemp2	set	130
  5023  0084                     wtemp3	set	132
  5024  0086                     wtemp4	set	134
  5025  0088                     wtemp5	set	136
  5026  007F                     wtemp6	set	127
  5027  007E                     ttemp	set	126
  5028  007E                     ttemp0	set	126
  5029  0081                     ttemp1	set	129
  5030  0084                     ttemp2	set	132
  5031  0087                     ttemp3	set	135
  5032  007F                     ttemp4	set	127
  5033  007E                     ltemp	set	126
  5034  007E                     ltemp0	set	126
  5035  0082                     ltemp1	set	130
  5036  0086                     ltemp2	set	134
  5037  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         122
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      9      62
    BANK1            80      0      32
    BANK2            80      0      67
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Timer1	PTR struct Timer1 size(1) Largest target is 3
		 -> NULL(NULL[0]), VarTimer1(BANK0[3]), 

    RFSW	PTR struct RFSW size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    RF	PTR struct RF size(1) Largest target is 2
		 -> NULL(NULL[0]), RF1(BANK0[2]), 

    I2C	PTR struct I2C size(1) Largest target is 67
		 -> NULL(NULL[0]), VarI2C(BANK2[67]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 

    TMain	PTR struct TMain size(1) Largest target is 15
		 -> NULL(NULL[0]), VarTMain(BANK0[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _RF_Main->_setRF_Main
    _setRF_Main->_CC2500_RxData
    _setRF_Main->_CC2500_TxData
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _Mcu_Initial->_I2C_Set
    _Mcu_Initial->_TMR1_Set
    _MainT->_setRF_Enable
    _setRF_Enable->_RF_RxDisable
    _RF_RxDisable->_CC2500_WriteCommand
    _I2C_Main->_I2C_SetData
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4583
              _CC2500_PowerOnInitial
                           _I2C_Main
                              _MainT
                      _MainT_Initial
                        _Mcu_Initial
                  _RF_Initialization
                            _RF_Main
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0    1538
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           2     2      0    1538
                                              6 BANK0      2     2      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                        _I2C_SetData
                       _RF_RxDisable
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     235
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     628
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     158
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     167
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initial                                          0     0      0       0
                            _I2C_Set
                            _INT_Set
                             _IO_Set
                           _TMR1_Set
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initial                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                2     2      0     449
                                              7 BANK0      1     1      0
                       _setRF_Enable
 ---------------------------------------------------------------------------------
 (2) _setRF_Enable                                         2     1      1     449
                                              5 BANK0      2     1      1
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     192
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RfPointSelect                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Main                                             1     1      0     489
                        _I2C_SetData
                     _I2C_Slave_Mode
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Mode                                       3     3      0     198
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _I2C_SetData                                          4     4      0     291
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    2107
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     464
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     458
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     393
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     260
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     495
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     396
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      99
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  1     1      0     119
                                              4 COMMON     1     1      0
                            _I2C_ISR
                            _INT_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0     119
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (8) _setRF_ReceiveGO                                      2     1      1     119
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (9) i1_RfPointSelect                                      2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _I2C_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _I2C_Main
     _I2C_SetData
     _I2C_Slave_Mode
   _MainT
     _setRF_Enable
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
   _MainT_Initial
   _Mcu_Initial
     _I2C_Set
     _INT_Set
     _IO_Set
     _TMR1_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _I2C_SetData
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _setINT_GO

 _ISR (ROOT)
   _I2C_ISR
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      AB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      9      3E       6       77.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      20       8       40.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      43      10       83.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      AB      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Sep 14 12:34:47 2014

                 ??_MainT_Initial 0054                                _BF 10A0                                _RF 0076  
         __end_of_CC2500_WriteREG 054F                               l302 03C2                               _I2C 0038  
                             l332 0583                               l333 0584                               l271 034B  
                             l344 0540                               l272 0350                               l362 0515  
                             l282 02CE                               l266 0327                               l275 0353  
                             l356 05E3                               l286 02DD                               l368 0472  
                             l299 03BD                               l762 0386                               l861 0299  
                             l862 0289                               l871 02AA                               l865 028D  
                             l859 02A3                               _CKP 10AC                               _GIE 005F  
                             _CRC 0037                               _RA0 0060                               _RA1 0061  
                             _RB0 0068                               _RB1 0069                               _RC0 0070  
                             _RB2 006A                               _RB3 006B                               _RB5 006D  
                             _RF1 0052                               _PEN 10B2                               _ISR 0004  
                             _SEN 10B0                   __end_of_I2C_ISR 05BF          __end_of_CC2500_WriteByte 058D  
                 __end_of_I2C_Set 0539              __size_of_I2C_SetData 006D                               wreg 0009  
                            ?_ISR 0071                              l3025 027D                              l3127 0396  
                            l3049 02C5                              l3161 0453                              l3089 013D  
                            l2841 0054                              l2817 03D8                              l2737 0336  
                            l2851 0089                              l2683 0503                              l2771 0300  
                   ??_Mcu_Initial 0055                              l2685 0507                              l2941 00BE  
                            l2863 00A5                              l2847 006C                              l2871 04A2  
                            l2783 0313                              l2857 008E                              l2769 02EB  
                            l2795 0483                              l2963 00F4                              l2797 048E  
                            l2949 00CE                              l2967 00FF                              _AHEN 10B9  
                            _DHEN 10B8                              _LATA 010C                              _LATB 010D  
                 __end_of_INT_ISR 0602                              _LATC 010E                              u3035 012B  
                            u3045 0151                              u2560 062A                              u2705 0478  
                            _PEIE 005E                              _INTE 005C                              _INTF 0059  
                            _RCEN 10B3                              _RFSW 0077                   __end_of_INT_Set 0643  
                            _RSSI 0039                              _R_nW 10A2                              _main 0447  
                 __end_of_RF_Main 0647                  __end_of_I2C_Main 039A                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            ltemp 007E     __size_of_setRF_Initialization 0006                              start 0018  
                            ttemp 007E                              wtemp 007E                     _RfPointSelect 060E  
                           ??_ISR 0075                             ?_main 0071                             _ACKEN 10B4  
                   __CFG_WDTE$OFF 0000                             _T1CON 0018     __size_of_CC2500_FrequencyCabr 000C  
                           _TMR1H 0017                             _TMR1L 0016                             _PORTA 000C  
                           _PORTB 000D                             _PORTC 000E                             _TRISA 008C  
                           _TRISB 008D                             _TRISC 008E                             _SSPIE 048B  
                           _SSPIF 008B                             _WPUB0 1068                             _SSPOV 10AE  
                           _TMain 005D                             _MainT 0114                     __CFG_WRT$BOOT 0000  
                __end_of_TMR1_ISR 0447      __size_of_CC2500_WriteCommand 000E                  __end_of_TMR1_Set 05AF  
     __size_of_CC2500_ClearRXFIFO 0004       __size_of_CC2500_ClearTXFIFO 0004               CC2500_RxData@loop_f 0059  
                  __pbitbssCOMMON 0380                  ?_CC2500_ReadByte 0071                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
               ?_CC2500_SIDLEMode 0071        __size_of_RF_Initialization 0004                    ?_RfPointSelect 0071  
             __end_of_Mcu_Initial 059F                ??_CC2500_SIDLEMode 0058                   __initialization 001A  
                ?_CC2500_PowerRST 0071                      __end_of_main 046D                         ??_I2C_ISR 0071  
                ?_CC2500_WriteREG 0056                         ??_I2C_Set 0054                            ??_main 005D  
                      _Receive_GO 0381                        _Receive_OK 0382                            ?_MainT 0071  
                       ??_INT_ISR 0075                         ??_INT_Set 0054                 i1RfPointSelect@rf 0072  
                       ??_RF_Main 005C                    setRF_Enable@rf 005A                            _ANSELA 018C  
                          _ANSELB 018D                            _ANSELC 018E                            u194_25 043A  
                          _OSCCON 0099                            _TMR1IE 0488                            _TMR1IF 0088  
                          _IO_Set 054F                            _SSPADD 0212                            _SSPBUF 0211  
              DelayTime_1us@count 0054                        _VarProduct 00A0    __size_of_CC2500_PowerOnInitial 0015  
   __end_of_CC2500_PowerOnInitial 0579                            _VarI2C 0120                            _Timer1 0078  
                 i1_RfPointSelect 0619                            _r_data 003E                            _s_data 003F  
                       ?_I2C_Main 0071                  ??_setRF_RxStatus 0057                     ?_setRF_Enable 0059  
                     _Mcu_Initial 058D       __size_of_CC2500_InitPATable 001F               CC2500_TxData@loop_e 0059  
__end_of_CC2500_registers_address 022F           __end_of__initialization 0039                   ??_RfPointSelect 0054  
                   __end_of_MainT 017D                    __pcstackCOMMON 0071                      __pidataBANK1 04B7  
         __size_of_I2C_Slave_Mode 0066                         ?_TMR1_ISR 0071                         ?_TMR1_Set 0071  
        __size_of_setRF_ReceiveGO 000C                        ??_I2C_Main 0058                 ?_CC2500_WriteByte 0071  
                         ??_MainT 005B                    ??_setRF_Enable 005A                ??_CC2500_WriteByte 0054  
                      __pbssBANK0 0020                        __pbssBANK2 0120                           ?_IO_Set 0071  
                      __pnvCOMMON 0079                    DelayTime_1us@i 0056                    DelayTime_1us@j 0058  
         __end_ofi1_RfPointSelect 0623                __size_of_setINT_GO 0009                        __pmaintext 0447  
             _CC2500_WriteCommand 05DC                        ??_TMR1_ISR 0071                        ??_TMR1_Set 0054  
                      __pintentry 0004                           _I2C_ISR 05AF                           _ACKSTAT 10B6  
                         _I2C_Set 0523            __size_of_DelayTime_1us 0026             __end_of_MainT_Initial 05CE  
                    I2C_SetData@i 0057                     ??_I2C_SetData 0054      __end_of_setRF_Initialization 063E  
                         _INT_ISR 05F6                           _INT_Set 063E              ?_CC2500_WriteCommand 0071  
          __size_of_CC2500_RxData 0055            __size_of_CC2500_TxData 003D                           _RF_Data 0020  
                         _SSPCON1 0215                           _SSPCON2 0216                           _RF_Main 0643  
                         _SSPSTAT 0214      __end_of_CC2500_FrequencyCabr 05F6                   __size_of_IO_Set 0015  
        _CC2500_registers_address 0200                    RF_RxDisable@rf 0058                           _Product 0079  
                         __ptext1 0643                           __ptext2 00AA                           __ptext3 0321  
                         __ptext4 02CC                           __ptext5 05CE                           __ptext6 050D  
                         __ptext7 04F6                           __ptext8 0647                           __ptext9 0638  
       __size_of_CC2500_SIDLEMode 0004                      __size_of_ISR 0014                        _setRF_Main 00AA  
              I2C_SetData@command 0056                 __end_of_setINT_GO 062C             ??_CC2500_WriteCommand 0056  
               ??_setRF_ReceiveGO 0074        __end_of_CC2500_ClearRXFIFO 0657        __end_of_CC2500_ClearTXFIFO 0653  
             __end_of_I2C_SetData 00AA                           clrloop0 062D              end_of_initialization 0039  
               _CC2500_InitSetREG 03F4                     _DelayTime_1us 046D                           init_ram 0632  
              ?_CC2500_InitSetREG 0071                           initloop 0633             CC2500_ReadByte@loop_b 0055  
               _CC2500_ReadStatus 050D                     _CC2500_Enable 0380                  ?i1_RfPointSelect 0071  
              ?_CC2500_ReadStatus 0071          __size_of_CC2500_ReadByte 0017                     _CC2500_RxData 02CC  
                   _CC2500_TxData 0321               ??_CC2500_InitSetREG 0059              __end_of_setRF_Enable 04B7  
                  _I2C_Slave_Mode 0266                      __pstringtext 0200               ??_CC2500_ReadStatus 0056  
          setRF_Initialization@rf 0071           CC2500_InitSetREG@loop_c 005C          __size_of_CC2500_PowerRST 002E  
                __CFG_FOSC$INTOSC 0000          __size_of_CC2500_WriteREG 0016                 __size_of_I2C_Main 003C  
       __end_of_CC2500_InitSetREG 041E                    ?_DelayTime_1us 0054                      ?_Mcu_Initial 0071  
       __end_of_CC2500_ReadStatus 0523                     ?_RF_RxDisable 0071                    __end_of_IO_Set 0564  
            _setRF_Initialization 0638            __end_of_I2C_Slave_Mode 02CC                    ?_CC2500_RxData 0071  
                  ?_CC2500_TxData 0071             _CC2500_PowerOnInitial 0564                      setRF_Main@rf 005B  
               __size_of_TMR1_ISR 0029                 __size_of_TMR1_Set 0010                       _I2C_SetData 003D  
            _CC2500_FrequencyCabr 05EA                       ?_setRF_Main 0071               start_initialization 001A  
                     __end_of_ISR 0018        __end_of_CC2500_InitPATable 04F6                    ??_RF_RxDisable 0058  
                 RfPointSelect@rf 0055                          ??_IO_Set 0054             ?_setRF_Initialization 0071  
           __end_of_RfPointSelect 0619         __size_of_CC2500_WriteByte 0014                         _VarTimer1 004F  
                 ?_I2C_Slave_Mode 0071                         _Rx_Length 003A                         _Tx_Length 003C  
                     __pdataBANK1 00A0                          ?_I2C_ISR 0071                          ?_I2C_Set 0071  
               ??_CC2500_ReadByte 0054                  _CC2500_SIDLEMode 064B             ?_CC2500_FrequencyCabr 0071  
                setINT_GO@command 0054                       __pbssCOMMON 0076                         ___latbits 0002  
                        ?_INT_ISR 0071               setRF_Enable@command 0059                     __pcstackBANK0 0054  
                        ?_INT_Set 0071                   ??_DelayTime_1us 0056        __size_of_CC2500_InitSetREG 002A  
               ??_CC2500_PowerRST 005A                          ?_RF_Main 0071        __size_of_CC2500_ReadStatus 0016  
               ??_CC2500_WriteREG 0057             CC2500_WriteREG@w_addr 0058             __size_of_setRF_Enable 0024  
                 ??_CC2500_RxData 0058           __size_of_setRF_RxStatus 000E                   ??_CC2500_TxData 0058  
                       __pnvBANK0 005D            ?_CC2500_PowerOnInitial 0071               __size_of_setRF_Main 006A  
                 _setRF_ReceiveGO 0602      CC2500_ReadStatus@status_addr 0057                          _I2C_Main 035E  
          CC2500_WriteByte@loop_a 0055                    __size_of_MainT 0069                         _r_address 003D  
    __end_of_CC2500_patable_vaule 0266                      _setRF_Enable 0493                         _setINT_GO 0623  
          ??_setRF_Initialization 0054                 _CC2500_rfSettings 022F            __size_of_MainT_Initial 000F  
            __size_of_Mcu_Initial 0012                         clear_ram0 062C          CC2500_InitPATable@loop_d 005B  
              _CC2500_ClearRXFIFO 0653                _CC2500_ClearTXFIFO 064F            setRF_ReceiveGO@command 0073  
                        _TMR1_ISR 041E            CC2500_InitSetREG@temp1 005A            CC2500_InitSetREG@temp2 005B  
               setRF_ReceiveGO@rf 0074                          _TMR1_Set 059F               ?_CC2500_ClearRXFIFO 0071  
             ?_CC2500_ClearTXFIFO 0071                          _RF_Count 0035              __end_of_RF_RxDisable 03F4  
     __end_of_CC2500_WriteCommand 05EA            ??_CC2500_FrequencyCabr 005A                  __size_of_I2C_ISR 0010  
                __size_of_I2C_Set 0016                  __size_of_INT_ISR 000C                  __size_of_INT_Set 0005  
                      ?_setINT_GO 0071              ??_CC2500_ClearRXFIFO 0058              ??_CC2500_ClearTXFIFO 0058  
       __end_of_CC2500_rfSettings 025E                  __size_of_RF_Main 0004                  _CC2500_WriteByte 0579  
                        _VarTMain 0040           __end_of_setRF_ReceiveGO 060E                          _RxStatus 0383  
                        _TxStatus 0386          __size_ofi1_RfPointSelect 000A                     _MainT_Initial 05BF  
                    ?_I2C_SetData 0071                      ??_setRF_Main 005A              CC2500_WriteREG@value 0056  
                        __ptext10 058D                          __ptext11 059F                          __ptext20 060E  
                        __ptext12 054F                          __ptext21 035E                          __ptext13 063E  
                        __ptext30 05EA                          __ptext22 0266                          __ptext14 0523  
                        __ptext31 046D                          __ptext23 003D                          __ptext15 05BF  
                        __ptext40 0619                          __ptext32 064F                          __ptext24 0564  
                        __ptext16 0114                          __ptext41 05AF                          __ptext33 0653  
                        __ptext25 064B                          __ptext17 0493                          __ptext34 05DC  
                        __ptext26 039A                          __ptext18 03C8                          __ptext35 0579  
                        __ptext27 03F4                          __ptext19 0623                          __ptext28 04D7  
                        __ptext37 041E                          __ptext29 0539                          __ptext38 05F6  
                        __ptext39 0602                  ??_I2C_Slave_Mode 0054                     __size_of_main 0026  
        __end_of_CC2500_SIDLEMode 064F                    _setRF_RxStatus 05CE        CC2500_WriteCommand@command 0057  
                 _CC2500_ReadByte 04F6                _CC2500_InitPATable 04D7                __end_of_setRF_Main 0114  
            _CC2500_patable_vaule 025E               ?_CC2500_InitPATable 0071                    ?_MainT_Initial 0071  
                 _CC2500_PowerRST 039A             setRF_RxStatus@command 0056                   _CC2500_WriteREG 0539  
                   _Transceive_GO 0384                     _Transceive_OK 0385                       pic14e$flags 007E  
                     ??_setINT_GO 0054                          intlevel1 0000              ??_CC2500_InitPATable 0059  
          __end_of_setRF_RxStatus 05DC           ??_CC2500_PowerOnInitial 005D                  ?_setRF_ReceiveGO 0073  
          CC2500_InitPATable@temp 005A             __size_of_RF_RxDisable 002C                 _RF_Initialization 0647  
              ?_RF_Initialization 0071                        _SPI0Buffer 003B               ??_RF_Initialization 0055  
                 I2C_Slave_Mode@i 0056            __size_of_RfPointSelect 000B                 ??i1_RfPointSelect 0071  
           __end_of_DelayTime_1us 0493           __end_of_CC2500_ReadByte 050D                   ?_setRF_RxStatus 0056  
                    _RF_RxDisable 03C8         __end_of_RF_Initialization 064B                  setRF_RxStatus@rf 0057  
           __end_of_CC2500_RxData 0321             __end_of_CC2500_TxData 035E           __end_of_CC2500_PowerRST 03C8  
