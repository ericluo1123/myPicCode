

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Aug 29 09:24:38 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1516
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 7 "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 7 "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    51  8007  FFE4               	dw 0xFFFC & 0xFFE7 ;#
    52                           # 8 "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 8 "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    55  8008  FFFE               	dw 0xFFFF & 0xFFFE ;#
    56                           	FNCALL	_main,_MainT_Initial
    57                           	FNCALL	_main,_Mcu_Initial
    58                           	FNCALL	_main,_RF_Initialization
    59                           	FNCALL	_main,_CC2500_PowerOnInitial
    60                           	FNCALL	_main,_MainT
    61                           	FNCALL	_main,_RF_Main
    62                           	FNCALL	_main,_I2C_Main
    63                           	FNCALL	_MainT,_setRF_Enable
    64                           	FNCALL	_RF_Main,_setRF_Main
    65                           	FNCALL	_setRF_Enable,_RfPointSelect
    66                           	FNCALL	_setRF_Enable,_CC2500_WriteCommand
    67                           	FNCALL	_setRF_Enable,_RF_RxDisable
    68                           	FNCALL	_setRF_Main,_RfPointSelect
    69                           	FNCALL	_setRF_Main,_RF_RxDisable
    70                           	FNCALL	_setRF_Main,_CC2500_RxData
    71                           	FNCALL	_setRF_Main,_I2C_SetData
    72                           	FNCALL	_setRF_Main,_CC2500_TxData
    73                           	FNCALL	_setRF_Main,_CC2500_WriteCommand
    74                           	FNCALL	_setRF_Main,_setINT_GO
    75                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_PowerRST
    76                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_InitSetREG
    77                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_InitPATable
    78                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_ClearTXFIFO
    79                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_ClearRXFIFO
    80                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_FrequencyCabr
    81                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_SIDLEMode
    82                           	FNCALL	_RF_RxDisable,_RfPointSelect
    83                           	FNCALL	_RF_RxDisable,_CC2500_WriteCommand
    84                           	FNCALL	_RF_RxDisable,_setINT_GO
    85                           	FNCALL	_CC2500_SIDLEMode,_CC2500_WriteCommand
    86                           	FNCALL	_CC2500_FrequencyCabr,_CC2500_WriteCommand
    87                           	FNCALL	_CC2500_FrequencyCabr,_DelayTime_1us
    88                           	FNCALL	_CC2500_ClearRXFIFO,_CC2500_WriteCommand
    89                           	FNCALL	_CC2500_ClearTXFIFO,_CC2500_WriteCommand
    90                           	FNCALL	_CC2500_InitPATable,_CC2500_WriteREG
    91                           	FNCALL	_CC2500_InitSetREG,_CC2500_WriteREG
    92                           	FNCALL	_CC2500_RxData,_CC2500_ReadStatus
    93                           	FNCALL	_CC2500_RxData,_CC2500_WriteByte
    94                           	FNCALL	_CC2500_RxData,_CC2500_ReadByte
    95                           	FNCALL	_CC2500_RxData,_CC2500_WriteCommand
    96                           	FNCALL	_CC2500_RxData,_setRF_RxStatus
    97                           	FNCALL	_CC2500_TxData,_CC2500_WriteByte
    98                           	FNCALL	_CC2500_TxData,_CC2500_WriteCommand
    99                           	FNCALL	_I2C_Main,_I2C_Slave_Mode
   100                           	FNCALL	_I2C_Main,_I2C_SetData
   101                           	FNCALL	_Mcu_Initial,_IO_Set
   102                           	FNCALL	_Mcu_Initial,_TMR1_Set
   103                           	FNCALL	_Mcu_Initial,_INT_Set
   104                           	FNCALL	_Mcu_Initial,_I2C_Set
   105                           	FNCALL	_RF_Initialization,_setRF_Initialization
   106                           	FNCALL	_CC2500_WriteREG,_CC2500_WriteByte
   107                           	FNCALL	_CC2500_PowerRST,_DelayTime_1us
   108                           	FNCALL	_CC2500_PowerRST,_CC2500_WriteByte
   109                           	FNCALL	_setRF_RxStatus,_RfPointSelect
   110                           	FNCALL	_CC2500_ReadStatus,_CC2500_WriteByte
   111                           	FNCALL	_CC2500_ReadStatus,_CC2500_ReadByte
   112                           	FNCALL	_CC2500_WriteCommand,_CC2500_WriteByte
   113                           	FNROOT	_main
   114                           	FNCALL	_ISR,_TMR1_ISR
   115                           	FNCALL	_ISR,_INT_ISR
   116                           	FNCALL	_ISR,_I2C_ISR
   117                           	FNCALL	_INT_ISR,_setRF_ReceiveGO
   118                           	FNCALL	_setRF_ReceiveGO,i1_RfPointSelect
   119                           	FNCALL	intlevel1,_ISR
   120                           	global	intlevel1
   121                           	FNROOT	intlevel1
   122                           	global	_VarProduct
   123                           psect	idataBANK1,class=CODE,space=0,delta=2
   124                           global __pidataBANK1
   125  056C                     __pidataBANK1:
   126                           	file	"G:\Program\PIC\0.myFile\myDevelopment-BH\Release\../Release/myDevelopment-B.h"
   127                           	line	230
   128                           
   129                           ;initializer for _VarProduct
   130  056C  3463               	retlw	063h
   131  056D  3402               	retlw	02h
   132  056E  3400               	retlw	0
   133  056F  3400               	retlw	0
   134  0570  3400               	retlw	0
   135  0571  3400               	retlw	0
   136  0572  3400               	retlw	0
   137  0573  3400               	retlw	0
   138  0574  3400               	retlw	0
   139  0575  3400               	retlw	0
   140  0576  3400               	retlw	0
   141  0577  3400               	retlw	0
   142  0578  34FF               	retlw	0FFh
   143  0579  34FF               	retlw	0FFh
   144  057A  34FF               	retlw	0FFh
   145  057B  3400               	retlw	0
   146  057C  3400               	retlw	0
   147  057D  3400               	retlw	0
   148  057E  3400               	retlw	0
   149  057F  3400               	retlw	0
   150  0580  3400               	retlw	0
   151  0581  3400               	retlw	0
   152  0582  3400               	retlw	0
   153  0583  3400               	retlw	0
   154  0584  3400               	retlw	0
   155  0585  3400               	retlw	0
   156  0586  3400               	retlw	0
   157  0587  3400               	retlw	0
   158  0588  3400               	retlw	0
   159  0589  3400               	retlw	0
   160  058A  3400               	retlw	0
   161  058B  3400               	retlw	0
   162                           	global	_CC2500_registers_address
   163                           psect	strings,class=STRING,delta=2
   164                           global __pstrings
   165  028E                     __pstrings:
   166                           	global    __stringtab
   167  028E                     __stringtab:
   168  028E  3400               	retlw	0
   169                           psect	strings
   170                           	file	"G:\Program\PIC\Header_File\CC2500_B1.h"
   171                           	line	218
   172  028F                     _CC2500_registers_address:
   173  028F  3403               	retlw	03h
   174  0290  3416               	retlw	016h
   175  0291  3417               	retlw	017h
   176  0292  341E               	retlw	01Eh
   177  0293  341F               	retlw	01Fh
   178  0294  3420               	retlw	020h
   179  0295  342A               	retlw	02Ah
   180  0296  342B               	retlw	02Bh
   181  0297  340B               	retlw	0Bh
   182  0298  340C               	retlw	0Ch
   183  0299  340D               	retlw	0Dh
   184  029A  340E               	retlw	0Eh
   185  029B  340F               	retlw	0Fh
   186  029C  3410               	retlw	010h
   187  029D  3411               	retlw	011h
   188  029E  3412               	retlw	012h
   189  029F  3413               	retlw	013h
   190  02A0  3414               	retlw	014h
   191  02A1  340A               	retlw	0Ah
   192  02A2  3415               	retlw	015h
   193  02A3  3421               	retlw	021h
   194  02A4  3422               	retlw	022h
   195  02A5  3418               	retlw	018h
   196  02A6  3419               	retlw	019h
   197  02A7  341A               	retlw	01Ah
   198  02A8  341B               	retlw	01Bh
   199  02A9  341C               	retlw	01Ch
   200  02AA  341D               	retlw	01Dh
   201  02AB  3423               	retlw	023h
   202  02AC  3424               	retlw	024h
   203  02AD  3425               	retlw	025h
   204  02AE  3426               	retlw	026h
   205  02AF  3429               	retlw	029h
   206  02B0  342C               	retlw	02Ch
   207  02B1  342D               	retlw	02Dh
   208  02B2  342E               	retlw	02Eh
   209  02B3  3400               	retlw	0
   210  02B4  3401               	retlw	01h
   211  02B5  3402               	retlw	02h
   212  02B6  3407               	retlw	07h
   213  02B7  3408               	retlw	08h
   214  02B8  3409               	retlw	09h
   215  02B9  3406               	retlw	06h
   216  02BA  3404               	retlw	04h
   217  02BB  3405               	retlw	05h
   218  02BC  3427               	retlw	027h
   219  02BD  3428               	retlw	028h
   220                           	global	_CC2500_rfSettings
   221                           psect	strings
   222                           	file	"G:\Program\PIC\Header_File\CC2500_B1.h"
   223                           	line	161
   224  02BE                     _CC2500_rfSettings:
   225  02BE  3407               	retlw	07h
   226  02BF  3407               	retlw	07h
   227  02C0  3430               	retlw	030h
   228  02C1  3487               	retlw	087h
   229  02C2  346B               	retlw	06Bh
   230  02C3  34F8               	retlw	0F8h
   231  02C4  347F               	retlw	07Fh
   232  02C5  343F               	retlw	03Fh
   233  02C6  3409               	retlw	09h
   234  02C7  3400               	retlw	0
   235  02C8  345C               	retlw	05Ch
   236  02C9  34A7               	retlw	0A7h
   237  02CA  3462               	retlw	062h
   238  02CB  3486               	retlw	086h
   239  02CC  3483               	retlw	083h
   240  02CD  3403               	retlw	03h
   241  02CE  3422               	retlw	022h
   242  02CF  34F8               	retlw	0F8h
   243  02D0  3400               	retlw	0
   244  02D1  3444               	retlw	044h
   245  02D2  34B6               	retlw	0B6h
   246  02D3  3410               	retlw	010h
   247  02D4  3418               	retlw	018h
   248  02D5  341D               	retlw	01Dh
   249  02D6  341C               	retlw	01Ch
   250  02D7  34C7               	retlw	0C7h
   251  02D8  3400               	retlw	0
   252  02D9  34B2               	retlw	0B2h
   253  02DA  34EA               	retlw	0EAh
   254  02DB  340A               	retlw	0Ah
   255  02DC  3400               	retlw	0
   256  02DD  3411               	retlw	011h
   257  02DE  3459               	retlw	059h
   258  02DF  3488               	retlw	088h
   259  02E0  3431               	retlw	031h
   260  02E1  340B               	retlw	0Bh
   261  02E2  342F               	retlw	02Fh
   262  02E3  342E               	retlw	02Eh
   263  02E4  3406               	retlw	06h
   264  02E5  3404               	retlw	04h
   265  02E6  3405               	retlw	05h
   266  02E7  3400               	retlw	0
   267  02E8  3430               	retlw	030h
   268  02E9  34D3               	retlw	0D3h
   269  02EA  3491               	retlw	091h
   270  02EB  3441               	retlw	041h
   271  02EC  3400               	retlw	0
   272                           	global	_CC2500_patable_vaule
   273                           psect	strings
   274                           	file	"G:\Program\PIC\Header_File\CC2500_B1.h"
   275                           	line	292
   276  02ED                     _CC2500_patable_vaule:
   277  02ED  34FE               	retlw	0FEh
   278  02EE  34FE               	retlw	0FEh
   279  02EF  34FE               	retlw	0FEh
   280  02F0  34FE               	retlw	0FEh
   281  02F1  34FE               	retlw	0FEh
   282  02F2  34FE               	retlw	0FEh
   283  02F3  34FE               	retlw	0FEh
   284  02F4  34FE               	retlw	0FEh
   285                           	global	_CC2500_registers_address
   286                           	global	_CC2500_rfSettings
   287                           	global	_CC2500_patable_vaule
   288                           	global	_RF_Data
   289                           	global	_RF_Count
   290                           	global	_CRC
   291                           	global	_I2C
   292                           	global	_RSSI
   293                           	global	_Rx_Length
   294                           	global	_SPI0Buffer
   295                           	global	_Tx_Length
   296                           	global	_r_address
   297                           	global	_r_data
   298                           	global	_s_data
   299                           	global	_RF
   300                           	global	_RFSW
   301                           	global	_Timer1
   302                           	global	_CC2500_Enable
   303                           	global	_Receive_GO
   304                           	global	_Receive_OK
   305                           	global	_RxStatus
   306                           	global	_Transceive_GO
   307                           	global	_Transceive_OK
   308                           	global	_TxStatus
   309                           	global	_VarTMain
   310                           	global	_VarTimer1
   311                           	global	_RF1
   312                           	global	_VarI2C
   313                           	global	_TMain
   314                           psect	nvBANK0,class=BANK0,space=1
   315                           global __pnvBANK0
   316  005D                     __pnvBANK0:
   317  005D                     _TMain:
   318  005D                            ds      1
   319                           
   320                           	global	_Product
   321                           psect	nvCOMMON,class=COMMON,space=1
   322                           global __pnvCOMMON
   323  0079                     __pnvCOMMON:
   324  0079                     _Product:
   325  0079                            ds      1
   326                           
   327                           	global	_PORTA
   328  000C                     _PORTA	set	12
   329                           	global	_PORTB
   330  000D                     _PORTB	set	13
   331                           	global	_PORTC
   332  000E                     _PORTC	set	14
   333                           	global	_T1CON
   334  0018                     _T1CON	set	24
   335                           	global	_TMR1H
   336  0017                     _TMR1H	set	23
   337                           	global	_TMR1L
   338  0016                     _TMR1L	set	22
   339                           	global	_GIE
   340  005F                     _GIE	set	95
   341                           	global	_INTE
   342  005C                     _INTE	set	92
   343                           	global	_INTF
   344  0059                     _INTF	set	89
   345                           	global	_PEIE
   346  005E                     _PEIE	set	94
   347                           	global	_RA0
   348  0060                     _RA0	set	96
   349                           	global	_RA1
   350  0061                     _RA1	set	97
   351                           	global	_RB0
   352  0068                     _RB0	set	104
   353                           	global	_RB1
   354  0069                     _RB1	set	105
   355                           	global	_RB2
   356  006A                     _RB2	set	106
   357                           	global	_RB3
   358  006B                     _RB3	set	107
   359                           	global	_RB5
   360  006D                     _RB5	set	109
   361                           	global	_RC0
   362  0070                     _RC0	set	112
   363                           	global	_SSPIF
   364  008B                     _SSPIF	set	139
   365                           	global	_TMR1IF
   366  0088                     _TMR1IF	set	136
   367                           	global	_OSCCON
   368  0099                     _OSCCON	set	153
   369                           	global	_TRISA
   370  008C                     _TRISA	set	140
   371                           	global	_TRISB
   372  008D                     _TRISB	set	141
   373                           	global	_TRISC
   374  008E                     _TRISC	set	142
   375                           	global	_SSPIE
   376  048B                     _SSPIE	set	1163
   377                           	global	_TMR1IE
   378  0488                     _TMR1IE	set	1160
   379                           	global	_LATA
   380  010C                     _LATA	set	268
   381                           	global	_LATB
   382  010D                     _LATB	set	269
   383                           	global	_LATC
   384  010E                     _LATC	set	270
   385                           	global	_ANSELA
   386  018C                     _ANSELA	set	396
   387                           	global	_ANSELB
   388  018D                     _ANSELB	set	397
   389                           	global	_ANSELC
   390  018E                     _ANSELC	set	398
   391                           	global	_SSPADD
   392  0212                     _SSPADD	set	530
   393                           	global	_SSPBUF
   394  0211                     _SSPBUF	set	529
   395                           	global	_SSPCON1
   396  0215                     _SSPCON1	set	533
   397                           	global	_SSPCON2
   398  0216                     _SSPCON2	set	534
   399                           	global	_SSPSTAT
   400  0214                     _SSPSTAT	set	532
   401                           	global	_ACKEN
   402  10B4                     _ACKEN	set	4276
   403                           	global	_ACKSTAT
   404  10B6                     _ACKSTAT	set	4278
   405                           	global	_AHEN
   406  10B9                     _AHEN	set	4281
   407                           	global	_BF
   408  10A0                     _BF	set	4256
   409                           	global	_CKP
   410  10AC                     _CKP	set	4268
   411                           	global	_DHEN
   412  10B8                     _DHEN	set	4280
   413                           	global	_PEN
   414  10B2                     _PEN	set	4274
   415                           	global	_RCEN
   416  10B3                     _RCEN	set	4275
   417                           	global	_R_nW
   418  10A2                     _R_nW	set	4258
   419                           	global	_SEN
   420  10B0                     _SEN	set	4272
   421                           	global	_SSPOV
   422  10AE                     _SSPOV	set	4270
   423                           	global	_WPUB0
   424  1068                     _WPUB0	set	4200
   425                           	file	"myDevelopment-BC.as"
   426                           	line	#
   427                           psect cinit,class=CODE,delta=2
   428                           global start_initialization
   429  0528                     start_initialization:
   430                           
   431                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   432                           global __pbitbssCOMMON
   433  0380                     __pbitbssCOMMON:
   434  0380                     _CC2500_Enable:
   435  0380                            ds      1
   436                           
   437  0381                     _Receive_GO:
   438  0381                            ds      1
   439                           
   440  0382                     _Receive_OK:
   441  0382                            ds      1
   442                           
   443  0383                     _RxStatus:
   444  0383                            ds      1
   445                           
   446  0384                     _Transceive_GO:
   447  0384                            ds      1
   448                           
   449  0385                     _Transceive_OK:
   450  0385                            ds      1
   451                           
   452  0386                     _TxStatus:
   453  0386                            ds      1
   454                           
   455                           psect	bssCOMMON,class=COMMON,space=1
   456                           global __pbssCOMMON
   457  0076                     __pbssCOMMON:
   458  0076                     _RF:
   459  0076                            ds      1
   460                           
   461  0077                     _RFSW:
   462  0077                            ds      1
   463                           
   464  0078                     _Timer1:
   465  0078                            ds      1
   466                           
   467                           psect	bssBANK0,class=BANK0,space=1
   468                           global __pbssBANK0
   469  0020                     __pbssBANK0:
   470  0020                     _RF_Data:
   471  0020                            ds      21
   472                           
   473  0035                     _RF_Count:
   474  0035                            ds      2
   475                           
   476  0037                     _CRC:
   477  0037                            ds      1
   478                           
   479  0038                     _I2C:
   480  0038                            ds      1
   481                           
   482  0039                     _RSSI:
   483  0039                            ds      1
   484                           
   485  003A                     _Rx_Length:
   486  003A                            ds      1
   487                           
   488  003B                     _SPI0Buffer:
   489  003B                            ds      1
   490                           
   491  003C                     _Tx_Length:
   492  003C                            ds      1
   493                           
   494  003D                     _r_address:
   495  003D                            ds      1
   496                           
   497  003E                     _r_data:
   498  003E                            ds      1
   499                           
   500  003F                     _s_data:
   501  003F                            ds      1
   502                           
   503  0040                     _VarTMain:
   504  0040                            ds      15
   505                           
   506  004F                     _VarTimer1:
   507  004F                            ds      3
   508                           
   509  0052                     _RF1:
   510  0052                            ds      2
   511                           
   512                           psect	dataBANK1,class=BANK1,space=1
   513                           global __pdataBANK1
   514  00A0                     __pdataBANK1:
   515                           	file	"G:\Program\PIC\0.myFile\myDevelopment-BH\Release\../Release/myDevelopment-B.h"
   516                           	line	230
   517  00A0                     _VarProduct:
   518  00A0                            ds      32
   519                           
   520                           psect	bssBANK2,class=BANK2,space=1
   521                           global __pbssBANK2
   522  0120                     __pbssBANK2:
   523  0120                     _VarI2C:
   524  0120                            ds      67
   525                           
   526                           psect clrtext,class=CODE,delta=2
   527                           global clear_ram
   528                           ;	Called with FSR0 containing the base address, and
   529                           ;	WREG with the size to clear
   530  06BE                     clear_ram:
   531  06BE  0064               	clrwdt			;clear the watchdog before getting into this loop
   532  06BF                     clrloop:
   533  06BF  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   534  06C0  3101               	addfsr	0,1
   535  06C1  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   536  06C2  2EBF               	goto clrloop	;have we reached the end yet?
   537  06C3  3400               	retlw	0		;all done for this memory range, return
   538                           ; Clear objects allocated to BITCOMMON
   539                           psect cinit,class=CODE,delta=2
   540                           	global __pbitbssCOMMON
   541  0528  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   542                           ; Clear objects allocated to COMMON
   543                           psect cinit,class=CODE,delta=2
   544                           	global __pbssCOMMON
   545  0529  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   546  052A  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   547  052B  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   548                           ; Clear objects allocated to BANK0
   549                           psect cinit,class=CODE,delta=2
   550                           	global __pbssBANK0
   551  052C  3020               	movlw	low(__pbssBANK0)
   552  052D  0084               	movwf	fsr0l
   553  052E  3000               	movlw	high(__pbssBANK0)
   554  052F  0085               	movwf	fsr0h
   555  0530  3034               	movlw	034h
   556  0531  3186  26BE  3185   	fcall	clear_ram
   557                           ; Clear objects allocated to BANK2
   558                           psect cinit,class=CODE,delta=2
   559                           	global __pbssBANK2
   560  0534  3020               	movlw	low(__pbssBANK2)
   561  0535  0084               	movwf	fsr0l
   562  0536  3001               	movlw	high(__pbssBANK2)
   563  0537  0085               	movwf	fsr0h
   564  0538  3043               	movlw	043h
   565  0539  3186  26BE  3185   	fcall	clear_ram
   566                           psect inittext,class=CODE,delta=2
   567                           global init_ram,btemp
   568  06C4                     init_ram:
   569  06C4  00FE               	movwf btemp,f
   570  06C5                     initloop:
   571  06C5  0012               	moviw fsr0++
   572  06C6  001E               	movwi fsr1++
   573  06C7  0BFE               	decfsz btemp
   574  06C8  2EC5               	goto initloop
   575  06C9  3400               	retlw 0
   576                           ; Initialize objects allocated to BANK1
   577                           	global __pidataBANK1,__pdataBANK1
   578                           psect cinit,class=CODE,delta=2
   579  053C  306C               	movlw low(__pidataBANK1)
   580  053D  0084               	movwf fsr0l
   581  053E  3085               	movlw high(__pidataBANK1)|80h
   582  053F  0085               	movwf fsr0h
   583  0540  30A0               	movlw low(__pdataBANK1)
   584  0541  0086               	movwf fsr1l
   585  0542  3000               	movlw high(__pdataBANK1)
   586  0543  0087               	movwf fsr1h
   587  0544  3020               	movlw 020h
   588  0545  3186  26C4  3185   	fcall init_ram
   589                           psect cinit,class=CODE,delta=2
   590                           global end_of_initialization
   591                           
   592                           ;End of C runtime variable initialization code
   593                           
   594  0548                     end_of_initialization:
   595  0548  0020               movlb 0
   596  0549  3184  2C56         ljmp _main	;jump to C main() function
   597                           psect	cstackCOMMON,class=COMMON,space=1
   598                           global __pcstackCOMMON
   599  0071                     __pcstackCOMMON:
   600                           	global	?_CC2500_WriteByte
   601  0071                     ?_CC2500_WriteByte:	; 0 bytes @ 0x0
   602                           	global	?_CC2500_WriteCommand
   603  0071                     ?_CC2500_WriteCommand:	; 0 bytes @ 0x0
   604                           	global	?_CC2500_ReadStatus
   605  0071                     ?_CC2500_ReadStatus:	; 0 bytes @ 0x0
   606                           	global	?_CC2500_ReadByte
   607  0071                     ?_CC2500_ReadByte:	; 0 bytes @ 0x0
   608                           	global	?_CC2500_PowerRST
   609  0071                     ?_CC2500_PowerRST:	; 0 bytes @ 0x0
   610                           	global	?_CC2500_InitSetREG
   611  0071                     ?_CC2500_InitSetREG:	; 0 bytes @ 0x0
   612                           	global	?_CC2500_InitPATable
   613  0071                     ?_CC2500_InitPATable:	; 0 bytes @ 0x0
   614                           	global	?_CC2500_ClearTXFIFO
   615  0071                     ?_CC2500_ClearTXFIFO:	; 0 bytes @ 0x0
   616                           	global	?_CC2500_ClearRXFIFO
   617  0071                     ?_CC2500_ClearRXFIFO:	; 0 bytes @ 0x0
   618                           	global	?_CC2500_FrequencyCabr
   619  0071                     ?_CC2500_FrequencyCabr:	; 0 bytes @ 0x0
   620                           	global	?_CC2500_SIDLEMode
   621  0071                     ?_CC2500_SIDLEMode:	; 0 bytes @ 0x0
   622                           	global	?_setRF_Initialization
   623  0071                     ?_setRF_Initialization:	; 0 bytes @ 0x0
   624                           	global	?_setRF_Main
   625  0071                     ?_setRF_Main:	; 0 bytes @ 0x0
   626                           	global	?_RF_RxDisable
   627  0071                     ?_RF_RxDisable:	; 0 bytes @ 0x0
   628                           	global	?_I2C_SetData
   629  0071                     ?_I2C_SetData:	; 0 bytes @ 0x0
   630                           	global	?_setINT_GO
   631  0071                     ?_setINT_GO:	; 0 bytes @ 0x0
   632                           	global	?_MainT_Initial
   633  0071                     ?_MainT_Initial:	; 0 bytes @ 0x0
   634                           	global	?_Mcu_Initial
   635  0071                     ?_Mcu_Initial:	; 0 bytes @ 0x0
   636                           	global	?_MainT
   637  0071                     ?_MainT:	; 0 bytes @ 0x0
   638                           	global	?_I2C_Main
   639  0071                     ?_I2C_Main:	; 0 bytes @ 0x0
   640                           	global	?_IO_Set
   641  0071                     ?_IO_Set:	; 0 bytes @ 0x0
   642                           	global	?_TMR1_Set
   643  0071                     ?_TMR1_Set:	; 0 bytes @ 0x0
   644                           	global	?_INT_Set
   645  0071                     ?_INT_Set:	; 0 bytes @ 0x0
   646                           	global	?_I2C_Set
   647  0071                     ?_I2C_Set:	; 0 bytes @ 0x0
   648                           	global	?_TMR1_ISR
   649  0071                     ?_TMR1_ISR:	; 0 bytes @ 0x0
   650                           	global	??_TMR1_ISR
   651  0071                     ??_TMR1_ISR:	; 0 bytes @ 0x0
   652                           	global	?_INT_ISR
   653  0071                     ?_INT_ISR:	; 0 bytes @ 0x0
   654                           	global	?_I2C_ISR
   655  0071                     ?_I2C_ISR:	; 0 bytes @ 0x0
   656                           	global	??_I2C_ISR
   657  0071                     ??_I2C_ISR:	; 0 bytes @ 0x0
   658                           	global	?_I2C_Slave_Mode
   659  0071                     ?_I2C_Slave_Mode:	; 0 bytes @ 0x0
   660                           	global	?_CC2500_TxData
   661  0071                     ?_CC2500_TxData:	; 0 bytes @ 0x0
   662                           	global	?_CC2500_RxData
   663  0071                     ?_CC2500_RxData:	; 0 bytes @ 0x0
   664                           	global	?_CC2500_PowerOnInitial
   665  0071                     ?_CC2500_PowerOnInitial:	; 0 bytes @ 0x0
   666                           	global	?_RfPointSelect
   667  0071                     ?_RfPointSelect:	; 0 bytes @ 0x0
   668                           	global	?_RF_Initialization
   669  0071                     ?_RF_Initialization:	; 0 bytes @ 0x0
   670                           	global	?_RF_Main
   671  0071                     ?_RF_Main:	; 0 bytes @ 0x0
   672                           	global	?_main
   673  0071                     ?_main:	; 0 bytes @ 0x0
   674                           	global	?_ISR
   675  0071                     ?_ISR:	; 0 bytes @ 0x0
   676                           	global	?i1_RfPointSelect
   677  0071                     ?i1_RfPointSelect:	; 0 bytes @ 0x0
   678                           	global	??i1_RfPointSelect
   679  0071                     ??i1_RfPointSelect:	; 0 bytes @ 0x0
   680                           	global	setRF_Initialization@rf
   681  0071                     setRF_Initialization@rf:	; 1 bytes @ 0x0
   682  0071                     	ds	1
   683                           	global	i1RfPointSelect@rf
   684  0072                     i1RfPointSelect@rf:	; 1 bytes @ 0x1
   685  0072                     	ds	1
   686                           	global	?_setRF_ReceiveGO
   687  0073                     ?_setRF_ReceiveGO:	; 0 bytes @ 0x2
   688                           	global	setRF_ReceiveGO@command
   689  0073                     setRF_ReceiveGO@command:	; 1 bytes @ 0x2
   690  0073                     	ds	1
   691                           	global	??_setRF_ReceiveGO
   692  0074                     ??_setRF_ReceiveGO:	; 0 bytes @ 0x3
   693                           	global	setRF_ReceiveGO@rf
   694  0074                     setRF_ReceiveGO@rf:	; 1 bytes @ 0x3
   695  0074                     	ds	1
   696                           	global	??_INT_ISR
   697  0075                     ??_INT_ISR:	; 0 bytes @ 0x4
   698                           	global	??_ISR
   699  0075                     ??_ISR:	; 0 bytes @ 0x4
   700  0075                     	ds	1
   701                           psect	cstackBANK0,class=BANK0,space=1
   702                           global __pcstackBANK0
   703  0054                     __pcstackBANK0:
   704                           	global	??_CC2500_WriteByte
   705  0054                     ??_CC2500_WriteByte:	; 0 bytes @ 0x0
   706                           	global	??_CC2500_ReadByte
   707  0054                     ??_CC2500_ReadByte:	; 0 bytes @ 0x0
   708                           	global	?_DelayTime_1us
   709  0054                     ?_DelayTime_1us:	; 0 bytes @ 0x0
   710                           	global	??_setRF_Initialization
   711  0054                     ??_setRF_Initialization:	; 0 bytes @ 0x0
   712                           	global	??_I2C_SetData
   713  0054                     ??_I2C_SetData:	; 0 bytes @ 0x0
   714                           	global	??_setINT_GO
   715  0054                     ??_setINT_GO:	; 0 bytes @ 0x0
   716                           	global	??_MainT_Initial
   717  0054                     ??_MainT_Initial:	; 0 bytes @ 0x0
   718                           	global	??_IO_Set
   719  0054                     ??_IO_Set:	; 0 bytes @ 0x0
   720                           	global	??_TMR1_Set
   721  0054                     ??_TMR1_Set:	; 0 bytes @ 0x0
   722                           	global	??_INT_Set
   723  0054                     ??_INT_Set:	; 0 bytes @ 0x0
   724                           	global	??_I2C_Set
   725  0054                     ??_I2C_Set:	; 0 bytes @ 0x0
   726                           	global	??_I2C_Slave_Mode
   727  0054                     ??_I2C_Slave_Mode:	; 0 bytes @ 0x0
   728                           	global	??_RfPointSelect
   729  0054                     ??_RfPointSelect:	; 0 bytes @ 0x0
   730                           	global	setINT_GO@command
   731  0054                     setINT_GO@command:	; 1 bytes @ 0x0
   732                           	global	DelayTime_1us@count
   733  0054                     DelayTime_1us@count:	; 2 bytes @ 0x0
   734  0054                     	ds	1
   735                           	global	??_Mcu_Initial
   736  0055                     ??_Mcu_Initial:	; 0 bytes @ 0x1
   737                           	global	??_RF_Initialization
   738  0055                     ??_RF_Initialization:	; 0 bytes @ 0x1
   739                           	global	CC2500_WriteByte@loop_a
   740  0055                     CC2500_WriteByte@loop_a:	; 1 bytes @ 0x1
   741                           	global	CC2500_ReadByte@loop_b
   742  0055                     CC2500_ReadByte@loop_b:	; 1 bytes @ 0x1
   743                           	global	RfPointSelect@rf
   744  0055                     RfPointSelect@rf:	; 1 bytes @ 0x1
   745  0055                     	ds	1
   746                           	global	??_CC2500_WriteCommand
   747  0056                     ??_CC2500_WriteCommand:	; 0 bytes @ 0x2
   748                           	global	??_CC2500_ReadStatus
   749  0056                     ??_CC2500_ReadStatus:	; 0 bytes @ 0x2
   750                           	global	?_setRF_RxStatus
   751  0056                     ?_setRF_RxStatus:	; 0 bytes @ 0x2
   752                           	global	??_DelayTime_1us
   753  0056                     ??_DelayTime_1us:	; 0 bytes @ 0x2
   754                           	global	?_CC2500_WriteREG
   755  0056                     ?_CC2500_WriteREG:	; 0 bytes @ 0x2
   756                           	global	CC2500_WriteREG@value
   757  0056                     CC2500_WriteREG@value:	; 1 bytes @ 0x2
   758                           	global	setRF_RxStatus@command
   759  0056                     setRF_RxStatus@command:	; 1 bytes @ 0x2
   760                           	global	I2C_SetData@command
   761  0056                     I2C_SetData@command:	; 1 bytes @ 0x2
   762                           	global	I2C_Slave_Mode@i
   763  0056                     I2C_Slave_Mode@i:	; 1 bytes @ 0x2
   764                           	global	DelayTime_1us@i
   765  0056                     DelayTime_1us@i:	; 2 bytes @ 0x2
   766  0056                     	ds	1
   767                           	global	??_setRF_RxStatus
   768  0057                     ??_setRF_RxStatus:	; 0 bytes @ 0x3
   769                           	global	??_CC2500_WriteREG
   770  0057                     ??_CC2500_WriteREG:	; 0 bytes @ 0x3
   771                           	global	CC2500_WriteCommand@command
   772  0057                     CC2500_WriteCommand@command:	; 1 bytes @ 0x3
   773                           	global	CC2500_ReadStatus@status_addr
   774  0057                     CC2500_ReadStatus@status_addr:	; 1 bytes @ 0x3
   775                           	global	setRF_RxStatus@rf
   776  0057                     setRF_RxStatus@rf:	; 1 bytes @ 0x3
   777                           	global	I2C_SetData@i
   778  0057                     I2C_SetData@i:	; 1 bytes @ 0x3
   779  0057                     	ds	1
   780                           	global	??_CC2500_ClearTXFIFO
   781  0058                     ??_CC2500_ClearTXFIFO:	; 0 bytes @ 0x4
   782                           	global	??_CC2500_ClearRXFIFO
   783  0058                     ??_CC2500_ClearRXFIFO:	; 0 bytes @ 0x4
   784                           	global	??_CC2500_SIDLEMode
   785  0058                     ??_CC2500_SIDLEMode:	; 0 bytes @ 0x4
   786                           	global	??_RF_RxDisable
   787  0058                     ??_RF_RxDisable:	; 0 bytes @ 0x4
   788                           	global	??_I2C_Main
   789  0058                     ??_I2C_Main:	; 0 bytes @ 0x4
   790                           	global	??_CC2500_TxData
   791  0058                     ??_CC2500_TxData:	; 0 bytes @ 0x4
   792                           	global	??_CC2500_RxData
   793  0058                     ??_CC2500_RxData:	; 0 bytes @ 0x4
   794                           	global	CC2500_WriteREG@w_addr
   795  0058                     CC2500_WriteREG@w_addr:	; 1 bytes @ 0x4
   796                           	global	RF_RxDisable@rf
   797  0058                     RF_RxDisable@rf:	; 1 bytes @ 0x4
   798                           	global	DelayTime_1us@j
   799  0058                     DelayTime_1us@j:	; 2 bytes @ 0x4
   800  0058                     	ds	1
   801                           	global	??_CC2500_InitSetREG
   802  0059                     ??_CC2500_InitSetREG:	; 0 bytes @ 0x5
   803                           	global	??_CC2500_InitPATable
   804  0059                     ??_CC2500_InitPATable:	; 0 bytes @ 0x5
   805                           	global	?_setRF_Enable
   806  0059                     ?_setRF_Enable:	; 0 bytes @ 0x5
   807                           	global	CC2500_TxData@loop_e
   808  0059                     CC2500_TxData@loop_e:	; 1 bytes @ 0x5
   809                           	global	CC2500_RxData@loop_f
   810  0059                     CC2500_RxData@loop_f:	; 1 bytes @ 0x5
   811                           	global	setRF_Enable@command
   812  0059                     setRF_Enable@command:	; 1 bytes @ 0x5
   813  0059                     	ds	1
   814                           	global	??_CC2500_PowerRST
   815  005A                     ??_CC2500_PowerRST:	; 0 bytes @ 0x6
   816                           	global	??_CC2500_FrequencyCabr
   817  005A                     ??_CC2500_FrequencyCabr:	; 0 bytes @ 0x6
   818                           	global	??_setRF_Main
   819  005A                     ??_setRF_Main:	; 0 bytes @ 0x6
   820                           	global	??_setRF_Enable
   821  005A                     ??_setRF_Enable:	; 0 bytes @ 0x6
   822                           	global	CC2500_InitSetREG@temp1
   823  005A                     CC2500_InitSetREG@temp1:	; 1 bytes @ 0x6
   824                           	global	CC2500_InitPATable@temp
   825  005A                     CC2500_InitPATable@temp:	; 1 bytes @ 0x6
   826                           	global	setRF_Enable@rf
   827  005A                     setRF_Enable@rf:	; 1 bytes @ 0x6
   828  005A                     	ds	1
   829                           	global	??_MainT
   830  005B                     ??_MainT:	; 0 bytes @ 0x7
   831                           	global	CC2500_InitSetREG@temp2
   832  005B                     CC2500_InitSetREG@temp2:	; 1 bytes @ 0x7
   833                           	global	CC2500_InitPATable@loop_d
   834  005B                     CC2500_InitPATable@loop_d:	; 1 bytes @ 0x7
   835                           	global	setRF_Main@rf
   836  005B                     setRF_Main@rf:	; 1 bytes @ 0x7
   837  005B                     	ds	1
   838                           	global	??_RF_Main
   839  005C                     ??_RF_Main:	; 0 bytes @ 0x8
   840                           	global	CC2500_InitSetREG@loop_c
   841  005C                     CC2500_InitSetREG@loop_c:	; 1 bytes @ 0x8
   842  005C                     	ds	1
   843                           	global	??_CC2500_PowerOnInitial
   844  005D                     ??_CC2500_PowerOnInitial:	; 0 bytes @ 0x9
   845                           	global	??_main
   846  005D                     ??_main:	; 0 bytes @ 0x9
   847 ;;Data sizes: Strings 0, constant 102, data 32, bss 122, persistent 2 stack 0
   848 ;;Auto spaces:   Size  Autos    Used
   849 ;; COMMON          14      5      10
   850 ;; BANK0           80      9      62
   851 ;; BANK1           80      0      32
   852 ;; BANK2           80      0      67
   853 ;; BANK3           80      0       0
   854 ;; BANK4           80      0       0
   855 ;; BANK5           80      0       0
   856 ;; BANK6           16      0       0
   857                           
   858 ;;
   859 ;; Pointer list with targets:
   860                           
   861 ;; Timer1	PTR struct Timer1 size(1) Largest target is 3
   862 ;;		 -> NULL(NULL[0]), VarTimer1(BANK0[3]), 
   863 ;;
   864 ;; I2C	PTR struct I2C size(1) Largest target is 67
   865 ;;		 -> NULL(NULL[0]), VarI2C(BANK2[67]), 
   866 ;;
   867 ;; RFSW	PTR struct RFSW size(1) Largest target is 0
   868 ;;		 -> NULL(NULL[0]), 
   869 ;;
   870 ;; TMain	PTR struct TMain size(1) Largest target is 15
   871 ;;		 -> NULL(NULL[0]), VarTMain(BANK0[15]), 
   872 ;;
   873 ;; Product	PTR struct Product size(1) Largest target is 32
   874 ;;		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 
   875 ;;
   876 ;; RF	PTR struct RF size(1) Largest target is 2
   877 ;;		 -> NULL(NULL[0]), RF1(BANK0[2]), 
   878 ;;
   879                           
   880                           
   881 ;;
   882 ;; Critical Paths under _main in COMMON
   883 ;;
   884 ;;   None.
   885 ;;
   886 ;; Critical Paths under _ISR in COMMON
   887 ;;
   888 ;;   _INT_ISR->_setRF_ReceiveGO
   889 ;;   _setRF_ReceiveGO->i1_RfPointSelect
   890 ;;
   891 ;; Critical Paths under _main in BANK0
   892 ;;
   893 ;;   _MainT->_setRF_Enable
   894 ;;   _RF_Main->_setRF_Main
   895 ;;   _setRF_Enable->_RF_RxDisable
   896 ;;   _setRF_Main->_CC2500_RxData
   897 ;;   _setRF_Main->_CC2500_TxData
   898 ;;   _CC2500_PowerOnInitial->_CC2500_InitSetREG
   899 ;;   _RF_RxDisable->_CC2500_WriteCommand
   900 ;;   _CC2500_SIDLEMode->_CC2500_WriteCommand
   901 ;;   _CC2500_FrequencyCabr->_DelayTime_1us
   902 ;;   _CC2500_ClearRXFIFO->_CC2500_WriteCommand
   903 ;;   _CC2500_ClearTXFIFO->_CC2500_WriteCommand
   904 ;;   _CC2500_InitPATable->_CC2500_WriteREG
   905 ;;   _CC2500_InitSetREG->_CC2500_WriteREG
   906 ;;   _CC2500_RxData->_CC2500_ReadStatus
   907 ;;   _CC2500_RxData->_CC2500_WriteCommand
   908 ;;   _CC2500_RxData->_setRF_RxStatus
   909 ;;   _CC2500_TxData->_CC2500_WriteCommand
   910 ;;   _I2C_Main->_I2C_SetData
   911 ;;   _Mcu_Initial->_TMR1_Set
   912 ;;   _Mcu_Initial->_I2C_Set
   913 ;;   _RF_Initialization->_setRF_Initialization
   914 ;;   _CC2500_WriteREG->_CC2500_WriteByte
   915 ;;   _CC2500_PowerRST->_DelayTime_1us
   916 ;;   _setRF_RxStatus->_RfPointSelect
   917 ;;   _CC2500_ReadStatus->_CC2500_WriteByte
   918 ;;   _CC2500_ReadStatus->_CC2500_ReadByte
   919 ;;   _CC2500_WriteCommand->_CC2500_WriteByte
   920 ;;
   921 ;; Critical Paths under _ISR in BANK0
   922 ;;
   923 ;;   None.
   924 ;;
   925 ;; Critical Paths under _main in BANK1
   926 ;;
   927 ;;   None.
   928 ;;
   929 ;; Critical Paths under _ISR in BANK1
   930 ;;
   931 ;;   None.
   932 ;;
   933 ;; Critical Paths under _main in BANK2
   934 ;;
   935 ;;   None.
   936 ;;
   937 ;; Critical Paths under _ISR in BANK2
   938 ;;
   939 ;;   None.
   940 ;;
   941 ;; Critical Paths under _main in BANK3
   942 ;;
   943 ;;   None.
   944 ;;
   945 ;; Critical Paths under _ISR in BANK3
   946 ;;
   947 ;;   None.
   948 ;;
   949 ;; Critical Paths under _main in BANK4
   950 ;;
   951 ;;   None.
   952 ;;
   953 ;; Critical Paths under _ISR in BANK4
   954 ;;
   955 ;;   None.
   956 ;;
   957 ;; Critical Paths under _main in BANK5
   958 ;;
   959 ;;   None.
   960 ;;
   961 ;; Critical Paths under _ISR in BANK5
   962 ;;
   963 ;;   None.
   964 ;;
   965 ;; Critical Paths under _main in BANK6
   966 ;;
   967 ;;   None.
   968 ;;
   969 ;; Critical Paths under _ISR in BANK6
   970 ;;
   971 ;;   None.
   972                           
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   975 ;;
   976                           
   977 ;;
   978 ;;Call Graph Tables:
   979 ;;
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   982 ;; ---------------------------------------------------------------------------------
   983 ;; (0) _main                                                 0     0      0    3673
   984 ;;                      _MainT_Initial
   985 ;;                        _Mcu_Initial
   986 ;;                  _RF_Initialization
   987 ;;              _CC2500_PowerOnInitial
   988 ;;                              _MainT
   989 ;;                            _RF_Main
   990 ;;                           _I2C_Main
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (1) _MainT                                                2     2      0     384
   993 ;;                                              7 BANK0      1     1      0
   994 ;;                       _setRF_Enable
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (1) _RF_Main                                              0     0      0    1473
   997 ;;                         _setRF_Main
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (2) _setRF_Enable                                         2     1      1     384
  1000 ;;                                              5 BANK0      2     1      1
  1001 ;;                      _RfPointSelect
  1002 ;;                _CC2500_WriteCommand
  1003 ;;                       _RF_RxDisable
  1004 ;; ---------------------------------------------------------------------------------
  1005 ;; (2) _setRF_Main                                           2     2      0    1473
  1006 ;;                                              6 BANK0      2     2      0
  1007 ;;                      _RfPointSelect
  1008 ;;                       _RF_RxDisable
  1009 ;;                      _CC2500_RxData
  1010 ;;                        _I2C_SetData
  1011 ;;                      _CC2500_TxData
  1012 ;;                _CC2500_WriteCommand
  1013 ;;                          _setINT_GO
  1014 ;; ---------------------------------------------------------------------------------
  1015 ;; (1) _CC2500_PowerOnInitial                                0     0      0    1327
  1016 ;;                    _CC2500_PowerRST
  1017 ;;                  _CC2500_InitSetREG
  1018 ;;                 _CC2500_InitPATable
  1019 ;;                 _CC2500_ClearTXFIFO
  1020 ;;                 _CC2500_ClearRXFIFO
  1021 ;;               _CC2500_FrequencyCabr
  1022 ;;                   _CC2500_SIDLEMode
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (3) _RF_RxDisable                                         1     1      0     192
  1025 ;;                                              4 BANK0      1     1      0
  1026 ;;                      _RfPointSelect
  1027 ;;                _CC2500_WriteCommand
  1028 ;;                          _setINT_GO
  1029 ;; ---------------------------------------------------------------------------------
  1030 ;; (2) _CC2500_SIDLEMode                                     0     0      0      99
  1031 ;;                _CC2500_WriteCommand
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (2) _CC2500_FrequencyCabr                                 0     0      0     235
  1034 ;;                _CC2500_WriteCommand
  1035 ;;                      _DelayTime_1us
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (2) _CC2500_ClearRXFIFO                                   0     0      0      99
  1038 ;;                _CC2500_WriteCommand
  1039 ;; ---------------------------------------------------------------------------------
  1040 ;; (2) _CC2500_ClearTXFIFO                                   0     0      0      99
  1041 ;;                _CC2500_WriteCommand
  1042 ;; ---------------------------------------------------------------------------------
  1043 ;; (2) _CC2500_InitPATable                                   3     3      0     263
  1044 ;;                                              5 BANK0      3     3      0
  1045 ;;                    _CC2500_WriteREG
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; (2) _CC2500_InitSetREG                                    4     4      0     328
  1048 ;;                                              5 BANK0      4     4      0
  1049 ;;                    _CC2500_WriteREG
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (3) _CC2500_RxData                                        2     2      0     563
  1052 ;;                                              4 BANK0      2     2      0
  1053 ;;                  _CC2500_ReadStatus
  1054 ;;                   _CC2500_WriteByte
  1055 ;;                    _CC2500_ReadByte
  1056 ;;                _CC2500_WriteCommand
  1057 ;;                     _setRF_RxStatus
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (3) _CC2500_TxData                                        2     2      0     235
  1060 ;;                                              4 BANK0      2     2      0
  1061 ;;                   _CC2500_WriteByte
  1062 ;;                _CC2500_WriteCommand
  1063 ;; ---------------------------------------------------------------------------------
  1064 ;; (1) _I2C_Main                                             1     1      0     489
  1065 ;;                     _I2C_Slave_Mode
  1066 ;;                        _I2C_SetData
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (1) _Mcu_Initial                                          0     0      0       0
  1069 ;;                             _IO_Set
  1070 ;;                           _TMR1_Set
  1071 ;;                            _INT_Set
  1072 ;;                            _I2C_Set
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (1) _RF_Initialization                                    0     0      0       0
  1075 ;;               _setRF_Initialization
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (3) _CC2500_WriteREG                                      3     2      1     130
  1078 ;;                                              2 BANK0      3     2      1
  1079 ;;                   _CC2500_WriteByte
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (2) _CC2500_PowerRST                                      1     1      0     204
  1082 ;;                                              6 BANK0      1     1      0
  1083 ;;                      _DelayTime_1us
  1084 ;;                   _CC2500_WriteByte
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (4) _setRF_RxStatus                                       2     1      1      93
  1087 ;;                                              2 BANK0      2     1      1
  1088 ;;                      _RfPointSelect
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (4) _CC2500_ReadStatus                                    2     2      0     167
  1091 ;;                                              2 BANK0      2     2      0
  1092 ;;                   _CC2500_WriteByte
  1093 ;;                    _CC2500_ReadByte
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (3) _CC2500_WriteCommand                                  2     2      0      99
  1096 ;;                                              2 BANK0      2     2      0
  1097 ;;                   _CC2500_WriteByte
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (2) _I2C_Slave_Mode                                       3     3      0     198
  1100 ;;                                              0 BANK0      3     3      0
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; (2) _I2C_Set                                              1     1      0       0
  1103 ;;                                              0 BANK0      1     1      0
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (2) _INT_Set                                              0     0      0       0
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (2) _TMR1_Set                                             1     1      0       0
  1108 ;;                                              0 BANK0      1     1      0
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (2) _IO_Set                                               0     0      0       0
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (1) _MainT_Initial                                        1     1      0       0
  1113 ;;                                              0 BANK0      1     1      0
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (3) _setINT_GO                                            1     1      0      31
  1116 ;;                                              0 BANK0      1     1      0
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (2) _I2C_SetData                                          4     4      0     291
  1119 ;;                                              0 BANK0      4     4      0
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (2) _setRF_Initialization                                 2     2      0       0
  1122 ;;                                              0 BANK0      1     1      0
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (5) _RfPointSelect                                        2     2      0      31
  1125 ;;                                              0 BANK0      2     2      0
  1126 ;; ---------------------------------------------------------------------------------
  1127 ;; (3) _DelayTime_1us                                        6     4      2     136
  1128 ;;                                              0 BANK0      6     4      2
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (4) _CC2500_ReadByte                                      2     2      0      68
  1131 ;;                                              0 BANK0      2     2      0
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (4) _CC2500_WriteByte                                     2     2      0      68
  1134 ;;                                              0 BANK0      2     2      0
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; Estimated maximum stack depth 5
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (6) _ISR                                                  1     1      0     117
  1141 ;;                                              4 COMMON     1     1      0
  1142 ;;                           _TMR1_ISR
  1143 ;;                            _INT_ISR
  1144 ;;                            _I2C_ISR
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (7) _INT_ISR                                              0     0      0     117
  1147 ;;                    _setRF_ReceiveGO
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (8) _setRF_ReceiveGO                                      2     1      1     117
  1150 ;;                                              2 COMMON     2     1      1
  1151 ;;                    i1_RfPointSelect
  1152 ;; ---------------------------------------------------------------------------------
  1153 ;; (9) i1_RfPointSelect                                      2     2      0      73
  1154 ;;                                              0 COMMON     2     2      0
  1155 ;; ---------------------------------------------------------------------------------
  1156 ;; (7) _I2C_ISR                                              0     0      0       0
  1157 ;; ---------------------------------------------------------------------------------
  1158 ;; (7) _TMR1_ISR                                             0     0      0       0
  1159 ;; ---------------------------------------------------------------------------------
  1160 ;; Estimated maximum stack depth 9
  1161 ;; ---------------------------------------------------------------------------------
  1162                           
  1163 ;; Call Graph Graphs:
  1164                           
  1165 ;; _main (ROOT)
  1166 ;;   _MainT_Initial
  1167 ;;   _Mcu_Initial
  1168 ;;     _IO_Set
  1169 ;;     _TMR1_Set
  1170 ;;     _INT_Set
  1171 ;;     _I2C_Set
  1172 ;;   _RF_Initialization
  1173 ;;     _setRF_Initialization
  1174 ;;   _CC2500_PowerOnInitial
  1175 ;;     _CC2500_PowerRST
  1176 ;;       _DelayTime_1us
  1177 ;;       _CC2500_WriteByte
  1178 ;;     _CC2500_InitSetREG
  1179 ;;       _CC2500_WriteREG
  1180 ;;         _CC2500_WriteByte
  1181 ;;     _CC2500_InitPATable
  1182 ;;       _CC2500_WriteREG
  1183 ;;         _CC2500_WriteByte
  1184 ;;     _CC2500_ClearTXFIFO
  1185 ;;       _CC2500_WriteCommand
  1186 ;;         _CC2500_WriteByte
  1187 ;;     _CC2500_ClearRXFIFO
  1188 ;;       _CC2500_WriteCommand
  1189 ;;         _CC2500_WriteByte
  1190 ;;     _CC2500_FrequencyCabr
  1191 ;;       _CC2500_WriteCommand
  1192 ;;         _CC2500_WriteByte
  1193 ;;       _DelayTime_1us
  1194 ;;     _CC2500_SIDLEMode
  1195 ;;       _CC2500_WriteCommand
  1196 ;;         _CC2500_WriteByte
  1197 ;;   _MainT
  1198 ;;     _setRF_Enable
  1199 ;;       _RfPointSelect
  1200 ;;       _CC2500_WriteCommand
  1201 ;;         _CC2500_WriteByte
  1202 ;;       _RF_RxDisable
  1203 ;;         _RfPointSelect
  1204 ;;         _CC2500_WriteCommand
  1205 ;;           _CC2500_WriteByte
  1206 ;;         _setINT_GO
  1207 ;;   _RF_Main
  1208 ;;     _setRF_Main
  1209 ;;       _RfPointSelect
  1210 ;;       _RF_RxDisable
  1211 ;;         _RfPointSelect
  1212 ;;         _CC2500_WriteCommand
  1213 ;;           _CC2500_WriteByte
  1214 ;;         _setINT_GO
  1215 ;;       _CC2500_RxData
  1216 ;;         _CC2500_ReadStatus
  1217 ;;           _CC2500_WriteByte
  1218 ;;           _CC2500_ReadByte
  1219 ;;         _CC2500_WriteByte
  1220 ;;         _CC2500_ReadByte
  1221 ;;         _CC2500_WriteCommand
  1222 ;;           _CC2500_WriteByte
  1223 ;;         _setRF_RxStatus
  1224 ;;           _RfPointSelect
  1225 ;;       _I2C_SetData
  1226 ;;       _CC2500_TxData
  1227 ;;         _CC2500_WriteByte
  1228 ;;         _CC2500_WriteCommand
  1229 ;;           _CC2500_WriteByte
  1230 ;;       _CC2500_WriteCommand
  1231 ;;         _CC2500_WriteByte
  1232 ;;       _setINT_GO
  1233 ;;   _I2C_Main
  1234 ;;     _I2C_Slave_Mode
  1235 ;;     _I2C_SetData
  1236 ;;
  1237 ;; _ISR (ROOT)
  1238 ;;   _TMR1_ISR
  1239 ;;   _INT_ISR
  1240 ;;     _setRF_ReceiveGO
  1241 ;;       i1_RfPointSelect
  1242 ;;   _I2C_ISR
  1243 ;;
  1244                           
  1245 ;; Address spaces:
  1246                           
  1247 ;;Name               Size   Autos  Total    Cost      Usage
  1248 ;;BIGRAM             1F0      0       0       0        0.0%
  1249 ;;NULL                 0      0       0       0        0.0%
  1250 ;;CODE                 0      0       0       0        0.0%
  1251 ;;BITCOMMON            E      0       1       1        7.1%
  1252 ;;BITSFR0              0      0       0       1        0.0%
  1253 ;;SFR0                 0      0       0       1        0.0%
  1254 ;;COMMON               E      5       A       2       71.4%
  1255 ;;BITSFR1              0      0       0       2        0.0%
  1256 ;;SFR1                 0      0       0       2        0.0%
  1257 ;;BITSFR2              0      0       0       3        0.0%
  1258 ;;SFR2                 0      0       0       3        0.0%
  1259 ;;STACK                0      0       D       3        0.0%
  1260 ;;BITSFR3              0      0       0       4        0.0%
  1261 ;;SFR3                 0      0       0       4        0.0%
  1262 ;;ABS                  0      0      AB       4        0.0%
  1263 ;;BITBANK0            50      0       0       5        0.0%
  1264 ;;BITSFR4              0      0       0       5        0.0%
  1265 ;;SFR4                 0      0       0       5        0.0%
  1266 ;;BANK0               50      9      3E       6       77.5%
  1267 ;;BITSFR5              0      0       0       6        0.0%
  1268 ;;SFR5                 0      0       0       6        0.0%
  1269 ;;BITBANK1            50      0       0       7        0.0%
  1270 ;;BITSFR6              0      0       0       7        0.0%
  1271 ;;SFR6                 0      0       0       7        0.0%
  1272 ;;BANK1               50      0      20       8       40.0%
  1273 ;;BITSFR7              0      0       0       8        0.0%
  1274 ;;SFR7                 0      0       0       8        0.0%
  1275 ;;BITBANK2            50      0       0       9        0.0%
  1276 ;;BITSFR8              0      0       0       9        0.0%
  1277 ;;SFR8                 0      0       0       9        0.0%
  1278 ;;BANK2               50      0      43      10       83.8%
  1279 ;;BITSFR9              0      0       0      10        0.0%
  1280 ;;SFR9                 0      0       0      10        0.0%
  1281 ;;BITBANK3            50      0       0      11        0.0%
  1282 ;;BITSFR10             0      0       0      11        0.0%
  1283 ;;SFR10                0      0       0      11        0.0%
  1284 ;;BANK3               50      0       0      12        0.0%
  1285 ;;BITSFR11             0      0       0      12        0.0%
  1286 ;;SFR11                0      0       0      12        0.0%
  1287 ;;BITBANK4            50      0       0      13        0.0%
  1288 ;;BITSFR12             0      0       0      13        0.0%
  1289 ;;SFR12                0      0       0      13        0.0%
  1290 ;;BANK4               50      0       0      14        0.0%
  1291 ;;BITSFR13             0      0       0      14        0.0%
  1292 ;;SFR13                0      0       0      14        0.0%
  1293 ;;BITBANK5            50      0       0      15        0.0%
  1294 ;;BITSFR14             0      0       0      15        0.0%
  1295 ;;SFR14                0      0       0      15        0.0%
  1296 ;;BANK5               50      0       0      16        0.0%
  1297 ;;BITSFR15             0      0       0      16        0.0%
  1298 ;;SFR15                0      0       0      16        0.0%
  1299 ;;BITBANK6            10      0       0      17        0.0%
  1300 ;;BITSFR16             0      0       0      17        0.0%
  1301 ;;SFR16                0      0       0      17        0.0%
  1302 ;;BANK6               10      0       0      18        0.0%
  1303 ;;BITSFR17             0      0       0      18        0.0%
  1304 ;;SFR17                0      0       0      18        0.0%
  1305 ;;BITSFR18             0      0       0      19        0.0%
  1306 ;;SFR18                0      0       0      19        0.0%
  1307 ;;DATA                 0      0      B8      19        0.0%
  1308 ;;BITSFR19             0      0       0      20        0.0%
  1309 ;;SFR19                0      0       0      20        0.0%
  1310 ;;BITSFR20             0      0       0      21        0.0%
  1311 ;;SFR20                0      0       0      21        0.0%
  1312 ;;BITSFR21             0      0       0      22        0.0%
  1313 ;;SFR21                0      0       0      22        0.0%
  1314 ;;BITSFR22             0      0       0      23        0.0%
  1315 ;;SFR22                0      0       0      23        0.0%
  1316 ;;BITSFR23             0      0       0      24        0.0%
  1317 ;;SFR23                0      0       0      24        0.0%
  1318 ;;BITSFR24             0      0       0      25        0.0%
  1319 ;;SFR24                0      0       0      25        0.0%
  1320 ;;BITSFR25             0      0       0      26        0.0%
  1321 ;;SFR25                0      0       0      26        0.0%
  1322 ;;BITSFR26             0      0       0      27        0.0%
  1323 ;;SFR26                0      0       0      27        0.0%
  1324 ;;BITSFR27             0      0       0      28        0.0%
  1325 ;;SFR27                0      0       0      28        0.0%
  1326 ;;BITSFR28             0      0       0      29        0.0%
  1327 ;;SFR28                0      0       0      29        0.0%
  1328 ;;BITSFR29             0      0       0      30        0.0%
  1329 ;;SFR29                0      0       0      30        0.0%
  1330 ;;BITSFR30             0      0       0      31        0.0%
  1331 ;;SFR30                0      0       0      31        0.0%
  1332 ;;BITSFR31             0      0       0      32        0.0%
  1333 ;;SFR31                0      0       0      32        0.0%
  1334                           
  1335                           	global	_main
  1336                           psect	maintext,global,class=CODE,delta=2
  1337                           global __pmaintext
  1338  0456                     __pmaintext:
  1339                           
  1340 ;; *************** function _main *****************
  1341 ;; Defined at:
  1342 ;;		line 7 in file "G:\Program\PIC\Source_File\myMain.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 17F/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1356 ;;      Params:         0       0       0       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0
  1359 ;;      Totals:         0       0       0       0       0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels required when called:    9
  1362 ;; This function calls:
  1363 ;;		_MainT_Initial
  1364 ;;		_Mcu_Initial
  1365 ;;		_RF_Initialization
  1366 ;;		_CC2500_PowerOnInitial
  1367 ;;		_MainT
  1368 ;;		_RF_Main
  1369 ;;		_I2C_Main
  1370 ;; This function is called by:
  1371 ;;		Startup code after reset
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           psect	maintext
  1375                           	file	"G:\Program\PIC\Source_File\myMain.c"
  1376                           	line	7
  1377                           	global	__size_of_main
  1378  0030                     	__size_of_main	equ	__end_of_main-_main
  1379                           	
  1380  0456                     _main:	
  1381                           	opt	stack 7
  1382                           ; Regs used in _main: [wreg+fsr1l-status,0+pclath+cstack]
  1383                           	line	8
  1384                           	
  1385  0456                     l8817:	
  1386                           ;myMain.c: 8: MainT_Initial();
  1387  0456  3186  2670  3184   	fcall	_MainT_Initial
  1388                           	line	9
  1389                           	
  1390  0459                     l8819:	
  1391                           ;myMain.c: 9: Mcu_Initial();
  1392  0459  3186  2618  3184   	fcall	_Mcu_Initial
  1393                           	line	11
  1394                           	
  1395  045C                     l8821:	
  1396                           ;myMain.c: 10: ;;
  1397                           ;myMain.c: 11: RF_Initialization();
  1398  045C  3186  26E4  3184   	fcall	_RF_Initialization
  1399                           	line	12
  1400                           	
  1401  045F                     l8823:	
  1402                           ;myMain.c: 12: CC2500_PowerOnInitial();
  1403  045F  3185  25C2  3184   	fcall	_CC2500_PowerOnInitial
  1404  0462  2C63               	goto	l8825
  1405                           	line	13
  1406                           ;myMain.c: 13: while(1)
  1407                           	
  1408  0463                     l4468:	
  1409                           	line	17
  1410                           	
  1411  0463                     l8825:	
  1412                           ;myMain.c: 14: {
  1413                           ;myMain.c: 17: if(TMain->T1_Timerout)
  1414  0463  0020               	movlb 0	; select bank0
  1415  0464  085D               	movf	(_TMain),w
  1416  0465  0086               	movwf	fsr1l
  1417  0466  0187               	clrf fsr1h	
  1418                           	
  1419  0467  1D01               	btfss	indf1,2
  1420  0468  2C6A               	goto	u5391
  1421  0469  2C6B               	goto	u5390
  1422  046A                     u5391:
  1423  046A  2C63               	goto	l8825
  1424  046B                     u5390:
  1425                           	line	19
  1426                           	
  1427  046B                     l8827:	
  1428                           ;myMain.c: 18: {
  1429                           ;myMain.c: 19: TMain->T1_Timerout = 0;
  1430  046B  085D               	movf	(_TMain),w
  1431  046C  0086               	movwf	fsr1l
  1432  046D  0187               	clrf fsr1h	
  1433                           	
  1434  046E  1101               	bcf	indf1,2
  1435                           	line	20
  1436                           	
  1437  046F                     l8829:	
  1438                           ;myMain.c: 20: MainT();
  1439  046F  3180  20A0  3184   	fcall	_MainT
  1440                           	line	21
  1441                           	
  1442  0472                     l8831:	
  1443                           ;myMain.c: 21: if(TMain->PowerON)
  1444  0472  0020               	movlb 0	; select bank0
  1445  0473  085D               	movf	(_TMain),w
  1446  0474  0086               	movwf	fsr1l
  1447  0475  0187               	clrf fsr1h	
  1448                           	
  1449  0476  1C01               	btfss	indf1,0
  1450  0477  2C79               	goto	u5401
  1451  0478  2C7A               	goto	u5400
  1452  0479                     u5401:
  1453  0479  2C63               	goto	l8825
  1454  047A                     u5400:
  1455                           	line	23
  1456                           	
  1457  047A                     l8833:	
  1458                           ;myMain.c: 22: {
  1459                           ;myMain.c: 23: RF_Main();
  1460  047A  3186  26D0  3184   	fcall	_RF_Main
  1461                           	line	24
  1462                           ;myMain.c: 24: I2C_Main();
  1463  047D  3183  2342  3184   	fcall	_I2C_Main
  1464  0480  2C63               	goto	l8825
  1465                           	line	27
  1466                           ;myMain.c: 25: ;;
  1467                           ;myMain.c: 26: ;;
  1468                           	
  1469  0481                     l4470:	
  1470  0481  2C63               	goto	l8825
  1471                           	line	28
  1472                           	
  1473  0482                     l4469:	
  1474  0482  2C63               	goto	l8825
  1475                           	line	29
  1476                           	
  1477  0483                     l4471:	
  1478                           	line	13
  1479  0483  2C63               	goto	l8825
  1480                           	
  1481  0484                     l4472:	
  1482                           	line	30
  1483                           	
  1484  0484                     l4473:	
  1485                           	global	start
  1486  0484  3180  2817         	ljmp	start
  1487                           	opt stack 0
  1488                           GLOBAL	__end_of_main
  1489  0486                     	__end_of_main:
  1490 ;; =============== function _main ends ============
  1491                           
  1492                           	signat	_main,88
  1493                           	global	_MainT
  1494                           psect	text1313,local,class=CODE,delta=2
  1495                           global __ptext1313
  1496  00A0                     __ptext1313:
  1497                           
  1498 ;; *************** function _MainT *****************
  1499 ;; Defined at:
  1500 ;;		line 42 in file "G:\Program\PIC\Source_File\myMain.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  i               1    0        unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;		None               void
  1507 ;; Registers used:
  1508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1514 ;;      Params:         0       0       0       0       0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0       0       0       0
  1516 ;;      Temps:          0       1       0       0       0       0       0       0
  1517 ;;      Totals:         0       1       0       0       0       0       0       0
  1518 ;;Total ram usage:        1 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    8
  1521 ;; This function calls:
  1522 ;;		_setRF_Enable
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           psect	text1313
  1528                           	file	"G:\Program\PIC\Source_File\myMain.c"
  1529                           	line	42
  1530                           	global	__size_of_MainT
  1531  0081                     	__size_of_MainT	equ	__end_of_MainT-_MainT
  1532                           	
  1533  00A0                     _MainT:	
  1534                           	opt	stack 7
  1535                           ; Regs used in _MainT: [wreg+fsr1l-status,0+pclath+cstack]
  1536                           	line	45
  1537                           	
  1538  00A0                     l8789:	
  1539                           ;myMain.c: 43: char i;
  1540                           ;myMain.c: 45: if(!TMain->PowerON)
  1541  00A0  0020               	movlb 0	; select bank0
  1542  00A1  085D               	movf	(_TMain),w
  1543  00A2  0086               	movwf	fsr1l
  1544  00A3  0187               	clrf fsr1h	
  1545                           	
  1546  00A4  1801               	btfsc	indf1,0
  1547  00A5  28A7               	goto	u5341
  1548  00A6  28A8               	goto	u5340
  1549  00A7                     u5341:
  1550  00A7  28D4               	goto	l8799
  1551  00A8                     u5340:
  1552                           	line	47
  1553                           	
  1554  00A8                     l8791:	
  1555                           ;myMain.c: 46: {
  1556                           ;myMain.c: 47: TMain->PowerCount++;
  1557  00A8  085D               	movf	(_TMain),w
  1558  00A9  3E01               	addlw	01h
  1559  00AA  0086               	movwf	fsr1l
  1560  00AB  0187               	clrf fsr1h	
  1561                           	
  1562  00AC  3001               	movlw	01h
  1563  00AD  0781               	addwf	indf1,f
  1564  00AE  3141               	addfsr	fsr1,1
  1565  00AF  1803               	skipnc
  1566  00B0  0A81               	incf	indf1,f
  1567                           	line	48
  1568                           	
  1569  00B1                     l8793:	
  1570                           ;myMain.c: 48: if(TMain->PowerCount == 1500)
  1571  00B1  085D               	movf	(_TMain),w
  1572  00B2  3E01               	addlw	01h
  1573  00B3  0086               	movwf	fsr1l
  1574  00B4  0187               	clrf fsr1h	
  1575                           	
  1576  00B5  3F40               	moviw	[0]fsr1
  1577  00B6  3ADC               	xorlw	low(05DCh)
  1578  00B7  1D03               	skipz
  1579  00B8  28BB               	goto	u5355
  1580  00B9  3F41               	moviw	[1]fsr1
  1581  00BA  3A05               	xorlw	high(05DCh)
  1582  00BB                     u5355:
  1583  00BB  1D03               	skipz
  1584  00BC  28BE               	goto	u5351
  1585  00BD  28BF               	goto	u5350
  1586  00BE                     u5351:
  1587  00BE  2920               	goto	l4486
  1588  00BF                     u5350:
  1589                           	line	50
  1590                           	
  1591  00BF                     l8795:	
  1592                           ;myMain.c: 49: {
  1593                           ;myMain.c: 50: TMain->PowerCount=0;
  1594  00BF  085D               	movf	(_TMain),w
  1595  00C0  3E01               	addlw	01h
  1596  00C1  0086               	movwf	fsr1l
  1597  00C2  0187               	clrf fsr1h	
  1598                           	
  1599  00C3  3000               	movlw	low(0)
  1600  00C4  3FC0               	movwi	[0]fsr1
  1601  00C5  3000               	movlw	high(0)
  1602  00C6  3FC1               	movwi	[1]fsr1
  1603                           	line	51
  1604                           ;myMain.c: 51: TMain->PowerON=1;
  1605  00C7  085D               	movf	(_TMain),w
  1606  00C8  0086               	movwf	fsr1l
  1607  00C9  0187               	clrf fsr1h	
  1608                           	
  1609  00CA  1401               	bsf	indf1,0
  1610                           	line	54
  1611                           	
  1612  00CB                     l8797:	
  1613                           ;myMain.c: 54: setRF_Enable(1,1);
  1614  00CB  01D9               	clrf	(?_setRF_Enable)
  1615  00CC  1403               	bsf	status,0
  1616  00CD  0DD9               	rlf	(?_setRF_Enable),f
  1617  00CE  3001               	movlw	(01h)
  1618  00CF  3184  24B5  3180   	fcall	_setRF_Enable
  1619  00D2  2920               	goto	l4486
  1620                           	line	56
  1621                           	
  1622  00D3                     l4480:	
  1623                           	line	57
  1624                           ;myMain.c: 56: }
  1625                           ;myMain.c: 57: }
  1626  00D3  2920               	goto	l4486
  1627                           	line	58
  1628                           	
  1629  00D4                     l4479:	
  1630                           	line	60
  1631                           	
  1632  00D4                     l8799:	
  1633                           ;myMain.c: 58: else
  1634                           ;myMain.c: 59: {
  1635                           ;myMain.c: 60: TMain->Count1++;
  1636  00D4  0020               	movlb 0	; select bank0
  1637  00D5  085D               	movf	(_TMain),w
  1638  00D6  3E05               	addlw	05h
  1639  00D7  0086               	movwf	fsr1l
  1640  00D8  0187               	clrf fsr1h	
  1641                           	
  1642  00D9  3001               	movlw	01h
  1643  00DA  0781               	addwf	indf1,f
  1644  00DB  3141               	addfsr	fsr1,1
  1645  00DC  1803               	skipnc
  1646  00DD  0A81               	incf	indf1,f
  1647                           	line	61
  1648                           	
  1649  00DE                     l8801:	
  1650                           ;myMain.c: 61: if(TMain->Count1 == 1000)
  1651  00DE  085D               	movf	(_TMain),w
  1652  00DF  3E05               	addlw	05h
  1653  00E0  0086               	movwf	fsr1l
  1654  00E1  0187               	clrf fsr1h	
  1655                           	
  1656  00E2  3F40               	moviw	[0]fsr1
  1657  00E3  3AE8               	xorlw	low(03E8h)
  1658  00E4  1D03               	skipz
  1659  00E5  28E8               	goto	u5365
  1660  00E6  3F41               	moviw	[1]fsr1
  1661  00E7  3A03               	xorlw	high(03E8h)
  1662  00E8                     u5365:
  1663  00E8  1D03               	skipz
  1664  00E9  28EB               	goto	u5361
  1665  00EA  28EC               	goto	u5360
  1666  00EB                     u5361:
  1667  00EB  2920               	goto	l4486
  1668  00EC                     u5360:
  1669                           	line	63
  1670                           	
  1671  00EC                     l8803:	
  1672                           ;myMain.c: 62: {
  1673                           ;myMain.c: 63: TMain->Count1=0;
  1674  00EC  085D               	movf	(_TMain),w
  1675  00ED  3E05               	addlw	05h
  1676  00EE  0086               	movwf	fsr1l
  1677  00EF  0187               	clrf fsr1h	
  1678                           	
  1679  00F0  3000               	movlw	low(0)
  1680  00F1  3FC0               	movwi	[0]fsr1
  1681  00F2  3000               	movlw	high(0)
  1682  00F3  3FC1               	movwi	[1]fsr1
  1683                           	line	64
  1684                           	
  1685  00F4                     l8805:	
  1686                           ;myMain.c: 64: RA0=~RA0;
  1687  00F4  3001               	movlw	1<<((96)&7)
  1688  00F5  068C               	xorwf	((96)/8),f
  1689  00F6  28F8               	goto	l8809
  1690                           	line	73
  1691                           	
  1692  00F7                     l8807:	
  1693  00F7  28F8               	goto	l8809
  1694                           	line	77
  1695                           ;myMain.c: 74: {
  1696                           	
  1697  00F8                     l4483:	
  1698                           	line	79
  1699                           	
  1700  00F8                     l8809:	
  1701                           ;myMain.c: 77: }
  1702                           ;myMain.c: 79: if(TMain->Test)
  1703  00F8  085D               	movf	(_TMain),w
  1704  00F9  3E0C               	addlw	0Ch
  1705  00FA  0086               	movwf	fsr1l
  1706  00FB  0187               	clrf fsr1h	
  1707                           	
  1708  00FC  0801               	movf	indf1,w
  1709  00FD  3A00               	xorlw	0&0ffh
  1710  00FE  1903               	skipnz
  1711  00FF  2901               	goto	u5371
  1712  0100  2902               	goto	u5370
  1713  0101                     u5371:
  1714  0101  2920               	goto	l4486
  1715  0102                     u5370:
  1716                           	line	82
  1717                           	
  1718  0102                     l8811:	
  1719                           ;myMain.c: 80: {
  1720                           ;myMain.c: 81: ;;
  1721                           ;myMain.c: 82: I2C->Count++;
  1722  0102  3001               	movlw	(01h)
  1723  0103  00DB               	movwf	(??_MainT+0)+0
  1724  0104  0838               	movf	(_I2C),w
  1725  0105  3E40               	addlw	040h
  1726  0106  0086               	movwf	fsr1l
  1727  0107  3001               	movlw 1	; select bank2/3
  1728  0108  0087               	movwf fsr1h	
  1729                           	
  1730  0109  085B               	movf	(??_MainT+0)+0,w
  1731  010A  0781               	addwf	indf1,f
  1732                           	line	83
  1733                           	
  1734  010B                     l8813:	
  1735                           ;myMain.c: 83: if(I2C->Count==32)
  1736  010B  0838               	movf	(_I2C),w
  1737  010C  3E40               	addlw	040h
  1738  010D  0086               	movwf	fsr1l
  1739  010E  3001               	movlw 1	; select bank2/3
  1740  010F  0087               	movwf fsr1h	
  1741                           	
  1742  0110  0801               	movf	indf1,w
  1743  0111  3A20               	xorlw	020h&0ffh
  1744  0112  1D03               	skipz
  1745  0113  2915               	goto	u5381
  1746  0114  2916               	goto	u5380
  1747  0115                     u5381:
  1748  0115  2920               	goto	l4486
  1749  0116                     u5380:
  1750                           	line	85
  1751                           	
  1752  0116                     l8815:	
  1753                           ;myMain.c: 84: {
  1754                           ;myMain.c: 85: I2C->Count=0;
  1755  0116  0838               	movf	(_I2C),w
  1756  0117  3E40               	addlw	040h
  1757  0118  0086               	movwf	fsr1l
  1758  0119  3001               	movlw 1	; select bank2/3
  1759  011A  0087               	movwf fsr1h	
  1760                           	
  1761  011B  0181               	clrf	indf1
  1762  011C  2920               	goto	l4486
  1763                           	line	86
  1764                           	
  1765  011D                     l4485:	
  1766  011D  2920               	goto	l4486
  1767                           	line	87
  1768                           	
  1769  011E                     l4484:	
  1770  011E  2920               	goto	l4486
  1771                           	line	100
  1772                           	
  1773  011F                     l4482:	
  1774  011F  2920               	goto	l4486
  1775                           	line	122
  1776                           	
  1777  0120                     l4481:	
  1778                           	line	123
  1779                           	
  1780  0120                     l4486:	
  1781  0120  0008               	return
  1782                           	opt stack 0
  1783                           GLOBAL	__end_of_MainT
  1784  0121                     	__end_of_MainT:
  1785 ;; =============== function _MainT ends ============
  1786                           
  1787                           	signat	_MainT,88
  1788                           	global	_RF_Main
  1789                           psect	text1314,local,class=CODE,delta=2
  1790                           global __ptext1314
  1791  06D0                     __ptext1314:
  1792                           
  1793 ;; *************** function _RF_Main *****************
  1794 ;; Defined at:
  1795 ;;		line 25 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;		None               void
  1802 ;; Registers used:
  1803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1809 ;;      Params:         0       0       0       0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0       0
  1812 ;;      Totals:         0       0       0       0       0       0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    8
  1816 ;; This function calls:
  1817 ;;		_setRF_Main
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           psect	text1314
  1823                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  1824                           	line	25
  1825                           	global	__size_of_RF_Main
  1826  0005                     	__size_of_RF_Main	equ	__end_of_RF_Main-_RF_Main
  1827                           	
  1828  06D0                     _RF_Main:	
  1829                           	opt	stack 7
  1830                           ; Regs used in _RF_Main: [wreg+fsr1l-status,0+pclath+cstack]
  1831                           	line	27
  1832                           	
  1833  06D0                     l8787:	
  1834                           ;RF_Control_B1.c: 27: setRF_Main(1);
  1835  06D0  3001               	movlw	(01h)
  1836  06D1  3180  201A  3186   	fcall	_setRF_Main
  1837                           	line	29
  1838                           	
  1839  06D4                     l2266:	
  1840  06D4  0008               	return
  1841                           	opt stack 0
  1842                           GLOBAL	__end_of_RF_Main
  1843  06D5                     	__end_of_RF_Main:
  1844 ;; =============== function _RF_Main ends ============
  1845                           
  1846                           	signat	_RF_Main,88
  1847                           	global	_setRF_Enable
  1848                           psect	text1315,local,class=CODE,delta=2
  1849                           global __ptext1315
  1850  04B5                     __ptext1315:
  1851                           
  1852 ;; *************** function _setRF_Enable *****************
  1853 ;; Defined at:
  1854 ;;		line 177 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  rf              1    wreg     unsigned char 
  1857 ;;  command         1    5[BANK0 ] unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  rf              1    6[BANK0 ] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;		None               void
  1862 ;; Registers used:
  1863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1869 ;;      Params:         0       1       0       0       0       0       0       0
  1870 ;;      Locals:         0       1       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0
  1872 ;;      Totals:         0       2       0       0       0       0       0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    7
  1876 ;; This function calls:
  1877 ;;		_RfPointSelect
  1878 ;;		_CC2500_WriteCommand
  1879 ;;		_RF_RxDisable
  1880 ;; This function is called by:
  1881 ;;		_MainT
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           psect	text1315
  1885                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  1886                           	line	177
  1887                           	global	__size_of_setRF_Enable
  1888  0027                     	__size_of_setRF_Enable	equ	__end_of_setRF_Enable-_setRF_Enable
  1889                           	
  1890  04B5                     _setRF_Enable:	
  1891                           	opt	stack 7
  1892                           ; Regs used in _setRF_Enable: [wreg+fsr1l-status,0+pclath+cstack]
  1893                           ;setRF_Enable@rf stored from wreg
  1894  04B5  0020               	movlb 0	; select bank0
  1895  04B6  00DA               	movwf	(setRF_Enable@rf)
  1896                           	line	178
  1897                           	
  1898  04B7                     l8771:	
  1899                           ;RF_Control_B1.c: 178: RfPointSelect(rf);
  1900  04B7  085A               	movf	(setRF_Enable@rf),w
  1901  04B8  3186  267F  3184   	fcall	_RfPointSelect
  1902                           	line	179
  1903                           	
  1904  04BB                     l8773:	
  1905                           ;RF_Control_B1.c: 179: if(command)
  1906  04BB  0020               	movlb 0	; select bank0
  1907  04BC  0859               	movf	(setRF_Enable@command),w
  1908  04BD  1D03               	skipz
  1909  04BE  2CC0               	goto	u5330
  1910  04BF  2CC5               	goto	l8777
  1911  04C0                     u5330:
  1912                           	line	181
  1913                           	
  1914  04C0                     l8775:	
  1915                           ;RF_Control_B1.c: 180: {
  1916                           ;RF_Control_B1.c: 181: RF->Enable=1;
  1917  04C0  0876               	movf	(_RF),w
  1918  04C1  0086               	movwf	fsr1l
  1919  04C2  0187               	clrf fsr1h	
  1920                           	
  1921  04C3  1401               	bsf	indf1,0
  1922                           	line	182
  1923                           ;RF_Control_B1.c: 182: }
  1924  04C4  2CDB               	goto	l2304
  1925                           	line	183
  1926                           	
  1927  04C5                     l2302:	
  1928                           	line	185
  1929                           	
  1930  04C5                     l8777:	
  1931                           ;RF_Control_B1.c: 183: else
  1932                           ;RF_Control_B1.c: 184: {
  1933                           ;RF_Control_B1.c: 185: RF->Enable=0;
  1934  04C5  0876               	movf	(_RF),w
  1935  04C6  0086               	movwf	fsr1l
  1936  04C7  0187               	clrf fsr1h	
  1937                           	
  1938  04C8  1001               	bcf	indf1,0
  1939                           	line	186
  1940                           ;RF_Control_B1.c: 186: RF->Learn=0;
  1941  04C9  0876               	movf	(_RF),w
  1942  04CA  0086               	movwf	fsr1l
  1943  04CB  0187               	clrf fsr1h	
  1944                           	
  1945  04CC  1301               	bcf	indf1,6
  1946                           	line	187
  1947                           	
  1948  04CD                     l8779:	
  1949                           ;RF_Control_B1.c: 187: Transceive_GO=0;
  1950  04CD  1270               	bcf	(_Transceive_GO/8),(_Transceive_GO)&7
  1951                           	line	188
  1952                           	
  1953  04CE                     l8781:	
  1954                           ;RF_Control_B1.c: 188: CC2500_WriteCommand(0x36);
  1955  04CE  3036               	movlw	(036h)
  1956  04CF  3186  262B  3184   	fcall	_CC2500_WriteCommand
  1957                           	line	189
  1958                           	
  1959  04D2                     l8783:	
  1960                           ;RF_Control_B1.c: 189: CC2500_WriteCommand(0x3B);
  1961  04D2  303B               	movlw	(03Bh)
  1962  04D3  3186  262B  3184   	fcall	_CC2500_WriteCommand
  1963                           	line	190
  1964                           	
  1965  04D6                     l8785:	
  1966                           ;RF_Control_B1.c: 190: RF_RxDisable(1);
  1967  04D6  3001               	movlw	(01h)
  1968  04D7  3183  23F1  3184   	fcall	_RF_RxDisable
  1969  04DA  2CDB               	goto	l2304
  1970                           	line	191
  1971                           	
  1972  04DB                     l2303:	
  1973                           	line	192
  1974                           	
  1975  04DB                     l2304:	
  1976  04DB  0008               	return
  1977                           	opt stack 0
  1978                           GLOBAL	__end_of_setRF_Enable
  1979  04DC                     	__end_of_setRF_Enable:
  1980 ;; =============== function _setRF_Enable ends ============
  1981                           
  1982                           	signat	_setRF_Enable,8312
  1983                           	global	_setRF_Main
  1984                           psect	text1316,local,class=CODE,delta=2
  1985                           global __ptext1316
  1986  001A                     __ptext1316:
  1987                           
  1988 ;; *************** function _setRF_Main *****************
  1989 ;; Defined at:
  1990 ;;		line 59 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  rf              1    wreg     unsigned char 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  rf              1    7[BANK0 ] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;		None               void
  1997 ;; Registers used:
  1998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2004 ;;      Params:         0       0       0       0       0       0       0       0
  2005 ;;      Locals:         0       1       0       0       0       0       0       0
  2006 ;;      Temps:          0       1       0       0       0       0       0       0
  2007 ;;      Totals:         0       2       0       0       0       0       0       0
  2008 ;;Total ram usage:        2 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    7
  2011 ;; This function calls:
  2012 ;;		_RfPointSelect
  2013 ;;		_RF_RxDisable
  2014 ;;		_CC2500_RxData
  2015 ;;		_I2C_SetData
  2016 ;;		_CC2500_TxData
  2017 ;;		_CC2500_WriteCommand
  2018 ;;		_setINT_GO
  2019 ;; This function is called by:
  2020 ;;		_RF_Main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           psect	text1316
  2024                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  2025                           	line	59
  2026                           	global	__size_of_setRF_Main
  2027  0086                     	__size_of_setRF_Main	equ	__end_of_setRF_Main-_setRF_Main
  2028                           	
  2029  001A                     _setRF_Main:	
  2030                           	opt	stack 7
  2031                           ; Regs used in _setRF_Main: [wreg+fsr1l-status,0+pclath+cstack]
  2032                           ;setRF_Main@rf stored from wreg
  2033  001A  0020               	movlb 0	; select bank0
  2034  001B  00DB               	movwf	(setRF_Main@rf)
  2035                           	line	60
  2036                           	
  2037  001C                     l8729:	
  2038                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  2039  001C  085B               	movf	(setRF_Main@rf),w
  2040  001D  3186  267F  3180   	fcall	_RfPointSelect
  2041                           	line	61
  2042                           	
  2043  0020                     l8731:	
  2044                           ;RF_Control_B1.c: 61: if(RF->Enable)
  2045  0020  0876               	movf	(_RF),w
  2046  0021  0086               	movwf	fsr1l
  2047  0022  0187               	clrf fsr1h	
  2048                           	
  2049  0023  1C01               	btfss	indf1,0
  2050  0024  2826               	goto	u5261
  2051  0025  2827               	goto	u5260
  2052  0026                     u5261:
  2053  0026  289F               	goto	l2292
  2054  0027                     u5260:
  2055                           	line	75
  2056                           	
  2057  0027                     l8733:	
  2058                           ;RF_Control_B1.c: 62: {
  2059                           ;RF_Control_B1.c: 75: if(RF->Key)
  2060  0027  0876               	movf	(_RF),w
  2061  0028  0086               	movwf	fsr1l
  2062  0029  0187               	clrf fsr1h	
  2063                           	
  2064  002A  1F81               	btfss	indf1,7
  2065  002B  282D               	goto	u5271
  2066  002C  282E               	goto	u5270
  2067  002D                     u5271:
  2068  002D  2833               	goto	l8737
  2069  002E                     u5270:
  2070                           	line	77
  2071                           	
  2072  002E                     l8735:	
  2073                           ;RF_Control_B1.c: 76: {
  2074                           ;RF_Control_B1.c: 77: RF_RxDisable(1);
  2075  002E  3001               	movlw	(01h)
  2076  002F  3183  23F1  3180   	fcall	_RF_RxDisable
  2077                           	line	78
  2078                           ;RF_Control_B1.c: 78: }
  2079  0032  289F               	goto	l2292
  2080                           	line	79
  2081                           	
  2082  0033                     l2282:	
  2083                           	line	81
  2084                           	
  2085  0033                     l8737:	
  2086                           ;RF_Control_B1.c: 79: else
  2087                           ;RF_Control_B1.c: 80: {
  2088                           ;RF_Control_B1.c: 81: if(RF->ReceiveGO)
  2089  0033  0876               	movf	(_RF),w
  2090  0034  0086               	movwf	fsr1l
  2091  0035  0187               	clrf fsr1h	
  2092                           	
  2093  0036  1C81               	btfss	indf1,1
  2094  0037  2839               	goto	u5281
  2095  0038  283A               	goto	u5280
  2096  0039                     u5281:
  2097  0039  2846               	goto	l8745
  2098  003A                     u5280:
  2099                           	line	83
  2100                           	
  2101  003A                     l8739:	
  2102                           ;RF_Control_B1.c: 82: {
  2103                           ;RF_Control_B1.c: 83: RF->ReceiveGO=0;
  2104  003A  0876               	movf	(_RF),w
  2105  003B  0086               	movwf	fsr1l
  2106  003C  0187               	clrf fsr1h	
  2107                           	
  2108  003D  1081               	bcf	indf1,1
  2109                           	line	84
  2110                           	
  2111  003E                     l8741:	
  2112                           ;RF_Control_B1.c: 84: CC2500_RxData();
  2113  003E  3182  2221  3180   	fcall	_CC2500_RxData
  2114                           	line	86
  2115                           	
  2116  0041                     l8743:	
  2117                           ;RF_Control_B1.c: 86: I2C_SetData(1);
  2118  0041  3001               	movlw	(01h)
  2119  0042  3181  21A1  3180   	fcall	_I2C_SetData
  2120                           	line	96
  2121                           ;RF_Control_B1.c: 96: }
  2122  0045  289F               	goto	l2292
  2123                           	line	97
  2124                           	
  2125  0046                     l2284:	
  2126                           	line	99
  2127                           	
  2128  0046                     l8745:	
  2129                           ;RF_Control_B1.c: 97: else
  2130                           ;RF_Control_B1.c: 98: {
  2131                           ;RF_Control_B1.c: 99: if(RF->TransceiveGO)
  2132  0046  0876               	movf	(_RF),w
  2133  0047  0086               	movwf	fsr1l
  2134  0048  0187               	clrf fsr1h	
  2135                           	
  2136  0049  1D01               	btfss	indf1,2
  2137  004A  284C               	goto	u5291
  2138  004B  284D               	goto	u5290
  2139  004C                     u5291:
  2140  004C  2883               	goto	l8761
  2141  004D                     u5290:
  2142                           	line	101
  2143                           	
  2144  004D                     l8747:	
  2145                           ;RF_Control_B1.c: 100: {
  2146                           ;RF_Control_B1.c: 101: RF_RxDisable(1);
  2147  004D  3001               	movlw	(01h)
  2148  004E  3183  23F1  3180   	fcall	_RF_RxDisable
  2149                           	line	102
  2150                           	
  2151  0051                     l8749:	
  2152                           ;RF_Control_B1.c: 102: if(RF->Debounce == 0)
  2153  0051  0876               	movf	(_RF),w
  2154  0052  0086               	movwf	fsr1l
  2155  0053  0187               	clrf fsr1h	
  2156                           	
  2157  0054  1A81               	btfsc	indf1,5
  2158  0055  2857               	goto	u5301
  2159  0056  2858               	goto	u5300
  2160  0057                     u5301:
  2161  0057  2876               	goto	l8757
  2162  0058                     u5300:
  2163                           	line	104
  2164                           	
  2165  0058                     l8751:	
  2166                           ;RF_Control_B1.c: 103: {
  2167                           ;RF_Control_B1.c: 104: RF->DebounceTime++;
  2168  0058  3001               	movlw	(01h)
  2169  0059  0020               	movlb 0	; select bank0
  2170  005A  00DA               	movwf	(??_setRF_Main+0)+0
  2171  005B  0876               	movf	(_RF),w
  2172  005C  3E01               	addlw	01h
  2173  005D  0086               	movwf	fsr1l
  2174  005E  0187               	clrf fsr1h	
  2175                           	
  2176  005F  085A               	movf	(??_setRF_Main+0)+0,w
  2177  0060  0781               	addwf	indf1,f
  2178                           	line	105
  2179                           	
  2180  0061                     l8753:	
  2181                           ;RF_Control_B1.c: 105: if(RF->DebounceTime == 25)
  2182  0061  0876               	movf	(_RF),w
  2183  0062  3E01               	addlw	01h
  2184  0063  0086               	movwf	fsr1l
  2185  0064  0187               	clrf fsr1h	
  2186                           	
  2187  0065  0801               	movf	indf1,w
  2188  0066  3A19               	xorlw	019h&0ffh
  2189  0067  1D03               	skipz
  2190  0068  286A               	goto	u5311
  2191  0069  286B               	goto	u5310
  2192  006A                     u5311:
  2193  006A  289F               	goto	l2292
  2194  006B                     u5310:
  2195                           	line	107
  2196                           	
  2197  006B                     l8755:	
  2198                           ;RF_Control_B1.c: 106: {
  2199                           ;RF_Control_B1.c: 107: RF->DebounceTime=0;
  2200  006B  0876               	movf	(_RF),w
  2201  006C  3E01               	addlw	01h
  2202  006D  0086               	movwf	fsr1l
  2203  006E  0187               	clrf fsr1h	
  2204                           	
  2205  006F  0181               	clrf	indf1
  2206                           	line	108
  2207                           ;RF_Control_B1.c: 108: RF->Debounce=1;
  2208  0070  0876               	movf	(_RF),w
  2209  0071  0086               	movwf	fsr1l
  2210  0072  0187               	clrf fsr1h	
  2211                           	
  2212  0073  1681               	bsf	indf1,5
  2213  0074  289F               	goto	l2292
  2214                           	line	109
  2215                           	
  2216  0075                     l2288:	
  2217                           	line	110
  2218                           ;RF_Control_B1.c: 109: }
  2219                           ;RF_Control_B1.c: 110: }
  2220  0075  289F               	goto	l2292
  2221                           	line	111
  2222                           	
  2223  0076                     l2287:	
  2224                           	line	113
  2225                           	
  2226  0076                     l8757:	
  2227                           ;RF_Control_B1.c: 111: else
  2228                           ;RF_Control_B1.c: 112: {
  2229                           ;RF_Control_B1.c: 113: RF->Debounce=0;
  2230  0076  0876               	movf	(_RF),w
  2231  0077  0086               	movwf	fsr1l
  2232  0078  0187               	clrf fsr1h	
  2233                           	
  2234  0079  1281               	bcf	indf1,5
  2235                           	line	114
  2236                           ;RF_Control_B1.c: 114: RF->TransceiveGO=0;
  2237  007A  0876               	movf	(_RF),w
  2238  007B  0086               	movwf	fsr1l
  2239  007C  0187               	clrf fsr1h	
  2240                           	
  2241  007D  1101               	bcf	indf1,2
  2242                           	line	115
  2243                           	
  2244  007E                     l8759:	
  2245                           ;RF_Control_B1.c: 115: CC2500_TxData();
  2246  007E  3182  22F5  3180   	fcall	_CC2500_TxData
  2247  0081  289F               	goto	l2292
  2248                           	line	116
  2249                           	
  2250  0082                     l2289:	
  2251                           	line	117
  2252                           ;RF_Control_B1.c: 116: }
  2253                           ;RF_Control_B1.c: 117: }
  2254  0082  289F               	goto	l2292
  2255                           	line	118
  2256                           	
  2257  0083                     l2286:	
  2258                           	line	120
  2259                           	
  2260  0083                     l8761:	
  2261                           ;RF_Control_B1.c: 118: else
  2262                           ;RF_Control_B1.c: 119: {
  2263                           ;RF_Control_B1.c: 120: if(RF->RxStatus == 0 && 1)
  2264  0083  0876               	movf	(_RF),w
  2265  0084  0086               	movwf	fsr1l
  2266  0085  0187               	clrf fsr1h	
  2267                           	
  2268  0086  1981               	btfsc	indf1,3
  2269  0087  2889               	goto	u5321
  2270  0088  288A               	goto	u5320
  2271  0089                     u5321:
  2272  0089  289F               	goto	l2292
  2273  008A                     u5320:
  2274                           	line	122
  2275                           	
  2276  008A                     l8763:	
  2277                           ;RF_Control_B1.c: 121: {
  2278                           ;RF_Control_B1.c: 122: RF->RxStatus=1;
  2279  008A  0876               	movf	(_RF),w
  2280  008B  0086               	movwf	fsr1l
  2281  008C  0187               	clrf fsr1h	
  2282                           	
  2283  008D  1581               	bsf	indf1,3
  2284                           	line	123
  2285                           	
  2286  008E                     l8765:	
  2287                           ;RF_Control_B1.c: 123: CC2500_WriteCommand(0x36);
  2288  008E  3036               	movlw	(036h)
  2289  008F  3186  262B  3180   	fcall	_CC2500_WriteCommand
  2290                           	line	124
  2291                           	
  2292  0092                     l8767:	
  2293                           ;RF_Control_B1.c: 124: CC2500_WriteCommand(0x34);
  2294  0092  3034               	movlw	(034h)
  2295  0093  3186  262B  3180   	fcall	_CC2500_WriteCommand
  2296                           	line	125
  2297                           	
  2298  0096                     l8769:	
  2299                           ;RF_Control_B1.c: 125: setINT_GO(1);
  2300  0096  3001               	movlw	(01h)
  2301  0097  3186  26B4  3180   	fcall	_setINT_GO
  2302  009A  289F               	goto	l2292
  2303                           	line	126
  2304                           	
  2305  009B                     l2291:	
  2306  009B  289F               	goto	l2292
  2307                           	line	127
  2308                           	
  2309  009C                     l2290:	
  2310  009C  289F               	goto	l2292
  2311                           	line	128
  2312                           	
  2313  009D                     l2285:	
  2314  009D  289F               	goto	l2292
  2315                           	line	129
  2316                           	
  2317  009E                     l2283:	
  2318  009E  289F               	goto	l2292
  2319                           	line	130
  2320                           	
  2321  009F                     l2281:	
  2322                           	line	131
  2323                           	
  2324  009F                     l2292:	
  2325  009F  0008               	return
  2326                           	opt stack 0
  2327                           GLOBAL	__end_of_setRF_Main
  2328  00A0                     	__end_of_setRF_Main:
  2329 ;; =============== function _setRF_Main ends ============
  2330                           
  2331                           	signat	_setRF_Main,4216
  2332                           	global	_CC2500_PowerOnInitial
  2333                           psect	text1317,local,class=CODE,delta=2
  2334                           global __ptext1317
  2335  05C2                     __ptext1317:
  2336                           
  2337 ;; *************** function _CC2500_PowerOnInitial *****************
  2338 ;; Defined at:
  2339 ;;		line 98 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;		None               void
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2353 ;;      Params:         0       0       0       0       0       0       0       0
  2354 ;;      Locals:         0       0       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0
  2356 ;;      Totals:         0       0       0       0       0       0       0       0
  2357 ;;Total ram usage:        0 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    7
  2360 ;; This function calls:
  2361 ;;		_CC2500_PowerRST
  2362 ;;		_CC2500_InitSetREG
  2363 ;;		_CC2500_InitPATable
  2364 ;;		_CC2500_ClearTXFIFO
  2365 ;;		_CC2500_ClearRXFIFO
  2366 ;;		_CC2500_FrequencyCabr
  2367 ;;		_CC2500_SIDLEMode
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           psect	text1317
  2373                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  2374                           	line	98
  2375                           	global	__size_of_CC2500_PowerOnInitial
  2376  0016                     	__size_of_CC2500_PowerOnInitial	equ	__end_of_CC2500_PowerOnInitial-_CC2500_PowerOnIniti
                                 al
  2377                           	
  2378  05C2                     _CC2500_PowerOnInitial:	
  2379                           	opt	stack 8
  2380                           ; Regs used in _CC2500_PowerOnInitial: [wreg+status,2+status,0+pclath+cstack]
  2381                           	line	99
  2382                           	
  2383  05C2                     l8727:	
  2384                           ;CC2500_B1.c: 99: CC2500_PowerRST();
  2385  05C2  3183  2387  3185   	fcall	_CC2500_PowerRST
  2386                           	line	100
  2387                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
  2388  05C5  3184  2486  3185   	fcall	_CC2500_InitSetREG
  2389                           	line	101
  2390                           ;CC2500_B1.c: 101: CC2500_InitPATable();
  2391  05C8  3184  24DC  3185   	fcall	_CC2500_InitPATable
  2392                           	line	102
  2393                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
  2394  05CB  3186  26DF  3185   	fcall	_CC2500_ClearTXFIFO
  2395                           	line	103
  2396                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
  2397  05CE  3186  26DA  3185   	fcall	_CC2500_ClearRXFIFO
  2398                           	line	104
  2399                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
  2400  05D1  3186  268D  3185   	fcall	_CC2500_FrequencyCabr
  2401                           	line	105
  2402                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
  2403  05D4  3186  26D5  3185   	fcall	_CC2500_SIDLEMode
  2404                           	line	106
  2405                           	
  2406  05D7                     l1109:	
  2407  05D7  0008               	return
  2408                           	opt stack 0
  2409                           GLOBAL	__end_of_CC2500_PowerOnInitial
  2410  05D8                     	__end_of_CC2500_PowerOnInitial:
  2411 ;; =============== function _CC2500_PowerOnInitial ends ============
  2412                           
  2413                           	signat	_CC2500_PowerOnInitial,88
  2414                           	global	_RF_RxDisable
  2415                           psect	text1318,local,class=CODE,delta=2
  2416                           global __ptext1318
  2417  03F1                     __ptext1318:
  2418                           
  2419 ;; *************** function _RF_RxDisable *****************
  2420 ;; Defined at:
  2421 ;;		line 195 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  rf              1    wreg     unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  rf              1    4[BANK0 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;		None               void
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2435 ;;      Params:         0       0       0       0       0       0       0       0
  2436 ;;      Locals:         0       1       0       0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0
  2438 ;;      Totals:         0       1       0       0       0       0       0       0
  2439 ;;Total ram usage:        1 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    6
  2442 ;; This function calls:
  2443 ;;		_RfPointSelect
  2444 ;;		_CC2500_WriteCommand
  2445 ;;		_setINT_GO
  2446 ;; This function is called by:
  2447 ;;		_setRF_Main
  2448 ;;		_setRF_Enable
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           psect	text1318
  2452                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  2453                           	line	195
  2454                           	global	__size_of_RF_RxDisable
  2455  0034                     	__size_of_RF_RxDisable	equ	__end_of_RF_RxDisable-_RF_RxDisable
  2456                           	
  2457  03F1                     _RF_RxDisable:	
  2458                           	opt	stack 7
  2459                           ; Regs used in _RF_RxDisable: [wreg+fsr1l-status,0+pclath+cstack]
  2460                           ;RF_RxDisable@rf stored from wreg
  2461  03F1  0020               	movlb 0	; select bank0
  2462  03F2  00D8               	movwf	(RF_RxDisable@rf)
  2463                           	line	196
  2464                           	
  2465  03F3                     l8713:	
  2466                           ;RF_Control_B1.c: 196: RfPointSelect(rf);
  2467  03F3  0858               	movf	(RF_RxDisable@rf),w
  2468  03F4  3186  267F  3183   	fcall	_RfPointSelect
  2469                           	line	197
  2470                           	
  2471  03F7                     l8715:	
  2472                           ;RF_Control_B1.c: 197: if(RF->RxStatus || RF->ReceiveGO)
  2473  03F7  0876               	movf	(_RF),w
  2474  03F8  0086               	movwf	fsr1l
  2475  03F9  0187               	clrf fsr1h	
  2476                           	
  2477  03FA  1981               	btfsc	indf1,3
  2478  03FB  2BFD               	goto	u5241
  2479  03FC  2BFE               	goto	u5240
  2480  03FD                     u5241:
  2481  03FD  2C06               	goto	l8719
  2482  03FE                     u5240:
  2483                           	
  2484  03FE                     l8717:	
  2485  03FE  0876               	movf	(_RF),w
  2486  03FF  0086               	movwf	fsr1l
  2487  0400  0187               	clrf fsr1h	
  2488                           	
  2489  0401  1C81               	btfss	indf1,1
  2490  0402  2C04               	goto	u5251
  2491  0403  2C05               	goto	u5250
  2492  0404                     u5251:
  2493  0404  2C24               	goto	l2310
  2494  0405                     u5250:
  2495  0405  2C06               	goto	l8719
  2496                           	
  2497  0406                     l2309:	
  2498                           	line	199
  2499                           	
  2500  0406                     l8719:	
  2501                           ;RF_Control_B1.c: 198: {
  2502                           ;RF_Control_B1.c: 199: RF->RxStatus=0;
  2503  0406  0876               	movf	(_RF),w
  2504  0407  0086               	movwf	fsr1l
  2505  0408  0187               	clrf fsr1h	
  2506                           	
  2507  0409  1181               	bcf	indf1,3
  2508                           	line	200
  2509                           ;RF_Control_B1.c: 200: RF->ReceiveGO=0;
  2510  040A  0876               	movf	(_RF),w
  2511  040B  0086               	movwf	fsr1l
  2512  040C  0187               	clrf fsr1h	
  2513                           	
  2514  040D  1081               	bcf	indf1,1
  2515                           	line	201
  2516                           ;RF_Control_B1.c: 201: RF->DebounceTime=0;
  2517  040E  0876               	movf	(_RF),w
  2518  040F  3E01               	addlw	01h
  2519  0410  0086               	movwf	fsr1l
  2520  0411  0187               	clrf fsr1h	
  2521                           	
  2522  0412  0181               	clrf	indf1
  2523                           	line	202
  2524                           ;RF_Control_B1.c: 202: RF->Debounce=0;
  2525  0413  0876               	movf	(_RF),w
  2526  0414  0086               	movwf	fsr1l
  2527  0415  0187               	clrf fsr1h	
  2528                           	
  2529  0416  1281               	bcf	indf1,5
  2530                           	line	203
  2531                           	
  2532  0417                     l8721:	
  2533                           ;RF_Control_B1.c: 203: CC2500_WriteCommand(0x36);
  2534  0417  3036               	movlw	(036h)
  2535  0418  3186  262B  3183   	fcall	_CC2500_WriteCommand
  2536                           	line	204
  2537                           	
  2538  041B                     l8723:	
  2539                           ;RF_Control_B1.c: 204: CC2500_WriteCommand(0x3A);
  2540  041B  303A               	movlw	(03Ah)
  2541  041C  3186  262B  3183   	fcall	_CC2500_WriteCommand
  2542                           	line	205
  2543                           	
  2544  041F                     l8725:	
  2545                           ;RF_Control_B1.c: 205: setINT_GO(0);
  2546  041F  3000               	movlw	(0)
  2547  0420  3186  26B4  3183   	fcall	_setINT_GO
  2548  0423  2C24               	goto	l2310
  2549                           	line	206
  2550                           	
  2551  0424                     l2307:	
  2552                           	line	207
  2553                           	
  2554  0424                     l2310:	
  2555  0424  0008               	return
  2556                           	opt stack 0
  2557                           GLOBAL	__end_of_RF_RxDisable
  2558  0425                     	__end_of_RF_RxDisable:
  2559 ;; =============== function _RF_RxDisable ends ============
  2560                           
  2561                           	signat	_RF_RxDisable,4216
  2562                           	global	_CC2500_SIDLEMode
  2563                           psect	text1319,local,class=CODE,delta=2
  2564                           global __ptext1319
  2565  06D5                     __ptext1319:
  2566                           
  2567 ;; *************** function _CC2500_SIDLEMode *****************
  2568 ;; Defined at:
  2569 ;;		line 184 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;		None               void
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2583 ;;      Params:         0       0       0       0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0
  2586 ;;      Totals:         0       0       0       0       0       0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    6
  2590 ;; This function calls:
  2591 ;;		_CC2500_WriteCommand
  2592 ;; This function is called by:
  2593 ;;		_CC2500_PowerOnInitial
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           psect	text1319
  2597                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  2598                           	line	184
  2599                           	global	__size_of_CC2500_SIDLEMode
  2600  0005                     	__size_of_CC2500_SIDLEMode	equ	__end_of_CC2500_SIDLEMode-_CC2500_SIDLEMode
  2601                           	
  2602  06D5                     _CC2500_SIDLEMode:	
  2603                           	opt	stack 8
  2604                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
  2605                           	line	185
  2606                           	
  2607  06D5                     l8711:	
  2608                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
  2609  06D5  3036               	movlw	(036h)
  2610  06D6  3186  262B  3186   	fcall	_CC2500_WriteCommand
  2611                           	line	186
  2612                           	
  2613  06D9                     l1140:	
  2614  06D9  0008               	return
  2615                           	opt stack 0
  2616                           GLOBAL	__end_of_CC2500_SIDLEMode
  2617  06DA                     	__end_of_CC2500_SIDLEMode:
  2618 ;; =============== function _CC2500_SIDLEMode ends ============
  2619                           
  2620                           	signat	_CC2500_SIDLEMode,88
  2621                           	global	_CC2500_FrequencyCabr
  2622                           psect	text1320,local,class=CODE,delta=2
  2623                           global __ptext1320
  2624  068D                     __ptext1320:
  2625                           
  2626 ;; *************** function _CC2500_FrequencyCabr *****************
  2627 ;; Defined at:
  2628 ;;		line 176 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;		None               void
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2642 ;;      Params:         0       0       0       0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0
  2645 ;;      Totals:         0       0       0       0       0       0       0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    6
  2649 ;; This function calls:
  2650 ;;		_CC2500_WriteCommand
  2651 ;;		_DelayTime_1us
  2652 ;; This function is called by:
  2653 ;;		_CC2500_PowerOnInitial
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           psect	text1320
  2657                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  2658                           	line	176
  2659                           	global	__size_of_CC2500_FrequencyCabr
  2660  000D                     	__size_of_CC2500_FrequencyCabr	equ	__end_of_CC2500_FrequencyCabr-_CC2500_FrequencyCabr
  2661                           	
  2662  068D                     _CC2500_FrequencyCabr:	
  2663                           	opt	stack 8
  2664                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
  2665                           	line	177
  2666                           	
  2667  068D                     l8709:	
  2668                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
  2669  068D  3033               	movlw	(033h)
  2670  068E  3186  262B  3186   	fcall	_CC2500_WriteCommand
  2671                           	line	178
  2672                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
  2673  0691  30E8               	movlw	low(03E8h)
  2674  0692  0020               	movlb 0	; select bank0
  2675  0693  00D4               	movwf	(?_DelayTime_1us)
  2676  0694  3003               	movlw	high(03E8h)
  2677  0695  00D5               	movwf	((?_DelayTime_1us))+1
  2678  0696  3184  2425  3186   	fcall	_DelayTime_1us
  2679                           	line	179
  2680                           	
  2681  0699                     l1137:	
  2682  0699  0008               	return
  2683                           	opt stack 0
  2684                           GLOBAL	__end_of_CC2500_FrequencyCabr
  2685  069A                     	__end_of_CC2500_FrequencyCabr:
  2686 ;; =============== function _CC2500_FrequencyCabr ends ============
  2687                           
  2688                           	signat	_CC2500_FrequencyCabr,88
  2689                           	global	_CC2500_ClearRXFIFO
  2690                           psect	text1321,local,class=CODE,delta=2
  2691                           global __ptext1321
  2692  06DA                     __ptext1321:
  2693                           
  2694 ;; *************** function _CC2500_ClearRXFIFO *****************
  2695 ;; Defined at:
  2696 ;;		line 169 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;		None               void
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2710 ;;      Params:         0       0       0       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    6
  2717 ;; This function calls:
  2718 ;;		_CC2500_WriteCommand
  2719 ;; This function is called by:
  2720 ;;		_CC2500_PowerOnInitial
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           psect	text1321
  2724                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  2725                           	line	169
  2726                           	global	__size_of_CC2500_ClearRXFIFO
  2727  0005                     	__size_of_CC2500_ClearRXFIFO	equ	__end_of_CC2500_ClearRXFIFO-_CC2500_ClearRXFIFO
  2728                           	
  2729  06DA                     _CC2500_ClearRXFIFO:	
  2730                           	opt	stack 8
  2731                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
  2732                           	line	170
  2733                           	
  2734  06DA                     l8707:	
  2735                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
  2736  06DA  303A               	movlw	(03Ah)
  2737  06DB  3186  262B  3186   	fcall	_CC2500_WriteCommand
  2738                           	line	171
  2739                           	
  2740  06DE                     l1134:	
  2741  06DE  0008               	return
  2742                           	opt stack 0
  2743                           GLOBAL	__end_of_CC2500_ClearRXFIFO
  2744  06DF                     	__end_of_CC2500_ClearRXFIFO:
  2745 ;; =============== function _CC2500_ClearRXFIFO ends ============
  2746                           
  2747                           	signat	_CC2500_ClearRXFIFO,88
  2748                           	global	_CC2500_ClearTXFIFO
  2749                           psect	text1322,local,class=CODE,delta=2
  2750                           global __ptext1322
  2751  06DF                     __ptext1322:
  2752                           
  2753 ;; *************** function _CC2500_ClearTXFIFO *****************
  2754 ;; Defined at:
  2755 ;;		line 162 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, pclath, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2769 ;;      Params:         0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    6
  2776 ;; This function calls:
  2777 ;;		_CC2500_WriteCommand
  2778 ;; This function is called by:
  2779 ;;		_CC2500_PowerOnInitial
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           psect	text1322
  2783                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  2784                           	line	162
  2785                           	global	__size_of_CC2500_ClearTXFIFO
  2786  0005                     	__size_of_CC2500_ClearTXFIFO	equ	__end_of_CC2500_ClearTXFIFO-_CC2500_ClearTXFIFO
  2787                           	
  2788  06DF                     _CC2500_ClearTXFIFO:	
  2789                           	opt	stack 8
  2790                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
  2791                           	line	163
  2792                           	
  2793  06DF                     l8705:	
  2794                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
  2795  06DF  303B               	movlw	(03Bh)
  2796  06E0  3186  262B  3186   	fcall	_CC2500_WriteCommand
  2797                           	line	164
  2798                           	
  2799  06E3                     l1131:	
  2800  06E3  0008               	return
  2801                           	opt stack 0
  2802                           GLOBAL	__end_of_CC2500_ClearTXFIFO
  2803  06E4                     	__end_of_CC2500_ClearTXFIFO:
  2804 ;; =============== function _CC2500_ClearTXFIFO ends ============
  2805                           
  2806                           	signat	_CC2500_ClearTXFIFO,88
  2807                           	global	_CC2500_InitPATable
  2808                           psect	text1323,local,class=CODE,delta=2
  2809                           global __ptext1323
  2810  04DC                     __ptext1323:
  2811                           
  2812 ;; *************** function _CC2500_InitPATable *****************
  2813 ;; Defined at:
  2814 ;;		line 148 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  loop_d          1    7[BANK0 ] unsigned char 
  2819 ;;  temp            1    6[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2829 ;;      Params:         0       0       0       0       0       0       0       0
  2830 ;;      Locals:         0       2       0       0       0       0       0       0
  2831 ;;      Temps:          0       1       0       0       0       0       0       0
  2832 ;;      Totals:         0       3       0       0       0       0       0       0
  2833 ;;Total ram usage:        3 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    6
  2836 ;; This function calls:
  2837 ;;		_CC2500_WriteREG
  2838 ;; This function is called by:
  2839 ;;		_CC2500_PowerOnInitial
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           psect	text1323
  2843                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  2844                           	line	148
  2845                           	global	__size_of_CC2500_InitPATable
  2846  0027                     	__size_of_CC2500_InitPATable	equ	__end_of_CC2500_InitPATable-_CC2500_InitPATable
  2847                           	
  2848  04DC                     _CC2500_InitPATable:	
  2849                           	opt	stack 8
  2850                           ; Regs used in _CC2500_InitPATable: [wreg+status,2+status,0+pclath+cstack]
  2851                           	line	152
  2852                           	
  2853  04DC                     l8691:	
  2854                           ;CC2500_B1.c: 149: unsigned char loop_d;
  2855                           ;CC2500_B1.c: 150: unsigned char temp;
  2856                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
  2857  04DC  0020               	movlb 0	; select bank0
  2858  04DD  01DB               	clrf	(CC2500_InitPATable@loop_d)
  2859                           	
  2860  04DE                     l8693:	
  2861  04DE  3008               	movlw	(08h)
  2862  04DF  025B               	subwf	(CC2500_InitPATable@loop_d),w
  2863  04E0  1C03               	skipc
  2864  04E1  2CE3               	goto	u5221
  2865  04E2  2CE4               	goto	u5220
  2866  04E3                     u5221:
  2867  04E3  2CE6               	goto	l8697
  2868  04E4                     u5220:
  2869  04E4  2D02               	goto	l1128
  2870                           	
  2871  04E5                     l8695:	
  2872  04E5  2D02               	goto	l1128
  2873                           	line	153
  2874                           	
  2875  04E6                     l1126:	
  2876                           	line	154
  2877                           	
  2878  04E6                     l8697:	
  2879                           ;CC2500_B1.c: 153: {
  2880                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
  2881  04E6  085B               	movf	(CC2500_InitPATable@loop_d),w
  2882  04E7  3EED               	addlw	low(_CC2500_patable_vaule|8000h)
  2883  04E8  3182               	movlp	high __stringtab
  2884  04E9  000A               	callw
  2885  04EA  3184               	pagesel	$
  2886  04EB  00D9               	movwf	(??_CC2500_InitPATable+0)+0
  2887  04EC  0859               	movf	(??_CC2500_InitPATable+0)+0,w
  2888  04ED  00DA               	movwf	(CC2500_InitPATable@temp)
  2889                           	line	155
  2890                           	
  2891  04EE                     l8699:	
  2892                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
  2893  04EE  085A               	movf	(CC2500_InitPATable@temp),w
  2894  04EF  00D9               	movwf	(??_CC2500_InitPATable+0)+0
  2895  04F0  0859               	movf	(??_CC2500_InitPATable+0)+0,w
  2896  04F1  00D6               	movwf	(?_CC2500_WriteREG)
  2897  04F2  303E               	movlw	(03Eh)
  2898  04F3  3185  258C  3184   	fcall	_CC2500_WriteREG
  2899                           	line	152
  2900                           	
  2901  04F6                     l8701:	
  2902  04F6  3001               	movlw	(01h)
  2903  04F7  0020               	movlb 0	; select bank0
  2904  04F8  00D9               	movwf	(??_CC2500_InitPATable+0)+0
  2905  04F9  0859               	movf	(??_CC2500_InitPATable+0)+0,w
  2906  04FA  07DB               	addwf	(CC2500_InitPATable@loop_d),f
  2907                           	
  2908  04FB                     l8703:	
  2909  04FB  3008               	movlw	(08h)
  2910  04FC  025B               	subwf	(CC2500_InitPATable@loop_d),w
  2911  04FD  1C03               	skipc
  2912  04FE  2D00               	goto	u5231
  2913  04FF  2D01               	goto	u5230
  2914  0500                     u5231:
  2915  0500  2CE6               	goto	l8697
  2916  0501                     u5230:
  2917  0501  2D02               	goto	l1128
  2918                           	
  2919  0502                     l1127:	
  2920                           	line	157
  2921                           	
  2922  0502                     l1128:	
  2923  0502  0008               	return
  2924                           	opt stack 0
  2925                           GLOBAL	__end_of_CC2500_InitPATable
  2926  0503                     	__end_of_CC2500_InitPATable:
  2927 ;; =============== function _CC2500_InitPATable ends ============
  2928                           
  2929                           	signat	_CC2500_InitPATable,88
  2930                           	global	_CC2500_InitSetREG
  2931                           psect	text1324,local,class=CODE,delta=2
  2932                           global __ptext1324
  2933  0486                     __ptext1324:
  2934                           
  2935 ;; *************** function _CC2500_InitSetREG *****************
  2936 ;; Defined at:
  2937 ;;		line 132 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  loop_c          1    8[BANK0 ] unsigned char 
  2942 ;;  temp2           1    7[BANK0 ] unsigned char 
  2943 ;;  temp1           1    6[BANK0 ] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;		None               void
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2953 ;;      Params:         0       0       0       0       0       0       0       0
  2954 ;;      Locals:         0       3       0       0       0       0       0       0
  2955 ;;      Temps:          0       1       0       0       0       0       0       0
  2956 ;;      Totals:         0       4       0       0       0       0       0       0
  2957 ;;Total ram usage:        4 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    6
  2960 ;; This function calls:
  2961 ;;		_CC2500_WriteREG
  2962 ;; This function is called by:
  2963 ;;		_CC2500_PowerOnInitial
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           psect	text1324
  2967                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  2968                           	line	132
  2969                           	global	__size_of_CC2500_InitSetREG
  2970  002F                     	__size_of_CC2500_InitSetREG	equ	__end_of_CC2500_InitSetREG-_CC2500_InitSetREG
  2971                           	
  2972  0486                     _CC2500_InitSetREG:	
  2973                           	opt	stack 8
  2974                           ; Regs used in _CC2500_InitSetREG: [wreg+status,2+status,0+pclath+cstack]
  2975                           	line	136
  2976                           	
  2977  0486                     l8677:	
  2978                           ;CC2500_B1.c: 133: unsigned char loop_c;
  2979                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
  2980                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
  2981  0486  0020               	movlb 0	; select bank0
  2982  0487  01DC               	clrf	(CC2500_InitSetREG@loop_c)
  2983                           	
  2984  0488                     l8679:	
  2985  0488  302F               	movlw	(02Fh)
  2986  0489  025C               	subwf	(CC2500_InitSetREG@loop_c),w
  2987  048A  1C03               	skipc
  2988  048B  2C8D               	goto	u5201
  2989  048C  2C8E               	goto	u5200
  2990  048D                     u5201:
  2991  048D  2C90               	goto	l8683
  2992  048E                     u5200:
  2993  048E  2CB4               	goto	l1123
  2994                           	
  2995  048F                     l8681:	
  2996  048F  2CB4               	goto	l1123
  2997                           	line	137
  2998                           	
  2999  0490                     l1121:	
  3000                           	line	138
  3001                           	
  3002  0490                     l8683:	
  3003                           ;CC2500_B1.c: 137: {
  3004                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
  3005  0490  085C               	movf	(CC2500_InitSetREG@loop_c),w
  3006  0491  3E8F               	addlw	low(_CC2500_registers_address|8000h)
  3007  0492  3182               	movlp	high __stringtab
  3008  0493  000A               	callw
  3009  0494  3184               	pagesel	$
  3010  0495  00D9               	movwf	(??_CC2500_InitSetREG+0)+0
  3011  0496  0859               	movf	(??_CC2500_InitSetREG+0)+0,w
  3012  0497  00DA               	movwf	(CC2500_InitSetREG@temp1)
  3013                           	line	139
  3014                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
  3015  0498  085C               	movf	(CC2500_InitSetREG@loop_c),w
  3016  0499  3EBE               	addlw	low(_CC2500_rfSettings|8000h)
  3017  049A  3182               	movlp	high __stringtab
  3018  049B  000A               	callw
  3019  049C  3184               	pagesel	$
  3020  049D  00D9               	movwf	(??_CC2500_InitSetREG+0)+0
  3021  049E  0859               	movf	(??_CC2500_InitSetREG+0)+0,w
  3022  049F  00DB               	movwf	(CC2500_InitSetREG@temp2)
  3023                           	line	141
  3024                           	
  3025  04A0                     l8685:	
  3026                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
  3027  04A0  085B               	movf	(CC2500_InitSetREG@temp2),w
  3028  04A1  00D9               	movwf	(??_CC2500_InitSetREG+0)+0
  3029  04A2  0859               	movf	(??_CC2500_InitSetREG+0)+0,w
  3030  04A3  00D6               	movwf	(?_CC2500_WriteREG)
  3031  04A4  085A               	movf	(CC2500_InitSetREG@temp1),w
  3032  04A5  3185  258C  3184   	fcall	_CC2500_WriteREG
  3033                           	line	136
  3034                           	
  3035  04A8                     l8687:	
  3036  04A8  3001               	movlw	(01h)
  3037  04A9  0020               	movlb 0	; select bank0
  3038  04AA  00D9               	movwf	(??_CC2500_InitSetREG+0)+0
  3039  04AB  0859               	movf	(??_CC2500_InitSetREG+0)+0,w
  3040  04AC  07DC               	addwf	(CC2500_InitSetREG@loop_c),f
  3041                           	
  3042  04AD                     l8689:	
  3043  04AD  302F               	movlw	(02Fh)
  3044  04AE  025C               	subwf	(CC2500_InitSetREG@loop_c),w
  3045  04AF  1C03               	skipc
  3046  04B0  2CB2               	goto	u5211
  3047  04B1  2CB3               	goto	u5210
  3048  04B2                     u5211:
  3049  04B2  2C90               	goto	l8683
  3050  04B3                     u5210:
  3051  04B3  2CB4               	goto	l1123
  3052                           	
  3053  04B4                     l1122:	
  3054                           	line	143
  3055                           	
  3056  04B4                     l1123:	
  3057  04B4  0008               	return
  3058                           	opt stack 0
  3059                           GLOBAL	__end_of_CC2500_InitSetREG
  3060  04B5                     	__end_of_CC2500_InitSetREG:
  3061 ;; =============== function _CC2500_InitSetREG ends ============
  3062                           
  3063                           	signat	_CC2500_InitSetREG,88
  3064                           	global	_CC2500_RxData
  3065                           psect	text1325,local,class=CODE,delta=2
  3066                           global __ptext1325
  3067  0221                     __ptext1325:
  3068                           
  3069 ;; *************** function _CC2500_RxData *****************
  3070 ;; Defined at:
  3071 ;;		line 57 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  loop_f          1    5[BANK0 ] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;		None               void
  3078 ;; Registers used:
  3079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3085 ;;      Params:         0       0       0       0       0       0       0       0
  3086 ;;      Locals:         0       1       0       0       0       0       0       0
  3087 ;;      Temps:          0       1       0       0       0       0       0       0
  3088 ;;      Totals:         0       2       0       0       0       0       0       0
  3089 ;;Total ram usage:        2 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    6
  3092 ;; This function calls:
  3093 ;;		_CC2500_ReadStatus
  3094 ;;		_CC2500_WriteByte
  3095 ;;		_CC2500_ReadByte
  3096 ;;		_CC2500_WriteCommand
  3097 ;;		_setRF_RxStatus
  3098 ;; This function is called by:
  3099 ;;		_setRF_Main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           psect	text1325
  3103                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  3104                           	line	57
  3105                           	global	__size_of_CC2500_RxData
  3106  006D                     	__size_of_CC2500_RxData	equ	__end_of_CC2500_RxData-_CC2500_RxData
  3107                           	
  3108  0221                     _CC2500_RxData:	
  3109                           	opt	stack 7
  3110                           ; Regs used in _CC2500_RxData: [wreg+fsr1l-status,0+pclath+cstack]
  3111                           	line	62
  3112                           	
  3113  0221                     l8635:	
  3114                           ;CC2500_B1.c: 58: unsigned char loop_f;
  3115                           ;CC2500_B1.c: 62: if(RB0 == 1)
  3116  0221  0020               	movlb 0	; select bank0
  3117  0222  1C0D               	btfss	(104/8),(104)&7
  3118  0223  2A25               	goto	u5141
  3119  0224  2A26               	goto	u5140
  3120  0225                     u5141:
  3121  0225  2A2E               	goto	l8639
  3122  0226                     u5140:
  3123  0226  2A28               	goto	l1095
  3124                           	line	64
  3125                           	
  3126  0227                     l8637:	
  3127                           ;CC2500_B1.c: 63: {
  3128                           ;CC2500_B1.c: 64: while(RB0 == 1);
  3129  0227  2A28               	goto	l1095
  3130                           	
  3131  0228                     l1096:	
  3132                           	
  3133  0228                     l1095:	
  3134  0228  180D               	btfsc	(104/8),(104)&7
  3135  0229  2A2B               	goto	u5151
  3136  022A  2A2C               	goto	u5150
  3137  022B                     u5151:
  3138  022B  2A28               	goto	l1095
  3139  022C                     u5150:
  3140  022C  2A2E               	goto	l8639
  3141                           	
  3142  022D                     l1097:	
  3143  022D  2A2E               	goto	l8639
  3144                           	line	65
  3145                           	
  3146  022E                     l1094:	
  3147                           	line	66
  3148                           	
  3149  022E                     l8639:	
  3150                           ;CC2500_B1.c: 65: }
  3151                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  3152  022E  303B               	movlw	(03Bh)
  3153  022F  3185  25A7  3182   	fcall	_CC2500_ReadStatus
  3154                           	line	67
  3155                           	
  3156  0232                     l8641:	
  3157                           ;CC2500_B1.c: 67: if(s_data != 0)
  3158  0232  0020               	movlb 0	; select bank0
  3159  0233  083F               	movf	(_s_data),w
  3160  0234  1D03               	skipz
  3161  0235  2A37               	goto	u5160
  3162  0236  2A7F               	goto	l8673
  3163  0237                     u5160:
  3164                           	line	70
  3165                           	
  3166  0237                     l8643:	
  3167                           ;CC2500_B1.c: 69: {
  3168                           ;CC2500_B1.c: 70: RB5=0;
  3169  0237  128D               	bcf	(109/8),(109)&7
  3170                           	line	71
  3171                           	
  3172  0238                     l8645:	
  3173                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  3174  0238  30FF               	movlw	(0FFh)
  3175  0239  00D8               	movwf	(??_CC2500_RxData+0)+0
  3176  023A  0858               	movf	(??_CC2500_RxData+0)+0,w
  3177  023B  00BB               	movwf	(_SPI0Buffer)
  3178                           	line	72
  3179                           ;CC2500_B1.c: 72: while(RB3==1);
  3180  023C  2A3D               	goto	l1099
  3181                           	
  3182  023D                     l1100:	
  3183                           	
  3184  023D                     l1099:	
  3185  023D  198D               	btfsc	(107/8),(107)&7
  3186  023E  2A40               	goto	u5171
  3187  023F  2A41               	goto	u5170
  3188  0240                     u5171:
  3189  0240  2A3D               	goto	l1099
  3190  0241                     u5170:
  3191  0241  2A42               	goto	l8647
  3192                           	
  3193  0242                     l1101:	
  3194                           	line	73
  3195                           	
  3196  0242                     l8647:	
  3197                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  3198  0242  3185  254B  3182   	fcall	_CC2500_WriteByte
  3199                           	line	75
  3200                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  3201  0245  3185  2503  3182   	fcall	_CC2500_ReadByte
  3202                           	line	76
  3203                           	
  3204  0248                     l8649:	
  3205                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  3206  0248  0020               	movlb 0	; select bank0
  3207  0249  083B               	movf	(_SPI0Buffer),w
  3208  024A  00D8               	movwf	(??_CC2500_RxData+0)+0
  3209  024B  0858               	movf	(??_CC2500_RxData+0)+0,w
  3210  024C  00BA               	movwf	(_Rx_Length)
  3211                           	line	77
  3212                           	
  3213  024D                     l8651:	
  3214                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  3215  024D  01D9               	clrf	(CC2500_RxData@loop_f)
  3216  024E  2A60               	goto	l8659
  3217                           	line	78
  3218                           	
  3219  024F                     l1103:	
  3220                           	line	79
  3221                           	
  3222  024F                     l8653:	
  3223                           ;CC2500_B1.c: 78: {
  3224                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  3225  024F  3185  2503  3182   	fcall	_CC2500_ReadByte
  3226                           	line	80
  3227                           	
  3228  0252                     l8655:	
  3229                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  3230  0252  0020               	movlb 0	; select bank0
  3231  0253  083B               	movf	(_SPI0Buffer),w
  3232  0254  00D8               	movwf	(??_CC2500_RxData+0)+0
  3233  0255  0859               	movf	(CC2500_RxData@loop_f),w
  3234  0256  3E20               	addlw	_RF_Data&0ffh
  3235  0257  0086               	movwf	fsr1l
  3236  0258  0187               	clrf fsr1h	
  3237                           	
  3238  0259  0858               	movf	(??_CC2500_RxData+0)+0,w
  3239  025A  0081               	movwf	indf1
  3240                           	line	77
  3241                           	
  3242  025B                     l8657:	
  3243  025B  3001               	movlw	(01h)
  3244  025C  00D8               	movwf	(??_CC2500_RxData+0)+0
  3245  025D  0858               	movf	(??_CC2500_RxData+0)+0,w
  3246  025E  07D9               	addwf	(CC2500_RxData@loop_f),f
  3247  025F  2A60               	goto	l8659
  3248                           	
  3249  0260                     l1102:	
  3250                           	
  3251  0260                     l8659:	
  3252  0260  083A               	movf	(_Rx_Length),w
  3253  0261  0259               	subwf	(CC2500_RxData@loop_f),w
  3254  0262  1C03               	skipc
  3255  0263  2A65               	goto	u5181
  3256  0264  2A66               	goto	u5180
  3257  0265                     u5181:
  3258  0265  2A4F               	goto	l8653
  3259  0266                     u5180:
  3260  0266  2A67               	goto	l8661
  3261                           	
  3262  0267                     l1104:	
  3263                           	line	82
  3264                           	
  3265  0267                     l8661:	
  3266                           ;CC2500_B1.c: 81: }
  3267                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  3268  0267  3185  2503  3182   	fcall	_CC2500_ReadByte
  3269                           	line	83
  3270                           	
  3271  026A                     l8663:	
  3272                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  3273  026A  0020               	movlb 0	; select bank0
  3274  026B  083B               	movf	(_SPI0Buffer),w
  3275  026C  00D8               	movwf	(??_CC2500_RxData+0)+0
  3276  026D  0858               	movf	(??_CC2500_RxData+0)+0,w
  3277  026E  00B9               	movwf	(_RSSI)
  3278                           	line	84
  3279                           	
  3280  026F                     l8665:	
  3281                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  3282  026F  3185  2503  3182   	fcall	_CC2500_ReadByte
  3283                           	line	85
  3284                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  3285  0272  0020               	movlb 0	; select bank0
  3286  0273  083B               	movf	(_SPI0Buffer),w
  3287  0274  00D8               	movwf	(??_CC2500_RxData+0)+0
  3288  0275  0858               	movf	(??_CC2500_RxData+0)+0,w
  3289  0276  00B7               	movwf	(_CRC)
  3290                           	line	86
  3291                           	
  3292  0277                     l8667:	
  3293                           ;CC2500_B1.c: 86: RB5=1;
  3294  0277  168D               	bsf	(109/8),(109)&7
  3295                           	line	87
  3296                           	
  3297  0278                     l8669:	
  3298                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  3299  0278  1FB7               	btfss	(_CRC),(7)&7
  3300  0279  2A7B               	goto	u5191
  3301  027A  2A7C               	goto	u5190
  3302  027B                     u5191:
  3303  027B  2A7F               	goto	l8673
  3304  027C                     u5190:
  3305                           	line	88
  3306                           	
  3307  027C                     l8671:	
  3308                           ;CC2500_B1.c: 88: Receive_OK=1;
  3309  027C  1570               	bsf	(_Receive_OK/8),(_Receive_OK)&7
  3310  027D  2A7F               	goto	l8673
  3311                           	
  3312  027E                     l1105:	
  3313  027E  2A7F               	goto	l8673
  3314                           	line	89
  3315                           	
  3316  027F                     l1098:	
  3317                           	line	90
  3318                           	
  3319  027F                     l8673:	
  3320                           ;CC2500_B1.c: 89: }
  3321                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  3322  027F  3036               	movlw	(036h)
  3323  0280  3186  262B  3182   	fcall	_CC2500_WriteCommand
  3324                           	line	91
  3325                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  3326  0283  303A               	movlw	(03Ah)
  3327  0284  3186  262B  3182   	fcall	_CC2500_WriteCommand
  3328                           	line	92
  3329                           	
  3330  0287                     l8675:	
  3331                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  3332  0287  0020               	movlb 0	; select bank0
  3333  0288  01D6               	clrf	(?_setRF_RxStatus)
  3334  0289  3001               	movlw	(01h)
  3335  028A  3186  2661  3182   	fcall	_setRF_RxStatus
  3336                           	line	93
  3337                           	
  3338  028D                     l1106:	
  3339  028D  0008               	return
  3340                           	opt stack 0
  3341                           GLOBAL	__end_of_CC2500_RxData
  3342  028E                     	__end_of_CC2500_RxData:
  3343 ;; =============== function _CC2500_RxData ends ============
  3344                           
  3345                           	signat	_CC2500_RxData,88
  3346                           	global	_CC2500_TxData
  3347                           psect	text1326,local,class=CODE,delta=2
  3348                           global __ptext1326
  3349  02F5                     __ptext1326:
  3350                           
  3351 ;; *************** function _CC2500_TxData *****************
  3352 ;; Defined at:
  3353 ;;		line 31 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  loop_e          1    5[BANK0 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3367 ;;      Params:         0       0       0       0       0       0       0       0
  3368 ;;      Locals:         0       1       0       0       0       0       0       0
  3369 ;;      Temps:          0       1       0       0       0       0       0       0
  3370 ;;      Totals:         0       2       0       0       0       0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    6
  3374 ;; This function calls:
  3375 ;;		_CC2500_WriteByte
  3376 ;;		_CC2500_WriteCommand
  3377 ;; This function is called by:
  3378 ;;		_setRF_Main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           psect	text1326
  3382                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  3383                           	line	31
  3384                           	global	__size_of_CC2500_TxData
  3385  004D                     	__size_of_CC2500_TxData	equ	__end_of_CC2500_TxData-_CC2500_TxData
  3386                           	
  3387  02F5                     _CC2500_TxData:	
  3388                           	opt	stack 7
  3389                           ; Regs used in _CC2500_TxData: [wreg+fsr1l-status,0+pclath+cstack]
  3390                           	line	34
  3391                           	
  3392  02F5                     l8609:	
  3393                           ;CC2500_B1.c: 32: unsigned char loop_e;
  3394                           ;CC2500_B1.c: 34: RB5=0;
  3395  02F5  0020               	movlb 0	; select bank0
  3396  02F6  128D               	bcf	(109/8),(109)&7
  3397                           	line	35
  3398                           	
  3399  02F7                     l8611:	
  3400                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  3401  02F7  307F               	movlw	(07Fh)
  3402  02F8  00D8               	movwf	(??_CC2500_TxData+0)+0
  3403  02F9  0858               	movf	(??_CC2500_TxData+0)+0,w
  3404  02FA  00BB               	movwf	(_SPI0Buffer)
  3405                           	line	36
  3406                           ;CC2500_B1.c: 36: while(RB3==1);
  3407  02FB  2AFC               	goto	l1079
  3408                           	
  3409  02FC                     l1080:	
  3410                           	
  3411  02FC                     l1079:	
  3412  02FC  198D               	btfsc	(107/8),(107)&7
  3413  02FD  2AFF               	goto	u5101
  3414  02FE  2B00               	goto	u5100
  3415  02FF                     u5101:
  3416  02FF  2AFC               	goto	l1079
  3417  0300                     u5100:
  3418  0300  2B01               	goto	l8613
  3419                           	
  3420  0301                     l1081:	
  3421                           	line	37
  3422                           	
  3423  0301                     l8613:	
  3424                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  3425  0301  3185  254B  3182   	fcall	_CC2500_WriteByte
  3426                           	line	38
  3427                           	
  3428  0304                     l8615:	
  3429                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  3430  0304  0020               	movlb 0	; select bank0
  3431  0305  083C               	movf	(_Tx_Length),w
  3432  0306  00D8               	movwf	(??_CC2500_TxData+0)+0
  3433  0307  0858               	movf	(??_CC2500_TxData+0)+0,w
  3434  0308  00BB               	movwf	(_SPI0Buffer)
  3435                           	line	39
  3436                           	
  3437  0309                     l8617:	
  3438                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  3439  0309  3185  254B  3182   	fcall	_CC2500_WriteByte
  3440                           	line	40
  3441                           	
  3442  030C                     l8619:	
  3443                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  3444  030C  0020               	movlb 0	; select bank0
  3445  030D  01D9               	clrf	(CC2500_TxData@loop_e)
  3446  030E  2B20               	goto	l8627
  3447                           	line	41
  3448                           	
  3449  030F                     l1083:	
  3450                           	line	42
  3451                           	
  3452  030F                     l8621:	
  3453                           ;CC2500_B1.c: 41: {
  3454                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  3455  030F  0859               	movf	(CC2500_TxData@loop_e),w
  3456  0310  3E20               	addlw	_RF_Data&0ffh
  3457  0311  0086               	movwf	fsr1l
  3458  0312  0187               	clrf fsr1h	
  3459                           	
  3460  0313  0801               	movf	indf1,w
  3461  0314  00D8               	movwf	(??_CC2500_TxData+0)+0
  3462  0315  0858               	movf	(??_CC2500_TxData+0)+0,w
  3463  0316  00BB               	movwf	(_SPI0Buffer)
  3464                           	line	43
  3465                           	
  3466  0317                     l8623:	
  3467                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  3468  0317  3185  254B  3182   	fcall	_CC2500_WriteByte
  3469                           	line	40
  3470                           	
  3471  031A                     l8625:	
  3472  031A  3001               	movlw	(01h)
  3473  031B  0020               	movlb 0	; select bank0
  3474  031C  00D8               	movwf	(??_CC2500_TxData+0)+0
  3475  031D  0858               	movf	(??_CC2500_TxData+0)+0,w
  3476  031E  07D9               	addwf	(CC2500_TxData@loop_e),f
  3477  031F  2B20               	goto	l8627
  3478                           	
  3479  0320                     l1082:	
  3480                           	
  3481  0320                     l8627:	
  3482  0320  083C               	movf	(_Tx_Length),w
  3483  0321  0259               	subwf	(CC2500_TxData@loop_e),w
  3484  0322  1C03               	skipc
  3485  0323  2B25               	goto	u5111
  3486  0324  2B26               	goto	u5110
  3487  0325                     u5111:
  3488  0325  2B0F               	goto	l8621
  3489  0326                     u5110:
  3490                           	
  3491  0326                     l1084:	
  3492                           	line	45
  3493                           ;CC2500_B1.c: 44: }
  3494                           ;CC2500_B1.c: 45: RB5=1;
  3495  0326  168D               	bsf	(109/8),(109)&7
  3496                           	line	46
  3497                           	
  3498  0327                     l8629:	
  3499                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  3500  0327  3035               	movlw	(035h)
  3501  0328  3186  262B  3182   	fcall	_CC2500_WriteCommand
  3502                           	line	47
  3503                           ;CC2500_B1.c: 47: while(RB0==0);
  3504  032B  2B2C               	goto	l1085
  3505                           	
  3506  032C                     l1086:	
  3507                           	
  3508  032C                     l1085:	
  3509  032C  0020               	movlb 0	; select bank0
  3510  032D  1C0D               	btfss	(104/8),(104)&7
  3511  032E  2B30               	goto	u5121
  3512  032F  2B31               	goto	u5120
  3513  0330                     u5121:
  3514  0330  2B2C               	goto	l1085
  3515  0331                     u5120:
  3516  0331  2B33               	goto	l1088
  3517                           	
  3518  0332                     l1087:	
  3519                           	line	48
  3520                           ;CC2500_B1.c: 48: while(RB0==1);
  3521  0332  2B33               	goto	l1088
  3522                           	
  3523  0333                     l1089:	
  3524                           	
  3525  0333                     l1088:	
  3526  0333  180D               	btfsc	(104/8),(104)&7
  3527  0334  2B36               	goto	u5131
  3528  0335  2B37               	goto	u5130
  3529  0336                     u5131:
  3530  0336  2B33               	goto	l1088
  3531  0337                     u5130:
  3532  0337  2B38               	goto	l8631
  3533                           	
  3534  0338                     l1090:	
  3535                           	line	49
  3536                           	
  3537  0338                     l8631:	
  3538                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  3539  0338  3036               	movlw	(036h)
  3540  0339  3186  262B  3182   	fcall	_CC2500_WriteCommand
  3541                           	line	50
  3542                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  3543  033C  303B               	movlw	(03Bh)
  3544  033D  3186  262B  3182   	fcall	_CC2500_WriteCommand
  3545                           	line	51
  3546                           	
  3547  0340                     l8633:	
  3548                           ;CC2500_B1.c: 51: Transceive_OK=1;
  3549  0340  16F0               	bsf	(_Transceive_OK/8),(_Transceive_OK)&7
  3550                           	line	52
  3551                           	
  3552  0341                     l1091:	
  3553  0341  0008               	return
  3554                           	opt stack 0
  3555                           GLOBAL	__end_of_CC2500_TxData
  3556  0342                     	__end_of_CC2500_TxData:
  3557 ;; =============== function _CC2500_TxData ends ============
  3558                           
  3559                           	signat	_CC2500_TxData,88
  3560                           	global	_I2C_Main
  3561                           psect	text1327,local,class=CODE,delta=2
  3562                           global __ptext1327
  3563  0342                     __ptext1327:
  3564                           
  3565 ;; *************** function _I2C_Main *****************
  3566 ;; Defined at:
  3567 ;;		line 276 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  i               1    0        unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3581 ;;      Params:         0       0       0       0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    5
  3588 ;; This function calls:
  3589 ;;		_I2C_Slave_Mode
  3590 ;;		_I2C_SetData
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           psect	text1327
  3596                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3597                           	line	276
  3598                           	global	__size_of_I2C_Main
  3599  0045                     	__size_of_I2C_Main	equ	__end_of_I2C_Main-_I2C_Main
  3600                           	
  3601  0342                     _I2C_Main:	
  3602                           	opt	stack 10
  3603                           ; Regs used in _I2C_Main: [wreg+fsr1l-status,0+pclath+cstack]
  3604                           	line	279
  3605                           	
  3606  0342                     l8589:	
  3607                           ;MCU_16f1516_B1.c: 277: char i;
  3608                           ;MCU_16f1516_B1.c: 279: if(I2C->SlaveGO)
  3609  0342  0020               	movlb 0	; select bank0
  3610  0343  0838               	movf	(_I2C),w
  3611  0344  3E42               	addlw	042h
  3612  0345  0086               	movwf	fsr1l
  3613  0346  3001               	movlw 1	; select bank2/3
  3614  0347  0087               	movwf fsr1h	
  3615                           	
  3616  0348  1C01               	btfss	indf1,0
  3617  0349  2B4B               	goto	u5071
  3618  034A  2B4C               	goto	u5070
  3619  034B                     u5071:
  3620  034B  2B86               	goto	l5596
  3621  034C                     u5070:
  3622                           	line	283
  3623                           	
  3624  034C                     l8591:	
  3625                           ;MCU_16f1516_B1.c: 280: {
  3626                           ;MCU_16f1516_B1.c: 283: I2C->SlaveGO=0;
  3627  034C  0838               	movf	(_I2C),w
  3628  034D  3E42               	addlw	042h
  3629  034E  0086               	movwf	fsr1l
  3630  034F  3001               	movlw 1	; select bank2/3
  3631  0350  0087               	movwf fsr1h	
  3632                           	
  3633  0351  1001               	bcf	indf1,0
  3634                           	line	284
  3635                           	
  3636  0352                     l8593:	
  3637                           ;MCU_16f1516_B1.c: 284: I2C_Slave_Mode();
  3638  0352  3181  2121  3183   	fcall	_I2C_Slave_Mode
  3639                           	line	285
  3640                           	
  3641  0355                     l8595:	
  3642                           ;MCU_16f1516_B1.c: 285: SSPIE=1;
  3643  0355  0021               	movlb 1	; select bank1
  3644  0356  1591               	bsf	(1163/8)^080h,(1163)&7
  3645                           	line	287
  3646                           	
  3647  0357                     l8597:	
  3648                           ;MCU_16f1516_B1.c: 287: if(I2C->SlaveTxGO)
  3649  0357  0020               	movlb 0	; select bank0
  3650  0358  0838               	movf	(_I2C),w
  3651  0359  3E42               	addlw	042h
  3652  035A  0086               	movwf	fsr1l
  3653  035B  3001               	movlw 1	; select bank2/3
  3654  035C  0087               	movwf fsr1h	
  3655                           	
  3656  035D  1D01               	btfss	indf1,2
  3657  035E  2B60               	goto	u5081
  3658  035F  2B61               	goto	u5080
  3659  0360                     u5081:
  3660  0360  2B6E               	goto	l5594
  3661  0361                     u5080:
  3662                           	line	289
  3663                           	
  3664  0361                     l8599:	
  3665                           ;MCU_16f1516_B1.c: 288: {
  3666                           ;MCU_16f1516_B1.c: 289: I2C->SlaveTxGO=0;
  3667  0361  0838               	movf	(_I2C),w
  3668  0362  3E42               	addlw	042h
  3669  0363  0086               	movwf	fsr1l
  3670  0364  3001               	movlw 1	; select bank2/3
  3671  0365  0087               	movwf fsr1h	
  3672                           	
  3673  0366  1101               	bcf	indf1,2
  3674                           	line	290
  3675                           	
  3676  0367                     l8601:	
  3677                           ;MCU_16f1516_B1.c: 290: RC0=0;
  3678  0367  100E               	bcf	(112/8),(112)&7
  3679                           	line	291
  3680                           ;MCU_16f1516_B1.c: 291: I2C->SS=0;
  3681  0368  0838               	movf	(_I2C),w
  3682  0369  3E42               	addlw	042h
  3683  036A  0086               	movwf	fsr1l
  3684  036B  3001               	movlw 1	; select bank2/3
  3685  036C  0087               	movwf fsr1h	
  3686                           	
  3687  036D  1281               	bcf	indf1,5
  3688                           	line	292
  3689                           	
  3690  036E                     l5594:	
  3691                           	line	293
  3692                           ;MCU_16f1516_B1.c: 292: }
  3693                           ;MCU_16f1516_B1.c: 293: if(I2C->SlaveRxGO)
  3694  036E  0838               	movf	(_I2C),w
  3695  036F  3E42               	addlw	042h
  3696  0370  0086               	movwf	fsr1l
  3697  0371  3001               	movlw 1	; select bank2/3
  3698  0372  0087               	movwf fsr1h	
  3699                           	
  3700  0373  1C81               	btfss	indf1,1
  3701  0374  2B76               	goto	u5091
  3702  0375  2B77               	goto	u5090
  3703  0376                     u5091:
  3704  0376  2B82               	goto	l8607
  3705  0377                     u5090:
  3706                           	line	295
  3707                           	
  3708  0377                     l8603:	
  3709                           ;MCU_16f1516_B1.c: 294: {
  3710                           ;MCU_16f1516_B1.c: 295: I2C->SlaveRxGO=0;
  3711  0377  0838               	movf	(_I2C),w
  3712  0378  3E42               	addlw	042h
  3713  0379  0086               	movwf	fsr1l
  3714  037A  3001               	movlw 1	; select bank2/3
  3715  037B  0087               	movwf fsr1h	
  3716                           	
  3717  037C  1081               	bcf	indf1,1
  3718                           	line	296
  3719                           	
  3720  037D                     l8605:	
  3721                           ;MCU_16f1516_B1.c: 296: I2C_SetData(0);
  3722  037D  3000               	movlw	(0)
  3723  037E  3181  21A1  3183   	fcall	_I2C_SetData
  3724  0381  2B82               	goto	l8607
  3725                           	line	297
  3726                           	
  3727  0382                     l5595:	
  3728                           	line	298
  3729                           	
  3730  0382                     l8607:	
  3731                           ;MCU_16f1516_B1.c: 297: }
  3732                           ;MCU_16f1516_B1.c: 298: RA1=~RA1;
  3733  0382  3002               	movlw	1<<((97)&7)
  3734  0383  0020               	movlb 0	; select bank0
  3735  0384  068C               	xorwf	((97)/8),f
  3736  0385  2B86               	goto	l5596
  3737                           	line	299
  3738                           	
  3739  0386                     l5593:	
  3740                           	line	344
  3741                           	
  3742  0386                     l5596:	
  3743  0386  0008               	return
  3744                           	opt stack 0
  3745                           GLOBAL	__end_of_I2C_Main
  3746  0387                     	__end_of_I2C_Main:
  3747 ;; =============== function _I2C_Main ends ============
  3748                           
  3749                           	signat	_I2C_Main,88
  3750                           	global	_Mcu_Initial
  3751                           psect	text1328,local,class=CODE,delta=2
  3752                           global __ptext1328
  3753  0618                     __ptext1328:
  3754                           
  3755 ;; *************** function _Mcu_Initial *****************
  3756 ;; Defined at:
  3757 ;;		line 12 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;		None               void
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0, pclath, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3771 ;;      Params:         0       0       0       0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0
  3774 ;;      Totals:         0       0       0       0       0       0       0       0
  3775 ;;Total ram usage:        0 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    5
  3778 ;; This function calls:
  3779 ;;		_IO_Set
  3780 ;;		_TMR1_Set
  3781 ;;		_INT_Set
  3782 ;;		_I2C_Set
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           psect	text1328
  3788                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3789                           	line	12
  3790                           	global	__size_of_Mcu_Initial
  3791  0013                     	__size_of_Mcu_Initial	equ	__end_of_Mcu_Initial-_Mcu_Initial
  3792                           	
  3793  0618                     _Mcu_Initial:	
  3794                           	opt	stack 10
  3795                           ; Regs used in _Mcu_Initial: [wreg+status,2+status,0+pclath+cstack]
  3796                           	line	14
  3797                           	
  3798  0618                     l8575:	
  3799                           ;MCU_16f1516_B1.c: 14: OSCCON=0x78; ;;
  3800  0618  3078               	movlw	(078h)
  3801  0619  0021               	movlb 1	; select bank1
  3802  061A  0099               	movwf	(153)^080h	;volatile
  3803                           	line	16
  3804                           	
  3805  061B                     l8577:	
  3806                           ;MCU_16f1516_B1.c: 16: IO_Set();
  3807  061B  3185  25EE  3186   	fcall	_IO_Set
  3808                           	line	18
  3809                           	
  3810  061E                     l8579:	
  3811                           ;MCU_16f1516_B1.c: 18: _nop();
  3812  061E  0000               	nop
  3813                           	line	20
  3814                           	
  3815  061F                     l8581:	
  3816                           ;MCU_16f1516_B1.c: 20: TMR1_Set();
  3817  061F  3186  2651  3186   	fcall	_TMR1_Set
  3818                           	line	22
  3819                           	
  3820  0622                     l8583:	
  3821                           ;MCU_16f1516_B1.c: 22: _nop();
  3822  0622  0000               	nop
  3823                           	line	26
  3824                           	
  3825  0623                     l8585:	
  3826                           ;MCU_16f1516_B1.c: 26: INT_Set();
  3827  0623  3186  26E9  3186   	fcall	_INT_Set
  3828                           	line	28
  3829                           	
  3830  0626                     l8587:	
  3831                           ;MCU_16f1516_B1.c: 28: _nop();
  3832  0626  0000               	nop
  3833                           	line	30
  3834                           ;MCU_16f1516_B1.c: 30: I2C_Set();
  3835  0627  3185  25D8  3186   	fcall	_I2C_Set
  3836                           	line	35
  3837                           	
  3838  062A                     l5559:	
  3839  062A  0008               	return
  3840                           	opt stack 0
  3841                           GLOBAL	__end_of_Mcu_Initial
  3842  062B                     	__end_of_Mcu_Initial:
  3843 ;; =============== function _Mcu_Initial ends ============
  3844                           
  3845                           	signat	_Mcu_Initial,88
  3846                           	global	_RF_Initialization
  3847                           psect	text1329,local,class=CODE,delta=2
  3848                           global __ptext1329
  3849  06E4                     __ptext1329:
  3850                           
  3851 ;; *************** function _RF_Initialization *****************
  3852 ;; Defined at:
  3853 ;;		line 18 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;		None               void
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, pclath, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3867 ;;      Params:         0       0       0       0       0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0
  3870 ;;      Totals:         0       0       0       0       0       0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    5
  3874 ;; This function calls:
  3875 ;;		_setRF_Initialization
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           psect	text1329
  3881                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  3882                           	line	18
  3883                           	global	__size_of_RF_Initialization
  3884  0005                     	__size_of_RF_Initialization	equ	__end_of_RF_Initialization-_RF_Initialization
  3885                           	
  3886  06E4                     _RF_Initialization:	
  3887                           	opt	stack 10
  3888                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  3889                           	line	20
  3890                           	
  3891  06E4                     l8573:	
  3892                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  3893  06E4  3001               	movlw	(01h)
  3894  06E5  3186  26CA  3186   	fcall	_setRF_Initialization
  3895                           	line	22
  3896                           	
  3897  06E8                     l2263:	
  3898  06E8  0008               	return
  3899                           	opt stack 0
  3900                           GLOBAL	__end_of_RF_Initialization
  3901  06E9                     	__end_of_RF_Initialization:
  3902 ;; =============== function _RF_Initialization ends ============
  3903                           
  3904                           	signat	_RF_Initialization,88
  3905                           	global	_CC2500_WriteREG
  3906                           psect	text1330,local,class=CODE,delta=2
  3907                           global __ptext1330
  3908  058C                     __ptext1330:
  3909                           
  3910 ;; *************** function _CC2500_WriteREG *****************
  3911 ;; Defined at:
  3912 ;;		line 228 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  w_addr          1    wreg     unsigned char 
  3915 ;;  value           1    2[BANK0 ] unsigned char 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  w_addr          1    4[BANK0 ] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0, pclath, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3927 ;;      Params:         0       1       0       0       0       0       0       0
  3928 ;;      Locals:         0       1       0       0       0       0       0       0
  3929 ;;      Temps:          0       1       0       0       0       0       0       0
  3930 ;;      Totals:         0       3       0       0       0       0       0       0
  3931 ;;Total ram usage:        3 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    5
  3934 ;; This function calls:
  3935 ;;		_CC2500_WriteByte
  3936 ;; This function is called by:
  3937 ;;		_CC2500_InitSetREG
  3938 ;;		_CC2500_InitPATable
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           psect	text1330
  3942                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  3943                           	line	228
  3944                           	global	__size_of_CC2500_WriteREG
  3945  001B                     	__size_of_CC2500_WriteREG	equ	__end_of_CC2500_WriteREG-_CC2500_WriteREG
  3946                           	
  3947  058C                     _CC2500_WriteREG:	
  3948                           	opt	stack 8
  3949                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
  3950                           ;CC2500_WriteREG@w_addr stored from wreg
  3951  058C  0020               	movlb 0	; select bank0
  3952  058D  00D8               	movwf	(CC2500_WriteREG@w_addr)
  3953                           	line	229
  3954                           	
  3955  058E                     l8561:	
  3956                           ;CC2500_B1.c: 229: RB5=0;
  3957  058E  128D               	bcf	(109/8),(109)&7
  3958                           	line	230
  3959                           	
  3960  058F                     l8563:	
  3961                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
  3962  058F  0858               	movf	(CC2500_WriteREG@w_addr),w
  3963  0590  00D7               	movwf	(??_CC2500_WriteREG+0)+0
  3964  0591  0857               	movf	(??_CC2500_WriteREG+0)+0,w
  3965  0592  00BB               	movwf	(_SPI0Buffer)
  3966                           	line	231
  3967                           ;CC2500_B1.c: 231: while(RB3==1);
  3968  0593  2D94               	goto	l1157
  3969                           	
  3970  0594                     l1158:	
  3971                           	
  3972  0594                     l1157:	
  3973  0594  198D               	btfsc	(107/8),(107)&7
  3974  0595  2D97               	goto	u5061
  3975  0596  2D98               	goto	u5060
  3976  0597                     u5061:
  3977  0597  2D94               	goto	l1157
  3978  0598                     u5060:
  3979  0598  2D99               	goto	l8565
  3980                           	
  3981  0599                     l1159:	
  3982                           	line	232
  3983                           	
  3984  0599                     l8565:	
  3985                           ;CC2500_B1.c: 232: CC2500_WriteByte();
  3986  0599  3185  254B  3185   	fcall	_CC2500_WriteByte
  3987                           	line	233
  3988                           	
  3989  059C                     l8567:	
  3990                           ;CC2500_B1.c: 233: SPI0Buffer=value;
  3991  059C  0020               	movlb 0	; select bank0
  3992  059D  0856               	movf	(CC2500_WriteREG@value),w
  3993  059E  00D7               	movwf	(??_CC2500_WriteREG+0)+0
  3994  059F  0857               	movf	(??_CC2500_WriteREG+0)+0,w
  3995  05A0  00BB               	movwf	(_SPI0Buffer)
  3996                           	line	234
  3997                           	
  3998  05A1                     l8569:	
  3999                           ;CC2500_B1.c: 234: CC2500_WriteByte();
  4000  05A1  3185  254B  3185   	fcall	_CC2500_WriteByte
  4001                           	line	235
  4002                           	
  4003  05A4                     l8571:	
  4004                           ;CC2500_B1.c: 235: RB5=1;
  4005  05A4  0020               	movlb 0	; select bank0
  4006  05A5  168D               	bsf	(109/8),(109)&7
  4007                           	line	236
  4008                           	
  4009  05A6                     l1160:	
  4010  05A6  0008               	return
  4011                           	opt stack 0
  4012                           GLOBAL	__end_of_CC2500_WriteREG
  4013  05A7                     	__end_of_CC2500_WriteREG:
  4014 ;; =============== function _CC2500_WriteREG ends ============
  4015                           
  4016                           	signat	_CC2500_WriteREG,8312
  4017                           	global	_CC2500_PowerRST
  4018                           psect	text1331,local,class=CODE,delta=2
  4019                           global __ptext1331
  4020  0387                     __ptext1331:
  4021                           
  4022 ;; *************** function _CC2500_PowerRST *****************
  4023 ;; Defined at:
  4024 ;;		line 111 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4038 ;;      Params:         0       0       0       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0
  4040 ;;      Temps:          0       1       0       0       0       0       0       0
  4041 ;;      Totals:         0       1       0       0       0       0       0       0
  4042 ;;Total ram usage:        1 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    5
  4045 ;; This function calls:
  4046 ;;		_DelayTime_1us
  4047 ;;		_CC2500_WriteByte
  4048 ;; This function is called by:
  4049 ;;		_CC2500_PowerOnInitial
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           psect	text1331
  4053                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  4054                           	line	111
  4055                           	global	__size_of_CC2500_PowerRST
  4056  0035                     	__size_of_CC2500_PowerRST	equ	__end_of_CC2500_PowerRST-_CC2500_PowerRST
  4057                           	
  4058  0387                     _CC2500_PowerRST:	
  4059                           	opt	stack 9
  4060                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
  4061                           	line	112
  4062                           	
  4063  0387                     l8547:	
  4064                           ;CC2500_B1.c: 112: RB2=0;
  4065  0387  0020               	movlb 0	; select bank0
  4066  0388  110D               	bcf	(106/8),(106)&7
  4067                           	line	113
  4068                           ;CC2500_B1.c: 113: RB1=0;
  4069  0389  108D               	bcf	(105/8),(105)&7
  4070                           	line	114
  4071                           ;CC2500_B1.c: 114: RB5=1;
  4072  038A  168D               	bsf	(109/8),(109)&7
  4073                           	line	115
  4074                           	
  4075  038B                     l8549:	
  4076                           ;CC2500_B1.c: 115: DelayTime_1us(10);
  4077  038B  300A               	movlw	low(0Ah)
  4078  038C  00D4               	movwf	(?_DelayTime_1us)
  4079  038D  3000               	movlw	high(0Ah)
  4080  038E  00D5               	movwf	((?_DelayTime_1us))+1
  4081  038F  3184  2425  3183   	fcall	_DelayTime_1us
  4082                           	line	116
  4083                           	
  4084  0392                     l8551:	
  4085                           ;CC2500_B1.c: 116: RB5=0;
  4086  0392  0020               	movlb 0	; select bank0
  4087  0393  128D               	bcf	(109/8),(109)&7
  4088                           	line	117
  4089                           ;CC2500_B1.c: 117: DelayTime_1us(10);
  4090  0394  300A               	movlw	low(0Ah)
  4091  0395  00D4               	movwf	(?_DelayTime_1us)
  4092  0396  3000               	movlw	high(0Ah)
  4093  0397  00D5               	movwf	((?_DelayTime_1us))+1
  4094  0398  3184  2425  3183   	fcall	_DelayTime_1us
  4095                           	line	118
  4096                           	
  4097  039B                     l8553:	
  4098                           ;CC2500_B1.c: 118: RB5=1;
  4099  039B  0020               	movlb 0	; select bank0
  4100  039C  168D               	bsf	(109/8),(109)&7
  4101                           	line	119
  4102                           ;CC2500_B1.c: 119: DelayTime_1us(40);
  4103  039D  3028               	movlw	low(028h)
  4104  039E  00D4               	movwf	(?_DelayTime_1us)
  4105  039F  3000               	movlw	high(028h)
  4106  03A0  00D5               	movwf	((?_DelayTime_1us))+1
  4107  03A1  3184  2425  3183   	fcall	_DelayTime_1us
  4108                           	line	120
  4109                           	
  4110  03A4                     l8555:	
  4111                           ;CC2500_B1.c: 120: RB5=0;
  4112  03A4  0020               	movlb 0	; select bank0
  4113  03A5  128D               	bcf	(109/8),(109)&7
  4114                           	line	121
  4115                           	
  4116  03A6                     l8557:	
  4117                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
  4118  03A6  3030               	movlw	(030h)
  4119  03A7  00DA               	movwf	(??_CC2500_PowerRST+0)+0
  4120  03A8  085A               	movf	(??_CC2500_PowerRST+0)+0,w
  4121  03A9  00BB               	movwf	(_SPI0Buffer)
  4122                           	line	122
  4123                           ;CC2500_B1.c: 122: while(RB3==1);
  4124  03AA  2BAB               	goto	l1112
  4125                           	
  4126  03AB                     l1113:	
  4127                           	
  4128  03AB                     l1112:	
  4129  03AB  198D               	btfsc	(107/8),(107)&7
  4130  03AC  2BAE               	goto	u5041
  4131  03AD  2BAF               	goto	u5040
  4132  03AE                     u5041:
  4133  03AE  2BAB               	goto	l1112
  4134  03AF                     u5040:
  4135  03AF  2BB0               	goto	l8559
  4136                           	
  4137  03B0                     l1114:	
  4138                           	line	123
  4139                           	
  4140  03B0                     l8559:	
  4141                           ;CC2500_B1.c: 123: CC2500_WriteByte();
  4142  03B0  3185  254B  3183   	fcall	_CC2500_WriteByte
  4143                           	line	124
  4144                           ;CC2500_B1.c: 124: while(RB3==1);
  4145  03B3  2BB4               	goto	l1115
  4146                           	
  4147  03B4                     l1116:	
  4148                           	
  4149  03B4                     l1115:	
  4150  03B4  0020               	movlb 0	; select bank0
  4151  03B5  198D               	btfsc	(107/8),(107)&7
  4152  03B6  2BB8               	goto	u5051
  4153  03B7  2BB9               	goto	u5050
  4154  03B8                     u5051:
  4155  03B8  2BB4               	goto	l1115
  4156  03B9                     u5050:
  4157                           	
  4158  03B9                     l1117:	
  4159                           	line	125
  4160                           ;CC2500_B1.c: 125: RB1=0;
  4161  03B9  108D               	bcf	(105/8),(105)&7
  4162                           	line	126
  4163                           ;CC2500_B1.c: 126: RB5=1;
  4164  03BA  168D               	bsf	(109/8),(109)&7
  4165                           	line	127
  4166                           	
  4167  03BB                     l1118:	
  4168  03BB  0008               	return
  4169                           	opt stack 0
  4170                           GLOBAL	__end_of_CC2500_PowerRST
  4171  03BC                     	__end_of_CC2500_PowerRST:
  4172 ;; =============== function _CC2500_PowerRST ends ============
  4173                           
  4174                           	signat	_CC2500_PowerRST,88
  4175                           	global	_setRF_RxStatus
  4176                           psect	text1332,local,class=CODE,delta=2
  4177                           global __ptext1332
  4178  0661                     __ptext1332:
  4179                           
  4180 ;; *************** function _setRF_RxStatus *****************
  4181 ;; Defined at:
  4182 ;;		line 44 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  rf              1    wreg     unsigned char 
  4185 ;;  command         1    2[BANK0 ] unsigned char 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  rf              1    3[BANK0 ] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;		None               void
  4190 ;; Registers used:
  4191 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4197 ;;      Params:         0       1       0       0       0       0       0       0
  4198 ;;      Locals:         0       1       0       0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0
  4200 ;;      Totals:         0       2       0       0       0       0       0       0
  4201 ;;Total ram usage:        2 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    5
  4204 ;; This function calls:
  4205 ;;		_RfPointSelect
  4206 ;; This function is called by:
  4207 ;;		_CC2500_RxData
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           psect	text1332
  4211                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  4212                           	line	44
  4213                           	global	__size_of_setRF_RxStatus
  4214  000F                     	__size_of_setRF_RxStatus	equ	__end_of_setRF_RxStatus-_setRF_RxStatus
  4215                           	
  4216  0661                     _setRF_RxStatus:	
  4217                           	opt	stack 7
  4218                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l-status,0+pclath+cstack]
  4219                           ;setRF_RxStatus@rf stored from wreg
  4220  0661  0020               	movlb 0	; select bank0
  4221  0662  00D7               	movwf	(setRF_RxStatus@rf)
  4222                           	line	45
  4223                           	
  4224  0663                     l8543:	
  4225                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  4226  0663  0857               	movf	(setRF_RxStatus@rf),w
  4227  0664  3186  267F  3186   	fcall	_RfPointSelect
  4228                           	line	46
  4229                           	
  4230  0667                     l8545:	
  4231                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  4232  0667  0876               	movf	(_RF),w
  4233  0668  0086               	movwf	fsr1l
  4234  0669  0187               	clrf fsr1h	
  4235                           	
  4236  066A  0020               	movlb 0	; select bank0
  4237  066B  0856               	movf	(setRF_RxStatus@command),w
  4238  066C  1181               	bcf	indf1,3
  4239  066D  1D03               	skipz
  4240  066E  1581               	bsf	indf1,3
  4241                           	line	47
  4242                           	
  4243  066F                     l2275:	
  4244  066F  0008               	return
  4245                           	opt stack 0
  4246                           GLOBAL	__end_of_setRF_RxStatus
  4247  0670                     	__end_of_setRF_RxStatus:
  4248 ;; =============== function _setRF_RxStatus ends ============
  4249                           
  4250                           	signat	_setRF_RxStatus,8312
  4251                           	global	_CC2500_ReadStatus
  4252                           psect	text1333,local,class=CODE,delta=2
  4253                           global __ptext1333
  4254  05A7                     __ptext1333:
  4255                           
  4256 ;; *************** function _CC2500_ReadStatus *****************
  4257 ;; Defined at:
  4258 ;;		line 268 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  status_addr     1    wreg     unsigned char 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  status_addr     1    3[BANK0 ] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;		None               void
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0, pclath, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4272 ;;      Params:         0       0       0       0       0       0       0       0
  4273 ;;      Locals:         0       1       0       0       0       0       0       0
  4274 ;;      Temps:          0       1       0       0       0       0       0       0
  4275 ;;      Totals:         0       2       0       0       0       0       0       0
  4276 ;;Total ram usage:        2 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    5
  4279 ;; This function calls:
  4280 ;;		_CC2500_WriteByte
  4281 ;;		_CC2500_ReadByte
  4282 ;; This function is called by:
  4283 ;;		_CC2500_RxData
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           psect	text1333
  4287                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  4288                           	line	268
  4289                           	global	__size_of_CC2500_ReadStatus
  4290  001B                     	__size_of_CC2500_ReadStatus	equ	__end_of_CC2500_ReadStatus-_CC2500_ReadStatus
  4291                           	
  4292  05A7                     _CC2500_ReadStatus:	
  4293                           	opt	stack 7
  4294                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  4295                           ;CC2500_ReadStatus@status_addr stored from wreg
  4296  05A7  0020               	movlb 0	; select bank0
  4297  05A8  00D7               	movwf	(CC2500_ReadStatus@status_addr)
  4298                           	line	269
  4299                           	
  4300  05A9                     l8533:	
  4301                           ;CC2500_B1.c: 269: RB5=0;
  4302  05A9  128D               	bcf	(109/8),(109)&7
  4303                           	line	270
  4304                           	
  4305  05AA                     l8535:	
  4306                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  4307  05AA  0857               	movf	(CC2500_ReadStatus@status_addr),w
  4308  05AB  3EC0               	addlw	0C0h
  4309  05AC  00D6               	movwf	(??_CC2500_ReadStatus+0)+0
  4310  05AD  0856               	movf	(??_CC2500_ReadStatus+0)+0,w
  4311  05AE  00BB               	movwf	(_SPI0Buffer)
  4312                           	line	272
  4313                           ;CC2500_B1.c: 272: while(RB3==1);
  4314  05AF  2DB0               	goto	l1175
  4315                           	
  4316  05B0                     l1176:	
  4317                           	
  4318  05B0                     l1175:	
  4319  05B0  198D               	btfsc	(107/8),(107)&7
  4320  05B1  2DB3               	goto	u5031
  4321  05B2  2DB4               	goto	u5030
  4322  05B3                     u5031:
  4323  05B3  2DB0               	goto	l1175
  4324  05B4                     u5030:
  4325  05B4  2DB5               	goto	l8537
  4326                           	
  4327  05B5                     l1177:	
  4328                           	line	274
  4329                           	
  4330  05B5                     l8537:	
  4331                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  4332  05B5  3185  254B  3185   	fcall	_CC2500_WriteByte
  4333                           	line	275
  4334                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  4335  05B8  3185  2503  3185   	fcall	_CC2500_ReadByte
  4336                           	line	276
  4337                           	
  4338  05BB                     l8539:	
  4339                           ;CC2500_B1.c: 276: RB5=1;
  4340  05BB  0020               	movlb 0	; select bank0
  4341  05BC  168D               	bsf	(109/8),(109)&7
  4342                           	line	278
  4343                           	
  4344  05BD                     l8541:	
  4345                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  4346  05BD  083B               	movf	(_SPI0Buffer),w
  4347  05BE  00D6               	movwf	(??_CC2500_ReadStatus+0)+0
  4348  05BF  0856               	movf	(??_CC2500_ReadStatus+0)+0,w
  4349  05C0  00BF               	movwf	(_s_data)
  4350                           	line	279
  4351                           	
  4352  05C1                     l1178:	
  4353  05C1  0008               	return
  4354                           	opt stack 0
  4355                           GLOBAL	__end_of_CC2500_ReadStatus
  4356  05C2                     	__end_of_CC2500_ReadStatus:
  4357 ;; =============== function _CC2500_ReadStatus ends ============
  4358                           
  4359                           	signat	_CC2500_ReadStatus,4216
  4360                           	global	_CC2500_WriteCommand
  4361                           psect	text1334,local,class=CODE,delta=2
  4362                           global __ptext1334
  4363  062B                     __ptext1334:
  4364                           
  4365 ;; *************** function _CC2500_WriteCommand *****************
  4366 ;; Defined at:
  4367 ;;		line 254 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  command         1    wreg     unsigned char 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  command         1    3[BANK0 ] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;		None               void
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4381 ;;      Params:         0       0       0       0       0       0       0       0
  4382 ;;      Locals:         0       1       0       0       0       0       0       0
  4383 ;;      Temps:          0       1       0       0       0       0       0       0
  4384 ;;      Totals:         0       2       0       0       0       0       0       0
  4385 ;;Total ram usage:        2 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    5
  4388 ;; This function calls:
  4389 ;;		_CC2500_WriteByte
  4390 ;; This function is called by:
  4391 ;;		_CC2500_TxData
  4392 ;;		_CC2500_RxData
  4393 ;;		_CC2500_ClearTXFIFO
  4394 ;;		_CC2500_ClearRXFIFO
  4395 ;;		_CC2500_FrequencyCabr
  4396 ;;		_CC2500_SIDLEMode
  4397 ;;		_setRF_Main
  4398 ;;		_setRF_Enable
  4399 ;;		_RF_RxDisable
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           psect	text1334
  4403                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  4404                           	line	254
  4405                           	global	__size_of_CC2500_WriteCommand
  4406  0013                     	__size_of_CC2500_WriteCommand	equ	__end_of_CC2500_WriteCommand-_CC2500_WriteCommand
  4407                           	
  4408  062B                     _CC2500_WriteCommand:	
  4409                           	opt	stack 8
  4410                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  4411                           ;CC2500_WriteCommand@command stored from wreg
  4412  062B  0020               	movlb 0	; select bank0
  4413  062C  00D7               	movwf	(CC2500_WriteCommand@command)
  4414                           	line	255
  4415                           	
  4416  062D                     l8525:	
  4417                           ;CC2500_B1.c: 255: RB5=0;
  4418  062D  128D               	bcf	(109/8),(109)&7
  4419                           	line	256
  4420                           	
  4421  062E                     l8527:	
  4422                           ;CC2500_B1.c: 256: SPI0Buffer=command;
  4423  062E  0857               	movf	(CC2500_WriteCommand@command),w
  4424  062F  00D6               	movwf	(??_CC2500_WriteCommand+0)+0
  4425  0630  0856               	movf	(??_CC2500_WriteCommand+0)+0,w
  4426  0631  00BB               	movwf	(_SPI0Buffer)
  4427                           	line	258
  4428                           ;CC2500_B1.c: 258: while(RB3==1);
  4429  0632  2E33               	goto	l1169
  4430                           	
  4431  0633                     l1170:	
  4432                           	
  4433  0633                     l1169:	
  4434  0633  198D               	btfsc	(107/8),(107)&7
  4435  0634  2E36               	goto	u5021
  4436  0635  2E37               	goto	u5020
  4437  0636                     u5021:
  4438  0636  2E33               	goto	l1169
  4439  0637                     u5020:
  4440  0637  2E38               	goto	l8529
  4441                           	
  4442  0638                     l1171:	
  4443                           	line	260
  4444                           	
  4445  0638                     l8529:	
  4446                           ;CC2500_B1.c: 260: CC2500_WriteByte();
  4447  0638  3185  254B  3186   	fcall	_CC2500_WriteByte
  4448                           	line	261
  4449                           	
  4450  063B                     l8531:	
  4451                           ;CC2500_B1.c: 261: RB5=1;
  4452  063B  0020               	movlb 0	; select bank0
  4453  063C  168D               	bsf	(109/8),(109)&7
  4454                           	line	263
  4455                           	
  4456  063D                     l1172:	
  4457  063D  0008               	return
  4458                           	opt stack 0
  4459                           GLOBAL	__end_of_CC2500_WriteCommand
  4460  063E                     	__end_of_CC2500_WriteCommand:
  4461 ;; =============== function _CC2500_WriteCommand ends ============
  4462                           
  4463                           	signat	_CC2500_WriteCommand,4216
  4464                           	global	_I2C_Slave_Mode
  4465                           psect	text1335,local,class=CODE,delta=2
  4466                           global __ptext1335
  4467  0121                     __ptext1335:
  4468                           
  4469 ;; *************** function _I2C_Slave_Mode *****************
  4470 ;; Defined at:
  4471 ;;		line 454 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  i               1    2[BANK0 ] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4485 ;;      Params:         0       0       0       0       0       0       0       0
  4486 ;;      Locals:         0       1       0       0       0       0       0       0
  4487 ;;      Temps:          0       2       0       0       0       0       0       0
  4488 ;;      Totals:         0       3       0       0       0       0       0       0
  4489 ;;Total ram usage:        3 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    4
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_I2C_Main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           psect	text1335
  4499                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4500                           	line	454
  4501                           	global	__size_of_I2C_Slave_Mode
  4502  0080                     	__size_of_I2C_Slave_Mode	equ	__end_of_I2C_Slave_Mode-_I2C_Slave_Mode
  4503                           	
  4504  0121                     _I2C_Slave_Mode:	
  4505                           	opt	stack 10
  4506                           ; Regs used in _I2C_Slave_Mode: [wreg+fsr1l-status,0]
  4507                           	line	456
  4508                           	
  4509  0121                     l8489:	
  4510                           ;MCU_16f1516_B1.c: 455: char i;
  4511                           ;MCU_16f1516_B1.c: 456: SSPIF=0;
  4512  0121  0020               	movlb 0	; select bank0
  4513  0122  1191               	bcf	(139/8),(139)&7
  4514                           	line	457
  4515                           	
  4516  0123                     l8491:	
  4517                           ;MCU_16f1516_B1.c: 457: I2C->Address=SSPBUF;
  4518  0123  0024               	movlb 4	; select bank4
  4519  0124  0811               	movf	(529)^0200h,w	;volatile
  4520  0125  0020               	movlb 0	; select bank0
  4521  0126  00D4               	movwf	(??_I2C_Slave_Mode+0)+0
  4522  0127  0838               	movf	(_I2C),w
  4523  0128  3E41               	addlw	041h
  4524  0129  0086               	movwf	fsr1l
  4525  012A  3001               	movlw 1	; select bank2/3
  4526  012B  0087               	movwf fsr1h	
  4527                           	
  4528  012C  0854               	movf	(??_I2C_Slave_Mode+0)+0,w
  4529  012D  0081               	movwf	indf1
  4530                           	line	459
  4531                           	
  4532  012E                     l8493:	
  4533                           ;MCU_16f1516_B1.c: 459: if(R_nW)
  4534  012E  0024               	movlb 4	; select bank4
  4535  012F  1D14               	btfss	(4258/8)^0200h,(4258)&7
  4536  0130  2932               	goto	u4941
  4537  0131  2933               	goto	u4940
  4538  0132                     u4941:
  4539  0132  296D               	goto	l5691
  4540  0133                     u4940:
  4541                           	line	461
  4542                           	
  4543  0133                     l8495:	
  4544                           ;MCU_16f1516_B1.c: 460: {
  4545                           ;MCU_16f1516_B1.c: 461: SSPOV=0;
  4546  0133  1315               	bcf	(4270/8)^0200h,(4270)&7
  4547                           	line	462
  4548                           ;MCU_16f1516_B1.c: 462: for(i=0;i<5;i++)
  4549  0134  0020               	movlb 0	; select bank0
  4550  0135  01D6               	clrf	(I2C_Slave_Mode@i)
  4551                           	
  4552  0136                     l8497:	
  4553  0136  3005               	movlw	(05h)
  4554  0137  0256               	subwf	(I2C_Slave_Mode@i),w
  4555  0138  1C03               	skipc
  4556  0139  293B               	goto	u4951
  4557  013A  293C               	goto	u4950
  4558  013B                     u4951:
  4559  013B  293E               	goto	l8501
  4560  013C                     u4950:
  4561  013C  2963               	goto	l5693
  4562                           	
  4563  013D                     l8499:	
  4564  013D  2963               	goto	l5693
  4565                           	line	463
  4566                           	
  4567  013E                     l5692:	
  4568                           	line	464
  4569                           	
  4570  013E                     l8501:	
  4571                           ;MCU_16f1516_B1.c: 463: {
  4572                           ;MCU_16f1516_B1.c: 464: SSPBUF=I2C->BufferWriter[i];
  4573  013E  0856               	movf	(I2C_Slave_Mode@i),w
  4574  013F  3E20               	addlw	020h
  4575  0140  0738               	addwf	(_I2C),w
  4576  0141  00D4               	movwf	(??_I2C_Slave_Mode+0)+0
  4577  0142  0854               	movf	0+(??_I2C_Slave_Mode+0)+0,w
  4578  0143  0086               	movwf	fsr1l
  4579  0144  3001               	movlw 1	; select bank2/3
  4580  0145  0087               	movwf fsr1h	
  4581                           	
  4582  0146  0801               	movf	indf1,w
  4583  0147  0024               	movlb 4	; select bank4
  4584  0148  0091               	movwf	(529)^0200h	;volatile
  4585                           	line	466
  4586                           	
  4587  0149                     l8503:	
  4588                           ;MCU_16f1516_B1.c: 466: CKP=1;
  4589  0149  1615               	bsf	(4268/8)^0200h,(4268)&7
  4590                           	line	467
  4591                           ;MCU_16f1516_B1.c: 467: while(!SSPIF);
  4592  014A  294B               	goto	l5694
  4593                           	
  4594  014B                     l5695:	
  4595                           	
  4596  014B                     l5694:	
  4597  014B  0020               	movlb 0	; select bank0
  4598  014C  1D91               	btfss	(139/8),(139)&7
  4599  014D  294F               	goto	u4961
  4600  014E  2950               	goto	u4960
  4601  014F                     u4961:
  4602  014F  294B               	goto	l5694
  4603  0150                     u4960:
  4604                           	
  4605  0150                     l5696:	
  4606                           	line	468
  4607                           ;MCU_16f1516_B1.c: 468: SSPIF=0;
  4608  0150  1191               	bcf	(139/8),(139)&7
  4609                           	line	469
  4610                           ;MCU_16f1516_B1.c: 469: while(ACKSTAT);
  4611  0151  2952               	goto	l5697
  4612                           	
  4613  0152                     l5698:	
  4614                           	
  4615  0152                     l5697:	
  4616  0152  0024               	movlb 4	; select bank4
  4617  0153  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  4618  0154  2956               	goto	u4971
  4619  0155  2957               	goto	u4970
  4620  0156                     u4971:
  4621  0156  2952               	goto	l5697
  4622  0157                     u4970:
  4623  0157  2958               	goto	l8505
  4624                           	
  4625  0158                     l5699:	
  4626                           	line	462
  4627                           	
  4628  0158                     l8505:	
  4629  0158  3001               	movlw	(01h)
  4630  0159  0020               	movlb 0	; select bank0
  4631  015A  00D4               	movwf	(??_I2C_Slave_Mode+0)+0
  4632  015B  0854               	movf	(??_I2C_Slave_Mode+0)+0,w
  4633  015C  07D6               	addwf	(I2C_Slave_Mode@i),f
  4634                           	
  4635  015D                     l8507:	
  4636  015D  3005               	movlw	(05h)
  4637  015E  0256               	subwf	(I2C_Slave_Mode@i),w
  4638  015F  1C03               	skipc
  4639  0160  2962               	goto	u4981
  4640  0161  2963               	goto	u4980
  4641  0162                     u4981:
  4642  0162  293E               	goto	l8501
  4643  0163                     u4980:
  4644                           	
  4645  0163                     l5693:	
  4646                           	line	471
  4647                           ;MCU_16f1516_B1.c: 470: }
  4648                           ;MCU_16f1516_B1.c: 471: CKP=1;
  4649  0163  0024               	movlb 4	; select bank4
  4650  0164  1615               	bsf	(4268/8)^0200h,(4268)&7
  4651                           	line	473
  4652                           	
  4653  0165                     l8509:	
  4654                           ;MCU_16f1516_B1.c: 473: I2C->SlaveTxGO=1;
  4655  0165  0020               	movlb 0	; select bank0
  4656  0166  0838               	movf	(_I2C),w
  4657  0167  3E42               	addlw	042h
  4658  0168  0086               	movwf	fsr1l
  4659  0169  3001               	movlw 1	; select bank2/3
  4660  016A  0087               	movwf fsr1h	
  4661                           	
  4662  016B  1501               	bsf	indf1,2
  4663                           	line	474
  4664                           ;MCU_16f1516_B1.c: 474: }
  4665  016C  29A0               	goto	l5706
  4666                           	line	475
  4667                           	
  4668  016D                     l5691:	
  4669                           	line	477
  4670                           ;MCU_16f1516_B1.c: 475: else
  4671                           ;MCU_16f1516_B1.c: 476: {
  4672                           ;MCU_16f1516_B1.c: 477: CKP=1;
  4673  016D  1615               	bsf	(4268/8)^0200h,(4268)&7
  4674                           	line	478
  4675                           ;MCU_16f1516_B1.c: 478: for(i=0;i<32;i++)
  4676  016E  0020               	movlb 0	; select bank0
  4677  016F  01D6               	clrf	(I2C_Slave_Mode@i)
  4678                           	
  4679  0170                     l8511:	
  4680  0170  3020               	movlw	(020h)
  4681  0171  0256               	subwf	(I2C_Slave_Mode@i),w
  4682  0172  1C03               	skipc
  4683  0173  2975               	goto	u4991
  4684  0174  2976               	goto	u4990
  4685  0175                     u4991:
  4686  0175  2979               	goto	l5703
  4687  0176                     u4990:
  4688  0176  2999               	goto	l8523
  4689                           	
  4690  0177                     l8513:	
  4691  0177  2999               	goto	l8523
  4692                           	line	479
  4693                           	
  4694  0178                     l5701:	
  4695                           	line	480
  4696                           ;MCU_16f1516_B1.c: 479: {
  4697                           ;MCU_16f1516_B1.c: 480: while(!SSPIF);
  4698  0178  2979               	goto	l5703
  4699                           	
  4700  0179                     l5704:	
  4701                           	
  4702  0179                     l5703:	
  4703  0179  1D91               	btfss	(139/8),(139)&7
  4704  017A  297C               	goto	u5001
  4705  017B  297D               	goto	u5000
  4706  017C                     u5001:
  4707  017C  2979               	goto	l5703
  4708  017D                     u5000:
  4709                           	
  4710  017D                     l5705:	
  4711                           	line	481
  4712                           ;MCU_16f1516_B1.c: 481: SSPIF=0;
  4713  017D  1191               	bcf	(139/8),(139)&7
  4714                           	line	482
  4715                           	
  4716  017E                     l8515:	
  4717                           ;MCU_16f1516_B1.c: 482: I2C->BufferReader[i]=SSPBUF;
  4718  017E  0024               	movlb 4	; select bank4
  4719  017F  0811               	movf	(529)^0200h,w	;volatile
  4720  0180  0020               	movlb 0	; select bank0
  4721  0181  00D4               	movwf	(??_I2C_Slave_Mode+0)+0
  4722  0182  0856               	movf	(I2C_Slave_Mode@i),w
  4723  0183  0738               	addwf	(_I2C),w
  4724  0184  00D5               	movwf	(??_I2C_Slave_Mode+1)+0
  4725  0185  0855               	movf	0+(??_I2C_Slave_Mode+1)+0,w
  4726  0186  0086               	movwf	fsr1l
  4727  0187  3001               	movlw 1	; select bank2/3
  4728  0188  0087               	movwf fsr1h	
  4729                           	
  4730  0189  0854               	movf	(??_I2C_Slave_Mode+0)+0,w
  4731  018A  0081               	movwf	indf1
  4732                           	line	484
  4733                           	
  4734  018B                     l8517:	
  4735                           ;MCU_16f1516_B1.c: 484: CKP=1;
  4736  018B  0024               	movlb 4	; select bank4
  4737  018C  1615               	bsf	(4268/8)^0200h,(4268)&7
  4738                           	line	478
  4739                           	
  4740  018D                     l8519:	
  4741  018D  3001               	movlw	(01h)
  4742  018E  0020               	movlb 0	; select bank0
  4743  018F  00D4               	movwf	(??_I2C_Slave_Mode+0)+0
  4744  0190  0854               	movf	(??_I2C_Slave_Mode+0)+0,w
  4745  0191  07D6               	addwf	(I2C_Slave_Mode@i),f
  4746                           	
  4747  0192                     l8521:	
  4748  0192  3020               	movlw	(020h)
  4749  0193  0256               	subwf	(I2C_Slave_Mode@i),w
  4750  0194  1C03               	skipc
  4751  0195  2997               	goto	u5011
  4752  0196  2998               	goto	u5010
  4753  0197                     u5011:
  4754  0197  2979               	goto	l5703
  4755  0198                     u5010:
  4756  0198  2999               	goto	l8523
  4757                           	
  4758  0199                     l5702:	
  4759                           	line	487
  4760                           	
  4761  0199                     l8523:	
  4762                           ;MCU_16f1516_B1.c: 485: }
  4763                           ;MCU_16f1516_B1.c: 487: I2C->SlaveRxGO=1;
  4764  0199  0838               	movf	(_I2C),w
  4765  019A  3E42               	addlw	042h
  4766  019B  0086               	movwf	fsr1l
  4767  019C  3001               	movlw 1	; select bank2/3
  4768  019D  0087               	movwf fsr1h	
  4769                           	
  4770  019E  1481               	bsf	indf1,1
  4771  019F  29A0               	goto	l5706
  4772                           	line	488
  4773                           	
  4774  01A0                     l5700:	
  4775                           	line	490
  4776                           	
  4777  01A0                     l5706:	
  4778  01A0  0008               	return
  4779                           	opt stack 0
  4780                           GLOBAL	__end_of_I2C_Slave_Mode
  4781  01A1                     	__end_of_I2C_Slave_Mode:
  4782 ;; =============== function _I2C_Slave_Mode ends ============
  4783                           
  4784                           	signat	_I2C_Slave_Mode,88
  4785                           	global	_I2C_Set
  4786                           psect	text1336,local,class=CODE,delta=2
  4787                           global __ptext1336
  4788  05D8                     __ptext1336:
  4789                           
  4790 ;; *************** function _I2C_Set *****************
  4791 ;; Defined at:
  4792 ;;		line 234 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;		None               void
  4799 ;; Registers used:
  4800 ;;		wreg
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4806 ;;      Params:         0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0
  4808 ;;      Temps:          0       1       0       0       0       0       0       0
  4809 ;;      Totals:         0       1       0       0       0       0       0       0
  4810 ;;Total ram usage:        1 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    4
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_Mcu_Initial
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           psect	text1336
  4820                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4821                           	line	234
  4822                           	global	__size_of_I2C_Set
  4823  0016                     	__size_of_I2C_Set	equ	__end_of_I2C_Set-_I2C_Set
  4824                           	
  4825  05D8                     _I2C_Set:	
  4826                           	opt	stack 10
  4827                           ; Regs used in _I2C_Set: [wreg]
  4828                           	line	235
  4829                           	
  4830  05D8                     l8475:	
  4831                           ;MCU_16f1516_B1.c: 235: I2C=&VarI2C;
  4832  05D8  3020               	movlw	(_VarI2C)&0ffh
  4833  05D9  0020               	movlb 0	; select bank0
  4834  05DA  00D4               	movwf	(??_I2C_Set+0)+0
  4835  05DB  0854               	movf	(??_I2C_Set+0)+0,w
  4836  05DC  00B8               	movwf	(_I2C)
  4837                           	line	245
  4838                           ;MCU_16f1516_B1.c: 245: SSPADD=0x10;
  4839  05DD  3010               	movlw	(010h)
  4840  05DE  0024               	movlb 4	; select bank4
  4841  05DF  0092               	movwf	(530)^0200h	;volatile
  4842                           	line	247
  4843                           ;MCU_16f1516_B1.c: 247: SSPSTAT = 0x80;
  4844  05E0  3080               	movlw	(080h)
  4845  05E1  0094               	movwf	(532)^0200h	;volatile
  4846                           	line	248
  4847                           ;MCU_16f1516_B1.c: 248: SSPCON2 = 0x80;
  4848  05E2  3080               	movlw	(080h)
  4849  05E3  0096               	movwf	(534)^0200h	;volatile
  4850                           	line	249
  4851                           ;MCU_16f1516_B1.c: 249: SSPCON1=0b100110;
  4852  05E4  3026               	movlw	(026h)
  4853  05E5  0095               	movwf	(533)^0200h	;volatile
  4854                           	line	251
  4855                           	
  4856  05E6                     l8477:	
  4857                           ;MCU_16f1516_B1.c: 251: SEN=1;
  4858  05E6  1416               	bsf	(4272/8)^0200h,(4272)&7
  4859                           	line	252
  4860                           	
  4861  05E7                     l8479:	
  4862                           ;MCU_16f1516_B1.c: 252: AHEN=0;
  4863  05E7  1097               	bcf	(4281/8)^0200h,(4281)&7
  4864                           	line	253
  4865                           	
  4866  05E8                     l8481:	
  4867                           ;MCU_16f1516_B1.c: 253: DHEN=0;
  4868  05E8  1017               	bcf	(4280/8)^0200h,(4280)&7
  4869                           	line	254
  4870                           	
  4871  05E9                     l8483:	
  4872                           ;MCU_16f1516_B1.c: 254: SSPIE=1;
  4873  05E9  0021               	movlb 1	; select bank1
  4874  05EA  1591               	bsf	(1163/8)^080h,(1163)&7
  4875                           	line	255
  4876                           	
  4877  05EB                     l8485:	
  4878                           ;MCU_16f1516_B1.c: 255: PEIE=1;
  4879  05EB  170B               	bsf	(94/8),(94)&7
  4880                           	line	256
  4881                           	
  4882  05EC                     l8487:	
  4883                           ;MCU_16f1516_B1.c: 256: GIE=1;
  4884  05EC  178B               	bsf	(95/8),(95)&7
  4885                           	line	258
  4886                           	
  4887  05ED                     l5586:	
  4888  05ED  0008               	return
  4889                           	opt stack 0
  4890                           GLOBAL	__end_of_I2C_Set
  4891  05EE                     	__end_of_I2C_Set:
  4892 ;; =============== function _I2C_Set ends ============
  4893                           
  4894                           	signat	_I2C_Set,88
  4895                           	global	_INT_Set
  4896                           psect	text1337,local,class=CODE,delta=2
  4897                           global __ptext1337
  4898  06E9                     __ptext1337:
  4899                           
  4900 ;; *************** function _INT_Set *****************
  4901 ;; Defined at:
  4902 ;;		line 149 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;		None               void
  4909 ;; Registers used:
  4910 ;;		None
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4916 ;;      Params:         0       0       0       0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0
  4919 ;;      Totals:         0       0       0       0       0       0       0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    4
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_Mcu_Initial
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           psect	text1337
  4930                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4931                           	line	149
  4932                           	global	__size_of_INT_Set
  4933  0005                     	__size_of_INT_Set	equ	__end_of_INT_Set-_INT_Set
  4934                           	
  4935  06E9                     _INT_Set:	
  4936                           	opt	stack 10
  4937                           ; Regs used in _INT_Set: []
  4938                           	line	150
  4939                           	
  4940  06E9                     l8473:	
  4941                           ;MCU_16f1516_B1.c: 150: WPUB0=0;
  4942  06E9  0024               	movlb 4	; select bank4
  4943  06EA  100D               	bcf	(4200/8)^0200h,(4200)&7
  4944                           	line	152
  4945                           ;MCU_16f1516_B1.c: 152: PEIE=1;
  4946  06EB  170B               	bsf	(94/8),(94)&7
  4947                           	line	153
  4948                           ;MCU_16f1516_B1.c: 153: GIE=1;
  4949  06EC  178B               	bsf	(95/8),(95)&7
  4950                           	line	154
  4951                           	
  4952  06ED                     l5576:	
  4953  06ED  0008               	return
  4954                           	opt stack 0
  4955                           GLOBAL	__end_of_INT_Set
  4956  06EE                     	__end_of_INT_Set:
  4957 ;; =============== function _INT_Set ends ============
  4958                           
  4959                           	signat	_INT_Set,88
  4960                           	global	_TMR1_Set
  4961                           psect	text1338,local,class=CODE,delta=2
  4962                           global __ptext1338
  4963  0651                     __ptext1338:
  4964                           
  4965 ;; *************** function _TMR1_Set *****************
  4966 ;; Defined at:
  4967 ;;		line 115 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4981 ;;      Params:         0       0       0       0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0
  4983 ;;      Temps:          0       1       0       0       0       0       0       0
  4984 ;;      Totals:         0       1       0       0       0       0       0       0
  4985 ;;Total ram usage:        1 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    4
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_Mcu_Initial
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           psect	text1338
  4995                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4996                           	line	115
  4997                           	global	__size_of_TMR1_Set
  4998  0010                     	__size_of_TMR1_Set	equ	__end_of_TMR1_Set-_TMR1_Set
  4999                           	
  5000  0651                     _TMR1_Set:	
  5001                           	opt	stack 10
  5002                           ; Regs used in _TMR1_Set: [wreg]
  5003                           	line	116
  5004                           	
  5005  0651                     l8465:	
  5006                           ;MCU_16f1516_B1.c: 116: Timer1=&VarTimer1;
  5007  0651  304F               	movlw	(_VarTimer1)&0ffh
  5008  0652  0020               	movlb 0	; select bank0
  5009  0653  00D4               	movwf	(??_TMR1_Set+0)+0
  5010  0654  0854               	movf	(??_TMR1_Set+0)+0,w
  5011  0655  00F8               	movwf	(_Timer1)
  5012                           	line	117
  5013                           ;MCU_16f1516_B1.c: 117: T1CON=(0x40 | 0x00 | 0x01);
  5014  0656  3041               	movlw	(041h)
  5015  0657  0098               	movwf	(24)	;volatile
  5016                           	line	118
  5017                           ;MCU_16f1516_B1.c: 118: TMR1H=((65536-700)/256);
  5018  0658  30FD               	movlw	(0FDh)
  5019  0659  0097               	movwf	(23)	;volatile
  5020                           	line	119
  5021                           ;MCU_16f1516_B1.c: 119: TMR1L=((65536-700)%256);
  5022  065A  3044               	movlw	(044h)
  5023  065B  0096               	movwf	(22)	;volatile
  5024                           	line	120
  5025                           	
  5026  065C                     l8467:	
  5027                           ;MCU_16f1516_B1.c: 120: TMR1IE=1;
  5028  065C  0021               	movlb 1	; select bank1
  5029  065D  1411               	bsf	(1160/8)^080h,(1160)&7
  5030                           	line	121
  5031                           	
  5032  065E                     l8469:	
  5033                           ;MCU_16f1516_B1.c: 121: PEIE=1;
  5034  065E  170B               	bsf	(94/8),(94)&7
  5035                           	line	122
  5036                           	
  5037  065F                     l8471:	
  5038                           ;MCU_16f1516_B1.c: 122: GIE=1;
  5039  065F  178B               	bsf	(95/8),(95)&7
  5040                           	line	123
  5041                           	
  5042  0660                     l5568:	
  5043  0660  0008               	return
  5044                           	opt stack 0
  5045                           GLOBAL	__end_of_TMR1_Set
  5046  0661                     	__end_of_TMR1_Set:
  5047 ;; =============== function _TMR1_Set ends ============
  5048                           
  5049                           	signat	_TMR1_Set,88
  5050                           	global	_IO_Set
  5051                           psect	text1339,local,class=CODE,delta=2
  5052                           global __ptext1339
  5053  05EE                     __ptext1339:
  5054                           
  5055 ;; *************** function _IO_Set *****************
  5056 ;; Defined at:
  5057 ;;		line 38 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;		None               void
  5064 ;; Registers used:
  5065 ;;		wreg, status,2
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5071 ;;      Params:         0       0       0       0       0       0       0       0
  5072 ;;      Locals:         0       0       0       0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0
  5074 ;;      Totals:         0       0       0       0       0       0       0       0
  5075 ;;Total ram usage:        0 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    4
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_Mcu_Initial
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           psect	text1339
  5085                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5086                           	line	38
  5087                           	global	__size_of_IO_Set
  5088  0015                     	__size_of_IO_Set	equ	__end_of_IO_Set-_IO_Set
  5089                           	
  5090  05EE                     _IO_Set:	
  5091                           	opt	stack 10
  5092                           ; Regs used in _IO_Set: [wreg+status,2]
  5093                           	line	39
  5094                           	
  5095  05EE                     l8455:	
  5096                           ;MCU_16f1516_B1.c: 39: TRISA=0b00000000;;
  5097  05EE  0021               	movlb 1	; select bank1
  5098  05EF  018C               	clrf	(140)^080h	;volatile
  5099                           	line	40
  5100                           	
  5101  05F0                     l8457:	
  5102                           ;MCU_16f1516_B1.c: 40: TRISB=0b00011001;;
  5103  05F0  3019               	movlw	(019h)
  5104  05F1  008D               	movwf	(141)^080h	;volatile
  5105                           	line	41
  5106                           	
  5107  05F2                     l8459:	
  5108                           ;MCU_16f1516_B1.c: 41: TRISC=0b00011000;;
  5109  05F2  3018               	movlw	(018h)
  5110  05F3  008E               	movwf	(142)^080h	;volatile
  5111                           	line	42
  5112                           ;MCU_16f1516_B1.c: 42: LATA=0b00000000;;
  5113  05F4  0022               	movlb 2	; select bank2
  5114  05F5  018C               	clrf	(268)^0100h	;volatile
  5115                           	line	43
  5116                           ;MCU_16f1516_B1.c: 43: LATB=0b00000000;;
  5117  05F6  018D               	clrf	(269)^0100h	;volatile
  5118                           	line	44
  5119                           ;MCU_16f1516_B1.c: 44: LATC=0b00000000;;
  5120  05F7  018E               	clrf	(270)^0100h	;volatile
  5121                           	line	45
  5122                           ;MCU_16f1516_B1.c: 45: ANSELA=0b00000000;;
  5123  05F8  0023               	movlb 3	; select bank3
  5124  05F9  018C               	clrf	(396)^0180h	;volatile
  5125                           	line	46
  5126                           ;MCU_16f1516_B1.c: 46: ANSELB=0b00000000;;
  5127  05FA  018D               	clrf	(397)^0180h	;volatile
  5128                           	line	47
  5129                           ;MCU_16f1516_B1.c: 47: ANSELC=0b00000000;;
  5130  05FB  018E               	clrf	(398)^0180h	;volatile
  5131                           	line	48
  5132                           ;MCU_16f1516_B1.c: 48: PORTA=0b00000000;;
  5133  05FC  0020               	movlb 0	; select bank0
  5134  05FD  018C               	clrf	(12)	;volatile
  5135                           	line	49
  5136                           	
  5137  05FE                     l8461:	
  5138                           ;MCU_16f1516_B1.c: 49: PORTB=0b00011001;;
  5139  05FE  3019               	movlw	(019h)
  5140  05FF  008D               	movwf	(13)	;volatile
  5141                           	line	50
  5142                           	
  5143  0600                     l8463:	
  5144                           ;MCU_16f1516_B1.c: 50: PORTC=0b00011000;;
  5145  0600  3018               	movlw	(018h)
  5146  0601  008E               	movwf	(14)	;volatile
  5147                           	line	51
  5148                           	
  5149  0602                     l5562:	
  5150  0602  0008               	return
  5151                           	opt stack 0
  5152                           GLOBAL	__end_of_IO_Set
  5153  0603                     	__end_of_IO_Set:
  5154 ;; =============== function _IO_Set ends ============
  5155                           
  5156                           	signat	_IO_Set,88
  5157                           	global	_MainT_Initial
  5158                           psect	text1340,local,class=CODE,delta=2
  5159                           global __ptext1340
  5160  0670                     __ptext1340:
  5161                           
  5162 ;; *************** function _MainT_Initial *****************
  5163 ;; Defined at:
  5164 ;;		line 34 in file "G:\Program\PIC\Source_File\myMain.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;		None
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;		None               void
  5171 ;; Registers used:
  5172 ;;		wreg, fsr1l, fsr1h
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5178 ;;      Params:         0       0       0       0       0       0       0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0       0
  5180 ;;      Temps:          0       1       0       0       0       0       0       0
  5181 ;;      Totals:         0       1       0       0       0       0       0       0
  5182 ;;Total ram usage:        1 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    4
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_main
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           psect	text1340
  5192                           	file	"G:\Program\PIC\Source_File\myMain.c"
  5193                           	line	34
  5194                           	global	__size_of_MainT_Initial
  5195  000F                     	__size_of_MainT_Initial	equ	__end_of_MainT_Initial-_MainT_Initial
  5196                           	
  5197  0670                     _MainT_Initial:	
  5198                           	opt	stack 11
  5199                           ; Regs used in _MainT_Initial: [wregfsr1]
  5200                           	line	35
  5201                           	
  5202  0670                     l8449:	
  5203                           ;myMain.c: 35: TMain=&VarTMain;
  5204  0670  3040               	movlw	(_VarTMain)&0ffh
  5205  0671  0020               	movlb 0	; select bank0
  5206  0672  00D4               	movwf	(??_MainT_Initial+0)+0
  5207  0673  0854               	movf	(??_MainT_Initial+0)+0,w
  5208  0674  00DD               	movwf	(_TMain)
  5209                           	line	36
  5210                           	
  5211  0675                     l8451:	
  5212                           ;myMain.c: 36: TMain->FirstOpen=1;
  5213  0675  085D               	movf	(_TMain),w
  5214  0676  3E0D               	addlw	0Dh
  5215  0677  0086               	movwf	fsr1l
  5216  0678  0187               	clrf fsr1h	
  5217                           	
  5218  0679  1401               	bsf	indf1,0
  5219                           	line	37
  5220                           	
  5221  067A                     l8453:	
  5222                           ;myMain.c: 37: Product=&VarProduct;
  5223  067A  30A0               	movlw	(_VarProduct)&0ffh
  5224  067B  00D4               	movwf	(??_MainT_Initial+0)+0
  5225  067C  0854               	movf	(??_MainT_Initial+0)+0,w
  5226  067D  00F9               	movwf	(_Product)
  5227                           	line	38
  5228                           	
  5229  067E                     l4476:	
  5230  067E  0008               	return
  5231                           	opt stack 0
  5232                           GLOBAL	__end_of_MainT_Initial
  5233  067F                     	__end_of_MainT_Initial:
  5234 ;; =============== function _MainT_Initial ends ============
  5235                           
  5236                           	signat	_MainT_Initial,88
  5237                           	global	_setINT_GO
  5238                           psect	text1341,local,class=CODE,delta=2
  5239                           global __ptext1341
  5240  06B4                     __ptext1341:
  5241                           
  5242 ;; *************** function _setINT_GO *****************
  5243 ;; Defined at:
  5244 ;;		line 167 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  command         1    wreg     unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  command         1    0[BANK0 ] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;		None               void
  5251 ;; Registers used:
  5252 ;;		wreg
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5258 ;;      Params:         0       0       0       0       0       0       0       0
  5259 ;;      Locals:         0       1       0       0       0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0
  5261 ;;      Totals:         0       1       0       0       0       0       0       0
  5262 ;;Total ram usage:        1 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    4
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_setRF_Main
  5269 ;;		_RF_RxDisable
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           psect	text1341
  5273                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5274                           	line	167
  5275                           	global	__size_of_setINT_GO
  5276  000A                     	__size_of_setINT_GO	equ	__end_of_setINT_GO-_setINT_GO
  5277                           	
  5278  06B4                     _setINT_GO:	
  5279                           	opt	stack 9
  5280                           ; Regs used in _setINT_GO: [wreg]
  5281                           ;setINT_GO@command stored from wreg
  5282  06B4  0020               	movlb 0	; select bank0
  5283  06B5  00D4               	movwf	(setINT_GO@command)
  5284                           	line	168
  5285                           	
  5286  06B6                     l8327:	
  5287                           ;MCU_16f1516_B1.c: 168: INTF=0;
  5288  06B6  108B               	bcf	(89/8),(89)&7
  5289                           	line	169
  5290                           	
  5291  06B7                     l8329:	
  5292                           ;MCU_16f1516_B1.c: 169: INTE=command;
  5293  06B7  1854               	btfsc	(setINT_GO@command),0
  5294  06B8  2EBA               	goto	u4711
  5295  06B9  2EBC               	goto	u4710
  5296                           	
  5297  06BA                     u4711:
  5298  06BA  160B               	bsf	(92/8),(92)&7
  5299  06BB  2EBD               	goto	u4724
  5300  06BC                     u4710:
  5301  06BC  120B               	bcf	(92/8),(92)&7
  5302  06BD                     u4724:
  5303                           	line	170
  5304                           	
  5305  06BD                     l5583:	
  5306  06BD  0008               	return
  5307                           	opt stack 0
  5308                           GLOBAL	__end_of_setINT_GO
  5309  06BE                     	__end_of_setINT_GO:
  5310 ;; =============== function _setINT_GO ends ============
  5311                           
  5312                           	signat	_setINT_GO,4216
  5313                           	global	_I2C_SetData
  5314                           psect	text1342,local,class=CODE,delta=2
  5315                           global __ptext1342
  5316  01A1                     __ptext1342:
  5317                           
  5318 ;; *************** function _I2C_SetData *****************
  5319 ;; Defined at:
  5320 ;;		line 346 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  command         1    wreg     unsigned char 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  command         1    2[BANK0 ] unsigned char 
  5325 ;;  i               1    3[BANK0 ] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;		None               void
  5328 ;; Registers used:
  5329 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5335 ;;      Params:         0       0       0       0       0       0       0       0
  5336 ;;      Locals:         0       2       0       0       0       0       0       0
  5337 ;;      Temps:          0       2       0       0       0       0       0       0
  5338 ;;      Totals:         0       4       0       0       0       0       0       0
  5339 ;;Total ram usage:        4 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    4
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_setRF_Main
  5346 ;;		_I2C_Main
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           psect	text1342
  5350                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5351                           	line	346
  5352                           	global	__size_of_I2C_SetData
  5353  0080                     	__size_of_I2C_SetData	equ	__end_of_I2C_SetData-_I2C_SetData
  5354                           	
  5355  01A1                     _I2C_SetData:	
  5356                           	opt	stack 10
  5357                           ; Regs used in _I2C_SetData: [wreg+fsr1l-status,0]
  5358                           ;I2C_SetData@command stored from wreg
  5359                           	line	349
  5360  01A1  0020               	movlb 0	; select bank0
  5361  01A2  00D6               	movwf	(I2C_SetData@command)
  5362                           	
  5363  01A3                     l8293:	
  5364                           ;MCU_16f1516_B1.c: 348: char i;
  5365                           ;MCU_16f1516_B1.c: 349: if(command)
  5366  01A3  0856               	movf	(I2C_SetData@command),w
  5367  01A4  1D03               	skipz
  5368  01A5  29A7               	goto	u4650
  5369  01A6  29F8               	goto	l5599
  5370  01A7                     u4650:
  5371                           	line	351
  5372                           	
  5373  01A7                     l8295:	
  5374                           ;MCU_16f1516_B1.c: 350: {
  5375                           ;MCU_16f1516_B1.c: 351: if(!I2C->SS)
  5376  01A7  0838               	movf	(_I2C),w
  5377  01A8  3E42               	addlw	042h
  5378  01A9  0086               	movwf	fsr1l
  5379  01AA  3001               	movlw 1	; select bank2/3
  5380  01AB  0087               	movwf fsr1h	
  5381                           	
  5382  01AC  1A81               	btfsc	indf1,5
  5383  01AD  29AF               	goto	u4661
  5384  01AE  29B0               	goto	u4660
  5385  01AF                     u4661:
  5386  01AF  2A20               	goto	l5606
  5387  01B0                     u4660:
  5388                           	line	353
  5389                           	
  5390  01B0                     l8297:	
  5391                           ;MCU_16f1516_B1.c: 352: {
  5392                           ;MCU_16f1516_B1.c: 353: I2C->SS=1;
  5393  01B0  0838               	movf	(_I2C),w
  5394  01B1  3E42               	addlw	042h
  5395  01B2  0086               	movwf	fsr1l
  5396  01B3  3001               	movlw 1	; select bank2/3
  5397  01B4  0087               	movwf fsr1h	
  5398                           	
  5399  01B5  1681               	bsf	indf1,5
  5400                           	line	354
  5401                           	
  5402  01B6                     l8299:	
  5403                           ;MCU_16f1516_B1.c: 354: for(i=0 ;i< 21 ;i++)
  5404  01B6  01D7               	clrf	(I2C_SetData@i)
  5405                           	
  5406  01B7                     l8301:	
  5407  01B7  3015               	movlw	(015h)
  5408  01B8  0257               	subwf	(I2C_SetData@i),w
  5409  01B9  1C03               	skipc
  5410  01BA  29BC               	goto	u4671
  5411  01BB  29BD               	goto	u4670
  5412  01BC                     u4671:
  5413  01BC  29BF               	goto	l8305
  5414  01BD                     u4670:
  5415  01BD  29DA               	goto	l8311
  5416                           	
  5417  01BE                     l8303:	
  5418  01BE  29DA               	goto	l8311
  5419                           	line	355
  5420                           	
  5421  01BF                     l5601:	
  5422                           	line	356
  5423                           	
  5424  01BF                     l8305:	
  5425                           ;MCU_16f1516_B1.c: 355: {
  5426                           ;MCU_16f1516_B1.c: 356: I2C->BufferWriter[i]=RF_Data[i];
  5427  01BF  0857               	movf	(I2C_SetData@i),w
  5428  01C0  3E20               	addlw	_RF_Data&0ffh
  5429  01C1  0086               	movwf	fsr1l
  5430  01C2  0187               	clrf fsr1h	
  5431                           	
  5432  01C3  0801               	movf	indf1,w
  5433  01C4  00D4               	movwf	(??_I2C_SetData+0)+0
  5434  01C5  0857               	movf	(I2C_SetData@i),w
  5435  01C6  3E20               	addlw	020h
  5436  01C7  0738               	addwf	(_I2C),w
  5437  01C8  00D5               	movwf	(??_I2C_SetData+1)+0
  5438  01C9  0855               	movf	0+(??_I2C_SetData+1)+0,w
  5439  01CA  0086               	movwf	fsr1l
  5440  01CB  3001               	movlw 1	; select bank2/3
  5441  01CC  0087               	movwf fsr1h	
  5442                           	
  5443  01CD  0854               	movf	(??_I2C_SetData+0)+0,w
  5444  01CE  0081               	movwf	indf1
  5445                           	line	354
  5446                           	
  5447  01CF                     l8307:	
  5448  01CF  3001               	movlw	(01h)
  5449  01D0  00D4               	movwf	(??_I2C_SetData+0)+0
  5450  01D1  0854               	movf	(??_I2C_SetData+0)+0,w
  5451  01D2  07D7               	addwf	(I2C_SetData@i),f
  5452                           	
  5453  01D3                     l8309:	
  5454  01D3  3015               	movlw	(015h)
  5455  01D4  0257               	subwf	(I2C_SetData@i),w
  5456  01D5  1C03               	skipc
  5457  01D6  29D8               	goto	u4681
  5458  01D7  29D9               	goto	u4680
  5459  01D8                     u4681:
  5460  01D8  29BF               	goto	l8305
  5461  01D9                     u4680:
  5462  01D9  29DA               	goto	l8311
  5463                           	
  5464  01DA                     l5602:	
  5465                           	line	358
  5466                           	
  5467  01DA                     l8311:	
  5468                           ;MCU_16f1516_B1.c: 357: }
  5469                           ;MCU_16f1516_B1.c: 358: I2C->BufferWriter[21]=Tx_Length;
  5470  01DA  083C               	movf	(_Tx_Length),w
  5471  01DB  00D4               	movwf	(??_I2C_SetData+0)+0
  5472  01DC  0838               	movf	(_I2C),w
  5473  01DD  3E35               	addlw	035h
  5474  01DE  0086               	movwf	fsr1l
  5475  01DF  3001               	movlw 1	; select bank2/3
  5476  01E0  0087               	movwf fsr1h	
  5477                           	
  5478  01E1  0854               	movf	(??_I2C_SetData+0)+0,w
  5479  01E2  0081               	movwf	indf1
  5480                           	line	359
  5481                           ;MCU_16f1516_B1.c: 359: I2C->BufferWriter[22]=RSSI;
  5482  01E3  0839               	movf	(_RSSI),w
  5483  01E4  00D4               	movwf	(??_I2C_SetData+0)+0
  5484  01E5  0838               	movf	(_I2C),w
  5485  01E6  3E36               	addlw	036h
  5486  01E7  0086               	movwf	fsr1l
  5487  01E8  3001               	movlw 1	; select bank2/3
  5488  01E9  0087               	movwf fsr1h	
  5489                           	
  5490  01EA  0854               	movf	(??_I2C_SetData+0)+0,w
  5491  01EB  0081               	movwf	indf1
  5492                           	line	360
  5493                           ;MCU_16f1516_B1.c: 360: I2C->BufferWriter[23]=CRC;
  5494  01EC  0837               	movf	(_CRC),w
  5495  01ED  00D4               	movwf	(??_I2C_SetData+0)+0
  5496  01EE  0838               	movf	(_I2C),w
  5497  01EF  3E37               	addlw	037h
  5498  01F0  0086               	movwf	fsr1l
  5499  01F1  3001               	movlw 1	; select bank2/3
  5500  01F2  0087               	movwf fsr1h	
  5501                           	
  5502  01F3  0854               	movf	(??_I2C_SetData+0)+0,w
  5503  01F4  0081               	movwf	indf1
  5504                           	line	361
  5505                           	
  5506  01F5                     l8313:	
  5507                           ;MCU_16f1516_B1.c: 361: RC0=1;
  5508  01F5  140E               	bsf	(112/8),(112)&7
  5509  01F6  2A20               	goto	l5606
  5510                           	line	362
  5511                           	
  5512  01F7                     l5600:	
  5513                           	line	363
  5514                           ;MCU_16f1516_B1.c: 362: }
  5515                           ;MCU_16f1516_B1.c: 363: }
  5516  01F7  2A20               	goto	l5606
  5517                           	line	364
  5518                           	
  5519  01F8                     l5599:	
  5520                           	line	366
  5521                           ;MCU_16f1516_B1.c: 364: else
  5522                           ;MCU_16f1516_B1.c: 365: {
  5523                           ;MCU_16f1516_B1.c: 366: for(i=0;i<21;i++)
  5524  01F8  01D7               	clrf	(I2C_SetData@i)
  5525                           	
  5526  01F9                     l8315:	
  5527  01F9  3015               	movlw	(015h)
  5528  01FA  0257               	subwf	(I2C_SetData@i),w
  5529  01FB  1C03               	skipc
  5530  01FC  29FE               	goto	u4691
  5531  01FD  29FF               	goto	u4690
  5532  01FE                     u4691:
  5533  01FE  2A01               	goto	l8319
  5534  01FF                     u4690:
  5535  01FF  2A1B               	goto	l8325
  5536                           	
  5537  0200                     l8317:	
  5538  0200  2A1B               	goto	l8325
  5539                           	line	367
  5540                           	
  5541  0201                     l5604:	
  5542                           	line	368
  5543                           	
  5544  0201                     l8319:	
  5545                           ;MCU_16f1516_B1.c: 367: {
  5546                           ;MCU_16f1516_B1.c: 368: RF_Data[i]=I2C->BufferReader[i];
  5547  0201  0857               	movf	(I2C_SetData@i),w
  5548  0202  0738               	addwf	(_I2C),w
  5549  0203  00D4               	movwf	(??_I2C_SetData+0)+0
  5550  0204  0854               	movf	0+(??_I2C_SetData+0)+0,w
  5551  0205  0086               	movwf	fsr1l
  5552  0206  3001               	movlw 1	; select bank2/3
  5553  0207  0087               	movwf fsr1h	
  5554                           	
  5555  0208  0801               	movf	indf1,w
  5556  0209  00D5               	movwf	(??_I2C_SetData+1)+0
  5557  020A  0857               	movf	(I2C_SetData@i),w
  5558  020B  3E20               	addlw	_RF_Data&0ffh
  5559  020C  0086               	movwf	fsr1l
  5560  020D  0187               	clrf fsr1h	
  5561                           	
  5562  020E  0855               	movf	(??_I2C_SetData+1)+0,w
  5563  020F  0081               	movwf	indf1
  5564                           	line	366
  5565                           	
  5566  0210                     l8321:	
  5567  0210  3001               	movlw	(01h)
  5568  0211  00D4               	movwf	(??_I2C_SetData+0)+0
  5569  0212  0854               	movf	(??_I2C_SetData+0)+0,w
  5570  0213  07D7               	addwf	(I2C_SetData@i),f
  5571                           	
  5572  0214                     l8323:	
  5573  0214  3015               	movlw	(015h)
  5574  0215  0257               	subwf	(I2C_SetData@i),w
  5575  0216  1C03               	skipc
  5576  0217  2A19               	goto	u4701
  5577  0218  2A1A               	goto	u4700
  5578  0219                     u4701:
  5579  0219  2A01               	goto	l8319
  5580  021A                     u4700:
  5581  021A  2A1B               	goto	l8325
  5582                           	
  5583  021B                     l5605:	
  5584                           	line	371
  5585                           	
  5586  021B                     l8325:	
  5587                           ;MCU_16f1516_B1.c: 369: }
  5588                           ;MCU_16f1516_B1.c: 371: RF->TransceiveGO=1;
  5589  021B  0876               	movf	(_RF),w
  5590  021C  0086               	movwf	fsr1l
  5591  021D  0187               	clrf fsr1h	
  5592                           	
  5593  021E  1501               	bsf	indf1,2
  5594  021F  2A20               	goto	l5606
  5595                           	line	373
  5596                           	
  5597  0220                     l5603:	
  5598                           	line	376
  5599                           	
  5600  0220                     l5606:	
  5601  0220  0008               	return
  5602                           	opt stack 0
  5603                           GLOBAL	__end_of_I2C_SetData
  5604  0221                     	__end_of_I2C_SetData:
  5605 ;; =============== function _I2C_SetData ends ============
  5606                           
  5607                           	signat	_I2C_SetData,4216
  5608                           	global	_setRF_Initialization
  5609                           psect	text1343,local,class=CODE,delta=2
  5610                           global __ptext1343
  5611  06CA                     __ptext1343:
  5612                           
  5613 ;; *************** function _setRF_Initialization *****************
  5614 ;; Defined at:
  5615 ;;		line 51 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  rf              1    wreg     unsigned char 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  rf              1    0[COMMON] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;		None               void
  5622 ;; Registers used:
  5623 ;;		wreg
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5629 ;;      Params:         0       0       0       0       0       0       0       0
  5630 ;;      Locals:         0       0       0       0       0       0       0       0
  5631 ;;      Temps:          0       1       0       0       0       0       0       0
  5632 ;;      Totals:         0       1       0       0       0       0       0       0
  5633 ;;Total ram usage:        1 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    4
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_RF_Initialization
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           psect	text1343
  5643                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  5644                           	line	51
  5645                           	global	__size_of_setRF_Initialization
  5646  0006                     	__size_of_setRF_Initialization	equ	__end_of_setRF_Initialization-_setRF_Initialization
  5647                           	
  5648  06CA                     _setRF_Initialization:	
  5649                           	opt	stack 10
  5650                           ; Regs used in _setRF_Initialization: [wreg]
  5651                           	line	54
  5652                           	
  5653  06CA                     l8287:	
  5654                           ;RF_Control_B1.c: 54: Tx_Length=21;
  5655  06CA  3015               	movlw	(015h)
  5656  06CB  0020               	movlb 0	; select bank0
  5657  06CC  00D4               	movwf	(??_setRF_Initialization+0)+0
  5658  06CD  0854               	movf	(??_setRF_Initialization+0)+0,w
  5659  06CE  00BC               	movwf	(_Tx_Length)
  5660                           	line	56
  5661                           	
  5662  06CF                     l2278:	
  5663  06CF  0008               	return
  5664                           	opt stack 0
  5665                           GLOBAL	__end_of_setRF_Initialization
  5666  06D0                     	__end_of_setRF_Initialization:
  5667 ;; =============== function _setRF_Initialization ends ============
  5668                           
  5669                           	signat	_setRF_Initialization,4216
  5670                           	global	_RfPointSelect
  5671                           psect	text1344,local,class=CODE,delta=2
  5672                           global __ptext1344
  5673  067F                     __ptext1344:
  5674                           
  5675 ;; *************** function _RfPointSelect *****************
  5676 ;; Defined at:
  5677 ;;		line 8 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  rf              1    wreg     unsigned char 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  rf              1    1[BANK0 ] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;		None               void
  5684 ;; Registers used:
  5685 ;;		wreg
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5691 ;;      Params:         0       0       0       0       0       0       0       0
  5692 ;;      Locals:         0       1       0       0       0       0       0       0
  5693 ;;      Temps:          0       1       0       0       0       0       0       0
  5694 ;;      Totals:         0       2       0       0       0       0       0       0
  5695 ;;Total ram usage:        2 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    4
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_setRF_RxStatus
  5702 ;;		_setRF_Main
  5703 ;;		_setRF_Enable
  5704 ;;		_RF_RxDisable
  5705 ;;		_setRF_Learn
  5706 ;;		_setTxData
  5707 ;;		_getRxData
  5708 ;;		_setLog_Code
  5709 ;;		_setControl_Lights_Table
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           psect	text1344
  5713                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  5714                           	line	8
  5715                           	global	__size_of_RfPointSelect
  5716  000E                     	__size_of_RfPointSelect	equ	__end_of_RfPointSelect-_RfPointSelect
  5717                           	
  5718  067F                     _RfPointSelect:	
  5719                           	opt	stack 7
  5720                           ; Regs used in _RfPointSelect: [wreg]
  5721                           ;RfPointSelect@rf stored from wreg
  5722                           	line	10
  5723  067F  0020               	movlb 0	; select bank0
  5724  0680  00D5               	movwf	(RfPointSelect@rf)
  5725                           	
  5726  0681                     l8283:	
  5727                           ;RF_Control_B1.c: 10: if(rf == 1)
  5728  0681  0855               	movf	(RfPointSelect@rf),w
  5729  0682  3A01               	xorlw	01h&0ffh
  5730  0683  1D03               	skipz
  5731  0684  2E86               	goto	u4641
  5732  0685  2E87               	goto	u4640
  5733  0686                     u4641:
  5734  0686  2E8C               	goto	l2260
  5735  0687                     u4640:
  5736                           	line	12
  5737                           	
  5738  0687                     l8285:	
  5739                           ;RF_Control_B1.c: 11: {
  5740                           ;RF_Control_B1.c: 12: RF=&RF1;
  5741  0687  3052               	movlw	(_RF1)&0ffh
  5742  0688  00D4               	movwf	(??_RfPointSelect+0)+0
  5743  0689  0854               	movf	(??_RfPointSelect+0)+0,w
  5744  068A  00F6               	movwf	(_RF)
  5745  068B  2E8C               	goto	l2260
  5746                           	line	13
  5747                           	
  5748  068C                     l2259:	
  5749                           	line	15
  5750                           	
  5751  068C                     l2260:	
  5752  068C  0008               	return
  5753                           	opt stack 0
  5754                           GLOBAL	__end_of_RfPointSelect
  5755  068D                     	__end_of_RfPointSelect:
  5756 ;; =============== function _RfPointSelect ends ============
  5757                           
  5758                           	signat	_RfPointSelect,4216
  5759                           	global	_DelayTime_1us
  5760                           psect	text1345,local,class=CODE,delta=2
  5761                           global __ptext1345
  5762  0425                     __ptext1345:
  5763                           
  5764 ;; *************** function _DelayTime_1us *****************
  5765 ;; Defined at:
  5766 ;;		line 284 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  count           2    0[BANK0 ] int 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  j               2    4[BANK0 ] unsigned int 
  5771 ;;  i               2    2[BANK0 ] unsigned int 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;		None               void
  5774 ;; Registers used:
  5775 ;;		wreg, status,2
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5781 ;;      Params:         0       2       0       0       0       0       0       0
  5782 ;;      Locals:         0       4       0       0       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0
  5784 ;;      Totals:         0       6       0       0       0       0       0       0
  5785 ;;Total ram usage:        6 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    4
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_CC2500_PowerRST
  5792 ;;		_CC2500_FrequencyCabr
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           psect	text1345
  5796                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  5797                           	line	284
  5798                           	global	__size_of_DelayTime_1us
  5799  0031                     	__size_of_DelayTime_1us	equ	__end_of_DelayTime_1us-_DelayTime_1us
  5800                           	
  5801  0425                     _DelayTime_1us:	
  5802                           	opt	stack 9
  5803                           ; Regs used in _DelayTime_1us: [wreg+status,2]
  5804                           	line	286
  5805                           	
  5806  0425                     l8261:	
  5807                           ;CC2500_B1.c: 285: unsigned int i,j;
  5808                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
  5809  0425  3001               	movlw	low(01h)
  5810  0426  0020               	movlb 0	; select bank0
  5811  0427  00D6               	movwf	(DelayTime_1us@i)
  5812  0428  3000               	movlw	high(01h)
  5813  0429  00D7               	movwf	((DelayTime_1us@i))+1
  5814  042A  2C4A               	goto	l1181
  5815                           	line	287
  5816                           	
  5817  042B                     l1182:	
  5818                           	
  5819  042B                     l8263:	
  5820                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
  5821  042B  01D8               	clrf	(DelayTime_1us@j)
  5822  042C  01D9               	clrf	(DelayTime_1us@j+1)
  5823                           	
  5824  042D                     l8265:	
  5825  042D  3000               	movlw	high(02h)
  5826  042E  0259               	subwf	(DelayTime_1us@j+1),w
  5827  042F  3002               	movlw	low(02h)
  5828  0430  1903               	skipnz
  5829  0431  0258               	subwf	(DelayTime_1us@j),w
  5830  0432  1C03               	skipc
  5831  0433  2C35               	goto	u4601
  5832  0434  2C36               	goto	u4600
  5833  0435                     u4601:
  5834  0435  2C38               	goto	l8269
  5835  0436                     u4600:
  5836  0436  2C46               	goto	l8271
  5837                           	
  5838  0437                     l8267:	
  5839  0437  2C46               	goto	l8271
  5840                           	
  5841  0438                     l1183:	
  5842                           	
  5843  0438                     l8269:	
  5844  0438  3001               	movlw	low(01h)
  5845  0439  07D8               	addwf	(DelayTime_1us@j),f
  5846  043A  3000               	movlw	high(01h)
  5847  043B  3DD9               	addwfc	(DelayTime_1us@j+1),f
  5848  043C  3000               	movlw	high(02h)
  5849  043D  0259               	subwf	(DelayTime_1us@j+1),w
  5850  043E  3002               	movlw	low(02h)
  5851  043F  1903               	skipnz
  5852  0440  0258               	subwf	(DelayTime_1us@j),w
  5853  0441  1C03               	skipc
  5854  0442  2C44               	goto	u4611
  5855  0443  2C45               	goto	u4610
  5856  0444                     u4611:
  5857  0444  2C38               	goto	l8269
  5858  0445                     u4610:
  5859  0445  2C46               	goto	l8271
  5860                           	
  5861  0446                     l1184:	
  5862                           	line	286
  5863                           	
  5864  0446                     l8271:	
  5865  0446  3001               	movlw	low(01h)
  5866  0447  07D6               	addwf	(DelayTime_1us@i),f
  5867  0448  3000               	movlw	high(01h)
  5868  0449  3DD7               	addwfc	(DelayTime_1us@i+1),f
  5869                           	
  5870  044A                     l1181:	
  5871  044A  0855               	movf	(DelayTime_1us@count+1),w
  5872  044B  0257               	subwf	(DelayTime_1us@i+1),w
  5873  044C  1D03               	skipz
  5874  044D  2C50               	goto	u4625
  5875  044E  0854               	movf	(DelayTime_1us@count),w
  5876  044F  0256               	subwf	(DelayTime_1us@i),w
  5877  0450                     u4625:
  5878  0450  1C03               	skipc
  5879  0451  2C53               	goto	u4621
  5880  0452  2C54               	goto	u4620
  5881  0453                     u4621:
  5882  0453  2C2B               	goto	l8263
  5883  0454                     u4620:
  5884  0454  2C55               	goto	l1186
  5885                           	
  5886  0455                     l1185:	
  5887                           	line	288
  5888                           	
  5889  0455                     l1186:	
  5890  0455  0008               	return
  5891                           	opt stack 0
  5892                           GLOBAL	__end_of_DelayTime_1us
  5893  0456                     	__end_of_DelayTime_1us:
  5894 ;; =============== function _DelayTime_1us ends ============
  5895                           
  5896                           	signat	_DelayTime_1us,4216
  5897                           	global	_CC2500_ReadByte
  5898                           psect	text1346,local,class=CODE,delta=2
  5899                           global __ptext1346
  5900  0503                     __ptext1346:
  5901                           
  5902 ;; *************** function _CC2500_ReadByte *****************
  5903 ;; Defined at:
  5904 ;;		line 211 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;		None
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  loop_b          1    1[BANK0 ] unsigned char 
  5909 ;; Return value:  Size  Location     Type
  5910 ;;		None               void
  5911 ;; Registers used:
  5912 ;;		wreg, status,2, status,0
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5918 ;;      Params:         0       0       0       0       0       0       0       0
  5919 ;;      Locals:         0       1       0       0       0       0       0       0
  5920 ;;      Temps:          0       1       0       0       0       0       0       0
  5921 ;;      Totals:         0       2       0       0       0       0       0       0
  5922 ;;Total ram usage:        2 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:    4
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_CC2500_RxData
  5929 ;;		_CC2500_ReadStatus
  5930 ;;		_CC2500_ReadREG
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           psect	text1346
  5934                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  5935                           	line	211
  5936                           	global	__size_of_CC2500_ReadByte
  5937  0025                     	__size_of_CC2500_ReadByte	equ	__end_of_CC2500_ReadByte-_CC2500_ReadByte
  5938                           	
  5939  0503                     _CC2500_ReadByte:	
  5940                           	opt	stack 8
  5941                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  5942                           	line	213
  5943                           	
  5944  0503                     l8243:	
  5945                           ;CC2500_B1.c: 212: unsigned char loop_b;
  5946                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  5947  0503  0020               	movlb 0	; select bank0
  5948  0504  01D5               	clrf	(CC2500_ReadByte@loop_b)
  5949                           	
  5950  0505                     l8245:	
  5951  0505  3008               	movlw	(08h)
  5952  0506  0255               	subwf	(CC2500_ReadByte@loop_b),w
  5953  0507  1C03               	skipc
  5954  0508  2D0A               	goto	u4571
  5955  0509  2D0B               	goto	u4570
  5956  050A                     u4571:
  5957  050A  2D0D               	goto	l1150
  5958  050B                     u4570:
  5959  050B  2D27               	goto	l1154
  5960                           	
  5961  050C                     l8247:	
  5962  050C  2D27               	goto	l1154
  5963                           	line	214
  5964                           	
  5965  050D                     l1150:	
  5966                           	line	215
  5967                           ;CC2500_B1.c: 214: {
  5968                           ;CC2500_B1.c: 215: RB2=1;
  5969  050D  150D               	bsf	(106/8),(106)&7
  5970                           	line	216
  5971                           	
  5972  050E                     l8249:	
  5973                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  5974  050E  1003               	clrc
  5975  050F  0DBB               	rlf	(_SPI0Buffer),f
  5976                           
  5977                           	line	217
  5978                           	
  5979  0510                     l8251:	
  5980                           ;CC2500_B1.c: 217: if(RB3 == 1)
  5981  0510  1D8D               	btfss	(107/8),(107)&7
  5982  0511  2D13               	goto	u4581
  5983  0512  2D14               	goto	u4580
  5984  0513                     u4581:
  5985  0513  2D16               	goto	l8255
  5986  0514                     u4580:
  5987                           	line	218
  5988                           	
  5989  0514                     l8253:	
  5990                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  5991  0514  143B               	bsf	(_SPI0Buffer)+(0/8),(0)&7
  5992  0515  2D1B               	goto	l8257
  5993                           	line	219
  5994                           	
  5995  0516                     l1152:	
  5996                           	line	220
  5997                           	
  5998  0516                     l8255:	
  5999                           ;CC2500_B1.c: 219: else
  6000                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  6001  0516  30FE               	movlw	(0FEh)
  6002  0517  00D4               	movwf	(??_CC2500_ReadByte+0)+0
  6003  0518  0854               	movf	(??_CC2500_ReadByte+0)+0,w
  6004  0519  05BB               	andwf	(_SPI0Buffer),f
  6005  051A  2D1B               	goto	l8257
  6006                           	
  6007  051B                     l1153:	
  6008                           	line	221
  6009                           	
  6010  051B                     l8257:	
  6011                           ;CC2500_B1.c: 221: RB2=0;
  6012  051B  110D               	bcf	(106/8),(106)&7
  6013                           	line	213
  6014  051C  3001               	movlw	(01h)
  6015  051D  00D4               	movwf	(??_CC2500_ReadByte+0)+0
  6016  051E  0854               	movf	(??_CC2500_ReadByte+0)+0,w
  6017  051F  07D5               	addwf	(CC2500_ReadByte@loop_b),f
  6018                           	
  6019  0520                     l8259:	
  6020  0520  3008               	movlw	(08h)
  6021  0521  0255               	subwf	(CC2500_ReadByte@loop_b),w
  6022  0522  1C03               	skipc
  6023  0523  2D25               	goto	u4591
  6024  0524  2D26               	goto	u4590
  6025  0525                     u4591:
  6026  0525  2D0D               	goto	l1150
  6027  0526                     u4590:
  6028  0526  2D27               	goto	l1154
  6029                           	
  6030  0527                     l1151:	
  6031                           	line	223
  6032                           	
  6033  0527                     l1154:	
  6034  0527  0008               	return
  6035                           	opt stack 0
  6036                           GLOBAL	__end_of_CC2500_ReadByte
  6037  0528                     	__end_of_CC2500_ReadByte:
  6038 ;; =============== function _CC2500_ReadByte ends ============
  6039                           
  6040                           	signat	_CC2500_ReadByte,88
  6041                           	global	_CC2500_WriteByte
  6042                           psect	text1347,local,class=CODE,delta=2
  6043                           global __ptext1347
  6044  054B                     __ptext1347:
  6045                           
  6046 ;; *************** function _CC2500_WriteByte *****************
  6047 ;; Defined at:
  6048 ;;		line 194 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;		None
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  loop_a          1    1[BANK0 ] unsigned char 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;		None               void
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6062 ;;      Params:         0       0       0       0       0       0       0       0
  6063 ;;      Locals:         0       1       0       0       0       0       0       0
  6064 ;;      Temps:          0       1       0       0       0       0       0       0
  6065 ;;      Totals:         0       2       0       0       0       0       0       0
  6066 ;;Total ram usage:        2 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    4
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_CC2500_TxData
  6073 ;;		_CC2500_RxData
  6074 ;;		_CC2500_PowerRST
  6075 ;;		_CC2500_WriteREG
  6076 ;;		_CC2500_WriteCommand
  6077 ;;		_CC2500_ReadStatus
  6078 ;;		_CC2500_ReadREG
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           psect	text1347
  6082                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
  6083                           	line	194
  6084                           	global	__size_of_CC2500_WriteByte
  6085  0021                     	__size_of_CC2500_WriteByte	equ	__end_of_CC2500_WriteByte-_CC2500_WriteByte
  6086                           	
  6087  054B                     _CC2500_WriteByte:	
  6088                           	opt	stack 8
  6089                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
  6090                           	line	196
  6091                           	
  6092  054B                     l8227:	
  6093                           ;CC2500_B1.c: 195: unsigned char loop_a;
  6094                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
  6095  054B  0020               	movlb 0	; select bank0
  6096  054C  01D5               	clrf	(CC2500_WriteByte@loop_a)
  6097                           	
  6098  054D                     l8229:	
  6099  054D  3008               	movlw	(08h)
  6100  054E  0255               	subwf	(CC2500_WriteByte@loop_a),w
  6101  054F  1C03               	skipc
  6102  0550  2D52               	goto	u4541
  6103  0551  2D53               	goto	u4540
  6104  0552                     u4541:
  6105  0552  2D55               	goto	l1143
  6106  0553                     u4540:
  6107  0553  2D6B               	goto	l1147
  6108                           	
  6109  0554                     l8231:	
  6110  0554  2D6B               	goto	l1147
  6111                           	line	197
  6112                           	
  6113  0555                     l1143:	
  6114                           	line	198
  6115                           ;CC2500_B1.c: 197: {
  6116                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
  6117  0555  1FBB               	btfss	(_SPI0Buffer),(7)&7
  6118  0556  2D58               	goto	u4551
  6119  0557  2D59               	goto	u4550
  6120  0558                     u4551:
  6121  0558  2D5B               	goto	l1145
  6122  0559                     u4550:
  6123                           	line	199
  6124                           	
  6125  0559                     l8233:	
  6126                           ;CC2500_B1.c: 199: RB1=1;
  6127  0559  148D               	bsf	(105/8),(105)&7
  6128  055A  2D5C               	goto	l1146
  6129                           	line	200
  6130                           	
  6131  055B                     l1145:	
  6132                           	line	201
  6133                           ;CC2500_B1.c: 200: else
  6134                           ;CC2500_B1.c: 201: RB1=0;
  6135  055B  108D               	bcf	(105/8),(105)&7
  6136                           	
  6137  055C                     l1146:	
  6138                           	line	202
  6139                           ;CC2500_B1.c: 202: RB2=1;
  6140  055C  150D               	bsf	(106/8),(106)&7
  6141                           	line	203
  6142                           	
  6143  055D                     l8235:	
  6144                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
  6145  055D  1003               	clrc
  6146  055E  0DBB               	rlf	(_SPI0Buffer),f
  6147                           
  6148                           	line	204
  6149                           	
  6150  055F                     l8237:	
  6151                           ;CC2500_B1.c: 204: RB2=0;
  6152  055F  110D               	bcf	(106/8),(106)&7
  6153                           	line	196
  6154                           	
  6155  0560                     l8239:	
  6156  0560  3001               	movlw	(01h)
  6157  0561  00D4               	movwf	(??_CC2500_WriteByte+0)+0
  6158  0562  0854               	movf	(??_CC2500_WriteByte+0)+0,w
  6159  0563  07D5               	addwf	(CC2500_WriteByte@loop_a),f
  6160                           	
  6161  0564                     l8241:	
  6162  0564  3008               	movlw	(08h)
  6163  0565  0255               	subwf	(CC2500_WriteByte@loop_a),w
  6164  0566  1C03               	skipc
  6165  0567  2D69               	goto	u4561
  6166  0568  2D6A               	goto	u4560
  6167  0569                     u4561:
  6168  0569  2D55               	goto	l1143
  6169  056A                     u4560:
  6170  056A  2D6B               	goto	l1147
  6171                           	
  6172  056B                     l1144:	
  6173                           	line	206
  6174                           	
  6175  056B                     l1147:	
  6176  056B  0008               	return
  6177                           	opt stack 0
  6178                           GLOBAL	__end_of_CC2500_WriteByte
  6179  056C                     	__end_of_CC2500_WriteByte:
  6180 ;; =============== function _CC2500_WriteByte ends ============
  6181                           
  6182                           	signat	_CC2500_WriteByte,88
  6183                           	global	_ISR
  6184                           psect	intentry,class=CODE,delta=2
  6185                           global __pintentry
  6186  0004                     __pintentry:
  6187                           
  6188 ;; *************** function _ISR *****************
  6189 ;; Defined at:
  6190 ;;		line 57 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;		None               void
  6197 ;; Registers used:
  6198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6204 ;;      Params:         0       0       0       0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0
  6206 ;;      Temps:          1       0       0       0       0       0       0       0
  6207 ;;      Totals:         1       0       0       0       0       0       0       0
  6208 ;;Total ram usage:        1 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    3
  6211 ;; This function calls:
  6212 ;;		_TMR1_ISR
  6213 ;;		_INT_ISR
  6214 ;;		_I2C_ISR
  6215 ;; This function is called by:
  6216 ;;		Interrupt level 1
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           psect	intentry
  6220                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6221                           	line	57
  6222                           	global	__size_of_ISR
  6223  0013                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  6224                           	
  6225  0004                     _ISR:	
  6226                           	opt	stack 7
  6227                           ; Regs used in _ISR: [wreg+fsr1l-status,0+pclath+cstack]
  6228                           psect	intentry
  6229  0004  3180               	pagesel	$
  6230  0005  0020               	movlb 0	; select bank0
  6231  0006  087F               	movf	btemp+1,w
  6232  0007  00F5               	movwf	(??_ISR+0)
  6233                           	line	58
  6234                           	
  6235  0008                     i1l7813:	
  6236                           ;MCU_16f1516_B1.c: 58: _nop();
  6237  0008  0000               	nop
  6238                           	line	60
  6239                           ;MCU_16f1516_B1.c: 60: _nop();
  6240  0009  0000               	nop
  6241                           	line	62
  6242                           	
  6243  000A                     i1l7815:	
  6244                           ;MCU_16f1516_B1.c: 62: TMR1_ISR();
  6245  000A  3183  23BC  3180   	fcall	_TMR1_ISR
  6246                           	line	66
  6247                           ;MCU_16f1516_B1.c: 66: INT_ISR();
  6248  000D  3186  263E  3180   	fcall	_INT_ISR
  6249                           	line	70
  6250                           ;MCU_16f1516_B1.c: 68: ;;
  6251                           ;MCU_16f1516_B1.c: 70: I2C_ISR();
  6252  0010  3186  2603  3180   	fcall	_I2C_ISR
  6253                           	line	71
  6254                           	
  6255  0013                     i1l5565:	
  6256  0013  0875               	movf	(??_ISR+0),w
  6257  0014  0020               	movlb 0	; select bank0
  6258  0015  00FF               	movwf	btemp+1
  6259  0016  0009               	retfie
  6260                           	opt stack 0
  6261                           GLOBAL	__end_of_ISR
  6262  0017                     	__end_of_ISR:
  6263 ;; =============== function _ISR ends ============
  6264                           
  6265                           	signat	_ISR,88
  6266                           	global	_INT_ISR
  6267                           psect	text1349,local,class=CODE,delta=2
  6268                           global __ptext1349
  6269  063E                     __ptext1349:
  6270                           
  6271 ;; *************** function _INT_ISR *****************
  6272 ;; Defined at:
  6273 ;;		line 157 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;		None
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;		None               void
  6280 ;; Registers used:
  6281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6287 ;;      Params:         0       0       0       0       0       0       0       0
  6288 ;;      Locals:         0       0       0       0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0
  6290 ;;      Totals:         0       0       0       0       0       0       0       0
  6291 ;;Total ram usage:        0 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    2
  6294 ;; This function calls:
  6295 ;;		_setRF_ReceiveGO
  6296 ;; This function is called by:
  6297 ;;		_ISR
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           psect	text1349
  6301                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6302                           	line	157
  6303                           	global	__size_of_INT_ISR
  6304  0013                     	__size_of_INT_ISR	equ	__end_of_INT_ISR-_INT_ISR
  6305                           	
  6306  063E                     _INT_ISR:	
  6307                           	opt	stack 7
  6308                           ; Regs used in _INT_ISR: [wreg+fsr1l-status,0+pclath+cstack]
  6309                           	line	158
  6310                           	
  6311  063E                     i1l7831:	
  6312                           ;MCU_16f1516_B1.c: 158: if(INTE && INTF)
  6313  063E  1E0B               	btfss	(92/8),(92)&7
  6314  063F  2E41               	goto	u374_21
  6315  0640  2E42               	goto	u374_20
  6316  0641                     u374_21:
  6317  0641  2E50               	goto	i1l5580
  6318  0642                     u374_20:
  6319                           	
  6320  0642                     i1l7833:	
  6321  0642  1C8B               	btfss	(89/8),(89)&7
  6322  0643  2E45               	goto	u375_21
  6323  0644  2E46               	goto	u375_20
  6324  0645                     u375_21:
  6325  0645  2E50               	goto	i1l5580
  6326  0646                     u375_20:
  6327                           	line	160
  6328                           	
  6329  0646                     i1l7835:	
  6330                           ;MCU_16f1516_B1.c: 159: {
  6331                           ;MCU_16f1516_B1.c: 160: INTF=0;
  6332  0646  108B               	bcf	(89/8),(89)&7
  6333                           	line	161
  6334                           ;MCU_16f1516_B1.c: 161: INTE=0;
  6335  0647  120B               	bcf	(92/8),(92)&7
  6336                           	line	162
  6337                           	
  6338  0648                     i1l7837:	
  6339                           ;MCU_16f1516_B1.c: 162: setRF_ReceiveGO(1,1);
  6340  0648  01F3               	clrf	(?_setRF_ReceiveGO)
  6341  0649  1403               	bsf	status,0
  6342  064A  0DF3               	rlf	(?_setRF_ReceiveGO),f
  6343  064B  3001               	movlw	(01h)
  6344  064C  3186  269A  3186   	fcall	_setRF_ReceiveGO
  6345  064F  2E50               	goto	i1l5580
  6346                           	line	163
  6347                           	
  6348  0650                     i1l5579:	
  6349                           	line	164
  6350                           	
  6351  0650                     i1l5580:	
  6352  0650  0008               	return
  6353                           	opt stack 0
  6354                           GLOBAL	__end_of_INT_ISR
  6355  0651                     	__end_of_INT_ISR:
  6356 ;; =============== function _INT_ISR ends ============
  6357                           
  6358                           	signat	_INT_ISR,88
  6359                           	global	_setRF_ReceiveGO
  6360                           psect	text1350,local,class=CODE,delta=2
  6361                           global __ptext1350
  6362  069A                     __ptext1350:
  6363                           
  6364 ;; *************** function _setRF_ReceiveGO *****************
  6365 ;; Defined at:
  6366 ;;		line 38 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  rf              1    wreg     unsigned char 
  6369 ;;  command         1    2[COMMON] unsigned char 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  rf              1    3[COMMON] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;		None               void
  6374 ;; Registers used:
  6375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6381 ;;      Params:         1       0       0       0       0       0       0       0
  6382 ;;      Locals:         1       0       0       0       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0       0       0
  6384 ;;      Totals:         2       0       0       0       0       0       0       0
  6385 ;;Total ram usage:        2 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    1
  6388 ;; This function calls:
  6389 ;;		i1_RfPointSelect
  6390 ;; This function is called by:
  6391 ;;		_INT_ISR
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           psect	text1350
  6395                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  6396                           	line	38
  6397                           	global	__size_of_setRF_ReceiveGO
  6398  000D                     	__size_of_setRF_ReceiveGO	equ	__end_of_setRF_ReceiveGO-_setRF_ReceiveGO
  6399                           	
  6400  069A                     _setRF_ReceiveGO:	
  6401                           	opt	stack 7
  6402                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l-status,0+pclath+cstack]
  6403                           ;setRF_ReceiveGO@rf stored from wreg
  6404  069A  00F4               	movwf	(setRF_ReceiveGO@rf)
  6405                           	line	39
  6406                           	
  6407  069B                     i1l7609:	
  6408                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
  6409  069B  0874               	movf	(setRF_ReceiveGO@rf),w
  6410  069C  3186  26A7  3186   	fcall	i1_RfPointSelect
  6411                           	line	40
  6412                           	
  6413  069F                     i1l7611:	
  6414                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
  6415  069F  0876               	movf	(_RF),w
  6416  06A0  0086               	movwf	fsr1l
  6417  06A1  0187               	clrf fsr1h	
  6418                           	
  6419  06A2  0873               	movf	(setRF_ReceiveGO@command),w
  6420  06A3  1081               	bcf	indf1,1
  6421  06A4  1D03               	skipz
  6422  06A5  1481               	bsf	indf1,1
  6423                           	line	41
  6424                           	
  6425  06A6                     i1l2272:	
  6426  06A6  0008               	return
  6427                           	opt stack 0
  6428                           GLOBAL	__end_of_setRF_ReceiveGO
  6429  06A7                     	__end_of_setRF_ReceiveGO:
  6430 ;; =============== function _setRF_ReceiveGO ends ============
  6431                           
  6432                           	signat	_setRF_ReceiveGO,8312
  6433                           	global	i1_RfPointSelect
  6434                           psect	text1351,local,class=CODE,delta=2
  6435                           global __ptext1351
  6436  06A7                     __ptext1351:
  6437                           
  6438 ;; *************** function i1_RfPointSelect *****************
  6439 ;; Defined at:
  6440 ;;		line 8 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  RfPointSelec    1    wreg     unsigned char 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  RfPointSelec    1    1[COMMON] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;		None               void
  6447 ;; Registers used:
  6448 ;;		wreg
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6454 ;;      Params:         0       0       0       0       0       0       0       0
  6455 ;;      Locals:         1       0       0       0       0       0       0       0
  6456 ;;      Temps:          1       0       0       0       0       0       0       0
  6457 ;;      Totals:         2       0       0       0       0       0       0       0
  6458 ;;Total ram usage:        2 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_setRF_ReceiveGO
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           psect	text1351
  6467                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  6468                           	line	8
  6469                           	global	__size_ofi1_RfPointSelect
  6470  000D                     	__size_ofi1_RfPointSelect	equ	__end_ofi1_RfPointSelect-i1_RfPointSelect
  6471                           	
  6472  06A7                     i1_RfPointSelect:	
  6473                           	opt	stack 7
  6474                           ; Regs used in i1_RfPointSelect: [wreg]
  6475                           ;i1RfPointSelect@rf stored from wreg
  6476                           	line	10
  6477  06A7  00F2               	movwf	(i1RfPointSelect@rf)
  6478                           	
  6479  06A8                     i1l7913:	
  6480                           ;RF_Control_B1.c: 10: if(rf == 1)
  6481  06A8  0872               	movf	(i1RfPointSelect@rf),w
  6482  06A9  3A01               	xorlw	01h&0ffh
  6483  06AA  1D03               	skipz
  6484  06AB  2EAD               	goto	u414_21
  6485  06AC  2EAE               	goto	u414_20
  6486  06AD                     u414_21:
  6487  06AD  2EB3               	goto	i1l2260
  6488  06AE                     u414_20:
  6489                           	line	12
  6490                           	
  6491  06AE                     i1l7915:	
  6492                           ;RF_Control_B1.c: 11: {
  6493                           ;RF_Control_B1.c: 12: RF=&RF1;
  6494  06AE  3052               	movlw	(_RF1)&0ffh
  6495  06AF  00F1               	movwf	(??i1_RfPointSelect+0)+0
  6496  06B0  0871               	movf	(??i1_RfPointSelect+0)+0,w
  6497  06B1  00F6               	movwf	(_RF)
  6498  06B2  2EB3               	goto	i1l2260
  6499                           	line	13
  6500                           	
  6501  06B3                     i1l2259:	
  6502                           	line	15
  6503                           	
  6504  06B3                     i1l2260:	
  6505  06B3  0008               	return
  6506                           	opt stack 0
  6507                           GLOBAL	__end_ofi1_RfPointSelect
  6508  06B4                     	__end_ofi1_RfPointSelect:
  6509 ;; =============== function i1_RfPointSelect ends ============
  6510                           
  6511                           	signat	i1_RfPointSelect,88
  6512                           	global	_I2C_ISR
  6513                           psect	text1352,local,class=CODE,delta=2
  6514                           global __ptext1352
  6515  0603                     __ptext1352:
  6516                           
  6517 ;; *************** function _I2C_ISR *****************
  6518 ;; Defined at:
  6519 ;;		line 261 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;		None               void
  6526 ;; Registers used:
  6527 ;;		wreg, fsr1l, fsr1h
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6533 ;;      Params:         0       0       0       0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_ISR
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           psect	text1352
  6546                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6547                           	line	261
  6548                           	global	__size_of_I2C_ISR
  6549  0015                     	__size_of_I2C_ISR	equ	__end_of_I2C_ISR-_I2C_ISR
  6550                           	
  6551  0603                     _I2C_ISR:	
  6552                           	opt	stack 9
  6553                           ; Regs used in _I2C_ISR: [wregfsr1]
  6554                           	line	262
  6555                           	
  6556  0603                     i1l7839:	
  6557                           ;MCU_16f1516_B1.c: 262: if(SSPIE && SSPIF)
  6558  0603  0021               	movlb 1	; select bank1
  6559  0604  1D91               	btfss	(1163/8)^080h,(1163)&7
  6560  0605  2E07               	goto	u376_21
  6561  0606  2E08               	goto	u376_20
  6562  0607                     u376_21:
  6563  0607  2E17               	goto	i1l5590
  6564  0608                     u376_20:
  6565                           	
  6566  0608                     i1l7841:	
  6567  0608  0020               	movlb 0	; select bank0
  6568  0609  1D91               	btfss	(139/8),(139)&7
  6569  060A  2E0C               	goto	u377_21
  6570  060B  2E0D               	goto	u377_20
  6571  060C                     u377_21:
  6572  060C  2E17               	goto	i1l5590
  6573  060D                     u377_20:
  6574                           	line	264
  6575                           	
  6576  060D                     i1l7843:	
  6577                           ;MCU_16f1516_B1.c: 263: {
  6578                           ;MCU_16f1516_B1.c: 264: SSPIE=0;
  6579  060D  0021               	movlb 1	; select bank1
  6580  060E  1191               	bcf	(1163/8)^080h,(1163)&7
  6581                           	line	265
  6582                           	
  6583  060F                     i1l7845:	
  6584                           ;MCU_16f1516_B1.c: 265: I2C->SlaveGO=1;
  6585  060F  0020               	movlb 0	; select bank0
  6586  0610  0838               	movf	(_I2C),w
  6587  0611  3E42               	addlw	042h
  6588  0612  0086               	movwf	fsr1l
  6589  0613  3001               	movlw 1	; select bank2/3
  6590  0614  0087               	movwf fsr1h	
  6591                           	
  6592  0615  1401               	bsf	indf1,0
  6593  0616  2E17               	goto	i1l5590
  6594                           	line	272
  6595                           	
  6596  0617                     i1l5589:	
  6597                           	line	273
  6598                           	
  6599  0617                     i1l5590:	
  6600  0617  0008               	return
  6601                           	opt stack 0
  6602                           GLOBAL	__end_of_I2C_ISR
  6603  0618                     	__end_of_I2C_ISR:
  6604 ;; =============== function _I2C_ISR ends ============
  6605                           
  6606                           	signat	_I2C_ISR,88
  6607                           	global	_TMR1_ISR
  6608                           psect	text1353,local,class=CODE,delta=2
  6609                           global __ptext1353
  6610  03BC                     __ptext1353:
  6611                           
  6612 ;; *************** function _TMR1_ISR *****************
  6613 ;; Defined at:
  6614 ;;		line 126 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;		None
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;		None
  6619 ;; Return value:  Size  Location     Type
  6620 ;;		None               void
  6621 ;; Registers used:
  6622 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6628 ;;      Params:         0       0       0       0       0       0       0       0
  6629 ;;      Locals:         0       0       0       0       0       0       0       0
  6630 ;;      Temps:          0       0       0       0       0       0       0       0
  6631 ;;      Totals:         0       0       0       0       0       0       0       0
  6632 ;;Total ram usage:        0 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; This function calls:
  6635 ;;		Nothing
  6636 ;; This function is called by:
  6637 ;;		_ISR
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           psect	text1353
  6641                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6642                           	line	126
  6643                           	global	__size_of_TMR1_ISR
  6644  0035                     	__size_of_TMR1_ISR	equ	__end_of_TMR1_ISR-_TMR1_ISR
  6645                           	
  6646  03BC                     _TMR1_ISR:	
  6647                           	opt	stack 9
  6648                           ; Regs used in _TMR1_ISR: [wreg+fsr1l-status,0]
  6649                           	line	127
  6650                           	
  6651  03BC                     i1l7817:	
  6652                           ;MCU_16f1516_B1.c: 127: if(TMR1IE && TMR1IF)
  6653  03BC  0021               	movlb 1	; select bank1
  6654  03BD  1C11               	btfss	(1160/8)^080h,(1160)&7
  6655  03BE  2BC0               	goto	u371_21
  6656  03BF  2BC1               	goto	u371_20
  6657  03C0                     u371_21:
  6658  03C0  2BF0               	goto	i1l5573
  6659  03C1                     u371_20:
  6660                           	
  6661  03C1                     i1l7819:	
  6662  03C1  0020               	movlb 0	; select bank0
  6663  03C2  1C11               	btfss	(136/8),(136)&7
  6664  03C3  2BC5               	goto	u372_21
  6665  03C4  2BC6               	goto	u372_20
  6666  03C5                     u372_21:
  6667  03C5  2BF0               	goto	i1l5573
  6668  03C6                     u372_20:
  6669                           	line	129
  6670                           	
  6671  03C6                     i1l7821:	
  6672                           ;MCU_16f1516_B1.c: 128: {
  6673                           ;MCU_16f1516_B1.c: 129: TMR1H=((65536-700)/256);
  6674  03C6  30FD               	movlw	(0FDh)
  6675  03C7  0097               	movwf	(23)	;volatile
  6676                           	line	130
  6677                           ;MCU_16f1516_B1.c: 130: TMR1L=((65536-700)%256);
  6678  03C8  3044               	movlw	(044h)
  6679  03C9  0096               	movwf	(22)	;volatile
  6680                           	line	131
  6681                           	
  6682  03CA                     i1l7823:	
  6683                           ;MCU_16f1516_B1.c: 131: TMR1IF=0;
  6684  03CA  1011               	bcf	(136/8),(136)&7
  6685                           	line	132
  6686                           	
  6687  03CB                     i1l7825:	
  6688                           ;MCU_16f1516_B1.c: 132: Timer1->Count++;
  6689  03CB  0878               	movf	(_Timer1),w
  6690  03CC  3E01               	addlw	01h
  6691  03CD  0086               	movwf	fsr1l
  6692  03CE  0187               	clrf fsr1h	
  6693                           	
  6694  03CF  3001               	movlw	01h
  6695  03D0  0781               	addwf	indf1,f
  6696  03D1  3141               	addfsr	fsr1,1
  6697  03D2  1803               	skipnc
  6698  03D3  0A81               	incf	indf1,f
  6699                           	line	133
  6700                           	
  6701  03D4                     i1l7827:	
  6702                           ;MCU_16f1516_B1.c: 133: if(Timer1->Count == 20)
  6703  03D4  0878               	movf	(_Timer1),w
  6704  03D5  3E01               	addlw	01h
  6705  03D6  0086               	movwf	fsr1l
  6706  03D7  0187               	clrf fsr1h	
  6707                           	
  6708  03D8  3F40               	moviw	[0]fsr1
  6709  03D9  3A14               	xorlw	low(014h)
  6710  03DA  1D03               	skipz
  6711  03DB  2BDE               	goto	u373_25
  6712  03DC  3F41               	moviw	[1]fsr1
  6713  03DD  3A00               	xorlw	high(014h)
  6714  03DE                     u373_25:
  6715  03DE  1D03               	skipz
  6716  03DF  2BE1               	goto	u373_21
  6717  03E0  2BE2               	goto	u373_20
  6718  03E1                     u373_21:
  6719  03E1  2BF0               	goto	i1l5573
  6720  03E2                     u373_20:
  6721                           	line	135
  6722                           	
  6723  03E2                     i1l7829:	
  6724                           ;MCU_16f1516_B1.c: 134: {
  6725                           ;MCU_16f1516_B1.c: 135: Timer1->Count=0;
  6726  03E2  0878               	movf	(_Timer1),w
  6727  03E3  3E01               	addlw	01h
  6728  03E4  0086               	movwf	fsr1l
  6729  03E5  0187               	clrf fsr1h	
  6730                           	
  6731  03E6  3000               	movlw	low(0)
  6732  03E7  3FC0               	movwi	[0]fsr1
  6733  03E8  3000               	movlw	high(0)
  6734  03E9  3FC1               	movwi	[1]fsr1
  6735                           	line	136
  6736                           ;MCU_16f1516_B1.c: 136: TMain->T1_Timerout=1;
  6737  03EA  085D               	movf	(_TMain),w
  6738  03EB  0086               	movwf	fsr1l
  6739  03EC  0187               	clrf fsr1h	
  6740                           	
  6741  03ED  1501               	bsf	indf1,2
  6742  03EE  2BF0               	goto	i1l5573
  6743                           	line	137
  6744                           	
  6745  03EF                     i1l5572:	
  6746  03EF  2BF0               	goto	i1l5573
  6747                           	line	138
  6748                           	
  6749  03F0                     i1l5571:	
  6750                           	line	139
  6751                           	
  6752  03F0                     i1l5573:	
  6753  03F0  0008               	return
  6754                           	opt stack 0
  6755                           GLOBAL	__end_of_TMR1_ISR
  6756  03F1                     	__end_of_TMR1_ISR:
  6757 ;; =============== function _TMR1_ISR ends ============
  6758                           
  6759                           	signat	_TMR1_ISR,88
  6760                           psect	text1354,local,class=CODE,delta=2
  6761                           global __ptext1354
  6762  0000                     __ptext1354:
  6763                           	global	btemp
  6764  007E                     	btemp set 07Eh
  6765                           
  6766                           	DABS	1,126,2	;btemp
  6767                           	global	wtemp0
  6768  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Aug 29 09:24:38 2014

               ??_MainT_Initial 0054                              _BF 10A0                              _RF 0076  
       __end_of_CC2500_WriteREG 05A7                             _I2C 0038                             _CKP 10AC  
                           _GIE 005F                             _CRC 0037                             _RA0 0060  
                           _RA1 0061                             _RB0 0068                             _RB1 0069  
                           _RC0 0070                             _RB2 006A                             _RB3 006B  
                           _RB5 006D                             _RF1 0052                             _PEN 10B2  
                           _ISR 0004                             _SEN 10B0                 __end_of_I2C_ISR 0618  
      __end_of_CC2500_WriteByte 056C                 __end_of_I2C_Set 05EE            __size_of_I2C_SetData 0080  
                           wreg 0009                            ?_ISR 0071                            l1100 023D  
                          l1101 0242                            l1102 0260                            l1103 024F  
                          l1112 03AB                            l1104 0267                            l1113 03AB  
                          l1105 027E                            l1121 0490                            l1114 03B0  
                          l1106 028D                            l1122 04B4                            l1115 03B4  
                          l1123 04B4                            l1131 06E3                            l1116 03B4  
                          l1140 06D9                            l1117 03B9                            l1109 05D7  
                          l1150 050D                            l1118 03BB                            l1126 04E6  
                          l1134 06DE                            l1143 0555                            l1151 0527  
                          l1127 0502                            l1144 056B                            l1152 0516  
                          l1160 05A6                            l1080 02FC                            l1128 0502  
                          l1145 055B                            l1153 051B                            l1081 0301  
                          l1137 0699                            l1146 055C                            l1154 0527  
                          l1170 0633                            l1090 0338                            l1082 0320  
                          l1147 056B                            l1171 0638                            l1091 0341  
                          l1083 030F                            l1172 063D                            l1084 0326  
                          l1181 044A                            l1157 0594                            l1085 032C  
                          l1182 042B                            l1158 0594                            l1086 032C  
                          l1094 022E                            l2310 0424                            l2302 04C5  
                          l1183 0438                            l1175 05B0                            l1159 0599  
                          l1087 0332                            l1079 02FC                            l1095 0228  
                          l2303 04DB                            l1184 0446                            l1176 05B0  
                          l1088 0333                            l1096 0228                            l2304 04DB  
                          l1185 0455                            l1169 0633                            l1177 05B5  
                          l1089 0333                            l1097 022D                            l1186 0455  
                          l1178 05C1                            l1098 027F                            l1099 023D  
                          l2307 0424                            l2260 068C                            l2309 0406  
                          l2263 06E8                            l2281 009F                            l2290 009C  
                          l2282 0033                            l2266 06D4                            l2259 068C  
                          l2275 066F                            l2283 009E                            l2291 009B  
                          l2284 0046                            l2292 009F                            l2285 009D  
                          l2278 06CF                            l2286 0083                            l2287 0076  
                          l2288 0075                            l2289 0082                   ??_Mcu_Initial 0055  
                          l4470 0481                            l4471 0483                            l5600 01F7  
                          l4480 00D3                            l4472 0484                            l5601 01BF  
                          l4481 0120                            l4473 0484                            l5602 01DA  
                          l4482 011F                            l5603 0220                            l4483 00F8  
                          l5604 0201                            l4476 067E                            l5700 01A0  
                          l4484 011E                            l4468 0463                            l5605 021B  
                          l5701 0178                            l4485 011D                            l4469 0482  
                          l5606 0220                            l5702 0199                            l4486 0120  
                          l5703 0179                            l4479 00D4                            l5704 0179  
                          l5705 017D                            l5562 0602                            l5706 01A0  
                          l8301 01B7                            l8231 0554                            l8303 01BE  
                          l8311 01DA                            l5583 06BD                            l5559 062A  
                          l5568 0660                            l5576 06ED                            l8241 0564  
                          l8233 0559                            l8321 0210                            l8313 01F5  
                          l8305 01BF                            l5593 0386                            l5586 05ED  
                          l5594 036E                            l8235 055D                            l8227 054B  
                          l8251 0510                            l8243 0503                            l8323 0214  
                          l8315 01F9                            l8307 01CF                            l5691 016D  
                          l5595 0382                            l5692 013E                            l5596 0386  
                          l8237 055F                            l8229 054D                            l8253 0514  
                          l8245 0505                            l8261 0425                            l8317 0200  
                          l8325 021B                            l8309 01D3                            l5693 0163  
                          l8501 013E                            l5694 014B                            l8239 0560  
                          l8255 0516                            l8247 050C                            l8271 0446  
                          l8263 042B                            l8319 0201                            l5599 01F8  
                          l8327 06B6                            l8511 0170                            l5695 014B  
                          l8503 0149                            l5696 0150                            l8257 051B  
                          l8249 050E                            l8265 042D                            l8329 06B7  
                          l8521 0192                            l8513 0177                            l8505 0158  
                          l5697 0152                            l8601 0367                            l5698 0152  
                          l8259 0520                            l8267 0437                            l8283 0681  
                          l8451 0675                            l8515 017E                            l8523 0199  
                          l8507 015D                            l5699 0158                            l8531 063B  
                          l8603 0377                            l8611 02F7                            l8269 0438  
                          l8285 0687                            l8293 01A3                            l8453 067A  
                          l8461 05FE                            l8517 018B                            l8509 0165  
                          l8525 062D                            l8541 05BD                            l8533 05A9  
                          l8605 037D                            l8621 030F                            l8613 0301  
                          l8701 04F6                            l8287 06CA                            l8295 01A7  
                          l8463 0600                            l8455 05EE                            l8471 065F  
                          l8519 018D                            l8527 062E                            l8535 05AA  
                          l8543 0663                            l8551 0392                            l8607 0382  
                          l8631 0338                            l8623 0317                            l8615 0304  
                          l8703 04FB                            l8711 06D5                            _AHEN 10B9  
                          l8297 01B0                            l8449 0670                            l8457 05F0  
                          l8465 0651                            l8473 06E9                            l8481 05E8  
                          l8529 0638                            l8537 05B5                            l8545 0667  
                          l8553 039B                            l8561 058E                            l8633 0340  
                          l8625 031A                            l8617 0309                            l8609 02F5  
                          l8641 0232                            l8705 06DF                            l8721 0417  
                          l8713 03F3                            l8801 00DE                            l8299 01B6  
                          l8459 05F2                            l8467 065C                            l8483 05E9  
                          l8475 05D8                            l8491 0123                            l8539 05BB  
                          l8555 03A4                            l8547 0387                            l8571 05A4  
                          l8563 058F                            l8627 0320                            l8619 030C  
                          l8651 024D                            l8643 0237                            l8635 0221  
                          l8707 06DA                            l8723 041B                            l8715 03F7  
                          l8731 0020                            l8811 0102                            l8803 00EC  
                          l8469 065E                            l8485 05EB                            l8477 05E6  
                          l8493 012E                            l8557 03A6                            l8549 038B  
                          l8565 0599                            l8573 06E4                            l8581 061F  
                          l8629 0327                            l8661 0267                            l8653 024F  
                          l8645 0238                            l8637 0227                            l8709 068D  
                          l8725 041F                            l8717 03FE                            l8741 003E  
                          l8733 0027                            l8813 010B                            l8805 00F4  
                          l8821 045C                            l8487 05EC                            l8479 05E7  
                          l8495 0133                            l8559 03B0                            l8567 059C  
                          l8583 0622                            l8575 0618                            l8591 034C  
                          l8671 027C                            l8663 026A                            l8655 0252  
                          l8647 0242                            l8639 022E                            l8719 0406  
                          l8727 05C2                            l8751 0058                            l8743 0041  
                          l8735 002E                            l8815 0116                            l8807 00F7  
                          l8831 0472                            l8823 045F                            l8497 0136  
                          l8489 0121                            l8569 05A1                            l8585 0623  
                          l8577 061B                            l8593 0352                            l8665 026F  
                          l8657 025B                            l8649 0248                            l8673 027F  
                          l8681 048F                            l8753 0061                            l8761 0083  
                          l8745 0046                            l8737 0033                            l8729 001C  
                          l8809 00F8                            l8833 047A                            l8825 0463  
                          l8817 0456                            l8499 013D                            l8587 0626  
                          l8579 061E                            l8595 0355                            l8675 0287  
                          l8667 0277                            l8659 0260                            l8683 0490  
                          l8691 04DC                            l8763 008A                            l8755 006B  
                          l8747 004D                            l8739 003A                            l8771 04B7  
                          l8827 046B                            l8819 0459                            l8597 0357  
                          l8589 0342                            l8669 0278                            l8685 04A0  
                          l8677 0486                            l8693 04DE                            l8765 008E  
                          l8757 0076                            l8749 0051                            l8781 04CE  
                          l8773 04BB                            l8829 046F                            l8599 0361  
                          l8687 04A8                            l8679 0488                            l8695 04E5  
                          l8767 0092                            l8759 007E                            l8783 04D2  
                          l8775 04C0                            l8791 00A8                            l8689 04AD  
                          l8697 04E6                            l8769 0096                            l8785 04D6  
                          l8777 04C5                            l8793 00B1                            l8699 04EE  
                          l8779 04CD                            l8787 06D0                            l8795 00BF  
                          l8797 00CB                            l8789 00A0                            l8799 00D4  
                          _DHEN 10B8                            _LATA 010C                            _LATB 010D  
               __end_of_INT_ISR 0651                            _LATC 010E                            u5000 017D  
                          u5001 017C                            u5010 0198                            u5011 0197  
                          u5020 0637                            u5100 0300                            u5021 0636  
                          u5101 02FF                            u5030 05B4                            u5110 0326  
                          u5031 05B3                            u5111 0325                            u5040 03AF  
                          u5120 0331                            u5200 048E                            u5041 03AE  
                          u5121 0330                            u5201 048D                            u5050 03B9  
                          u5130 0337                            u5210 04B3                            u5051 03B8  
                          u5131 0336                            u5211 04B2                            u5060 0598  
                          u5140 0226                            u5220 04E4                            u5300 0058  
                          u5061 0597                            u5141 0225                            u5221 04E3  
                          u5301 0057                            u5070 034C                            u5150 022C  
                          u5230 0501                            u5310 006B                            u5071 034B  
                          u5151 022B                            u5231 0500                            u5311 006A  
                          u4600 0436                            u5080 0361                            u5160 0237  
                          u5240 03FE                            u5320 008A                            u5400 047A  
                          u4601 0435                            u5081 0360                            u5241 03FD  
                          u5321 0089                            u5401 0479                            u4610 0445  
                          u5090 0377                            u5170 0241                            u5250 0405  
                          u5330 04C0                            u4611 0444                            u5091 0376  
                          u5171 0240                            u5251 0404                            _PEIE 005E  
                          u4540 0553                            u4620 0454                            u4700 021A  
                          u5180 0266                            u5260 0027                            u5340 00A8  
                          u4541 0552                            u4621 0453                            u4701 0219  
                          u5181 0265                            u5261 0026                            u5341 00A7  
                          _INTE 005C                            u4550 0559                            u4710 06BC  
                          u5190 027C                            u5270 002E                            u5350 00BF  
                          _INTF 0059                            u4551 0558                            u4711 06BA  
                          u5191 027B                            u5271 002D                            u5351 00BE  
                          u4560 056A                            u4640 0687                            u5280 003A  
                          u5360 00EC                            u4561 0569                            u4625 0450  
                          u4641 0686                            u5281 0039                            u5361 00EB  
                          u4570 050B                            u4650 01A7                            u5290 004D  
                          u5370 0102                            u4571 050A                            u5291 004C  
                          u5371 0101                            u5355 00BB                            u4580 0514  
                          u4660 01B0                            u4724 06BD                            u5380 0116  
                          _RCEN 10B3                            u4581 0513                            u4661 01AF  
                          u5381 0115                            u5365 00E8                            u4590 0526  
                          u4670 01BD                            u5390 046B                            u4591 0525  
                          u4671 01BC                            u5391 046A                            u4680 01D9  
                          u4681 01D8                            u4690 01FF                            u4691 01FE  
                          u4940 0133                            u4941 0132                            u4950 013C  
                          u4951 013B                            u4960 0150                            u4961 014F  
                          u4970 0157                            u4971 0156                            u4980 0163  
                          u4981 0162                            u4990 0176                            u4991 0175  
                          _RFSW 0077                 __end_of_INT_Set 06EE                            _RSSI 0039  
                          _R_nW 10A2                            _main 0456                 __end_of_RF_Main 06D5  
              __end_of_I2C_Main 0387                            fsr0h 0005                            fsr1h 0007  
                          fsr0l 0004                            indf0 0000                            indf1 0001  
                          fsr1l 0006                            btemp 007E   __size_of_setRF_Initialization 0006  
                          start 0017                   _RfPointSelect 067F                           ??_ISR 0075  
                         ?_main 0071                           _ACKEN 10B4                           _T1CON 0018  
 __size_of_CC2500_FrequencyCabr 000D                           _TMR1H 0017                           _TMR1L 0016  
                         _PORTA 000C                           _PORTB 000D                           _PORTC 000E  
                         _TRISA 008C                           _TRISB 008D                           _TRISC 008E  
                         _SSPIE 048B                           _SSPIF 008B                           _WPUB0 1068  
                         _SSPOV 10AE                           _TMain 005D                           _MainT 00A0  
              __end_of_TMR1_ISR 03F1    __size_of_CC2500_WriteCommand 0013                __end_of_TMR1_Set 0661  
   __size_of_CC2500_ClearRXFIFO 0005     __size_of_CC2500_ClearTXFIFO 0005             CC2500_RxData@loop_f 0059  
                __pbitbssCOMMON 0380                ?_CC2500_ReadByte 0071                           status 0003  
                         wtemp0 007E               ?_CC2500_SIDLEMode 0071      __size_of_RF_Initialization 0005  
                ?_RfPointSelect 0071             __end_of_Mcu_Initial 062B              ??_CC2500_SIDLEMode 0058  
              ?_CC2500_PowerRST 0071                    __end_of_main 0486                       ??_I2C_ISR 0071  
              ?_CC2500_WriteREG 0056                       ??_I2C_Set 0054                          ??_main 005D  
                    _Receive_GO 0381                      _Receive_OK 0382                          ?_MainT 0071  
                     ??_INT_ISR 0075                       ??_INT_Set 0054               i1RfPointSelect@rf 0072  
                     ??_RF_Main 005C                  setRF_Enable@rf 005A                          _ANSELA 018C  
                        _ANSELB 018D                          _ANSELC 018E                          i1l2260 06B3  
                        i1l2272 06A6                          i1l2259 06B3                          i1l5571 03F0  
                        i1l5572 03EF                          i1l5580 0650                          i1l5573 03F0  
                        i1l5565 0013                          i1l5590 0617                          i1l7611 069F  
                        i1l5579 0650                          i1l5589 0617                          i1l7609 069B  
                        i1l7821 03C6                          i1l7813 0008                          i1l7823 03CA  
                        i1l7831 063E                          i1l7815 000A                          i1l7825 03CB  
                        i1l7817 03BC                          i1l7841 0608                          i1l7913 06A8  
                        i1l7833 0642                          i1l7827 03D4                          i1l7819 03C1  
                        i1l7843 060D                          i1l7915 06AE                          i1l7835 0646  
                        i1l7829 03E2                          i1l7845 060F                          i1l7837 0648  
                        i1l7839 0603                          u414_20 06AE                          u414_21 06AD  
                        u371_20 03C1                          u371_21 03C0                          u372_20 03C6  
                        u372_21 03C5                          u373_20 03E2                          u373_21 03E1  
                        u373_25 03DE                          u374_20 0642                          u374_21 0641  
                        u375_20 0646                          u375_21 0645                          u376_20 0608  
                        u376_21 0607                          u377_20 060D                          u377_21 060C  
                        _OSCCON 0099                          _TMR1IE 0488                          _TMR1IF 0088  
                        _IO_Set 05EE                          _SSPADD 0212                          _SSPBUF 0211  
            DelayTime_1us@count 0054                      _VarProduct 00A0  __size_of_CC2500_PowerOnInitial 0016  
 __end_of_CC2500_PowerOnInitial 05D8                          _VarI2C 0120                          _Timer1 0078  
               i1_RfPointSelect 06A7                          _r_data 003E                          _s_data 003F  
                        clrloop 06BF                       ?_I2C_Main 0071                ??_setRF_RxStatus 0057  
                 ?_setRF_Enable 0059                     _Mcu_Initial 0618     __size_of_CC2500_InitPATable 0027  
           CC2500_TxData@loop_e 0059                 ??_RfPointSelect 0054                   __end_of_MainT 0121  
                __pcstackCOMMON 0071                    __pidataBANK1 056C         __size_of_I2C_Slave_Mode 0080  
                     ?_TMR1_ISR 0071                       ?_TMR1_Set 0071        __size_of_setRF_ReceiveGO 000D  
                    ??_I2C_Main 0058               ?_CC2500_WriteByte 0071                         ??_MainT 005B  
                ??_setRF_Enable 005A              ??_CC2500_WriteByte 0054                      __pbssBANK0 0020  
                    __pbssBANK2 0120                         ?_IO_Set 0071                      __pnvCOMMON 0079  
                DelayTime_1us@i 0056                  DelayTime_1us@j 0058         __end_ofi1_RfPointSelect 06B4  
            __size_of_setINT_GO 000A                      __pmaintext 0456             _CC2500_WriteCommand 062B  
                    ??_TMR1_ISR 0071                      ??_TMR1_Set 0054                      __pintentry 0004  
                       _I2C_ISR 0603                      __ptext1320 068D                      __ptext1321 06DA  
                    __ptext1313 00A0                      __ptext1330 058C                      __ptext1322 06DF  
                    __ptext1314 06D0                      __ptext1331 0387                      __ptext1323 04DC  
                    __ptext1315 04B5                      __ptext1340 0670                      __ptext1332 0661  
                    __ptext1324 0486                      __ptext1316 001A                      __ptext1341 06B4  
                    __ptext1333 05A7                      __ptext1325 0221                      __ptext1317 05C2  
                    __ptext1350 069A                      __ptext1342 01A1                      __ptext1334 062B  
                    __ptext1326 02F5                      __ptext1318 03F1                      __ptext1351 06A7  
                    __ptext1343 06CA                      __ptext1335 0121                      __ptext1327 0342  
                    __ptext1319 06D5                      __ptext1352 0603                      __ptext1344 067F  
                    __ptext1336 05D8                      __ptext1328 0618                      __ptext1353 03BC  
                    __ptext1345 0425                      __ptext1337 06E9                      __ptext1329 06E4  
                    __ptext1354 0000                      __ptext1346 0503                      __ptext1338 0651  
                    __ptext1347 054B                      __ptext1339 05EE                      __ptext1349 063E  
                       _ACKSTAT 10B6                         _I2C_Set 05D8          __size_of_DelayTime_1us 0031  
         __end_of_MainT_Initial 067F                    I2C_SetData@i 0057                   ??_I2C_SetData 0054  
  __end_of_setRF_Initialization 06D0                         _INT_ISR 063E                         _INT_Set 06E9  
          ?_CC2500_WriteCommand 0071          __size_of_CC2500_RxData 006D          __size_of_CC2500_TxData 004D  
                       _RF_Data 0020                         _SSPCON1 0215                         _SSPCON2 0216  
                       _RF_Main 06D0                         _SSPSTAT 0214                      __stringtab 028E  
  __end_of_CC2500_FrequencyCabr 069A                 __size_of_IO_Set 0015        _CC2500_registers_address 028F  
                RF_RxDisable@rf 0058                         _Product 0079       __size_of_CC2500_SIDLEMode 0005  
                  __size_of_ISR 0013                      _setRF_Main 001A              I2C_SetData@command 0056  
             __end_of_setINT_GO 06BE           ??_CC2500_WriteCommand 0056               ??_setRF_ReceiveGO 0074  
    __end_of_CC2500_ClearRXFIFO 06DF      __end_of_CC2500_ClearTXFIFO 06E4             __end_of_I2C_SetData 0221  
          end_of_initialization 0548               _CC2500_InitSetREG 0486                   _DelayTime_1us 0425  
                       init_ram 06C4              ?_CC2500_InitSetREG 0071                         initloop 06C5  
         CC2500_ReadByte@loop_b 0055               _CC2500_ReadStatus 05A7                   _CC2500_Enable 0380  
              ?i1_RfPointSelect 0071              ?_CC2500_ReadStatus 0071        __size_of_CC2500_ReadByte 0025  
                 _CC2500_RxData 0221                   _CC2500_TxData 02F5             ??_CC2500_InitSetREG 0059  
          __end_of_setRF_Enable 04DC                  _I2C_Slave_Mode 0121             ??_CC2500_ReadStatus 0056  
        setRF_Initialization@rf 0071         CC2500_InitSetREG@loop_c 005C        __size_of_CC2500_PowerRST 0035  
      __size_of_CC2500_WriteREG 001B               __size_of_I2C_Main 0045       __end_of_CC2500_InitSetREG 04B5  
                ?_DelayTime_1us 0054                    ?_Mcu_Initial 0071       __end_of_CC2500_ReadStatus 05C2  
                 ?_RF_RxDisable 0071                  __end_of_IO_Set 0603            _setRF_Initialization 06CA  
        __end_of_I2C_Slave_Mode 01A1                  ?_CC2500_RxData 0071                  ?_CC2500_TxData 0071  
         _CC2500_PowerOnInitial 05C2                    setRF_Main@rf 005B               __size_of_TMR1_ISR 0035  
             __size_of_TMR1_Set 0010                     _I2C_SetData 01A1            _CC2500_FrequencyCabr 068D  
                   ?_setRF_Main 0071             start_initialization 0528                     __end_of_ISR 0017  
    __end_of_CC2500_InitPATable 0503                  ??_RF_RxDisable 0058                 RfPointSelect@rf 0055  
                      ??_IO_Set 0054           ?_setRF_Initialization 0071           __end_of_RfPointSelect 068D  
     __size_of_CC2500_WriteByte 0021                       _VarTimer1 004F                 ?_I2C_Slave_Mode 0071  
                     _Rx_Length 003A                       _Tx_Length 003C                     __pdataBANK1 00A0  
                      ?_I2C_ISR 0071                        ?_I2C_Set 0071               ??_CC2500_ReadByte 0054  
              _CC2500_SIDLEMode 06D5           ?_CC2500_FrequencyCabr 0071                setINT_GO@command 0054  
                   __pbssCOMMON 0076                        ?_INT_ISR 0071             setRF_Enable@command 0059  
                 __pcstackBANK0 0054                        ?_INT_Set 0071                 ??_DelayTime_1us 0056  
    __size_of_CC2500_InitSetREG 002F               ??_CC2500_PowerRST 005A                        ?_RF_Main 0071  
    __size_of_CC2500_ReadStatus 001B               ??_CC2500_WriteREG 0057           CC2500_WriteREG@w_addr 0058  
         __size_of_setRF_Enable 0027                 ??_CC2500_RxData 0058         __size_of_setRF_RxStatus 000F  
               ??_CC2500_TxData 0058                       __pnvBANK0 005D          ?_CC2500_PowerOnInitial 0071  
           __size_of_setRF_Main 0086                 _setRF_ReceiveGO 069A                       __pstrings 028E  
  CC2500_ReadStatus@status_addr 0057                        _I2C_Main 0342          CC2500_WriteByte@loop_a 0055  
                __size_of_MainT 0081                       _r_address 003D                    _setRF_Enable 04B5  
                     _setINT_GO 06B4          ??_setRF_Initialization 0054               _CC2500_rfSettings 02BE  
        __size_of_MainT_Initial 000F            __size_of_Mcu_Initial 0013        CC2500_InitPATable@loop_d 005B  
            _CC2500_ClearRXFIFO 06DA              _CC2500_ClearTXFIFO 06DF          setRF_ReceiveGO@command 0073  
                      _TMR1_ISR 03BC          CC2500_InitSetREG@temp1 005A          CC2500_InitSetREG@temp2 005B  
             setRF_ReceiveGO@rf 0074                        _TMR1_Set 0651             ?_CC2500_ClearRXFIFO 0071  
           ?_CC2500_ClearTXFIFO 0071                        _RF_Count 0035            __end_of_RF_RxDisable 0425  
   __end_of_CC2500_WriteCommand 063E          ??_CC2500_FrequencyCabr 005A                __size_of_I2C_ISR 0015  
              __size_of_I2C_Set 0016                __size_of_INT_ISR 0013                __size_of_INT_Set 0005  
                    ?_setINT_GO 0071            ??_CC2500_ClearRXFIFO 0058            ??_CC2500_ClearTXFIFO 0058  
              __size_of_RF_Main 0005                _CC2500_WriteByte 054B                        _VarTMain 0040  
       __end_of_setRF_ReceiveGO 06A7                        _RxStatus 0383                        _TxStatus 0386  
      __size_ofi1_RfPointSelect 000D                   _MainT_Initial 0670                    ?_I2C_SetData 0071  
                  ??_setRF_Main 005A            CC2500_WriteREG@value 0056                ??_I2C_Slave_Mode 0054  
                 __size_of_main 0030        __end_of_CC2500_SIDLEMode 06DA                  _setRF_RxStatus 0661  
    CC2500_WriteCommand@command 0057                 _CC2500_ReadByte 0503                        clear_ram 06BE  
            _CC2500_InitPATable 04DC              __end_of_setRF_Main 00A0            _CC2500_patable_vaule 02ED  
           ?_CC2500_InitPATable 0071                  ?_MainT_Initial 0071                 _CC2500_PowerRST 0387  
         setRF_RxStatus@command 0056                 _CC2500_WriteREG 058C                   _Transceive_GO 0384  
                 _Transceive_OK 0385                     ??_setINT_GO 0054                        intlevel1 0000  
          ??_CC2500_InitPATable 0059          __end_of_setRF_RxStatus 0670         ??_CC2500_PowerOnInitial 005D  
              ?_setRF_ReceiveGO 0073          CC2500_InitPATable@temp 005A           __size_of_RF_RxDisable 0034  
             _RF_Initialization 06E4              ?_RF_Initialization 0071                      _SPI0Buffer 003B  
           ??_RF_Initialization 0055                 I2C_Slave_Mode@i 0056          __size_of_RfPointSelect 000E  
             ??i1_RfPointSelect 0071           __end_of_DelayTime_1us 0456         __end_of_CC2500_ReadByte 0528  
               ?_setRF_RxStatus 0056                    _RF_RxDisable 03F1       __end_of_RF_Initialization 06E9  
              setRF_RxStatus@rf 0057           __end_of_CC2500_RxData 028E           __end_of_CC2500_TxData 0342  
       __end_of_CC2500_PowerRST 03BC  
