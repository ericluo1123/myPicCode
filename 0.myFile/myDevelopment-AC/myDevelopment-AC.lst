

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Sep 24 14:00:49 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1516
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 14 "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 14 "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
    51  8007  FFE4               	dw 0xFFFC & 0xFFE7 ;#
    52                           # 15 "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 15 "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
    55  8008  FFFE               	dw 0xFFFF & 0xFFFE ;#
    56                           	FNCALL	_main,_MainT_Initial
    57                           	FNCALL	_main,_Mcu_Initialization
    58                           	FNCALL	_main,_SegmentDisplay_Initial
    59                           	FNCALL	_main,_MainT
    60                           	FNCALL	_main,_I2C_Main
    61                           	FNCALL	_main,_UART_Main
    62                           	FNCALL	_main,_SegmentDisplay_Main
    63                           	FNCALL	_UART_Main,_UART_Receive
    64                           	FNCALL	_UART_Main,_setSegmentDisplayNumber
    65                           	FNCALL	_UART_Main,_UART_Transmit
    66                           	FNCALL	_UART_Transmit,_printf
    67                           	FNCALL	_printf,_putch
    68                           	FNCALL	_printf,___lwdiv
    69                           	FNCALL	_printf,___lwmod
    70                           	FNCALL	_setSegmentDisplayNumber,___awdiv
    71                           	FNCALL	_setSegmentDisplayNumber,___awmod
    72                           	FNCALL	_I2C_Main,_I2C_Master_Reception
    73                           	FNCALL	_I2C_Main,_I2C_Master_Transmission
    74                           	FNCALL	_Mcu_Initialization,_IO_Set
    75                           	FNCALL	_Mcu_Initialization,_TMR1_Set
    76                           	FNCALL	_Mcu_Initialization,_I2C_Set
    77                           	FNCALL	_Mcu_Initialization,_UART_Set
    78                           	FNROOT	_main
    79                           	FNCALL	_ISR,_TMR1_ISR
    80                           	FNCALL	_ISR,_UART_ISR
    81                           	FNCALL	_UART_ISR,i1_setSegmentDisplayNumber
    82                           	FNCALL	i1_setSegmentDisplayNumber,i1___awdiv
    83                           	FNCALL	i1_setSegmentDisplayNumber,i1___awmod
    84                           	FNCALL	intlevel1,_ISR
    85                           	global	intlevel1
    86                           	FNROOT	intlevel1
    87                           	global	_VarProduct
    88                           	global	_VarSegment
    89                           psect	idataBANK1,class=CODE,space=0,delta=2
    90                           global __pidataBANK1
    91  0F4B                     __pidataBANK1:
    92                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\0.myFile\myDevelopment-AH\Release\my
                                 Development-A.h"
    93                           	line	245
    94                           
    95                           ;initializer for _VarProduct
    96  0F4B  3463               	retlw	063h
    97  0F4C  3402               	retlw	02h
    98  0F4D  3400               	retlw	0
    99  0F4E  3400               	retlw	0
   100  0F4F  3400               	retlw	0
   101  0F50  3400               	retlw	0
   102  0F51  3400               	retlw	0
   103  0F52  3400               	retlw	0
   104  0F53  3400               	retlw	0
   105  0F54  3400               	retlw	0
   106  0F55  3400               	retlw	0
   107  0F56  3400               	retlw	0
   108  0F57  34FF               	retlw	0FFh
   109  0F58  34FF               	retlw	0FFh
   110  0F59  34FF               	retlw	0FFh
   111  0F5A  3400               	retlw	0
   112  0F5B  3400               	retlw	0
   113  0F5C  3400               	retlw	0
   114  0F5D  3400               	retlw	0
   115  0F5E  3400               	retlw	0
   116  0F5F  3400               	retlw	0
   117  0F60  3400               	retlw	0
   118  0F61  3400               	retlw	0
   119  0F62  3400               	retlw	0
   120  0F63  3400               	retlw	0
   121  0F64  3400               	retlw	0
   122  0F65  3400               	retlw	0
   123  0F66  3400               	retlw	0
   124  0F67  3400               	retlw	0
   125  0F68  3400               	retlw	0
   126  0F69  3400               	retlw	0
   127  0F6A  3400               	retlw	0
   128                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Header_File\SegmentDisplay_A2.h"
   129                           	line	69
   130                           
   131                           ;initializer for _VarSegment
   132  0F6B  34C0               	retlw	0C0h
   133  0F6C  34F9               	retlw	0F9h
   134  0F6D  34A4               	retlw	0A4h
   135  0F6E  34B0               	retlw	0B0h
   136  0F6F  3499               	retlw	099h
   137  0F70  3492               	retlw	092h
   138  0F71  3482               	retlw	082h
   139  0F72  34D8               	retlw	0D8h
   140  0F73  3480               	retlw	080h
   141  0F74  3490               	retlw	090h
   142  0F75  3488               	retlw	088h
   143  0F76  3483               	retlw	083h
   144  0F77  34A7               	retlw	0A7h
   145  0F78  34A1               	retlw	0A1h
   146  0F79  3486               	retlw	086h
   147  0F7A  348E               	retlw	08Eh
   148  0F7B  34BF               	retlw	0BFh
   149  0F7C  3400               	retlw	0
   150  0F7D  3400               	retlw	0
   151  0F7E  3400               	retlw	0
   152  0F7F  3400               	retlw	0
   153  0F80  3400               	retlw	0
   154  0F81  3400               	retlw	0
   155  0F82  3400               	retlw	0
   156  0F83  3400               	retlw	0
   157  0F84  3400               	retlw	0
   158                           	global	_dpowers
   159                           psect	strings,class=STRING,delta=2
   160                           global __pstrings
   161  0800                     __pstrings:
   162                           	global    __stringtab
   163  0800                     __stringtab:
   164  0800  3400               	retlw	0
   165                           psect	strings
   166                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   167                           	line	350
   168  0801                     _dpowers:
   169  0801  3401               	retlw	01h
   170  0802  3400               	retlw	0
   171                           
   172  0803  340A               	retlw	0Ah
   173  0804  3400               	retlw	0
   174                           
   175  0805  3464               	retlw	064h
   176  0806  3400               	retlw	0
   177                           
   178  0807  34E8               	retlw	0E8h
   179  0808  3403               	retlw	03h
   180                           
   181  0809  3410               	retlw	010h
   182  080A  3427               	retlw	027h
   183                           
   184                           	global	_dpowers
   185                           	global	_VarTMain
   186                           	global	_VarTimer1
   187                           	global	_VarI2C
   188                           	global	_VarUart
   189                           	global	_I2C
   190                           psect	nvBANK0,class=BANK0,space=1
   191                           global __pnvBANK0
   192  0056                     __pnvBANK0:
   193  0056                     _I2C:
   194  0056                            ds      1
   195                           
   196                           	global	_Product
   197  0057                     _Product:
   198  0057                            ds      1
   199                           
   200                           	global	_Segment
   201  0058                     _Segment:
   202  0058                            ds      1
   203                           
   204                           	global	_TMain
   205  0059                     _TMain:
   206  0059                            ds      1
   207                           
   208                           	global	_Timer1
   209  005A                     _Timer1:
   210  005A                            ds      1
   211                           
   212                           	global	_UART
   213  005B                     _UART:
   214  005B                            ds      1
   215                           
   216                           	global	_PORTA
   217  000C                     _PORTA	set	12
   218                           	global	_PORTB
   219  000D                     _PORTB	set	13
   220                           	global	_PORTC
   221  000E                     _PORTC	set	14
   222                           	global	_T1CON
   223  0018                     _T1CON	set	24
   224                           	global	_TMR1H
   225  0017                     _TMR1H	set	23
   226                           	global	_TMR1L
   227  0016                     _TMR1L	set	22
   228                           	global	_GIE
   229  005F                     _GIE	set	95
   230                           	global	_PEIE
   231  005E                     _PEIE	set	94
   232                           	global	_RA1
   233  0061                     _RA1	set	97
   234                           	global	_RA2
   235  0062                     _RA2	set	98
   236                           	global	_RA4
   237  0064                     _RA4	set	100
   238                           	global	_RA5
   239  0065                     _RA5	set	101
   240                           	global	_RA6
   241  0066                     _RA6	set	102
   242                           	global	_RA7
   243  0067                     _RA7	set	103
   244                           	global	_RC0
   245  0070                     _RC0	set	112
   246                           	global	_RCIF
   247  008D                     _RCIF	set	141
   248                           	global	_SSPIF
   249  008B                     _SSPIF	set	139
   250                           	global	_TMR1IF
   251  0088                     _TMR1IF	set	136
   252                           	global	_TXIF
   253  008C                     _TXIF	set	140
   254                           	global	_OSCCON
   255  0099                     _OSCCON	set	153
   256                           	global	_TRISA
   257  008C                     _TRISA	set	140
   258                           	global	_TRISB
   259  008D                     _TRISB	set	141
   260                           	global	_TRISC
   261  008E                     _TRISC	set	142
   262                           	global	_RCIE
   263  048D                     _RCIE	set	1165
   264                           	global	_SSPIE
   265  048B                     _SSPIE	set	1163
   266                           	global	_TMR1IE
   267  0488                     _TMR1IE	set	1160
   268                           	global	_TRISC6
   269  0476                     _TRISC6	set	1142
   270                           	global	_TRISC7
   271  0477                     _TRISC7	set	1143
   272                           	global	_TXIE
   273  048C                     _TXIE	set	1164
   274                           	global	_LATA
   275  010C                     _LATA	set	268
   276                           	global	_LATB
   277  010D                     _LATB	set	269
   278                           	global	_LATC
   279  010E                     _LATC	set	270
   280                           	global	_ANSELA
   281  018C                     _ANSELA	set	396
   282                           	global	_ANSELB
   283  018D                     _ANSELB	set	397
   284                           	global	_ANSELC
   285  018E                     _ANSELC	set	398
   286                           	global	_RCREG
   287  0199                     _RCREG	set	409
   288                           	global	_RCSTA
   289  019D                     _RCSTA	set	413
   290                           	global	_SPBRG
   291  019B                     _SPBRG	set	411
   292                           	global	_SPBRGH
   293  019C                     _SPBRGH	set	412
   294                           	global	_TXREG
   295  019A                     _TXREG	set	410
   296                           	global	_TXSTA
   297  019E                     _TXSTA	set	414
   298                           	global	_BRG16
   299  0CFB                     _BRG16	set	3323
   300                           	global	_RCIDL
   301  0CFE                     _RCIDL	set	3326
   302                           	global	_RX9
   303  0CEE                     _RX9	set	3310
   304                           	global	_TX9
   305  0CF6                     _TX9	set	3318
   306                           	global	_SSPADD
   307  0212                     _SSPADD	set	530
   308                           	global	_SSPBUF
   309  0211                     _SSPBUF	set	529
   310                           	global	_SSPCON1
   311  0215                     _SSPCON1	set	533
   312                           	global	_SSPCON2
   313  0216                     _SSPCON2	set	534
   314                           	global	_SSPSTAT
   315  0214                     _SSPSTAT	set	532
   316                           	global	_ACKEN
   317  10B4                     _ACKEN	set	4276
   318                           	global	_ACKSTAT
   319  10B6                     _ACKSTAT	set	4278
   320                           	global	_BF
   321  10A0                     _BF	set	4256
   322                           	global	_CKP
   323  10AC                     _CKP	set	4268
   324                           	global	_PEN
   325  10B2                     _PEN	set	4274
   326                           	global	_RCEN
   327  10B3                     _RCEN	set	4275
   328                           	global	_R_nW
   329  10A2                     _R_nW	set	4258
   330                           	global	_SEN
   331  10B0                     _SEN	set	4272
   332                           	global	_SSPOV
   333  10AE                     _SSPOV	set	4270
   334                           psect	strings
   335                           	
   336  080B                     STR_1:	
   337  080B  3425               	retlw	37	;'%'
   338  080C  3464               	retlw	100	;'d'
   339  080D  342C               	retlw	44	;','
   340  080E  3400               	retlw	0
   341                           psect	strings
   342                           	file	"myDevelopment-AC.as"
   343                           	line	#
   344                           psect cinit,class=CODE,delta=2
   345                           global start_initialization
   346  0E56                     start_initialization:
   347                           
   348                           psect	bssBANK0,class=BANK0,space=1
   349                           global __pbssBANK0
   350  0044                     __pbssBANK0:
   351  0044                     _VarTMain:
   352  0044                            ds      15
   353                           
   354  0053                     _VarTimer1:
   355  0053                            ds      3
   356                           
   357                           psect	dataBANK1,class=BANK1,space=1
   358                           global __pdataBANK1
   359  00A0                     __pdataBANK1:
   360                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\0.myFile\myDevelopment-AH\Release\my
                                 Development-A.h"
   361                           	line	245
   362  00A0                     _VarProduct:
   363  00A0                            ds      32
   364                           
   365                           psect	dataBANK1
   366                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Header_File\SegmentDisplay_A2.h"
   367                           	line	69
   368  00C0                     _VarSegment:
   369  00C0                            ds      26
   370                           
   371                           psect	bssBANK2,class=BANK2,space=1
   372                           global __pbssBANK2
   373  0120                     __pbssBANK2:
   374  0120                     _VarI2C:
   375  0120                            ds      67
   376                           
   377                           psect	bssBANK3,class=BANK3,space=1
   378                           global __pbssBANK3
   379  01A0                     __pbssBANK3:
   380  01A0                     _VarUart:
   381  01A0                            ds      68
   382                           
   383                           psect clrtext,class=CODE,delta=2
   384                           global clear_ram
   385                           ;	Called with FSR0 containing the base address, and
   386                           ;	WREG with the size to clear
   387  0DB6                     clear_ram:
   388  0DB6  0064               	clrwdt			;clear the watchdog before getting into this loop
   389  0DB7                     clrloop:
   390  0DB7  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   391  0DB8  3101               	addfsr	0,1
   392  0DB9  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   393  0DBA  2DB7               	goto clrloop	;have we reached the end yet?
   394  0DBB  3400               	retlw	0		;all done for this memory range, return
   395                           ; Clear objects allocated to BANK0
   396                           psect cinit,class=CODE,delta=2
   397                           	global __pbssBANK0
   398  0E56  3044               	movlw	low(__pbssBANK0)
   399  0E57  0084               	movwf	fsr0l
   400  0E58  3000               	movlw	high(__pbssBANK0)
   401  0E59  0085               	movwf	fsr0h
   402  0E5A  3012               	movlw	012h
   403  0E5B  318D  25B6  318E   	fcall	clear_ram
   404                           ; Clear objects allocated to BANK2
   405                           psect cinit,class=CODE,delta=2
   406                           	global __pbssBANK2
   407  0E5E  3020               	movlw	low(__pbssBANK2)
   408  0E5F  0084               	movwf	fsr0l
   409  0E60  3001               	movlw	high(__pbssBANK2)
   410  0E61  0085               	movwf	fsr0h
   411  0E62  3043               	movlw	043h
   412  0E63  318D  25B6  318E   	fcall	clear_ram
   413                           ; Clear objects allocated to BANK3
   414                           psect cinit,class=CODE,delta=2
   415                           	global __pbssBANK3
   416  0E66  30A0               	movlw	low(__pbssBANK3)
   417  0E67  0084               	movwf	fsr0l
   418  0E68  3001               	movlw	high(__pbssBANK3)
   419  0E69  0085               	movwf	fsr0h
   420  0E6A  3044               	movlw	044h
   421  0E6B  318D  25B6  318E   	fcall	clear_ram
   422                           psect inittext,class=CODE,delta=2
   423                           global init_ram,btemp
   424  0DB0                     init_ram:
   425  0DB0  00FE               	movwf btemp,f
   426  0DB1                     initloop:
   427  0DB1  0012               	moviw fsr0++
   428  0DB2  001E               	movwi fsr1++
   429  0DB3  0BFE               	decfsz btemp
   430  0DB4  2DB1               	goto initloop
   431  0DB5  3400               	retlw 0
   432                           ; Initialize objects allocated to BANK1
   433                           	global __pidataBANK1,__pdataBANK1
   434                           psect cinit,class=CODE,delta=2
   435  0E6E  304B               	movlw low(__pidataBANK1)
   436  0E6F  0084               	movwf fsr0l
   437  0E70  308F               	movlw high(__pidataBANK1)|80h
   438  0E71  0085               	movwf fsr0h
   439  0E72  30A0               	movlw low(__pdataBANK1)
   440  0E73  0086               	movwf fsr1l
   441  0E74  3000               	movlw high(__pdataBANK1)
   442  0E75  0087               	movwf fsr1h
   443  0E76  303A               	movlw 03Ah
   444  0E77  318D  25B0  318E   	fcall init_ram
   445                           psect cinit,class=CODE,delta=2
   446                           global end_of_initialization
   447                           
   448                           ;End of C runtime variable initialization code
   449                           
   450  0E7A                     end_of_initialization:
   451  0E7A  0020               movlb 0
   452  0E7B  318E  2EAC         ljmp _main	;jump to C main() function
   453                           psect	cstackCOMMON,class=COMMON,space=1
   454                           global __pcstackCOMMON
   455  0070                     __pcstackCOMMON:
   456                           	global	?_IO_Set
   457  0070                     ?_IO_Set:	; 0 bytes @ 0x0
   458                           	global	?_TMR1_Set
   459  0070                     ?_TMR1_Set:	; 0 bytes @ 0x0
   460                           	global	?_I2C_Set
   461  0070                     ?_I2C_Set:	; 0 bytes @ 0x0
   462                           	global	?_UART_Set
   463  0070                     ?_UART_Set:	; 0 bytes @ 0x0
   464                           	global	?_TMR1_ISR
   465  0070                     ?_TMR1_ISR:	; 0 bytes @ 0x0
   466                           	global	??_TMR1_ISR
   467  0070                     ??_TMR1_ISR:	; 0 bytes @ 0x0
   468                           	global	?_UART_ISR
   469  0070                     ?_UART_ISR:	; 0 bytes @ 0x0
   470                           	global	?_I2C_Master_Reception
   471  0070                     ?_I2C_Master_Reception:	; 0 bytes @ 0x0
   472                           	global	?_I2C_Master_Transmission
   473  0070                     ?_I2C_Master_Transmission:	; 0 bytes @ 0x0
   474                           	global	?_UART_Receive
   475  0070                     ?_UART_Receive:	; 0 bytes @ 0x0
   476                           	global	?_UART_Transmit
   477  0070                     ?_UART_Transmit:	; 0 bytes @ 0x0
   478                           	global	?_MainT_Initial
   479  0070                     ?_MainT_Initial:	; 0 bytes @ 0x0
   480                           	global	?_SegmentDisplay_Initial
   481  0070                     ?_SegmentDisplay_Initial:	; 0 bytes @ 0x0
   482                           	global	?_MainT
   483  0070                     ?_MainT:	; 0 bytes @ 0x0
   484                           	global	?_SegmentDisplay_Main
   485  0070                     ?_SegmentDisplay_Main:	; 0 bytes @ 0x0
   486                           	global	?_Mcu_Initialization
   487  0070                     ?_Mcu_Initialization:	; 0 bytes @ 0x0
   488                           	global	?_ISR
   489  0070                     ?_ISR:	; 0 bytes @ 0x0
   490                           	global	?_I2C_Main
   491  0070                     ?_I2C_Main:	; 0 bytes @ 0x0
   492                           	global	?_UART_Main
   493  0070                     ?_UART_Main:	; 0 bytes @ 0x0
   494                           	global	?_putch
   495  0070                     ?_putch:	; 0 bytes @ 0x0
   496                           	global	?_main
   497  0070                     ?_main:	; 0 bytes @ 0x0
   498                           	global	?i1___awdiv
   499  0070                     ?i1___awdiv:	; 2 bytes @ 0x0
   500                           	global	?i1___awmod
   501  0070                     ?i1___awmod:	; 2 bytes @ 0x0
   502                           	global	i1___awdiv@divisor
   503  0070                     i1___awdiv@divisor:	; 2 bytes @ 0x0
   504                           	global	i1___awmod@divisor
   505  0070                     i1___awmod@divisor:	; 2 bytes @ 0x0
   506  0070                     	ds	2
   507                           	global	i1___awdiv@dividend
   508  0072                     i1___awdiv@dividend:	; 2 bytes @ 0x2
   509                           	global	i1___awmod@dividend
   510  0072                     i1___awmod@dividend:	; 2 bytes @ 0x2
   511  0072                     	ds	2
   512                           	global	??i1___awdiv
   513  0074                     ??i1___awdiv:	; 0 bytes @ 0x4
   514                           	global	??i1___awmod
   515  0074                     ??i1___awmod:	; 0 bytes @ 0x4
   516  0074                     	ds	1
   517                           	global	i1___awdiv@counter
   518  0075                     i1___awdiv@counter:	; 1 bytes @ 0x5
   519                           	global	i1___awmod@counter
   520  0075                     i1___awmod@counter:	; 1 bytes @ 0x5
   521  0075                     	ds	1
   522                           	global	i1___awdiv@sign
   523  0076                     i1___awdiv@sign:	; 1 bytes @ 0x6
   524                           	global	i1___awmod@sign
   525  0076                     i1___awmod@sign:	; 1 bytes @ 0x6
   526  0076                     	ds	1
   527                           	global	i1___awdiv@quotient
   528  0077                     i1___awdiv@quotient:	; 2 bytes @ 0x7
   529  0077                     	ds	2
   530                           	global	?i1_setSegmentDisplayNumber
   531  0079                     ?i1_setSegmentDisplayNumber:	; 0 bytes @ 0x9
   532                           	global	i1setSegmentDisplayNumber@number
   533  0079                     i1setSegmentDisplayNumber@number:	; 2 bytes @ 0x9
   534  0079                     	ds	2
   535                           	global	??i1_setSegmentDisplayNumber
   536  007B                     ??i1_setSegmentDisplayNumber:	; 0 bytes @ 0xB
   537  007B                     	ds	3
   538                           psect	cstackBANK0,class=BANK0,space=1
   539                           global __pcstackBANK0
   540  0020                     __pcstackBANK0:
   541                           	global	i1setSegmentDisplayNumber@i
   542  0020                     i1setSegmentDisplayNumber@i:	; 1 bytes @ 0x0
   543  0020                     	ds	1
   544                           	global	??_UART_ISR
   545  0021                     ??_UART_ISR:	; 0 bytes @ 0x1
   546  0021                     	ds	2
   547                           	global	??_ISR
   548  0023                     ??_ISR:	; 0 bytes @ 0x3
   549  0023                     	ds	1
   550                           	global	??_IO_Set
   551  0024                     ??_IO_Set:	; 0 bytes @ 0x4
   552                           	global	??_TMR1_Set
   553  0024                     ??_TMR1_Set:	; 0 bytes @ 0x4
   554                           	global	??_I2C_Set
   555  0024                     ??_I2C_Set:	; 0 bytes @ 0x4
   556                           	global	??_UART_Set
   557  0024                     ??_UART_Set:	; 0 bytes @ 0x4
   558                           	global	??_I2C_Master_Reception
   559  0024                     ??_I2C_Master_Reception:	; 0 bytes @ 0x4
   560                           	global	??_I2C_Master_Transmission
   561  0024                     ??_I2C_Master_Transmission:	; 0 bytes @ 0x4
   562                           	global	??_UART_Receive
   563  0024                     ??_UART_Receive:	; 0 bytes @ 0x4
   564                           	global	??_MainT_Initial
   565  0024                     ??_MainT_Initial:	; 0 bytes @ 0x4
   566                           	global	??_SegmentDisplay_Initial
   567  0024                     ??_SegmentDisplay_Initial:	; 0 bytes @ 0x4
   568                           	global	??_MainT
   569  0024                     ??_MainT:	; 0 bytes @ 0x4
   570                           	global	??_SegmentDisplay_Main
   571  0024                     ??_SegmentDisplay_Main:	; 0 bytes @ 0x4
   572                           	global	??_putch
   573  0024                     ??_putch:	; 0 bytes @ 0x4
   574                           	global	?___lwdiv
   575  0024                     ?___lwdiv:	; 2 bytes @ 0x4
   576                           	global	?___awdiv
   577  0024                     ?___awdiv:	; 2 bytes @ 0x4
   578                           	global	?___awmod
   579  0024                     ?___awmod:	; 2 bytes @ 0x4
   580                           	global	putch@byte
   581  0024                     putch@byte:	; 1 bytes @ 0x4
   582                           	global	___lwdiv@divisor
   583  0024                     ___lwdiv@divisor:	; 2 bytes @ 0x4
   584                           	global	___awdiv@divisor
   585  0024                     ___awdiv@divisor:	; 2 bytes @ 0x4
   586                           	global	___awmod@divisor
   587  0024                     ___awmod@divisor:	; 2 bytes @ 0x4
   588  0024                     	ds	1
   589                           	global	??_Mcu_Initialization
   590  0025                     ??_Mcu_Initialization:	; 0 bytes @ 0x5
   591                           	global	I2C_Master_Transmission@i
   592  0025                     I2C_Master_Transmission@i:	; 1 bytes @ 0x5
   593  0025                     	ds	1
   594                           	global	I2C_Master_Reception@i
   595  0026                     I2C_Master_Reception@i:	; 1 bytes @ 0x6
   596                           	global	___lwdiv@dividend
   597  0026                     ___lwdiv@dividend:	; 2 bytes @ 0x6
   598                           	global	___awdiv@dividend
   599  0026                     ___awdiv@dividend:	; 2 bytes @ 0x6
   600                           	global	___awmod@dividend
   601  0026                     ___awmod@dividend:	; 2 bytes @ 0x6
   602  0026                     	ds	1
   603                           	global	??_I2C_Main
   604  0027                     ??_I2C_Main:	; 0 bytes @ 0x7
   605                           	global	UART_Receive@i
   606  0027                     UART_Receive@i:	; 1 bytes @ 0x7
   607  0027                     	ds	1
   608                           	global	??___lwdiv
   609  0028                     ??___lwdiv:	; 0 bytes @ 0x8
   610                           	global	??___awdiv
   611  0028                     ??___awdiv:	; 0 bytes @ 0x8
   612                           	global	??___awmod
   613  0028                     ??___awmod:	; 0 bytes @ 0x8
   614  0028                     	ds	1
   615                           	global	___awdiv@counter
   616  0029                     ___awdiv@counter:	; 1 bytes @ 0x9
   617                           	global	___awmod@counter
   618  0029                     ___awmod@counter:	; 1 bytes @ 0x9
   619                           	global	___lwdiv@quotient
   620  0029                     ___lwdiv@quotient:	; 2 bytes @ 0x9
   621  0029                     	ds	1
   622                           	global	I2C_Main@i
   623  002A                     I2C_Main@i:	; 1 bytes @ 0xA
   624                           	global	___awdiv@sign
   625  002A                     ___awdiv@sign:	; 1 bytes @ 0xA
   626                           	global	___awmod@sign
   627  002A                     ___awmod@sign:	; 1 bytes @ 0xA
   628  002A                     	ds	1
   629                           	global	___lwdiv@counter
   630  002B                     ___lwdiv@counter:	; 1 bytes @ 0xB
   631                           	global	___awdiv@quotient
   632  002B                     ___awdiv@quotient:	; 2 bytes @ 0xB
   633  002B                     	ds	1
   634                           	global	?___lwmod
   635  002C                     ?___lwmod:	; 2 bytes @ 0xC
   636                           	global	___lwmod@divisor
   637  002C                     ___lwmod@divisor:	; 2 bytes @ 0xC
   638  002C                     	ds	1
   639                           	global	?_setSegmentDisplayNumber
   640  002D                     ?_setSegmentDisplayNumber:	; 0 bytes @ 0xD
   641                           	global	setSegmentDisplayNumber@number
   642  002D                     setSegmentDisplayNumber@number:	; 2 bytes @ 0xD
   643  002D                     	ds	1
   644                           	global	___lwmod@dividend
   645  002E                     ___lwmod@dividend:	; 2 bytes @ 0xE
   646  002E                     	ds	1
   647                           	global	??_setSegmentDisplayNumber
   648  002F                     ??_setSegmentDisplayNumber:	; 0 bytes @ 0xF
   649  002F                     	ds	1
   650                           	global	??___lwmod
   651  0030                     ??___lwmod:	; 0 bytes @ 0x10
   652  0030                     	ds	1
   653                           	global	___lwmod@counter
   654  0031                     ___lwmod@counter:	; 1 bytes @ 0x11
   655  0031                     	ds	1
   656                           	global	?_printf
   657  0032                     ?_printf:	; 2 bytes @ 0x12
   658                           	global	setSegmentDisplayNumber@i
   659  0032                     setSegmentDisplayNumber@i:	; 1 bytes @ 0x12
   660  0032                     	ds	2
   661                           	global	??_printf
   662  0034                     ??_printf:	; 0 bytes @ 0x14
   663  0034                     	ds	2
   664                           	global	printf@ap
   665  0036                     printf@ap:	; 1 bytes @ 0x16
   666  0036                     	ds	1
   667                           	global	printf@flag
   668  0037                     printf@flag:	; 1 bytes @ 0x17
   669  0037                     	ds	1
   670                           	global	printf@f
   671  0038                     printf@f:	; 1 bytes @ 0x18
   672  0038                     	ds	1
   673                           	global	printf@prec
   674  0039                     printf@prec:	; 1 bytes @ 0x19
   675  0039                     	ds	1
   676                           	global	printf@_val
   677  003A                     printf@_val:	; 4 bytes @ 0x1A
   678  003A                     	ds	4
   679                           	global	printf@c
   680  003E                     printf@c:	; 1 bytes @ 0x1E
   681  003E                     	ds	1
   682                           	global	??_UART_Transmit
   683  003F                     ??_UART_Transmit:	; 0 bytes @ 0x1F
   684  003F                     	ds	2
   685                           	global	UART_Transmit@i
   686  0041                     UART_Transmit@i:	; 1 bytes @ 0x21
   687  0041                     	ds	1
   688                           	global	??_UART_Main
   689  0042                     ??_UART_Main:	; 0 bytes @ 0x22
   690  0042                     	ds	2
   691                           	global	??_main
   692  0044                     ??_main:	; 0 bytes @ 0x24
   693 ;;Data sizes: Strings 4, constant 10, data 58, bss 153, persistent 6 stack 0
   694 ;;Auto spaces:   Size  Autos    Used
   695 ;; COMMON          14     14      14
   696 ;; BANK0           80     36      60
   697 ;; BANK1           80      0      58
   698 ;; BANK2           80      0      67
   699 ;; BANK3           80      0      68
   700 ;; BANK4           80      0       0
   701 ;; BANK5           80      0       0
   702 ;; BANK6           16      0       0
   703                           
   704 ;;
   705 ;; Pointer list with targets:
   706                           
   707 ;; ?i1___awmod	int  size(1) Largest target is 0
   708 ;;
   709 ;; ?i1___awdiv	int  size(1) Largest target is 0
   710 ;;
   711 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   712 ;;
   713 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   714 ;;
   715 ;; ?___awmod	int  size(1) Largest target is 0
   716 ;;
   717 ;; ?___awdiv	int  size(1) Largest target is 0
   718 ;;
   719 ;; printf@f	PTR const unsigned char  size(1) Largest target is 4
   720 ;;		 -> STR_1(CODE[4]), 
   721 ;;
   722 ;; ?_printf	int  size(1) Largest target is 0
   723 ;;
   724 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   725 ;;		 -> ?_printf(BANK0[2]), 
   726 ;;
   727 ;; S6665$_cp	PTR const unsigned char  size(1) Largest target is 0
   728 ;;
   729 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   730 ;;
   731 ;; Segment	PTR struct Segment size(1) Largest target is 26
   732 ;;		 -> NULL(NULL[0]), VarSegment(BANK1[26]), 
   733 ;;
   734 ;; Product	PTR struct Product size(1) Largest target is 32
   735 ;;		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 
   736 ;;
   737 ;; UART	PTR struct UART size(1) Largest target is 68
   738 ;;		 -> NULL(NULL[0]), VarUart(BANK3[68]), 
   739 ;;
   740 ;; I2C	PTR struct I2C size(1) Largest target is 67
   741 ;;		 -> NULL(NULL[0]), VarI2C(BANK2[67]), 
   742 ;;
   743 ;; TMain	PTR struct TMain size(1) Largest target is 15
   744 ;;		 -> NULL(NULL[0]), VarTMain(BANK0[15]), 
   745 ;;
   746 ;; Timer1	PTR struct Timer1 size(1) Largest target is 3
   747 ;;		 -> NULL(NULL[0]), VarTimer1(BANK0[3]), 
   748 ;;
   749                           
   750                           
   751 ;;
   752 ;; Critical Paths under _main in COMMON
   753 ;;
   754 ;;   None.
   755 ;;
   756 ;; Critical Paths under _ISR in COMMON
   757 ;;
   758 ;;   _UART_ISR->i1_setSegmentDisplayNumber
   759 ;;   i1_setSegmentDisplayNumber->i1___awdiv
   760 ;;
   761 ;; Critical Paths under _main in BANK0
   762 ;;
   763 ;;   _main->_UART_Main
   764 ;;   _UART_Main->_UART_Transmit
   765 ;;   _UART_Transmit->_printf
   766 ;;   _printf->___lwmod
   767 ;;   _setSegmentDisplayNumber->___awdiv
   768 ;;   _I2C_Main->_I2C_Master_Reception
   769 ;;   _Mcu_Initialization->_TMR1_Set
   770 ;;   _Mcu_Initialization->_I2C_Set
   771 ;;   _Mcu_Initialization->_UART_Set
   772 ;;   ___lwmod->___lwdiv
   773 ;;
   774 ;; Critical Paths under _ISR in BANK0
   775 ;;
   776 ;;   _ISR->_UART_ISR
   777 ;;   _UART_ISR->i1_setSegmentDisplayNumber
   778 ;;
   779 ;; Critical Paths under _main in BANK1
   780 ;;
   781 ;;   None.
   782 ;;
   783 ;; Critical Paths under _ISR in BANK1
   784 ;;
   785 ;;   None.
   786 ;;
   787 ;; Critical Paths under _main in BANK2
   788 ;;
   789 ;;   None.
   790 ;;
   791 ;; Critical Paths under _ISR in BANK2
   792 ;;
   793 ;;   None.
   794 ;;
   795 ;; Critical Paths under _main in BANK3
   796 ;;
   797 ;;   None.
   798 ;;
   799 ;; Critical Paths under _ISR in BANK3
   800 ;;
   801 ;;   None.
   802 ;;
   803 ;; Critical Paths under _main in BANK4
   804 ;;
   805 ;;   None.
   806 ;;
   807 ;; Critical Paths under _ISR in BANK4
   808 ;;
   809 ;;   None.
   810 ;;
   811 ;; Critical Paths under _main in BANK5
   812 ;;
   813 ;;   None.
   814 ;;
   815 ;; Critical Paths under _ISR in BANK5
   816 ;;
   817 ;;   None.
   818 ;;
   819 ;; Critical Paths under _main in BANK6
   820 ;;
   821 ;;   None.
   822 ;;
   823 ;; Critical Paths under _ISR in BANK6
   824 ;;
   825 ;;   None.
   826                           
   827 ;;
   828 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   829 ;;
   830                           
   831 ;;
   832 ;;Call Graph Tables:
   833 ;;
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   836 ;; ---------------------------------------------------------------------------------
   837 ;; (0) _main                                                 0     0      0    2044
   838 ;;                      _MainT_Initial
   839 ;;                 _Mcu_Initialization
   840 ;;             _SegmentDisplay_Initial
   841 ;;                              _MainT
   842 ;;                           _I2C_Main
   843 ;;                          _UART_Main
   844 ;;                _SegmentDisplay_Main
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (1) _UART_Main                                            2     2      0    1818
   847 ;;                                             34 BANK0      2     2      0
   848 ;;                       _UART_Receive
   849 ;;            _setSegmentDisplayNumber
   850 ;;                      _UART_Transmit
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (2) _UART_Transmit                                        3     3      0     797
   853 ;;                                             31 BANK0      3     3      0
   854 ;;                             _printf
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (3) _printf                                              13    11      2     729
   857 ;;                                             18 BANK0     13    11      2
   858 ;;                              _putch
   859 ;;                            ___lwdiv
   860 ;;                            ___lwmod
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (2) _setSegmentDisplayNumber                              6     4      2     931
   863 ;;                                             13 BANK0      6     4      2
   864 ;;                            ___awdiv
   865 ;;                            ___awmod
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (1) _I2C_Main                                             4     4      0     226
   868 ;;                                              7 BANK0      4     4      0
   869 ;;               _I2C_Master_Reception
   870 ;;            _I2C_Master_Transmission
   871 ;; ---------------------------------------------------------------------------------
   872 ;; (1) _Mcu_Initialization                                   0     0      0       0
   873 ;;                             _IO_Set
   874 ;;                           _TMR1_Set
   875 ;;                            _I2C_Set
   876 ;;                           _UART_Set
   877 ;; ---------------------------------------------------------------------------------
   878 ;; (3) ___awmod                                              7     3      4     296
   879 ;;                                              4 BANK0      7     3      4
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (3) ___awdiv                                              9     5      4     300
   882 ;;                                              4 BANK0      9     5      4
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (4) ___lwmod                                              6     2      4     159
   885 ;;                                             12 BANK0      6     2      4
   886 ;;                            ___lwdiv (ARG)
   887 ;; ---------------------------------------------------------------------------------
   888 ;; (4) ___lwdiv                                              8     4      4     162
   889 ;;                                              4 BANK0      8     4      4
   890 ;; ---------------------------------------------------------------------------------
   891 ;; (1) _SegmentDisplay_Main                                  2     2      0       0
   892 ;;                                              4 BANK0      2     2      0
   893 ;; ---------------------------------------------------------------------------------
   894 ;; (1) _MainT                                                1     1      0       0
   895 ;; ---------------------------------------------------------------------------------
   896 ;; (1) _SegmentDisplay_Initial                               1     1      0       0
   897 ;;                                              4 BANK0      1     1      0
   898 ;; ---------------------------------------------------------------------------------
   899 ;; (1) _MainT_Initial                                        1     1      0       0
   900 ;;                                              4 BANK0      1     1      0
   901 ;; ---------------------------------------------------------------------------------
   902 ;; (4) _putch                                                1     1      0      22
   903 ;;                                              4 BANK0      1     1      0
   904 ;; ---------------------------------------------------------------------------------
   905 ;; (2) _UART_Receive                                         4     4      0      90
   906 ;;                                              4 BANK0      4     4      0
   907 ;; ---------------------------------------------------------------------------------
   908 ;; (2) _I2C_Master_Transmission                              2     2      0      68
   909 ;;                                              4 BANK0      2     2      0
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (2) _I2C_Master_Reception                                 3     3      0      68
   912 ;;                                              4 BANK0      3     3      0
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (2) _UART_Set                                             1     1      0       0
   915 ;;                                              4 BANK0      1     1      0
   916 ;; ---------------------------------------------------------------------------------
   917 ;; (2) _I2C_Set                                              1     1      0       0
   918 ;;                                              4 BANK0      1     1      0
   919 ;; ---------------------------------------------------------------------------------
   920 ;; (2) _TMR1_Set                                             1     1      0       0
   921 ;;                                              4 BANK0      1     1      0
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (2) _IO_Set                                               0     0      0       0
   924 ;; ---------------------------------------------------------------------------------
   925 ;; Estimated maximum stack depth 4
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   928 ;; ---------------------------------------------------------------------------------
   929 ;; (5) _ISR                                                  1     1      0    3051
   930 ;;                                              3 BANK0      1     1      0
   931 ;;                           _TMR1_ISR
   932 ;;                           _UART_ISR
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (6) _UART_ISR                                             3     3      0    3051
   935 ;;                                              1 BANK0      2     2      0
   936 ;;          i1_setSegmentDisplayNumber
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (7) i1_setSegmentDisplayNumber                            6     4      2    3051
   939 ;;                                              9 COMMON     5     3      2
   940 ;;                                              0 BANK0      1     1      0
   941 ;;                          i1___awdiv
   942 ;;                          i1___awmod
   943 ;; ---------------------------------------------------------------------------------
   944 ;; (8) i1___awmod                                            7     3      4     969
   945 ;;                                              0 COMMON     7     3      4
   946 ;; ---------------------------------------------------------------------------------
   947 ;; (8) i1___awdiv                                            9     5      4     977
   948 ;;                                              0 COMMON     9     5      4
   949 ;; ---------------------------------------------------------------------------------
   950 ;; (6) _TMR1_ISR                                             0     0      0       0
   951 ;; ---------------------------------------------------------------------------------
   952 ;; Estimated maximum stack depth 8
   953 ;; ---------------------------------------------------------------------------------
   954                           
   955 ;; Call Graph Graphs:
   956                           
   957 ;; _main (ROOT)
   958 ;;   _MainT_Initial
   959 ;;   _Mcu_Initialization
   960 ;;     _IO_Set
   961 ;;     _TMR1_Set
   962 ;;     _I2C_Set
   963 ;;     _UART_Set
   964 ;;   _SegmentDisplay_Initial
   965 ;;   _MainT
   966 ;;   _I2C_Main
   967 ;;     _I2C_Master_Reception
   968 ;;     _I2C_Master_Transmission
   969 ;;   _UART_Main
   970 ;;     _UART_Receive
   971 ;;     _setSegmentDisplayNumber
   972 ;;       ___awdiv
   973 ;;       ___awmod
   974 ;;     _UART_Transmit
   975 ;;       _printf
   976 ;;         _putch
   977 ;;         ___lwdiv
   978 ;;         ___lwmod
   979 ;;           ___lwdiv (ARG)
   980 ;;   _SegmentDisplay_Main
   981 ;;
   982 ;; _ISR (ROOT)
   983 ;;   _TMR1_ISR
   984 ;;   _UART_ISR
   985 ;;     i1_setSegmentDisplayNumber
   986 ;;       i1___awdiv
   987 ;;       i1___awmod
   988 ;;
   989                           
   990 ;; Address spaces:
   991                           
   992 ;;Name               Size   Autos  Total    Cost      Usage
   993 ;;BIGRAM             1F0      0       0       0        0.0%
   994 ;;NULL                 0      0       0       0        0.0%
   995 ;;CODE                 0      0       0       0        0.0%
   996 ;;BITCOMMON            E      0       0       1        0.0%
   997 ;;BITSFR0              0      0       0       1        0.0%
   998 ;;SFR0                 0      0       0       1        0.0%
   999 ;;COMMON               E      E       E       2      100.0%
  1000 ;;BITSFR1              0      0       0       2        0.0%
  1001 ;;SFR1                 0      0       0       2        0.0%
  1002 ;;BITSFR2              0      0       0       3        0.0%
  1003 ;;SFR2                 0      0       0       3        0.0%
  1004 ;;STACK                0      0       C       3        0.0%
  1005 ;;BITSFR3              0      0       0       4        0.0%
  1006 ;;SFR3                 0      0       0       4        0.0%
  1007 ;;ABS                  0      0     10B       4        0.0%
  1008 ;;BITBANK0            50      0       0       5        0.0%
  1009 ;;BITSFR4              0      0       0       5        0.0%
  1010 ;;SFR4                 0      0       0       5        0.0%
  1011 ;;BANK0               50     24      3C       6       75.0%
  1012 ;;BITSFR5              0      0       0       6        0.0%
  1013 ;;SFR5                 0      0       0       6        0.0%
  1014 ;;BITBANK1            50      0       0       7        0.0%
  1015 ;;BITSFR6              0      0       0       7        0.0%
  1016 ;;SFR6                 0      0       0       7        0.0%
  1017 ;;BANK1               50      0      3A       8       72.5%
  1018 ;;BITSFR7              0      0       0       8        0.0%
  1019 ;;SFR7                 0      0       0       8        0.0%
  1020 ;;BITBANK2            50      0       0       9        0.0%
  1021 ;;BITSFR8              0      0       0       9        0.0%
  1022 ;;SFR8                 0      0       0       9        0.0%
  1023 ;;BANK2               50      0      43      10       83.8%
  1024 ;;BITSFR9              0      0       0      10        0.0%
  1025 ;;SFR9                 0      0       0      10        0.0%
  1026 ;;BITBANK3            50      0       0      11        0.0%
  1027 ;;BITSFR10             0      0       0      11        0.0%
  1028 ;;SFR10                0      0       0      11        0.0%
  1029 ;;BANK3               50      0      44      12       85.0%
  1030 ;;BITSFR11             0      0       0      12        0.0%
  1031 ;;SFR11                0      0       0      12        0.0%
  1032 ;;BITBANK4            50      0       0      13        0.0%
  1033 ;;BITSFR12             0      0       0      13        0.0%
  1034 ;;SFR12                0      0       0      13        0.0%
  1035 ;;BANK4               50      0       0      14        0.0%
  1036 ;;BITSFR13             0      0       0      14        0.0%
  1037 ;;SFR13                0      0       0      14        0.0%
  1038 ;;BITBANK5            50      0       0      15        0.0%
  1039 ;;BITSFR14             0      0       0      15        0.0%
  1040 ;;SFR14                0      0       0      15        0.0%
  1041 ;;BANK5               50      0       0      16        0.0%
  1042 ;;BITSFR15             0      0       0      16        0.0%
  1043 ;;SFR15                0      0       0      16        0.0%
  1044 ;;BITBANK6            10      0       0      17        0.0%
  1045 ;;BITSFR16             0      0       0      17        0.0%
  1046 ;;SFR16                0      0       0      17        0.0%
  1047 ;;BANK6               10      0       0      18        0.0%
  1048 ;;BITSFR17             0      0       0      18        0.0%
  1049 ;;SFR17                0      0       0      18        0.0%
  1050 ;;BITSFR18             0      0       0      19        0.0%
  1051 ;;SFR18                0      0       0      19        0.0%
  1052 ;;DATA                 0      0     117      19        0.0%
  1053 ;;BITSFR19             0      0       0      20        0.0%
  1054 ;;SFR19                0      0       0      20        0.0%
  1055 ;;BITSFR20             0      0       0      21        0.0%
  1056 ;;SFR20                0      0       0      21        0.0%
  1057 ;;BITSFR21             0      0       0      22        0.0%
  1058 ;;SFR21                0      0       0      22        0.0%
  1059 ;;BITSFR22             0      0       0      23        0.0%
  1060 ;;SFR22                0      0       0      23        0.0%
  1061 ;;BITSFR23             0      0       0      24        0.0%
  1062 ;;SFR23                0      0       0      24        0.0%
  1063 ;;BITSFR24             0      0       0      25        0.0%
  1064 ;;SFR24                0      0       0      25        0.0%
  1065 ;;BITSFR25             0      0       0      26        0.0%
  1066 ;;SFR25                0      0       0      26        0.0%
  1067 ;;BITSFR26             0      0       0      27        0.0%
  1068 ;;SFR26                0      0       0      27        0.0%
  1069 ;;BITSFR27             0      0       0      28        0.0%
  1070 ;;SFR27                0      0       0      28        0.0%
  1071 ;;BITSFR28             0      0       0      29        0.0%
  1072 ;;SFR28                0      0       0      29        0.0%
  1073 ;;BITSFR29             0      0       0      30        0.0%
  1074 ;;SFR29                0      0       0      30        0.0%
  1075 ;;BITSFR30             0      0       0      31        0.0%
  1076 ;;SFR30                0      0       0      31        0.0%
  1077 ;;BITSFR31             0      0       0      32        0.0%
  1078 ;;SFR31                0      0       0      32        0.0%
  1079                           
  1080                           	global	_main
  1081                           psect	maintext,global,class=CODE,delta=2
  1082                           global __pmaintext
  1083  0EAC                     __pmaintext:
  1084                           
  1085 ;; *************** function _main *****************
  1086 ;; Defined at:
  1087 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\myMain.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;		None               void
  1094 ;; Registers used:
  1095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 17F/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1101 ;;      Params:         0       0       0       0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels required when called:    8
  1107 ;; This function calls:
  1108 ;;		_MainT_Initial
  1109 ;;		_Mcu_Initialization
  1110 ;;		_SegmentDisplay_Initial
  1111 ;;		_MainT
  1112 ;;		_I2C_Main
  1113 ;;		_UART_Main
  1114 ;;		_SegmentDisplay_Main
  1115 ;; This function is called by:
  1116 ;;		Startup code after reset
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           psect	maintext
  1120                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\myMain.c"
  1121                           	line	7
  1122                           	global	__size_of_main
  1123  0031                     	__size_of_main	equ	__end_of_main-_main
  1124                           	
  1125  0EAC                     _main:	
  1126                           	opt	stack 8
  1127                           ; Regs used in _main: [allreg]
  1128                           	line	8
  1129                           	
  1130  0EAC                     l8194:	
  1131                           ;myMain.c: 8: MainT_Initial();
  1132  0EAC  318D  25D6  318E   	fcall	_MainT_Initial
  1133                           	line	9
  1134                           	
  1135  0EAF                     l8196:	
  1136                           ;myMain.c: 9: Mcu_Initialization();
  1137  0EAF  3187  27ED  318E   	fcall	_Mcu_Initialization
  1138                           	line	10
  1139                           	
  1140  0EB2                     l8198:	
  1141                           ;myMain.c: 10: SegmentDisplay_Initial();
  1142  0EB2  318D  25F5  318E   	fcall	_SegmentDisplay_Initial
  1143                           	line	12
  1144                           	
  1145  0EB5                     l8200:	
  1146                           ;myMain.c: 11: ;;
  1147                           ;myMain.c: 12: _nop();
  1148  0EB5  0000               	nop
  1149  0EB6  2EB7               	goto	l8202
  1150                           	line	13
  1151                           ;myMain.c: 13: while(1)
  1152                           	
  1153  0EB7                     l2258:	
  1154                           	line	17
  1155                           	
  1156  0EB7                     l8202:	
  1157                           ;myMain.c: 14: {
  1158                           ;myMain.c: 17: if(TMain->T1_Timerout)
  1159  0EB7  0020               	movlb 0	; select bank0
  1160  0EB8  0859               	movf	(_TMain),w
  1161  0EB9  0086               	movwf	fsr1l
  1162  0EBA  0187               	clrf fsr1h	
  1163                           	
  1164  0EBB  1D01               	btfss	indf1,2
  1165  0EBC  2EBE               	goto	u5161
  1166  0EBD  2EBF               	goto	u5160
  1167  0EBE                     u5161:
  1168  0EBE  2EB7               	goto	l8202
  1169  0EBF                     u5160:
  1170                           	line	19
  1171                           	
  1172  0EBF                     l8204:	
  1173                           ;myMain.c: 18: {
  1174                           ;myMain.c: 19: TMain->T1_Timerout = 0;
  1175  0EBF  0859               	movf	(_TMain),w
  1176  0EC0  0086               	movwf	fsr1l
  1177  0EC1  0187               	clrf fsr1h	
  1178                           	
  1179  0EC2  1101               	bcf	indf1,2
  1180                           	line	20
  1181                           	
  1182  0EC3                     l8206:	
  1183                           ;myMain.c: 20: MainT();
  1184  0EC3  3185  2535  318E   	fcall	_MainT
  1185                           	line	21
  1186                           	
  1187  0EC6                     l8208:	
  1188                           ;myMain.c: 21: if(TMain->PowerON)
  1189  0EC6  0020               	movlb 0	; select bank0
  1190  0EC7  0859               	movf	(_TMain),w
  1191  0EC8  0086               	movwf	fsr1l
  1192  0EC9  0187               	clrf fsr1h	
  1193                           	
  1194  0ECA  1C01               	btfss	indf1,0
  1195  0ECB  2ECD               	goto	u5171
  1196  0ECC  2ECE               	goto	u5170
  1197  0ECD                     u5171:
  1198  0ECD  2EB7               	goto	l8202
  1199  0ECE                     u5170:
  1200                           	line	24
  1201                           	
  1202  0ECE                     l8210:	
  1203                           ;myMain.c: 22: {
  1204                           ;myMain.c: 23: ;;
  1205                           ;myMain.c: 24: I2C_Main();
  1206  0ECE  3184  2422  318E   	fcall	_I2C_Main
  1207                           	line	25
  1208                           	
  1209  0ED1                     l8212:	
  1210                           ;myMain.c: 25: UART_Main();
  1211  0ED1  318F  2785  318E   	fcall	_UART_Main
  1212                           	line	26
  1213                           	
  1214  0ED4                     l8214:	
  1215                           ;myMain.c: 26: SegmentDisplay_Main();
  1216  0ED4  3184  24AC  318E   	fcall	_SegmentDisplay_Main
  1217  0ED7  2EB7               	goto	l8202
  1218                           	line	27
  1219                           	
  1220  0ED8                     l2260:	
  1221  0ED8  2EB7               	goto	l8202
  1222                           	line	28
  1223                           	
  1224  0ED9                     l2259:	
  1225  0ED9  2EB7               	goto	l8202
  1226                           	line	29
  1227                           	
  1228  0EDA                     l2261:	
  1229                           	line	13
  1230  0EDA  2EB7               	goto	l8202
  1231                           	
  1232  0EDB                     l2262:	
  1233                           	line	30
  1234                           	
  1235  0EDB                     l2263:	
  1236                           	global	start
  1237  0EDB  3180  2812         	ljmp	start
  1238                           	opt stack 0
  1239                           GLOBAL	__end_of_main
  1240  0EDD                     	__end_of_main:
  1241 ;; =============== function _main ends ============
  1242                           
  1243                           	signat	_main,88
  1244                           	global	_UART_Main
  1245                           psect	text710,local,class=CODE,delta=2
  1246                           global __ptext710
  1247  0F85                     __ptext710:
  1248                           
  1249 ;; *************** function _UART_Main *****************
  1250 ;; Defined at:
  1251 ;;		line 704 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;		None               void
  1258 ;; Registers used:
  1259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1265 ;;      Params:         0       0       0       0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0
  1267 ;;      Temps:          0       2       0       0       0       0       0       0
  1268 ;;      Totals:         0       2       0       0       0       0       0       0
  1269 ;;Total ram usage:        2 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    7
  1272 ;; This function calls:
  1273 ;;		_UART_Receive
  1274 ;;		_setSegmentDisplayNumber
  1275 ;;		_UART_Transmit
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           psect	text710
  1281                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1282                           	line	704
  1283                           	global	__size_of_UART_Main
  1284  003C                     	__size_of_UART_Main	equ	__end_of_UART_Main-_UART_Main
  1285                           	
  1286  0F85                     _UART_Main:	
  1287                           	opt	stack 8
  1288                           ; Regs used in _UART_Main: [allreg]
  1289                           	line	705
  1290                           	
  1291  0F85                     l8178:	
  1292                           ;MCU_B1.c: 705: if(UART->RxGO)
  1293  0F85  0020               	movlb 0	; select bank0
  1294  0F86  085B               	movf	(_UART),w
  1295  0F87  3E43               	addlw	043h
  1296  0F88  0086               	movwf	fsr1l
  1297  0F89  3001               	movlw 1	; select bank2/3
  1298  0F8A  0087               	movwf fsr1h	
  1299                           	
  1300  0F8B  1C81               	btfss	indf1,1
  1301  0F8C  2F8E               	goto	u5141
  1302  0F8D  2F8F               	goto	u5140
  1303  0F8E                     u5141:
  1304  0F8E  2FAB               	goto	l8188
  1305  0F8F                     u5140:
  1306                           	line	707
  1307                           	
  1308  0F8F                     l8180:	
  1309                           ;MCU_B1.c: 706: {
  1310                           ;MCU_B1.c: 707: UART->RxGO=0;
  1311  0F8F  085B               	movf	(_UART),w
  1312  0F90  3E43               	addlw	043h
  1313  0F91  0086               	movwf	fsr1l
  1314  0F92  3001               	movlw 1	; select bank2/3
  1315  0F93  0087               	movwf fsr1h	
  1316                           	
  1317  0F94  1081               	bcf	indf1,1
  1318                           	line	708
  1319                           	
  1320  0F95                     l8182:	
  1321                           ;MCU_B1.c: 708: UART_Receive();
  1322  0F95  318F  2712  318F   	fcall	_UART_Receive
  1323                           	line	709
  1324                           	
  1325  0F98                     l8184:	
  1326                           ;MCU_B1.c: 709: RCIE=1;
  1327  0F98  0021               	movlb 1	; select bank1
  1328  0F99  1691               	bsf	(1165/8)^080h,(1165)&7
  1329                           	line	710
  1330                           	
  1331  0F9A                     l8186:	
  1332                           ;MCU_B1.c: 710: setSegmentDisplayNumber(UART->RxData[0]);
  1333  0F9A  0020               	movlb 0	; select bank0
  1334  0F9B  085B               	movf	(_UART),w
  1335  0F9C  3E20               	addlw	020h
  1336  0F9D  0086               	movwf	fsr1l
  1337  0F9E  3001               	movlw 1	; select bank2/3
  1338  0F9F  0087               	movwf fsr1h	
  1339                           	
  1340  0FA0  0801               	movf	indf1,w
  1341  0FA1  00C2               	movwf	(??_UART_Main+0)+0
  1342  0FA2  01C3               	clrf	(??_UART_Main+0)+0+1
  1343  0FA3  0842               	movf	0+(??_UART_Main+0)+0,w
  1344  0FA4  00AD               	movwf	(?_setSegmentDisplayNumber)
  1345  0FA5  0843               	movf	1+(??_UART_Main+0)+0,w
  1346  0FA6  00AE               	movwf	(?_setSegmentDisplayNumber+1)
  1347  0FA7  3180  2015  318F   	fcall	_setSegmentDisplayNumber
  1348                           	line	711
  1349                           ;MCU_B1.c: 711: }
  1350  0FAA  2FC0               	goto	l1201
  1351                           	line	712
  1352                           	
  1353  0FAB                     l1198:	
  1354                           	line	714
  1355                           	
  1356  0FAB                     l8188:	
  1357                           ;MCU_B1.c: 712: else
  1358                           ;MCU_B1.c: 713: {
  1359                           ;MCU_B1.c: 714: if(UART->TxGO)
  1360  0FAB  0020               	movlb 0	; select bank0
  1361  0FAC  085B               	movf	(_UART),w
  1362  0FAD  3E43               	addlw	043h
  1363  0FAE  0086               	movwf	fsr1l
  1364  0FAF  3001               	movlw 1	; select bank2/3
  1365  0FB0  0087               	movwf fsr1h	
  1366                           	
  1367  0FB1  1C01               	btfss	indf1,0
  1368  0FB2  2FB4               	goto	u5151
  1369  0FB3  2FB5               	goto	u5150
  1370  0FB4                     u5151:
  1371  0FB4  2FC0               	goto	l1201
  1372  0FB5                     u5150:
  1373                           	line	716
  1374                           	
  1375  0FB5                     l8190:	
  1376                           ;MCU_B1.c: 715: {
  1377                           ;MCU_B1.c: 716: UART->TxGO=0;
  1378  0FB5  085B               	movf	(_UART),w
  1379  0FB6  3E43               	addlw	043h
  1380  0FB7  0086               	movwf	fsr1l
  1381  0FB8  3001               	movlw 1	; select bank2/3
  1382  0FB9  0087               	movwf fsr1h	
  1383                           	
  1384  0FBA  1001               	bcf	indf1,0
  1385                           	line	717
  1386                           	
  1387  0FBB                     l8192:	
  1388                           ;MCU_B1.c: 717: UART_Transmit();
  1389  0FBB  318E  2634  318F   	fcall	_UART_Transmit
  1390  0FBE  2FC0               	goto	l1201
  1391                           	line	718
  1392                           	
  1393  0FBF                     l1200:	
  1394  0FBF  2FC0               	goto	l1201
  1395                           	line	719
  1396                           	
  1397  0FC0                     l1199:	
  1398                           	line	720
  1399                           	
  1400  0FC0                     l1201:	
  1401  0FC0  0008               	return
  1402                           	opt stack 0
  1403                           GLOBAL	__end_of_UART_Main
  1404  0FC1                     	__end_of_UART_Main:
  1405 ;; =============== function _UART_Main ends ============
  1406                           
  1407                           	signat	_UART_Main,88
  1408                           	global	_UART_Transmit
  1409                           psect	text711,local,class=CODE,delta=2
  1410                           global __ptext711
  1411  0E34                     __ptext711:
  1412                           
  1413 ;; *************** function _UART_Transmit *****************
  1414 ;; Defined at:
  1415 ;;		line 722 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  i               1   33[BANK0 ] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;		None               void
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1429 ;;      Params:         0       0       0       0       0       0       0       0
  1430 ;;      Locals:         0       1       0       0       0       0       0       0
  1431 ;;      Temps:          0       2       0       0       0       0       0       0
  1432 ;;      Totals:         0       3       0       0       0       0       0       0
  1433 ;;Total ram usage:        3 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    6
  1436 ;; This function calls:
  1437 ;;		_printf
  1438 ;; This function is called by:
  1439 ;;		_UART_Main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           psect	text711
  1443                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1444                           	line	722
  1445                           	global	__size_of_UART_Transmit
  1446  0022                     	__size_of_UART_Transmit	equ	__end_of_UART_Transmit-_UART_Transmit
  1447                           	
  1448  0E34                     _UART_Transmit:	
  1449                           	opt	stack 8
  1450                           ; Regs used in _UART_Transmit: [wreg-status,0+pclath+cstack]
  1451                           	line	726
  1452                           	
  1453  0E34                     l8166:	
  1454                           ;MCU_B1.c: 723: char i;
  1455                           ;MCU_B1.c: 726: for(i=0;i<32;i++)
  1456  0E34  0020               	movlb 0	; select bank0
  1457  0E35  01C1               	clrf	(UART_Transmit@i)
  1458                           	
  1459  0E36                     l8168:	
  1460  0E36  3020               	movlw	(020h)
  1461  0E37  0241               	subwf	(UART_Transmit@i),w
  1462  0E38  1C03               	skipc
  1463  0E39  2E3B               	goto	u5121
  1464  0E3A  2E3C               	goto	u5120
  1465  0E3B                     u5121:
  1466  0E3B  2E3E               	goto	l8172
  1467  0E3C                     u5120:
  1468  0E3C  2E55               	goto	l1206
  1469                           	
  1470  0E3D                     l8170:	
  1471  0E3D  2E55               	goto	l1206
  1472                           	line	727
  1473                           	
  1474  0E3E                     l1204:	
  1475                           	line	733
  1476                           	
  1477  0E3E                     l8172:	
  1478                           ;MCU_B1.c: 727: {
  1479                           ;MCU_B1.c: 733: printf("%d,",i);
  1480  0E3E  0841               	movf	(UART_Transmit@i),w
  1481  0E3F  00BF               	movwf	(??_UART_Transmit+0)+0
  1482  0E40  01C0               	clrf	(??_UART_Transmit+0)+0+1
  1483  0E41  083F               	movf	0+(??_UART_Transmit+0)+0,w
  1484  0E42  00B2               	movwf	(?_printf)
  1485  0E43  0840               	movf	1+(??_UART_Transmit+0)+0,w
  1486  0E44  00B3               	movwf	(?_printf+1)
  1487  0E45  300B               	movlw	(STR_1|8000h)&0ffh
  1488  0E46  3182  22B8  318E   	fcall	_printf
  1489                           	line	726
  1490                           	
  1491  0E49                     l8174:	
  1492  0E49  3001               	movlw	(01h)
  1493  0E4A  0020               	movlb 0	; select bank0
  1494  0E4B  00BF               	movwf	(??_UART_Transmit+0)+0
  1495  0E4C  083F               	movf	(??_UART_Transmit+0)+0,w
  1496  0E4D  07C1               	addwf	(UART_Transmit@i),f
  1497                           	
  1498  0E4E                     l8176:	
  1499  0E4E  3020               	movlw	(020h)
  1500  0E4F  0241               	subwf	(UART_Transmit@i),w
  1501  0E50  1C03               	skipc
  1502  0E51  2E53               	goto	u5131
  1503  0E52  2E54               	goto	u5130
  1504  0E53                     u5131:
  1505  0E53  2E3E               	goto	l8172
  1506  0E54                     u5130:
  1507  0E54  2E55               	goto	l1206
  1508                           	
  1509  0E55                     l1205:	
  1510                           	line	739
  1511                           	
  1512  0E55                     l1206:	
  1513  0E55  0008               	return
  1514                           	opt stack 0
  1515                           GLOBAL	__end_of_UART_Transmit
  1516  0E56                     	__end_of_UART_Transmit:
  1517 ;; =============== function _UART_Transmit ends ============
  1518                           
  1519                           	signat	_UART_Transmit,88
  1520                           	global	_printf
  1521                           psect	text712,local,class=CODE,delta=2
  1522                           global __ptext712
  1523  02B8                     __ptext712:
  1524                           
  1525 ;; *************** function _printf *****************
  1526 ;; Defined at:
  1527 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  f               1    wreg     PTR const unsigned char 
  1530 ;;		 -> STR_1(4), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  f               1   24[BANK0 ] PTR const unsigned char 
  1533 ;;		 -> STR_1(4), 
  1534 ;;  _val            4   26[BANK0 ] struct .
  1535 ;;  c               1   30[BANK0 ] char 
  1536 ;;  prec            1   25[BANK0 ] char 
  1537 ;;  flag            1   23[BANK0 ] unsigned char 
  1538 ;;  ap              1   22[BANK0 ] PTR void [1]
  1539 ;;		 -> ?_printf(2), 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  2   18[BANK0 ] int 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1549 ;;      Params:         0       2       0       0       0       0       0       0
  1550 ;;      Locals:         0       9       0       0       0       0       0       0
  1551 ;;      Temps:          0       2       0       0       0       0       0       0
  1552 ;;      Totals:         0      13       0       0       0       0       0       0
  1553 ;;Total ram usage:       13 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    5
  1556 ;; This function calls:
  1557 ;;		_putch
  1558 ;;		___lwdiv
  1559 ;;		___lwmod
  1560 ;; This function is called by:
  1561 ;;		_UART_Transmit
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           psect	text712
  1565                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  1566                           	line	461
  1567                           	global	__size_of_printf
  1568  00D3                     	__size_of_printf	equ	__end_of_printf-_printf
  1569                           	
  1570  02B8                     _printf:	
  1571                           	opt	stack 8
  1572                           ; Regs used in _printf: [wreg-status,0+pclath+cstack]
  1573                           ;printf@f stored from wreg
  1574                           	line	537
  1575  02B8  0020               	movlb 0	; select bank0
  1576  02B9  00B8               	movwf	(printf@f)
  1577                           	
  1578  02BA                     l8118:	
  1579  02BA  3032               	movlw	(?_printf)&0ffh
  1580  02BB  00B4               	movwf	(??_printf+0)+0
  1581  02BC  0834               	movf	(??_printf+0)+0,w
  1582  02BD  00B6               	movwf	(printf@ap)
  1583                           	line	540
  1584  02BE  2B78               	goto	l8164
  1585                           	
  1586  02BF                     l5351:	
  1587                           	line	542
  1588                           	
  1589  02BF                     l8120:	
  1590  02BF  083E               	movf	(printf@c),w
  1591  02C0  3A25               	xorlw	025h&0ffh
  1592  02C1  1903               	skipnz
  1593  02C2  2AC4               	goto	u5041
  1594  02C3  2AC5               	goto	u5040
  1595  02C4                     u5041:
  1596  02C4  2ACA               	goto	l5352
  1597  02C5                     u5040:
  1598                           	line	545
  1599                           	
  1600  02C5                     l8122:	
  1601  02C5  083E               	movf	(printf@c),w
  1602  02C6  318D  25BC  3182   	fcall	_putch
  1603                           	line	546
  1604  02C9  2B78               	goto	l8164
  1605                           	line	547
  1606                           	
  1607  02CA                     l5352:	
  1608                           	line	552
  1609  02CA  01B7               	clrf	(printf@flag)
  1610                           	line	638
  1611  02CB  2AD1               	goto	l8126
  1612                           	line	640
  1613                           	
  1614  02CC                     l5354:	
  1615                           	line	641
  1616  02CC  2B8A               	goto	l5369
  1617                           	line	700
  1618                           	
  1619  02CD                     l5356:	
  1620  02CD  2AE3               	goto	l8128
  1621                           	line	701
  1622                           	
  1623  02CE                     l5357:	
  1624                           	line	702
  1625  02CE  2AE3               	goto	l8128
  1626                           	line	805
  1627                           	
  1628  02CF                     l5359:	
  1629                           	line	816
  1630  02CF  2B78               	goto	l8164
  1631                           	line	825
  1632                           	
  1633  02D0                     l8124:	
  1634  02D0  2AE3               	goto	l8128
  1635                           	line	638
  1636                           	
  1637  02D1                     l5353:	
  1638                           	
  1639  02D1                     l8126:	
  1640  02D1  3001               	movlw	01h
  1641  02D2  07B8               	addwf	(printf@f),f
  1642  02D3  30FF               	movlw	-01h
  1643  02D4  0738               	addwf	(printf@f),w
  1644  02D5  3188               	movlp	high __stringtab
  1645  02D6  000A               	callw
  1646  02D7  3182               	pagesel	$
  1647  02D8  00BE               	movwf	(printf@c)
  1648                           	; Switch size 1, requested type "space"
  1649                           ; Number of cases is 3, Range of values is 0 to 105
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte           10     6 (average)
  1653                           ; direct_byte          218     6 (fixed)
  1654                           ; jumptable            260     6 (fixed)
  1655                           ; rangetable           110     4 (fixed)
  1656                           ; spacedrange          217     6 (fixed)
  1657                           ; locatedrange         106     3 (fixed)
  1658                           ;	Chosen strategy is simple_byte
  1659                           
  1660                           	opt asmopt_off
  1661  02D9  3A00               	xorlw	0^0	; case 0
  1662  02DA  1903               	skipnz
  1663  02DB  2B8A               	goto	l5369
  1664  02DC  3A64               	xorlw	100^0	; case 100
  1665  02DD  1903               	skipnz
  1666  02DE  2AE3               	goto	l8128
  1667  02DF  3A0D               	xorlw	105^100	; case 105
  1668  02E0  1903               	skipnz
  1669  02E1  2AE3               	goto	l8128
  1670  02E2  2B78               	goto	l8164
  1671                           	opt asmopt_on
  1672                           
  1673                           	line	825
  1674                           	
  1675  02E3                     l5358:	
  1676                           	line	1254
  1677                           	
  1678  02E3                     l8128:	
  1679  02E3  0836               	movf	(printf@ap),w
  1680  02E4  0086               	movwf	fsr1l
  1681  02E5  0187               	clrf fsr1h	
  1682                           	
  1683  02E6  3F40               	moviw	[0]fsr1
  1684  02E7  00BA               	movwf	(printf@_val)
  1685  02E8  3F41               	moviw	[1]fsr1
  1686  02E9  00BB               	movwf	(printf@_val+1)
  1687                           	
  1688  02EA                     l8130:	
  1689  02EA  3002               	movlw	(02h)
  1690  02EB  00B4               	movwf	(??_printf+0)+0
  1691  02EC  0834               	movf	(??_printf+0)+0,w
  1692  02ED  07B6               	addwf	(printf@ap),f
  1693                           	line	1256
  1694                           	
  1695  02EE                     l8132:	
  1696  02EE  1FBB               	btfss	(printf@_val+1),7
  1697  02EF  2AF1               	goto	u5051
  1698  02F0  2AF2               	goto	u5050
  1699  02F1                     u5051:
  1700  02F1  2AFC               	goto	l8138
  1701  02F2                     u5050:
  1702                           	line	1257
  1703                           	
  1704  02F2                     l8134:	
  1705  02F2  3003               	movlw	(03h)
  1706  02F3  00B4               	movwf	(??_printf+0)+0
  1707  02F4  0834               	movf	(??_printf+0)+0,w
  1708  02F5  04B7               	iorwf	(printf@flag),f
  1709                           	line	1258
  1710                           	
  1711  02F6                     l8136:	
  1712  02F6  09BA               	comf	(printf@_val),f
  1713  02F7  09BB               	comf	(printf@_val+1),f
  1714  02F8  0ABA               	incf	(printf@_val),f
  1715  02F9  1903               	skipnz
  1716  02FA  0ABB               	incf	(printf@_val+1),f
  1717  02FB  2AFC               	goto	l8138
  1718                           	line	1259
  1719                           	
  1720  02FC                     l5360:	
  1721                           	line	1300
  1722                           	
  1723  02FC                     l8138:	
  1724  02FC  01BE               	clrf	(printf@c)
  1725  02FD  1403               	bsf	status,0
  1726  02FE  0DBE               	rlf	(printf@c),f
  1727                           	
  1728  02FF                     l8140:	
  1729  02FF  083E               	movf	(printf@c),w
  1730  0300  3A05               	xorlw	05h&0ffh
  1731  0301  1D03               	skipz
  1732  0302  2B04               	goto	u5061
  1733  0303  2B05               	goto	u5060
  1734  0304                     u5061:
  1735  0304  2B07               	goto	l8144
  1736  0305                     u5060:
  1737  0305  2B2B               	goto	l8152
  1738                           	
  1739  0306                     l8142:	
  1740  0306  2B2B               	goto	l8152
  1741                           	line	1301
  1742                           	
  1743  0307                     l5361:	
  1744                           	
  1745  0307                     l8144:	
  1746  0307  3001               	movlw	low(_dpowers|8000h)
  1747  0308  0084               	movwf	fsr0l
  1748  0309  3088               	movlw	high(_dpowers|8000h)
  1749  030A  0085               	movwf	fsr0h
  1750  030B  083E               	movf	(printf@c),w
  1751  030C  0709               	addwf	wreg,w
  1752  030D  0784               	addwf	fsr0l,f
  1753  030E  1803               	skipnc
  1754  030F  0A85               	incf	fsr0h,f
  1755  0310  3F00               	moviw	[0]fsr0
  1756  0311  00B4               	movwf	(??_printf+0)+0
  1757  0312  3F01               	moviw	[1]fsr0
  1758  0313  00B5               	movwf	(??_printf+0)+0+1
  1759  0314  0835               	movf	1+(??_printf+0)+0,w
  1760  0315  023B               	subwf	(printf@_val+1),w
  1761  0316  1D03               	skipz
  1762  0317  2B1A               	goto	u5075
  1763  0318  0834               	movf	0+(??_printf+0)+0,w
  1764  0319  023A               	subwf	(printf@_val),w
  1765  031A                     u5075:
  1766  031A  1803               	skipnc
  1767  031B  2B1D               	goto	u5071
  1768  031C  2B1E               	goto	u5070
  1769  031D                     u5071:
  1770  031D  2B20               	goto	l8148
  1771  031E                     u5070:
  1772  031E  2B2B               	goto	l8152
  1773                           	line	1302
  1774                           	
  1775  031F                     l8146:	
  1776  031F  2B2B               	goto	l8152
  1777                           	
  1778  0320                     l5363:	
  1779                           	line	1300
  1780                           	
  1781  0320                     l8148:	
  1782  0320  3001               	movlw	(01h)
  1783  0321  00B4               	movwf	(??_printf+0)+0
  1784  0322  0834               	movf	(??_printf+0)+0,w
  1785  0323  07BE               	addwf	(printf@c),f
  1786                           	
  1787  0324                     l8150:	
  1788  0324  083E               	movf	(printf@c),w
  1789  0325  3A05               	xorlw	05h&0ffh
  1790  0326  1D03               	skipz
  1791  0327  2B29               	goto	u5081
  1792  0328  2B2A               	goto	u5080
  1793  0329                     u5081:
  1794  0329  2B07               	goto	l8144
  1795  032A                     u5080:
  1796  032A  2B2B               	goto	l8152
  1797                           	
  1798  032B                     l5362:	
  1799                           	line	1433
  1800                           	
  1801  032B                     l8152:	
  1802  032B  0837               	movf	(printf@flag),w
  1803  032C  3903               	andlw	03h
  1804  032D  1903               	btfsc	status,2
  1805  032E  2B30               	goto	u5091
  1806  032F  2B31               	goto	u5090
  1807  0330                     u5091:
  1808  0330  2B36               	goto	l8156
  1809  0331                     u5090:
  1810                           	line	1434
  1811                           	
  1812  0331                     l8154:	
  1813  0331  302D               	movlw	(02Dh)
  1814  0332  318D  25BC  3182   	fcall	_putch
  1815  0335  2B36               	goto	l8156
  1816                           	
  1817  0336                     l5364:	
  1818                           	line	1467
  1819                           	
  1820  0336                     l8156:	
  1821  0336  0020               	movlb 0	; select bank0
  1822  0337  083E               	movf	(printf@c),w
  1823  0338  00B4               	movwf	(??_printf+0)+0
  1824  0339  0834               	movf	(??_printf+0)+0,w
  1825  033A  00B9               	movwf	(printf@prec)
  1826                           	line	1469
  1827  033B  2B6B               	goto	l8162
  1828                           	
  1829  033C                     l5366:	
  1830                           	line	1484
  1831                           	
  1832  033C                     l8158:	
  1833  033C  300A               	movlw	low(0Ah)
  1834  033D  00AC               	movwf	(?___lwmod)
  1835  033E  3000               	movlw	high(0Ah)
  1836  033F  00AD               	movwf	((?___lwmod))+1
  1837  0340  3001               	movlw	low(_dpowers|8000h)
  1838  0341  0084               	movwf	fsr0l
  1839  0342  3088               	movlw	high(_dpowers|8000h)
  1840  0343  0085               	movwf	fsr0h
  1841  0344  0839               	movf	(printf@prec),w
  1842  0345  0709               	addwf	wreg,w
  1843  0346  0784               	addwf	fsr0l,f
  1844  0347  1803               	skipnc
  1845  0348  0A85               	incf	fsr0h,f
  1846  0349  3F00               	moviw	[0]fsr0
  1847  034A  00A4               	movwf	(?___lwdiv)
  1848  034B  3F01               	moviw	[1]fsr0
  1849  034C  00A5               	movwf	(?___lwdiv+1)
  1850  034D  083B               	movf	(printf@_val+1),w
  1851  034E  01A7               	clrf	1+(?___lwdiv)+02h
  1852  034F  07A7               	addwf	1+(?___lwdiv)+02h
  1853  0350  083A               	movf	(printf@_val),w
  1854  0351  01A6               	clrf	0+(?___lwdiv)+02h
  1855  0352  07A6               	addwf	0+(?___lwdiv)+02h
  1856                           
  1857  0353  3187  27A6  3182   	fcall	___lwdiv
  1858  0356  0020               	movlb 0	; select bank0
  1859  0357  0825               	movf	(1+(?___lwdiv)),w
  1860  0358  01AF               	clrf	1+(?___lwmod)+02h
  1861  0359  07AF               	addwf	1+(?___lwmod)+02h
  1862  035A  0824               	movf	(0+(?___lwdiv)),w
  1863  035B  01AE               	clrf	0+(?___lwmod)+02h
  1864  035C  07AE               	addwf	0+(?___lwmod)+02h
  1865                           
  1866  035D  318F  27C1  3182   	fcall	___lwmod
  1867  0360  0020               	movlb 0	; select bank0
  1868  0361  082C               	movf	(0+(?___lwmod)),w
  1869  0362  3E30               	addlw	030h
  1870  0363  00B4               	movwf	(??_printf+0)+0
  1871  0364  0834               	movf	(??_printf+0)+0,w
  1872  0365  00BE               	movwf	(printf@c)
  1873                           	line	1516
  1874                           	
  1875  0366                     l8160:	
  1876  0366  083E               	movf	(printf@c),w
  1877  0367  318D  25BC  3182   	fcall	_putch
  1878  036A  2B6B               	goto	l8162
  1879                           	line	1517
  1880                           	
  1881  036B                     l5365:	
  1882                           	line	1469
  1883                           	
  1884  036B                     l8162:	
  1885  036B  30FF               	movlw	(-1)
  1886  036C  0020               	movlb 0	; select bank0
  1887  036D  00B4               	movwf	(??_printf+0)+0
  1888  036E  0834               	movf	(??_printf+0)+0,w
  1889  036F  07B9               	addwf	(printf@prec),f
  1890  0370  0839               	movf	((printf@prec)),w
  1891  0371  3AFF               	xorlw	-1&0ffh
  1892  0372  1D03               	skipz
  1893  0373  2B75               	goto	u5101
  1894  0374  2B76               	goto	u5100
  1895  0375                     u5101:
  1896  0375  2B3C               	goto	l8158
  1897  0376                     u5100:
  1898  0376  2B78               	goto	l8164
  1899                           	
  1900  0377                     l5367:	
  1901  0377  2B78               	goto	l8164
  1902                           	line	1525
  1903                           	
  1904  0378                     l5350:	
  1905                           	line	540
  1906                           	
  1907  0378                     l8164:	
  1908  0378  3001               	movlw	01h
  1909  0379  0020               	movlb 0	; select bank0
  1910  037A  07B8               	addwf	(printf@f),f
  1911  037B  30FF               	movlw	-01h
  1912  037C  0738               	addwf	(printf@f),w
  1913  037D  3188               	movlp	high __stringtab
  1914  037E  000A               	callw
  1915  037F  3183               	pagesel	$
  1916  0380  00B4               	movwf	(??_printf+0)+0
  1917  0381  0834               	movf	(??_printf+0)+0,w
  1918  0382  00BE               	movwf	(printf@c)
  1919  0383  08BE               	movf	((printf@c)),f
  1920  0384  1D03               	skipz
  1921  0385  2B87               	goto	u5111
  1922  0386  2B88               	goto	u5110
  1923  0387                     u5111:
  1924  0387  2ABF               	goto	l8120
  1925  0388                     u5110:
  1926  0388  2B8A               	goto	l5369
  1927                           	
  1928  0389                     l5368:	
  1929  0389  2B8A               	goto	l5369
  1930                           	line	1527
  1931                           	
  1932  038A                     l5355:	
  1933                           	line	1533
  1934                           ;	Return value of _printf is never used
  1935                           	
  1936  038A                     l5369:	
  1937  038A  0008               	return
  1938                           	opt stack 0
  1939                           GLOBAL	__end_of_printf
  1940  038B                     	__end_of_printf:
  1941 ;; =============== function _printf ends ============
  1942                           
  1943                           	signat	_printf,602
  1944                           	global	_setSegmentDisplayNumber
  1945                           psect	text713,local,class=CODE,delta=2
  1946                           global __ptext713
  1947  0015                     __ptext713:
  1948                           
  1949 ;; *************** function _setSegmentDisplayNumber *****************
  1950 ;; Defined at:
  1951 ;;		line 21 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  number          2   13[BANK0 ] int 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  i               1   18[BANK0 ] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1965 ;;      Params:         0       2       0       0       0       0       0       0
  1966 ;;      Locals:         0       1       0       0       0       0       0       0
  1967 ;;      Temps:          0       3       0       0       0       0       0       0
  1968 ;;      Totals:         0       6       0       0       0       0       0       0
  1969 ;;Total ram usage:        6 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    5
  1972 ;; This function calls:
  1973 ;;		___awdiv
  1974 ;;		___awmod
  1975 ;; This function is called by:
  1976 ;;		_UART_Main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           psect	text713
  1980                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  1981                           	line	21
  1982                           	global	__size_of_setSegmentDisplayNumber
  1983  0153                     	__size_of_setSegmentDisplayNumber	equ	__end_of_setSegmentDisplayNumber-_setSegmentDispl
                                 ayNumber
  1984                           	
  1985  0015                     _setSegmentDisplayNumber:	
  1986                           	opt	stack 9
  1987                           ; Regs used in _setSegmentDisplayNumber: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  1988                           	line	23
  1989                           	
  1990  0015                     l8066:	
  1991                           ;SegmentDisplay_A2.c: 22: char i;
  1992                           ;SegmentDisplay_A2.c: 23: if(Segment->Enable)
  1993  0015  0020               	movlb 0	; select bank0
  1994  0016  0858               	movf	(_Segment),w
  1995  0017  3E15               	addlw	015h
  1996  0018  0086               	movwf	fsr1l
  1997  0019  0187               	clrf fsr1h	
  1998                           	
  1999  001A  1C01               	btfss	indf1,0
  2000  001B  281D               	goto	u4931
  2001  001C  281E               	goto	u4930
  2002  001D                     u4931:
  2003  001D  2967               	goto	l3305
  2004  001E                     u4930:
  2005                           	line	25
  2006                           	
  2007  001E                     l8068:	
  2008                           ;SegmentDisplay_A2.c: 24: {
  2009                           ;SegmentDisplay_A2.c: 25: Segment->GO=1;
  2010  001E  0858               	movf	(_Segment),w
  2011  001F  3E15               	addlw	015h
  2012  0020  0086               	movwf	fsr1l
  2013  0021  0187               	clrf fsr1h	
  2014                           	
  2015  0022  1481               	bsf	indf1,1
  2016                           	line	26
  2017                           ;SegmentDisplay_A2.c: 26: if(Segment->Hex)
  2018  0023  0858               	movf	(_Segment),w
  2019  0024  3E15               	addlw	015h
  2020  0025  0086               	movwf	fsr1l
  2021  0026  0187               	clrf fsr1h	
  2022                           	
  2023  0027  1D01               	btfss	indf1,2
  2024  0028  282A               	goto	u4941
  2025  0029  282B               	goto	u4940
  2026  002A                     u4941:
  2027  002A  2866               	goto	l8076
  2028  002B                     u4940:
  2029                           	line	28
  2030                           	
  2031  002B                     l8070:	
  2032                           ;SegmentDisplay_A2.c: 27: {
  2033                           ;SegmentDisplay_A2.c: 28: Segment->Num[0]=(number & 0x000f);
  2034  002B  082D               	movf	(setSegmentDisplayNumber@number),w
  2035  002C  390F               	andlw	0Fh
  2036  002D  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2037  002E  0858               	movf	(_Segment),w
  2038  002F  3E11               	addlw	011h
  2039  0030  0086               	movwf	fsr1l
  2040  0031  0187               	clrf fsr1h	
  2041                           	
  2042  0032  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2043  0033  0081               	movwf	indf1
  2044                           	line	29
  2045                           	
  2046  0034                     l8072:	
  2047                           ;SegmentDisplay_A2.c: 29: Segment->Num[1]=((number>>4)&0x000f);
  2048  0034  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2049  0035  00B0               	movwf	(??_setSegmentDisplayNumber+0)+0+1
  2050  0036  082D               	movf	(setSegmentDisplayNumber@number),w
  2051  0037  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2052  0038  3004               	movlw	04h
  2053  0039  00FF               	movwf	btemp+1
  2054  003A                     u4955:
  2055  003A  0D30               	rlf	(??_setSegmentDisplayNumber+0)+1,w
  2056  003B  0CB0               	rrf	(??_setSegmentDisplayNumber+0)+1,f
  2057  003C  0CAF               	rrf	(??_setSegmentDisplayNumber+0)+0,f
  2058  003D  0BFF               	decfsz	btemp+1,f
  2059  003E  283A               	goto	u4955
  2060  003F  082F               	movf	0+(??_setSegmentDisplayNumber+0)+0,w
  2061  0040  390F               	andlw	0Fh
  2062  0041  00B1               	movwf	(??_setSegmentDisplayNumber+2)+0
  2063  0042  0858               	movf	(_Segment),w
  2064  0043  3E12               	addlw	012h
  2065  0044  0086               	movwf	fsr1l
  2066  0045  0187               	clrf fsr1h	
  2067                           	
  2068  0046  0831               	movf	(??_setSegmentDisplayNumber+2)+0,w
  2069  0047  0081               	movwf	indf1
  2070                           	line	30
  2071                           	
  2072  0048                     l8074:	
  2073                           ;SegmentDisplay_A2.c: 30: Segment->Num[2]=((number>>8)&0x000f);
  2074  0048  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2075  0049  390F               	andlw	0Fh
  2076  004A  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2077  004B  0858               	movf	(_Segment),w
  2078  004C  3E13               	addlw	013h
  2079  004D  0086               	movwf	fsr1l
  2080  004E  0187               	clrf fsr1h	
  2081                           	
  2082  004F  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2083  0050  0081               	movwf	indf1
  2084                           	line	31
  2085                           ;SegmentDisplay_A2.c: 31: Segment->Num[3]=((number>>12)&0x000f);
  2086  0051  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2087  0052  00B0               	movwf	(??_setSegmentDisplayNumber+0)+0+1
  2088  0053  082D               	movf	(setSegmentDisplayNumber@number),w
  2089  0054  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2090  0055  300C               	movlw	0Ch
  2091  0056  00FF               	movwf	btemp+1
  2092  0057                     u4965:
  2093  0057  0D30               	rlf	(??_setSegmentDisplayNumber+0)+1,w
  2094  0058  0CB0               	rrf	(??_setSegmentDisplayNumber+0)+1,f
  2095  0059  0CAF               	rrf	(??_setSegmentDisplayNumber+0)+0,f
  2096  005A  0BFF               	decfsz	btemp+1,f
  2097  005B  2857               	goto	u4965
  2098  005C  082F               	movf	0+(??_setSegmentDisplayNumber+0)+0,w
  2099  005D  390F               	andlw	0Fh
  2100  005E  00B1               	movwf	(??_setSegmentDisplayNumber+2)+0
  2101  005F  0858               	movf	(_Segment),w
  2102  0060  3E14               	addlw	014h
  2103  0061  0086               	movwf	fsr1l
  2104  0062  0187               	clrf fsr1h	
  2105                           	
  2106  0063  0831               	movf	(??_setSegmentDisplayNumber+2)+0,w
  2107  0064  0081               	movwf	indf1
  2108                           	line	32
  2109                           ;SegmentDisplay_A2.c: 32: }
  2110  0065  2926               	goto	l8104
  2111                           	line	33
  2112                           	
  2113  0066                     l3292:	
  2114                           	
  2115  0066                     l8076:	
  2116                           ;SegmentDisplay_A2.c: 33: else if(Segment->Dec)
  2117  0066  0858               	movf	(_Segment),w
  2118  0067  3E15               	addlw	015h
  2119  0068  0086               	movwf	fsr1l
  2120  0069  0187               	clrf fsr1h	
  2121                           	
  2122  006A  1D81               	btfss	indf1,3
  2123  006B  286D               	goto	u4971
  2124  006C  286E               	goto	u4970
  2125  006D                     u4971:
  2126  006D  2926               	goto	l8104
  2127  006E                     u4970:
  2128                           	line	35
  2129                           	
  2130  006E                     l8078:	
  2131                           ;SegmentDisplay_A2.c: 34: {
  2132                           ;SegmentDisplay_A2.c: 35: if(number > 0x270f)
  2133  006E  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2134  006F  3A80               	xorlw	80h
  2135  0070  00FF               	movwf	btemp+1
  2136  0071  30A7               	movlw	(high(02710h))^80h
  2137  0072  027F               	subwf	btemp+1,w
  2138  0073  1D03               	skipz
  2139  0074  2877               	goto	u4985
  2140  0075  3010               	movlw	low(02710h)
  2141  0076  022D               	subwf	(setSegmentDisplayNumber@number),w
  2142  0077                     u4985:
  2143                           
  2144  0077  1C03               	skipc
  2145  0078  287A               	goto	u4981
  2146  0079  287B               	goto	u4980
  2147  007A                     u4981:
  2148  007A  289C               	goto	l8092
  2149  007B                     u4980:
  2150                           	line	37
  2151                           	
  2152  007B                     l8080:	
  2153                           ;SegmentDisplay_A2.c: 36: {
  2154                           ;SegmentDisplay_A2.c: 37: for(i=0 ; i<4; i++)
  2155  007B  0020               	movlb 0	; select bank0
  2156  007C  01B2               	clrf	(setSegmentDisplayNumber@i)
  2157                           	
  2158  007D                     l8082:	
  2159  007D  3004               	movlw	(04h)
  2160  007E  0232               	subwf	(setSegmentDisplayNumber@i),w
  2161  007F  1C03               	skipc
  2162  0080  2882               	goto	u4991
  2163  0081  2883               	goto	u4990
  2164  0082                     u4991:
  2165  0082  2885               	goto	l8086
  2166  0083                     u4990:
  2167  0083  2926               	goto	l8104
  2168                           	
  2169  0084                     l8084:	
  2170  0084  2926               	goto	l8104
  2171                           	line	38
  2172                           	
  2173  0085                     l3296:	
  2174                           	line	39
  2175                           	
  2176  0085                     l8086:	
  2177                           ;SegmentDisplay_A2.c: 38: {
  2178                           ;SegmentDisplay_A2.c: 39: Segment->Num[i]=16;
  2179  0085  3010               	movlw	(010h)
  2180  0086  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2181  0087  0832               	movf	(setSegmentDisplayNumber@i),w
  2182  0088  3E11               	addlw	011h
  2183  0089  0758               	addwf	(_Segment),w
  2184  008A  00B0               	movwf	(??_setSegmentDisplayNumber+1)+0
  2185  008B  0830               	movf	0+(??_setSegmentDisplayNumber+1)+0,w
  2186  008C  0086               	movwf	fsr1l
  2187  008D  0187               	clrf fsr1h	
  2188                           	
  2189  008E  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2190  008F  0081               	movwf	indf1
  2191                           	line	37
  2192                           	
  2193  0090                     l8088:	
  2194  0090  3001               	movlw	(01h)
  2195  0091  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2196  0092  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2197  0093  07B2               	addwf	(setSegmentDisplayNumber@i),f
  2198                           	
  2199  0094                     l8090:	
  2200  0094  3004               	movlw	(04h)
  2201  0095  0232               	subwf	(setSegmentDisplayNumber@i),w
  2202  0096  1C03               	skipc
  2203  0097  2899               	goto	u5001
  2204  0098  289A               	goto	u5000
  2205  0099                     u5001:
  2206  0099  2885               	goto	l8086
  2207  009A                     u5000:
  2208  009A  2926               	goto	l8104
  2209                           	
  2210  009B                     l3297:	
  2211                           	line	41
  2212                           ;SegmentDisplay_A2.c: 40: }
  2213                           ;SegmentDisplay_A2.c: 41: }
  2214  009B  2926               	goto	l8104
  2215                           	line	42
  2216                           	
  2217  009C                     l3295:	
  2218                           	line	44
  2219                           	
  2220  009C                     l8092:	
  2221                           ;SegmentDisplay_A2.c: 42: else
  2222                           ;SegmentDisplay_A2.c: 43: {
  2223                           ;SegmentDisplay_A2.c: 44: Segment->Num[3]=(number/1000);
  2224  009C  30E8               	movlw	low(03E8h)
  2225  009D  0020               	movlb 0	; select bank0
  2226  009E  00A4               	movwf	(?___awdiv)
  2227  009F  3003               	movlw	high(03E8h)
  2228  00A0  00A5               	movwf	((?___awdiv))+1
  2229  00A1  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2230  00A2  01A7               	clrf	1+(?___awdiv)+02h
  2231  00A3  07A7               	addwf	1+(?___awdiv)+02h
  2232  00A4  082D               	movf	(setSegmentDisplayNumber@number),w
  2233  00A5  01A6               	clrf	0+(?___awdiv)+02h
  2234  00A6  07A6               	addwf	0+(?___awdiv)+02h
  2235                           
  2236  00A7  3185  25A8  3180   	fcall	___awdiv
  2237  00AA  0020               	movlb 0	; select bank0
  2238  00AB  0824               	movf	(0+(?___awdiv)),w
  2239  00AC  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2240  00AD  0858               	movf	(_Segment),w
  2241  00AE  3E14               	addlw	014h
  2242  00AF  0086               	movwf	fsr1l
  2243  00B0  0187               	clrf fsr1h	
  2244                           	
  2245  00B1  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2246  00B2  0081               	movwf	indf1
  2247                           	line	45
  2248                           	
  2249  00B3                     l8094:	
  2250                           ;SegmentDisplay_A2.c: 45: number%=1000;
  2251  00B3  30E8               	movlw	low(03E8h)
  2252  00B4  00A4               	movwf	(?___awmod)
  2253  00B5  3003               	movlw	high(03E8h)
  2254  00B6  00A5               	movwf	((?___awmod))+1
  2255  00B7  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2256  00B8  01A7               	clrf	1+(?___awmod)+02h
  2257  00B9  07A7               	addwf	1+(?___awmod)+02h
  2258  00BA  082D               	movf	(setSegmentDisplayNumber@number),w
  2259  00BB  01A6               	clrf	0+(?___awmod)+02h
  2260  00BC  07A6               	addwf	0+(?___awmod)+02h
  2261                           
  2262  00BD  3186  26E5  3180   	fcall	___awmod
  2263  00C0  0020               	movlb 0	; select bank0
  2264  00C1  0825               	movf	(1+(?___awmod)),w
  2265  00C2  01AE               	clrf	(setSegmentDisplayNumber@number+1)
  2266  00C3  07AE               	addwf	(setSegmentDisplayNumber@number+1)
  2267  00C4  0824               	movf	(0+(?___awmod)),w
  2268  00C5  01AD               	clrf	(setSegmentDisplayNumber@number)
  2269  00C6  07AD               	addwf	(setSegmentDisplayNumber@number)
  2270                           
  2271                           	line	46
  2272                           	
  2273  00C7                     l8096:	
  2274                           ;SegmentDisplay_A2.c: 46: Segment->Num[2]=(number/100);
  2275  00C7  3064               	movlw	low(064h)
  2276  00C8  00A4               	movwf	(?___awdiv)
  2277  00C9  3000               	movlw	high(064h)
  2278  00CA  00A5               	movwf	((?___awdiv))+1
  2279  00CB  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2280  00CC  01A7               	clrf	1+(?___awdiv)+02h
  2281  00CD  07A7               	addwf	1+(?___awdiv)+02h
  2282  00CE  082D               	movf	(setSegmentDisplayNumber@number),w
  2283  00CF  01A6               	clrf	0+(?___awdiv)+02h
  2284  00D0  07A6               	addwf	0+(?___awdiv)+02h
  2285                           
  2286  00D1  3185  25A8  3180   	fcall	___awdiv
  2287  00D4  0020               	movlb 0	; select bank0
  2288  00D5  0824               	movf	(0+(?___awdiv)),w
  2289  00D6  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2290  00D7  0858               	movf	(_Segment),w
  2291  00D8  3E13               	addlw	013h
  2292  00D9  0086               	movwf	fsr1l
  2293  00DA  0187               	clrf fsr1h	
  2294                           	
  2295  00DB  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2296  00DC  0081               	movwf	indf1
  2297                           	line	47
  2298                           ;SegmentDisplay_A2.c: 47: number%=100;
  2299  00DD  3064               	movlw	low(064h)
  2300  00DE  00A4               	movwf	(?___awmod)
  2301  00DF  3000               	movlw	high(064h)
  2302  00E0  00A5               	movwf	((?___awmod))+1
  2303  00E1  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2304  00E2  01A7               	clrf	1+(?___awmod)+02h
  2305  00E3  07A7               	addwf	1+(?___awmod)+02h
  2306  00E4  082D               	movf	(setSegmentDisplayNumber@number),w
  2307  00E5  01A6               	clrf	0+(?___awmod)+02h
  2308  00E6  07A6               	addwf	0+(?___awmod)+02h
  2309                           
  2310  00E7  3186  26E5  3180   	fcall	___awmod
  2311  00EA  0020               	movlb 0	; select bank0
  2312  00EB  0825               	movf	(1+(?___awmod)),w
  2313  00EC  01AE               	clrf	(setSegmentDisplayNumber@number+1)
  2314  00ED  07AE               	addwf	(setSegmentDisplayNumber@number+1)
  2315  00EE  0824               	movf	(0+(?___awmod)),w
  2316  00EF  01AD               	clrf	(setSegmentDisplayNumber@number)
  2317  00F0  07AD               	addwf	(setSegmentDisplayNumber@number)
  2318                           
  2319                           	line	48
  2320                           	
  2321  00F1                     l8098:	
  2322                           ;SegmentDisplay_A2.c: 48: Segment->Num[1]=(number/10);
  2323  00F1  300A               	movlw	low(0Ah)
  2324  00F2  00A4               	movwf	(?___awdiv)
  2325  00F3  3000               	movlw	high(0Ah)
  2326  00F4  00A5               	movwf	((?___awdiv))+1
  2327  00F5  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2328  00F6  01A7               	clrf	1+(?___awdiv)+02h
  2329  00F7  07A7               	addwf	1+(?___awdiv)+02h
  2330  00F8  082D               	movf	(setSegmentDisplayNumber@number),w
  2331  00F9  01A6               	clrf	0+(?___awdiv)+02h
  2332  00FA  07A6               	addwf	0+(?___awdiv)+02h
  2333                           
  2334  00FB  3185  25A8  3180   	fcall	___awdiv
  2335  00FE  0020               	movlb 0	; select bank0
  2336  00FF  0824               	movf	(0+(?___awdiv)),w
  2337  0100  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2338  0101  0858               	movf	(_Segment),w
  2339  0102  3E12               	addlw	012h
  2340  0103  0086               	movwf	fsr1l
  2341  0104  0187               	clrf fsr1h	
  2342                           	
  2343  0105  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2344  0106  0081               	movwf	indf1
  2345                           	line	49
  2346                           	
  2347  0107                     l8100:	
  2348                           ;SegmentDisplay_A2.c: 49: number%=10;
  2349  0107  300A               	movlw	low(0Ah)
  2350  0108  00A4               	movwf	(?___awmod)
  2351  0109  3000               	movlw	high(0Ah)
  2352  010A  00A5               	movwf	((?___awmod))+1
  2353  010B  082E               	movf	(setSegmentDisplayNumber@number+1),w
  2354  010C  01A7               	clrf	1+(?___awmod)+02h
  2355  010D  07A7               	addwf	1+(?___awmod)+02h
  2356  010E  082D               	movf	(setSegmentDisplayNumber@number),w
  2357  010F  01A6               	clrf	0+(?___awmod)+02h
  2358  0110  07A6               	addwf	0+(?___awmod)+02h
  2359                           
  2360  0111  3186  26E5  3180   	fcall	___awmod
  2361  0114  0020               	movlb 0	; select bank0
  2362  0115  0825               	movf	(1+(?___awmod)),w
  2363  0116  01AE               	clrf	(setSegmentDisplayNumber@number+1)
  2364  0117  07AE               	addwf	(setSegmentDisplayNumber@number+1)
  2365  0118  0824               	movf	(0+(?___awmod)),w
  2366  0119  01AD               	clrf	(setSegmentDisplayNumber@number)
  2367  011A  07AD               	addwf	(setSegmentDisplayNumber@number)
  2368                           
  2369                           	line	50
  2370                           	
  2371  011B                     l8102:	
  2372                           ;SegmentDisplay_A2.c: 50: Segment->Num[0]=number;
  2373  011B  082D               	movf	(setSegmentDisplayNumber@number),w
  2374  011C  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2375  011D  0858               	movf	(_Segment),w
  2376  011E  3E11               	addlw	011h
  2377  011F  0086               	movwf	fsr1l
  2378  0120  0187               	clrf fsr1h	
  2379                           	
  2380  0121  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2381  0122  0081               	movwf	indf1
  2382  0123  2926               	goto	l8104
  2383                           	line	51
  2384                           	
  2385  0124                     l3298:	
  2386  0124  2926               	goto	l8104
  2387                           	line	52
  2388                           	
  2389  0125                     l3294:	
  2390  0125  2926               	goto	l8104
  2391                           	line	53
  2392                           	
  2393  0126                     l3293:	
  2394                           	
  2395  0126                     l8104:	
  2396                           ;SegmentDisplay_A2.c: 51: }
  2397                           ;SegmentDisplay_A2.c: 52: }
  2398                           ;SegmentDisplay_A2.c: 53: if(Segment->Num[3] > 0)
  2399  0126  0858               	movf	(_Segment),w
  2400  0127  3E14               	addlw	014h
  2401  0128  0086               	movwf	fsr1l
  2402  0129  0187               	clrf fsr1h	
  2403                           	
  2404  012A  0801               	movf	indf1,w
  2405  012B  3A00               	xorlw	0&0ffh
  2406  012C  1903               	skipnz
  2407  012D  292F               	goto	u5011
  2408  012E  2930               	goto	u5010
  2409  012F                     u5011:
  2410  012F  2939               	goto	l8108
  2411  0130                     u5010:
  2412                           	line	55
  2413                           	
  2414  0130                     l8106:	
  2415                           ;SegmentDisplay_A2.c: 54: {
  2416                           ;SegmentDisplay_A2.c: 55: Segment->DisplayCount=3;
  2417  0130  3003               	movlw	(03h)
  2418  0131  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2419  0132  0858               	movf	(_Segment),w
  2420  0133  3E17               	addlw	017h
  2421  0134  0086               	movwf	fsr1l
  2422  0135  0187               	clrf fsr1h	
  2423                           	
  2424  0136  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2425  0137  0081               	movwf	indf1
  2426                           	line	56
  2427                           ;SegmentDisplay_A2.c: 56: }
  2428  0138  2967               	goto	l3305
  2429                           	line	57
  2430                           	
  2431  0139                     l3299:	
  2432                           	
  2433  0139                     l8108:	
  2434                           ;SegmentDisplay_A2.c: 57: else if(Segment->Num[2] > 0)
  2435  0139  0858               	movf	(_Segment),w
  2436  013A  3E13               	addlw	013h
  2437  013B  0086               	movwf	fsr1l
  2438  013C  0187               	clrf fsr1h	
  2439                           	
  2440  013D  0801               	movf	indf1,w
  2441  013E  3A00               	xorlw	0&0ffh
  2442  013F  1903               	skipnz
  2443  0140  2942               	goto	u5021
  2444  0141  2943               	goto	u5020
  2445  0142                     u5021:
  2446  0142  294C               	goto	l8112
  2447  0143                     u5020:
  2448                           	line	59
  2449                           	
  2450  0143                     l8110:	
  2451                           ;SegmentDisplay_A2.c: 58: {
  2452                           ;SegmentDisplay_A2.c: 59: Segment->DisplayCount=2;
  2453  0143  3002               	movlw	(02h)
  2454  0144  00AF               	movwf	(??_setSegmentDisplayNumber+0)+0
  2455  0145  0858               	movf	(_Segment),w
  2456  0146  3E17               	addlw	017h
  2457  0147  0086               	movwf	fsr1l
  2458  0148  0187               	clrf fsr1h	
  2459                           	
  2460  0149  082F               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2461  014A  0081               	movwf	indf1
  2462                           	line	60
  2463                           ;SegmentDisplay_A2.c: 60: }
  2464  014B  2967               	goto	l3305
  2465                           	line	61
  2466                           	
  2467  014C                     l3301:	
  2468                           	
  2469  014C                     l8112:	
  2470                           ;SegmentDisplay_A2.c: 61: else if(Segment->Num[1] > 0)
  2471  014C  0858               	movf	(_Segment),w
  2472  014D  3E12               	addlw	012h
  2473  014E  0086               	movwf	fsr1l
  2474  014F  0187               	clrf fsr1h	
  2475                           	
  2476  0150  0801               	movf	indf1,w
  2477  0151  3A00               	xorlw	0&0ffh
  2478  0152  1903               	skipnz
  2479  0153  2955               	goto	u5031
  2480  0154  2956               	goto	u5030
  2481  0155                     u5031:
  2482  0155  295E               	goto	l8116
  2483  0156                     u5030:
  2484                           	line	63
  2485                           	
  2486  0156                     l8114:	
  2487                           ;SegmentDisplay_A2.c: 62: {
  2488                           ;SegmentDisplay_A2.c: 63: Segment->DisplayCount=1;
  2489  0156  0858               	movf	(_Segment),w
  2490  0157  3E17               	addlw	017h
  2491  0158  0086               	movwf	fsr1l
  2492  0159  0187               	clrf fsr1h	
  2493                           	
  2494  015A  0181               	clrf	indf1
  2495  015B  1403               	bsf	status,0
  2496  015C  0D81               	rlf	indf1,f
  2497                           	line	64
  2498                           ;SegmentDisplay_A2.c: 64: }
  2499  015D  2967               	goto	l3305
  2500                           	line	65
  2501                           	
  2502  015E                     l3303:	
  2503                           	line	67
  2504                           	
  2505  015E                     l8116:	
  2506                           ;SegmentDisplay_A2.c: 65: else
  2507                           ;SegmentDisplay_A2.c: 66: {
  2508                           ;SegmentDisplay_A2.c: 67: Segment->DisplayCount=0;
  2509  015E  0858               	movf	(_Segment),w
  2510  015F  3E17               	addlw	017h
  2511  0160  0086               	movwf	fsr1l
  2512  0161  0187               	clrf fsr1h	
  2513                           	
  2514  0162  0181               	clrf	indf1
  2515  0163  2967               	goto	l3305
  2516                           	line	68
  2517                           	
  2518  0164                     l3304:	
  2519  0164  2967               	goto	l3305
  2520                           	
  2521  0165                     l3302:	
  2522  0165  2967               	goto	l3305
  2523                           	
  2524  0166                     l3300:	
  2525  0166  2967               	goto	l3305
  2526                           	line	69
  2527                           	
  2528  0167                     l3291:	
  2529                           	line	70
  2530                           	
  2531  0167                     l3305:	
  2532  0167  0008               	return
  2533                           	opt stack 0
  2534                           GLOBAL	__end_of_setSegmentDisplayNumber
  2535  0168                     	__end_of_setSegmentDisplayNumber:
  2536 ;; =============== function _setSegmentDisplayNumber ends ============
  2537                           
  2538                           	signat	_setSegmentDisplayNumber,4216
  2539                           	global	_I2C_Main
  2540                           psect	text714,local,class=CODE,delta=2
  2541                           global __ptext714
  2542  0422                     __ptext714:
  2543                           
  2544 ;; *************** function _I2C_Main *****************
  2545 ;; Defined at:
  2546 ;;		line 442 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  i               1   10[BANK0 ] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2560 ;;      Params:         0       0       0       0       0       0       0       0
  2561 ;;      Locals:         0       1       0       0       0       0       0       0
  2562 ;;      Temps:          0       3       0       0       0       0       0       0
  2563 ;;      Totals:         0       4       0       0       0       0       0       0
  2564 ;;Total ram usage:        4 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    5
  2567 ;; This function calls:
  2568 ;;		_I2C_Master_Reception
  2569 ;;		_I2C_Master_Transmission
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           psect	text714
  2575                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2576                           	line	442
  2577                           	global	__size_of_I2C_Main
  2578  008A                     	__size_of_I2C_Main	equ	__end_of_I2C_Main-_I2C_Main
  2579                           	
  2580  0422                     _I2C_Main:	
  2581                           	opt	stack 10
  2582                           ; Regs used in _I2C_Main: [wreg+fsr1l-status,0+pclath+cstack]
  2583                           	line	468
  2584                           	
  2585  0422                     l8030:	
  2586                           ;MCU_B1.c: 443: char i;
  2587                           ;MCU_B1.c: 468: if(I2C->MasterRxGO)
  2588  0422  0020               	movlb 0	; select bank0
  2589  0423  0856               	movf	(_I2C),w
  2590  0424  3E42               	addlw	042h
  2591  0425  0086               	movwf	fsr1l
  2592  0426  3001               	movlw 1	; select bank2/3
  2593  0427  0087               	movwf fsr1h	
  2594                           	
  2595  0428  1E01               	btfss	indf1,4
  2596  0429  2C2B               	goto	u4861
  2597  042A  2C2C               	goto	u4860
  2598  042B                     u4861:
  2599  042B  2C6C               	goto	l1061
  2600  042C                     u4860:
  2601                           	line	470
  2602                           	
  2603  042C                     l8032:	
  2604                           ;MCU_B1.c: 469: {
  2605                           ;MCU_B1.c: 470: I2C->MasterRxGO=0;
  2606  042C  0856               	movf	(_I2C),w
  2607  042D  3E42               	addlw	042h
  2608  042E  0086               	movwf	fsr1l
  2609  042F  3001               	movlw 1	; select bank2/3
  2610  0430  0087               	movwf fsr1h	
  2611                           	
  2612  0431  1201               	bcf	indf1,4
  2613                           	line	471
  2614                           	
  2615  0432                     l8034:	
  2616                           ;MCU_B1.c: 471: I2C_Master_Reception();
  2617  0432  3183  238B  3184   	fcall	_I2C_Master_Reception
  2618                           	line	472
  2619                           	
  2620  0435                     l8036:	
  2621                           ;MCU_B1.c: 472: TMain->Test=1;
  2622  0435  0020               	movlb 0	; select bank0
  2623  0436  0859               	movf	(_TMain),w
  2624  0437  3E0C               	addlw	0Ch
  2625  0438  0086               	movwf	fsr1l
  2626  0439  0187               	clrf fsr1h	
  2627                           	
  2628  043A  0181               	clrf	indf1
  2629  043B  1403               	bsf	status,0
  2630  043C  0D81               	rlf	indf1,f
  2631                           	line	473
  2632                           	
  2633  043D                     l8038:	
  2634                           ;MCU_B1.c: 473: RA1=~RA1;
  2635  043D  3002               	movlw	1<<((97)&7)
  2636  043E  068C               	xorwf	((97)/8),f
  2637                           	line	475
  2638                           	
  2639  043F                     l8040:	
  2640                           ;MCU_B1.c: 475: for(i=0;i<32;i++)
  2641  043F  01AA               	clrf	(I2C_Main@i)
  2642                           	
  2643  0440                     l8042:	
  2644  0440  3020               	movlw	(020h)
  2645  0441  022A               	subwf	(I2C_Main@i),w
  2646  0442  1C03               	skipc
  2647  0443  2C45               	goto	u4871
  2648  0444  2C46               	goto	u4870
  2649  0445                     u4871:
  2650  0445  2C48               	goto	l8046
  2651  0446                     u4870:
  2652  0446  2C65               	goto	l8052
  2653                           	
  2654  0447                     l8044:	
  2655  0447  2C65               	goto	l8052
  2656                           	line	476
  2657                           	
  2658  0448                     l1062:	
  2659                           	line	477
  2660                           	
  2661  0448                     l8046:	
  2662                           ;MCU_B1.c: 476: {
  2663                           ;MCU_B1.c: 477: UART->TxData[i]=I2C->BufferReader[i];
  2664  0448  082A               	movf	(I2C_Main@i),w
  2665  0449  0756               	addwf	(_I2C),w
  2666  044A  00A7               	movwf	(??_I2C_Main+0)+0
  2667  044B  0827               	movf	0+(??_I2C_Main+0)+0,w
  2668  044C  0086               	movwf	fsr1l
  2669  044D  3001               	movlw 1	; select bank2/3
  2670  044E  0087               	movwf fsr1h	
  2671                           	
  2672  044F  0801               	movf	indf1,w
  2673  0450  00A8               	movwf	(??_I2C_Main+1)+0
  2674  0451  082A               	movf	(I2C_Main@i),w
  2675  0452  075B               	addwf	(_UART),w
  2676  0453  00A9               	movwf	(??_I2C_Main+2)+0
  2677  0454  0829               	movf	0+(??_I2C_Main+2)+0,w
  2678  0455  0086               	movwf	fsr1l
  2679  0456  3001               	movlw 1	; select bank2/3
  2680  0457  0087               	movwf fsr1h	
  2681                           	
  2682  0458  0828               	movf	(??_I2C_Main+1)+0,w
  2683  0459  0081               	movwf	indf1
  2684                           	line	475
  2685                           	
  2686  045A                     l8048:	
  2687  045A  3001               	movlw	(01h)
  2688  045B  00A7               	movwf	(??_I2C_Main+0)+0
  2689  045C  0827               	movf	(??_I2C_Main+0)+0,w
  2690  045D  07AA               	addwf	(I2C_Main@i),f
  2691                           	
  2692  045E                     l8050:	
  2693  045E  3020               	movlw	(020h)
  2694  045F  022A               	subwf	(I2C_Main@i),w
  2695  0460  1C03               	skipc
  2696  0461  2C63               	goto	u4881
  2697  0462  2C64               	goto	u4880
  2698  0463                     u4881:
  2699  0463  2C48               	goto	l8046
  2700  0464                     u4880:
  2701  0464  2C65               	goto	l8052
  2702                           	
  2703  0465                     l1063:	
  2704                           	line	479
  2705                           	
  2706  0465                     l8052:	
  2707                           ;MCU_B1.c: 478: }
  2708                           ;MCU_B1.c: 479: UART->TxGO=1;
  2709  0465  085B               	movf	(_UART),w
  2710  0466  3E43               	addlw	043h
  2711  0467  0086               	movwf	fsr1l
  2712  0468  3001               	movlw 1	; select bank2/3
  2713  0469  0087               	movwf fsr1h	
  2714                           	
  2715  046A  1401               	bsf	indf1,0
  2716                           	line	481
  2717                           ;MCU_B1.c: 481: }
  2718  046B  2CAB               	goto	l1070
  2719                           	line	482
  2720                           	
  2721  046C                     l1061:	
  2722                           	line	484
  2723                           ;MCU_B1.c: 482: else
  2724                           ;MCU_B1.c: 483: {
  2725                           ;MCU_B1.c: 484: if(RC0)
  2726  046C  1C0E               	btfss	(112/8),(112)&7
  2727  046D  2C6F               	goto	u4891
  2728  046E  2C70               	goto	u4890
  2729  046F                     u4891:
  2730  046F  2C87               	goto	l8058
  2731  0470                     u4890:
  2732                           	line	486
  2733                           	
  2734  0470                     l8054:	
  2735                           ;MCU_B1.c: 485: {
  2736                           ;MCU_B1.c: 486: if(!I2C->SS)
  2737  0470  0856               	movf	(_I2C),w
  2738  0471  3E42               	addlw	042h
  2739  0472  0086               	movwf	fsr1l
  2740  0473  3001               	movlw 1	; select bank2/3
  2741  0474  0087               	movwf fsr1h	
  2742                           	
  2743  0475  1A81               	btfsc	indf1,5
  2744  0476  2C78               	goto	u4901
  2745  0477  2C79               	goto	u4900
  2746  0478                     u4901:
  2747  0478  2CAB               	goto	l1070
  2748  0479                     u4900:
  2749                           	line	488
  2750                           	
  2751  0479                     l8056:	
  2752                           ;MCU_B1.c: 487: {
  2753                           ;MCU_B1.c: 488: I2C->SS=1;
  2754  0479  0856               	movf	(_I2C),w
  2755  047A  3E42               	addlw	042h
  2756  047B  0086               	movwf	fsr1l
  2757  047C  3001               	movlw 1	; select bank2/3
  2758  047D  0087               	movwf fsr1h	
  2759                           	
  2760  047E  1681               	bsf	indf1,5
  2761                           	line	489
  2762                           ;MCU_B1.c: 489: I2C->MasterRxGO=1;
  2763  047F  0856               	movf	(_I2C),w
  2764  0480  3E42               	addlw	042h
  2765  0481  0086               	movwf	fsr1l
  2766  0482  3001               	movlw 1	; select bank2/3
  2767  0483  0087               	movwf fsr1h	
  2768                           	
  2769  0484  1601               	bsf	indf1,4
  2770  0485  2CAB               	goto	l1070
  2771                           	line	490
  2772                           	
  2773  0486                     l1066:	
  2774                           	line	491
  2775                           ;MCU_B1.c: 490: }
  2776                           ;MCU_B1.c: 491: }
  2777  0486  2CAB               	goto	l1070
  2778                           	line	492
  2779                           	
  2780  0487                     l1065:	
  2781                           	line	494
  2782                           	
  2783  0487                     l8058:	
  2784                           ;MCU_B1.c: 492: else
  2785                           ;MCU_B1.c: 493: {
  2786                           ;MCU_B1.c: 494: if(I2C->SS)
  2787  0487  0856               	movf	(_I2C),w
  2788  0488  3E42               	addlw	042h
  2789  0489  0086               	movwf	fsr1l
  2790  048A  3001               	movlw 1	; select bank2/3
  2791  048B  0087               	movwf fsr1h	
  2792                           	
  2793  048C  1E81               	btfss	indf1,5
  2794  048D  2C8F               	goto	u4911
  2795  048E  2C90               	goto	u4910
  2796  048F                     u4911:
  2797  048F  2C96               	goto	l1068
  2798  0490                     u4910:
  2799                           	line	496
  2800                           	
  2801  0490                     l8060:	
  2802                           ;MCU_B1.c: 495: {
  2803                           ;MCU_B1.c: 496: I2C->SS=0;
  2804  0490  0856               	movf	(_I2C),w
  2805  0491  3E42               	addlw	042h
  2806  0492  0086               	movwf	fsr1l
  2807  0493  3001               	movlw 1	; select bank2/3
  2808  0494  0087               	movwf fsr1h	
  2809                           	
  2810  0495  1281               	bcf	indf1,5
  2811                           	line	497
  2812                           	
  2813  0496                     l1068:	
  2814                           	line	498
  2815                           ;MCU_B1.c: 497: }
  2816                           ;MCU_B1.c: 498: if(I2C->MasterTxGO)
  2817  0496  0856               	movf	(_I2C),w
  2818  0497  3E42               	addlw	042h
  2819  0498  0086               	movwf	fsr1l
  2820  0499  3001               	movlw 1	; select bank2/3
  2821  049A  0087               	movwf fsr1h	
  2822                           	
  2823  049B  1D81               	btfss	indf1,3
  2824  049C  2C9E               	goto	u4921
  2825  049D  2C9F               	goto	u4920
  2826  049E                     u4921:
  2827  049E  2CAB               	goto	l1070
  2828  049F                     u4920:
  2829                           	line	500
  2830                           	
  2831  049F                     l8062:	
  2832                           ;MCU_B1.c: 499: {
  2833                           ;MCU_B1.c: 500: I2C->MasterTxGO=0;
  2834  049F  0856               	movf	(_I2C),w
  2835  04A0  3E42               	addlw	042h
  2836  04A1  0086               	movwf	fsr1l
  2837  04A2  3001               	movlw 1	; select bank2/3
  2838  04A3  0087               	movwf fsr1h	
  2839                           	
  2840  04A4  1181               	bcf	indf1,3
  2841                           	line	501
  2842                           	
  2843  04A5                     l8064:	
  2844                           ;MCU_B1.c: 501: I2C_Master_Transmission();
  2845  04A5  3186  2681  3184   	fcall	_I2C_Master_Transmission
  2846  04A8  2CAB               	goto	l1070
  2847                           	line	502
  2848                           	
  2849  04A9                     l1069:	
  2850  04A9  2CAB               	goto	l1070
  2851                           	line	503
  2852                           	
  2853  04AA                     l1067:	
  2854  04AA  2CAB               	goto	l1070
  2855                           	line	504
  2856                           	
  2857  04AB                     l1064:	
  2858                           	line	507
  2859                           	
  2860  04AB                     l1070:	
  2861  04AB  0008               	return
  2862                           	opt stack 0
  2863                           GLOBAL	__end_of_I2C_Main
  2864  04AC                     	__end_of_I2C_Main:
  2865 ;; =============== function _I2C_Main ends ============
  2866                           
  2867                           	signat	_I2C_Main,88
  2868                           	global	_Mcu_Initialization
  2869                           psect	text715,local,class=CODE,delta=2
  2870                           global __ptext715
  2871  07ED                     __ptext715:
  2872                           
  2873 ;; *************** function _Mcu_Initialization *****************
  2874 ;; Defined at:
  2875 ;;		line 25 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2889 ;;      Params:         0       0       0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    5
  2896 ;; This function calls:
  2897 ;;		_IO_Set
  2898 ;;		_TMR1_Set
  2899 ;;		_I2C_Set
  2900 ;;		_UART_Set
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           psect	text715
  2906                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2907                           	line	25
  2908                           	global	__size_of_Mcu_Initialization
  2909  0010                     	__size_of_Mcu_Initialization	equ	__end_of_Mcu_Initialization-_Mcu_Initialization
  2910                           	
  2911  07ED                     _Mcu_Initialization:	
  2912                           	opt	stack 10
  2913                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  2914                           	line	27
  2915                           	
  2916  07ED                     l8020:	
  2917                           ;MCU_B1.c: 27: OSCCON=0x78; ;;
  2918  07ED  3078               	movlw	(078h)
  2919  07EE  0021               	movlb 1	; select bank1
  2920  07EF  0099               	movwf	(153)^080h	;volatile
  2921                           	line	29
  2922                           	
  2923  07F0                     l8022:	
  2924                           ;MCU_B1.c: 29: IO_Set();
  2925  07F0  318E  2605  3187   	fcall	_IO_Set
  2926                           	line	33
  2927                           	
  2928  07F3                     l8024:	
  2929                           ;MCU_B1.c: 31: ;;
  2930                           ;MCU_B1.c: 33: TMR1_Set();
  2931  07F3  318D  25E5  3187   	fcall	_TMR1_Set
  2932                           	line	43
  2933                           	
  2934  07F6                     l8026:	
  2935                           ;MCU_B1.c: 35: ;;
  2936                           ;MCU_B1.c: 39: ;;
  2937                           ;MCU_B1.c: 41: ;;
  2938                           ;MCU_B1.c: 43: I2C_Set();
  2939  07F6  318D  25C8  3187   	fcall	_I2C_Set
  2940                           	line	45
  2941                           	
  2942  07F9                     l8028:	
  2943                           ;MCU_B1.c: 45: UART_Set();
  2944  07F9  318E  261B  3187   	fcall	_UART_Set
  2945                           	line	48
  2946                           	
  2947  07FC                     l1037:	
  2948  07FC  0008               	return
  2949                           	opt stack 0
  2950                           GLOBAL	__end_of_Mcu_Initialization
  2951  07FD                     	__end_of_Mcu_Initialization:
  2952 ;; =============== function _Mcu_Initialization ends ============
  2953                           
  2954                           	signat	_Mcu_Initialization,88
  2955                           	global	___awmod
  2956                           psect	text716,local,class=CODE,delta=2
  2957                           global __ptext716
  2958  06E5                     __ptext716:
  2959                           
  2960 ;; *************** function ___awmod *****************
  2961 ;; Defined at:
  2962 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  divisor         2    4[BANK0 ] int 
  2965 ;;  dividend        2    6[BANK0 ] int 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  sign            1   10[BANK0 ] unsigned char 
  2968 ;;  counter         1    9[BANK0 ] unsigned char 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  2    4[BANK0 ] int 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2978 ;;      Params:         0       4       0       0       0       0       0       0
  2979 ;;      Locals:         0       2       0       0       0       0       0       0
  2980 ;;      Temps:          0       1       0       0       0       0       0       0
  2981 ;;      Totals:         0       7       0       0       0       0       0       0
  2982 ;;Total ram usage:        7 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    4
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_setSegmentDisplayNumber
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           psect	text716
  2992                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  2993                           	line	5
  2994                           	global	__size_of___awmod
  2995  0061                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  2996                           	
  2997  06E5                     ___awmod:	
  2998                           	opt	stack 9
  2999                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3000                           	line	8
  3001                           	
  3002  06E5                     l7860:	
  3003  06E5  0020               	movlb 0	; select bank0
  3004  06E6  01AA               	clrf	(___awmod@sign)
  3005                           	line	9
  3006  06E7  1FA7               	btfss	(___awmod@dividend+1),7
  3007  06E8  2EEA               	goto	u4471
  3008  06E9  2EEB               	goto	u4470
  3009  06EA                     u4471:
  3010  06EA  2EF4               	goto	l7864
  3011  06EB                     u4470:
  3012                           	line	10
  3013                           	
  3014  06EB                     l7862:	
  3015  06EB  09A6               	comf	(___awmod@dividend),f
  3016  06EC  09A7               	comf	(___awmod@dividend+1),f
  3017  06ED  0AA6               	incf	(___awmod@dividend),f
  3018  06EE  1903               	skipnz
  3019  06EF  0AA7               	incf	(___awmod@dividend+1),f
  3020                           	line	11
  3021  06F0  01AA               	clrf	(___awmod@sign)
  3022  06F1  1403               	bsf	status,0
  3023  06F2  0DAA               	rlf	(___awmod@sign),f
  3024  06F3  2EF4               	goto	l7864
  3025                           	line	12
  3026                           	
  3027  06F4                     l5586:	
  3028                           	line	13
  3029                           	
  3030  06F4                     l7864:	
  3031  06F4  1FA5               	btfss	(___awmod@divisor+1),7
  3032  06F5  2EF7               	goto	u4481
  3033  06F6  2EF8               	goto	u4480
  3034  06F7                     u4481:
  3035  06F7  2EFE               	goto	l7868
  3036  06F8                     u4480:
  3037                           	line	14
  3038                           	
  3039  06F8                     l7866:	
  3040  06F8  09A4               	comf	(___awmod@divisor),f
  3041  06F9  09A5               	comf	(___awmod@divisor+1),f
  3042  06FA  0AA4               	incf	(___awmod@divisor),f
  3043  06FB  1903               	skipnz
  3044  06FC  0AA5               	incf	(___awmod@divisor+1),f
  3045  06FD  2EFE               	goto	l7868
  3046                           	
  3047  06FE                     l5587:	
  3048                           	line	15
  3049                           	
  3050  06FE                     l7868:	
  3051  06FE  0825               	movf	(___awmod@divisor+1),w
  3052  06FF  0424               	iorwf	(___awmod@divisor),w
  3053  0700  1903               	skipnz
  3054  0701  2F03               	goto	u4491
  3055  0702  2F04               	goto	u4490
  3056  0703                     u4491:
  3057  0703  2F34               	goto	l7886
  3058  0704                     u4490:
  3059                           	line	16
  3060                           	
  3061  0704                     l7870:	
  3062  0704  01A9               	clrf	(___awmod@counter)
  3063  0705  1403               	bsf	status,0
  3064  0706  0DA9               	rlf	(___awmod@counter),f
  3065                           	line	17
  3066  0707  2F12               	goto	l7876
  3067                           	
  3068  0708                     l5590:	
  3069                           	line	18
  3070                           	
  3071  0708                     l7872:	
  3072  0708  3001               	movlw	01h
  3073                           	
  3074  0709                     u4505:
  3075  0709  35A4               	lslf	(___awmod@divisor),f
  3076  070A  0DA5               	rlf	(___awmod@divisor+1),f
  3077  070B  0B89               	decfsz	wreg,f
  3078  070C  2F09               	goto	u4505
  3079                           	line	19
  3080                           	
  3081  070D                     l7874:	
  3082  070D  3001               	movlw	(01h)
  3083  070E  00A8               	movwf	(??___awmod+0)+0
  3084  070F  0828               	movf	(??___awmod+0)+0,w
  3085  0710  07A9               	addwf	(___awmod@counter),f
  3086  0711  2F12               	goto	l7876
  3087                           	line	20
  3088                           	
  3089  0712                     l5589:	
  3090                           	line	17
  3091                           	
  3092  0712                     l7876:	
  3093  0712  1FA5               	btfss	(___awmod@divisor+1),(15)&7
  3094  0713  2F15               	goto	u4511
  3095  0714  2F16               	goto	u4510
  3096  0715                     u4511:
  3097  0715  2F08               	goto	l7872
  3098  0716                     u4510:
  3099  0716  2F18               	goto	l7878
  3100                           	
  3101  0717                     l5591:	
  3102  0717  2F18               	goto	l7878
  3103                           	line	21
  3104                           	
  3105  0718                     l5592:	
  3106                           	line	22
  3107                           	
  3108  0718                     l7878:	
  3109  0718  0825               	movf	(___awmod@divisor+1),w
  3110  0719  0227               	subwf	(___awmod@dividend+1),w
  3111  071A  1D03               	skipz
  3112  071B  2F1E               	goto	u4525
  3113  071C  0824               	movf	(___awmod@divisor),w
  3114  071D  0226               	subwf	(___awmod@dividend),w
  3115  071E                     u4525:
  3116  071E  1C03               	skipc
  3117  071F  2F21               	goto	u4521
  3118  0720  2F22               	goto	u4520
  3119  0721                     u4521:
  3120  0721  2F27               	goto	l7882
  3121  0722                     u4520:
  3122                           	line	23
  3123                           	
  3124  0722                     l7880:	
  3125  0722  0824               	movf	(___awmod@divisor),w
  3126  0723  02A6               	subwf	(___awmod@dividend),f
  3127  0724  0825               	movf	(___awmod@divisor+1),w
  3128  0725  3BA7               	subwfb	(___awmod@dividend+1),f
  3129  0726  2F27               	goto	l7882
  3130                           	
  3131  0727                     l5593:	
  3132                           	line	24
  3133                           	
  3134  0727                     l7882:	
  3135  0727  3001               	movlw	01h
  3136                           	
  3137  0728                     u4535:
  3138  0728  36A5               	lsrf	(___awmod@divisor+1),f
  3139  0729  0CA4               	rrf	(___awmod@divisor),f
  3140  072A  0B89               	decfsz	wreg,f
  3141  072B  2F28               	goto	u4535
  3142                           	line	25
  3143                           	
  3144  072C                     l7884:	
  3145  072C  3001               	movlw	low(01h)
  3146  072D  02A9               	subwf	(___awmod@counter),f
  3147  072E  1D03               	btfss	status,2
  3148  072F  2F31               	goto	u4541
  3149  0730  2F32               	goto	u4540
  3150  0731                     u4541:
  3151  0731  2F18               	goto	l7878
  3152  0732                     u4540:
  3153  0732  2F34               	goto	l7886
  3154                           	
  3155  0733                     l5594:	
  3156  0733  2F34               	goto	l7886
  3157                           	line	26
  3158                           	
  3159  0734                     l5588:	
  3160                           	line	27
  3161                           	
  3162  0734                     l7886:	
  3163  0734  082A               	movf	(___awmod@sign),w
  3164  0735  1D03               	skipz
  3165  0736  2F38               	goto	u4550
  3166  0737  2F3E               	goto	l7890
  3167  0738                     u4550:
  3168                           	line	28
  3169                           	
  3170  0738                     l7888:	
  3171  0738  09A6               	comf	(___awmod@dividend),f
  3172  0739  09A7               	comf	(___awmod@dividend+1),f
  3173  073A  0AA6               	incf	(___awmod@dividend),f
  3174  073B  1903               	skipnz
  3175  073C  0AA7               	incf	(___awmod@dividend+1),f
  3176  073D  2F3E               	goto	l7890
  3177                           	
  3178  073E                     l5595:	
  3179                           	line	29
  3180                           	
  3181  073E                     l7890:	
  3182  073E  0827               	movf	(___awmod@dividend+1),w
  3183  073F  01A5               	clrf	(?___awmod+1)
  3184  0740  07A5               	addwf	(?___awmod+1)
  3185  0741  0826               	movf	(___awmod@dividend),w
  3186  0742  01A4               	clrf	(?___awmod)
  3187  0743  07A4               	addwf	(?___awmod)
  3188                           
  3189  0744  2F45               	goto	l5596
  3190                           	
  3191  0745                     l7892:	
  3192                           	line	30
  3193                           	
  3194  0745                     l5596:	
  3195  0745  0008               	return
  3196                           	opt stack 0
  3197                           GLOBAL	__end_of___awmod
  3198  0746                     	__end_of___awmod:
  3199 ;; =============== function ___awmod ends ============
  3200                           
  3201                           	signat	___awmod,8314
  3202                           	global	___awdiv
  3203                           psect	text717,local,class=CODE,delta=2
  3204                           global __ptext717
  3205  05A8                     __ptext717:
  3206                           
  3207 ;; *************** function ___awdiv *****************
  3208 ;; Defined at:
  3209 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  divisor         2    4[BANK0 ] int 
  3212 ;;  dividend        2    6[BANK0 ] int 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  quotient        2   11[BANK0 ] int 
  3215 ;;  sign            1   10[BANK0 ] unsigned char 
  3216 ;;  counter         1    9[BANK0 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    4[BANK0 ] int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3226 ;;      Params:         0       4       0       0       0       0       0       0
  3227 ;;      Locals:         0       4       0       0       0       0       0       0
  3228 ;;      Temps:          0       1       0       0       0       0       0       0
  3229 ;;      Totals:         0       9       0       0       0       0       0       0
  3230 ;;Total ram usage:        9 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    4
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_setSegmentDisplayNumber
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           psect	text717
  3240                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3241                           	line	5
  3242                           	global	__size_of___awdiv
  3243  006D                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3244                           	
  3245  05A8                     ___awdiv:	
  3246                           	opt	stack 9
  3247                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3248                           	line	9
  3249                           	
  3250  05A8                     l7820:	
  3251  05A8  0020               	movlb 0	; select bank0
  3252  05A9  01AA               	clrf	(___awdiv@sign)
  3253                           	line	10
  3254  05AA  1FA5               	btfss	(___awdiv@divisor+1),7
  3255  05AB  2DAD               	goto	u4371
  3256  05AC  2DAE               	goto	u4370
  3257  05AD                     u4371:
  3258  05AD  2DB7               	goto	l7824
  3259  05AE                     u4370:
  3260                           	line	11
  3261                           	
  3262  05AE                     l7822:	
  3263  05AE  09A4               	comf	(___awdiv@divisor),f
  3264  05AF  09A5               	comf	(___awdiv@divisor+1),f
  3265  05B0  0AA4               	incf	(___awdiv@divisor),f
  3266  05B1  1903               	skipnz
  3267  05B2  0AA5               	incf	(___awdiv@divisor+1),f
  3268                           	line	12
  3269  05B3  01AA               	clrf	(___awdiv@sign)
  3270  05B4  1403               	bsf	status,0
  3271  05B5  0DAA               	rlf	(___awdiv@sign),f
  3272  05B6  2DB7               	goto	l7824
  3273                           	line	13
  3274                           	
  3275  05B7                     l5518:	
  3276                           	line	14
  3277                           	
  3278  05B7                     l7824:	
  3279  05B7  1FA7               	btfss	(___awdiv@dividend+1),7
  3280  05B8  2DBA               	goto	u4381
  3281  05B9  2DBB               	goto	u4380
  3282  05BA                     u4381:
  3283  05BA  2DC5               	goto	l7830
  3284  05BB                     u4380:
  3285                           	line	15
  3286                           	
  3287  05BB                     l7826:	
  3288  05BB  09A6               	comf	(___awdiv@dividend),f
  3289  05BC  09A7               	comf	(___awdiv@dividend+1),f
  3290  05BD  0AA6               	incf	(___awdiv@dividend),f
  3291  05BE  1903               	skipnz
  3292  05BF  0AA7               	incf	(___awdiv@dividend+1),f
  3293                           	line	16
  3294                           	
  3295  05C0                     l7828:	
  3296  05C0  3001               	movlw	(01h)
  3297  05C1  00A8               	movwf	(??___awdiv+0)+0
  3298  05C2  0828               	movf	(??___awdiv+0)+0,w
  3299  05C3  06AA               	xorwf	(___awdiv@sign),f
  3300  05C4  2DC5               	goto	l7830
  3301                           	line	17
  3302                           	
  3303  05C5                     l5519:	
  3304                           	line	18
  3305                           	
  3306  05C5                     l7830:	
  3307  05C5  01AB               	clrf	(___awdiv@quotient)
  3308  05C6  01AC               	clrf	(___awdiv@quotient+1)
  3309                           	line	19
  3310                           	
  3311  05C7                     l7832:	
  3312  05C7  0825               	movf	(___awdiv@divisor+1),w
  3313  05C8  0424               	iorwf	(___awdiv@divisor),w
  3314  05C9  1903               	skipnz
  3315  05CA  2DCC               	goto	u4391
  3316  05CB  2DCD               	goto	u4390
  3317  05CC                     u4391:
  3318  05CC  2E03               	goto	l7852
  3319  05CD                     u4390:
  3320                           	line	20
  3321                           	
  3322  05CD                     l7834:	
  3323  05CD  01A9               	clrf	(___awdiv@counter)
  3324  05CE  1403               	bsf	status,0
  3325  05CF  0DA9               	rlf	(___awdiv@counter),f
  3326                           	line	21
  3327  05D0  2DDB               	goto	l7840
  3328                           	
  3329  05D1                     l5522:	
  3330                           	line	22
  3331                           	
  3332  05D1                     l7836:	
  3333  05D1  3001               	movlw	01h
  3334                           	
  3335  05D2                     u4405:
  3336  05D2  35A4               	lslf	(___awdiv@divisor),f
  3337  05D3  0DA5               	rlf	(___awdiv@divisor+1),f
  3338  05D4  0B89               	decfsz	wreg,f
  3339  05D5  2DD2               	goto	u4405
  3340                           	line	23
  3341                           	
  3342  05D6                     l7838:	
  3343  05D6  3001               	movlw	(01h)
  3344  05D7  00A8               	movwf	(??___awdiv+0)+0
  3345  05D8  0828               	movf	(??___awdiv+0)+0,w
  3346  05D9  07A9               	addwf	(___awdiv@counter),f
  3347  05DA  2DDB               	goto	l7840
  3348                           	line	24
  3349                           	
  3350  05DB                     l5521:	
  3351                           	line	21
  3352                           	
  3353  05DB                     l7840:	
  3354  05DB  1FA5               	btfss	(___awdiv@divisor+1),(15)&7
  3355  05DC  2DDE               	goto	u4411
  3356  05DD  2DDF               	goto	u4410
  3357  05DE                     u4411:
  3358  05DE  2DD1               	goto	l7836
  3359  05DF                     u4410:
  3360  05DF  2DE1               	goto	l7842
  3361                           	
  3362  05E0                     l5523:	
  3363  05E0  2DE1               	goto	l7842
  3364                           	line	25
  3365                           	
  3366  05E1                     l5524:	
  3367                           	line	26
  3368                           	
  3369  05E1                     l7842:	
  3370  05E1  3001               	movlw	01h
  3371                           	
  3372  05E2                     u4425:
  3373  05E2  35AB               	lslf	(___awdiv@quotient),f
  3374  05E3  0DAC               	rlf	(___awdiv@quotient+1),f
  3375  05E4  0B89               	decfsz	wreg,f
  3376  05E5  2DE2               	goto	u4425
  3377                           	line	27
  3378  05E6  0825               	movf	(___awdiv@divisor+1),w
  3379  05E7  0227               	subwf	(___awdiv@dividend+1),w
  3380  05E8  1D03               	skipz
  3381  05E9  2DEC               	goto	u4435
  3382  05EA  0824               	movf	(___awdiv@divisor),w
  3383  05EB  0226               	subwf	(___awdiv@dividend),w
  3384  05EC                     u4435:
  3385  05EC  1C03               	skipc
  3386  05ED  2DEF               	goto	u4431
  3387  05EE  2DF0               	goto	u4430
  3388  05EF                     u4431:
  3389  05EF  2DF6               	goto	l7848
  3390  05F0                     u4430:
  3391                           	line	28
  3392                           	
  3393  05F0                     l7844:	
  3394  05F0  0824               	movf	(___awdiv@divisor),w
  3395  05F1  02A6               	subwf	(___awdiv@dividend),f
  3396  05F2  0825               	movf	(___awdiv@divisor+1),w
  3397  05F3  3BA7               	subwfb	(___awdiv@dividend+1),f
  3398                           	line	29
  3399                           	
  3400  05F4                     l7846:	
  3401  05F4  142B               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3402  05F5  2DF6               	goto	l7848
  3403                           	line	30
  3404                           	
  3405  05F6                     l5525:	
  3406                           	line	31
  3407                           	
  3408  05F6                     l7848:	
  3409  05F6  3001               	movlw	01h
  3410                           	
  3411  05F7                     u4445:
  3412  05F7  36A5               	lsrf	(___awdiv@divisor+1),f
  3413  05F8  0CA4               	rrf	(___awdiv@divisor),f
  3414  05F9  0B89               	decfsz	wreg,f
  3415  05FA  2DF7               	goto	u4445
  3416                           	line	32
  3417                           	
  3418  05FB                     l7850:	
  3419  05FB  3001               	movlw	low(01h)
  3420  05FC  02A9               	subwf	(___awdiv@counter),f
  3421  05FD  1D03               	btfss	status,2
  3422  05FE  2E00               	goto	u4451
  3423  05FF  2E01               	goto	u4450
  3424  0600                     u4451:
  3425  0600  2DE1               	goto	l7842
  3426  0601                     u4450:
  3427  0601  2E03               	goto	l7852
  3428                           	
  3429  0602                     l5526:	
  3430  0602  2E03               	goto	l7852
  3431                           	line	33
  3432                           	
  3433  0603                     l5520:	
  3434                           	line	34
  3435                           	
  3436  0603                     l7852:	
  3437  0603  082A               	movf	(___awdiv@sign),w
  3438  0604  1D03               	skipz
  3439  0605  2E07               	goto	u4460
  3440  0606  2E0D               	goto	l7856
  3441  0607                     u4460:
  3442                           	line	35
  3443                           	
  3444  0607                     l7854:	
  3445  0607  09AB               	comf	(___awdiv@quotient),f
  3446  0608  09AC               	comf	(___awdiv@quotient+1),f
  3447  0609  0AAB               	incf	(___awdiv@quotient),f
  3448  060A  1903               	skipnz
  3449  060B  0AAC               	incf	(___awdiv@quotient+1),f
  3450  060C  2E0D               	goto	l7856
  3451                           	
  3452  060D                     l5527:	
  3453                           	line	36
  3454                           	
  3455  060D                     l7856:	
  3456  060D  082C               	movf	(___awdiv@quotient+1),w
  3457  060E  01A5               	clrf	(?___awdiv+1)
  3458  060F  07A5               	addwf	(?___awdiv+1)
  3459  0610  082B               	movf	(___awdiv@quotient),w
  3460  0611  01A4               	clrf	(?___awdiv)
  3461  0612  07A4               	addwf	(?___awdiv)
  3462                           
  3463  0613  2E14               	goto	l5528
  3464                           	
  3465  0614                     l7858:	
  3466                           	line	37
  3467                           	
  3468  0614                     l5528:	
  3469  0614  0008               	return
  3470                           	opt stack 0
  3471                           GLOBAL	__end_of___awdiv
  3472  0615                     	__end_of___awdiv:
  3473 ;; =============== function ___awdiv ends ============
  3474                           
  3475                           	signat	___awdiv,8314
  3476                           	global	___lwmod
  3477                           psect	text718,local,class=CODE,delta=2
  3478                           global __ptext718
  3479  0FC1                     __ptext718:
  3480                           
  3481 ;; *************** function ___lwmod *****************
  3482 ;; Defined at:
  3483 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  divisor         2   12[BANK0 ] unsigned int 
  3486 ;;  dividend        2   14[BANK0 ] unsigned int 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  counter         1   17[BANK0 ] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  2   12[BANK0 ] unsigned int 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3498 ;;      Params:         0       4       0       0       0       0       0       0
  3499 ;;      Locals:         0       1       0       0       0       0       0       0
  3500 ;;      Temps:          0       1       0       0       0       0       0       0
  3501 ;;      Totals:         0       6       0       0       0       0       0       0
  3502 ;;Total ram usage:        6 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    4
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_printf
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           psect	text718
  3512                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  3513                           	line	5
  3514                           	global	__size_of___lwmod
  3515  003F                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3516                           	
  3517  0FC1                     ___lwmod:	
  3518                           	opt	stack 8
  3519                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3520                           	line	8
  3521                           	
  3522  0FC1                     l7798:	
  3523  0FC1  0020               	movlb 0	; select bank0
  3524  0FC2  082D               	movf	(___lwmod@divisor+1),w
  3525  0FC3  042C               	iorwf	(___lwmod@divisor),w
  3526  0FC4  1903               	skipnz
  3527  0FC5  2FC7               	goto	u4311
  3528  0FC6  2FC8               	goto	u4310
  3529  0FC7                     u4311:
  3530  0FC7  2FF8               	goto	l7816
  3531  0FC8                     u4310:
  3532                           	line	9
  3533                           	
  3534  0FC8                     l7800:	
  3535  0FC8  01B1               	clrf	(___lwmod@counter)
  3536  0FC9  1403               	bsf	status,0
  3537  0FCA  0DB1               	rlf	(___lwmod@counter),f
  3538                           	line	10
  3539  0FCB  2FD6               	goto	l7806
  3540                           	
  3541  0FCC                     l5396:	
  3542                           	line	11
  3543                           	
  3544  0FCC                     l7802:	
  3545  0FCC  3001               	movlw	01h
  3546                           	
  3547  0FCD                     u4325:
  3548  0FCD  35AC               	lslf	(___lwmod@divisor),f
  3549  0FCE  0DAD               	rlf	(___lwmod@divisor+1),f
  3550  0FCF  0B89               	decfsz	wreg,f
  3551  0FD0  2FCD               	goto	u4325
  3552                           	line	12
  3553                           	
  3554  0FD1                     l7804:	
  3555  0FD1  3001               	movlw	(01h)
  3556  0FD2  00B0               	movwf	(??___lwmod+0)+0
  3557  0FD3  0830               	movf	(??___lwmod+0)+0,w
  3558  0FD4  07B1               	addwf	(___lwmod@counter),f
  3559  0FD5  2FD6               	goto	l7806
  3560                           	line	13
  3561                           	
  3562  0FD6                     l5395:	
  3563                           	line	10
  3564                           	
  3565  0FD6                     l7806:	
  3566  0FD6  1FAD               	btfss	(___lwmod@divisor+1),(15)&7
  3567  0FD7  2FD9               	goto	u4331
  3568  0FD8  2FDA               	goto	u4330
  3569  0FD9                     u4331:
  3570  0FD9  2FCC               	goto	l7802
  3571  0FDA                     u4330:
  3572  0FDA  2FDC               	goto	l7808
  3573                           	
  3574  0FDB                     l5397:	
  3575  0FDB  2FDC               	goto	l7808
  3576                           	line	14
  3577                           	
  3578  0FDC                     l5398:	
  3579                           	line	15
  3580                           	
  3581  0FDC                     l7808:	
  3582  0FDC  082D               	movf	(___lwmod@divisor+1),w
  3583  0FDD  022F               	subwf	(___lwmod@dividend+1),w
  3584  0FDE  1D03               	skipz
  3585  0FDF  2FE2               	goto	u4345
  3586  0FE0  082C               	movf	(___lwmod@divisor),w
  3587  0FE1  022E               	subwf	(___lwmod@dividend),w
  3588  0FE2                     u4345:
  3589  0FE2  1C03               	skipc
  3590  0FE3  2FE5               	goto	u4341
  3591  0FE4  2FE6               	goto	u4340
  3592  0FE5                     u4341:
  3593  0FE5  2FEB               	goto	l7812
  3594  0FE6                     u4340:
  3595                           	line	16
  3596                           	
  3597  0FE6                     l7810:	
  3598  0FE6  082C               	movf	(___lwmod@divisor),w
  3599  0FE7  02AE               	subwf	(___lwmod@dividend),f
  3600  0FE8  082D               	movf	(___lwmod@divisor+1),w
  3601  0FE9  3BAF               	subwfb	(___lwmod@dividend+1),f
  3602  0FEA  2FEB               	goto	l7812
  3603                           	
  3604  0FEB                     l5399:	
  3605                           	line	17
  3606                           	
  3607  0FEB                     l7812:	
  3608  0FEB  3001               	movlw	01h
  3609                           	
  3610  0FEC                     u4355:
  3611  0FEC  36AD               	lsrf	(___lwmod@divisor+1),f
  3612  0FED  0CAC               	rrf	(___lwmod@divisor),f
  3613  0FEE  0B89               	decfsz	wreg,f
  3614  0FEF  2FEC               	goto	u4355
  3615                           	line	18
  3616                           	
  3617  0FF0                     l7814:	
  3618  0FF0  3001               	movlw	low(01h)
  3619  0FF1  02B1               	subwf	(___lwmod@counter),f
  3620  0FF2  1D03               	btfss	status,2
  3621  0FF3  2FF5               	goto	u4361
  3622  0FF4  2FF6               	goto	u4360
  3623  0FF5                     u4361:
  3624  0FF5  2FDC               	goto	l7808
  3625  0FF6                     u4360:
  3626  0FF6  2FF8               	goto	l7816
  3627                           	
  3628  0FF7                     l5400:	
  3629  0FF7  2FF8               	goto	l7816
  3630                           	line	19
  3631                           	
  3632  0FF8                     l5394:	
  3633                           	line	20
  3634                           	
  3635  0FF8                     l7816:	
  3636  0FF8  082F               	movf	(___lwmod@dividend+1),w
  3637  0FF9  01AD               	clrf	(?___lwmod+1)
  3638  0FFA  07AD               	addwf	(?___lwmod+1)
  3639  0FFB  082E               	movf	(___lwmod@dividend),w
  3640  0FFC  01AC               	clrf	(?___lwmod)
  3641  0FFD  07AC               	addwf	(?___lwmod)
  3642                           
  3643  0FFE  2FFF               	goto	l5401
  3644                           	
  3645  0FFF                     l7818:	
  3646                           	line	21
  3647                           	
  3648  0FFF                     l5401:	
  3649  0FFF  0008               	return
  3650                           	opt stack 0
  3651                           GLOBAL	__end_of___lwmod
  3652  1000                     	__end_of___lwmod:
  3653 ;; =============== function ___lwmod ends ============
  3654                           
  3655                           	signat	___lwmod,8314
  3656                           	global	___lwdiv
  3657                           psect	text719,local,class=CODE,delta=2
  3658                           global __ptext719
  3659  07A6                     __ptext719:
  3660                           
  3661 ;; *************** function ___lwdiv *****************
  3662 ;; Defined at:
  3663 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  divisor         2    4[BANK0 ] unsigned int 
  3666 ;;  dividend        2    6[BANK0 ] unsigned int 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  quotient        2    9[BANK0 ] unsigned int 
  3669 ;;  counter         1   11[BANK0 ] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  2    4[BANK0 ] unsigned int 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3679 ;;      Params:         0       4       0       0       0       0       0       0
  3680 ;;      Locals:         0       3       0       0       0       0       0       0
  3681 ;;      Temps:          0       1       0       0       0       0       0       0
  3682 ;;      Totals:         0       8       0       0       0       0       0       0
  3683 ;;Total ram usage:        8 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    4
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_printf
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           psect	text719
  3693                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  3694                           	line	5
  3695                           	global	__size_of___lwdiv
  3696  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3697                           	
  3698  07A6                     ___lwdiv:	
  3699                           	opt	stack 8
  3700                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3701                           	line	9
  3702                           	
  3703  07A6                     l7772:	
  3704  07A6  0020               	movlb 0	; select bank0
  3705  07A7  01A9               	clrf	(___lwdiv@quotient)
  3706  07A8  01AA               	clrf	(___lwdiv@quotient+1)
  3707                           	line	10
  3708                           	
  3709  07A9                     l7774:	
  3710  07A9  0825               	movf	(___lwdiv@divisor+1),w
  3711  07AA  0424               	iorwf	(___lwdiv@divisor),w
  3712  07AB  1903               	skipnz
  3713  07AC  2FAE               	goto	u4241
  3714  07AD  2FAF               	goto	u4240
  3715  07AE                     u4241:
  3716  07AE  2FE5               	goto	l7794
  3717  07AF                     u4240:
  3718                           	line	11
  3719                           	
  3720  07AF                     l7776:	
  3721  07AF  01AB               	clrf	(___lwdiv@counter)
  3722  07B0  1403               	bsf	status,0
  3723  07B1  0DAB               	rlf	(___lwdiv@counter),f
  3724                           	line	12
  3725  07B2  2FBD               	goto	l7782
  3726                           	
  3727  07B3                     l5386:	
  3728                           	line	13
  3729                           	
  3730  07B3                     l7778:	
  3731  07B3  3001               	movlw	01h
  3732                           	
  3733  07B4                     u4255:
  3734  07B4  35A4               	lslf	(___lwdiv@divisor),f
  3735  07B5  0DA5               	rlf	(___lwdiv@divisor+1),f
  3736  07B6  0B89               	decfsz	wreg,f
  3737  07B7  2FB4               	goto	u4255
  3738                           	line	14
  3739                           	
  3740  07B8                     l7780:	
  3741  07B8  3001               	movlw	(01h)
  3742  07B9  00A8               	movwf	(??___lwdiv+0)+0
  3743  07BA  0828               	movf	(??___lwdiv+0)+0,w
  3744  07BB  07AB               	addwf	(___lwdiv@counter),f
  3745  07BC  2FBD               	goto	l7782
  3746                           	line	15
  3747                           	
  3748  07BD                     l5385:	
  3749                           	line	12
  3750                           	
  3751  07BD                     l7782:	
  3752  07BD  1FA5               	btfss	(___lwdiv@divisor+1),(15)&7
  3753  07BE  2FC0               	goto	u4261
  3754  07BF  2FC1               	goto	u4260
  3755  07C0                     u4261:
  3756  07C0  2FB3               	goto	l7778
  3757  07C1                     u4260:
  3758  07C1  2FC3               	goto	l7784
  3759                           	
  3760  07C2                     l5387:	
  3761  07C2  2FC3               	goto	l7784
  3762                           	line	16
  3763                           	
  3764  07C3                     l5388:	
  3765                           	line	17
  3766                           	
  3767  07C3                     l7784:	
  3768  07C3  3001               	movlw	01h
  3769                           	
  3770  07C4                     u4275:
  3771  07C4  35A9               	lslf	(___lwdiv@quotient),f
  3772  07C5  0DAA               	rlf	(___lwdiv@quotient+1),f
  3773  07C6  0B89               	decfsz	wreg,f
  3774  07C7  2FC4               	goto	u4275
  3775                           	line	18
  3776  07C8  0825               	movf	(___lwdiv@divisor+1),w
  3777  07C9  0227               	subwf	(___lwdiv@dividend+1),w
  3778  07CA  1D03               	skipz
  3779  07CB  2FCE               	goto	u4285
  3780  07CC  0824               	movf	(___lwdiv@divisor),w
  3781  07CD  0226               	subwf	(___lwdiv@dividend),w
  3782  07CE                     u4285:
  3783  07CE  1C03               	skipc
  3784  07CF  2FD1               	goto	u4281
  3785  07D0  2FD2               	goto	u4280
  3786  07D1                     u4281:
  3787  07D1  2FD8               	goto	l7790
  3788  07D2                     u4280:
  3789                           	line	19
  3790                           	
  3791  07D2                     l7786:	
  3792  07D2  0824               	movf	(___lwdiv@divisor),w
  3793  07D3  02A6               	subwf	(___lwdiv@dividend),f
  3794  07D4  0825               	movf	(___lwdiv@divisor+1),w
  3795  07D5  3BA7               	subwfb	(___lwdiv@dividend+1),f
  3796                           	line	20
  3797                           	
  3798  07D6                     l7788:	
  3799  07D6  1429               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3800  07D7  2FD8               	goto	l7790
  3801                           	line	21
  3802                           	
  3803  07D8                     l5389:	
  3804                           	line	22
  3805                           	
  3806  07D8                     l7790:	
  3807  07D8  3001               	movlw	01h
  3808                           	
  3809  07D9                     u4295:
  3810  07D9  36A5               	lsrf	(___lwdiv@divisor+1),f
  3811  07DA  0CA4               	rrf	(___lwdiv@divisor),f
  3812  07DB  0B89               	decfsz	wreg,f
  3813  07DC  2FD9               	goto	u4295
  3814                           	line	23
  3815                           	
  3816  07DD                     l7792:	
  3817  07DD  3001               	movlw	low(01h)
  3818  07DE  02AB               	subwf	(___lwdiv@counter),f
  3819  07DF  1D03               	btfss	status,2
  3820  07E0  2FE2               	goto	u4301
  3821  07E1  2FE3               	goto	u4300
  3822  07E2                     u4301:
  3823  07E2  2FC3               	goto	l7784
  3824  07E3                     u4300:
  3825  07E3  2FE5               	goto	l7794
  3826                           	
  3827  07E4                     l5390:	
  3828  07E4  2FE5               	goto	l7794
  3829                           	line	24
  3830                           	
  3831  07E5                     l5384:	
  3832                           	line	25
  3833                           	
  3834  07E5                     l7794:	
  3835  07E5  082A               	movf	(___lwdiv@quotient+1),w
  3836  07E6  01A5               	clrf	(?___lwdiv+1)
  3837  07E7  07A5               	addwf	(?___lwdiv+1)
  3838  07E8  0829               	movf	(___lwdiv@quotient),w
  3839  07E9  01A4               	clrf	(?___lwdiv)
  3840  07EA  07A4               	addwf	(?___lwdiv)
  3841                           
  3842  07EB  2FEC               	goto	l5391
  3843                           	
  3844  07EC                     l7796:	
  3845                           	line	26
  3846                           	
  3847  07EC                     l5391:	
  3848  07EC  0008               	return
  3849                           	opt stack 0
  3850                           GLOBAL	__end_of___lwdiv
  3851  07ED                     	__end_of___lwdiv:
  3852 ;; =============== function ___lwdiv ends ============
  3853                           
  3854                           	signat	___lwdiv,8314
  3855                           	global	_SegmentDisplay_Main
  3856                           psect	text720,local,class=CODE,delta=2
  3857                           global __ptext720
  3858  04AC                     __ptext720:
  3859                           
  3860 ;; *************** function _SegmentDisplay_Main *****************
  3861 ;; Defined at:
  3862 ;;		line 73 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;		None               void
  3869 ;; Registers used:
  3870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3876 ;;      Params:         0       0       0       0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0
  3878 ;;      Temps:          0       2       0       0       0       0       0       0
  3879 ;;      Totals:         0       2       0       0       0       0       0       0
  3880 ;;Total ram usage:        2 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    4
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           psect	text720
  3890                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  3891                           	line	73
  3892                           	global	__size_of_SegmentDisplay_Main
  3893  0089                     	__size_of_SegmentDisplay_Main	equ	__end_of_SegmentDisplay_Main-_SegmentDisplay_Main
  3894                           	
  3895  04AC                     _SegmentDisplay_Main:	
  3896                           	opt	stack 11
  3897                           ; Regs used in _SegmentDisplay_Main: [wreg-status,0]
  3898                           	line	74
  3899                           	
  3900  04AC                     l7738:	
  3901                           ;SegmentDisplay_A2.c: 74: if(Segment->GO)
  3902  04AC  0020               	movlb 0	; select bank0
  3903  04AD  0858               	movf	(_Segment),w
  3904  04AE  3E15               	addlw	015h
  3905  04AF  0086               	movwf	fsr1l
  3906  04B0  0187               	clrf fsr1h	
  3907                           	
  3908  04B1  1C81               	btfss	indf1,1
  3909  04B2  2CB4               	goto	u4171
  3910  04B3  2CB5               	goto	u4170
  3911  04B4                     u4171:
  3912  04B4  2D34               	goto	l3319
  3913  04B5                     u4170:
  3914                           	line	76
  3915                           	
  3916  04B5                     l7740:	
  3917                           ;SegmentDisplay_A2.c: 75: {
  3918                           ;SegmentDisplay_A2.c: 76: Segment->Time++;
  3919  04B5  3001               	movlw	(01h)
  3920  04B6  00A4               	movwf	(??_SegmentDisplay_Main+0)+0
  3921  04B7  0858               	movf	(_Segment),w
  3922  04B8  3E19               	addlw	019h
  3923  04B9  0086               	movwf	fsr1l
  3924  04BA  0187               	clrf fsr1h	
  3925                           	
  3926  04BB  0824               	movf	(??_SegmentDisplay_Main+0)+0,w
  3927  04BC  0781               	addwf	indf1,f
  3928                           	line	77
  3929                           	
  3930  04BD                     l7742:	
  3931                           ;SegmentDisplay_A2.c: 77: if(Segment->Time == 5)
  3932  04BD  0858               	movf	(_Segment),w
  3933  04BE  3E19               	addlw	019h
  3934  04BF  0086               	movwf	fsr1l
  3935  04C0  0187               	clrf fsr1h	
  3936                           	
  3937  04C1  0801               	movf	indf1,w
  3938  04C2  3A05               	xorlw	05h&0ffh
  3939  04C3  1D03               	skipz
  3940  04C4  2CC6               	goto	u4181
  3941  04C5  2CC7               	goto	u4180
  3942  04C6                     u4181:
  3943  04C6  2D34               	goto	l3319
  3944  04C7                     u4180:
  3945                           	line	79
  3946                           	
  3947  04C7                     l7744:	
  3948                           ;SegmentDisplay_A2.c: 78: {
  3949                           ;SegmentDisplay_A2.c: 79: Segment->Time=0;
  3950  04C7  0858               	movf	(_Segment),w
  3951  04C8  3E19               	addlw	019h
  3952  04C9  0086               	movwf	fsr1l
  3953  04CA  0187               	clrf fsr1h	
  3954                           	
  3955  04CB  0181               	clrf	indf1
  3956                           	line	80
  3957                           	
  3958  04CC                     l7746:	
  3959                           ;SegmentDisplay_A2.c: 80: PORTA&=0x0f;
  3960  04CC  300F               	movlw	(0Fh)
  3961  04CD  00A4               	movwf	(??_SegmentDisplay_Main+0)+0
  3962  04CE  0824               	movf	(??_SegmentDisplay_Main+0)+0,w
  3963  04CF  058C               	andwf	(12),f	;volatile
  3964                           	line	81
  3965                           	
  3966  04D0                     l7748:	
  3967                           ;SegmentDisplay_A2.c: 81: if(Segment->ComCount == 0)
  3968  04D0  0858               	movf	(_Segment),w
  3969  04D1  3E16               	addlw	016h
  3970  04D2  0086               	movwf	fsr1l
  3971  04D3  0187               	clrf fsr1h	
  3972                           	
  3973  04D4  0881               	movf	indf1,f
  3974  04D5  1D03               	skipz
  3975  04D6  2CD8               	goto	u4191
  3976  04D7  2CD9               	goto	u4190
  3977  04D8                     u4191:
  3978  04D8  2CDB               	goto	l7752
  3979  04D9                     u4190:
  3980                           	line	83
  3981                           	
  3982  04D9                     l7750:	
  3983                           ;SegmentDisplay_A2.c: 82: {
  3984                           ;SegmentDisplay_A2.c: 83: RA4=1;
  3985  04D9  160C               	bsf	(100/8),(100)&7
  3986                           	line	84
  3987                           ;SegmentDisplay_A2.c: 84: }
  3988  04DA  2D02               	goto	l7764
  3989                           	line	85
  3990                           	
  3991  04DB                     l3310:	
  3992                           	
  3993  04DB                     l7752:	
  3994                           ;SegmentDisplay_A2.c: 85: else if(Segment->ComCount == 1)
  3995  04DB  0858               	movf	(_Segment),w
  3996  04DC  3E16               	addlw	016h
  3997  04DD  0086               	movwf	fsr1l
  3998  04DE  0187               	clrf fsr1h	
  3999                           	
  4000  04DF  0801               	movf	indf1,w
  4001  04E0  3A01               	xorlw	01h&0ffh
  4002  04E1  1D03               	skipz
  4003  04E2  2CE4               	goto	u4201
  4004  04E3  2CE5               	goto	u4200
  4005  04E4                     u4201:
  4006  04E4  2CE7               	goto	l7756
  4007  04E5                     u4200:
  4008                           	line	87
  4009                           	
  4010  04E5                     l7754:	
  4011                           ;SegmentDisplay_A2.c: 86: {
  4012                           ;SegmentDisplay_A2.c: 87: RA5=1;
  4013  04E5  168C               	bsf	(101/8),(101)&7
  4014                           	line	88
  4015                           ;SegmentDisplay_A2.c: 88: }
  4016  04E6  2D02               	goto	l7764
  4017                           	line	89
  4018                           	
  4019  04E7                     l3312:	
  4020                           	
  4021  04E7                     l7756:	
  4022                           ;SegmentDisplay_A2.c: 89: else if(Segment->ComCount == 2)
  4023  04E7  0858               	movf	(_Segment),w
  4024  04E8  3E16               	addlw	016h
  4025  04E9  0086               	movwf	fsr1l
  4026  04EA  0187               	clrf fsr1h	
  4027                           	
  4028  04EB  0801               	movf	indf1,w
  4029  04EC  3A02               	xorlw	02h&0ffh
  4030  04ED  1D03               	skipz
  4031  04EE  2CF0               	goto	u4211
  4032  04EF  2CF1               	goto	u4210
  4033  04F0                     u4211:
  4034  04F0  2CF3               	goto	l7760
  4035  04F1                     u4210:
  4036                           	line	91
  4037                           	
  4038  04F1                     l7758:	
  4039                           ;SegmentDisplay_A2.c: 90: {
  4040                           ;SegmentDisplay_A2.c: 91: RA6=1;
  4041  04F1  170C               	bsf	(102/8),(102)&7
  4042                           	line	92
  4043                           ;SegmentDisplay_A2.c: 92: }
  4044  04F2  2D02               	goto	l7764
  4045                           	line	93
  4046                           	
  4047  04F3                     l3314:	
  4048                           	
  4049  04F3                     l7760:	
  4050                           ;SegmentDisplay_A2.c: 93: else if(Segment->ComCount == 3)
  4051  04F3  0858               	movf	(_Segment),w
  4052  04F4  3E16               	addlw	016h
  4053  04F5  0086               	movwf	fsr1l
  4054  04F6  0187               	clrf fsr1h	
  4055                           	
  4056  04F7  0801               	movf	indf1,w
  4057  04F8  3A03               	xorlw	03h&0ffh
  4058  04F9  1D03               	skipz
  4059  04FA  2CFC               	goto	u4221
  4060  04FB  2CFD               	goto	u4220
  4061  04FC                     u4221:
  4062  04FC  2D02               	goto	l7764
  4063  04FD                     u4220:
  4064                           	line	95
  4065                           	
  4066  04FD                     l7762:	
  4067                           ;SegmentDisplay_A2.c: 94: {
  4068                           ;SegmentDisplay_A2.c: 95: RA7=1;
  4069  04FD  178C               	bsf	(103/8),(103)&7
  4070  04FE  2D02               	goto	l7764
  4071                           	line	96
  4072                           	
  4073  04FF                     l3316:	
  4074  04FF  2D02               	goto	l7764
  4075                           	line	97
  4076                           	
  4077  0500                     l3315:	
  4078  0500  2D02               	goto	l7764
  4079                           	
  4080  0501                     l3313:	
  4081  0501  2D02               	goto	l7764
  4082                           	
  4083  0502                     l3311:	
  4084                           	
  4085  0502                     l7764:	
  4086                           ;SegmentDisplay_A2.c: 96: }
  4087                           ;SegmentDisplay_A2.c: 97: PORTB=Segment->Display[Segment->Num[Segment->ComCount]];
  4088  0502  0858               	movf	(_Segment),w
  4089  0503  3E16               	addlw	016h
  4090  0504  0086               	movwf	fsr1l
  4091  0505  0187               	clrf fsr1h	
  4092                           	
  4093  0506  0801               	movf	indf1,w
  4094  0507  3E11               	addlw	011h
  4095  0508  0758               	addwf	(_Segment),w
  4096  0509  00A4               	movwf	(??_SegmentDisplay_Main+0)+0
  4097  050A  0824               	movf	0+(??_SegmentDisplay_Main+0)+0,w
  4098  050B  0086               	movwf	fsr1l
  4099  050C  0187               	clrf fsr1h	
  4100                           	
  4101  050D  0801               	movf	indf1,w
  4102  050E  0758               	addwf	(_Segment),w
  4103  050F  00A5               	movwf	(??_SegmentDisplay_Main+1)+0
  4104  0510  0825               	movf	0+(??_SegmentDisplay_Main+1)+0,w
  4105  0511  0086               	movwf	fsr1l
  4106  0512  0187               	clrf fsr1h	
  4107                           	
  4108  0513  0801               	movf	indf1,w
  4109  0514  008D               	movwf	(13)	;volatile
  4110                           	line	98
  4111                           	
  4112  0515                     l7766:	
  4113                           ;SegmentDisplay_A2.c: 98: if(Segment->ComCount < Segment->DisplayCount)
  4114  0515  0858               	movf	(_Segment),w
  4115  0516  3E16               	addlw	016h
  4116  0517  0086               	movwf	fsr1l
  4117  0518  0187               	clrf fsr1h	
  4118                           	
  4119  0519  0858               	movf	(_Segment),w
  4120  051A  3E17               	addlw	017h
  4121  051B  0084               	movwf	fsr0l
  4122  051C  0185               	clrf fsr0h	
  4123                           	
  4124  051D  0800               	movf	indf0,w
  4125  051E  0201               	subwf	indf1,w
  4126  051F  1803               	skipnc
  4127  0520  2D22               	goto	u4231
  4128  0521  2D23               	goto	u4230
  4129  0522                     u4231:
  4130  0522  2D2C               	goto	l7770
  4131  0523                     u4230:
  4132                           	line	100
  4133                           	
  4134  0523                     l7768:	
  4135                           ;SegmentDisplay_A2.c: 99: {
  4136                           ;SegmentDisplay_A2.c: 100: Segment->ComCount++;
  4137  0523  3001               	movlw	(01h)
  4138  0524  00A4               	movwf	(??_SegmentDisplay_Main+0)+0
  4139  0525  0858               	movf	(_Segment),w
  4140  0526  3E16               	addlw	016h
  4141  0527  0086               	movwf	fsr1l
  4142  0528  0187               	clrf fsr1h	
  4143                           	
  4144  0529  0824               	movf	(??_SegmentDisplay_Main+0)+0,w
  4145  052A  0781               	addwf	indf1,f
  4146                           	line	101
  4147                           ;SegmentDisplay_A2.c: 101: }
  4148  052B  2D34               	goto	l3319
  4149                           	line	102
  4150                           	
  4151  052C                     l3317:	
  4152                           	line	104
  4153                           	
  4154  052C                     l7770:	
  4155                           ;SegmentDisplay_A2.c: 102: else
  4156                           ;SegmentDisplay_A2.c: 103: {
  4157                           ;SegmentDisplay_A2.c: 104: Segment->ComCount=0;
  4158  052C  0858               	movf	(_Segment),w
  4159  052D  3E16               	addlw	016h
  4160  052E  0086               	movwf	fsr1l
  4161  052F  0187               	clrf fsr1h	
  4162                           	
  4163  0530  0181               	clrf	indf1
  4164  0531  2D34               	goto	l3319
  4165                           	line	105
  4166                           	
  4167  0532                     l3318:	
  4168  0532  2D34               	goto	l3319
  4169                           	line	106
  4170                           	
  4171  0533                     l3309:	
  4172  0533  2D34               	goto	l3319
  4173                           	line	107
  4174                           	
  4175  0534                     l3308:	
  4176                           	line	108
  4177                           	
  4178  0534                     l3319:	
  4179  0534  0008               	return
  4180                           	opt stack 0
  4181                           GLOBAL	__end_of_SegmentDisplay_Main
  4182  0535                     	__end_of_SegmentDisplay_Main:
  4183 ;; =============== function _SegmentDisplay_Main ends ============
  4184                           
  4185                           	signat	_SegmentDisplay_Main,88
  4186                           	global	_MainT
  4187                           psect	text721,local,class=CODE,delta=2
  4188                           global __ptext721
  4189  0535                     __ptext721:
  4190                           
  4191 ;; *************** function _MainT *****************
  4192 ;; Defined at:
  4193 ;;		line 42 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\myMain.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  i               1    0        unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4207 ;;      Params:         0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0
  4210 ;;      Totals:         0       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    4
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_main
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           psect	text721
  4221                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\myMain.c"
  4222                           	line	42
  4223                           	global	__size_of_MainT
  4224  0073                     	__size_of_MainT	equ	__end_of_MainT-_MainT
  4225                           	
  4226  0535                     _MainT:	
  4227                           	opt	stack 11
  4228                           ; Regs used in _MainT: [wreg+fsr1l-status,0]
  4229                           	line	45
  4230                           	
  4231  0535                     l7714:	
  4232                           ;myMain.c: 43: char i;
  4233                           ;myMain.c: 45: if(!TMain->PowerON)
  4234  0535  0020               	movlb 0	; select bank0
  4235  0536  0859               	movf	(_TMain),w
  4236  0537  0086               	movwf	fsr1l
  4237  0538  0187               	clrf fsr1h	
  4238                           	
  4239  0539  1801               	btfsc	indf1,0
  4240  053A  2D3C               	goto	u4131
  4241  053B  2D3D               	goto	u4130
  4242  053C                     u4131:
  4243  053C  2D62               	goto	l7722
  4244  053D                     u4130:
  4245                           	line	47
  4246                           	
  4247  053D                     l7716:	
  4248                           ;myMain.c: 46: {
  4249                           ;myMain.c: 47: TMain->PowerCount++;
  4250  053D  0859               	movf	(_TMain),w
  4251  053E  3E01               	addlw	01h
  4252  053F  0086               	movwf	fsr1l
  4253  0540  0187               	clrf fsr1h	
  4254                           	
  4255  0541  3001               	movlw	01h
  4256  0542  0781               	addwf	indf1,f
  4257  0543  3141               	addfsr	fsr1,1
  4258  0544  1803               	skipnc
  4259  0545  0A81               	incf	indf1,f
  4260                           	line	48
  4261                           	
  4262  0546                     l7718:	
  4263                           ;myMain.c: 48: if(TMain->PowerCount == 1500)
  4264  0546  0859               	movf	(_TMain),w
  4265  0547  3E01               	addlw	01h
  4266  0548  0086               	movwf	fsr1l
  4267  0549  0187               	clrf fsr1h	
  4268                           	
  4269  054A  3F40               	moviw	[0]fsr1
  4270  054B  3ADC               	xorlw	low(05DCh)
  4271  054C  1D03               	skipz
  4272  054D  2D50               	goto	u4145
  4273  054E  3F41               	moviw	[1]fsr1
  4274  054F  3A05               	xorlw	high(05DCh)
  4275  0550                     u4145:
  4276  0550  1D03               	skipz
  4277  0551  2D53               	goto	u4141
  4278  0552  2D54               	goto	u4140
  4279  0553                     u4141:
  4280  0553  2DA7               	goto	l2275
  4281  0554                     u4140:
  4282                           	line	50
  4283                           	
  4284  0554                     l7720:	
  4285                           ;myMain.c: 49: {
  4286                           ;myMain.c: 50: TMain->PowerCount=0;
  4287  0554  0859               	movf	(_TMain),w
  4288  0555  3E01               	addlw	01h
  4289  0556  0086               	movwf	fsr1l
  4290  0557  0187               	clrf fsr1h	
  4291                           	
  4292  0558  3000               	movlw	low(0)
  4293  0559  3FC0               	movwi	[0]fsr1
  4294  055A  3000               	movlw	high(0)
  4295  055B  3FC1               	movwi	[1]fsr1
  4296                           	line	51
  4297                           ;myMain.c: 51: TMain->PowerON=1;
  4298  055C  0859               	movf	(_TMain),w
  4299  055D  0086               	movwf	fsr1l
  4300  055E  0187               	clrf fsr1h	
  4301                           	
  4302  055F  1401               	bsf	indf1,0
  4303  0560  2DA7               	goto	l2275
  4304                           	line	56
  4305                           	
  4306  0561                     l2270:	
  4307                           	line	57
  4308                           ;myMain.c: 56: }
  4309                           ;myMain.c: 57: }
  4310  0561  2DA7               	goto	l2275
  4311                           	line	58
  4312                           	
  4313  0562                     l2269:	
  4314                           	line	60
  4315                           	
  4316  0562                     l7722:	
  4317                           ;myMain.c: 58: else
  4318                           ;myMain.c: 59: {
  4319                           ;myMain.c: 60: TMain->Count1++;
  4320  0562  0859               	movf	(_TMain),w
  4321  0563  3E05               	addlw	05h
  4322  0564  0086               	movwf	fsr1l
  4323  0565  0187               	clrf fsr1h	
  4324                           	
  4325  0566  3001               	movlw	01h
  4326  0567  0781               	addwf	indf1,f
  4327  0568  3141               	addfsr	fsr1,1
  4328  0569  1803               	skipnc
  4329  056A  0A81               	incf	indf1,f
  4330                           	line	61
  4331                           	
  4332  056B                     l7724:	
  4333                           ;myMain.c: 61: if(TMain->Count1 == 1000)
  4334  056B  0859               	movf	(_TMain),w
  4335  056C  3E05               	addlw	05h
  4336  056D  0086               	movwf	fsr1l
  4337  056E  0187               	clrf fsr1h	
  4338                           	
  4339  056F  3F40               	moviw	[0]fsr1
  4340  0570  3AE8               	xorlw	low(03E8h)
  4341  0571  1D03               	skipz
  4342  0572  2D75               	goto	u4155
  4343  0573  3F41               	moviw	[1]fsr1
  4344  0574  3A03               	xorlw	high(03E8h)
  4345  0575                     u4155:
  4346  0575  1D03               	skipz
  4347  0576  2D78               	goto	u4151
  4348  0577  2D79               	goto	u4150
  4349  0578                     u4151:
  4350  0578  2D86               	goto	l7732
  4351  0579                     u4150:
  4352                           	line	63
  4353                           	
  4354  0579                     l7726:	
  4355                           ;myMain.c: 62: {
  4356                           ;myMain.c: 63: TMain->Count1=0;
  4357  0579  0859               	movf	(_TMain),w
  4358  057A  3E05               	addlw	05h
  4359  057B  0086               	movwf	fsr1l
  4360  057C  0187               	clrf fsr1h	
  4361                           	
  4362  057D  3000               	movlw	low(0)
  4363  057E  3FC0               	movwi	[0]fsr1
  4364  057F  3000               	movlw	high(0)
  4365  0580  3FC1               	movwi	[1]fsr1
  4366                           	line	64
  4367                           	
  4368  0581                     l7728:	
  4369                           ;myMain.c: 64: RA2=~RA2;
  4370  0581  3004               	movlw	1<<((98)&7)
  4371  0582  068C               	xorwf	((98)/8),f
  4372  0583  2D86               	goto	l7732
  4373                           	line	78
  4374                           	
  4375  0584                     l7730:	
  4376  0584  2D86               	goto	l7732
  4377                           	line	82
  4378                           ;myMain.c: 79: {
  4379                           	
  4380  0585                     l2273:	
  4381  0585  2D86               	goto	l7732
  4382                           	line	105
  4383                           	
  4384  0586                     l2272:	
  4385                           	line	108
  4386                           	
  4387  0586                     l7732:	
  4388                           ;myMain.c: 82: }
  4389                           ;myMain.c: 105: }
  4390                           ;myMain.c: 108: TMain->Count2++;
  4391  0586  0859               	movf	(_TMain),w
  4392  0587  3E07               	addlw	07h
  4393  0588  0086               	movwf	fsr1l
  4394  0589  0187               	clrf fsr1h	
  4395                           	
  4396  058A  3001               	movlw	01h
  4397  058B  0781               	addwf	indf1,f
  4398  058C  3141               	addfsr	fsr1,1
  4399  058D  1803               	skipnc
  4400  058E  0A81               	incf	indf1,f
  4401                           	line	109
  4402                           	
  4403  058F                     l7734:	
  4404                           ;myMain.c: 109: if(TMain->Count2 == 2000)
  4405  058F  0859               	movf	(_TMain),w
  4406  0590  3E07               	addlw	07h
  4407  0591  0086               	movwf	fsr1l
  4408  0592  0187               	clrf fsr1h	
  4409                           	
  4410  0593  3F40               	moviw	[0]fsr1
  4411  0594  3AD0               	xorlw	low(07D0h)
  4412  0595  1D03               	skipz
  4413  0596  2D99               	goto	u4165
  4414  0597  3F41               	moviw	[1]fsr1
  4415  0598  3A07               	xorlw	high(07D0h)
  4416  0599                     u4165:
  4417  0599  1D03               	skipz
  4418  059A  2D9C               	goto	u4161
  4419  059B  2D9D               	goto	u4160
  4420  059C                     u4161:
  4421  059C  2DA7               	goto	l2275
  4422  059D                     u4160:
  4423                           	line	111
  4424                           	
  4425  059D                     l7736:	
  4426                           ;myMain.c: 110: {
  4427                           ;myMain.c: 111: TMain->Count2=0;
  4428  059D  0859               	movf	(_TMain),w
  4429  059E  3E07               	addlw	07h
  4430  059F  0086               	movwf	fsr1l
  4431  05A0  0187               	clrf fsr1h	
  4432                           	
  4433  05A1  3000               	movlw	low(0)
  4434  05A2  3FC0               	movwi	[0]fsr1
  4435  05A3  3000               	movlw	high(0)
  4436  05A4  3FC1               	movwi	[1]fsr1
  4437  05A5  2DA7               	goto	l2275
  4438                           	line	124
  4439                           	
  4440  05A6                     l2274:	
  4441  05A6  2DA7               	goto	l2275
  4442                           	line	127
  4443                           	
  4444  05A7                     l2271:	
  4445                           	line	128
  4446                           	
  4447  05A7                     l2275:	
  4448  05A7  0008               	return
  4449                           	opt stack 0
  4450                           GLOBAL	__end_of_MainT
  4451  05A8                     	__end_of_MainT:
  4452 ;; =============== function _MainT ends ============
  4453                           
  4454                           	signat	_MainT,88
  4455                           	global	_SegmentDisplay_Initial
  4456                           psect	text722,local,class=CODE,delta=2
  4457                           global __ptext722
  4458  0DF5                     __ptext722:
  4459                           
  4460 ;; *************** function _SegmentDisplay_Initial *****************
  4461 ;; Defined at:
  4462 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;		None               void
  4469 ;; Registers used:
  4470 ;;		wreg, fsr1l, fsr1h
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4476 ;;      Params:         0       0       0       0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0
  4478 ;;      Temps:          0       1       0       0       0       0       0       0
  4479 ;;      Totals:         0       1       0       0       0       0       0       0
  4480 ;;Total ram usage:        1 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    4
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           psect	text722
  4490                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  4491                           	line	9
  4492                           	global	__size_of_SegmentDisplay_Initial
  4493  0010                     	__size_of_SegmentDisplay_Initial	equ	__end_of_SegmentDisplay_Initial-_SegmentDisplay_In
                                 itial
  4494                           	
  4495  0DF5                     _SegmentDisplay_Initial:	
  4496                           	opt	stack 11
  4497                           ; Regs used in _SegmentDisplay_Initial: [wregfsr1]
  4498                           	line	10
  4499                           	
  4500  0DF5                     l7708:	
  4501                           ;SegmentDisplay_A2.c: 10: Segment=&VarSegment;
  4502  0DF5  30C0               	movlw	(_VarSegment)&0ffh
  4503  0DF6  0020               	movlb 0	; select bank0
  4504  0DF7  00A4               	movwf	(??_SegmentDisplay_Initial+0)+0
  4505  0DF8  0824               	movf	(??_SegmentDisplay_Initial+0)+0,w
  4506  0DF9  00D8               	movwf	(_Segment)
  4507                           	line	11
  4508                           	
  4509  0DFA                     l7710:	
  4510                           ;SegmentDisplay_A2.c: 11: Segment->Enable=1;
  4511  0DFA  0858               	movf	(_Segment),w
  4512  0DFB  3E15               	addlw	015h
  4513  0DFC  0086               	movwf	fsr1l
  4514  0DFD  0187               	clrf fsr1h	
  4515                           	
  4516  0DFE  1401               	bsf	indf1,0
  4517                           	line	13
  4518                           	
  4519  0DFF                     l7712:	
  4520                           ;SegmentDisplay_A2.c: 13: Segment->Dec=1;
  4521  0DFF  0858               	movf	(_Segment),w
  4522  0E00  3E15               	addlw	015h
  4523  0E01  0086               	movwf	fsr1l
  4524  0E02  0187               	clrf fsr1h	
  4525                           	
  4526  0E03  1581               	bsf	indf1,3
  4527                           	line	18
  4528                           	
  4529  0E04                     l3288:	
  4530  0E04  0008               	return
  4531                           	opt stack 0
  4532                           GLOBAL	__end_of_SegmentDisplay_Initial
  4533  0E05                     	__end_of_SegmentDisplay_Initial:
  4534 ;; =============== function _SegmentDisplay_Initial ends ============
  4535                           
  4536                           	signat	_SegmentDisplay_Initial,88
  4537                           	global	_MainT_Initial
  4538                           psect	text723,local,class=CODE,delta=2
  4539                           global __ptext723
  4540  0DD6                     __ptext723:
  4541                           
  4542 ;; *************** function _MainT_Initial *****************
  4543 ;; Defined at:
  4544 ;;		line 34 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\myMain.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;		None               void
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4558 ;;      Params:         0       0       0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0
  4560 ;;      Temps:          0       1       0       0       0       0       0       0
  4561 ;;      Totals:         0       1       0       0       0       0       0       0
  4562 ;;Total ram usage:        1 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    4
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           psect	text723
  4572                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\myMain.c"
  4573                           	line	34
  4574                           	global	__size_of_MainT_Initial
  4575  000F                     	__size_of_MainT_Initial	equ	__end_of_MainT_Initial-_MainT_Initial
  4576                           	
  4577  0DD6                     _MainT_Initial:	
  4578                           	opt	stack 11
  4579                           ; Regs used in _MainT_Initial: [wregfsr1]
  4580                           	line	35
  4581                           	
  4582  0DD6                     l7702:	
  4583                           ;myMain.c: 35: TMain=&VarTMain;
  4584  0DD6  3044               	movlw	(_VarTMain)&0ffh
  4585  0DD7  0020               	movlb 0	; select bank0
  4586  0DD8  00A4               	movwf	(??_MainT_Initial+0)+0
  4587  0DD9  0824               	movf	(??_MainT_Initial+0)+0,w
  4588  0DDA  00D9               	movwf	(_TMain)
  4589                           	line	36
  4590                           	
  4591  0DDB                     l7704:	
  4592                           ;myMain.c: 36: TMain->FirstOpen=1;
  4593  0DDB  0859               	movf	(_TMain),w
  4594  0DDC  3E0D               	addlw	0Dh
  4595  0DDD  0086               	movwf	fsr1l
  4596  0DDE  0187               	clrf fsr1h	
  4597                           	
  4598  0DDF  1401               	bsf	indf1,0
  4599                           	line	37
  4600                           	
  4601  0DE0                     l7706:	
  4602                           ;myMain.c: 37: Product=&VarProduct;
  4603  0DE0  30A0               	movlw	(_VarProduct)&0ffh
  4604  0DE1  00A4               	movwf	(??_MainT_Initial+0)+0
  4605  0DE2  0824               	movf	(??_MainT_Initial+0)+0,w
  4606  0DE3  00D7               	movwf	(_Product)
  4607                           	line	38
  4608                           	
  4609  0DE4                     l2266:	
  4610  0DE4  0008               	return
  4611                           	opt stack 0
  4612                           GLOBAL	__end_of_MainT_Initial
  4613  0DE5                     	__end_of_MainT_Initial:
  4614 ;; =============== function _MainT_Initial ends ============
  4615                           
  4616                           	signat	_MainT_Initial,88
  4617                           	global	_putch
  4618                           psect	text724,local,class=CODE,delta=2
  4619                           global __ptext724
  4620  0DBC                     __ptext724:
  4621                           
  4622 ;; *************** function _putch *****************
  4623 ;; Defined at:
  4624 ;;		line 780 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  byte            1    wreg     unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  byte            1    4[BANK0 ] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;		None               void
  4631 ;; Registers used:
  4632 ;;		wreg
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4638 ;;      Params:         0       0       0       0       0       0       0       0
  4639 ;;      Locals:         0       1       0       0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0
  4641 ;;      Totals:         0       1       0       0       0       0       0       0
  4642 ;;Total ram usage:        1 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    4
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_printf
  4649 ;;		_getche
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           psect	text724
  4653                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4654                           	line	780
  4655                           	global	__size_of_putch
  4656  000C                     	__size_of_putch	equ	__end_of_putch-_putch
  4657                           	
  4658  0DBC                     _putch:	
  4659                           	opt	stack 8
  4660                           ; Regs used in _putch: [wreg]
  4661                           ;putch@byte stored from wreg
  4662  0DBC  0020               	movlb 0	; select bank0
  4663  0DBD  00A4               	movwf	(putch@byte)
  4664                           	line	782
  4665                           	
  4666  0DBE                     l7694:	
  4667                           ;MCU_B1.c: 782: while(!TXIF)
  4668  0DBE  2DBF               	goto	l1217
  4669                           	
  4670  0DBF                     l1218:	
  4671                           	line	783
  4672                           ;MCU_B1.c: 783: continue;
  4673                           	
  4674  0DBF                     l1217:	
  4675                           	line	782
  4676  0DBF  1E11               	btfss	(140/8),(140)&7
  4677  0DC0  2DC2               	goto	u4121
  4678  0DC1  2DC3               	goto	u4120
  4679  0DC2                     u4121:
  4680  0DC2  2DBF               	goto	l1217
  4681  0DC3                     u4120:
  4682  0DC3  2DC4               	goto	l7696
  4683                           	
  4684  0DC4                     l1219:	
  4685                           	line	784
  4686                           	
  4687  0DC4                     l7696:	
  4688                           ;MCU_B1.c: 784: TXREG = byte;
  4689  0DC4  0824               	movf	(putch@byte),w
  4690  0DC5  0023               	movlb 3	; select bank3
  4691  0DC6  009A               	movwf	(410)^0180h	;volatile
  4692                           	line	785
  4693                           	
  4694  0DC7                     l1220:	
  4695  0DC7  0008               	return
  4696                           	opt stack 0
  4697                           GLOBAL	__end_of_putch
  4698  0DC8                     	__end_of_putch:
  4699 ;; =============== function _putch ends ============
  4700                           
  4701                           	signat	_putch,4216
  4702                           	global	_UART_Receive
  4703                           psect	text725,local,class=CODE,delta=2
  4704                           global __ptext725
  4705  0F12                     __ptext725:
  4706                           
  4707 ;; *************** function _UART_Receive *****************
  4708 ;; Defined at:
  4709 ;;		line 741 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  i               1    7[BANK0 ] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;		None               void
  4716 ;; Registers used:
  4717 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4723 ;;      Params:         0       0       0       0       0       0       0       0
  4724 ;;      Locals:         0       1       0       0       0       0       0       0
  4725 ;;      Temps:          0       3       0       0       0       0       0       0
  4726 ;;      Totals:         0       4       0       0       0       0       0       0
  4727 ;;Total ram usage:        4 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    4
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_UART_Main
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           psect	text725
  4737                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4738                           	line	741
  4739                           	global	__size_of_UART_Receive
  4740  0039                     	__size_of_UART_Receive	equ	__end_of_UART_Receive-_UART_Receive
  4741                           	
  4742  0F12                     _UART_Receive:	
  4743                           	opt	stack 10
  4744                           ; Regs used in _UART_Receive: [wreg+fsr1l-status,0]
  4745                           	line	743
  4746                           	
  4747  0F12                     l7676:	
  4748                           ;MCU_B1.c: 742: char i;
  4749                           ;MCU_B1.c: 743: RA1=~RA1;
  4750  0F12  3002               	movlw	1<<((97)&7)
  4751  0F13  0020               	movlb 0	; select bank0
  4752  0F14  068C               	xorwf	((97)/8),f
  4753                           	line	745
  4754                           	
  4755  0F15                     l7678:	
  4756                           ;MCU_B1.c: 745: TMain->Test=1;
  4757  0F15  0859               	movf	(_TMain),w
  4758  0F16  3E0C               	addlw	0Ch
  4759  0F17  0086               	movwf	fsr1l
  4760  0F18  0187               	clrf fsr1h	
  4761                           	
  4762  0F19  0181               	clrf	indf1
  4763  0F1A  1403               	bsf	status,0
  4764  0F1B  0D81               	rlf	indf1,f
  4765                           	line	747
  4766                           	
  4767  0F1C                     l7680:	
  4768                           ;MCU_B1.c: 747: for(i=0;i<32;i++)
  4769  0F1C  01A7               	clrf	(UART_Receive@i)
  4770                           	
  4771  0F1D                     l7682:	
  4772  0F1D  3020               	movlw	(020h)
  4773  0F1E  0227               	subwf	(UART_Receive@i),w
  4774  0F1F  1C03               	skipc
  4775  0F20  2F22               	goto	u4101
  4776  0F21  2F23               	goto	u4100
  4777  0F22                     u4101:
  4778  0F22  2F25               	goto	l7686
  4779  0F23                     u4100:
  4780  0F23  2F44               	goto	l7692
  4781                           	
  4782  0F24                     l7684:	
  4783  0F24  2F44               	goto	l7692
  4784                           	line	748
  4785                           	
  4786  0F25                     l1209:	
  4787                           	line	749
  4788                           	
  4789  0F25                     l7686:	
  4790                           ;MCU_B1.c: 748: {
  4791                           ;MCU_B1.c: 749: I2C->BufferWriter[i]=UART->RxData[i];
  4792  0F25  0827               	movf	(UART_Receive@i),w
  4793  0F26  3E20               	addlw	020h
  4794  0F27  075B               	addwf	(_UART),w
  4795  0F28  00A4               	movwf	(??_UART_Receive+0)+0
  4796  0F29  0824               	movf	0+(??_UART_Receive+0)+0,w
  4797  0F2A  0086               	movwf	fsr1l
  4798  0F2B  3001               	movlw 1	; select bank2/3
  4799  0F2C  0087               	movwf fsr1h	
  4800                           	
  4801  0F2D  0801               	movf	indf1,w
  4802  0F2E  00A5               	movwf	(??_UART_Receive+1)+0
  4803  0F2F  0827               	movf	(UART_Receive@i),w
  4804  0F30  3E20               	addlw	020h
  4805  0F31  0756               	addwf	(_I2C),w
  4806  0F32  00A6               	movwf	(??_UART_Receive+2)+0
  4807  0F33  0826               	movf	0+(??_UART_Receive+2)+0,w
  4808  0F34  0086               	movwf	fsr1l
  4809  0F35  3001               	movlw 1	; select bank2/3
  4810  0F36  0087               	movwf fsr1h	
  4811                           	
  4812  0F37  0825               	movf	(??_UART_Receive+1)+0,w
  4813  0F38  0081               	movwf	indf1
  4814                           	line	747
  4815                           	
  4816  0F39                     l7688:	
  4817  0F39  3001               	movlw	(01h)
  4818  0F3A  00A4               	movwf	(??_UART_Receive+0)+0
  4819  0F3B  0824               	movf	(??_UART_Receive+0)+0,w
  4820  0F3C  07A7               	addwf	(UART_Receive@i),f
  4821                           	
  4822  0F3D                     l7690:	
  4823  0F3D  3020               	movlw	(020h)
  4824  0F3E  0227               	subwf	(UART_Receive@i),w
  4825  0F3F  1C03               	skipc
  4826  0F40  2F42               	goto	u4111
  4827  0F41  2F43               	goto	u4110
  4828  0F42                     u4111:
  4829  0F42  2F25               	goto	l7686
  4830  0F43                     u4110:
  4831  0F43  2F44               	goto	l7692
  4832                           	
  4833  0F44                     l1210:	
  4834                           	line	751
  4835                           	
  4836  0F44                     l7692:	
  4837                           ;MCU_B1.c: 750: }
  4838                           ;MCU_B1.c: 751: I2C->MasterTxGO=1;
  4839  0F44  0856               	movf	(_I2C),w
  4840  0F45  3E42               	addlw	042h
  4841  0F46  0086               	movwf	fsr1l
  4842  0F47  3001               	movlw 1	; select bank2/3
  4843  0F48  0087               	movwf fsr1h	
  4844                           	
  4845  0F49  1581               	bsf	indf1,3
  4846                           	line	765
  4847                           	
  4848  0F4A                     l1211:	
  4849  0F4A  0008               	return
  4850                           	opt stack 0
  4851                           GLOBAL	__end_of_UART_Receive
  4852  0F4B                     	__end_of_UART_Receive:
  4853 ;; =============== function _UART_Receive ends ============
  4854                           
  4855                           	signat	_UART_Receive,88
  4856                           	global	_I2C_Master_Transmission
  4857                           psect	text726,local,class=CODE,delta=2
  4858                           global __ptext726
  4859  0681                     __ptext726:
  4860                           
  4861 ;; *************** function _I2C_Master_Transmission *****************
  4862 ;; Defined at:
  4863 ;;		line 542 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;  i               1    5[BANK0 ] unsigned char 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;		None               void
  4870 ;; Registers used:
  4871 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4877 ;;      Params:         0       0       0       0       0       0       0       0
  4878 ;;      Locals:         0       1       0       0       0       0       0       0
  4879 ;;      Temps:          0       1       0       0       0       0       0       0
  4880 ;;      Totals:         0       2       0       0       0       0       0       0
  4881 ;;Total ram usage:        2 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    4
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_I2C_Main
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           psect	text726
  4891                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4892                           	line	542
  4893                           	global	__size_of_I2C_Master_Transmission
  4894  0064                     	__size_of_I2C_Master_Transmission	equ	__end_of_I2C_Master_Transmission-_I2C_Master_Tran
                                 smission
  4895                           	
  4896  0681                     _I2C_Master_Transmission:	
  4897                           	opt	stack 10
  4898                           ; Regs used in _I2C_Master_Transmission: [wreg+fsr1l-status,0]
  4899                           	line	544
  4900                           	
  4901  0681                     l7626:	
  4902                           ;MCU_B1.c: 543: char i;
  4903                           ;MCU_B1.c: 544: while(SEN);
  4904  0681  2E82               	goto	l1076
  4905                           	
  4906  0682                     l1077:	
  4907                           	
  4908  0682                     l1076:	
  4909  0682  0024               	movlb 4	; select bank4
  4910  0683  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4911  0684  2E86               	goto	u3901
  4912  0685  2E87               	goto	u3900
  4913  0686                     u3901:
  4914  0686  2E82               	goto	l1076
  4915  0687                     u3900:
  4916                           	
  4917  0687                     l1078:	
  4918                           	line	545
  4919                           ;MCU_B1.c: 545: SEN=1;
  4920  0687  1416               	bsf	(4272/8)^0200h,(4272)&7
  4921                           	line	547
  4922                           ;MCU_B1.c: 547: while(SEN);
  4923  0688  2E89               	goto	l1079
  4924                           	
  4925  0689                     l1080:	
  4926                           	
  4927  0689                     l1079:	
  4928  0689  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4929  068A  2E8C               	goto	u3911
  4930  068B  2E8D               	goto	u3910
  4931  068C                     u3911:
  4932  068C  2E89               	goto	l1079
  4933  068D                     u3910:
  4934  068D  2E8E               	goto	l7628
  4935                           	
  4936  068E                     l1081:	
  4937                           	line	550
  4938                           	
  4939  068E                     l7628:	
  4940                           ;MCU_B1.c: 550: SSPBUF=0x10;
  4941  068E  3010               	movlw	(010h)
  4942  068F  0091               	movwf	(529)^0200h	;volatile
  4943                           	line	551
  4944                           ;MCU_B1.c: 551: while(BF);
  4945  0690  2E91               	goto	l1082
  4946                           	
  4947  0691                     l1083:	
  4948                           	
  4949  0691                     l1082:	
  4950  0691  1814               	btfsc	(4256/8)^0200h,(4256)&7
  4951  0692  2E94               	goto	u3921
  4952  0693  2E95               	goto	u3920
  4953  0694                     u3921:
  4954  0694  2E91               	goto	l1082
  4955  0695                     u3920:
  4956  0695  2E97               	goto	l1085
  4957                           	
  4958  0696                     l1084:	
  4959                           	line	554
  4960                           ;MCU_B1.c: 554: while(ACKSTAT);
  4961  0696  2E97               	goto	l1085
  4962                           	
  4963  0697                     l1086:	
  4964                           	
  4965  0697                     l1085:	
  4966  0697  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  4967  0698  2E9A               	goto	u3931
  4968  0699  2E9B               	goto	u3930
  4969  069A                     u3931:
  4970  069A  2E97               	goto	l1085
  4971  069B                     u3930:
  4972                           	
  4973  069B                     l1087:	
  4974                           	line	556
  4975                           ;MCU_B1.c: 556: for(i=0;i<32;i++)
  4976  069B  0020               	movlb 0	; select bank0
  4977  069C  01A5               	clrf	(I2C_Master_Transmission@i)
  4978                           	
  4979  069D                     l7630:	
  4980  069D  3020               	movlw	(020h)
  4981  069E  0225               	subwf	(I2C_Master_Transmission@i),w
  4982  069F  1C03               	skipc
  4983  06A0  2EA2               	goto	u3941
  4984  06A1  2EA3               	goto	u3940
  4985  06A2                     u3941:
  4986  06A2  2EA6               	goto	l1090
  4987  06A3                     u3940:
  4988  06A3  2ED1               	goto	l1099
  4989                           	
  4990  06A4                     l7632:	
  4991  06A4  2ED1               	goto	l1099
  4992                           	line	557
  4993                           	
  4994  06A5                     l1088:	
  4995                           	line	558
  4996                           ;MCU_B1.c: 557: {
  4997                           ;MCU_B1.c: 558: while(SEN);
  4998  06A5  2EA6               	goto	l1090
  4999                           	
  5000  06A6                     l1091:	
  5001                           	
  5002  06A6                     l1090:	
  5003  06A6  0024               	movlb 4	; select bank4
  5004  06A7  1816               	btfsc	(4272/8)^0200h,(4272)&7
  5005  06A8  2EAA               	goto	u3951
  5006  06A9  2EAB               	goto	u3950
  5007  06AA                     u3951:
  5008  06AA  2EA6               	goto	l1090
  5009  06AB                     u3950:
  5010  06AB  2EAC               	goto	l7634
  5011                           	
  5012  06AC                     l1092:	
  5013                           	line	559
  5014                           	
  5015  06AC                     l7634:	
  5016                           ;MCU_B1.c: 559: SSPBUF=I2C->BufferWriter[i];
  5017  06AC  0020               	movlb 0	; select bank0
  5018  06AD  0825               	movf	(I2C_Master_Transmission@i),w
  5019  06AE  3E20               	addlw	020h
  5020  06AF  0756               	addwf	(_I2C),w
  5021  06B0  00A4               	movwf	(??_I2C_Master_Transmission+0)+0
  5022  06B1  0824               	movf	0+(??_I2C_Master_Transmission+0)+0,w
  5023  06B2  0086               	movwf	fsr1l
  5024  06B3  3001               	movlw 1	; select bank2/3
  5025  06B4  0087               	movwf fsr1h	
  5026                           	
  5027  06B5  0801               	movf	indf1,w
  5028  06B6  0024               	movlb 4	; select bank4
  5029  06B7  0091               	movwf	(529)^0200h	;volatile
  5030                           	line	560
  5031                           ;MCU_B1.c: 560: while(BF);
  5032  06B8  2EB9               	goto	l1093
  5033                           	
  5034  06B9                     l1094:	
  5035                           	
  5036  06B9                     l1093:	
  5037  06B9  1814               	btfsc	(4256/8)^0200h,(4256)&7
  5038  06BA  2EBC               	goto	u3961
  5039  06BB  2EBD               	goto	u3960
  5040  06BC                     u3961:
  5041  06BC  2EB9               	goto	l1093
  5042  06BD                     u3960:
  5043  06BD  2EBF               	goto	l1096
  5044                           	
  5045  06BE                     l1095:	
  5046                           	line	563
  5047                           ;MCU_B1.c: 563: while(ACKSTAT);
  5048  06BE  2EBF               	goto	l1096
  5049                           	
  5050  06BF                     l1097:	
  5051                           	
  5052  06BF                     l1096:	
  5053  06BF  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  5054  06C0  2EC2               	goto	u3971
  5055  06C1  2EC3               	goto	u3970
  5056  06C2                     u3971:
  5057  06C2  2EBF               	goto	l1096
  5058  06C3                     u3970:
  5059  06C3  2EC4               	goto	l7636
  5060                           	
  5061  06C4                     l1098:	
  5062                           	line	556
  5063                           	
  5064  06C4                     l7636:	
  5065  06C4  3001               	movlw	(01h)
  5066  06C5  0020               	movlb 0	; select bank0
  5067  06C6  00A4               	movwf	(??_I2C_Master_Transmission+0)+0
  5068  06C7  0824               	movf	(??_I2C_Master_Transmission+0)+0,w
  5069  06C8  07A5               	addwf	(I2C_Master_Transmission@i),f
  5070                           	
  5071  06C9                     l7638:	
  5072  06C9  3020               	movlw	(020h)
  5073  06CA  0225               	subwf	(I2C_Master_Transmission@i),w
  5074  06CB  1C03               	skipc
  5075  06CC  2ECE               	goto	u3981
  5076  06CD  2ECF               	goto	u3980
  5077  06CE                     u3981:
  5078  06CE  2EA6               	goto	l1090
  5079  06CF                     u3980:
  5080  06CF  2ED1               	goto	l1099
  5081                           	
  5082  06D0                     l1089:	
  5083                           	line	566
  5084                           ;MCU_B1.c: 564: }
  5085                           ;MCU_B1.c: 566: while(SEN);
  5086  06D0  2ED1               	goto	l1099
  5087                           	
  5088  06D1                     l1100:	
  5089                           	
  5090  06D1                     l1099:	
  5091  06D1  0024               	movlb 4	; select bank4
  5092  06D2  1816               	btfsc	(4272/8)^0200h,(4272)&7
  5093  06D3  2ED5               	goto	u3991
  5094  06D4  2ED6               	goto	u3990
  5095  06D5                     u3991:
  5096  06D5  2ED1               	goto	l1099
  5097  06D6                     u3990:
  5098  06D6  2ED9               	goto	l1102
  5099                           	
  5100  06D7                     l1101:	
  5101                           	line	567
  5102                           ;MCU_B1.c: 567: while(!PEN)
  5103  06D7  2ED9               	goto	l1102
  5104                           	
  5105  06D8                     l1103:	
  5106                           	line	568
  5107                           ;MCU_B1.c: 568: PEN=1;
  5108  06D8  1516               	bsf	(4274/8)^0200h,(4274)&7
  5109                           	
  5110  06D9                     l1102:	
  5111                           	line	567
  5112  06D9  1D16               	btfss	(4274/8)^0200h,(4274)&7
  5113  06DA  2EDC               	goto	u4001
  5114  06DB  2EDD               	goto	u4000
  5115  06DC                     u4001:
  5116  06DC  2ED8               	goto	l1103
  5117  06DD                     u4000:
  5118  06DD  2EDF               	goto	l1105
  5119                           	
  5120  06DE                     l1104:	
  5121                           	line	569
  5122                           ;MCU_B1.c: 569: while(PEN);
  5123  06DE  2EDF               	goto	l1105
  5124                           	
  5125  06DF                     l1106:	
  5126                           	
  5127  06DF                     l1105:	
  5128  06DF  1916               	btfsc	(4274/8)^0200h,(4274)&7
  5129  06E0  2EE2               	goto	u4011
  5130  06E1  2EE3               	goto	u4010
  5131  06E2                     u4011:
  5132  06E2  2EDF               	goto	l1105
  5133  06E3                     u4010:
  5134  06E3  2EE4               	goto	l1108
  5135                           	
  5136  06E4                     l1107:	
  5137                           	line	572
  5138                           	
  5139  06E4                     l1108:	
  5140  06E4  0008               	return
  5141                           	opt stack 0
  5142                           GLOBAL	__end_of_I2C_Master_Transmission
  5143  06E5                     	__end_of_I2C_Master_Transmission:
  5144 ;; =============== function _I2C_Master_Transmission ends ============
  5145                           
  5146                           	signat	_I2C_Master_Transmission,88
  5147                           	global	_I2C_Master_Reception
  5148                           psect	text727,local,class=CODE,delta=2
  5149                           global __ptext727
  5150  038B                     __ptext727:
  5151                           
  5152 ;; *************** function _I2C_Master_Reception *****************
  5153 ;; Defined at:
  5154 ;;		line 575 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  i               1    6[BANK0 ] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;		None               void
  5161 ;; Registers used:
  5162 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5168 ;;      Params:         0       0       0       0       0       0       0       0
  5169 ;;      Locals:         0       1       0       0       0       0       0       0
  5170 ;;      Temps:          0       2       0       0       0       0       0       0
  5171 ;;      Totals:         0       3       0       0       0       0       0       0
  5172 ;;Total ram usage:        3 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    4
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_I2C_Main
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           psect	text727
  5182                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5183                           	line	575
  5184                           	global	__size_of_I2C_Master_Reception
  5185  0097                     	__size_of_I2C_Master_Reception	equ	__end_of_I2C_Master_Reception-_I2C_Master_Reception
  5186                           	
  5187  038B                     _I2C_Master_Reception:	
  5188                           	opt	stack 10
  5189                           ; Regs used in _I2C_Master_Reception: [wreg+fsr1l-status,0]
  5190                           	line	577
  5191                           	
  5192  038B                     l7612:	
  5193                           ;MCU_B1.c: 576: char i;
  5194                           ;MCU_B1.c: 577: while(SEN);
  5195  038B  2B8C               	goto	l1111
  5196                           	
  5197  038C                     l1112:	
  5198                           	
  5199  038C                     l1111:	
  5200  038C  0024               	movlb 4	; select bank4
  5201  038D  1816               	btfsc	(4272/8)^0200h,(4272)&7
  5202  038E  2B90               	goto	u3701
  5203  038F  2B91               	goto	u3700
  5204  0390                     u3701:
  5205  0390  2B8C               	goto	l1111
  5206  0391                     u3700:
  5207                           	
  5208  0391                     l1113:	
  5209                           	line	578
  5210                           ;MCU_B1.c: 578: SEN=1;
  5211  0391  1416               	bsf	(4272/8)^0200h,(4272)&7
  5212                           	line	579
  5213                           ;MCU_B1.c: 579: while(SEN);
  5214  0392  2B93               	goto	l1114
  5215                           	
  5216  0393                     l1115:	
  5217                           	
  5218  0393                     l1114:	
  5219  0393  1816               	btfsc	(4272/8)^0200h,(4272)&7
  5220  0394  2B96               	goto	u3711
  5221  0395  2B97               	goto	u3710
  5222  0396                     u3711:
  5223  0396  2B93               	goto	l1114
  5224  0397                     u3710:
  5225  0397  2B98               	goto	l7614
  5226                           	
  5227  0398                     l1116:	
  5228                           	line	582
  5229                           	
  5230  0398                     l7614:	
  5231                           ;MCU_B1.c: 582: SSPBUF=0x11;
  5232  0398  3011               	movlw	(011h)
  5233  0399  0091               	movwf	(529)^0200h	;volatile
  5234                           	line	585
  5235                           ;MCU_B1.c: 585: while(BF);
  5236  039A  2B9B               	goto	l1117
  5237                           	
  5238  039B                     l1118:	
  5239                           	
  5240  039B                     l1117:	
  5241  039B  1814               	btfsc	(4256/8)^0200h,(4256)&7
  5242  039C  2B9E               	goto	u3721
  5243  039D  2B9F               	goto	u3720
  5244  039E                     u3721:
  5245  039E  2B9B               	goto	l1117
  5246  039F                     u3720:
  5247  039F  2BA1               	goto	l1120
  5248                           	
  5249  03A0                     l1119:	
  5250                           	line	586
  5251                           ;MCU_B1.c: 586: while(ACKSTAT);
  5252  03A0  2BA1               	goto	l1120
  5253                           	
  5254  03A1                     l1121:	
  5255                           	
  5256  03A1                     l1120:	
  5257  03A1  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  5258  03A2  2BA4               	goto	u3731
  5259  03A3  2BA5               	goto	u3730
  5260  03A4                     u3731:
  5261  03A4  2BA1               	goto	l1120
  5262  03A5                     u3730:
  5263                           	
  5264  03A5                     l1122:	
  5265                           	line	589
  5266                           ;MCU_B1.c: 589: for(i=0;i<32;i++)
  5267  03A5  0020               	movlb 0	; select bank0
  5268  03A6  01A6               	clrf	(I2C_Master_Reception@i)
  5269                           	
  5270  03A7                     l7616:	
  5271  03A7  3020               	movlw	(020h)
  5272  03A8  0226               	subwf	(I2C_Master_Reception@i),w
  5273  03A9  1C03               	skipc
  5274  03AA  2BAC               	goto	u3741
  5275  03AB  2BAD               	goto	u3740
  5276  03AC                     u3741:
  5277  03AC  2BB0               	goto	l1125
  5278  03AD                     u3740:
  5279  03AD  2BE9               	goto	l1140
  5280                           	
  5281  03AE                     l7618:	
  5282  03AE  2BE9               	goto	l1140
  5283                           	line	590
  5284                           	
  5285  03AF                     l1123:	
  5286                           	line	591
  5287                           ;MCU_B1.c: 590: {
  5288                           ;MCU_B1.c: 591: while(SEN);
  5289  03AF  2BB0               	goto	l1125
  5290                           	
  5291  03B0                     l1126:	
  5292                           	
  5293  03B0                     l1125:	
  5294  03B0  0024               	movlb 4	; select bank4
  5295  03B1  1816               	btfsc	(4272/8)^0200h,(4272)&7
  5296  03B2  2BB4               	goto	u3751
  5297  03B3  2BB5               	goto	u3750
  5298  03B4                     u3751:
  5299  03B4  2BB0               	goto	l1125
  5300  03B5                     u3750:
  5301  03B5  2BB7               	goto	l1128
  5302                           	
  5303  03B6                     l1127:	
  5304                           	line	592
  5305                           ;MCU_B1.c: 592: while(RCEN);
  5306  03B6  2BB7               	goto	l1128
  5307                           	
  5308  03B7                     l1129:	
  5309                           	
  5310  03B7                     l1128:	
  5311  03B7  1996               	btfsc	(4275/8)^0200h,(4275)&7
  5312  03B8  2BBA               	goto	u3761
  5313  03B9  2BBB               	goto	u3760
  5314  03BA                     u3761:
  5315  03BA  2BB7               	goto	l1128
  5316  03BB                     u3760:
  5317                           	
  5318  03BB                     l1130:	
  5319                           	line	593
  5320                           ;MCU_B1.c: 593: RCEN=1;
  5321  03BB  1596               	bsf	(4275/8)^0200h,(4275)&7
  5322                           	line	594
  5323                           ;MCU_B1.c: 594: while(RCEN);
  5324  03BC  2BBD               	goto	l1131
  5325                           	
  5326  03BD                     l1132:	
  5327                           	
  5328  03BD                     l1131:	
  5329  03BD  1996               	btfsc	(4275/8)^0200h,(4275)&7
  5330  03BE  2BC0               	goto	u3771
  5331  03BF  2BC1               	goto	u3770
  5332  03C0                     u3771:
  5333  03C0  2BBD               	goto	l1131
  5334  03C1                     u3770:
  5335  03C1  2BC2               	goto	l7620
  5336                           	
  5337  03C2                     l1133:	
  5338                           	line	595
  5339                           	
  5340  03C2                     l7620:	
  5341                           ;MCU_B1.c: 595: I2C->BufferReader[i]=SSPBUF;
  5342  03C2  0811               	movf	(529)^0200h,w	;volatile
  5343  03C3  0020               	movlb 0	; select bank0
  5344  03C4  00A4               	movwf	(??_I2C_Master_Reception+0)+0
  5345  03C5  0826               	movf	(I2C_Master_Reception@i),w
  5346  03C6  0756               	addwf	(_I2C),w
  5347  03C7  00A5               	movwf	(??_I2C_Master_Reception+1)+0
  5348  03C8  0825               	movf	0+(??_I2C_Master_Reception+1)+0,w
  5349  03C9  0086               	movwf	fsr1l
  5350  03CA  3001               	movlw 1	; select bank2/3
  5351  03CB  0087               	movwf fsr1h	
  5352                           	
  5353  03CC  0824               	movf	(??_I2C_Master_Reception+0)+0,w
  5354  03CD  0081               	movwf	indf1
  5355                           	line	596
  5356                           ;MCU_B1.c: 596: while(!ACKEN)
  5357  03CE  2BD0               	goto	l1134
  5358                           	
  5359  03CF                     l1135:	
  5360                           	line	597
  5361                           ;MCU_B1.c: 597: ACKEN=1;
  5362  03CF  1616               	bsf	(4276/8)^0200h,(4276)&7
  5363                           	
  5364  03D0                     l1134:	
  5365                           	line	596
  5366  03D0  0024               	movlb 4	; select bank4
  5367  03D1  1E16               	btfss	(4276/8)^0200h,(4276)&7
  5368  03D2  2BD4               	goto	u3781
  5369  03D3  2BD5               	goto	u3780
  5370  03D4                     u3781:
  5371  03D4  2BCF               	goto	l1135
  5372  03D5                     u3780:
  5373  03D5  2BD7               	goto	l1137
  5374                           	
  5375  03D6                     l1136:	
  5376                           	line	598
  5377                           ;MCU_B1.c: 598: while(ACKEN);
  5378  03D6  2BD7               	goto	l1137
  5379                           	
  5380  03D7                     l1138:	
  5381                           	
  5382  03D7                     l1137:	
  5383  03D7  1A16               	btfsc	(4276/8)^0200h,(4276)&7
  5384  03D8  2BDA               	goto	u3791
  5385  03D9  2BDB               	goto	u3790
  5386  03DA                     u3791:
  5387  03DA  2BD7               	goto	l1137
  5388  03DB                     u3790:
  5389  03DB  2BDC               	goto	l7622
  5390                           	
  5391  03DC                     l1139:	
  5392                           	line	589
  5393                           	
  5394  03DC                     l7622:	
  5395  03DC  3001               	movlw	(01h)
  5396  03DD  0020               	movlb 0	; select bank0
  5397  03DE  00A4               	movwf	(??_I2C_Master_Reception+0)+0
  5398  03DF  0824               	movf	(??_I2C_Master_Reception+0)+0,w
  5399  03E0  07A6               	addwf	(I2C_Master_Reception@i),f
  5400                           	
  5401  03E1                     l7624:	
  5402  03E1  3020               	movlw	(020h)
  5403  03E2  0226               	subwf	(I2C_Master_Reception@i),w
  5404  03E3  1C03               	skipc
  5405  03E4  2BE6               	goto	u3801
  5406  03E5  2BE7               	goto	u3800
  5407  03E6                     u3801:
  5408  03E6  2BB0               	goto	l1125
  5409  03E7                     u3800:
  5410  03E7  2BE9               	goto	l1140
  5411                           	
  5412  03E8                     l1124:	
  5413                           	line	600
  5414                           ;MCU_B1.c: 599: }
  5415                           ;MCU_B1.c: 600: while(RCEN);
  5416  03E8  2BE9               	goto	l1140
  5417                           	
  5418  03E9                     l1141:	
  5419                           	
  5420  03E9                     l1140:	
  5421  03E9  0024               	movlb 4	; select bank4
  5422  03EA  1996               	btfsc	(4275/8)^0200h,(4275)&7
  5423  03EB  2BED               	goto	u3811
  5424  03EC  2BEE               	goto	u3810
  5425  03ED                     u3811:
  5426  03ED  2BE9               	goto	l1140
  5427  03EE                     u3810:
  5428                           	
  5429  03EE                     l1142:	
  5430                           	line	601
  5431                           ;MCU_B1.c: 601: RCEN=1;
  5432  03EE  1596               	bsf	(4275/8)^0200h,(4275)&7
  5433                           	line	602
  5434                           ;MCU_B1.c: 602: while(RCEN);
  5435  03EF  2BF0               	goto	l1143
  5436                           	
  5437  03F0                     l1144:	
  5438                           	
  5439  03F0                     l1143:	
  5440  03F0  1996               	btfsc	(4275/8)^0200h,(4275)&7
  5441  03F1  2BF3               	goto	u3821
  5442  03F2  2BF4               	goto	u3820
  5443  03F3                     u3821:
  5444  03F3  2BF0               	goto	l1143
  5445  03F4                     u3820:
  5446  03F4  2BF7               	goto	l1146
  5447                           	
  5448  03F5                     l1145:	
  5449                           	line	603
  5450                           ;MCU_B1.c: 603: while(!ACKEN)
  5451  03F5  2BF7               	goto	l1146
  5452                           	
  5453  03F6                     l1147:	
  5454                           	line	604
  5455                           ;MCU_B1.c: 604: ACKEN=1;
  5456  03F6  1616               	bsf	(4276/8)^0200h,(4276)&7
  5457                           	
  5458  03F7                     l1146:	
  5459                           	line	603
  5460  03F7  1E16               	btfss	(4276/8)^0200h,(4276)&7
  5461  03F8  2BFA               	goto	u3831
  5462  03F9  2BFB               	goto	u3830
  5463  03FA                     u3831:
  5464  03FA  2BF6               	goto	l1147
  5465  03FB                     u3830:
  5466  03FB  2BFD               	goto	l1149
  5467                           	
  5468  03FC                     l1148:	
  5469                           	line	605
  5470                           ;MCU_B1.c: 605: while(ACKEN);
  5471  03FC  2BFD               	goto	l1149
  5472                           	
  5473  03FD                     l1150:	
  5474                           	
  5475  03FD                     l1149:	
  5476  03FD  1A16               	btfsc	(4276/8)^0200h,(4276)&7
  5477  03FE  2C00               	goto	u3841
  5478  03FF  2C01               	goto	u3840
  5479  0400                     u3841:
  5480  0400  2BFD               	goto	l1149
  5481  0401                     u3840:
  5482  0401  2C03               	goto	l1152
  5483                           	
  5484  0402                     l1151:	
  5485                           	line	606
  5486                           ;MCU_B1.c: 606: while(RCEN);
  5487  0402  2C03               	goto	l1152
  5488                           	
  5489  0403                     l1153:	
  5490                           	
  5491  0403                     l1152:	
  5492  0403  1996               	btfsc	(4275/8)^0200h,(4275)&7
  5493  0404  2C06               	goto	u3851
  5494  0405  2C07               	goto	u3850
  5495  0406                     u3851:
  5496  0406  2C03               	goto	l1152
  5497  0407                     u3850:
  5498                           	
  5499  0407                     l1154:	
  5500                           	line	607
  5501                           ;MCU_B1.c: 607: RCEN=1;
  5502  0407  1596               	bsf	(4275/8)^0200h,(4275)&7
  5503                           	line	608
  5504                           ;MCU_B1.c: 608: while(RCEN);
  5505  0408  2C09               	goto	l1155
  5506                           	
  5507  0409                     l1156:	
  5508                           	
  5509  0409                     l1155:	
  5510  0409  1996               	btfsc	(4275/8)^0200h,(4275)&7
  5511  040A  2C0C               	goto	u3861
  5512  040B  2C0D               	goto	u3860
  5513  040C                     u3861:
  5514  040C  2C09               	goto	l1155
  5515  040D                     u3860:
  5516  040D  2C0F               	goto	l1158
  5517                           	
  5518  040E                     l1157:	
  5519                           	line	610
  5520                           ;MCU_B1.c: 610: while(SEN);
  5521  040E  2C0F               	goto	l1158
  5522                           	
  5523  040F                     l1159:	
  5524                           	
  5525  040F                     l1158:	
  5526  040F  1816               	btfsc	(4272/8)^0200h,(4272)&7
  5527  0410  2C12               	goto	u3871
  5528  0411  2C13               	goto	u3870
  5529  0412                     u3871:
  5530  0412  2C0F               	goto	l1158
  5531  0413                     u3870:
  5532  0413  2C16               	goto	l1161
  5533                           	
  5534  0414                     l1160:	
  5535                           	line	611
  5536                           ;MCU_B1.c: 611: while(!PEN)
  5537  0414  2C16               	goto	l1161
  5538                           	
  5539  0415                     l1162:	
  5540                           	line	612
  5541                           ;MCU_B1.c: 612: PEN=1;
  5542  0415  1516               	bsf	(4274/8)^0200h,(4274)&7
  5543                           	
  5544  0416                     l1161:	
  5545                           	line	611
  5546  0416  1D16               	btfss	(4274/8)^0200h,(4274)&7
  5547  0417  2C19               	goto	u3881
  5548  0418  2C1A               	goto	u3880
  5549  0419                     u3881:
  5550  0419  2C15               	goto	l1162
  5551  041A                     u3880:
  5552  041A  2C1C               	goto	l1164
  5553                           	
  5554  041B                     l1163:	
  5555                           	line	613
  5556                           ;MCU_B1.c: 613: while(PEN);
  5557  041B  2C1C               	goto	l1164
  5558                           	
  5559  041C                     l1165:	
  5560                           	
  5561  041C                     l1164:	
  5562  041C  1916               	btfsc	(4274/8)^0200h,(4274)&7
  5563  041D  2C1F               	goto	u3891
  5564  041E  2C20               	goto	u3890
  5565  041F                     u3891:
  5566  041F  2C1C               	goto	l1164
  5567  0420                     u3890:
  5568  0420  2C21               	goto	l1167
  5569                           	
  5570  0421                     l1166:	
  5571                           	line	616
  5572                           	
  5573  0421                     l1167:	
  5574  0421  0008               	return
  5575                           	opt stack 0
  5576                           GLOBAL	__end_of_I2C_Master_Reception
  5577  0422                     	__end_of_I2C_Master_Reception:
  5578 ;; =============== function _I2C_Master_Reception ends ============
  5579                           
  5580                           	signat	_I2C_Master_Reception,88
  5581                           	global	_UART_Set
  5582                           psect	text728,local,class=CODE,delta=2
  5583                           global __ptext728
  5584  0E1B                     __ptext728:
  5585                           
  5586 ;; *************** function _UART_Set *****************
  5587 ;; Defined at:
  5588 ;;		line 666 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;		None               void
  5595 ;; Registers used:
  5596 ;;		wreg, status,2
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5602 ;;      Params:         0       0       0       0       0       0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0
  5604 ;;      Temps:          0       1       0       0       0       0       0       0
  5605 ;;      Totals:         0       1       0       0       0       0       0       0
  5606 ;;Total ram usage:        1 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; Hardware stack levels required when called:    4
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_Mcu_Initialization
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           psect	text728
  5616                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5617                           	line	666
  5618                           	global	__size_of_UART_Set
  5619  0019                     	__size_of_UART_Set	equ	__end_of_UART_Set-_UART_Set
  5620                           	
  5621  0E1B                     _UART_Set:	
  5622                           	opt	stack 10
  5623                           ; Regs used in _UART_Set: [wreg+status,2]
  5624                           	line	667
  5625                           	
  5626  0E1B                     l7550:	
  5627                           ;MCU_B1.c: 667: UART=&VarUart;
  5628  0E1B  30A0               	movlw	(_VarUart)&0ffh
  5629  0E1C  0020               	movlb 0	; select bank0
  5630  0E1D  00A4               	movwf	(??_UART_Set+0)+0
  5631  0E1E  0824               	movf	(??_UART_Set+0)+0,w
  5632  0E1F  00DB               	movwf	(_UART)
  5633                           	line	668
  5634                           	
  5635  0E20                     l7552:	
  5636                           ;MCU_B1.c: 668: TRISC7 = 1;
  5637  0E20  0021               	movlb 1	; select bank1
  5638  0E21  178E               	bsf	(1143/8)^080h,(1143)&7
  5639                           	line	669
  5640                           	
  5641  0E22                     l7554:	
  5642                           ;MCU_B1.c: 669: TRISC6 = 1;
  5643  0E22  170E               	bsf	(1142/8)^080h,(1142)&7
  5644                           	line	670
  5645                           ;MCU_B1.c: 670: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  5646  0E23  3033               	movlw	(033h)
  5647  0E24  0023               	movlb 3	; select bank3
  5648  0E25  009B               	movwf	(411)^0180h	;volatile
  5649                           	line	671
  5650                           	
  5651  0E26                     l7556:	
  5652                           ;MCU_B1.c: 671: SPBRGH = 0;
  5653  0E26  019C               	clrf	(412)^0180h	;volatile
  5654                           	line	672
  5655                           	
  5656  0E27                     l7558:	
  5657                           ;MCU_B1.c: 672: BRG16 = 0;
  5658  0E27  119F               	bcf	(3323/8)^0180h,(3323)&7
  5659                           	line	673
  5660                           	
  5661  0E28                     l7560:	
  5662                           ;MCU_B1.c: 673: RCSTA = (0|0x90);
  5663  0E28  3090               	movlw	(090h)
  5664  0E29  009D               	movwf	(413)^0180h	;volatile
  5665                           	line	674
  5666                           	
  5667  0E2A                     l7562:	
  5668                           ;MCU_B1.c: 674: TXSTA = (0x4|0|0x20);
  5669  0E2A  3024               	movlw	(024h)
  5670  0E2B  009E               	movwf	(414)^0180h	;volatile
  5671                           	line	675
  5672                           	
  5673  0E2C                     l7564:	
  5674                           ;MCU_B1.c: 675: TX9=0;
  5675  0E2C  131E               	bcf	(3318/8)^0180h,(3318)&7
  5676                           	line	676
  5677                           	
  5678  0E2D                     l7566:	
  5679                           ;MCU_B1.c: 676: RX9=0;
  5680  0E2D  131D               	bcf	(3310/8)^0180h,(3310)&7
  5681                           	line	677
  5682                           	
  5683  0E2E                     l7568:	
  5684                           ;MCU_B1.c: 677: TXIE=0;
  5685  0E2E  0021               	movlb 1	; select bank1
  5686  0E2F  1211               	bcf	(1164/8)^080h,(1164)&7
  5687                           	line	678
  5688                           	
  5689  0E30                     l7570:	
  5690                           ;MCU_B1.c: 678: RCIE=1;
  5691  0E30  1691               	bsf	(1165/8)^080h,(1165)&7
  5692                           	line	679
  5693                           	
  5694  0E31                     l7572:	
  5695                           ;MCU_B1.c: 679: PEIE=1;
  5696  0E31  170B               	bsf	(94/8),(94)&7
  5697                           	line	680
  5698                           	
  5699  0E32                     l7574:	
  5700                           ;MCU_B1.c: 680: GIE=1;
  5701  0E32  178B               	bsf	(95/8),(95)&7
  5702                           	line	681
  5703                           	
  5704  0E33                     l1188:	
  5705  0E33  0008               	return
  5706                           	opt stack 0
  5707                           GLOBAL	__end_of_UART_Set
  5708  0E34                     	__end_of_UART_Set:
  5709 ;; =============== function _UART_Set ends ============
  5710                           
  5711                           	signat	_UART_Set,88
  5712                           	global	_I2C_Set
  5713                           psect	text729,local,class=CODE,delta=2
  5714                           global __ptext729
  5715  0DC8                     __ptext729:
  5716                           
  5717 ;; *************** function _I2C_Set *****************
  5718 ;; Defined at:
  5719 ;;		line 400 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;		None               void
  5726 ;; Registers used:
  5727 ;;		wreg, status,2
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5733 ;;      Params:         0       0       0       0       0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0
  5735 ;;      Temps:          0       1       0       0       0       0       0       0
  5736 ;;      Totals:         0       1       0       0       0       0       0       0
  5737 ;;Total ram usage:        1 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    4
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_Mcu_Initialization
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           psect	text729
  5747                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5748                           	line	400
  5749                           	global	__size_of_I2C_Set
  5750  000E                     	__size_of_I2C_Set	equ	__end_of_I2C_Set-_I2C_Set
  5751                           	
  5752  0DC8                     _I2C_Set:	
  5753                           	opt	stack 10
  5754                           ; Regs used in _I2C_Set: [wreg+status,2]
  5755                           	line	401
  5756                           	
  5757  0DC8                     l7544:	
  5758                           ;MCU_B1.c: 401: I2C=&VarI2C;
  5759  0DC8  3020               	movlw	(_VarI2C)&0ffh
  5760  0DC9  0020               	movlb 0	; select bank0
  5761  0DCA  00A4               	movwf	(??_I2C_Set+0)+0
  5762  0DCB  0824               	movf	(??_I2C_Set+0)+0,w
  5763  0DCC  00D6               	movwf	(_I2C)
  5764                           	line	403
  5765                           ;MCU_B1.c: 403: SSPADD = 0x09;
  5766  0DCD  3009               	movlw	(09h)
  5767  0DCE  0024               	movlb 4	; select bank4
  5768  0DCF  0092               	movwf	(530)^0200h	;volatile
  5769                           	line	404
  5770                           ;MCU_B1.c: 404: SSPSTAT = 0x80;
  5771  0DD0  3080               	movlw	(080h)
  5772  0DD1  0094               	movwf	(532)^0200h	;volatile
  5773                           	line	405
  5774                           	
  5775  0DD2                     l7546:	
  5776                           ;MCU_B1.c: 405: SSPCON2 = 0;
  5777  0DD2  0196               	clrf	(534)^0200h	;volatile
  5778                           	line	407
  5779                           	
  5780  0DD3                     l7548:	
  5781                           ;MCU_B1.c: 407: SSPCON1=0b101000;
  5782  0DD3  3028               	movlw	(028h)
  5783  0DD4  0095               	movwf	(533)^0200h	;volatile
  5784                           	line	424
  5785                           	
  5786  0DD5                     l1054:	
  5787  0DD5  0008               	return
  5788                           	opt stack 0
  5789                           GLOBAL	__end_of_I2C_Set
  5790  0DD6                     	__end_of_I2C_Set:
  5791 ;; =============== function _I2C_Set ends ============
  5792                           
  5793                           	signat	_I2C_Set,88
  5794                           	global	_TMR1_Set
  5795                           psect	text730,local,class=CODE,delta=2
  5796                           global __ptext730
  5797  0DE5                     __ptext730:
  5798                           
  5799 ;; *************** function _TMR1_Set *****************
  5800 ;; Defined at:
  5801 ;;		line 239 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;		None               void
  5808 ;; Registers used:
  5809 ;;		wreg
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5815 ;;      Params:         0       0       0       0       0       0       0       0
  5816 ;;      Locals:         0       0       0       0       0       0       0       0
  5817 ;;      Temps:          0       1       0       0       0       0       0       0
  5818 ;;      Totals:         0       1       0       0       0       0       0       0
  5819 ;;Total ram usage:        1 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    4
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_Mcu_Initialization
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           psect	text730
  5829                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5830                           	line	239
  5831                           	global	__size_of_TMR1_Set
  5832  0010                     	__size_of_TMR1_Set	equ	__end_of_TMR1_Set-_TMR1_Set
  5833                           	
  5834  0DE5                     _TMR1_Set:	
  5835                           	opt	stack 10
  5836                           ; Regs used in _TMR1_Set: [wreg]
  5837                           	line	240
  5838                           	
  5839  0DE5                     l7536:	
  5840                           ;MCU_B1.c: 240: Timer1=&VarTimer1;
  5841  0DE5  3053               	movlw	(_VarTimer1)&0ffh
  5842  0DE6  0020               	movlb 0	; select bank0
  5843  0DE7  00A4               	movwf	(??_TMR1_Set+0)+0
  5844  0DE8  0824               	movf	(??_TMR1_Set+0)+0,w
  5845  0DE9  00DA               	movwf	(_Timer1)
  5846                           	line	241
  5847                           ;MCU_B1.c: 241: T1CON=(0x40 | 0x00 | 0x01);
  5848  0DEA  3041               	movlw	(041h)
  5849  0DEB  0098               	movwf	(24)	;volatile
  5850                           	line	242
  5851                           ;MCU_B1.c: 242: TMR1H=((65536-700)/256);
  5852  0DEC  30FD               	movlw	(0FDh)
  5853  0DED  0097               	movwf	(23)	;volatile
  5854                           	line	243
  5855                           ;MCU_B1.c: 243: TMR1L=((65536-700)%256);
  5856  0DEE  3044               	movlw	(044h)
  5857  0DEF  0096               	movwf	(22)	;volatile
  5858                           	line	244
  5859                           	
  5860  0DF0                     l7538:	
  5861                           ;MCU_B1.c: 244: TMR1IE=1;
  5862  0DF0  0021               	movlb 1	; select bank1
  5863  0DF1  1411               	bsf	(1160/8)^080h,(1160)&7
  5864                           	line	245
  5865                           	
  5866  0DF2                     l7540:	
  5867                           ;MCU_B1.c: 245: PEIE=1;
  5868  0DF2  170B               	bsf	(94/8),(94)&7
  5869                           	line	246
  5870                           	
  5871  0DF3                     l7542:	
  5872                           ;MCU_B1.c: 246: GIE=1;
  5873  0DF3  178B               	bsf	(95/8),(95)&7
  5874                           	line	247
  5875                           	
  5876  0DF4                     l1046:	
  5877  0DF4  0008               	return
  5878                           	opt stack 0
  5879                           GLOBAL	__end_of_TMR1_Set
  5880  0DF5                     	__end_of_TMR1_Set:
  5881 ;; =============== function _TMR1_Set ends ============
  5882                           
  5883                           	signat	_TMR1_Set,88
  5884                           	global	_IO_Set
  5885                           psect	text731,local,class=CODE,delta=2
  5886                           global __ptext731
  5887  0E05                     __ptext731:
  5888                           
  5889 ;; *************** function _IO_Set *****************
  5890 ;; Defined at:
  5891 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;		None
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;		None               void
  5898 ;; Registers used:
  5899 ;;		wreg, status,2
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5905 ;;      Params:         0       0       0       0       0       0       0       0
  5906 ;;      Locals:         0       0       0       0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0       0
  5908 ;;      Totals:         0       0       0       0       0       0       0       0
  5909 ;;Total ram usage:        0 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    4
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_Mcu_Initialization
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           psect	text731
  5919                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  5920                           	line	51
  5921                           	global	__size_of_IO_Set
  5922  0016                     	__size_of_IO_Set	equ	__end_of_IO_Set-_IO_Set
  5923                           	
  5924  0E05                     _IO_Set:	
  5925                           	opt	stack 10
  5926                           ; Regs used in _IO_Set: [wreg+status,2]
  5927                           	line	64
  5928                           	
  5929  0E05                     l7520:	
  5930                           ;MCU_B1.c: 64: TRISA=0b00001001;;
  5931  0E05  3009               	movlw	(09h)
  5932  0E06  0021               	movlb 1	; select bank1
  5933  0E07  008C               	movwf	(140)^080h	;volatile
  5934                           	line	65
  5935                           	
  5936  0E08                     l7522:	
  5937                           ;MCU_B1.c: 65: TRISB=0b00000000;;
  5938  0E08  018D               	clrf	(141)^080h	;volatile
  5939                           	line	66
  5940                           	
  5941  0E09                     l7524:	
  5942                           ;MCU_B1.c: 66: TRISC=0b00011001;;
  5943  0E09  3019               	movlw	(019h)
  5944  0E0A  008E               	movwf	(142)^080h	;volatile
  5945                           	line	67
  5946                           ;MCU_B1.c: 67: LATA=0b00000000;;
  5947  0E0B  0022               	movlb 2	; select bank2
  5948  0E0C  018C               	clrf	(268)^0100h	;volatile
  5949                           	line	68
  5950                           ;MCU_B1.c: 68: LATB=0b00000000;;
  5951  0E0D  018D               	clrf	(269)^0100h	;volatile
  5952                           	line	69
  5953                           ;MCU_B1.c: 69: LATC=0b00000000;;
  5954  0E0E  018E               	clrf	(270)^0100h	;volatile
  5955                           	line	70
  5956                           	
  5957  0E0F                     l7526:	
  5958                           ;MCU_B1.c: 70: ANSELA=0b00000001;;
  5959  0E0F  3001               	movlw	(01h)
  5960  0E10  0023               	movlb 3	; select bank3
  5961  0E11  008C               	movwf	(396)^0180h	;volatile
  5962                           	line	71
  5963                           	
  5964  0E12                     l7528:	
  5965                           ;MCU_B1.c: 71: ANSELB=0b00000000;;
  5966  0E12  018D               	clrf	(397)^0180h	;volatile
  5967                           	line	72
  5968                           	
  5969  0E13                     l7530:	
  5970                           ;MCU_B1.c: 72: ANSELC=0b00000000;;
  5971  0E13  018E               	clrf	(398)^0180h	;volatile
  5972                           	line	73
  5973                           	
  5974  0E14                     l7532:	
  5975                           ;MCU_B1.c: 73: PORTA=0b00001001;;
  5976  0E14  3009               	movlw	(09h)
  5977  0E15  0020               	movlb 0	; select bank0
  5978  0E16  008C               	movwf	(12)	;volatile
  5979                           	line	74
  5980                           ;MCU_B1.c: 74: PORTB=0b00000000;;
  5981  0E17  018D               	clrf	(13)	;volatile
  5982                           	line	75
  5983                           	
  5984  0E18                     l7534:	
  5985                           ;MCU_B1.c: 75: PORTC=0b00011001;;
  5986  0E18  3019               	movlw	(019h)
  5987  0E19  008E               	movwf	(14)	;volatile
  5988                           	line	92
  5989                           	
  5990  0E1A                     l1040:	
  5991  0E1A  0008               	return
  5992                           	opt stack 0
  5993                           GLOBAL	__end_of_IO_Set
  5994  0E1B                     	__end_of_IO_Set:
  5995 ;; =============== function _IO_Set ends ============
  5996                           
  5997                           	signat	_IO_Set,88
  5998                           	global	_ISR
  5999                           psect	intentry,class=CODE,delta=2
  6000                           global __pintentry
  6001  0004                     __pintentry:
  6002                           
  6003 ;; *************** function _ISR *****************
  6004 ;; Defined at:
  6005 ;;		line 98 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;		None
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;		None               void
  6012 ;; Registers used:
  6013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6019 ;;      Params:         0       0       0       0       0       0       0       0
  6020 ;;      Locals:         0       0       0       0       0       0       0       0
  6021 ;;      Temps:          0       1       0       0       0       0       0       0
  6022 ;;      Totals:         0       1       0       0       0       0       0       0
  6023 ;;Total ram usage:        1 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    3
  6026 ;; This function calls:
  6027 ;;		_TMR1_ISR
  6028 ;;		_UART_ISR
  6029 ;; This function is called by:
  6030 ;;		Interrupt level 1
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           psect	intentry
  6034                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  6035                           	line	98
  6036                           	global	__size_of_ISR
  6037  000E                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  6038                           	
  6039  0004                     _ISR:	
  6040                           	opt	stack 8
  6041                           ; Regs used in _ISR: [wreg+fsr1l-status,0+pclath+cstack]
  6042                           psect	intentry
  6043  0004  3180               	pagesel	$
  6044  0005  0020               	movlb 0	; select bank0
  6045  0006  087F               	movf	btemp+1,w
  6046  0007  00A3               	movwf	(??_ISR+0)
  6047                           	line	103
  6048                           	
  6049  0008                     i1l7576:	
  6050                           ;MCU_B1.c: 99: ;;
  6051                           ;MCU_B1.c: 101: ;;
  6052                           ;MCU_B1.c: 103: TMR1_ISR();
  6053  0008  318E  26DD  3180   	fcall	_TMR1_ISR
  6054                           	line	109
  6055                           ;MCU_B1.c: 107: ;;
  6056                           ;MCU_B1.c: 109: UART_ISR();
  6057  000B  318E  267D  3180   	fcall	_UART_ISR
  6058                           	line	110
  6059                           	
  6060  000E                     i1l1043:	
  6061  000E  0020               	movlb 0	; select bank0
  6062  000F  0823               	movf	(??_ISR+0),w
  6063  0010  00FF               	movwf	btemp+1
  6064  0011  0009               	retfie
  6065                           	opt stack 0
  6066                           GLOBAL	__end_of_ISR
  6067  0012                     	__end_of_ISR:
  6068 ;; =============== function _ISR ends ============
  6069                           
  6070                           	signat	_ISR,88
  6071                           	global	_UART_ISR
  6072                           psect	text733,local,class=CODE,delta=2
  6073                           global __ptext733
  6074  0E7D                     __ptext733:
  6075                           
  6076 ;; *************** function _UART_ISR *****************
  6077 ;; Defined at:
  6078 ;;		line 684 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;		None
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;  i               1    0        unsigned char 
  6083 ;; Return value:  Size  Location     Type
  6084 ;;		None               void
  6085 ;; Registers used:
  6086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6092 ;;      Params:         0       0       0       0       0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0       0       0       0
  6094 ;;      Temps:          0       2       0       0       0       0       0       0
  6095 ;;      Totals:         0       2       0       0       0       0       0       0
  6096 ;;Total ram usage:        2 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:    2
  6099 ;; This function calls:
  6100 ;;		i1_setSegmentDisplayNumber
  6101 ;; This function is called by:
  6102 ;;		_ISR
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           psect	text733
  6106                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  6107                           	line	684
  6108                           	global	__size_of_UART_ISR
  6109  002F                     	__size_of_UART_ISR	equ	__end_of_UART_ISR-_UART_ISR
  6110                           	
  6111  0E7D                     _UART_ISR:	
  6112                           	opt	stack 8
  6113                           ; Regs used in _UART_ISR: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  6114                           	line	686
  6115                           	
  6116  0E7D                     i1l7592:	
  6117                           ;MCU_B1.c: 685: char i;
  6118                           ;MCU_B1.c: 686: if(RCIE && RCIF)
  6119  0E7D  0021               	movlb 1	; select bank1
  6120  0E7E  1E91               	btfss	(1165/8)^080h,(1165)&7
  6121  0E7F  2E81               	goto	u365_21
  6122  0E80  2E82               	goto	u365_20
  6123  0E81                     u365_21:
  6124  0E81  2EAB               	goto	i1l1195
  6125  0E82                     u365_20:
  6126                           	
  6127  0E82                     i1l7594:	
  6128  0E82  0020               	movlb 0	; select bank0
  6129  0E83  1E91               	btfss	(141/8),(141)&7
  6130  0E84  2E86               	goto	u366_21
  6131  0E85  2E87               	goto	u366_20
  6132  0E86                     u366_21:
  6133  0E86  2EAB               	goto	i1l1195
  6134  0E87                     u366_20:
  6135  0E87  2E89               	goto	i1l1192
  6136                           	line	688
  6137                           	
  6138  0E88                     i1l7596:	
  6139                           ;MCU_B1.c: 687: {
  6140                           ;MCU_B1.c: 688: while(!RCIDL);
  6141  0E88  2E89               	goto	i1l1192
  6142                           	
  6143  0E89                     i1l1193:	
  6144                           	
  6145  0E89                     i1l1192:	
  6146  0E89  0023               	movlb 3	; select bank3
  6147  0E8A  1F1F               	btfss	(3326/8)^0180h,(3326)&7
  6148  0E8B  2E8D               	goto	u367_21
  6149  0E8C  2E8E               	goto	u367_20
  6150  0E8D                     u367_21:
  6151  0E8D  2E89               	goto	i1l1192
  6152  0E8E                     u367_20:
  6153  0E8E  2E8F               	goto	i1l7598
  6154                           	
  6155  0E8F                     i1l1194:	
  6156                           	line	690
  6157                           	
  6158  0E8F                     i1l7598:	
  6159                           ;MCU_B1.c: 690: UART->RxData[0]=RCREG;
  6160  0E8F  0819               	movf	(409)^0180h,w	;volatile
  6161  0E90  0020               	movlb 0	; select bank0
  6162  0E91  00A1               	movwf	(??_UART_ISR+0)+0
  6163  0E92  085B               	movf	(_UART),w
  6164  0E93  3E20               	addlw	020h
  6165  0E94  0086               	movwf	fsr1l
  6166  0E95  3001               	movlw 1	; select bank2/3
  6167  0E96  0087               	movwf fsr1h	
  6168                           	
  6169  0E97  0821               	movf	(??_UART_ISR+0)+0,w
  6170  0E98  0081               	movwf	indf1
  6171                           	line	699
  6172                           	
  6173  0E99                     i1l7600:	
  6174                           ;MCU_B1.c: 699: RA1=~RA1;
  6175  0E99  3002               	movlw	1<<((97)&7)
  6176  0E9A  068C               	xorwf	((97)/8),f
  6177                           	line	700
  6178                           	
  6179  0E9B                     i1l7602:	
  6180                           ;MCU_B1.c: 700: setSegmentDisplayNumber(UART->RxData[0]);
  6181  0E9B  085B               	movf	(_UART),w
  6182  0E9C  3E20               	addlw	020h
  6183  0E9D  0086               	movwf	fsr1l
  6184  0E9E  3001               	movlw 1	; select bank2/3
  6185  0E9F  0087               	movwf fsr1h	
  6186                           	
  6187  0EA0  0801               	movf	indf1,w
  6188  0EA1  00A1               	movwf	(??_UART_ISR+0)+0
  6189  0EA2  01A2               	clrf	(??_UART_ISR+0)+0+1
  6190  0EA3  0821               	movf	0+(??_UART_ISR+0)+0,w
  6191  0EA4  00F9               	movwf	(?i1_setSegmentDisplayNumber)
  6192  0EA5  0822               	movf	1+(??_UART_ISR+0)+0,w
  6193  0EA6  00FA               	movwf	(?i1_setSegmentDisplayNumber+1)
  6194  0EA7  3181  2168  318E   	fcall	i1_setSegmentDisplayNumber
  6195  0EAA  2EAB               	goto	i1l1195
  6196                           	line	701
  6197                           	
  6198  0EAB                     i1l1191:	
  6199                           	line	702
  6200                           	
  6201  0EAB                     i1l1195:	
  6202  0EAB  0008               	return
  6203                           	opt stack 0
  6204                           GLOBAL	__end_of_UART_ISR
  6205  0EAC                     	__end_of_UART_ISR:
  6206 ;; =============== function _UART_ISR ends ============
  6207                           
  6208                           	signat	_UART_ISR,88
  6209                           	global	i1_setSegmentDisplayNumber
  6210                           psect	text734,local,class=CODE,delta=2
  6211                           global __ptext734
  6212  0168                     __ptext734:
  6213                           
  6214 ;; *************** function i1_setSegmentDisplayNumber *****************
  6215 ;; Defined at:
  6216 ;;		line 21 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  setSegmentDi    2    9[COMMON] int 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  setSegmentDi    1    0[BANK0 ] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;		None               void
  6223 ;; Registers used:
  6224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6230 ;;      Params:         2       0       0       0       0       0       0       0
  6231 ;;      Locals:         0       1       0       0       0       0       0       0
  6232 ;;      Temps:          3       0       0       0       0       0       0       0
  6233 ;;      Totals:         5       1       0       0       0       0       0       0
  6234 ;;Total ram usage:        6 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    1
  6237 ;; This function calls:
  6238 ;;		i1___awdiv
  6239 ;;		i1___awmod
  6240 ;; This function is called by:
  6241 ;;		_UART_ISR
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           psect	text734
  6245                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  6246                           	line	21
  6247                           	global	__size_ofi1_setSegmentDisplayNumber
  6248  0150                     	__size_ofi1_setSegmentDisplayNumber	equ	__end_ofi1_setSegmentDisplayNumber-i1_setSegmen
                                 tDisplayNumber
  6249                           	
  6250  0168                     i1_setSegmentDisplayNumber:	
  6251                           	opt	stack 8
  6252                           ; Regs used in i1_setSegmentDisplayNumber: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  6253                           	line	23
  6254                           	
  6255  0168                     i1l7894:	
  6256                           ;SegmentDisplay_A2.c: 22: char i;
  6257                           ;SegmentDisplay_A2.c: 23: if(Segment->Enable)
  6258  0168  0020               	movlb 0	; select bank0
  6259  0169  0858               	movf	(_Segment),w
  6260  016A  3E15               	addlw	015h
  6261  016B  0086               	movwf	fsr1l
  6262  016C  0187               	clrf fsr1h	
  6263                           	
  6264  016D  1C01               	btfss	indf1,0
  6265  016E  2970               	goto	u456_21
  6266  016F  2971               	goto	u456_20
  6267  0170                     u456_21:
  6268  0170  2AB7               	goto	i1l3305
  6269  0171                     u456_20:
  6270                           	line	25
  6271                           	
  6272  0171                     i1l7896:	
  6273                           ;SegmentDisplay_A2.c: 24: {
  6274                           ;SegmentDisplay_A2.c: 25: Segment->GO=1;
  6275  0171  0858               	movf	(_Segment),w
  6276  0172  3E15               	addlw	015h
  6277  0173  0086               	movwf	fsr1l
  6278  0174  0187               	clrf fsr1h	
  6279                           	
  6280  0175  1481               	bsf	indf1,1
  6281                           	line	26
  6282                           ;SegmentDisplay_A2.c: 26: if(Segment->Hex)
  6283  0176  0858               	movf	(_Segment),w
  6284  0177  3E15               	addlw	015h
  6285  0178  0086               	movwf	fsr1l
  6286  0179  0187               	clrf fsr1h	
  6287                           	
  6288  017A  1D01               	btfss	indf1,2
  6289  017B  297D               	goto	u457_21
  6290  017C  297E               	goto	u457_20
  6291  017D                     u457_21:
  6292  017D  29B9               	goto	i1l7904
  6293  017E                     u457_20:
  6294                           	line	28
  6295                           	
  6296  017E                     i1l7898:	
  6297                           ;SegmentDisplay_A2.c: 27: {
  6298                           ;SegmentDisplay_A2.c: 28: Segment->Num[0]=(number & 0x000f);
  6299  017E  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6300  017F  390F               	andlw	0Fh
  6301  0180  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6302  0181  0858               	movf	(_Segment),w
  6303  0182  3E11               	addlw	011h
  6304  0183  0086               	movwf	fsr1l
  6305  0184  0187               	clrf fsr1h	
  6306                           	
  6307  0185  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6308  0186  0081               	movwf	indf1
  6309                           	line	29
  6310                           	
  6311  0187                     i1l7900:	
  6312                           ;SegmentDisplay_A2.c: 29: Segment->Num[1]=((number>>4)&0x000f);
  6313  0187  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6314  0188  00FC               	movwf	(??i1_setSegmentDisplayNumber+0)+0+1
  6315  0189  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6316  018A  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6317  018B  3004               	movlw	04h
  6318  018C  00FF               	movwf	btemp+1
  6319  018D                     u458_25:
  6320  018D  0D7C               	rlf	(??i1_setSegmentDisplayNumber+0)+1,w
  6321  018E  0CFC               	rrf	(??i1_setSegmentDisplayNumber+0)+1,f
  6322  018F  0CFB               	rrf	(??i1_setSegmentDisplayNumber+0)+0,f
  6323  0190  0BFF               	decfsz	btemp+1,f
  6324  0191  298D               	goto	u458_25
  6325  0192  087B               	movf	0+(??i1_setSegmentDisplayNumber+0)+0,w
  6326  0193  390F               	andlw	0Fh
  6327  0194  00FD               	movwf	(??i1_setSegmentDisplayNumber+2)+0
  6328  0195  0858               	movf	(_Segment),w
  6329  0196  3E12               	addlw	012h
  6330  0197  0086               	movwf	fsr1l
  6331  0198  0187               	clrf fsr1h	
  6332                           	
  6333  0199  087D               	movf	(??i1_setSegmentDisplayNumber+2)+0,w
  6334  019A  0081               	movwf	indf1
  6335                           	line	30
  6336                           	
  6337  019B                     i1l7902:	
  6338                           ;SegmentDisplay_A2.c: 30: Segment->Num[2]=((number>>8)&0x000f);
  6339  019B  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6340  019C  390F               	andlw	0Fh
  6341  019D  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6342  019E  0858               	movf	(_Segment),w
  6343  019F  3E13               	addlw	013h
  6344  01A0  0086               	movwf	fsr1l
  6345  01A1  0187               	clrf fsr1h	
  6346                           	
  6347  01A2  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6348  01A3  0081               	movwf	indf1
  6349                           	line	31
  6350                           ;SegmentDisplay_A2.c: 31: Segment->Num[3]=((number>>12)&0x000f);
  6351  01A4  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6352  01A5  00FC               	movwf	(??i1_setSegmentDisplayNumber+0)+0+1
  6353  01A6  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6354  01A7  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6355  01A8  300C               	movlw	0Ch
  6356  01A9  00FF               	movwf	btemp+1
  6357  01AA                     u459_25:
  6358  01AA  0D7C               	rlf	(??i1_setSegmentDisplayNumber+0)+1,w
  6359  01AB  0CFC               	rrf	(??i1_setSegmentDisplayNumber+0)+1,f
  6360  01AC  0CFB               	rrf	(??i1_setSegmentDisplayNumber+0)+0,f
  6361  01AD  0BFF               	decfsz	btemp+1,f
  6362  01AE  29AA               	goto	u459_25
  6363  01AF  087B               	movf	0+(??i1_setSegmentDisplayNumber+0)+0,w
  6364  01B0  390F               	andlw	0Fh
  6365  01B1  00FD               	movwf	(??i1_setSegmentDisplayNumber+2)+0
  6366  01B2  0858               	movf	(_Segment),w
  6367  01B3  3E14               	addlw	014h
  6368  01B4  0086               	movwf	fsr1l
  6369  01B5  0187               	clrf fsr1h	
  6370                           	
  6371  01B6  087D               	movf	(??i1_setSegmentDisplayNumber+2)+0,w
  6372  01B7  0081               	movwf	indf1
  6373                           	line	32
  6374                           ;SegmentDisplay_A2.c: 32: }
  6375  01B8  2A76               	goto	i1l7932
  6376                           	line	33
  6377                           	
  6378  01B9                     i1l3292:	
  6379                           	
  6380  01B9                     i1l7904:	
  6381                           ;SegmentDisplay_A2.c: 33: else if(Segment->Dec)
  6382  01B9  0858               	movf	(_Segment),w
  6383  01BA  3E15               	addlw	015h
  6384  01BB  0086               	movwf	fsr1l
  6385  01BC  0187               	clrf fsr1h	
  6386                           	
  6387  01BD  1D81               	btfss	indf1,3
  6388  01BE  29C0               	goto	u460_21
  6389  01BF  29C1               	goto	u460_20
  6390  01C0                     u460_21:
  6391  01C0  2A76               	goto	i1l7932
  6392  01C1                     u460_20:
  6393                           	line	35
  6394                           	
  6395  01C1                     i1l7906:	
  6396                           ;SegmentDisplay_A2.c: 34: {
  6397                           ;SegmentDisplay_A2.c: 35: if(number > 0x270f)
  6398  01C1  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6399  01C2  3A80               	xorlw	80h
  6400  01C3  00FF               	movwf	btemp+1
  6401  01C4  30A7               	movlw	(high(02710h))^80h
  6402  01C5  027F               	subwf	btemp+1,w
  6403  01C6  1D03               	skipz
  6404  01C7  29CA               	goto	u461_25
  6405  01C8  3010               	movlw	low(02710h)
  6406  01C9  0279               	subwf	(i1setSegmentDisplayNumber@number),w
  6407  01CA                     u461_25:
  6408                           
  6409  01CA  1C03               	skipc
  6410  01CB  29CD               	goto	u461_21
  6411  01CC  29CE               	goto	u461_20
  6412  01CD                     u461_21:
  6413  01CD  29EF               	goto	i1l7920
  6414  01CE                     u461_20:
  6415                           	line	37
  6416                           	
  6417  01CE                     i1l7908:	
  6418                           ;SegmentDisplay_A2.c: 36: {
  6419                           ;SegmentDisplay_A2.c: 37: for(i=0 ; i<4; i++)
  6420  01CE  0020               	movlb 0	; select bank0
  6421  01CF  01A0               	clrf	(i1setSegmentDisplayNumber@i)
  6422                           	
  6423  01D0                     i1l7910:	
  6424  01D0  3004               	movlw	(04h)
  6425  01D1  0220               	subwf	(i1setSegmentDisplayNumber@i),w
  6426  01D2  1C03               	skipc
  6427  01D3  29D5               	goto	u462_21
  6428  01D4  29D6               	goto	u462_20
  6429  01D5                     u462_21:
  6430  01D5  29D8               	goto	i1l7914
  6431  01D6                     u462_20:
  6432  01D6  2A76               	goto	i1l7932
  6433                           	
  6434  01D7                     i1l7912:	
  6435  01D7  2A76               	goto	i1l7932
  6436                           	line	38
  6437                           	
  6438  01D8                     i1l3296:	
  6439                           	line	39
  6440                           	
  6441  01D8                     i1l7914:	
  6442                           ;SegmentDisplay_A2.c: 38: {
  6443                           ;SegmentDisplay_A2.c: 39: Segment->Num[i]=16;
  6444  01D8  3010               	movlw	(010h)
  6445  01D9  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6446  01DA  0820               	movf	(i1setSegmentDisplayNumber@i),w
  6447  01DB  3E11               	addlw	011h
  6448  01DC  0758               	addwf	(_Segment),w
  6449  01DD  00FC               	movwf	(??i1_setSegmentDisplayNumber+1)+0
  6450  01DE  087C               	movf	0+(??i1_setSegmentDisplayNumber+1)+0,w
  6451  01DF  0086               	movwf	fsr1l
  6452  01E0  0187               	clrf fsr1h	
  6453                           	
  6454  01E1  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6455  01E2  0081               	movwf	indf1
  6456                           	line	37
  6457                           	
  6458  01E3                     i1l7916:	
  6459  01E3  3001               	movlw	(01h)
  6460  01E4  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6461  01E5  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6462  01E6  07A0               	addwf	(i1setSegmentDisplayNumber@i),f
  6463                           	
  6464  01E7                     i1l7918:	
  6465  01E7  3004               	movlw	(04h)
  6466  01E8  0220               	subwf	(i1setSegmentDisplayNumber@i),w
  6467  01E9  1C03               	skipc
  6468  01EA  29EC               	goto	u463_21
  6469  01EB  29ED               	goto	u463_20
  6470  01EC                     u463_21:
  6471  01EC  29D8               	goto	i1l7914
  6472  01ED                     u463_20:
  6473  01ED  2A76               	goto	i1l7932
  6474                           	
  6475  01EE                     i1l3297:	
  6476                           	line	41
  6477                           ;SegmentDisplay_A2.c: 40: }
  6478                           ;SegmentDisplay_A2.c: 41: }
  6479  01EE  2A76               	goto	i1l7932
  6480                           	line	42
  6481                           	
  6482  01EF                     i1l3295:	
  6483                           	line	44
  6484                           	
  6485  01EF                     i1l7920:	
  6486                           ;SegmentDisplay_A2.c: 42: else
  6487                           ;SegmentDisplay_A2.c: 43: {
  6488                           ;SegmentDisplay_A2.c: 44: Segment->Num[3]=(number/1000);
  6489  01EF  30E8               	movlw	low(03E8h)
  6490  01F0  00F0               	movwf	(?i1___awdiv)
  6491  01F1  3003               	movlw	high(03E8h)
  6492  01F2  00F1               	movwf	((?i1___awdiv))+1
  6493  01F3  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6494  01F4  01F3               	clrf	1+(?i1___awdiv)+02h
  6495  01F5  07F3               	addwf	1+(?i1___awdiv)+02h
  6496  01F6  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6497  01F7  01F2               	clrf	0+(?i1___awdiv)+02h
  6498  01F8  07F2               	addwf	0+(?i1___awdiv)+02h
  6499                           
  6500  01F9  3186  2615  3181   	fcall	i1___awdiv
  6501  01FC  0870               	movf	(0+(?i1___awdiv)),w
  6502  01FD  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6503  01FE  0020               	movlb 0	; select bank0
  6504  01FF  0858               	movf	(_Segment),w
  6505  0200  3E14               	addlw	014h
  6506  0201  0086               	movwf	fsr1l
  6507  0202  0187               	clrf fsr1h	
  6508                           	
  6509  0203  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6510  0204  0081               	movwf	indf1
  6511                           	line	45
  6512                           	
  6513  0205                     i1l7922:	
  6514                           ;SegmentDisplay_A2.c: 45: number%=1000;
  6515  0205  30E8               	movlw	low(03E8h)
  6516  0206  00F0               	movwf	(?i1___awmod)
  6517  0207  3003               	movlw	high(03E8h)
  6518  0208  00F1               	movwf	((?i1___awmod))+1
  6519  0209  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6520  020A  01F3               	clrf	1+(?i1___awmod)+02h
  6521  020B  07F3               	addwf	1+(?i1___awmod)+02h
  6522  020C  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6523  020D  01F2               	clrf	0+(?i1___awmod)+02h
  6524  020E  07F2               	addwf	0+(?i1___awmod)+02h
  6525                           
  6526  020F  3187  2746  3181   	fcall	i1___awmod
  6527  0212  0871               	movf	(1+(?i1___awmod)),w
  6528  0213  01FA               	clrf	(i1setSegmentDisplayNumber@number+1)
  6529  0214  07FA               	addwf	(i1setSegmentDisplayNumber@number+1)
  6530  0215  0870               	movf	(0+(?i1___awmod)),w
  6531  0216  01F9               	clrf	(i1setSegmentDisplayNumber@number)
  6532  0217  07F9               	addwf	(i1setSegmentDisplayNumber@number)
  6533                           
  6534                           	line	46
  6535                           	
  6536  0218                     i1l7924:	
  6537                           ;SegmentDisplay_A2.c: 46: Segment->Num[2]=(number/100);
  6538  0218  3064               	movlw	low(064h)
  6539  0219  00F0               	movwf	(?i1___awdiv)
  6540  021A  3000               	movlw	high(064h)
  6541  021B  00F1               	movwf	((?i1___awdiv))+1
  6542  021C  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6543  021D  01F3               	clrf	1+(?i1___awdiv)+02h
  6544  021E  07F3               	addwf	1+(?i1___awdiv)+02h
  6545  021F  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6546  0220  01F2               	clrf	0+(?i1___awdiv)+02h
  6547  0221  07F2               	addwf	0+(?i1___awdiv)+02h
  6548                           
  6549  0222  3186  2615  3181   	fcall	i1___awdiv
  6550  0225  0870               	movf	(0+(?i1___awdiv)),w
  6551  0226  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6552  0227  0020               	movlb 0	; select bank0
  6553  0228  0858               	movf	(_Segment),w
  6554  0229  3E13               	addlw	013h
  6555  022A  0086               	movwf	fsr1l
  6556  022B  0187               	clrf fsr1h	
  6557                           	
  6558  022C  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6559  022D  0081               	movwf	indf1
  6560                           	line	47
  6561                           ;SegmentDisplay_A2.c: 47: number%=100;
  6562  022E  3064               	movlw	low(064h)
  6563  022F  00F0               	movwf	(?i1___awmod)
  6564  0230  3000               	movlw	high(064h)
  6565  0231  00F1               	movwf	((?i1___awmod))+1
  6566  0232  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6567  0233  01F3               	clrf	1+(?i1___awmod)+02h
  6568  0234  07F3               	addwf	1+(?i1___awmod)+02h
  6569  0235  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6570  0236  01F2               	clrf	0+(?i1___awmod)+02h
  6571  0237  07F2               	addwf	0+(?i1___awmod)+02h
  6572                           
  6573  0238  3187  2746  3181   	fcall	i1___awmod
  6574  023B  0871               	movf	(1+(?i1___awmod)),w
  6575  023C  01FA               	clrf	(i1setSegmentDisplayNumber@number+1)
  6576  023D  07FA               	addwf	(i1setSegmentDisplayNumber@number+1)
  6577  023E  0870               	movf	(0+(?i1___awmod)),w
  6578  023F  01F9               	clrf	(i1setSegmentDisplayNumber@number)
  6579  0240  07F9               	addwf	(i1setSegmentDisplayNumber@number)
  6580                           
  6581                           	line	48
  6582                           	
  6583  0241                     i1l7926:	
  6584                           ;SegmentDisplay_A2.c: 48: Segment->Num[1]=(number/10);
  6585  0241  300A               	movlw	low(0Ah)
  6586  0242  00F0               	movwf	(?i1___awdiv)
  6587  0243  3000               	movlw	high(0Ah)
  6588  0244  00F1               	movwf	((?i1___awdiv))+1
  6589  0245  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6590  0246  01F3               	clrf	1+(?i1___awdiv)+02h
  6591  0247  07F3               	addwf	1+(?i1___awdiv)+02h
  6592  0248  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6593  0249  01F2               	clrf	0+(?i1___awdiv)+02h
  6594  024A  07F2               	addwf	0+(?i1___awdiv)+02h
  6595                           
  6596  024B  3186  2615  3181   	fcall	i1___awdiv
  6597  024E  0870               	movf	(0+(?i1___awdiv)),w
  6598  024F  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6599  0250  0020               	movlb 0	; select bank0
  6600  0251  0858               	movf	(_Segment),w
  6601  0252  3E12               	addlw	012h
  6602  0253  0086               	movwf	fsr1l
  6603  0254  0187               	clrf fsr1h	
  6604                           	
  6605  0255  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6606  0256  0081               	movwf	indf1
  6607                           	line	49
  6608                           	
  6609  0257                     i1l7928:	
  6610                           ;SegmentDisplay_A2.c: 49: number%=10;
  6611  0257  300A               	movlw	low(0Ah)
  6612  0258  00F0               	movwf	(?i1___awmod)
  6613  0259  3000               	movlw	high(0Ah)
  6614  025A  00F1               	movwf	((?i1___awmod))+1
  6615  025B  087A               	movf	(i1setSegmentDisplayNumber@number+1),w
  6616  025C  01F3               	clrf	1+(?i1___awmod)+02h
  6617  025D  07F3               	addwf	1+(?i1___awmod)+02h
  6618  025E  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6619  025F  01F2               	clrf	0+(?i1___awmod)+02h
  6620  0260  07F2               	addwf	0+(?i1___awmod)+02h
  6621                           
  6622  0261  3187  2746  3181   	fcall	i1___awmod
  6623  0264  0871               	movf	(1+(?i1___awmod)),w
  6624  0265  01FA               	clrf	(i1setSegmentDisplayNumber@number+1)
  6625  0266  07FA               	addwf	(i1setSegmentDisplayNumber@number+1)
  6626  0267  0870               	movf	(0+(?i1___awmod)),w
  6627  0268  01F9               	clrf	(i1setSegmentDisplayNumber@number)
  6628  0269  07F9               	addwf	(i1setSegmentDisplayNumber@number)
  6629                           
  6630                           	line	50
  6631                           	
  6632  026A                     i1l7930:	
  6633                           ;SegmentDisplay_A2.c: 50: Segment->Num[0]=number;
  6634  026A  0879               	movf	(i1setSegmentDisplayNumber@number),w
  6635  026B  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6636  026C  0020               	movlb 0	; select bank0
  6637  026D  0858               	movf	(_Segment),w
  6638  026E  3E11               	addlw	011h
  6639  026F  0086               	movwf	fsr1l
  6640  0270  0187               	clrf fsr1h	
  6641                           	
  6642  0271  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6643  0272  0081               	movwf	indf1
  6644  0273  2A76               	goto	i1l7932
  6645                           	line	51
  6646                           	
  6647  0274                     i1l3298:	
  6648  0274  2A76               	goto	i1l7932
  6649                           	line	52
  6650                           	
  6651  0275                     i1l3294:	
  6652  0275  2A76               	goto	i1l7932
  6653                           	line	53
  6654                           	
  6655  0276                     i1l3293:	
  6656                           	
  6657  0276                     i1l7932:	
  6658                           ;SegmentDisplay_A2.c: 51: }
  6659                           ;SegmentDisplay_A2.c: 52: }
  6660                           ;SegmentDisplay_A2.c: 53: if(Segment->Num[3] > 0)
  6661  0276  0858               	movf	(_Segment),w
  6662  0277  3E14               	addlw	014h
  6663  0278  0086               	movwf	fsr1l
  6664  0279  0187               	clrf fsr1h	
  6665                           	
  6666  027A  0801               	movf	indf1,w
  6667  027B  3A00               	xorlw	0&0ffh
  6668  027C  1903               	skipnz
  6669  027D  2A7F               	goto	u464_21
  6670  027E  2A80               	goto	u464_20
  6671  027F                     u464_21:
  6672  027F  2A89               	goto	i1l7936
  6673  0280                     u464_20:
  6674                           	line	55
  6675                           	
  6676  0280                     i1l7934:	
  6677                           ;SegmentDisplay_A2.c: 54: {
  6678                           ;SegmentDisplay_A2.c: 55: Segment->DisplayCount=3;
  6679  0280  3003               	movlw	(03h)
  6680  0281  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6681  0282  0858               	movf	(_Segment),w
  6682  0283  3E17               	addlw	017h
  6683  0284  0086               	movwf	fsr1l
  6684  0285  0187               	clrf fsr1h	
  6685                           	
  6686  0286  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6687  0287  0081               	movwf	indf1
  6688                           	line	56
  6689                           ;SegmentDisplay_A2.c: 56: }
  6690  0288  2AB7               	goto	i1l3305
  6691                           	line	57
  6692                           	
  6693  0289                     i1l3299:	
  6694                           	
  6695  0289                     i1l7936:	
  6696                           ;SegmentDisplay_A2.c: 57: else if(Segment->Num[2] > 0)
  6697  0289  0858               	movf	(_Segment),w
  6698  028A  3E13               	addlw	013h
  6699  028B  0086               	movwf	fsr1l
  6700  028C  0187               	clrf fsr1h	
  6701                           	
  6702  028D  0801               	movf	indf1,w
  6703  028E  3A00               	xorlw	0&0ffh
  6704  028F  1903               	skipnz
  6705  0290  2A92               	goto	u465_21
  6706  0291  2A93               	goto	u465_20
  6707  0292                     u465_21:
  6708  0292  2A9C               	goto	i1l7940
  6709  0293                     u465_20:
  6710                           	line	59
  6711                           	
  6712  0293                     i1l7938:	
  6713                           ;SegmentDisplay_A2.c: 58: {
  6714                           ;SegmentDisplay_A2.c: 59: Segment->DisplayCount=2;
  6715  0293  3002               	movlw	(02h)
  6716  0294  00FB               	movwf	(??i1_setSegmentDisplayNumber+0)+0
  6717  0295  0858               	movf	(_Segment),w
  6718  0296  3E17               	addlw	017h
  6719  0297  0086               	movwf	fsr1l
  6720  0298  0187               	clrf fsr1h	
  6721                           	
  6722  0299  087B               	movf	(??i1_setSegmentDisplayNumber+0)+0,w
  6723  029A  0081               	movwf	indf1
  6724                           	line	60
  6725                           ;SegmentDisplay_A2.c: 60: }
  6726  029B  2AB7               	goto	i1l3305
  6727                           	line	61
  6728                           	
  6729  029C                     i1l3301:	
  6730                           	
  6731  029C                     i1l7940:	
  6732                           ;SegmentDisplay_A2.c: 61: else if(Segment->Num[1] > 0)
  6733  029C  0858               	movf	(_Segment),w
  6734  029D  3E12               	addlw	012h
  6735  029E  0086               	movwf	fsr1l
  6736  029F  0187               	clrf fsr1h	
  6737                           	
  6738  02A0  0801               	movf	indf1,w
  6739  02A1  3A00               	xorlw	0&0ffh
  6740  02A2  1903               	skipnz
  6741  02A3  2AA5               	goto	u466_21
  6742  02A4  2AA6               	goto	u466_20
  6743  02A5                     u466_21:
  6744  02A5  2AAE               	goto	i1l7944
  6745  02A6                     u466_20:
  6746                           	line	63
  6747                           	
  6748  02A6                     i1l7942:	
  6749                           ;SegmentDisplay_A2.c: 62: {
  6750                           ;SegmentDisplay_A2.c: 63: Segment->DisplayCount=1;
  6751  02A6  0858               	movf	(_Segment),w
  6752  02A7  3E17               	addlw	017h
  6753  02A8  0086               	movwf	fsr1l
  6754  02A9  0187               	clrf fsr1h	
  6755                           	
  6756  02AA  0181               	clrf	indf1
  6757  02AB  1403               	bsf	status,0
  6758  02AC  0D81               	rlf	indf1,f
  6759                           	line	64
  6760                           ;SegmentDisplay_A2.c: 64: }
  6761  02AD  2AB7               	goto	i1l3305
  6762                           	line	65
  6763                           	
  6764  02AE                     i1l3303:	
  6765                           	line	67
  6766                           	
  6767  02AE                     i1l7944:	
  6768                           ;SegmentDisplay_A2.c: 65: else
  6769                           ;SegmentDisplay_A2.c: 66: {
  6770                           ;SegmentDisplay_A2.c: 67: Segment->DisplayCount=0;
  6771  02AE  0858               	movf	(_Segment),w
  6772  02AF  3E17               	addlw	017h
  6773  02B0  0086               	movwf	fsr1l
  6774  02B1  0187               	clrf fsr1h	
  6775                           	
  6776  02B2  0181               	clrf	indf1
  6777  02B3  2AB7               	goto	i1l3305
  6778                           	line	68
  6779                           	
  6780  02B4                     i1l3304:	
  6781  02B4  2AB7               	goto	i1l3305
  6782                           	
  6783  02B5                     i1l3302:	
  6784  02B5  2AB7               	goto	i1l3305
  6785                           	
  6786  02B6                     i1l3300:	
  6787  02B6  2AB7               	goto	i1l3305
  6788                           	line	69
  6789                           	
  6790  02B7                     i1l3291:	
  6791                           	line	70
  6792                           	
  6793  02B7                     i1l3305:	
  6794  02B7  0008               	return
  6795                           	opt stack 0
  6796                           GLOBAL	__end_ofi1_setSegmentDisplayNumber
  6797  02B8                     	__end_ofi1_setSegmentDisplayNumber:
  6798 ;; =============== function i1_setSegmentDisplayNumber ends ============
  6799                           
  6800                           	signat	i1_setSegmentDisplayNumber,88
  6801                           	global	i1___awmod
  6802                           psect	text735,local,class=CODE,delta=2
  6803                           global __ptext735
  6804  0746                     __ptext735:
  6805                           
  6806 ;; *************** function i1___awmod *****************
  6807 ;; Defined at:
  6808 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;  __awmod         2    0[COMMON] int 
  6811 ;;  __awmod         2    2[COMMON] int 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  __awmod         1    6[COMMON] unsigned char 
  6814 ;;  __awmod         1    5[COMMON] unsigned char 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  2    0[COMMON] int 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6824 ;;      Params:         4       0       0       0       0       0       0       0
  6825 ;;      Locals:         2       0       0       0       0       0       0       0
  6826 ;;      Temps:          1       0       0       0       0       0       0       0
  6827 ;;      Totals:         7       0       0       0       0       0       0       0
  6828 ;;Total ram usage:        7 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		i1_setSegmentDisplayNumber
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           psect	text735
  6837                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6838                           	line	5
  6839                           	global	__size_ofi1___awmod
  6840  0060                     	__size_ofi1___awmod	equ	__end_ofi1___awmod-i1___awmod
  6841                           	
  6842  0746                     i1___awmod:	
  6843                           	opt	stack 8
  6844                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  6845                           	line	8
  6846                           	
  6847  0746                     i1l7986:	
  6848  0746  01F6               	clrf	(i1___awmod@sign)
  6849                           	line	9
  6850  0747  1FF3               	btfss	(i1___awmod@dividend+1),7
  6851  0748  2F4A               	goto	u477_21
  6852  0749  2F4B               	goto	u477_20
  6853  074A                     u477_21:
  6854  074A  2F54               	goto	i1l7990
  6855  074B                     u477_20:
  6856                           	line	10
  6857                           	
  6858  074B                     i1l7988:	
  6859  074B  09F2               	comf	(i1___awmod@dividend),f
  6860  074C  09F3               	comf	(i1___awmod@dividend+1),f
  6861  074D  0AF2               	incf	(i1___awmod@dividend),f
  6862  074E  1903               	skipnz
  6863  074F  0AF3               	incf	(i1___awmod@dividend+1),f
  6864                           	line	11
  6865  0750  01F6               	clrf	(i1___awmod@sign)
  6866  0751  1403               	bsf	status,0
  6867  0752  0DF6               	rlf	(i1___awmod@sign),f
  6868  0753  2F54               	goto	i1l7990
  6869                           	line	12
  6870                           	
  6871  0754                     i1l5586:	
  6872                           	line	13
  6873                           	
  6874  0754                     i1l7990:	
  6875  0754  1FF1               	btfss	(i1___awmod@divisor+1),7
  6876  0755  2F57               	goto	u478_21
  6877  0756  2F58               	goto	u478_20
  6878  0757                     u478_21:
  6879  0757  2F5E               	goto	i1l7994
  6880  0758                     u478_20:
  6881                           	line	14
  6882                           	
  6883  0758                     i1l7992:	
  6884  0758  09F0               	comf	(i1___awmod@divisor),f
  6885  0759  09F1               	comf	(i1___awmod@divisor+1),f
  6886  075A  0AF0               	incf	(i1___awmod@divisor),f
  6887  075B  1903               	skipnz
  6888  075C  0AF1               	incf	(i1___awmod@divisor+1),f
  6889  075D  2F5E               	goto	i1l7994
  6890                           	
  6891  075E                     i1l5587:	
  6892                           	line	15
  6893                           	
  6894  075E                     i1l7994:	
  6895  075E  0871               	movf	(i1___awmod@divisor+1),w
  6896  075F  0470               	iorwf	(i1___awmod@divisor),w
  6897  0760  1903               	skipnz
  6898  0761  2F63               	goto	u479_21
  6899  0762  2F64               	goto	u479_20
  6900  0763                     u479_21:
  6901  0763  2F94               	goto	i1l8012
  6902  0764                     u479_20:
  6903                           	line	16
  6904                           	
  6905  0764                     i1l7996:	
  6906  0764  01F5               	clrf	(i1___awmod@counter)
  6907  0765  1403               	bsf	status,0
  6908  0766  0DF5               	rlf	(i1___awmod@counter),f
  6909                           	line	17
  6910  0767  2F72               	goto	i1l8002
  6911                           	
  6912  0768                     i1l5590:	
  6913                           	line	18
  6914                           	
  6915  0768                     i1l7998:	
  6916  0768  3001               	movlw	01h
  6917                           	
  6918  0769                     u480_25:
  6919  0769  35F0               	lslf	(i1___awmod@divisor),f
  6920  076A  0DF1               	rlf	(i1___awmod@divisor+1),f
  6921  076B  0B89               	decfsz	wreg,f
  6922  076C  2F69               	goto	u480_25
  6923                           	line	19
  6924                           	
  6925  076D                     i1l8000:	
  6926  076D  3001               	movlw	(01h)
  6927  076E  00F4               	movwf	(??i1___awmod+0)+0
  6928  076F  0874               	movf	(??i1___awmod+0)+0,w
  6929  0770  07F5               	addwf	(i1___awmod@counter),f
  6930  0771  2F72               	goto	i1l8002
  6931                           	line	20
  6932                           	
  6933  0772                     i1l5589:	
  6934                           	line	17
  6935                           	
  6936  0772                     i1l8002:	
  6937  0772  1FF1               	btfss	(i1___awmod@divisor+1),(15)&7
  6938  0773  2F75               	goto	u481_21
  6939  0774  2F76               	goto	u481_20
  6940  0775                     u481_21:
  6941  0775  2F68               	goto	i1l7998
  6942  0776                     u481_20:
  6943  0776  2F78               	goto	i1l8004
  6944                           	
  6945  0777                     i1l5591:	
  6946  0777  2F78               	goto	i1l8004
  6947                           	line	21
  6948                           	
  6949  0778                     i1l5592:	
  6950                           	line	22
  6951                           	
  6952  0778                     i1l8004:	
  6953  0778  0871               	movf	(i1___awmod@divisor+1),w
  6954  0779  0273               	subwf	(i1___awmod@dividend+1),w
  6955  077A  1D03               	skipz
  6956  077B  2F7E               	goto	u482_25
  6957  077C  0870               	movf	(i1___awmod@divisor),w
  6958  077D  0272               	subwf	(i1___awmod@dividend),w
  6959  077E                     u482_25:
  6960  077E  1C03               	skipc
  6961  077F  2F81               	goto	u482_21
  6962  0780  2F82               	goto	u482_20
  6963  0781                     u482_21:
  6964  0781  2F87               	goto	i1l8008
  6965  0782                     u482_20:
  6966                           	line	23
  6967                           	
  6968  0782                     i1l8006:	
  6969  0782  0870               	movf	(i1___awmod@divisor),w
  6970  0783  02F2               	subwf	(i1___awmod@dividend),f
  6971  0784  0871               	movf	(i1___awmod@divisor+1),w
  6972  0785  3BF3               	subwfb	(i1___awmod@dividend+1),f
  6973  0786  2F87               	goto	i1l8008
  6974                           	
  6975  0787                     i1l5593:	
  6976                           	line	24
  6977                           	
  6978  0787                     i1l8008:	
  6979  0787  3001               	movlw	01h
  6980                           	
  6981  0788                     u483_25:
  6982  0788  36F1               	lsrf	(i1___awmod@divisor+1),f
  6983  0789  0CF0               	rrf	(i1___awmod@divisor),f
  6984  078A  0B89               	decfsz	wreg,f
  6985  078B  2F88               	goto	u483_25
  6986                           	line	25
  6987                           	
  6988  078C                     i1l8010:	
  6989  078C  3001               	movlw	low(01h)
  6990  078D  02F5               	subwf	(i1___awmod@counter),f
  6991  078E  1D03               	btfss	status,2
  6992  078F  2F91               	goto	u484_21
  6993  0790  2F92               	goto	u484_20
  6994  0791                     u484_21:
  6995  0791  2F78               	goto	i1l8004
  6996  0792                     u484_20:
  6997  0792  2F94               	goto	i1l8012
  6998                           	
  6999  0793                     i1l5594:	
  7000  0793  2F94               	goto	i1l8012
  7001                           	line	26
  7002                           	
  7003  0794                     i1l5588:	
  7004                           	line	27
  7005                           	
  7006  0794                     i1l8012:	
  7007  0794  0876               	movf	(i1___awmod@sign),w
  7008  0795  1D03               	skipz
  7009  0796  2F98               	goto	u485_20
  7010  0797  2F9E               	goto	i1l8016
  7011  0798                     u485_20:
  7012                           	line	28
  7013                           	
  7014  0798                     i1l8014:	
  7015  0798  09F2               	comf	(i1___awmod@dividend),f
  7016  0799  09F3               	comf	(i1___awmod@dividend+1),f
  7017  079A  0AF2               	incf	(i1___awmod@dividend),f
  7018  079B  1903               	skipnz
  7019  079C  0AF3               	incf	(i1___awmod@dividend+1),f
  7020  079D  2F9E               	goto	i1l8016
  7021                           	
  7022  079E                     i1l5595:	
  7023                           	line	29
  7024                           	
  7025  079E                     i1l8016:	
  7026  079E  0873               	movf	(i1___awmod@dividend+1),w
  7027  079F  01F1               	clrf	(?i1___awmod+1)
  7028  07A0  07F1               	addwf	(?i1___awmod+1)
  7029  07A1  0872               	movf	(i1___awmod@dividend),w
  7030  07A2  01F0               	clrf	(?i1___awmod)
  7031  07A3  07F0               	addwf	(?i1___awmod)
  7032                           
  7033  07A4  2FA5               	goto	i1l5596
  7034                           	
  7035  07A5                     i1l8018:	
  7036                           	line	30
  7037                           	
  7038  07A5                     i1l5596:	
  7039  07A5  0008               	return
  7040                           	opt stack 0
  7041                           GLOBAL	__end_ofi1___awmod
  7042  07A6                     	__end_ofi1___awmod:
  7043 ;; =============== function i1___awmod ends ============
  7044                           
  7045                           	signat	i1___awmod,90
  7046                           	global	i1___awdiv
  7047                           psect	text736,local,class=CODE,delta=2
  7048                           global __ptext736
  7049  0615                     __ptext736:
  7050                           
  7051 ;; *************** function i1___awdiv *****************
  7052 ;; Defined at:
  7053 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  __awdiv         2    0[COMMON] int 
  7056 ;;  __awdiv         2    2[COMMON] int 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  __awdiv         2    7[COMMON] int 
  7059 ;;  __awdiv         1    6[COMMON] unsigned char 
  7060 ;;  __awdiv         1    5[COMMON] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  2    0[COMMON] int 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7070 ;;      Params:         4       0       0       0       0       0       0       0
  7071 ;;      Locals:         4       0       0       0       0       0       0       0
  7072 ;;      Temps:          1       0       0       0       0       0       0       0
  7073 ;;      Totals:         9       0       0       0       0       0       0       0
  7074 ;;Total ram usage:        9 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		i1_setSegmentDisplayNumber
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           psect	text736
  7083                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  7084                           	line	5
  7085                           	global	__size_ofi1___awdiv
  7086  006C                     	__size_ofi1___awdiv	equ	__end_ofi1___awdiv-i1___awdiv
  7087                           	
  7088  0615                     i1___awdiv:	
  7089                           	opt	stack 8
  7090                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  7091                           	line	9
  7092                           	
  7093  0615                     i1l7946:	
  7094  0615  01F6               	clrf	(i1___awdiv@sign)
  7095                           	line	10
  7096  0616  1FF1               	btfss	(i1___awdiv@divisor+1),7
  7097  0617  2E19               	goto	u467_21
  7098  0618  2E1A               	goto	u467_20
  7099  0619                     u467_21:
  7100  0619  2E23               	goto	i1l7950
  7101  061A                     u467_20:
  7102                           	line	11
  7103                           	
  7104  061A                     i1l7948:	
  7105  061A  09F0               	comf	(i1___awdiv@divisor),f
  7106  061B  09F1               	comf	(i1___awdiv@divisor+1),f
  7107  061C  0AF0               	incf	(i1___awdiv@divisor),f
  7108  061D  1903               	skipnz
  7109  061E  0AF1               	incf	(i1___awdiv@divisor+1),f
  7110                           	line	12
  7111  061F  01F6               	clrf	(i1___awdiv@sign)
  7112  0620  1403               	bsf	status,0
  7113  0621  0DF6               	rlf	(i1___awdiv@sign),f
  7114  0622  2E23               	goto	i1l7950
  7115                           	line	13
  7116                           	
  7117  0623                     i1l5518:	
  7118                           	line	14
  7119                           	
  7120  0623                     i1l7950:	
  7121  0623  1FF3               	btfss	(i1___awdiv@dividend+1),7
  7122  0624  2E26               	goto	u468_21
  7123  0625  2E27               	goto	u468_20
  7124  0626                     u468_21:
  7125  0626  2E31               	goto	i1l7956
  7126  0627                     u468_20:
  7127                           	line	15
  7128                           	
  7129  0627                     i1l7952:	
  7130  0627  09F2               	comf	(i1___awdiv@dividend),f
  7131  0628  09F3               	comf	(i1___awdiv@dividend+1),f
  7132  0629  0AF2               	incf	(i1___awdiv@dividend),f
  7133  062A  1903               	skipnz
  7134  062B  0AF3               	incf	(i1___awdiv@dividend+1),f
  7135                           	line	16
  7136                           	
  7137  062C                     i1l7954:	
  7138  062C  3001               	movlw	(01h)
  7139  062D  00F4               	movwf	(??i1___awdiv+0)+0
  7140  062E  0874               	movf	(??i1___awdiv+0)+0,w
  7141  062F  06F6               	xorwf	(i1___awdiv@sign),f
  7142  0630  2E31               	goto	i1l7956
  7143                           	line	17
  7144                           	
  7145  0631                     i1l5519:	
  7146                           	line	18
  7147                           	
  7148  0631                     i1l7956:	
  7149  0631  01F7               	clrf	(i1___awdiv@quotient)
  7150  0632  01F8               	clrf	(i1___awdiv@quotient+1)
  7151                           	line	19
  7152                           	
  7153  0633                     i1l7958:	
  7154  0633  0871               	movf	(i1___awdiv@divisor+1),w
  7155  0634  0470               	iorwf	(i1___awdiv@divisor),w
  7156  0635  1903               	skipnz
  7157  0636  2E38               	goto	u469_21
  7158  0637  2E39               	goto	u469_20
  7159  0638                     u469_21:
  7160  0638  2E6F               	goto	i1l7978
  7161  0639                     u469_20:
  7162                           	line	20
  7163                           	
  7164  0639                     i1l7960:	
  7165  0639  01F5               	clrf	(i1___awdiv@counter)
  7166  063A  1403               	bsf	status,0
  7167  063B  0DF5               	rlf	(i1___awdiv@counter),f
  7168                           	line	21
  7169  063C  2E47               	goto	i1l7966
  7170                           	
  7171  063D                     i1l5522:	
  7172                           	line	22
  7173                           	
  7174  063D                     i1l7962:	
  7175  063D  3001               	movlw	01h
  7176                           	
  7177  063E                     u470_25:
  7178  063E  35F0               	lslf	(i1___awdiv@divisor),f
  7179  063F  0DF1               	rlf	(i1___awdiv@divisor+1),f
  7180  0640  0B89               	decfsz	wreg,f
  7181  0641  2E3E               	goto	u470_25
  7182                           	line	23
  7183                           	
  7184  0642                     i1l7964:	
  7185  0642  3001               	movlw	(01h)
  7186  0643  00F4               	movwf	(??i1___awdiv+0)+0
  7187  0644  0874               	movf	(??i1___awdiv+0)+0,w
  7188  0645  07F5               	addwf	(i1___awdiv@counter),f
  7189  0646  2E47               	goto	i1l7966
  7190                           	line	24
  7191                           	
  7192  0647                     i1l5521:	
  7193                           	line	21
  7194                           	
  7195  0647                     i1l7966:	
  7196  0647  1FF1               	btfss	(i1___awdiv@divisor+1),(15)&7
  7197  0648  2E4A               	goto	u471_21
  7198  0649  2E4B               	goto	u471_20
  7199  064A                     u471_21:
  7200  064A  2E3D               	goto	i1l7962
  7201  064B                     u471_20:
  7202  064B  2E4D               	goto	i1l7968
  7203                           	
  7204  064C                     i1l5523:	
  7205  064C  2E4D               	goto	i1l7968
  7206                           	line	25
  7207                           	
  7208  064D                     i1l5524:	
  7209                           	line	26
  7210                           	
  7211  064D                     i1l7968:	
  7212  064D  3001               	movlw	01h
  7213                           	
  7214  064E                     u472_25:
  7215  064E  35F7               	lslf	(i1___awdiv@quotient),f
  7216  064F  0DF8               	rlf	(i1___awdiv@quotient+1),f
  7217  0650  0B89               	decfsz	wreg,f
  7218  0651  2E4E               	goto	u472_25
  7219                           	line	27
  7220  0652  0871               	movf	(i1___awdiv@divisor+1),w
  7221  0653  0273               	subwf	(i1___awdiv@dividend+1),w
  7222  0654  1D03               	skipz
  7223  0655  2E58               	goto	u473_25
  7224  0656  0870               	movf	(i1___awdiv@divisor),w
  7225  0657  0272               	subwf	(i1___awdiv@dividend),w
  7226  0658                     u473_25:
  7227  0658  1C03               	skipc
  7228  0659  2E5B               	goto	u473_21
  7229  065A  2E5C               	goto	u473_20
  7230  065B                     u473_21:
  7231  065B  2E62               	goto	i1l7974
  7232  065C                     u473_20:
  7233                           	line	28
  7234                           	
  7235  065C                     i1l7970:	
  7236  065C  0870               	movf	(i1___awdiv@divisor),w
  7237  065D  02F2               	subwf	(i1___awdiv@dividend),f
  7238  065E  0871               	movf	(i1___awdiv@divisor+1),w
  7239  065F  3BF3               	subwfb	(i1___awdiv@dividend+1),f
  7240                           	line	29
  7241                           	
  7242  0660                     i1l7972:	
  7243  0660  1477               	bsf	(i1___awdiv@quotient)+(0/8),(0)&7
  7244  0661  2E62               	goto	i1l7974
  7245                           	line	30
  7246                           	
  7247  0662                     i1l5525:	
  7248                           	line	31
  7249                           	
  7250  0662                     i1l7974:	
  7251  0662  3001               	movlw	01h
  7252                           	
  7253  0663                     u474_25:
  7254  0663  36F1               	lsrf	(i1___awdiv@divisor+1),f
  7255  0664  0CF0               	rrf	(i1___awdiv@divisor),f
  7256  0665  0B89               	decfsz	wreg,f
  7257  0666  2E63               	goto	u474_25
  7258                           	line	32
  7259                           	
  7260  0667                     i1l7976:	
  7261  0667  3001               	movlw	low(01h)
  7262  0668  02F5               	subwf	(i1___awdiv@counter),f
  7263  0669  1D03               	btfss	status,2
  7264  066A  2E6C               	goto	u475_21
  7265  066B  2E6D               	goto	u475_20
  7266  066C                     u475_21:
  7267  066C  2E4D               	goto	i1l7968
  7268  066D                     u475_20:
  7269  066D  2E6F               	goto	i1l7978
  7270                           	
  7271  066E                     i1l5526:	
  7272  066E  2E6F               	goto	i1l7978
  7273                           	line	33
  7274                           	
  7275  066F                     i1l5520:	
  7276                           	line	34
  7277                           	
  7278  066F                     i1l7978:	
  7279  066F  0876               	movf	(i1___awdiv@sign),w
  7280  0670  1D03               	skipz
  7281  0671  2E73               	goto	u476_20
  7282  0672  2E79               	goto	i1l7982
  7283  0673                     u476_20:
  7284                           	line	35
  7285                           	
  7286  0673                     i1l7980:	
  7287  0673  09F7               	comf	(i1___awdiv@quotient),f
  7288  0674  09F8               	comf	(i1___awdiv@quotient+1),f
  7289  0675  0AF7               	incf	(i1___awdiv@quotient),f
  7290  0676  1903               	skipnz
  7291  0677  0AF8               	incf	(i1___awdiv@quotient+1),f
  7292  0678  2E79               	goto	i1l7982
  7293                           	
  7294  0679                     i1l5527:	
  7295                           	line	36
  7296                           	
  7297  0679                     i1l7982:	
  7298  0679  0878               	movf	(i1___awdiv@quotient+1),w
  7299  067A  01F1               	clrf	(?i1___awdiv+1)
  7300  067B  07F1               	addwf	(?i1___awdiv+1)
  7301  067C  0877               	movf	(i1___awdiv@quotient),w
  7302  067D  01F0               	clrf	(?i1___awdiv)
  7303  067E  07F0               	addwf	(?i1___awdiv)
  7304                           
  7305  067F  2E80               	goto	i1l5528
  7306                           	
  7307  0680                     i1l7984:	
  7308                           	line	37
  7309                           	
  7310  0680                     i1l5528:	
  7311  0680  0008               	return
  7312                           	opt stack 0
  7313                           GLOBAL	__end_ofi1___awdiv
  7314  0681                     	__end_ofi1___awdiv:
  7315 ;; =============== function i1___awdiv ends ============
  7316                           
  7317                           	signat	i1___awdiv,90
  7318                           	global	_TMR1_ISR
  7319                           psect	text737,local,class=CODE,delta=2
  7320                           global __ptext737
  7321  0EDD                     __ptext737:
  7322                           
  7323 ;; *************** function _TMR1_ISR *****************
  7324 ;; Defined at:
  7325 ;;		line 250 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;		None
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;		None               void
  7332 ;; Registers used:
  7333 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7339 ;;      Params:         0       0       0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0       0
  7342 ;;      Totals:         0       0       0       0       0       0       0       0
  7343 ;;Total ram usage:        0 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_ISR
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           psect	text737
  7352                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  7353                           	line	250
  7354                           	global	__size_of_TMR1_ISR
  7355  0035                     	__size_of_TMR1_ISR	equ	__end_of_TMR1_ISR-_TMR1_ISR
  7356                           	
  7357  0EDD                     _TMR1_ISR:	
  7358                           	opt	stack 10
  7359                           ; Regs used in _TMR1_ISR: [wreg+fsr1l-status,0]
  7360                           	line	251
  7361                           	
  7362  0EDD                     i1l7578:	
  7363                           ;MCU_B1.c: 251: if(TMR1IE && TMR1IF)
  7364  0EDD  0021               	movlb 1	; select bank1
  7365  0EDE  1C11               	btfss	(1160/8)^080h,(1160)&7
  7366  0EDF  2EE1               	goto	u362_21
  7367  0EE0  2EE2               	goto	u362_20
  7368  0EE1                     u362_21:
  7369  0EE1  2F11               	goto	i1l1051
  7370  0EE2                     u362_20:
  7371                           	
  7372  0EE2                     i1l7580:	
  7373  0EE2  0020               	movlb 0	; select bank0
  7374  0EE3  1C11               	btfss	(136/8),(136)&7
  7375  0EE4  2EE6               	goto	u363_21
  7376  0EE5  2EE7               	goto	u363_20
  7377  0EE6                     u363_21:
  7378  0EE6  2F11               	goto	i1l1051
  7379  0EE7                     u363_20:
  7380                           	line	253
  7381                           	
  7382  0EE7                     i1l7582:	
  7383                           ;MCU_B1.c: 252: {
  7384                           ;MCU_B1.c: 253: TMR1H=((65536-700)/256);
  7385  0EE7  30FD               	movlw	(0FDh)
  7386  0EE8  0097               	movwf	(23)	;volatile
  7387                           	line	254
  7388                           ;MCU_B1.c: 254: TMR1L=((65536-700)%256);
  7389  0EE9  3044               	movlw	(044h)
  7390  0EEA  0096               	movwf	(22)	;volatile
  7391                           	line	255
  7392                           	
  7393  0EEB                     i1l7584:	
  7394                           ;MCU_B1.c: 255: TMR1IF=0;
  7395  0EEB  1011               	bcf	(136/8),(136)&7
  7396                           	line	256
  7397                           	
  7398  0EEC                     i1l7586:	
  7399                           ;MCU_B1.c: 256: Timer1->Count++;
  7400  0EEC  085A               	movf	(_Timer1),w
  7401  0EED  3E01               	addlw	01h
  7402  0EEE  0086               	movwf	fsr1l
  7403  0EEF  0187               	clrf fsr1h	
  7404                           	
  7405  0EF0  3001               	movlw	01h
  7406  0EF1  0781               	addwf	indf1,f
  7407  0EF2  3141               	addfsr	fsr1,1
  7408  0EF3  1803               	skipnc
  7409  0EF4  0A81               	incf	indf1,f
  7410                           	line	257
  7411                           	
  7412  0EF5                     i1l7588:	
  7413                           ;MCU_B1.c: 257: if(Timer1->Count == 20)
  7414  0EF5  085A               	movf	(_Timer1),w
  7415  0EF6  3E01               	addlw	01h
  7416  0EF7  0086               	movwf	fsr1l
  7417  0EF8  0187               	clrf fsr1h	
  7418                           	
  7419  0EF9  3F40               	moviw	[0]fsr1
  7420  0EFA  3A14               	xorlw	low(014h)
  7421  0EFB  1D03               	skipz
  7422  0EFC  2EFF               	goto	u364_25
  7423  0EFD  3F41               	moviw	[1]fsr1
  7424  0EFE  3A00               	xorlw	high(014h)
  7425  0EFF                     u364_25:
  7426  0EFF  1D03               	skipz
  7427  0F00  2F02               	goto	u364_21
  7428  0F01  2F03               	goto	u364_20
  7429  0F02                     u364_21:
  7430  0F02  2F11               	goto	i1l1051
  7431  0F03                     u364_20:
  7432                           	line	259
  7433                           	
  7434  0F03                     i1l7590:	
  7435                           ;MCU_B1.c: 258: {
  7436                           ;MCU_B1.c: 259: Timer1->Count=0;
  7437  0F03  085A               	movf	(_Timer1),w
  7438  0F04  3E01               	addlw	01h
  7439  0F05  0086               	movwf	fsr1l
  7440  0F06  0187               	clrf fsr1h	
  7441                           	
  7442  0F07  3000               	movlw	low(0)
  7443  0F08  3FC0               	movwi	[0]fsr1
  7444  0F09  3000               	movlw	high(0)
  7445  0F0A  3FC1               	movwi	[1]fsr1
  7446                           	line	260
  7447                           ;MCU_B1.c: 260: TMain->T1_Timerout=1;
  7448  0F0B  0859               	movf	(_TMain),w
  7449  0F0C  0086               	movwf	fsr1l
  7450  0F0D  0187               	clrf fsr1h	
  7451                           	
  7452  0F0E  1501               	bsf	indf1,2
  7453  0F0F  2F11               	goto	i1l1051
  7454                           	line	261
  7455                           	
  7456  0F10                     i1l1050:	
  7457  0F10  2F11               	goto	i1l1051
  7458                           	line	262
  7459                           	
  7460  0F11                     i1l1049:	
  7461                           	line	270
  7462                           	
  7463  0F11                     i1l1051:	
  7464  0F11  0008               	return
  7465                           	opt stack 0
  7466                           GLOBAL	__end_of_TMR1_ISR
  7467  0F12                     	__end_of_TMR1_ISR:
  7468 ;; =============== function _TMR1_ISR ends ============
  7469                           
  7470                           	signat	_TMR1_ISR,88
  7471                           psect	text738,local,class=CODE,delta=2
  7472                           global __ptext738
  7473  0000                     __ptext738:
  7474                           	global	btemp
  7475  007E                     	btemp set 07Eh
  7476                           
  7477                           	DABS	1,126,2	;btemp
  7478                           	global	wtemp0
  7479  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Sep 24 14:00:49 2014

                   ??_MainT_Initial 0024                                  _BF 10A0  
                      ___awdiv@sign 002A           ??_setSegmentDisplayNumber 002F  
                               _I2C 0056                                 _CKP 10AC  
                               _GIE 005F                                 _RA1 0061  
                               _RA2 0062                                 _RC0 0070  
                               _RA4 0064                                 _RA5 0065  
                               _RA6 0066                                 _RA7 0067  
                               _PEN 10B2                                 _ISR 0004  
                               _SEN 10B0                                 _RX9 0CEE  
                               _TX9 0CF6                     __end_of_I2C_Set 0DD6  
                      ___awmod@sign 002A                                 wreg 0009  
     __size_of_I2C_Master_Reception 0097                                ?_ISR 0070  
                              l1100 06D1                                l1101 06D7  
                              l1102 06D9                                l1111 038C  
                              l1103 06D8                                l1040 0E1A  
                              l1120 03A1                                l1112 038C  
                              l1104 06DE                                l1200 0FBF  
                              l1121 03A1                                l1113 0391  
                              l1105 06DF                                l1201 0FC0  
                              l1130 03BB                                l1122 03A5  
                              l1114 0393                                l1106 06DF  
                              l1210 0F44                                l1131 03BD  
                              l1123 03AF                                l1115 0393  
                              l1107 06E4                                l1211 0F4A  
                              l1124 03E8                                l1132 03BD  
                              l1140 03E9                                l1116 0398  
                              l1108 06E4                                l1220 0DC7  
                              l1204 0E3E                                l1141 03E9  
                              l1133 03C2                                l1125 03B0  
                              l1117 039B                                l1037 07FC  
                              l1061 046C                                l1205 0E55  
                              l1046 0DF4                                l1054 0DD5  
                              l1150 03FD                                l1142 03EE  
                              l1134 03D0                                l1126 03B0  
                              l1118 039B                                l1070 04AB  
                              l1062 0448                                l1206 0E55  
                              l1151 0402                                l1143 03F0  
                              l1135 03CF                                l1127 03B6  
                              l1119 03A0                                l1063 0465  
                              l1160 0414                                l1152 0403  
                              l1144 03F0                                l1136 03D6  
                              l1128 03B7                                l1080 0689  
                              l1064 04AB                                l1161 0416  
                              l1153 0403                                l1145 03F5  
                              l1137 03D7                                l1129 03B7  
                              l1081 068E                                l1209 0F25  
                              l1217 0DBF                                l1065 0487  
                              l1162 0415                                l1154 0407  
                              l1146 03F7                                l1138 03D7  
                              l1090 06A6                                l1082 0691  
                              l1218 0DBF                                l1066 0486  
                              l1163 041B                                l1155 0409  
                              l1147 03F6                                l1139 03DC  
                              l1091 06A6                                l1083 0691  
                              l1219 0DC4                                l1067 04AA  
                              l1164 041C                                l1156 0409  
                              l1148 03FC                                l1092 06AC  
                              l1084 0696                                l1076 0682  
                              l1068 0496                                l1165 041C  
                              l1157 040E                                l1149 03FD  
                              l1093 06B9                                l1085 0697  
                              l1077 0682                                l1069 04A9  
                              l1166 0421                                l1158 040F  
                              l1094 06B9                                l1086 0697  
                              l1078 0687                                l1167 0421  
                              l1159 040F                                l1095 06BE  
                              l1087 069B                                l1079 0689  
                              l1096 06BF                                l1088 06A5  
                              l1089 06D0                                l1097 06BF  
                              l1098 06C4                                l1099 06D1  
                              l1188 0E33                                l3300 0166  
                              l2260 0ED8                                l3301 014C  
                              l2261 0EDA                                l2270 0561  
                              l3310 04DB                                l3302 0165  
                              l1198 0FAB                                l2262 0EDB  
                              l2271 05A7                                l3311 0502  
                              l3303 015E                                l1199 0FC0  
                              l2263 0EDB                                l2272 0586  
                              l3312 04E7                                l3304 0164  
                              l2273 0585                                l3313 0501  
                              l3305 0167                                l2266 0DE4  
                              l2274 05A6                                l3314 04F3  
                              l2258 0EB7                                l2275 05A7  
                              l3315 0500                                l2259 0ED9  
                              l3308 0534                                l3316 04FF  
                              l2269 0562                                l3309 0533  
                              l3317 052C                                l3318 0532  
                              l3319 0534                                l3291 0167  
                              l3292 0066                                l3293 0126  
                              l3294 0125                                l3295 009C  
                              l3288 0E04                                l5400 0FF7  
                              l3296 0085                                l5401 0FFF  
                              l3297 009B                                l3298 0124  
                              l3299 0139                                l5350 0378  
                              l5351 02BF                                l5520 0603  
                              l5360 02FC                                l5352 02CA  
                              l5521 05DB                                l5361 0307  
                              l5353 02D1                                l5522 05D1  
                              l5362 032B                                l5354 02CC  
                              l5523 05E0                                l5355 038A  
                              l5363 0320                                l5524 05E1  
                              l8020 07ED                                l8100 0107  
                              l5364 0336                                l5356 02CD  
                              l5525 05F6                                l5365 036B  
                              l5357 02CE                                l5390 07E4  
                              l5526 0602                                l5518 05B7  
                              l8022 07F0                                l8030 0422  
                              l8110 0143                                l8102 011B  
                              l5366 033C                                l5358 02E3  
                              l5391 07EC                                l5527 060D  
                              l5519 05C5                                l5367 0377  
                              l5359 02CF                                l5384 07E5  
                              l5528 0614                                l8024 07F3  
                              l8040 043F                                l8032 042C  
                              l8112 014C                                l8104 0126  
                              l5368 0389                                l8120 02BF  
                              l8200 0EB5                                l5385 07BD  
                              l5369 038A                                l5386 07B3  
                              l5394 0FF8                                l8026 07F6  
                              l8050 045E                                l8042 0440  
                              l8034 0432                                l8114 0156  
                              l8106 0130                                l8130 02EA  
                              l8122 02C5                                l8210 0ECE  
                              l8202 0EB7                                l5387 07C2  
                              l5395 0FD6                                l5388 07C3  
                              l5396 0FCC                                l8028 07F9  
                              l8060 0490                                l8044 0447  
                              l8052 0465                                l8036 0435  
                              l8116 015E                                l8108 0139  
                              l8140 02FF                                l8132 02EE  
                              l8124 02D0                                l8212 0ED1  
                              l8204 0EBF                                l5389 07D8  
                              l5397 0FDB                                l5398 0FDC  
                              l5590 0708                                l8062 049F  
                              l8054 0470                                l8046 0448  
                              l8038 043D                                l8070 002B  
                              l8150 0324                                l8142 0306  
                              l8134 02F2                                l8126 02D1  
                              l8118 02BA                                l8214 0ED4  
                              l8206 0EC3                                l5399 0FEB  
                              l5591 0717                                l7520 0E05  
                              l5592 0718                                l8064 04A5  
                              l8056 0479                                l8048 045A  
                              l8080 007B                                l8072 0034  
                              l8160 0366                                l8152 032B  
                              l8144 0307                                l8136 02F6  
                              l8128 02E3                                l8208 0EC6  
                              l5593 0727                                l7530 0E13  
                              l7522 0E08                                l5594 0733  
                              l5586 06F4                                l8058 0487  
                              l8090 0094                                l8082 007D  
                              l8074 0048                                l8066 0015  
                              l8162 036B                                l8154 0331  
                              l8146 031F                                l8138 02FC  
                              l8170 0E3D                                l5595 073E  
                              l5587 06FE                                l7532 0E14  
                              l7524 0E09                                l7540 0DF2  
                              l7620 03C2                                l7612 038B  
                              l5596 0745                                l5588 0734  
                              l8084 0084                                l8092 009C  
                              l8076 0066                                l8068 001E  
                              l8156 0336                                l8148 0320  
                              l8164 0378                                l8172 0E3E  
                              l8180 0F8F                                l5589 0712  
                              l7534 0E18                                l7526 0E0F  
                              l7542 0DF3                                l7550 0E1B  
                              l7622 03DC                                l7614 0398  
                              l7630 069D                                l7702 0DD6  
                              l7710 0DFA                                l8094 00B3  
                              l8086 0085                                l8078 006E  
                              l8158 033C                                l8174 0E49  
                              l8166 0E34                                l8190 0FB5  
                              l8182 0F95                                l7528 0E12  
                              l7536 0DE5                                l7544 0DC8  
                              l7560 0E28                                l7552 0E20  
                              l7624 03E1                                l7616 03A7  
                              l7632 06A4                                l7704 0DDB  
                              l7712 0DFF                                l7720 0554  
                              l7800 0FC8                                l8096 00C7  
                              l8088 0090                                l8176 0E4E  
                              l8168 0E36                                l8192 0FBB  
                              l8184 0F98                                l7538 0DF0  
                              l7546 0DD2                                l7570 0E30  
                              l7562 0E2A                                l7554 0E22  
                              l7618 03AE                                l7634 06AC  
                              l7626 0681                                l7706 0DE0  
                              l7730 0584                                l7722 0562  
                              l7714 0535                                l7810 0FE6  
                              l7802 0FCC                                l8098 00F1  
                              l8186 0F9A                                l8178 0F85  
                              l8194 0EAC                                l7548 0DD3  
                              l7572 0E31                                l7564 0E2C  
                              l7556 0E26                                l7636 06C4  
                              l7628 068E                                l7708 0DF5  
                              l7732 0586                                l7724 056B  
                              l7716 053D                                l7740 04B5  
                              l7812 0FEB                                l7804 0FD1  
                              l7820 05A8                                l8188 0FAB  
                              l8196 0EAF                                l7574 0E32  
                              l7566 0E2D                                l7558 0E27  
                              l7638 06C9                                l7734 058F  
                              l7726 0579                                l7718 0546  
                              l7750 04D9                                l7742 04BD  
                              l7814 0FF0                                l7806 0FD6  
                              l7830 05C5                                l7822 05AE  
                              l8198 0EB2                                l7568 0E2E  
                              l7680 0F1C                                l7736 059D  
                              l7728 0581                                l7760 04F3  
                              l7752 04DB                                l7744 04C7  
                              l7808 0FDC                                l7816 0FF8  
                              l7840 05DB                                l7832 05C7  
                              l7824 05B7                                l7690 0F3D  
                              l7682 0F1D                                l7770 052C  
                              l7762 04FD                                l7754 04E5  
                              l7746 04CC                                l7738 04AC  
                              l7818 0FFF                                l7850 05FB  
                              l7842 05E1                                l7834 05CD  
                              l7826 05BB                                l7684 0F24  
                              l7692 0F44                                l7676 0F12  
                              l7756 04E7                                l7764 0502  
                              l7748 04D0                                l7780 07B8  
                              l7772 07A6                                l7844 05F0  
                              l7836 05D1                                l7852 0603  
                              l7828 05C0                                l7860 06E5  
                              l7686 0F25                                l7678 0F15  
                              l7694 0DBE                                l7766 0515  
                              l7758 04F1                                l7790 07D8  
                              l7782 07BD                                l7774 07A9  
                              l7854 0607                                l7846 05F4  
                              l7838 05D6                                l7870 0704  
                              l7862 06EB                                l7688 0F39  
                              l7696 0DC4                                l7768 0523  
                              l7792 07DD                                l7784 07C3  
                              l7776 07AF                                l7856 060D  
                              l7848 05F6                                l7880 0722  
                              l7872 0708                                l7864 06F4  
                              l7786 07D2                                l7778 07B3  
                              l7794 07E5                                l7858 0614  
                              l7890 073E                                l7882 0727  
                              l7874 070D                                l7866 06F8  
                              l7796 07EC                                l7788 07D6  
                              l7892 0745                                l7884 072C  
                              l7876 0712                                l7868 06FE  
                              l7798 0FC1                                l7878 0718  
                              l7886 0734                                l7888 0738  
                              STR_1 080B                                _LATA 010C  
                              _LATB 010D                                _LATC 010E  
                              u4000 06DD                                u4001 06DC  
                              u4010 06E3                                u4011 06E2  
                              u4100 0F23                                u4101 0F22  
                              u4110 0F43                                u4111 0F42  
                              u4120 0DC3                                u4200 04E5  
                              u5000 009A                                u4121 0DC2  
                              u4201 04E4                                u5001 0099  
                              u4130 053D                                u4210 04F1  
                              u5010 0130                                u4131 053C  
                              u4211 04F0                                u5011 012F  
                              u4140 0554                                u4220 04FD  
                              u4300 07E3                                u5020 0143  
                              u5100 0376                                u4141 0553  
                              u4221 04FC                                u4301 07E2  
                              u5021 0142                                u5101 0375  
                              u4150 0579                                u4230 0523  
                              u4310 0FC8                                u5030 0156  
                              u5110 0388                                u4151 0578  
                              u4231 0522                                u4311 0FC7  
                              u5031 0155                                u5111 0387  
                              u4160 059D                                u4240 07AF  
                              u5040 02C5                                u5120 0E3C  
                              u4161 059C                                u4145 0550  
                              u4241 07AE                                u5041 02C4  
                              u5121 0E3B                                u4170 04B5  
                              u4330 0FDA                                u4410 05DF  
                              u5050 02F2                                u5130 0E54  
                              u4155 0575                                u4171 04B4  
                              u4331 0FD9                                u4411 05DE  
                              u5051 02F1                                u5131 0E53  
                              u3700 0391                                u4180 04C7  
                              u4260 07C1                                u4340 0FE6  
                              u5060 0305                                u5140 0F8F  
                              u3701 0390                                u4165 0599  
                              u4181 04C6                                u4261 07C0  
                              u4341 0FE5                                u4325 0FCD  
                              u4405 05D2                                u5061 0304  
                              u5141 0F8E                                u3710 0397  
                              u4190 04D9                                u4430 05F0  
                              u4510 0716                                u5070 031E  
                              u5150 0FB5                                u3711 0396  
                              u4191 04D8                                u4255 07B4  
                              u4431 05EF                                u4511 0715  
                              u5071 031D                                u5151 0FB4  
                              u3800 03E7                                u3720 039F  
                              u4280 07D2                                u4360 0FF6  
                              u4520 0722                                u5080 032A  
                              u5160 0EBF                                u3801 03E6  
                              u3721 039E                                u4281 07D1  
                              u4361 0FF5                                u4345 0FE2  
                              u4425 05E2                                u4521 0721  
                              u4505 0709                                u5081 0329  
                              u5161 0EBE                                u3810 03EE  
                              u3730 03A5                                u4450 0601  
                              u4370 05AE                                u5090 0331  
                              u5170 0ECE                                u3811 03ED  
                              u3731 03A4                                u4275 07C4  
                              u4355 0FEC                                u4451 0600  
                              u4435 05EC                                u4371 05AD  
                              u5091 0330                                u5075 031A  
                              u5171 0ECD                                _PEIE 005E  
                              u3820 03F4                                u3740 03AD  
                              u3900 0687                                u4460 0607  
                              u4380 05BB                                u4540 0732  
                              u3821 03F3                                u3741 03AC  
                              u3901 0686                                u4285 07CE  
                              u4445 05F7                                u4381 05BA  
                              u4541 0731                                u4525 071E  
                              u3830 03FB                                u3750 03B5  
                              u3910 068D                                u4390 05CD  
                              u4550 0738                                u4470 06EB  
                              u3831 03FA                                u3751 03B4  
                              u3911 068C                                u4295 07D9  
                              u4391 05CC                                u4535 0728  
                              u4471 06EA                                u3840 0401  
                              u3760 03BB                                u3920 0695  
                              u4480 06F8                                u3841 0400  
                              u3761 03BA                                u3921 0694  
                              u4481 06F7                                u3850 0407  
                              u3770 03C1                                u3930 069B  
                              u4490 0704                                u3851 0406  
                              u3771 03C0                                u3931 069A  
                              u4491 0703                                _RCIE 048D  
                              u3860 040D                                u3780 03D5  
                              u3940 06A3                                u4900 0479  
                              _RCEN 10B3                                _RCIF 008D  
                              u3861 040C                                u3781 03D4  
                              u3941 06A2                                u4901 0478  
                              u3870 0413                                u3790 03DB  
                              u3950 06AB                                u4910 0490  
                              u3871 0412                                u3791 03DA  
                              u3951 06AA                                u4911 048F  
                              u3880 041A                                u3960 06BD  
                              u4920 049F                                u3881 0419  
                              u3961 06BC                                u4921 049E  
                              u3890 0420                                u3970 06C3  
                              u4930 001E                                u3891 041F  
                              u3971 06C2                                u4931 001D  
                              u3980 06CF                                u4860 042C  
                              u4940 002B                                u3981 06CE  
                              u4861 042B                                u4941 002A  
                              u3990 06D6                                u4870 0446  
                              u3991 06D5                                u4871 0445  
                              u4880 0464                                u4881 0463  
                              u4890 0470                                u4970 006E  
                              u4891 046F                                u4971 006D  
                              u4955 003A                                u4980 007B  
                              u4981 007A                                u4965 0057  
                              u4990 0083                                u4991 0082  
                              u4985 0077                                _UART 005B  
                              _TXIE 048C                                _TXIF 008C  
                              _R_nW 10A2                                _main 0EAC  
                  __end_of_I2C_Main 04AC                                fsr0h 0005  
                              fsr1h 0007                                fsr0l 0004  
                              indf0 0000                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              start 0012                               ??_ISR 0023  
                             ?_main 0070                      i1___awdiv@sign 0076  
                             _ACKEN 10B4                     __end_of___awdiv 0615  
                             _BRG16 0CFB                     __end_of___awmod 0746  
                   ___awdiv@divisor 0024                               _T1CON 0018  
                   __end_of___lwdiv 07ED                     __end_of___lwmod 1000  
                             _RCIDL 0CFE                     ___awdiv@counter 0029  
                             _RCREG 0199                               _RCSTA 019D  
                             _TMR1H 0017                               _TMR1L 0016  
                             _SPBRG 019B                               _PORTA 000C  
                             _PORTB 000D                               _PORTC 000E  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISC 008E                               _SSPIE 048B  
                             _SSPIF 008B                               _SSPOV 10AE  
                             _TXREG 019A                               _TXSTA 019E  
                             _TMain 0059                               _MainT 0535  
   i1setSegmentDisplayNumber@number 0079                    __end_of_UART_ISR 0EAC  
                __size_of_UART_Main 003C                    __end_of_TMR1_ISR 0F12  
                  __end_of_UART_Set 0E34                      i1___awmod@sign 0076  
                  __end_of_TMR1_Set 0DF5                               _putch 0DBC  
   __end_of_setSegmentDisplayNumber 0168                               status 0003  
                             wtemp0 007E                  __size_ofi1___awdiv 006C  
                __size_ofi1___awmod 0060                        __end_of_main 0EDD  
__size_ofi1_setSegmentDisplayNumber 0150    __size_of_I2C_Master_Transmission 0064  
                         ??_I2C_Set 0024                              ??_main 0044  
             I2C_Master_Reception@i 0026                              ?_MainT 0070  
                         I2C_Main@i 002A                    ___awdiv@dividend 0026  
                            _ANSELA 018C                              ?_putch 0070  
                            _ANSELB 018D                              _ANSELC 018E  
                            i1l1050 0F10                              i1l1051 0F11  
                            i1l1043 000E                              i1l1049 0F11  
                            i1l1191 0EAB                              i1l1192 0E89  
                            i1l1193 0E89                              i1l1194 0E8F  
                            i1l1195 0EAB                              i1l3300 02B6  
                            i1l3301 029C                              i1l3302 02B5  
                            i1l3303 02AE                              i1l3304 02B4  
                            i1l3305 02B7                              i1l3291 02B7  
                            i1l3292 01B9                              i1l3293 0276  
                            i1l3294 0275                              i1l3295 01EF  
                            i1l3296 01D8                              i1l3297 01EE  
                            i1l3298 0274                              i1l3299 0289  
                            i1l5520 066F                              i1l8000 076D  
                            i1l5521 0647                              i1l5522 063D  
                            i1l8010 078C                              i1l8002 0772  
                            i1l5523 064C                              i1l5524 064D  
                            i1l8004 0778                              i1l8012 0794  
                            i1l5525 0662                              i1l5526 066E  
                            i1l5518 0623                              i1l8014 0798  
                            i1l8006 0782                              i1l5527 0679  
                            i1l5519 0631                              i1l5528 0680  
                            i1l8016 079E                              i1l8008 0787  
                            i1l8018 07A5                              i1l5590 0768  
                            i1l5591 0777                              i1l5592 0778  
                            i1l7600 0E99                              i1l5593 0787  
                            i1l5594 0793                              i1l5586 0754  
                            i1l7602 0E9B                              i1l5595 079E  
                            i1l5587 075E                              i1l5596 07A5  
                            i1l5588 0794                              i1l5589 0772  
                            i1l7580 0EE2                              i1l7900 0187  
                            i1l7590 0F03                              i1l7582 0EE7  
                            i1l7910 01D0                              i1l7902 019B  
                            i1l7584 0EEB                              i1l7912 01D7  
                            i1l7920 01EF                              i1l7904 01B9  
                            i1l7592 0E7D                              i1l7576 0008  
                            i1l7586 0EEC                              i1l7578 0EDD  
                            i1l7930 026A                              i1l7922 0205  
                            i1l7914 01D8                              i1l7906 01C1  
                            i1l7594 0E82                              i1l7588 0EF5  
                            i1l7940 029C                              i1l7924 0218  
                            i1l7916 01E3                              i1l7908 01CE  
                            i1l7932 0276                              i1l7596 0E88  
                            i1l7950 0623                              i1l7942 02A6  
                            i1l7934 0280                              i1l7926 0241  
                            i1l7918 01E7                              i1l7598 0E8F  
                            i1l7960 0639                              i1l7952 0627  
                            i1l7944 02AE                              i1l7936 0289  
                            i1l7928 0257                              i1l7970 065C  
                            i1l7962 063D                              i1l7954 062C  
                            i1l7946 0615                              i1l7938 0293  
                            i1l7980 0673                              i1l7972 0660  
                            i1l7964 0642                              i1l7956 0631  
                            i1l7948 061A                              i1l7982 0679  
                            i1l7974 0662                              i1l7966 0647  
                            i1l7958 0633                              i1l7990 0754  
                            i1l7894 0168                              i1l7984 0680  
                            i1l7976 0667                              i1l7968 064D  
                            i1l7992 0758                              i1l7896 0171  
                            i1l7978 066F                              i1l7994 075E  
                            i1l7986 0746                              i1l7898 017E  
                            i1l7996 0764                              i1l7988 074B  
                            i1l7998 0768                              u362_20 0EE2  
                            u362_21 0EE1                              u363_20 0EE7  
                            u363_21 0EE6                              u364_20 0F03  
                            u460_20 01C1                              u364_21 0F02  
                            u460_21 01C0                              u364_25 0EFF  
                            u461_20 01CE                              u365_20 0E82  
                            u461_21 01CD                              u365_21 0E81  
                            u461_25 01CA                              u462_20 01D6  
                            u366_20 0E87                              u462_21 01D5  
                            u366_21 0E86                              u470_25 063E  
                            u471_20 064B                              u463_20 01ED  
                            u367_20 0E8E                              u471_21 064A  
                            u463_21 01EC                              u367_21 0E8D  
                            u464_20 0280                              u456_20 0171  
                            u464_21 027F                              u456_21 0170  
                            u472_25 064E                              u480_25 0769  
                            u473_20 065C                              u481_20 0776  
                            u465_20 0293                              u457_20 017E  
                            u473_21 065B                              u481_21 0775  
                            u465_21 0292                              u457_21 017D  
                            u473_25 0658                              u482_20 0782  
                            u466_20 02A6                              _OSCCON 0099  
                            u482_21 0781                              u466_21 02A5  
                            u474_25 0663                              u482_25 077E  
                            u458_25 018D                              u475_20 066D  
                            u467_20 061A                              u475_21 066C  
                            u467_21 0619                              u483_25 0788  
                            u459_25 01AA                              u476_20 0673  
                            u468_20 0627                              u484_20 0792  
                            u468_21 0626                              u484_21 0791  
                            u469_20 0639                              u485_20 0798  
                            u477_20 074B                              u469_21 0638  
                            u477_21 074A                              u478_20 0758  
                            u478_21 0757                              u479_20 0764  
                            u479_21 0763                          _VarSegment 00C0  
                            _TMR1IE 0488                              _TMR1IF 0088  
                            _SPBRGH 019C                              _IO_Set 0E05  
                            _SSPADD 0212                              _TRISC6 0476  
                            _TRISC7 0477                              _SSPBUF 0211  
                        _VarProduct 00A0          __end_of_Mcu_Initialization 07FD  
                            _VarI2C 0120                              _Timer1 005A  
                 __end_of_UART_Main 0FC1                           ??___awdiv 0028  
                         ??___awmod 0028                           ??___lwdiv 0028  
                         ??___lwmod 0030                    ___awdiv@quotient 002B  
                   ___awmod@divisor 0024                     ___awmod@counter 0029  
                            _printf 02B8                              clrloop 0DB7  
                 __end_ofi1___awdiv 0681                   __end_ofi1___awmod 07A6  
                         ?_I2C_Main 0070               __end_of_UART_Transmit 0E56  
                     __end_of_MainT 05A8                      __pcstackCOMMON 0070  
                      __pidataBANK1 0F4B                           ?_UART_ISR 0070  
                         ?_TMR1_ISR 0070                           ?_UART_Set 0070  
                         ?_TMR1_Set 0070                       __end_of_putch 0DC8  
                        ??_I2C_Main 0027                             ??_MainT 0024  
                           ??_putch 0024                          __pbssBANK0 0044  
                        __pbssBANK2 0120                          __pbssBANK3 01A0  
                           ?_IO_Set 0070        __end_of_I2C_Master_Reception 0422  
                        __pmaintext 0EAC                          ??_UART_ISR 0021  
           _I2C_Master_Transmission 0681                          ??_TMR1_ISR 0070  
                        ??_UART_Set 0024                          ??_TMR1_Set 0024  
                        __pintentry 0004                             _ACKSTAT 10B6  
      __size_of_SegmentDisplay_Main 0089                             _I2C_Set 0DC8  
             __end_of_MainT_Initial 0DE5                             ?_printf 0032  
                i1___awdiv@dividend 0072                             _SSPCON1 0215  
                           _SSPCON2 0216                             _SSPSTAT 0214  
                        __stringtab 0800                       ?_UART_Receive 0070  
                   __size_of_IO_Set 0016                             _Segment 0058  
                i1___awdiv@quotient 0077                             _VarUart 01A0  
                           _Product 0057            ?_setSegmentDisplayNumber 002D  
                           ___awdiv 05A8                             ___awmod 06E5  
                           ___lwdiv 07A6                             ___lwmod 0FC1  
          ??_SegmentDisplay_Initial 0024                     __size_of_printf 00D3  
                      __size_of_ISR 000E                             _dpowers 0801  
                  ___awmod@dividend 0026                end_of_initialization 0E7A  
                    ??_UART_Receive 0024                             init_ram 0DB0  
                           initloop 0DB1                      UART_Transmit@i 0041  
         ??_I2C_Master_Transmission 0024                             printf@c 003E  
                           printf@f 0038                           _UART_Main 0F85  
          I2C_Master_Transmission@i 0025                  _Mcu_Initialization 07ED  
                 __size_of_I2C_Main 008A                           i1___awdiv 0615  
                         i1___awmod 0746                 ?_Mcu_Initialization 0070  
              _I2C_Master_Reception 038B                      __end_of_IO_Set 0E1B  
              ??_Mcu_Initialization 0025       setSegmentDisplayNumber@number 002D  
                        ?_UART_Main 0070                   __size_of_UART_ISR 002F  
                 __size_of_TMR1_ISR 0035                   __size_of_UART_Set 0019  
   __size_of_SegmentDisplay_Initial 0010                   __size_of_TMR1_Set 0010  
        ?i1_setSegmentDisplayNumber 0079                      __end_of_printf 038B  
               start_initialization 0E56                         __end_of_ISR 0012  
             ?_I2C_Master_Reception 0070                          ?i1___awdiv 0070  
                        ?i1___awmod 0070                 _SegmentDisplay_Main 04AC  
                          ??_IO_Set 0024                           _VarTimer1 0053  
                       __pdataBANK1 00A0                  i1___awmod@dividend 0072  
              ?_SegmentDisplay_Main 0070                            ?_I2C_Set 0070  
                          ??_printf 0034                __end_of_UART_Receive 0F4B  
 __end_ofi1_setSegmentDisplayNumber 02B8              __size_of_UART_Transmit 0022  
                     __pcstackBANK0 0020              _SegmentDisplay_Initial 0DF5  
                         __pnvBANK0 0056                    ___lwdiv@dividend 0026  
                          ?___awdiv 0024                            ?___awmod 0024  
                         __ptext710 0F85                           __ptext711 0E34  
                         __ptext720 04AC                           __ptext712 02B8  
                         __ptext721 0535                           __ptext713 0015  
                         __ptext730 0DE5                           __ptext722 0DF5  
                         __ptext714 0422                           __ptext731 0E05  
                         __ptext723 0DD6                           __ptext715 07ED  
                         __ptext724 0DBC                           __ptext716 06E5  
                         __ptext733 0E7D                           __ptext725 0F12  
                         __ptext717 05A8                           __ptext734 0168  
                         __ptext726 0681                           __ptext718 0FC1  
                         __ptext735 0746                           __ptext727 038B  
                         __ptext719 07A6                           __ptext736 0615  
                         __ptext728 0E1B                           __ptext737 0EDD  
                         __ptext729 0DC8                           __ptext738 0000  
                          ?___lwdiv 0024               ??_SegmentDisplay_Main 0024  
                          ?___lwmod 002C                   i1___awdiv@divisor 0070  
                       ??_UART_Main 0042                   i1___awdiv@counter 0075  
                         __pstrings 0800                       UART_Receive@i 0027  
                          _I2C_Main 0422              ??_I2C_Master_Reception 0024  
                    __size_of_MainT 0073    __size_of_setSegmentDisplayNumber 0153  
                       ??i1___awdiv 0074                         ??i1___awmod 0074  
                  ___lwdiv@quotient 0029            setSegmentDisplayNumber@i 0032  
                    __size_of_putch 000C              __size_of_MainT_Initial 000F  
                     _UART_Transmit 0E34                            _UART_ISR 0E7D  
                          _TMR1_ISR 0EDD                            _UART_Set 0E1B  
                          _TMR1_Set 0DE5                    __size_of_I2C_Set 000E  
        i1setSegmentDisplayNumber@i 0020                          printf@_val 003A  
                        printf@flag 0037                          printf@prec 0039  
                          _VarTMain 0044                      ?_UART_Transmit 0070  
             __size_of_UART_Receive 0039                   i1___awmod@divisor 0070  
                 i1___awmod@counter 0075                    __size_of___awdiv 006D  
                  __size_of___awmod 0061                    __size_of___lwdiv 0047  
                  __size_of___lwmod 003F                       _MainT_Initial 0DD6  
       ??i1_setSegmentDisplayNumber 007B                     ___lwdiv@divisor 0024  
                   ___lwdiv@counter 002B            ?_I2C_Master_Transmission 0070  
                     __size_of_main 0031                        _UART_Receive 0F12  
                          clear_ram 0DB6         __size_of_Mcu_Initialization 0010  
                    ?_MainT_Initial 0070                           putch@byte 0024  
           _setSegmentDisplayNumber 0015             ?_SegmentDisplay_Initial 0070  
                          intlevel1 0000                    ___lwmod@dividend 002E  
                   ??_UART_Transmit 003F           i1_setSegmentDisplayNumber 0168  
                          printf@ap 0036                     ___lwmod@divisor 002C  
                   ___lwmod@counter 0031      __end_of_SegmentDisplay_Initial 0E05  
   __end_of_I2C_Master_Transmission 06E5         __end_of_SegmentDisplay_Main 0535  
