

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Aug 29 09:25:37 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1516
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 7 "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 7 "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    51  8007  FFE4               	dw 0xFFFC & 0xFFE7 ;#
    52                           # 8 "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 8 "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    55  8008  FFFE               	dw 0xFFFF & 0xFFFE ;#
    56                           	FNCALL	_main,_MainT_Initial
    57                           	FNCALL	_main,_Mcu_Initial
    58                           	FNCALL	_main,_SegmentDisplay_Initial
    59                           	FNCALL	_main,_MainT
    60                           	FNCALL	_main,_I2C_Main
    61                           	FNCALL	_main,_SegmentDisplay_Main
    62                           	FNCALL	_MainT,_setSegmentDisplayNumber
    63                           	FNCALL	_setSegmentDisplayNumber,___awdiv
    64                           	FNCALL	_setSegmentDisplayNumber,___awmod
    65                           	FNCALL	_I2C_Main,_I2C_Master_Reception
    66                           	FNCALL	_I2C_Main,_I2C_Master_Transmission
    67                           	FNCALL	_Mcu_Initial,_IO_Set
    68                           	FNCALL	_Mcu_Initial,_TMR1_Set
    69                           	FNCALL	_Mcu_Initial,_I2C_Set
    70                           	FNROOT	_main
    71                           	FNCALL	_ISR,_TMR1_ISR
    72                           	FNCALL	_ISR,_I2C_ISR
    73                           	FNCALL	intlevel1,_ISR
    74                           	global	intlevel1
    75                           	FNROOT	intlevel1
    76                           	global	_VarSegment
    77                           	global	_VarProduct
    78                           psect	idataBANK0,class=CODE,space=0,delta=2
    79                           global __pidataBANK0
    80  0557                     __pidataBANK0:
    81                           	file	"G:\Program\PIC\Header_File\SegmentDisplay_A2.h"
    82                           	line	69
    83                           
    84                           ;initializer for _VarSegment
    85  0557  34C0               	retlw	0C0h
    86  0558  34F9               	retlw	0F9h
    87  0559  34A4               	retlw	0A4h
    88  055A  34B0               	retlw	0B0h
    89  055B  3499               	retlw	099h
    90  055C  3492               	retlw	092h
    91  055D  3482               	retlw	082h
    92  055E  34D8               	retlw	0D8h
    93  055F  3480               	retlw	080h
    94  0560  3490               	retlw	090h
    95  0561  3488               	retlw	088h
    96  0562  3483               	retlw	083h
    97  0563  34A7               	retlw	0A7h
    98  0564  34A1               	retlw	0A1h
    99  0565  3486               	retlw	086h
   100  0566  348E               	retlw	08Eh
   101  0567  34BF               	retlw	0BFh
   102  0568  3400               	retlw	0
   103  0569  3400               	retlw	0
   104  056A  3400               	retlw	0
   105  056B  3400               	retlw	0
   106  056C  3400               	retlw	0
   107  056D  3400               	retlw	0
   108  056E  3400               	retlw	0
   109  056F  3400               	retlw	0
   110  0570  3400               	retlw	0
   111                           psect	idataBANK1,class=CODE,space=0,delta=2
   112                           global __pidataBANK1
   113  0537                     __pidataBANK1:
   114                           	file	"G:\Program\PIC\0.myFile\myDevelopment-AH\Release\../Release/myDevelopment-A.h"
   115                           	line	245
   116                           
   117                           ;initializer for _VarProduct
   118  0537  3463               	retlw	063h
   119  0538  3402               	retlw	02h
   120  0539  3400               	retlw	0
   121  053A  3400               	retlw	0
   122  053B  3400               	retlw	0
   123  053C  3400               	retlw	0
   124  053D  3400               	retlw	0
   125  053E  3400               	retlw	0
   126  053F  3400               	retlw	0
   127  0540  3400               	retlw	0
   128  0541  3400               	retlw	0
   129  0542  3400               	retlw	0
   130  0543  34FF               	retlw	0FFh
   131  0544  34FF               	retlw	0FFh
   132  0545  34FF               	retlw	0FFh
   133  0546  3400               	retlw	0
   134  0547  3400               	retlw	0
   135  0548  3400               	retlw	0
   136  0549  3400               	retlw	0
   137  054A  3400               	retlw	0
   138  054B  3400               	retlw	0
   139  054C  3400               	retlw	0
   140  054D  3400               	retlw	0
   141  054E  3400               	retlw	0
   142  054F  3400               	retlw	0
   143  0550  3400               	retlw	0
   144  0551  3400               	retlw	0
   145  0552  3400               	retlw	0
   146  0553  3400               	retlw	0
   147  0554  3400               	retlw	0
   148  0555  3400               	retlw	0
   149  0556  3400               	retlw	0
   150                           	global	_I2C
   151                           	global	_Timer1
   152                           	global	_Segment
   153                           	global	_VarTMain
   154                           	global	_VarTimer1
   155                           	global	_VarI2C
   156                           	global	_Product
   157                           psect	nvBANK0,class=BANK0,space=1
   158                           global __pnvBANK0
   159  0055                     __pnvBANK0:
   160  0055                     _Product:
   161  0055                            ds      1
   162                           
   163                           	global	_TMain
   164  0056                     _TMain:
   165  0056                            ds      1
   166                           
   167                           	global	_PORTA
   168  000C                     _PORTA	set	12
   169                           	global	_PORTB
   170  000D                     _PORTB	set	13
   171                           	global	_PORTC
   172  000E                     _PORTC	set	14
   173                           	global	_T1CON
   174  0018                     _T1CON	set	24
   175                           	global	_TMR1H
   176  0017                     _TMR1H	set	23
   177                           	global	_TMR1L
   178  0016                     _TMR1L	set	22
   179                           	global	_GIE
   180  005F                     _GIE	set	95
   181                           	global	_PEIE
   182  005E                     _PEIE	set	94
   183                           	global	_RA1
   184  0061                     _RA1	set	97
   185                           	global	_RA2
   186  0062                     _RA2	set	98
   187                           	global	_RA4
   188  0064                     _RA4	set	100
   189                           	global	_RA5
   190  0065                     _RA5	set	101
   191                           	global	_RA6
   192  0066                     _RA6	set	102
   193                           	global	_RA7
   194  0067                     _RA7	set	103
   195                           	global	_RC0
   196  0070                     _RC0	set	112
   197                           	global	_SSPIF
   198  008B                     _SSPIF	set	139
   199                           	global	_TMR1IF
   200  0088                     _TMR1IF	set	136
   201                           	global	_OSCCON
   202  0099                     _OSCCON	set	153
   203                           	global	_TRISA
   204  008C                     _TRISA	set	140
   205                           	global	_TRISB
   206  008D                     _TRISB	set	141
   207                           	global	_TRISC
   208  008E                     _TRISC	set	142
   209                           	global	_SSPIE
   210  048B                     _SSPIE	set	1163
   211                           	global	_TMR1IE
   212  0488                     _TMR1IE	set	1160
   213                           	global	_LATA
   214  010C                     _LATA	set	268
   215                           	global	_LATB
   216  010D                     _LATB	set	269
   217                           	global	_LATC
   218  010E                     _LATC	set	270
   219                           	global	_ANSELA
   220  018C                     _ANSELA	set	396
   221                           	global	_ANSELB
   222  018D                     _ANSELB	set	397
   223                           	global	_ANSELC
   224  018E                     _ANSELC	set	398
   225                           	global	_SSPADD
   226  0212                     _SSPADD	set	530
   227                           	global	_SSPBUF
   228  0211                     _SSPBUF	set	529
   229                           	global	_SSPCON1
   230  0215                     _SSPCON1	set	533
   231                           	global	_SSPCON2
   232  0216                     _SSPCON2	set	534
   233                           	global	_SSPSTAT
   234  0214                     _SSPSTAT	set	532
   235                           	global	_ACKEN
   236  10B4                     _ACKEN	set	4276
   237                           	global	_ACKSTAT
   238  10B6                     _ACKSTAT	set	4278
   239                           	global	_BF
   240  10A0                     _BF	set	4256
   241                           	global	_CKP
   242  10AC                     _CKP	set	4268
   243                           	global	_PEN
   244  10B2                     _PEN	set	4274
   245                           	global	_RCEN
   246  10B3                     _RCEN	set	4275
   247                           	global	_R_nW
   248  10A2                     _R_nW	set	4258
   249                           	global	_SEN
   250  10B0                     _SEN	set	4272
   251                           	global	_SSPOV
   252  10AE                     _SSPOV	set	4270
   253                           	file	"myDevelopment-AC.as"
   254                           	line	#
   255                           psect cinit,class=CODE,delta=2
   256                           global start_initialization
   257  050B                     start_initialization:
   258                           
   259                           psect	bssCOMMON,class=COMMON,space=1
   260                           global __pbssCOMMON
   261  007C                     __pbssCOMMON:
   262  007C                     _Segment:
   263  007C                            ds      1
   264                           
   265                           psect	bssBANK0,class=BANK0,space=1
   266                           global __pbssBANK0
   267  003A                     __pbssBANK0:
   268  003A                     _I2C:
   269  003A                            ds      1
   270                           
   271  003B                     _Timer1:
   272  003B                            ds      1
   273                           
   274  003C                     _VarTMain:
   275  003C                            ds      15
   276                           
   277  004B                     _VarTimer1:
   278  004B                            ds      3
   279                           
   280                           psect	dataBANK0,class=BANK0,space=1
   281                           global __pdataBANK0
   282  0020                     __pdataBANK0:
   283                           	file	"G:\Program\PIC\Header_File\SegmentDisplay_A2.h"
   284                           	line	69
   285  0020                     _VarSegment:
   286  0020                            ds      26
   287                           
   288                           psect	dataBANK1,class=BANK1,space=1
   289                           global __pdataBANK1
   290  00A0                     __pdataBANK1:
   291                           	file	"G:\Program\PIC\0.myFile\myDevelopment-AH\Release\../Release/myDevelopment-A.h"
   292                           	line	245
   293  00A0                     _VarProduct:
   294  00A0                            ds      32
   295                           
   296                           psect	bssBANK2,class=BANK2,space=1
   297                           global __pbssBANK2
   298  0120                     __pbssBANK2:
   299  0120                     _VarI2C:
   300  0120                            ds      67
   301                           
   302                           psect clrtext,class=CODE,delta=2
   303                           global clear_ram
   304                           ;	Called with FSR0 containing the base address, and
   305                           ;	WREG with the size to clear
   306  05E9                     clear_ram:
   307  05E9  0064               	clrwdt			;clear the watchdog before getting into this loop
   308  05EA                     clrloop:
   309  05EA  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   310  05EB  3101               	addfsr	0,1
   311  05EC  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   312  05ED  2DEA               	goto clrloop	;have we reached the end yet?
   313  05EE  3400               	retlw	0		;all done for this memory range, return
   314                           ; Clear objects allocated to COMMON
   315                           psect cinit,class=CODE,delta=2
   316                           	global __pbssCOMMON
   317  050B  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   318                           ; Clear objects allocated to BANK0
   319                           psect cinit,class=CODE,delta=2
   320                           	global __pbssBANK0
   321  050C  303A               	movlw	low(__pbssBANK0)
   322  050D  0084               	movwf	fsr0l
   323  050E  3000               	movlw	high(__pbssBANK0)
   324  050F  0085               	movwf	fsr0h
   325  0510  3014               	movlw	014h
   326  0511  3185  25E9  3185   	fcall	clear_ram
   327                           ; Clear objects allocated to BANK2
   328                           psect cinit,class=CODE,delta=2
   329                           	global __pbssBANK2
   330  0514  3020               	movlw	low(__pbssBANK2)
   331  0515  0084               	movwf	fsr0l
   332  0516  3001               	movlw	high(__pbssBANK2)
   333  0517  0085               	movwf	fsr0h
   334  0518  3043               	movlw	043h
   335  0519  3185  25E9  3185   	fcall	clear_ram
   336                           psect inittext,class=CODE,delta=2
   337                           global init_ram,btemp
   338  05EF                     init_ram:
   339  05EF  00FE               	movwf btemp,f
   340  05F0                     initloop:
   341  05F0  0012               	moviw fsr0++
   342  05F1  001E               	movwi fsr1++
   343  05F2  0BFE               	decfsz btemp
   344  05F3  2DF0               	goto initloop
   345  05F4  3400               	retlw 0
   346                           ; Initialize objects allocated to BANK0
   347                           	global __pidataBANK0,__pdataBANK0
   348                           psect cinit,class=CODE,delta=2
   349  051C  3057               	movlw low(__pidataBANK0)
   350  051D  0084               	movwf fsr0l
   351  051E  3085               	movlw high(__pidataBANK0)|80h
   352  051F  0085               	movwf fsr0h
   353  0520  3020               	movlw low(__pdataBANK0)
   354  0521  0086               	movwf fsr1l
   355  0522  3000               	movlw high(__pdataBANK0)
   356  0523  0087               	movwf fsr1h
   357  0524  301A               	movlw 01Ah
   358  0525  3185  25EF  3185   	fcall init_ram
   359                           ; Initialize objects allocated to BANK1
   360                           	global __pidataBANK1,__pdataBANK1
   361                           psect cinit,class=CODE,delta=2
   362  0528  3037               	movlw low(__pidataBANK1)
   363  0529  0084               	movwf fsr0l
   364  052A  3085               	movlw high(__pidataBANK1)|80h
   365  052B  0085               	movwf fsr0h
   366  052C  30A0               	movlw low(__pdataBANK1)
   367  052D  0086               	movwf fsr1l
   368  052E  3000               	movlw high(__pdataBANK1)
   369  052F  0087               	movwf fsr1h
   370  0530  3020               	movlw 020h
   371  0531  3185  25EF  3185   	fcall init_ram
   372                           psect cinit,class=CODE,delta=2
   373                           global end_of_initialization
   374                           
   375                           ;End of C runtime variable initialization code
   376                           
   377  0534                     end_of_initialization:
   378  0534  0020               movlb 0
   379  0535  3184  2CDD         ljmp _main	;jump to C main() function
   380                           psect	cstackCOMMON,class=COMMON,space=1
   381                           global __pcstackCOMMON
   382  0070                     __pcstackCOMMON:
   383                           	global	?_IO_Set
   384  0070                     ?_IO_Set:	; 0 bytes @ 0x0
   385                           	global	?_TMR1_Set
   386  0070                     ?_TMR1_Set:	; 0 bytes @ 0x0
   387                           	global	?_I2C_Set
   388  0070                     ?_I2C_Set:	; 0 bytes @ 0x0
   389                           	global	?_TMR1_ISR
   390  0070                     ?_TMR1_ISR:	; 0 bytes @ 0x0
   391                           	global	??_TMR1_ISR
   392  0070                     ??_TMR1_ISR:	; 0 bytes @ 0x0
   393                           	global	?_I2C_ISR
   394  0070                     ?_I2C_ISR:	; 0 bytes @ 0x0
   395                           	global	??_I2C_ISR
   396  0070                     ??_I2C_ISR:	; 0 bytes @ 0x0
   397                           	global	?_I2C_Master_Reception
   398  0070                     ?_I2C_Master_Reception:	; 0 bytes @ 0x0
   399                           	global	?_I2C_Master_Transmission
   400  0070                     ?_I2C_Master_Transmission:	; 0 bytes @ 0x0
   401                           	global	?_MainT_Initial
   402  0070                     ?_MainT_Initial:	; 0 bytes @ 0x0
   403                           	global	?_SegmentDisplay_Initial
   404  0070                     ?_SegmentDisplay_Initial:	; 0 bytes @ 0x0
   405                           	global	?_MainT
   406  0070                     ?_MainT:	; 0 bytes @ 0x0
   407                           	global	?_SegmentDisplay_Main
   408  0070                     ?_SegmentDisplay_Main:	; 0 bytes @ 0x0
   409                           	global	?_Mcu_Initial
   410  0070                     ?_Mcu_Initial:	; 0 bytes @ 0x0
   411                           	global	?_ISR
   412  0070                     ?_ISR:	; 0 bytes @ 0x0
   413                           	global	??_ISR
   414  0070                     ??_ISR:	; 0 bytes @ 0x0
   415                           	global	?_I2C_Main
   416  0070                     ?_I2C_Main:	; 0 bytes @ 0x0
   417                           	global	?_main
   418  0070                     ?_main:	; 0 bytes @ 0x0
   419  0070                     	ds	1
   420                           	global	??_IO_Set
   421  0071                     ??_IO_Set:	; 0 bytes @ 0x1
   422                           	global	??_TMR1_Set
   423  0071                     ??_TMR1_Set:	; 0 bytes @ 0x1
   424                           	global	??_I2C_Set
   425  0071                     ??_I2C_Set:	; 0 bytes @ 0x1
   426                           	global	??_I2C_Master_Reception
   427  0071                     ??_I2C_Master_Reception:	; 0 bytes @ 0x1
   428                           	global	??_I2C_Master_Transmission
   429  0071                     ??_I2C_Master_Transmission:	; 0 bytes @ 0x1
   430                           	global	??_MainT_Initial
   431  0071                     ??_MainT_Initial:	; 0 bytes @ 0x1
   432                           	global	??_SegmentDisplay_Initial
   433  0071                     ??_SegmentDisplay_Initial:	; 0 bytes @ 0x1
   434                           	global	??_SegmentDisplay_Main
   435  0071                     ??_SegmentDisplay_Main:	; 0 bytes @ 0x1
   436                           	global	?___awdiv
   437  0071                     ?___awdiv:	; 2 bytes @ 0x1
   438                           	global	?___awmod
   439  0071                     ?___awmod:	; 2 bytes @ 0x1
   440                           	global	___awdiv@divisor
   441  0071                     ___awdiv@divisor:	; 2 bytes @ 0x1
   442                           	global	___awmod@divisor
   443  0071                     ___awmod@divisor:	; 2 bytes @ 0x1
   444  0071                     	ds	1
   445                           	global	??_Mcu_Initial
   446  0072                     ??_Mcu_Initial:	; 0 bytes @ 0x2
   447                           	global	I2C_Master_Transmission@i
   448  0072                     I2C_Master_Transmission@i:	; 1 bytes @ 0x2
   449  0072                     	ds	1
   450                           	global	I2C_Master_Reception@i
   451  0073                     I2C_Master_Reception@i:	; 1 bytes @ 0x3
   452                           	global	___awdiv@dividend
   453  0073                     ___awdiv@dividend:	; 2 bytes @ 0x3
   454                           	global	___awmod@dividend
   455  0073                     ___awmod@dividend:	; 2 bytes @ 0x3
   456  0073                     	ds	1
   457                           	global	??_I2C_Main
   458  0074                     ??_I2C_Main:	; 0 bytes @ 0x4
   459  0074                     	ds	1
   460                           	global	??___awdiv
   461  0075                     ??___awdiv:	; 0 bytes @ 0x5
   462                           	global	??___awmod
   463  0075                     ??___awmod:	; 0 bytes @ 0x5
   464  0075                     	ds	1
   465                           	global	___awdiv@counter
   466  0076                     ___awdiv@counter:	; 1 bytes @ 0x6
   467                           	global	___awmod@counter
   468  0076                     ___awmod@counter:	; 1 bytes @ 0x6
   469  0076                     	ds	1
   470                           	global	___awdiv@sign
   471  0077                     ___awdiv@sign:	; 1 bytes @ 0x7
   472                           	global	___awmod@sign
   473  0077                     ___awmod@sign:	; 1 bytes @ 0x7
   474  0077                     	ds	1
   475                           	global	___awdiv@quotient
   476  0078                     ___awdiv@quotient:	; 2 bytes @ 0x8
   477  0078                     	ds	2
   478                           	global	?_setSegmentDisplayNumber
   479  007A                     ?_setSegmentDisplayNumber:	; 0 bytes @ 0xA
   480                           	global	setSegmentDisplayNumber@number
   481  007A                     setSegmentDisplayNumber@number:	; 2 bytes @ 0xA
   482  007A                     	ds	2
   483                           	global	??_main
   484  007C                     ??_main:	; 0 bytes @ 0xC
   485                           psect	cstackBANK0,class=BANK0,space=1
   486                           global __pcstackBANK0
   487  004E                     __pcstackBANK0:
   488                           	global	??_setSegmentDisplayNumber
   489  004E                     ??_setSegmentDisplayNumber:	; 0 bytes @ 0x0
   490  004E                     	ds	3
   491                           	global	setSegmentDisplayNumber@i
   492  0051                     setSegmentDisplayNumber@i:	; 1 bytes @ 0x3
   493  0051                     	ds	1
   494                           	global	??_MainT
   495  0052                     ??_MainT:	; 0 bytes @ 0x4
   496  0052                     	ds	3
   497 ;;Data sizes: Strings 0, constant 0, data 58, bss 88, persistent 2 stack 0
   498 ;;Auto spaces:   Size  Autos    Used
   499 ;; COMMON          14     12      13
   500 ;; BANK0           80      7      55
   501 ;; BANK1           80      0      32
   502 ;; BANK2           80      0      67
   503 ;; BANK3           80      0       0
   504 ;; BANK4           80      0       0
   505 ;; BANK5           80      0       0
   506 ;; BANK6           16      0       0
   507                           
   508 ;;
   509 ;; Pointer list with targets:
   510                           
   511 ;; ?___awmod	int  size(1) Largest target is 0
   512 ;;
   513 ;; ?___awdiv	int  size(1) Largest target is 0
   514 ;;
   515 ;; Segment	PTR struct Segment size(1) Largest target is 26
   516 ;;		 -> NULL(NULL[0]), VarSegment(BANK0[26]), 
   517 ;;
   518 ;; Product	PTR struct Product size(1) Largest target is 32
   519 ;;		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 
   520 ;;
   521 ;; I2C	PTR struct I2C size(1) Largest target is 67
   522 ;;		 -> NULL(NULL[0]), VarI2C(BANK2[67]), 
   523 ;;
   524 ;; TMain	PTR struct TMain size(1) Largest target is 15
   525 ;;		 -> NULL(NULL[0]), VarTMain(BANK0[15]), 
   526 ;;
   527 ;; Timer1	PTR struct Timer1 size(1) Largest target is 3
   528 ;;		 -> NULL(NULL[0]), VarTimer1(BANK0[3]), 
   529 ;;
   530                           
   531                           
   532 ;;
   533 ;; Critical Paths under _main in COMMON
   534 ;;
   535 ;;   _MainT->_setSegmentDisplayNumber
   536 ;;   _setSegmentDisplayNumber->___awdiv
   537 ;;   _I2C_Main->_I2C_Master_Reception
   538 ;;   _Mcu_Initial->_TMR1_Set
   539 ;;   _Mcu_Initial->_I2C_Set
   540 ;;
   541 ;; Critical Paths under _ISR in COMMON
   542 ;;
   543 ;;   None.
   544 ;;
   545 ;; Critical Paths under _main in BANK0
   546 ;;
   547 ;;   _main->_MainT
   548 ;;   _MainT->_setSegmentDisplayNumber
   549 ;;
   550 ;; Critical Paths under _ISR in BANK0
   551 ;;
   552 ;;   None.
   553 ;;
   554 ;; Critical Paths under _main in BANK1
   555 ;;
   556 ;;   None.
   557 ;;
   558 ;; Critical Paths under _ISR in BANK1
   559 ;;
   560 ;;   None.
   561 ;;
   562 ;; Critical Paths under _main in BANK2
   563 ;;
   564 ;;   None.
   565 ;;
   566 ;; Critical Paths under _ISR in BANK2
   567 ;;
   568 ;;   None.
   569 ;;
   570 ;; Critical Paths under _main in BANK3
   571 ;;
   572 ;;   None.
   573 ;;
   574 ;; Critical Paths under _ISR in BANK3
   575 ;;
   576 ;;   None.
   577 ;;
   578 ;; Critical Paths under _main in BANK4
   579 ;;
   580 ;;   None.
   581 ;;
   582 ;; Critical Paths under _ISR in BANK4
   583 ;;
   584 ;;   None.
   585 ;;
   586 ;; Critical Paths under _main in BANK5
   587 ;;
   588 ;;   None.
   589 ;;
   590 ;; Critical Paths under _ISR in BANK5
   591 ;;
   592 ;;   None.
   593 ;;
   594 ;; Critical Paths under _main in BANK6
   595 ;;
   596 ;;   None.
   597 ;;
   598 ;; Critical Paths under _ISR in BANK6
   599 ;;
   600 ;;   None.
   601                           
   602 ;;
   603 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   604 ;;
   605                           
   606 ;;
   607 ;;Call Graph Tables:
   608 ;;
   609 ;; ---------------------------------------------------------------------------------
   610 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (0) _main                                                 0     0      0    1494
   613 ;;                      _MainT_Initial
   614 ;;                        _Mcu_Initial
   615 ;;             _SegmentDisplay_Initial
   616 ;;                              _MainT
   617 ;;                           _I2C_Main
   618 ;;                _SegmentDisplay_Main
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _MainT                                                4     4      0    1358
   621 ;;                                              4 BANK0      3     3      0
   622 ;;            _setSegmentDisplayNumber
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (2) _setSegmentDisplayNumber                              6     4      2    1358
   625 ;;                                             10 COMMON     2     0      2
   626 ;;                                              0 BANK0      4     4      0
   627 ;;                            ___awdiv
   628 ;;                            ___awmod
   629 ;; ---------------------------------------------------------------------------------
   630 ;; (1) _I2C_Main                                             1     1      0     136
   631 ;;               _I2C_Master_Reception
   632 ;;            _I2C_Master_Transmission
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (1) _Mcu_Initial                                          0     0      0       0
   635 ;;                             _IO_Set
   636 ;;                           _TMR1_Set
   637 ;;                            _I2C_Set
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (3) ___awmod                                              7     3      4     433
   640 ;;                                              1 COMMON     7     3      4
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (3) ___awdiv                                              9     5      4     445
   643 ;;                                              1 COMMON     9     5      4
   644 ;; ---------------------------------------------------------------------------------
   645 ;; (1) _SegmentDisplay_Main                                  2     2      0       0
   646 ;;                                              1 COMMON     2     2      0
   647 ;; ---------------------------------------------------------------------------------
   648 ;; (1) _SegmentDisplay_Initial                               1     1      0       0
   649 ;;                                              1 COMMON     1     1      0
   650 ;; ---------------------------------------------------------------------------------
   651 ;; (1) _MainT_Initial                                        1     1      0       0
   652 ;;                                              1 COMMON     1     1      0
   653 ;; ---------------------------------------------------------------------------------
   654 ;; (2) _I2C_Master_Transmission                              2     2      0      68
   655 ;;                                              1 COMMON     2     2      0
   656 ;; ---------------------------------------------------------------------------------
   657 ;; (2) _I2C_Master_Reception                                 3     3      0      68
   658 ;;                                              1 COMMON     3     3      0
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (2) _I2C_Set                                              1     1      0       0
   661 ;;                                              1 COMMON     1     1      0
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (2) _TMR1_Set                                             1     1      0       0
   664 ;;                                              1 COMMON     1     1      0
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (2) _IO_Set                                               0     0      0       0
   667 ;; ---------------------------------------------------------------------------------
   668 ;; Estimated maximum stack depth 3
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (4) _ISR                                                  1     1      0       0
   673 ;;                                              0 COMMON     1     1      0
   674 ;;                           _TMR1_ISR
   675 ;;                            _I2C_ISR
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (5) _I2C_ISR                                              0     0      0       0
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (5) _TMR1_ISR                                             0     0      0       0
   680 ;; ---------------------------------------------------------------------------------
   681 ;; Estimated maximum stack depth 5
   682 ;; ---------------------------------------------------------------------------------
   683                           
   684 ;; Call Graph Graphs:
   685                           
   686 ;; _main (ROOT)
   687 ;;   _MainT_Initial
   688 ;;   _Mcu_Initial
   689 ;;     _IO_Set
   690 ;;     _TMR1_Set
   691 ;;     _I2C_Set
   692 ;;   _SegmentDisplay_Initial
   693 ;;   _MainT
   694 ;;     _setSegmentDisplayNumber
   695 ;;       ___awdiv
   696 ;;       ___awmod
   697 ;;   _I2C_Main
   698 ;;     _I2C_Master_Reception
   699 ;;     _I2C_Master_Transmission
   700 ;;   _SegmentDisplay_Main
   701 ;;
   702 ;; _ISR (ROOT)
   703 ;;   _TMR1_ISR
   704 ;;   _I2C_ISR
   705 ;;
   706                           
   707 ;; Address spaces:
   708                           
   709 ;;Name               Size   Autos  Total    Cost      Usage
   710 ;;BIGRAM             1F0      0       0       0        0.0%
   711 ;;NULL                 0      0       0       0        0.0%
   712 ;;CODE                 0      0       0       0        0.0%
   713 ;;BITCOMMON            E      0       0       1        0.0%
   714 ;;BITSFR0              0      0       0       1        0.0%
   715 ;;SFR0                 0      0       0       1        0.0%
   716 ;;COMMON               E      C       D       2       92.9%
   717 ;;BITSFR1              0      0       0       2        0.0%
   718 ;;SFR1                 0      0       0       2        0.0%
   719 ;;BITSFR2              0      0       0       3        0.0%
   720 ;;SFR2                 0      0       0       3        0.0%
   721 ;;STACK                0      0       7       3        0.0%
   722 ;;BITSFR3              0      0       0       4        0.0%
   723 ;;SFR3                 0      0       0       4        0.0%
   724 ;;ABS                  0      0      A7       4        0.0%
   725 ;;BITBANK0            50      0       0       5        0.0%
   726 ;;BITSFR4              0      0       0       5        0.0%
   727 ;;SFR4                 0      0       0       5        0.0%
   728 ;;BANK0               50      7      37       6       68.8%
   729 ;;BITSFR5              0      0       0       6        0.0%
   730 ;;SFR5                 0      0       0       6        0.0%
   731 ;;BITBANK1            50      0       0       7        0.0%
   732 ;;BITSFR6              0      0       0       7        0.0%
   733 ;;SFR6                 0      0       0       7        0.0%
   734 ;;BANK1               50      0      20       8       40.0%
   735 ;;BITSFR7              0      0       0       8        0.0%
   736 ;;SFR7                 0      0       0       8        0.0%
   737 ;;BITBANK2            50      0       0       9        0.0%
   738 ;;BITSFR8              0      0       0       9        0.0%
   739 ;;SFR8                 0      0       0       9        0.0%
   740 ;;BANK2               50      0      43      10       83.8%
   741 ;;BITSFR9              0      0       0      10        0.0%
   742 ;;SFR9                 0      0       0      10        0.0%
   743 ;;BITBANK3            50      0       0      11        0.0%
   744 ;;BITSFR10             0      0       0      11        0.0%
   745 ;;SFR10                0      0       0      11        0.0%
   746 ;;BANK3               50      0       0      12        0.0%
   747 ;;BITSFR11             0      0       0      12        0.0%
   748 ;;SFR11                0      0       0      12        0.0%
   749 ;;BITBANK4            50      0       0      13        0.0%
   750 ;;BITSFR12             0      0       0      13        0.0%
   751 ;;SFR12                0      0       0      13        0.0%
   752 ;;BANK4               50      0       0      14        0.0%
   753 ;;BITSFR13             0      0       0      14        0.0%
   754 ;;SFR13                0      0       0      14        0.0%
   755 ;;BITBANK5            50      0       0      15        0.0%
   756 ;;BITSFR14             0      0       0      15        0.0%
   757 ;;SFR14                0      0       0      15        0.0%
   758 ;;BANK5               50      0       0      16        0.0%
   759 ;;BITSFR15             0      0       0      16        0.0%
   760 ;;SFR15                0      0       0      16        0.0%
   761 ;;BITBANK6            10      0       0      17        0.0%
   762 ;;BITSFR16             0      0       0      17        0.0%
   763 ;;SFR16                0      0       0      17        0.0%
   764 ;;BANK6               10      0       0      18        0.0%
   765 ;;BITSFR17             0      0       0      18        0.0%
   766 ;;SFR17                0      0       0      18        0.0%
   767 ;;BITSFR18             0      0       0      19        0.0%
   768 ;;SFR18                0      0       0      19        0.0%
   769 ;;DATA                 0      0      AE      19        0.0%
   770 ;;BITSFR19             0      0       0      20        0.0%
   771 ;;SFR19                0      0       0      20        0.0%
   772 ;;BITSFR20             0      0       0      21        0.0%
   773 ;;SFR20                0      0       0      21        0.0%
   774 ;;BITSFR21             0      0       0      22        0.0%
   775 ;;SFR21                0      0       0      22        0.0%
   776 ;;BITSFR22             0      0       0      23        0.0%
   777 ;;SFR22                0      0       0      23        0.0%
   778 ;;BITSFR23             0      0       0      24        0.0%
   779 ;;SFR23                0      0       0      24        0.0%
   780 ;;BITSFR24             0      0       0      25        0.0%
   781 ;;SFR24                0      0       0      25        0.0%
   782 ;;BITSFR25             0      0       0      26        0.0%
   783 ;;SFR25                0      0       0      26        0.0%
   784 ;;BITSFR26             0      0       0      27        0.0%
   785 ;;SFR26                0      0       0      27        0.0%
   786 ;;BITSFR27             0      0       0      28        0.0%
   787 ;;SFR27                0      0       0      28        0.0%
   788 ;;BITSFR28             0      0       0      29        0.0%
   789 ;;SFR28                0      0       0      29        0.0%
   790 ;;BITSFR29             0      0       0      30        0.0%
   791 ;;SFR29                0      0       0      30        0.0%
   792 ;;BITSFR30             0      0       0      31        0.0%
   793 ;;SFR30                0      0       0      31        0.0%
   794 ;;BITSFR31             0      0       0      32        0.0%
   795 ;;SFR31                0      0       0      32        0.0%
   796                           
   797                           	global	_main
   798                           psect	maintext,global,class=CODE,delta=2
   799                           global __pmaintext
   800  04DD                     __pmaintext:
   801                           
   802 ;; *************** function _main *****************
   803 ;; Defined at:
   804 ;;		line 7 in file "G:\Program\PIC\Source_File\myMain.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;		None               void
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 17F/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   818 ;;      Params:         0       0       0       0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0
   821 ;;      Totals:         0       0       0       0       0       0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels required when called:    5
   824 ;; This function calls:
   825 ;;		_MainT_Initial
   826 ;;		_Mcu_Initial
   827 ;;		_SegmentDisplay_Initial
   828 ;;		_MainT
   829 ;;		_I2C_Main
   830 ;;		_SegmentDisplay_Main
   831 ;; This function is called by:
   832 ;;		Startup code after reset
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           psect	maintext
   836                           	file	"G:\Program\PIC\Source_File\myMain.c"
   837                           	line	7
   838                           	global	__size_of_main
   839  002E                     	__size_of_main	equ	__end_of_main-_main
   840                           	
   841  04DD                     _main:	
   842                           	opt	stack 11
   843                           ; Regs used in _main: [allreg]
   844                           	line	8
   845                           	
   846  04DD                     l5370:	
   847                           ;myMain.c: 8: MainT_Initial();
   848  04DD  3185  25CC  3184   	fcall	_MainT_Initial
   849                           	line	9
   850                           	
   851  04E0                     l5372:	
   852                           ;myMain.c: 9: Mcu_Initial();
   853  04E0  3185  259C  3184   	fcall	_Mcu_Initial
   854                           	line	10
   855                           	
   856  04E3                     l5374:	
   857                           ;myMain.c: 10: SegmentDisplay_Initial();
   858  04E3  3185  25BD  3184   	fcall	_SegmentDisplay_Initial
   859                           	line	12
   860                           	
   861  04E6                     l5376:	
   862                           ;myMain.c: 11: ;;
   863                           ;myMain.c: 12: _nop();
   864  04E6  0000               	nop
   865  04E7  2CE8               	goto	l5378
   866                           	line	13
   867                           ;myMain.c: 13: while(1)
   868                           	
   869  04E8                     l2184:	
   870                           	line	17
   871                           	
   872  04E8                     l5378:	
   873                           ;myMain.c: 14: {
   874                           ;myMain.c: 17: if(TMain->T1_Timerout)
   875  04E8  0020               	movlb 0	; select bank0
   876  04E9  0856               	movf	(_TMain),w
   877  04EA  0086               	movwf	fsr1l
   878  04EB  0187               	clrf fsr1h	
   879                           	
   880  04EC  1D01               	btfss	indf1,2
   881  04ED  2CEF               	goto	u4061
   882  04EE  2CF0               	goto	u4060
   883  04EF                     u4061:
   884  04EF  2CE8               	goto	l5378
   885  04F0                     u4060:
   886                           	line	19
   887                           	
   888  04F0                     l5380:	
   889                           ;myMain.c: 18: {
   890                           ;myMain.c: 19: TMain->T1_Timerout = 0;
   891  04F0  0856               	movf	(_TMain),w
   892  04F1  0086               	movwf	fsr1l
   893  04F2  0187               	clrf fsr1h	
   894                           	
   895  04F3  1101               	bcf	indf1,2
   896                           	line	20
   897                           	
   898  04F4                     l5382:	
   899                           ;myMain.c: 20: MainT();
   900  04F4  3181  216A  3184   	fcall	_MainT
   901                           	line	21
   902                           	
   903  04F7                     l5384:	
   904                           ;myMain.c: 21: if(TMain->PowerON)
   905  04F7  0020               	movlb 0	; select bank0
   906  04F8  0856               	movf	(_TMain),w
   907  04F9  0086               	movwf	fsr1l
   908  04FA  0187               	clrf fsr1h	
   909                           	
   910  04FB  1C01               	btfss	indf1,0
   911  04FC  2CFE               	goto	u4071
   912  04FD  2CFF               	goto	u4070
   913  04FE                     u4071:
   914  04FE  2CE8               	goto	l5378
   915  04FF                     u4070:
   916                           	line	24
   917                           	
   918  04FF                     l5386:	
   919                           ;myMain.c: 22: {
   920                           ;myMain.c: 23: ;;
   921                           ;myMain.c: 24: I2C_Main();
   922  04FF  3184  2449  3184   	fcall	_I2C_Main
   923                           	line	26
   924                           	
   925  0502                     l5388:	
   926                           ;myMain.c: 25: ;;
   927                           ;myMain.c: 26: SegmentDisplay_Main();
   928  0502  3182  221A  3184   	fcall	_SegmentDisplay_Main
   929  0505  2CE8               	goto	l5378
   930                           	line	27
   931                           	
   932  0506                     l2186:	
   933  0506  2CE8               	goto	l5378
   934                           	line	28
   935                           	
   936  0507                     l2185:	
   937  0507  2CE8               	goto	l5378
   938                           	line	29
   939                           	
   940  0508                     l2187:	
   941                           	line	13
   942  0508  2CE8               	goto	l5378
   943                           	
   944  0509                     l2188:	
   945                           	line	30
   946                           	
   947  0509                     l2189:	
   948                           	global	start
   949  0509  3180  2815         	ljmp	start
   950                           	opt stack 0
   951                           GLOBAL	__end_of_main
   952  050B                     	__end_of_main:
   953 ;; =============== function _main ends ============
   954                           
   955                           	signat	_main,88
   956                           	global	_MainT
   957                           psect	text591,local,class=CODE,delta=2
   958                           global __ptext591
   959  016A                     __ptext591:
   960                           
   961 ;; *************** function _MainT *****************
   962 ;; Defined at:
   963 ;;		line 42 in file "G:\Program\PIC\Source_File\myMain.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  i               1    0        unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   977 ;;      Params:         0       0       0       0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0       0       0       0
   979 ;;      Temps:          0       3       0       0       0       0       0       0
   980 ;;      Totals:         0       3       0       0       0       0       0       0
   981 ;;Total ram usage:        3 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    4
   984 ;; This function calls:
   985 ;;		_setSegmentDisplayNumber
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           psect	text591
   991                           	file	"G:\Program\PIC\Source_File\myMain.c"
   992                           	line	42
   993                           	global	__size_of_MainT
   994  00B0                     	__size_of_MainT	equ	__end_of_MainT-_MainT
   995                           	
   996  016A                     _MainT:	
   997                           	opt	stack 11
   998                           ; Regs used in _MainT: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
   999                           	line	45
  1000                           	
  1001  016A                     l5336:	
  1002                           ;myMain.c: 43: char i;
  1003                           ;myMain.c: 45: if(!TMain->PowerON)
  1004  016A  0020               	movlb 0	; select bank0
  1005  016B  0856               	movf	(_TMain),w
  1006  016C  0086               	movwf	fsr1l
  1007  016D  0187               	clrf fsr1h	
  1008                           	
  1009  016E  1801               	btfsc	indf1,0
  1010  016F  2971               	goto	u4001
  1011  0170  2972               	goto	u4000
  1012  0171                     u4001:
  1013  0171  2997               	goto	l5344
  1014  0172                     u4000:
  1015                           	line	47
  1016                           	
  1017  0172                     l5338:	
  1018                           ;myMain.c: 46: {
  1019                           ;myMain.c: 47: TMain->PowerCount++;
  1020  0172  0856               	movf	(_TMain),w
  1021  0173  3E01               	addlw	01h
  1022  0174  0086               	movwf	fsr1l
  1023  0175  0187               	clrf fsr1h	
  1024                           	
  1025  0176  3001               	movlw	01h
  1026  0177  0781               	addwf	indf1,f
  1027  0178  3141               	addfsr	fsr1,1
  1028  0179  1803               	skipnc
  1029  017A  0A81               	incf	indf1,f
  1030                           	line	48
  1031                           	
  1032  017B                     l5340:	
  1033                           ;myMain.c: 48: if(TMain->PowerCount == 1500)
  1034  017B  0856               	movf	(_TMain),w
  1035  017C  3E01               	addlw	01h
  1036  017D  0086               	movwf	fsr1l
  1037  017E  0187               	clrf fsr1h	
  1038                           	
  1039  017F  3F40               	moviw	[0]fsr1
  1040  0180  3ADC               	xorlw	low(05DCh)
  1041  0181  1D03               	skipz
  1042  0182  2985               	goto	u4015
  1043  0183  3F41               	moviw	[1]fsr1
  1044  0184  3A05               	xorlw	high(05DCh)
  1045  0185                     u4015:
  1046  0185  1D03               	skipz
  1047  0186  2988               	goto	u4011
  1048  0187  2989               	goto	u4010
  1049  0188                     u4011:
  1050  0188  2A19               	goto	l2203
  1051  0189                     u4010:
  1052                           	line	50
  1053                           	
  1054  0189                     l5342:	
  1055                           ;myMain.c: 49: {
  1056                           ;myMain.c: 50: TMain->PowerCount=0;
  1057  0189  0856               	movf	(_TMain),w
  1058  018A  3E01               	addlw	01h
  1059  018B  0086               	movwf	fsr1l
  1060  018C  0187               	clrf fsr1h	
  1061                           	
  1062  018D  3000               	movlw	low(0)
  1063  018E  3FC0               	movwi	[0]fsr1
  1064  018F  3000               	movlw	high(0)
  1065  0190  3FC1               	movwi	[1]fsr1
  1066                           	line	51
  1067                           ;myMain.c: 51: TMain->PowerON=1;
  1068  0191  0856               	movf	(_TMain),w
  1069  0192  0086               	movwf	fsr1l
  1070  0193  0187               	clrf fsr1h	
  1071                           	
  1072  0194  1401               	bsf	indf1,0
  1073  0195  2A19               	goto	l2203
  1074                           	line	56
  1075                           	
  1076  0196                     l2196:	
  1077                           	line	57
  1078                           ;myMain.c: 56: }
  1079                           ;myMain.c: 57: }
  1080  0196  2A19               	goto	l2203
  1081                           	line	58
  1082                           	
  1083  0197                     l2195:	
  1084                           	line	60
  1085                           	
  1086  0197                     l5344:	
  1087                           ;myMain.c: 58: else
  1088                           ;myMain.c: 59: {
  1089                           ;myMain.c: 60: TMain->Count1++;
  1090  0197  0856               	movf	(_TMain),w
  1091  0198  3E05               	addlw	05h
  1092  0199  0086               	movwf	fsr1l
  1093  019A  0187               	clrf fsr1h	
  1094                           	
  1095  019B  3001               	movlw	01h
  1096  019C  0781               	addwf	indf1,f
  1097  019D  3141               	addfsr	fsr1,1
  1098  019E  1803               	skipnc
  1099  019F  0A81               	incf	indf1,f
  1100                           	line	61
  1101                           	
  1102  01A0                     l5346:	
  1103                           ;myMain.c: 61: if(TMain->Count1 == 1000)
  1104  01A0  0856               	movf	(_TMain),w
  1105  01A1  3E05               	addlw	05h
  1106  01A2  0086               	movwf	fsr1l
  1107  01A3  0187               	clrf fsr1h	
  1108                           	
  1109  01A4  3F40               	moviw	[0]fsr1
  1110  01A5  3AE8               	xorlw	low(03E8h)
  1111  01A6  1D03               	skipz
  1112  01A7  29AA               	goto	u4025
  1113  01A8  3F41               	moviw	[1]fsr1
  1114  01A9  3A03               	xorlw	high(03E8h)
  1115  01AA                     u4025:
  1116  01AA  1D03               	skipz
  1117  01AB  29AD               	goto	u4021
  1118  01AC  29AE               	goto	u4020
  1119  01AD                     u4021:
  1120  01AD  29F8               	goto	l5364
  1121  01AE                     u4020:
  1122                           	line	63
  1123                           	
  1124  01AE                     l5348:	
  1125                           ;myMain.c: 62: {
  1126                           ;myMain.c: 63: TMain->Count1=0;
  1127  01AE  0856               	movf	(_TMain),w
  1128  01AF  3E05               	addlw	05h
  1129  01B0  0086               	movwf	fsr1l
  1130  01B1  0187               	clrf fsr1h	
  1131                           	
  1132  01B2  3000               	movlw	low(0)
  1133  01B3  3FC0               	movwi	[0]fsr1
  1134  01B4  3000               	movlw	high(0)
  1135  01B5  3FC1               	movwi	[1]fsr1
  1136                           	line	64
  1137                           	
  1138  01B6                     l5350:	
  1139                           ;myMain.c: 64: RA2=~RA2;
  1140  01B6  3004               	movlw	1<<((98)&7)
  1141  01B7  068C               	xorwf	((98)/8),f
  1142  01B8  29BA               	goto	l5354
  1143                           	line	73
  1144                           	
  1145  01B9                     l5352:	
  1146  01B9  29BA               	goto	l5354
  1147                           	line	77
  1148                           ;myMain.c: 74: {
  1149                           	
  1150  01BA                     l2199:	
  1151                           	line	79
  1152                           	
  1153  01BA                     l5354:	
  1154                           ;myMain.c: 77: }
  1155                           ;myMain.c: 79: if(TMain->Test)
  1156  01BA  0856               	movf	(_TMain),w
  1157  01BB  3E0C               	addlw	0Ch
  1158  01BC  0086               	movwf	fsr1l
  1159  01BD  0187               	clrf fsr1h	
  1160                           	
  1161  01BE  0801               	movf	indf1,w
  1162  01BF  3A00               	xorlw	0&0ffh
  1163  01C0  1903               	skipnz
  1164  01C1  29C3               	goto	u4031
  1165  01C2  29C4               	goto	u4030
  1166  01C3                     u4031:
  1167  01C3  29F8               	goto	l5364
  1168  01C4                     u4030:
  1169                           	line	81
  1170                           	
  1171  01C4                     l5356:	
  1172                           ;myMain.c: 80: {
  1173                           ;myMain.c: 81: setSegmentDisplayNumber(I2C->BufferReader[I2C->Count]);
  1174  01C4  083A               	movf	(_I2C),w
  1175  01C5  3E40               	addlw	040h
  1176  01C6  0086               	movwf	fsr1l
  1177  01C7  3001               	movlw 1	; select bank2/3
  1178  01C8  0087               	movwf fsr1h	
  1179                           	
  1180  01C9  0801               	movf	indf1,w
  1181  01CA  073A               	addwf	(_I2C),w
  1182  01CB  00D2               	movwf	(??_MainT+0)+0
  1183  01CC  0852               	movf	0+(??_MainT+0)+0,w
  1184  01CD  0086               	movwf	fsr1l
  1185  01CE  3001               	movlw 1	; select bank2/3
  1186  01CF  0087               	movwf fsr1h	
  1187                           	
  1188  01D0  0801               	movf	indf1,w
  1189  01D1  00D3               	movwf	(??_MainT+1)+0
  1190  01D2  01D4               	clrf	(??_MainT+1)+0+1
  1191  01D3  0853               	movf	0+(??_MainT+1)+0,w
  1192  01D4  00FA               	movwf	(?_setSegmentDisplayNumber)
  1193  01D5  0854               	movf	1+(??_MainT+1)+0,w
  1194  01D6  00FB               	movwf	(?_setSegmentDisplayNumber+1)
  1195  01D7  3180  2018  3181   	fcall	_setSegmentDisplayNumber
  1196                           	line	82
  1197                           	
  1198  01DA                     l5358:	
  1199                           ;myMain.c: 82: I2C->Count++;
  1200  01DA  3001               	movlw	(01h)
  1201  01DB  0020               	movlb 0	; select bank0
  1202  01DC  00D2               	movwf	(??_MainT+0)+0
  1203  01DD  083A               	movf	(_I2C),w
  1204  01DE  3E40               	addlw	040h
  1205  01DF  0086               	movwf	fsr1l
  1206  01E0  3001               	movlw 1	; select bank2/3
  1207  01E1  0087               	movwf fsr1h	
  1208                           	
  1209  01E2  0852               	movf	(??_MainT+0)+0,w
  1210  01E3  0781               	addwf	indf1,f
  1211                           	line	83
  1212                           	
  1213  01E4                     l5360:	
  1214                           ;myMain.c: 83: if(I2C->Count==32)
  1215  01E4  083A               	movf	(_I2C),w
  1216  01E5  3E40               	addlw	040h
  1217  01E6  0086               	movwf	fsr1l
  1218  01E7  3001               	movlw 1	; select bank2/3
  1219  01E8  0087               	movwf fsr1h	
  1220                           	
  1221  01E9  0801               	movf	indf1,w
  1222  01EA  3A20               	xorlw	020h&0ffh
  1223  01EB  1D03               	skipz
  1224  01EC  29EE               	goto	u4041
  1225  01ED  29EF               	goto	u4040
  1226  01EE                     u4041:
  1227  01EE  29F8               	goto	l5364
  1228  01EF                     u4040:
  1229                           	line	85
  1230                           	
  1231  01EF                     l5362:	
  1232                           ;myMain.c: 84: {
  1233                           ;myMain.c: 85: I2C->Count=0;
  1234  01EF  083A               	movf	(_I2C),w
  1235  01F0  3E40               	addlw	040h
  1236  01F1  0086               	movwf	fsr1l
  1237  01F2  3001               	movlw 1	; select bank2/3
  1238  01F3  0087               	movwf fsr1h	
  1239                           	
  1240  01F4  0181               	clrf	indf1
  1241  01F5  29F8               	goto	l5364
  1242                           	line	86
  1243                           	
  1244  01F6                     l2201:	
  1245  01F6  29F8               	goto	l5364
  1246                           	line	87
  1247                           	
  1248  01F7                     l2200:	
  1249  01F7  29F8               	goto	l5364
  1250                           	line	100
  1251                           	
  1252  01F8                     l2198:	
  1253                           	line	103
  1254                           	
  1255  01F8                     l5364:	
  1256                           ;myMain.c: 86: }
  1257                           ;myMain.c: 87: }
  1258                           ;myMain.c: 100: }
  1259                           ;myMain.c: 103: TMain->Count2++;
  1260  01F8  0856               	movf	(_TMain),w
  1261  01F9  3E07               	addlw	07h
  1262  01FA  0086               	movwf	fsr1l
  1263  01FB  0187               	clrf fsr1h	
  1264                           	
  1265  01FC  3001               	movlw	01h
  1266  01FD  0781               	addwf	indf1,f
  1267  01FE  3141               	addfsr	fsr1,1
  1268  01FF  1803               	skipnc
  1269  0200  0A81               	incf	indf1,f
  1270                           	line	104
  1271                           	
  1272  0201                     l5366:	
  1273                           ;myMain.c: 104: if(TMain->Count2 == 2000)
  1274  0201  0856               	movf	(_TMain),w
  1275  0202  3E07               	addlw	07h
  1276  0203  0086               	movwf	fsr1l
  1277  0204  0187               	clrf fsr1h	
  1278                           	
  1279  0205  3F40               	moviw	[0]fsr1
  1280  0206  3AD0               	xorlw	low(07D0h)
  1281  0207  1D03               	skipz
  1282  0208  2A0B               	goto	u4055
  1283  0209  3F41               	moviw	[1]fsr1
  1284  020A  3A07               	xorlw	high(07D0h)
  1285  020B                     u4055:
  1286  020B  1D03               	skipz
  1287  020C  2A0E               	goto	u4051
  1288  020D  2A0F               	goto	u4050
  1289  020E                     u4051:
  1290  020E  2A19               	goto	l2203
  1291  020F                     u4050:
  1292                           	line	106
  1293                           	
  1294  020F                     l5368:	
  1295                           ;myMain.c: 105: {
  1296                           ;myMain.c: 106: TMain->Count2=0;
  1297  020F  0856               	movf	(_TMain),w
  1298  0210  3E07               	addlw	07h
  1299  0211  0086               	movwf	fsr1l
  1300  0212  0187               	clrf fsr1h	
  1301                           	
  1302  0213  3000               	movlw	low(0)
  1303  0214  3FC0               	movwi	[0]fsr1
  1304  0215  3000               	movlw	high(0)
  1305  0216  3FC1               	movwi	[1]fsr1
  1306  0217  2A19               	goto	l2203
  1307                           	line	119
  1308                           	
  1309  0218                     l2202:	
  1310  0218  2A19               	goto	l2203
  1311                           	line	122
  1312                           	
  1313  0219                     l2197:	
  1314                           	line	123
  1315                           	
  1316  0219                     l2203:	
  1317  0219  0008               	return
  1318                           	opt stack 0
  1319                           GLOBAL	__end_of_MainT
  1320  021A                     	__end_of_MainT:
  1321 ;; =============== function _MainT ends ============
  1322                           
  1323                           	signat	_MainT,88
  1324                           	global	_setSegmentDisplayNumber
  1325                           psect	text592,local,class=CODE,delta=2
  1326                           global __ptext592
  1327  0018                     __ptext592:
  1328                           
  1329 ;; *************** function _setSegmentDisplayNumber *****************
  1330 ;; Defined at:
  1331 ;;		line 21 in file "G:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  number          2   10[COMMON] int 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  i               1    3[BANK0 ] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;		None               void
  1338 ;; Registers used:
  1339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1345 ;;      Params:         2       0       0       0       0       0       0       0
  1346 ;;      Locals:         0       1       0       0       0       0       0       0
  1347 ;;      Temps:          0       3       0       0       0       0       0       0
  1348 ;;      Totals:         2       4       0       0       0       0       0       0
  1349 ;;Total ram usage:        6 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    3
  1352 ;; This function calls:
  1353 ;;		___awdiv
  1354 ;;		___awmod
  1355 ;; This function is called by:
  1356 ;;		_MainT
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           psect	text592
  1360                           	file	"G:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  1361                           	line	21
  1362                           	global	__size_of_setSegmentDisplayNumber
  1363  0152                     	__size_of_setSegmentDisplayNumber	equ	__end_of_setSegmentDisplayNumber-_setSegmentDispl
                                 ayNumber
  1364                           	
  1365  0018                     _setSegmentDisplayNumber:	
  1366                           	opt	stack 11
  1367                           ; Regs used in _setSegmentDisplayNumber: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  1368                           	line	23
  1369                           	
  1370  0018                     l5284:	
  1371                           ;SegmentDisplay_A2.c: 22: char i;
  1372                           ;SegmentDisplay_A2.c: 23: if(Segment->Enable)
  1373  0018  087C               	movf	(_Segment),w
  1374  0019  3E15               	addlw	015h
  1375  001A  0086               	movwf	fsr1l
  1376  001B  0187               	clrf fsr1h	
  1377                           	
  1378  001C  1C01               	btfss	indf1,0
  1379  001D  281F               	goto	u3891
  1380  001E  2820               	goto	u3890
  1381  001F                     u3891:
  1382  001F  2969               	goto	l3229
  1383  0020                     u3890:
  1384                           	line	25
  1385                           	
  1386  0020                     l5286:	
  1387                           ;SegmentDisplay_A2.c: 24: {
  1388                           ;SegmentDisplay_A2.c: 25: Segment->GO=1;
  1389  0020  087C               	movf	(_Segment),w
  1390  0021  3E15               	addlw	015h
  1391  0022  0086               	movwf	fsr1l
  1392  0023  0187               	clrf fsr1h	
  1393                           	
  1394  0024  1481               	bsf	indf1,1
  1395                           	line	26
  1396                           ;SegmentDisplay_A2.c: 26: if(Segment->Hex)
  1397  0025  087C               	movf	(_Segment),w
  1398  0026  3E15               	addlw	015h
  1399  0027  0086               	movwf	fsr1l
  1400  0028  0187               	clrf fsr1h	
  1401                           	
  1402  0029  1D01               	btfss	indf1,2
  1403  002A  282C               	goto	u3901
  1404  002B  282D               	goto	u3900
  1405  002C                     u3901:
  1406  002C  2869               	goto	l5294
  1407  002D                     u3900:
  1408                           	line	28
  1409                           	
  1410  002D                     l5288:	
  1411                           ;SegmentDisplay_A2.c: 27: {
  1412                           ;SegmentDisplay_A2.c: 28: Segment->Num[0]=(number & 0x000f);
  1413  002D  087A               	movf	(setSegmentDisplayNumber@number),w
  1414  002E  390F               	andlw	0Fh
  1415  002F  0020               	movlb 0	; select bank0
  1416  0030  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1417  0031  087C               	movf	(_Segment),w
  1418  0032  3E11               	addlw	011h
  1419  0033  0086               	movwf	fsr1l
  1420  0034  0187               	clrf fsr1h	
  1421                           	
  1422  0035  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1423  0036  0081               	movwf	indf1
  1424                           	line	29
  1425                           	
  1426  0037                     l5290:	
  1427                           ;SegmentDisplay_A2.c: 29: Segment->Num[1]=((number>>4)&0x000f);
  1428  0037  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1429  0038  00CF               	movwf	(??_setSegmentDisplayNumber+0)+0+1
  1430  0039  087A               	movf	(setSegmentDisplayNumber@number),w
  1431  003A  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1432  003B  3004               	movlw	04h
  1433  003C  00FF               	movwf	btemp+1
  1434  003D                     u3915:
  1435  003D  0D4F               	rlf	(??_setSegmentDisplayNumber+0)+1,w
  1436  003E  0CCF               	rrf	(??_setSegmentDisplayNumber+0)+1,f
  1437  003F  0CCE               	rrf	(??_setSegmentDisplayNumber+0)+0,f
  1438  0040  0BFF               	decfsz	btemp+1,f
  1439  0041  283D               	goto	u3915
  1440  0042  084E               	movf	0+(??_setSegmentDisplayNumber+0)+0,w
  1441  0043  390F               	andlw	0Fh
  1442  0044  00D0               	movwf	(??_setSegmentDisplayNumber+2)+0
  1443  0045  087C               	movf	(_Segment),w
  1444  0046  3E12               	addlw	012h
  1445  0047  0086               	movwf	fsr1l
  1446  0048  0187               	clrf fsr1h	
  1447                           	
  1448  0049  0850               	movf	(??_setSegmentDisplayNumber+2)+0,w
  1449  004A  0081               	movwf	indf1
  1450                           	line	30
  1451                           	
  1452  004B                     l5292:	
  1453                           ;SegmentDisplay_A2.c: 30: Segment->Num[2]=((number>>8)&0x000f);
  1454  004B  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1455  004C  390F               	andlw	0Fh
  1456  004D  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1457  004E  087C               	movf	(_Segment),w
  1458  004F  3E13               	addlw	013h
  1459  0050  0086               	movwf	fsr1l
  1460  0051  0187               	clrf fsr1h	
  1461                           	
  1462  0052  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1463  0053  0081               	movwf	indf1
  1464                           	line	31
  1465                           ;SegmentDisplay_A2.c: 31: Segment->Num[3]=((number>>12)&0x000f);
  1466  0054  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1467  0055  00CF               	movwf	(??_setSegmentDisplayNumber+0)+0+1
  1468  0056  087A               	movf	(setSegmentDisplayNumber@number),w
  1469  0057  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1470  0058  300C               	movlw	0Ch
  1471  0059  00FF               	movwf	btemp+1
  1472  005A                     u3925:
  1473  005A  0D4F               	rlf	(??_setSegmentDisplayNumber+0)+1,w
  1474  005B  0CCF               	rrf	(??_setSegmentDisplayNumber+0)+1,f
  1475  005C  0CCE               	rrf	(??_setSegmentDisplayNumber+0)+0,f
  1476  005D  0BFF               	decfsz	btemp+1,f
  1477  005E  285A               	goto	u3925
  1478  005F  084E               	movf	0+(??_setSegmentDisplayNumber+0)+0,w
  1479  0060  390F               	andlw	0Fh
  1480  0061  00D0               	movwf	(??_setSegmentDisplayNumber+2)+0
  1481  0062  087C               	movf	(_Segment),w
  1482  0063  3E14               	addlw	014h
  1483  0064  0086               	movwf	fsr1l
  1484  0065  0187               	clrf fsr1h	
  1485                           	
  1486  0066  0850               	movf	(??_setSegmentDisplayNumber+2)+0,w
  1487  0067  0081               	movwf	indf1
  1488                           	line	32
  1489                           ;SegmentDisplay_A2.c: 32: }
  1490  0068  2926               	goto	l5322
  1491                           	line	33
  1492                           	
  1493  0069                     l3216:	
  1494                           	
  1495  0069                     l5294:	
  1496                           ;SegmentDisplay_A2.c: 33: else if(Segment->Dec)
  1497  0069  087C               	movf	(_Segment),w
  1498  006A  3E15               	addlw	015h
  1499  006B  0086               	movwf	fsr1l
  1500  006C  0187               	clrf fsr1h	
  1501                           	
  1502  006D  1D81               	btfss	indf1,3
  1503  006E  2870               	goto	u3931
  1504  006F  2871               	goto	u3930
  1505  0070                     u3931:
  1506  0070  2926               	goto	l5322
  1507  0071                     u3930:
  1508                           	line	35
  1509                           	
  1510  0071                     l5296:	
  1511                           ;SegmentDisplay_A2.c: 34: {
  1512                           ;SegmentDisplay_A2.c: 35: if(number > 0x270f)
  1513  0071  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1514  0072  3A80               	xorlw	80h
  1515  0073  00FF               	movwf	btemp+1
  1516  0074  30A7               	movlw	(high(02710h))^80h
  1517  0075  027F               	subwf	btemp+1,w
  1518  0076  1D03               	skipz
  1519  0077  287A               	goto	u3945
  1520  0078  3010               	movlw	low(02710h)
  1521  0079  027A               	subwf	(setSegmentDisplayNumber@number),w
  1522  007A                     u3945:
  1523                           
  1524  007A  1C03               	skipc
  1525  007B  287D               	goto	u3941
  1526  007C  287E               	goto	u3940
  1527  007D                     u3941:
  1528  007D  289F               	goto	l5310
  1529  007E                     u3940:
  1530                           	line	37
  1531                           	
  1532  007E                     l5298:	
  1533                           ;SegmentDisplay_A2.c: 36: {
  1534                           ;SegmentDisplay_A2.c: 37: for(i=0 ; i<4; i++)
  1535  007E  0020               	movlb 0	; select bank0
  1536  007F  01D1               	clrf	(setSegmentDisplayNumber@i)
  1537                           	
  1538  0080                     l5300:	
  1539  0080  3004               	movlw	(04h)
  1540  0081  0251               	subwf	(setSegmentDisplayNumber@i),w
  1541  0082  1C03               	skipc
  1542  0083  2885               	goto	u3951
  1543  0084  2886               	goto	u3950
  1544  0085                     u3951:
  1545  0085  2888               	goto	l5304
  1546  0086                     u3950:
  1547  0086  2926               	goto	l5322
  1548                           	
  1549  0087                     l5302:	
  1550  0087  2926               	goto	l5322
  1551                           	line	38
  1552                           	
  1553  0088                     l3220:	
  1554                           	line	39
  1555                           	
  1556  0088                     l5304:	
  1557                           ;SegmentDisplay_A2.c: 38: {
  1558                           ;SegmentDisplay_A2.c: 39: Segment->Num[i]=16;
  1559  0088  3010               	movlw	(010h)
  1560  0089  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1561  008A  0851               	movf	(setSegmentDisplayNumber@i),w
  1562  008B  3E11               	addlw	011h
  1563  008C  077C               	addwf	(_Segment),w
  1564  008D  00CF               	movwf	(??_setSegmentDisplayNumber+1)+0
  1565  008E  084F               	movf	0+(??_setSegmentDisplayNumber+1)+0,w
  1566  008F  0086               	movwf	fsr1l
  1567  0090  0187               	clrf fsr1h	
  1568                           	
  1569  0091  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1570  0092  0081               	movwf	indf1
  1571                           	line	37
  1572                           	
  1573  0093                     l5306:	
  1574  0093  3001               	movlw	(01h)
  1575  0094  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1576  0095  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1577  0096  07D1               	addwf	(setSegmentDisplayNumber@i),f
  1578                           	
  1579  0097                     l5308:	
  1580  0097  3004               	movlw	(04h)
  1581  0098  0251               	subwf	(setSegmentDisplayNumber@i),w
  1582  0099  1C03               	skipc
  1583  009A  289C               	goto	u3961
  1584  009B  289D               	goto	u3960
  1585  009C                     u3961:
  1586  009C  2888               	goto	l5304
  1587  009D                     u3960:
  1588  009D  2926               	goto	l5322
  1589                           	
  1590  009E                     l3221:	
  1591                           	line	41
  1592                           ;SegmentDisplay_A2.c: 40: }
  1593                           ;SegmentDisplay_A2.c: 41: }
  1594  009E  2926               	goto	l5322
  1595                           	line	42
  1596                           	
  1597  009F                     l3219:	
  1598                           	line	44
  1599                           	
  1600  009F                     l5310:	
  1601                           ;SegmentDisplay_A2.c: 42: else
  1602                           ;SegmentDisplay_A2.c: 43: {
  1603                           ;SegmentDisplay_A2.c: 44: Segment->Num[3]=(number/1000);
  1604  009F  30E8               	movlw	low(03E8h)
  1605  00A0  00F1               	movwf	(?___awdiv)
  1606  00A1  3003               	movlw	high(03E8h)
  1607  00A2  00F2               	movwf	((?___awdiv))+1
  1608  00A3  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1609  00A4  01F4               	clrf	1+(?___awdiv)+02h
  1610  00A5  07F4               	addwf	1+(?___awdiv)+02h
  1611  00A6  087A               	movf	(setSegmentDisplayNumber@number),w
  1612  00A7  01F3               	clrf	0+(?___awdiv)+02h
  1613  00A8  07F3               	addwf	0+(?___awdiv)+02h
  1614                           
  1615  00A9  3183  231D  3180   	fcall	___awdiv
  1616  00AC  0871               	movf	(0+(?___awdiv)),w
  1617  00AD  0020               	movlb 0	; select bank0
  1618  00AE  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1619  00AF  087C               	movf	(_Segment),w
  1620  00B0  3E14               	addlw	014h
  1621  00B1  0086               	movwf	fsr1l
  1622  00B2  0187               	clrf fsr1h	
  1623                           	
  1624  00B3  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1625  00B4  0081               	movwf	indf1
  1626                           	line	45
  1627                           	
  1628  00B5                     l5312:	
  1629                           ;SegmentDisplay_A2.c: 45: number%=1000;
  1630  00B5  30E8               	movlw	low(03E8h)
  1631  00B6  00F1               	movwf	(?___awmod)
  1632  00B7  3003               	movlw	high(03E8h)
  1633  00B8  00F2               	movwf	((?___awmod))+1
  1634  00B9  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1635  00BA  01F4               	clrf	1+(?___awmod)+02h
  1636  00BB  07F4               	addwf	1+(?___awmod)+02h
  1637  00BC  087A               	movf	(setSegmentDisplayNumber@number),w
  1638  00BD  01F3               	clrf	0+(?___awmod)+02h
  1639  00BE  07F3               	addwf	0+(?___awmod)+02h
  1640                           
  1641  00BF  3183  2389  3180   	fcall	___awmod
  1642  00C2  0872               	movf	(1+(?___awmod)),w
  1643  00C3  01FB               	clrf	(setSegmentDisplayNumber@number+1)
  1644  00C4  07FB               	addwf	(setSegmentDisplayNumber@number+1)
  1645  00C5  0871               	movf	(0+(?___awmod)),w
  1646  00C6  01FA               	clrf	(setSegmentDisplayNumber@number)
  1647  00C7  07FA               	addwf	(setSegmentDisplayNumber@number)
  1648                           
  1649                           	line	46
  1650                           	
  1651  00C8                     l5314:	
  1652                           ;SegmentDisplay_A2.c: 46: Segment->Num[2]=(number/100);
  1653  00C8  3064               	movlw	low(064h)
  1654  00C9  00F1               	movwf	(?___awdiv)
  1655  00CA  3000               	movlw	high(064h)
  1656  00CB  00F2               	movwf	((?___awdiv))+1
  1657  00CC  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1658  00CD  01F4               	clrf	1+(?___awdiv)+02h
  1659  00CE  07F4               	addwf	1+(?___awdiv)+02h
  1660  00CF  087A               	movf	(setSegmentDisplayNumber@number),w
  1661  00D0  01F3               	clrf	0+(?___awdiv)+02h
  1662  00D1  07F3               	addwf	0+(?___awdiv)+02h
  1663                           
  1664  00D2  3183  231D  3180   	fcall	___awdiv
  1665  00D5  0871               	movf	(0+(?___awdiv)),w
  1666  00D6  0020               	movlb 0	; select bank0
  1667  00D7  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1668  00D8  087C               	movf	(_Segment),w
  1669  00D9  3E13               	addlw	013h
  1670  00DA  0086               	movwf	fsr1l
  1671  00DB  0187               	clrf fsr1h	
  1672                           	
  1673  00DC  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1674  00DD  0081               	movwf	indf1
  1675                           	line	47
  1676                           ;SegmentDisplay_A2.c: 47: number%=100;
  1677  00DE  3064               	movlw	low(064h)
  1678  00DF  00F1               	movwf	(?___awmod)
  1679  00E0  3000               	movlw	high(064h)
  1680  00E1  00F2               	movwf	((?___awmod))+1
  1681  00E2  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1682  00E3  01F4               	clrf	1+(?___awmod)+02h
  1683  00E4  07F4               	addwf	1+(?___awmod)+02h
  1684  00E5  087A               	movf	(setSegmentDisplayNumber@number),w
  1685  00E6  01F3               	clrf	0+(?___awmod)+02h
  1686  00E7  07F3               	addwf	0+(?___awmod)+02h
  1687                           
  1688  00E8  3183  2389  3180   	fcall	___awmod
  1689  00EB  0872               	movf	(1+(?___awmod)),w
  1690  00EC  01FB               	clrf	(setSegmentDisplayNumber@number+1)
  1691  00ED  07FB               	addwf	(setSegmentDisplayNumber@number+1)
  1692  00EE  0871               	movf	(0+(?___awmod)),w
  1693  00EF  01FA               	clrf	(setSegmentDisplayNumber@number)
  1694  00F0  07FA               	addwf	(setSegmentDisplayNumber@number)
  1695                           
  1696                           	line	48
  1697                           	
  1698  00F1                     l5316:	
  1699                           ;SegmentDisplay_A2.c: 48: Segment->Num[1]=(number/10);
  1700  00F1  300A               	movlw	low(0Ah)
  1701  00F2  00F1               	movwf	(?___awdiv)
  1702  00F3  3000               	movlw	high(0Ah)
  1703  00F4  00F2               	movwf	((?___awdiv))+1
  1704  00F5  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1705  00F6  01F4               	clrf	1+(?___awdiv)+02h
  1706  00F7  07F4               	addwf	1+(?___awdiv)+02h
  1707  00F8  087A               	movf	(setSegmentDisplayNumber@number),w
  1708  00F9  01F3               	clrf	0+(?___awdiv)+02h
  1709  00FA  07F3               	addwf	0+(?___awdiv)+02h
  1710                           
  1711  00FB  3183  231D  3180   	fcall	___awdiv
  1712  00FE  0871               	movf	(0+(?___awdiv)),w
  1713  00FF  0020               	movlb 0	; select bank0
  1714  0100  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1715  0101  087C               	movf	(_Segment),w
  1716  0102  3E12               	addlw	012h
  1717  0103  0086               	movwf	fsr1l
  1718  0104  0187               	clrf fsr1h	
  1719                           	
  1720  0105  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1721  0106  0081               	movwf	indf1
  1722                           	line	49
  1723                           	
  1724  0107                     l5318:	
  1725                           ;SegmentDisplay_A2.c: 49: number%=10;
  1726  0107  300A               	movlw	low(0Ah)
  1727  0108  00F1               	movwf	(?___awmod)
  1728  0109  3000               	movlw	high(0Ah)
  1729  010A  00F2               	movwf	((?___awmod))+1
  1730  010B  087B               	movf	(setSegmentDisplayNumber@number+1),w
  1731  010C  01F4               	clrf	1+(?___awmod)+02h
  1732  010D  07F4               	addwf	1+(?___awmod)+02h
  1733  010E  087A               	movf	(setSegmentDisplayNumber@number),w
  1734  010F  01F3               	clrf	0+(?___awmod)+02h
  1735  0110  07F3               	addwf	0+(?___awmod)+02h
  1736                           
  1737  0111  3183  2389  3180   	fcall	___awmod
  1738  0114  0872               	movf	(1+(?___awmod)),w
  1739  0115  01FB               	clrf	(setSegmentDisplayNumber@number+1)
  1740  0116  07FB               	addwf	(setSegmentDisplayNumber@number+1)
  1741  0117  0871               	movf	(0+(?___awmod)),w
  1742  0118  01FA               	clrf	(setSegmentDisplayNumber@number)
  1743  0119  07FA               	addwf	(setSegmentDisplayNumber@number)
  1744                           
  1745                           	line	50
  1746                           	
  1747  011A                     l5320:	
  1748                           ;SegmentDisplay_A2.c: 50: Segment->Num[0]=number;
  1749  011A  087A               	movf	(setSegmentDisplayNumber@number),w
  1750  011B  0020               	movlb 0	; select bank0
  1751  011C  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1752  011D  087C               	movf	(_Segment),w
  1753  011E  3E11               	addlw	011h
  1754  011F  0086               	movwf	fsr1l
  1755  0120  0187               	clrf fsr1h	
  1756                           	
  1757  0121  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1758  0122  0081               	movwf	indf1
  1759  0123  2926               	goto	l5322
  1760                           	line	51
  1761                           	
  1762  0124                     l3222:	
  1763  0124  2926               	goto	l5322
  1764                           	line	52
  1765                           	
  1766  0125                     l3218:	
  1767  0125  2926               	goto	l5322
  1768                           	line	53
  1769                           	
  1770  0126                     l3217:	
  1771                           	
  1772  0126                     l5322:	
  1773                           ;SegmentDisplay_A2.c: 51: }
  1774                           ;SegmentDisplay_A2.c: 52: }
  1775                           ;SegmentDisplay_A2.c: 53: if(Segment->Num[3] > 0)
  1776  0126  087C               	movf	(_Segment),w
  1777  0127  3E14               	addlw	014h
  1778  0128  0086               	movwf	fsr1l
  1779  0129  0187               	clrf fsr1h	
  1780                           	
  1781  012A  0801               	movf	indf1,w
  1782  012B  3A00               	xorlw	0&0ffh
  1783  012C  1903               	skipnz
  1784  012D  292F               	goto	u3971
  1785  012E  2930               	goto	u3970
  1786  012F                     u3971:
  1787  012F  293A               	goto	l5326
  1788  0130                     u3970:
  1789                           	line	55
  1790                           	
  1791  0130                     l5324:	
  1792                           ;SegmentDisplay_A2.c: 54: {
  1793                           ;SegmentDisplay_A2.c: 55: Segment->DisplayCount=3;
  1794  0130  3003               	movlw	(03h)
  1795  0131  0020               	movlb 0	; select bank0
  1796  0132  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1797  0133  087C               	movf	(_Segment),w
  1798  0134  3E17               	addlw	017h
  1799  0135  0086               	movwf	fsr1l
  1800  0136  0187               	clrf fsr1h	
  1801                           	
  1802  0137  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1803  0138  0081               	movwf	indf1
  1804                           	line	56
  1805                           ;SegmentDisplay_A2.c: 56: }
  1806  0139  2969               	goto	l3229
  1807                           	line	57
  1808                           	
  1809  013A                     l3223:	
  1810                           	
  1811  013A                     l5326:	
  1812                           ;SegmentDisplay_A2.c: 57: else if(Segment->Num[2] > 0)
  1813  013A  087C               	movf	(_Segment),w
  1814  013B  3E13               	addlw	013h
  1815  013C  0086               	movwf	fsr1l
  1816  013D  0187               	clrf fsr1h	
  1817                           	
  1818  013E  0801               	movf	indf1,w
  1819  013F  3A00               	xorlw	0&0ffh
  1820  0140  1903               	skipnz
  1821  0141  2943               	goto	u3981
  1822  0142  2944               	goto	u3980
  1823  0143                     u3981:
  1824  0143  294E               	goto	l5330
  1825  0144                     u3980:
  1826                           	line	59
  1827                           	
  1828  0144                     l5328:	
  1829                           ;SegmentDisplay_A2.c: 58: {
  1830                           ;SegmentDisplay_A2.c: 59: Segment->DisplayCount=2;
  1831  0144  3002               	movlw	(02h)
  1832  0145  0020               	movlb 0	; select bank0
  1833  0146  00CE               	movwf	(??_setSegmentDisplayNumber+0)+0
  1834  0147  087C               	movf	(_Segment),w
  1835  0148  3E17               	addlw	017h
  1836  0149  0086               	movwf	fsr1l
  1837  014A  0187               	clrf fsr1h	
  1838                           	
  1839  014B  084E               	movf	(??_setSegmentDisplayNumber+0)+0,w
  1840  014C  0081               	movwf	indf1
  1841                           	line	60
  1842                           ;SegmentDisplay_A2.c: 60: }
  1843  014D  2969               	goto	l3229
  1844                           	line	61
  1845                           	
  1846  014E                     l3225:	
  1847                           	
  1848  014E                     l5330:	
  1849                           ;SegmentDisplay_A2.c: 61: else if(Segment->Num[1] > 0)
  1850  014E  087C               	movf	(_Segment),w
  1851  014F  3E12               	addlw	012h
  1852  0150  0086               	movwf	fsr1l
  1853  0151  0187               	clrf fsr1h	
  1854                           	
  1855  0152  0801               	movf	indf1,w
  1856  0153  3A00               	xorlw	0&0ffh
  1857  0154  1903               	skipnz
  1858  0155  2957               	goto	u3991
  1859  0156  2958               	goto	u3990
  1860  0157                     u3991:
  1861  0157  2960               	goto	l5334
  1862  0158                     u3990:
  1863                           	line	63
  1864                           	
  1865  0158                     l5332:	
  1866                           ;SegmentDisplay_A2.c: 62: {
  1867                           ;SegmentDisplay_A2.c: 63: Segment->DisplayCount=1;
  1868  0158  087C               	movf	(_Segment),w
  1869  0159  3E17               	addlw	017h
  1870  015A  0086               	movwf	fsr1l
  1871  015B  0187               	clrf fsr1h	
  1872                           	
  1873  015C  0181               	clrf	indf1
  1874  015D  1403               	bsf	status,0
  1875  015E  0D81               	rlf	indf1,f
  1876                           	line	64
  1877                           ;SegmentDisplay_A2.c: 64: }
  1878  015F  2969               	goto	l3229
  1879                           	line	65
  1880                           	
  1881  0160                     l3227:	
  1882                           	line	67
  1883                           	
  1884  0160                     l5334:	
  1885                           ;SegmentDisplay_A2.c: 65: else
  1886                           ;SegmentDisplay_A2.c: 66: {
  1887                           ;SegmentDisplay_A2.c: 67: Segment->DisplayCount=0;
  1888  0160  087C               	movf	(_Segment),w
  1889  0161  3E17               	addlw	017h
  1890  0162  0086               	movwf	fsr1l
  1891  0163  0187               	clrf fsr1h	
  1892                           	
  1893  0164  0181               	clrf	indf1
  1894  0165  2969               	goto	l3229
  1895                           	line	68
  1896                           	
  1897  0166                     l3228:	
  1898  0166  2969               	goto	l3229
  1899                           	
  1900  0167                     l3226:	
  1901  0167  2969               	goto	l3229
  1902                           	
  1903  0168                     l3224:	
  1904  0168  2969               	goto	l3229
  1905                           	line	69
  1906                           	
  1907  0169                     l3215:	
  1908                           	line	70
  1909                           	
  1910  0169                     l3229:	
  1911  0169  0008               	return
  1912                           	opt stack 0
  1913                           GLOBAL	__end_of_setSegmentDisplayNumber
  1914  016A                     	__end_of_setSegmentDisplayNumber:
  1915 ;; =============== function _setSegmentDisplayNumber ends ============
  1916                           
  1917                           	signat	_setSegmentDisplayNumber,4216
  1918                           	global	_I2C_Main
  1919                           psect	text593,local,class=CODE,delta=2
  1920                           global __ptext593
  1921  0449                     __ptext593:
  1922                           
  1923 ;; *************** function _I2C_Main *****************
  1924 ;; Defined at:
  1925 ;;		line 276 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  i               1    0        unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;		None               void
  1932 ;; Registers used:
  1933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1939 ;;      Params:         0       0       0       0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    3
  1946 ;; This function calls:
  1947 ;;		_I2C_Master_Reception
  1948 ;;		_I2C_Master_Transmission
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           psect	text593
  1954                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1955                           	line	276
  1956                           	global	__size_of_I2C_Main
  1957  005F                     	__size_of_I2C_Main	equ	__end_of_I2C_Main-_I2C_Main
  1958                           	
  1959  0449                     _I2C_Main:	
  1960                           	opt	stack 12
  1961                           ; Regs used in _I2C_Main: [wreg+fsr1l-status,0+pclath+cstack]
  1962                           	line	304
  1963                           	
  1964  0449                     l5068:	
  1965                           ;MCU_16f1516_B1.c: 277: char i;
  1966                           ;MCU_16f1516_B1.c: 304: if(I2C->MasterRxGO)
  1967  0449  0020               	movlb 0	; select bank0
  1968  044A  083A               	movf	(_I2C),w
  1969  044B  3E42               	addlw	042h
  1970  044C  0086               	movwf	fsr1l
  1971  044D  3001               	movlw 1	; select bank2/3
  1972  044E  0087               	movwf fsr1h	
  1973                           	
  1974  044F  1E01               	btfss	indf1,4
  1975  0450  2C52               	goto	u3461
  1976  0451  2C53               	goto	u3460
  1977  0452                     u3461:
  1978  0452  2C68               	goto	l1049
  1979  0453                     u3460:
  1980                           	line	306
  1981                           	
  1982  0453                     l5070:	
  1983                           ;MCU_16f1516_B1.c: 305: {
  1984                           ;MCU_16f1516_B1.c: 306: RA1=1;
  1985  0453  148C               	bsf	(97/8),(97)&7
  1986                           	line	307
  1987                           	
  1988  0454                     l5072:	
  1989                           ;MCU_16f1516_B1.c: 307: I2C->MasterRxGO=0;
  1990  0454  083A               	movf	(_I2C),w
  1991  0455  3E42               	addlw	042h
  1992  0456  0086               	movwf	fsr1l
  1993  0457  3001               	movlw 1	; select bank2/3
  1994  0458  0087               	movwf fsr1h	
  1995                           	
  1996  0459  1201               	bcf	indf1,4
  1997                           	line	308
  1998                           	
  1999  045A                     l5074:	
  2000                           ;MCU_16f1516_B1.c: 308: I2C_Master_Reception();
  2001  045A  3182  22A3  3184   	fcall	_I2C_Master_Reception
  2002                           	line	309
  2003                           	
  2004  045D                     l5076:	
  2005                           ;MCU_16f1516_B1.c: 309: TMain->Test=1;
  2006  045D  0020               	movlb 0	; select bank0
  2007  045E  0856               	movf	(_TMain),w
  2008  045F  3E0C               	addlw	0Ch
  2009  0460  0086               	movwf	fsr1l
  2010  0461  0187               	clrf fsr1h	
  2011                           	
  2012  0462  0181               	clrf	indf1
  2013  0463  1403               	bsf	status,0
  2014  0464  0D81               	rlf	indf1,f
  2015                           	line	310
  2016                           	
  2017  0465                     l5078:	
  2018                           ;MCU_16f1516_B1.c: 310: RA1=~RA1;
  2019  0465  3002               	movlw	1<<((97)&7)
  2020  0466  068C               	xorwf	((97)/8),f
  2021                           	line	318
  2022                           ;MCU_16f1516_B1.c: 318: }
  2023  0467  2CA7               	goto	l1056
  2024                           	line	319
  2025                           	
  2026  0468                     l1049:	
  2027                           	line	321
  2028                           ;MCU_16f1516_B1.c: 319: else
  2029                           ;MCU_16f1516_B1.c: 320: {
  2030                           ;MCU_16f1516_B1.c: 321: if(RC0)
  2031  0468  1C0E               	btfss	(112/8),(112)&7
  2032  0469  2C6B               	goto	u3471
  2033  046A  2C6C               	goto	u3470
  2034  046B                     u3471:
  2035  046B  2C83               	goto	l5084
  2036  046C                     u3470:
  2037                           	line	323
  2038                           	
  2039  046C                     l5080:	
  2040                           ;MCU_16f1516_B1.c: 322: {
  2041                           ;MCU_16f1516_B1.c: 323: if(!I2C->SS)
  2042  046C  083A               	movf	(_I2C),w
  2043  046D  3E42               	addlw	042h
  2044  046E  0086               	movwf	fsr1l
  2045  046F  3001               	movlw 1	; select bank2/3
  2046  0470  0087               	movwf fsr1h	
  2047                           	
  2048  0471  1A81               	btfsc	indf1,5
  2049  0472  2C74               	goto	u3481
  2050  0473  2C75               	goto	u3480
  2051  0474                     u3481:
  2052  0474  2CA7               	goto	l1056
  2053  0475                     u3480:
  2054                           	line	325
  2055                           	
  2056  0475                     l5082:	
  2057                           ;MCU_16f1516_B1.c: 324: {
  2058                           ;MCU_16f1516_B1.c: 325: I2C->SS=1;
  2059  0475  083A               	movf	(_I2C),w
  2060  0476  3E42               	addlw	042h
  2061  0477  0086               	movwf	fsr1l
  2062  0478  3001               	movlw 1	; select bank2/3
  2063  0479  0087               	movwf fsr1h	
  2064                           	
  2065  047A  1681               	bsf	indf1,5
  2066                           	line	326
  2067                           ;MCU_16f1516_B1.c: 326: I2C->MasterRxGO=1;
  2068  047B  083A               	movf	(_I2C),w
  2069  047C  3E42               	addlw	042h
  2070  047D  0086               	movwf	fsr1l
  2071  047E  3001               	movlw 1	; select bank2/3
  2072  047F  0087               	movwf fsr1h	
  2073                           	
  2074  0480  1601               	bsf	indf1,4
  2075  0481  2CA7               	goto	l1056
  2076                           	line	327
  2077                           	
  2078  0482                     l1052:	
  2079                           	line	328
  2080                           ;MCU_16f1516_B1.c: 327: }
  2081                           ;MCU_16f1516_B1.c: 328: }
  2082  0482  2CA7               	goto	l1056
  2083                           	line	329
  2084                           	
  2085  0483                     l1051:	
  2086                           	line	331
  2087                           	
  2088  0483                     l5084:	
  2089                           ;MCU_16f1516_B1.c: 329: else
  2090                           ;MCU_16f1516_B1.c: 330: {
  2091                           ;MCU_16f1516_B1.c: 331: if(I2C->SS)
  2092  0483  083A               	movf	(_I2C),w
  2093  0484  3E42               	addlw	042h
  2094  0485  0086               	movwf	fsr1l
  2095  0486  3001               	movlw 1	; select bank2/3
  2096  0487  0087               	movwf fsr1h	
  2097                           	
  2098  0488  1E81               	btfss	indf1,5
  2099  0489  2C8B               	goto	u3491
  2100  048A  2C8C               	goto	u3490
  2101  048B                     u3491:
  2102  048B  2C92               	goto	l1054
  2103  048C                     u3490:
  2104                           	line	333
  2105                           	
  2106  048C                     l5086:	
  2107                           ;MCU_16f1516_B1.c: 332: {
  2108                           ;MCU_16f1516_B1.c: 333: I2C->SS=0;
  2109  048C  083A               	movf	(_I2C),w
  2110  048D  3E42               	addlw	042h
  2111  048E  0086               	movwf	fsr1l
  2112  048F  3001               	movlw 1	; select bank2/3
  2113  0490  0087               	movwf fsr1h	
  2114                           	
  2115  0491  1281               	bcf	indf1,5
  2116                           	line	334
  2117                           	
  2118  0492                     l1054:	
  2119                           	line	335
  2120                           ;MCU_16f1516_B1.c: 334: }
  2121                           ;MCU_16f1516_B1.c: 335: if(I2C->MasterTxGO)
  2122  0492  083A               	movf	(_I2C),w
  2123  0493  3E42               	addlw	042h
  2124  0494  0086               	movwf	fsr1l
  2125  0495  3001               	movlw 1	; select bank2/3
  2126  0496  0087               	movwf fsr1h	
  2127                           	
  2128  0497  1D81               	btfss	indf1,3
  2129  0498  2C9A               	goto	u3501
  2130  0499  2C9B               	goto	u3500
  2131  049A                     u3501:
  2132  049A  2CA7               	goto	l1056
  2133  049B                     u3500:
  2134                           	line	337
  2135                           	
  2136  049B                     l5088:	
  2137                           ;MCU_16f1516_B1.c: 336: {
  2138                           ;MCU_16f1516_B1.c: 337: I2C->MasterTxGO=0;
  2139  049B  083A               	movf	(_I2C),w
  2140  049C  3E42               	addlw	042h
  2141  049D  0086               	movwf	fsr1l
  2142  049E  3001               	movlw 1	; select bank2/3
  2143  049F  0087               	movwf fsr1h	
  2144                           	
  2145  04A0  1181               	bcf	indf1,3
  2146                           	line	338
  2147                           	
  2148  04A1                     l5090:	
  2149                           ;MCU_16f1516_B1.c: 338: I2C_Master_Transmission();
  2150  04A1  3183  23E9  3184   	fcall	_I2C_Master_Transmission
  2151  04A4  2CA7               	goto	l1056
  2152                           	line	339
  2153                           	
  2154  04A5                     l1055:	
  2155  04A5  2CA7               	goto	l1056
  2156                           	line	340
  2157                           	
  2158  04A6                     l1053:	
  2159  04A6  2CA7               	goto	l1056
  2160                           	line	341
  2161                           	
  2162  04A7                     l1050:	
  2163                           	line	344
  2164                           	
  2165  04A7                     l1056:	
  2166  04A7  0008               	return
  2167                           	opt stack 0
  2168                           GLOBAL	__end_of_I2C_Main
  2169  04A8                     	__end_of_I2C_Main:
  2170 ;; =============== function _I2C_Main ends ============
  2171                           
  2172                           	signat	_I2C_Main,88
  2173                           	global	_Mcu_Initial
  2174                           psect	text594,local,class=CODE,delta=2
  2175                           global __ptext594
  2176  059C                     __ptext594:
  2177                           
  2178 ;; *************** function _Mcu_Initial *****************
  2179 ;; Defined at:
  2180 ;;		line 12 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;		None               void
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2194 ;;      Params:         0       0       0       0       0       0       0       0
  2195 ;;      Locals:         0       0       0       0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0
  2197 ;;      Totals:         0       0       0       0       0       0       0       0
  2198 ;;Total ram usage:        0 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    3
  2201 ;; This function calls:
  2202 ;;		_IO_Set
  2203 ;;		_TMR1_Set
  2204 ;;		_I2C_Set
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           psect	text594
  2210                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2211                           	line	12
  2212                           	global	__size_of_Mcu_Initial
  2213  0011                     	__size_of_Mcu_Initial	equ	__end_of_Mcu_Initial-_Mcu_Initial
  2214                           	
  2215  059C                     _Mcu_Initial:	
  2216                           	opt	stack 12
  2217                           ; Regs used in _Mcu_Initial: [wreg+status,2+status,0+pclath+cstack]
  2218                           	line	14
  2219                           	
  2220  059C                     l5052:	
  2221                           ;MCU_16f1516_B1.c: 14: OSCCON=0x78; ;;
  2222  059C  3078               	movlw	(078h)
  2223  059D  0021               	movlb 1	; select bank1
  2224  059E  0099               	movwf	(153)^080h	;volatile
  2225                           	line	16
  2226                           	
  2227  059F                     l5054:	
  2228                           ;MCU_16f1516_B1.c: 16: IO_Set();
  2229  059F  3185  2571  3185   	fcall	_IO_Set
  2230                           	line	18
  2231                           	
  2232  05A2                     l5056:	
  2233                           ;MCU_16f1516_B1.c: 18: _nop();
  2234  05A2  0000               	nop
  2235                           	line	20
  2236                           	
  2237  05A3                     l5058:	
  2238                           ;MCU_16f1516_B1.c: 20: TMR1_Set();
  2239  05A3  3185  25AD  3185   	fcall	_TMR1_Set
  2240                           	line	22
  2241                           	
  2242  05A6                     l5060:	
  2243                           ;MCU_16f1516_B1.c: 22: _nop();
  2244  05A6  0000               	nop
  2245                           	line	26
  2246                           	
  2247  05A7                     l5062:	
  2248                           ;MCU_16f1516_B1.c: 26: _nop();
  2249  05A7  0000               	nop
  2250                           	line	28
  2251                           	
  2252  05A8                     l5064:	
  2253                           ;MCU_16f1516_B1.c: 28: _nop();
  2254  05A8  0000               	nop
  2255                           	line	30
  2256                           	
  2257  05A9                     l5066:	
  2258                           ;MCU_16f1516_B1.c: 30: I2C_Set();
  2259  05A9  3185  25DB  3185   	fcall	_I2C_Set
  2260                           	line	35
  2261                           	
  2262  05AC                     l1025:	
  2263  05AC  0008               	return
  2264                           	opt stack 0
  2265                           GLOBAL	__end_of_Mcu_Initial
  2266  05AD                     	__end_of_Mcu_Initial:
  2267 ;; =============== function _Mcu_Initial ends ============
  2268                           
  2269                           	signat	_Mcu_Initial,88
  2270                           	global	___awmod
  2271                           psect	text595,local,class=CODE,delta=2
  2272                           global __ptext595
  2273  0389                     __ptext595:
  2274                           
  2275 ;; *************** function ___awmod *****************
  2276 ;; Defined at:
  2277 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  divisor         2    1[COMMON] int 
  2280 ;;  dividend        2    3[COMMON] int 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  sign            1    7[COMMON] unsigned char 
  2283 ;;  counter         1    6[COMMON] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  2    1[COMMON] int 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2293 ;;      Params:         4       0       0       0       0       0       0       0
  2294 ;;      Locals:         2       0       0       0       0       0       0       0
  2295 ;;      Temps:          1       0       0       0       0       0       0       0
  2296 ;;      Totals:         7       0       0       0       0       0       0       0
  2297 ;;Total ram usage:        7 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    2
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_setSegmentDisplayNumber
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           psect	text595
  2307                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  2308                           	line	5
  2309                           	global	__size_of___awmod
  2310  0060                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  2311                           	
  2312  0389                     ___awmod:	
  2313                           	opt	stack 11
  2314                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2315                           	line	8
  2316                           	
  2317  0389                     l5250:	
  2318  0389  01F7               	clrf	(___awmod@sign)
  2319                           	line	9
  2320  038A  1FF4               	btfss	(___awmod@dividend+1),7
  2321  038B  2B8D               	goto	u3801
  2322  038C  2B8E               	goto	u3800
  2323  038D                     u3801:
  2324  038D  2B97               	goto	l5254
  2325  038E                     u3800:
  2326                           	line	10
  2327                           	
  2328  038E                     l5252:	
  2329  038E  09F3               	comf	(___awmod@dividend),f
  2330  038F  09F4               	comf	(___awmod@dividend+1),f
  2331  0390  0AF3               	incf	(___awmod@dividend),f
  2332  0391  1903               	skipnz
  2333  0392  0AF4               	incf	(___awmod@dividend+1),f
  2334                           	line	11
  2335  0393  01F7               	clrf	(___awmod@sign)
  2336  0394  1403               	bsf	status,0
  2337  0395  0DF7               	rlf	(___awmod@sign),f
  2338  0396  2B97               	goto	l5254
  2339                           	line	12
  2340                           	
  2341  0397                     l3460:	
  2342                           	line	13
  2343                           	
  2344  0397                     l5254:	
  2345  0397  1FF2               	btfss	(___awmod@divisor+1),7
  2346  0398  2B9A               	goto	u3811
  2347  0399  2B9B               	goto	u3810
  2348  039A                     u3811:
  2349  039A  2BA1               	goto	l5258
  2350  039B                     u3810:
  2351                           	line	14
  2352                           	
  2353  039B                     l5256:	
  2354  039B  09F1               	comf	(___awmod@divisor),f
  2355  039C  09F2               	comf	(___awmod@divisor+1),f
  2356  039D  0AF1               	incf	(___awmod@divisor),f
  2357  039E  1903               	skipnz
  2358  039F  0AF2               	incf	(___awmod@divisor+1),f
  2359  03A0  2BA1               	goto	l5258
  2360                           	
  2361  03A1                     l3461:	
  2362                           	line	15
  2363                           	
  2364  03A1                     l5258:	
  2365  03A1  0872               	movf	(___awmod@divisor+1),w
  2366  03A2  0471               	iorwf	(___awmod@divisor),w
  2367  03A3  1903               	skipnz
  2368  03A4  2BA6               	goto	u3821
  2369  03A5  2BA7               	goto	u3820
  2370  03A6                     u3821:
  2371  03A6  2BD7               	goto	l5276
  2372  03A7                     u3820:
  2373                           	line	16
  2374                           	
  2375  03A7                     l5260:	
  2376  03A7  01F6               	clrf	(___awmod@counter)
  2377  03A8  1403               	bsf	status,0
  2378  03A9  0DF6               	rlf	(___awmod@counter),f
  2379                           	line	17
  2380  03AA  2BB5               	goto	l5266
  2381                           	
  2382  03AB                     l3464:	
  2383                           	line	18
  2384                           	
  2385  03AB                     l5262:	
  2386  03AB  3001               	movlw	01h
  2387                           	
  2388  03AC                     u3835:
  2389  03AC  35F1               	lslf	(___awmod@divisor),f
  2390  03AD  0DF2               	rlf	(___awmod@divisor+1),f
  2391  03AE  0B89               	decfsz	wreg,f
  2392  03AF  2BAC               	goto	u3835
  2393                           	line	19
  2394                           	
  2395  03B0                     l5264:	
  2396  03B0  3001               	movlw	(01h)
  2397  03B1  00F5               	movwf	(??___awmod+0)+0
  2398  03B2  0875               	movf	(??___awmod+0)+0,w
  2399  03B3  07F6               	addwf	(___awmod@counter),f
  2400  03B4  2BB5               	goto	l5266
  2401                           	line	20
  2402                           	
  2403  03B5                     l3463:	
  2404                           	line	17
  2405                           	
  2406  03B5                     l5266:	
  2407  03B5  1FF2               	btfss	(___awmod@divisor+1),(15)&7
  2408  03B6  2BB8               	goto	u3841
  2409  03B7  2BB9               	goto	u3840
  2410  03B8                     u3841:
  2411  03B8  2BAB               	goto	l5262
  2412  03B9                     u3840:
  2413  03B9  2BBB               	goto	l5268
  2414                           	
  2415  03BA                     l3465:	
  2416  03BA  2BBB               	goto	l5268
  2417                           	line	21
  2418                           	
  2419  03BB                     l3466:	
  2420                           	line	22
  2421                           	
  2422  03BB                     l5268:	
  2423  03BB  0872               	movf	(___awmod@divisor+1),w
  2424  03BC  0274               	subwf	(___awmod@dividend+1),w
  2425  03BD  1D03               	skipz
  2426  03BE  2BC1               	goto	u3855
  2427  03BF  0871               	movf	(___awmod@divisor),w
  2428  03C0  0273               	subwf	(___awmod@dividend),w
  2429  03C1                     u3855:
  2430  03C1  1C03               	skipc
  2431  03C2  2BC4               	goto	u3851
  2432  03C3  2BC5               	goto	u3850
  2433  03C4                     u3851:
  2434  03C4  2BCA               	goto	l5272
  2435  03C5                     u3850:
  2436                           	line	23
  2437                           	
  2438  03C5                     l5270:	
  2439  03C5  0871               	movf	(___awmod@divisor),w
  2440  03C6  02F3               	subwf	(___awmod@dividend),f
  2441  03C7  0872               	movf	(___awmod@divisor+1),w
  2442  03C8  3BF4               	subwfb	(___awmod@dividend+1),f
  2443  03C9  2BCA               	goto	l5272
  2444                           	
  2445  03CA                     l3467:	
  2446                           	line	24
  2447                           	
  2448  03CA                     l5272:	
  2449  03CA  3001               	movlw	01h
  2450                           	
  2451  03CB                     u3865:
  2452  03CB  36F2               	lsrf	(___awmod@divisor+1),f
  2453  03CC  0CF1               	rrf	(___awmod@divisor),f
  2454  03CD  0B89               	decfsz	wreg,f
  2455  03CE  2BCB               	goto	u3865
  2456                           	line	25
  2457                           	
  2458  03CF                     l5274:	
  2459  03CF  3001               	movlw	low(01h)
  2460  03D0  02F6               	subwf	(___awmod@counter),f
  2461  03D1  1D03               	btfss	status,2
  2462  03D2  2BD4               	goto	u3871
  2463  03D3  2BD5               	goto	u3870
  2464  03D4                     u3871:
  2465  03D4  2BBB               	goto	l5268
  2466  03D5                     u3870:
  2467  03D5  2BD7               	goto	l5276
  2468                           	
  2469  03D6                     l3468:	
  2470  03D6  2BD7               	goto	l5276
  2471                           	line	26
  2472                           	
  2473  03D7                     l3462:	
  2474                           	line	27
  2475                           	
  2476  03D7                     l5276:	
  2477  03D7  0877               	movf	(___awmod@sign),w
  2478  03D8  1D03               	skipz
  2479  03D9  2BDB               	goto	u3880
  2480  03DA  2BE1               	goto	l5280
  2481  03DB                     u3880:
  2482                           	line	28
  2483                           	
  2484  03DB                     l5278:	
  2485  03DB  09F3               	comf	(___awmod@dividend),f
  2486  03DC  09F4               	comf	(___awmod@dividend+1),f
  2487  03DD  0AF3               	incf	(___awmod@dividend),f
  2488  03DE  1903               	skipnz
  2489  03DF  0AF4               	incf	(___awmod@dividend+1),f
  2490  03E0  2BE1               	goto	l5280
  2491                           	
  2492  03E1                     l3469:	
  2493                           	line	29
  2494                           	
  2495  03E1                     l5280:	
  2496  03E1  0874               	movf	(___awmod@dividend+1),w
  2497  03E2  01F2               	clrf	(?___awmod+1)
  2498  03E3  07F2               	addwf	(?___awmod+1)
  2499  03E4  0873               	movf	(___awmod@dividend),w
  2500  03E5  01F1               	clrf	(?___awmod)
  2501  03E6  07F1               	addwf	(?___awmod)
  2502                           
  2503  03E7  2BE8               	goto	l3470
  2504                           	
  2505  03E8                     l5282:	
  2506                           	line	30
  2507                           	
  2508  03E8                     l3470:	
  2509  03E8  0008               	return
  2510                           	opt stack 0
  2511                           GLOBAL	__end_of___awmod
  2512  03E9                     	__end_of___awmod:
  2513 ;; =============== function ___awmod ends ============
  2514                           
  2515                           	signat	___awmod,8314
  2516                           	global	___awdiv
  2517                           psect	text596,local,class=CODE,delta=2
  2518                           global __ptext596
  2519  031D                     __ptext596:
  2520                           
  2521 ;; *************** function ___awdiv *****************
  2522 ;; Defined at:
  2523 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  divisor         2    1[COMMON] int 
  2526 ;;  dividend        2    3[COMMON] int 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  quotient        2    8[COMMON] int 
  2529 ;;  sign            1    7[COMMON] unsigned char 
  2530 ;;  counter         1    6[COMMON] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  2    1[COMMON] int 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2540 ;;      Params:         4       0       0       0       0       0       0       0
  2541 ;;      Locals:         4       0       0       0       0       0       0       0
  2542 ;;      Temps:          1       0       0       0       0       0       0       0
  2543 ;;      Totals:         9       0       0       0       0       0       0       0
  2544 ;;Total ram usage:        9 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    2
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_setSegmentDisplayNumber
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           psect	text596
  2554                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  2555                           	line	5
  2556                           	global	__size_of___awdiv
  2557  006C                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2558                           	
  2559  031D                     ___awdiv:	
  2560                           	opt	stack 11
  2561                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2562                           	line	9
  2563                           	
  2564  031D                     l5210:	
  2565  031D  01F7               	clrf	(___awdiv@sign)
  2566                           	line	10
  2567  031E  1FF2               	btfss	(___awdiv@divisor+1),7
  2568  031F  2B21               	goto	u3701
  2569  0320  2B22               	goto	u3700
  2570  0321                     u3701:
  2571  0321  2B2B               	goto	l5214
  2572  0322                     u3700:
  2573                           	line	11
  2574                           	
  2575  0322                     l5212:	
  2576  0322  09F1               	comf	(___awdiv@divisor),f
  2577  0323  09F2               	comf	(___awdiv@divisor+1),f
  2578  0324  0AF1               	incf	(___awdiv@divisor),f
  2579  0325  1903               	skipnz
  2580  0326  0AF2               	incf	(___awdiv@divisor+1),f
  2581                           	line	12
  2582  0327  01F7               	clrf	(___awdiv@sign)
  2583  0328  1403               	bsf	status,0
  2584  0329  0DF7               	rlf	(___awdiv@sign),f
  2585  032A  2B2B               	goto	l5214
  2586                           	line	13
  2587                           	
  2588  032B                     l3392:	
  2589                           	line	14
  2590                           	
  2591  032B                     l5214:	
  2592  032B  1FF4               	btfss	(___awdiv@dividend+1),7
  2593  032C  2B2E               	goto	u3711
  2594  032D  2B2F               	goto	u3710
  2595  032E                     u3711:
  2596  032E  2B39               	goto	l5220
  2597  032F                     u3710:
  2598                           	line	15
  2599                           	
  2600  032F                     l5216:	
  2601  032F  09F3               	comf	(___awdiv@dividend),f
  2602  0330  09F4               	comf	(___awdiv@dividend+1),f
  2603  0331  0AF3               	incf	(___awdiv@dividend),f
  2604  0332  1903               	skipnz
  2605  0333  0AF4               	incf	(___awdiv@dividend+1),f
  2606                           	line	16
  2607                           	
  2608  0334                     l5218:	
  2609  0334  3001               	movlw	(01h)
  2610  0335  00F5               	movwf	(??___awdiv+0)+0
  2611  0336  0875               	movf	(??___awdiv+0)+0,w
  2612  0337  06F7               	xorwf	(___awdiv@sign),f
  2613  0338  2B39               	goto	l5220
  2614                           	line	17
  2615                           	
  2616  0339                     l3393:	
  2617                           	line	18
  2618                           	
  2619  0339                     l5220:	
  2620  0339  01F8               	clrf	(___awdiv@quotient)
  2621  033A  01F9               	clrf	(___awdiv@quotient+1)
  2622                           	line	19
  2623                           	
  2624  033B                     l5222:	
  2625  033B  0872               	movf	(___awdiv@divisor+1),w
  2626  033C  0471               	iorwf	(___awdiv@divisor),w
  2627  033D  1903               	skipnz
  2628  033E  2B40               	goto	u3721
  2629  033F  2B41               	goto	u3720
  2630  0340                     u3721:
  2631  0340  2B77               	goto	l5242
  2632  0341                     u3720:
  2633                           	line	20
  2634                           	
  2635  0341                     l5224:	
  2636  0341  01F6               	clrf	(___awdiv@counter)
  2637  0342  1403               	bsf	status,0
  2638  0343  0DF6               	rlf	(___awdiv@counter),f
  2639                           	line	21
  2640  0344  2B4F               	goto	l5230
  2641                           	
  2642  0345                     l3396:	
  2643                           	line	22
  2644                           	
  2645  0345                     l5226:	
  2646  0345  3001               	movlw	01h
  2647                           	
  2648  0346                     u3735:
  2649  0346  35F1               	lslf	(___awdiv@divisor),f
  2650  0347  0DF2               	rlf	(___awdiv@divisor+1),f
  2651  0348  0B89               	decfsz	wreg,f
  2652  0349  2B46               	goto	u3735
  2653                           	line	23
  2654                           	
  2655  034A                     l5228:	
  2656  034A  3001               	movlw	(01h)
  2657  034B  00F5               	movwf	(??___awdiv+0)+0
  2658  034C  0875               	movf	(??___awdiv+0)+0,w
  2659  034D  07F6               	addwf	(___awdiv@counter),f
  2660  034E  2B4F               	goto	l5230
  2661                           	line	24
  2662                           	
  2663  034F                     l3395:	
  2664                           	line	21
  2665                           	
  2666  034F                     l5230:	
  2667  034F  1FF2               	btfss	(___awdiv@divisor+1),(15)&7
  2668  0350  2B52               	goto	u3741
  2669  0351  2B53               	goto	u3740
  2670  0352                     u3741:
  2671  0352  2B45               	goto	l5226
  2672  0353                     u3740:
  2673  0353  2B55               	goto	l5232
  2674                           	
  2675  0354                     l3397:	
  2676  0354  2B55               	goto	l5232
  2677                           	line	25
  2678                           	
  2679  0355                     l3398:	
  2680                           	line	26
  2681                           	
  2682  0355                     l5232:	
  2683  0355  3001               	movlw	01h
  2684                           	
  2685  0356                     u3755:
  2686  0356  35F8               	lslf	(___awdiv@quotient),f
  2687  0357  0DF9               	rlf	(___awdiv@quotient+1),f
  2688  0358  0B89               	decfsz	wreg,f
  2689  0359  2B56               	goto	u3755
  2690                           	line	27
  2691  035A  0872               	movf	(___awdiv@divisor+1),w
  2692  035B  0274               	subwf	(___awdiv@dividend+1),w
  2693  035C  1D03               	skipz
  2694  035D  2B60               	goto	u3765
  2695  035E  0871               	movf	(___awdiv@divisor),w
  2696  035F  0273               	subwf	(___awdiv@dividend),w
  2697  0360                     u3765:
  2698  0360  1C03               	skipc
  2699  0361  2B63               	goto	u3761
  2700  0362  2B64               	goto	u3760
  2701  0363                     u3761:
  2702  0363  2B6A               	goto	l5238
  2703  0364                     u3760:
  2704                           	line	28
  2705                           	
  2706  0364                     l5234:	
  2707  0364  0871               	movf	(___awdiv@divisor),w
  2708  0365  02F3               	subwf	(___awdiv@dividend),f
  2709  0366  0872               	movf	(___awdiv@divisor+1),w
  2710  0367  3BF4               	subwfb	(___awdiv@dividend+1),f
  2711                           	line	29
  2712                           	
  2713  0368                     l5236:	
  2714  0368  1478               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2715  0369  2B6A               	goto	l5238
  2716                           	line	30
  2717                           	
  2718  036A                     l3399:	
  2719                           	line	31
  2720                           	
  2721  036A                     l5238:	
  2722  036A  3001               	movlw	01h
  2723                           	
  2724  036B                     u3775:
  2725  036B  36F2               	lsrf	(___awdiv@divisor+1),f
  2726  036C  0CF1               	rrf	(___awdiv@divisor),f
  2727  036D  0B89               	decfsz	wreg,f
  2728  036E  2B6B               	goto	u3775
  2729                           	line	32
  2730                           	
  2731  036F                     l5240:	
  2732  036F  3001               	movlw	low(01h)
  2733  0370  02F6               	subwf	(___awdiv@counter),f
  2734  0371  1D03               	btfss	status,2
  2735  0372  2B74               	goto	u3781
  2736  0373  2B75               	goto	u3780
  2737  0374                     u3781:
  2738  0374  2B55               	goto	l5232
  2739  0375                     u3780:
  2740  0375  2B77               	goto	l5242
  2741                           	
  2742  0376                     l3400:	
  2743  0376  2B77               	goto	l5242
  2744                           	line	33
  2745                           	
  2746  0377                     l3394:	
  2747                           	line	34
  2748                           	
  2749  0377                     l5242:	
  2750  0377  0877               	movf	(___awdiv@sign),w
  2751  0378  1D03               	skipz
  2752  0379  2B7B               	goto	u3790
  2753  037A  2B81               	goto	l5246
  2754  037B                     u3790:
  2755                           	line	35
  2756                           	
  2757  037B                     l5244:	
  2758  037B  09F8               	comf	(___awdiv@quotient),f
  2759  037C  09F9               	comf	(___awdiv@quotient+1),f
  2760  037D  0AF8               	incf	(___awdiv@quotient),f
  2761  037E  1903               	skipnz
  2762  037F  0AF9               	incf	(___awdiv@quotient+1),f
  2763  0380  2B81               	goto	l5246
  2764                           	
  2765  0381                     l3401:	
  2766                           	line	36
  2767                           	
  2768  0381                     l5246:	
  2769  0381  0879               	movf	(___awdiv@quotient+1),w
  2770  0382  01F2               	clrf	(?___awdiv+1)
  2771  0383  07F2               	addwf	(?___awdiv+1)
  2772  0384  0878               	movf	(___awdiv@quotient),w
  2773  0385  01F1               	clrf	(?___awdiv)
  2774  0386  07F1               	addwf	(?___awdiv)
  2775                           
  2776  0387  2B88               	goto	l3402
  2777                           	
  2778  0388                     l5248:	
  2779                           	line	37
  2780                           	
  2781  0388                     l3402:	
  2782  0388  0008               	return
  2783                           	opt stack 0
  2784                           GLOBAL	__end_of___awdiv
  2785  0389                     	__end_of___awdiv:
  2786 ;; =============== function ___awdiv ends ============
  2787                           
  2788                           	signat	___awdiv,8314
  2789                           	global	_SegmentDisplay_Main
  2790                           psect	text597,local,class=CODE,delta=2
  2791                           global __ptext597
  2792  021A                     __ptext597:
  2793                           
  2794 ;; *************** function _SegmentDisplay_Main *****************
  2795 ;; Defined at:
  2796 ;;		line 73 in file "G:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;		None               void
  2803 ;; Registers used:
  2804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2810 ;;      Params:         0       0       0       0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0
  2812 ;;      Temps:          2       0       0       0       0       0       0       0
  2813 ;;      Totals:         2       0       0       0       0       0       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    2
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           psect	text597
  2824                           	file	"G:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  2825                           	line	73
  2826                           	global	__size_of_SegmentDisplay_Main
  2827  0089                     	__size_of_SegmentDisplay_Main	equ	__end_of_SegmentDisplay_Main-_SegmentDisplay_Main
  2828                           	
  2829  021A                     _SegmentDisplay_Main:	
  2830                           	opt	stack 13
  2831                           ; Regs used in _SegmentDisplay_Main: [wreg-status,0]
  2832                           	line	74
  2833                           	
  2834  021A                     l4944:	
  2835                           ;SegmentDisplay_A2.c: 74: if(Segment->GO)
  2836  021A  087C               	movf	(_Segment),w
  2837  021B  3E15               	addlw	015h
  2838  021C  0086               	movwf	fsr1l
  2839  021D  0187               	clrf fsr1h	
  2840                           	
  2841  021E  1C81               	btfss	indf1,1
  2842  021F  2A21               	goto	u3201
  2843  0220  2A22               	goto	u3200
  2844  0221                     u3201:
  2845  0221  2AA2               	goto	l3243
  2846  0222                     u3200:
  2847                           	line	76
  2848                           	
  2849  0222                     l4946:	
  2850                           ;SegmentDisplay_A2.c: 75: {
  2851                           ;SegmentDisplay_A2.c: 76: Segment->Time++;
  2852  0222  3001               	movlw	(01h)
  2853  0223  00F1               	movwf	(??_SegmentDisplay_Main+0)+0
  2854  0224  087C               	movf	(_Segment),w
  2855  0225  3E19               	addlw	019h
  2856  0226  0086               	movwf	fsr1l
  2857  0227  0187               	clrf fsr1h	
  2858                           	
  2859  0228  0871               	movf	(??_SegmentDisplay_Main+0)+0,w
  2860  0229  0781               	addwf	indf1,f
  2861                           	line	77
  2862                           	
  2863  022A                     l4948:	
  2864                           ;SegmentDisplay_A2.c: 77: if(Segment->Time == 5)
  2865  022A  087C               	movf	(_Segment),w
  2866  022B  3E19               	addlw	019h
  2867  022C  0086               	movwf	fsr1l
  2868  022D  0187               	clrf fsr1h	
  2869                           	
  2870  022E  0801               	movf	indf1,w
  2871  022F  3A05               	xorlw	05h&0ffh
  2872  0230  1D03               	skipz
  2873  0231  2A33               	goto	u3211
  2874  0232  2A34               	goto	u3210
  2875  0233                     u3211:
  2876  0233  2AA2               	goto	l3243
  2877  0234                     u3210:
  2878                           	line	79
  2879                           	
  2880  0234                     l4950:	
  2881                           ;SegmentDisplay_A2.c: 78: {
  2882                           ;SegmentDisplay_A2.c: 79: Segment->Time=0;
  2883  0234  087C               	movf	(_Segment),w
  2884  0235  3E19               	addlw	019h
  2885  0236  0086               	movwf	fsr1l
  2886  0237  0187               	clrf fsr1h	
  2887                           	
  2888  0238  0181               	clrf	indf1
  2889                           	line	80
  2890                           	
  2891  0239                     l4952:	
  2892                           ;SegmentDisplay_A2.c: 80: PORTA&=0x0f;
  2893  0239  300F               	movlw	(0Fh)
  2894  023A  00F1               	movwf	(??_SegmentDisplay_Main+0)+0
  2895  023B  0871               	movf	(??_SegmentDisplay_Main+0)+0,w
  2896  023C  0020               	movlb 0	; select bank0
  2897  023D  058C               	andwf	(12),f	;volatile
  2898                           	line	81
  2899                           	
  2900  023E                     l4954:	
  2901                           ;SegmentDisplay_A2.c: 81: if(Segment->ComCount == 0)
  2902  023E  087C               	movf	(_Segment),w
  2903  023F  3E16               	addlw	016h
  2904  0240  0086               	movwf	fsr1l
  2905  0241  0187               	clrf fsr1h	
  2906                           	
  2907  0242  0881               	movf	indf1,f
  2908  0243  1D03               	skipz
  2909  0244  2A46               	goto	u3221
  2910  0245  2A47               	goto	u3220
  2911  0246                     u3221:
  2912  0246  2A49               	goto	l4958
  2913  0247                     u3220:
  2914                           	line	83
  2915                           	
  2916  0247                     l4956:	
  2917                           ;SegmentDisplay_A2.c: 82: {
  2918                           ;SegmentDisplay_A2.c: 83: RA4=1;
  2919  0247  160C               	bsf	(100/8),(100)&7
  2920                           	line	84
  2921                           ;SegmentDisplay_A2.c: 84: }
  2922  0248  2A70               	goto	l4970
  2923                           	line	85
  2924                           	
  2925  0249                     l3234:	
  2926                           	
  2927  0249                     l4958:	
  2928                           ;SegmentDisplay_A2.c: 85: else if(Segment->ComCount == 1)
  2929  0249  087C               	movf	(_Segment),w
  2930  024A  3E16               	addlw	016h
  2931  024B  0086               	movwf	fsr1l
  2932  024C  0187               	clrf fsr1h	
  2933                           	
  2934  024D  0801               	movf	indf1,w
  2935  024E  3A01               	xorlw	01h&0ffh
  2936  024F  1D03               	skipz
  2937  0250  2A52               	goto	u3231
  2938  0251  2A53               	goto	u3230
  2939  0252                     u3231:
  2940  0252  2A55               	goto	l4962
  2941  0253                     u3230:
  2942                           	line	87
  2943                           	
  2944  0253                     l4960:	
  2945                           ;SegmentDisplay_A2.c: 86: {
  2946                           ;SegmentDisplay_A2.c: 87: RA5=1;
  2947  0253  168C               	bsf	(101/8),(101)&7
  2948                           	line	88
  2949                           ;SegmentDisplay_A2.c: 88: }
  2950  0254  2A70               	goto	l4970
  2951                           	line	89
  2952                           	
  2953  0255                     l3236:	
  2954                           	
  2955  0255                     l4962:	
  2956                           ;SegmentDisplay_A2.c: 89: else if(Segment->ComCount == 2)
  2957  0255  087C               	movf	(_Segment),w
  2958  0256  3E16               	addlw	016h
  2959  0257  0086               	movwf	fsr1l
  2960  0258  0187               	clrf fsr1h	
  2961                           	
  2962  0259  0801               	movf	indf1,w
  2963  025A  3A02               	xorlw	02h&0ffh
  2964  025B  1D03               	skipz
  2965  025C  2A5E               	goto	u3241
  2966  025D  2A5F               	goto	u3240
  2967  025E                     u3241:
  2968  025E  2A61               	goto	l4966
  2969  025F                     u3240:
  2970                           	line	91
  2971                           	
  2972  025F                     l4964:	
  2973                           ;SegmentDisplay_A2.c: 90: {
  2974                           ;SegmentDisplay_A2.c: 91: RA6=1;
  2975  025F  170C               	bsf	(102/8),(102)&7
  2976                           	line	92
  2977                           ;SegmentDisplay_A2.c: 92: }
  2978  0260  2A70               	goto	l4970
  2979                           	line	93
  2980                           	
  2981  0261                     l3238:	
  2982                           	
  2983  0261                     l4966:	
  2984                           ;SegmentDisplay_A2.c: 93: else if(Segment->ComCount == 3)
  2985  0261  087C               	movf	(_Segment),w
  2986  0262  3E16               	addlw	016h
  2987  0263  0086               	movwf	fsr1l
  2988  0264  0187               	clrf fsr1h	
  2989                           	
  2990  0265  0801               	movf	indf1,w
  2991  0266  3A03               	xorlw	03h&0ffh
  2992  0267  1D03               	skipz
  2993  0268  2A6A               	goto	u3251
  2994  0269  2A6B               	goto	u3250
  2995  026A                     u3251:
  2996  026A  2A70               	goto	l4970
  2997  026B                     u3250:
  2998                           	line	95
  2999                           	
  3000  026B                     l4968:	
  3001                           ;SegmentDisplay_A2.c: 94: {
  3002                           ;SegmentDisplay_A2.c: 95: RA7=1;
  3003  026B  178C               	bsf	(103/8),(103)&7
  3004  026C  2A70               	goto	l4970
  3005                           	line	96
  3006                           	
  3007  026D                     l3240:	
  3008  026D  2A70               	goto	l4970
  3009                           	line	97
  3010                           	
  3011  026E                     l3239:	
  3012  026E  2A70               	goto	l4970
  3013                           	
  3014  026F                     l3237:	
  3015  026F  2A70               	goto	l4970
  3016                           	
  3017  0270                     l3235:	
  3018                           	
  3019  0270                     l4970:	
  3020                           ;SegmentDisplay_A2.c: 96: }
  3021                           ;SegmentDisplay_A2.c: 97: PORTB=Segment->Display[Segment->Num[Segment->ComCount]];
  3022  0270  087C               	movf	(_Segment),w
  3023  0271  3E16               	addlw	016h
  3024  0272  0086               	movwf	fsr1l
  3025  0273  0187               	clrf fsr1h	
  3026                           	
  3027  0274  0801               	movf	indf1,w
  3028  0275  3E11               	addlw	011h
  3029  0276  077C               	addwf	(_Segment),w
  3030  0277  00F1               	movwf	(??_SegmentDisplay_Main+0)+0
  3031  0278  0871               	movf	0+(??_SegmentDisplay_Main+0)+0,w
  3032  0279  0086               	movwf	fsr1l
  3033  027A  0187               	clrf fsr1h	
  3034                           	
  3035  027B  0801               	movf	indf1,w
  3036  027C  077C               	addwf	(_Segment),w
  3037  027D  00F2               	movwf	(??_SegmentDisplay_Main+1)+0
  3038  027E  0872               	movf	0+(??_SegmentDisplay_Main+1)+0,w
  3039  027F  0086               	movwf	fsr1l
  3040  0280  0187               	clrf fsr1h	
  3041                           	
  3042  0281  0801               	movf	indf1,w
  3043  0282  008D               	movwf	(13)	;volatile
  3044                           	line	98
  3045                           	
  3046  0283                     l4972:	
  3047                           ;SegmentDisplay_A2.c: 98: if(Segment->ComCount < Segment->DisplayCount)
  3048  0283  087C               	movf	(_Segment),w
  3049  0284  3E16               	addlw	016h
  3050  0285  0086               	movwf	fsr1l
  3051  0286  0187               	clrf fsr1h	
  3052                           	
  3053  0287  087C               	movf	(_Segment),w
  3054  0288  3E17               	addlw	017h
  3055  0289  0084               	movwf	fsr0l
  3056  028A  0185               	clrf fsr0h	
  3057                           	
  3058  028B  0800               	movf	indf0,w
  3059  028C  0201               	subwf	indf1,w
  3060  028D  1803               	skipnc
  3061  028E  2A90               	goto	u3261
  3062  028F  2A91               	goto	u3260
  3063  0290                     u3261:
  3064  0290  2A9A               	goto	l4976
  3065  0291                     u3260:
  3066                           	line	100
  3067                           	
  3068  0291                     l4974:	
  3069                           ;SegmentDisplay_A2.c: 99: {
  3070                           ;SegmentDisplay_A2.c: 100: Segment->ComCount++;
  3071  0291  3001               	movlw	(01h)
  3072  0292  00F1               	movwf	(??_SegmentDisplay_Main+0)+0
  3073  0293  087C               	movf	(_Segment),w
  3074  0294  3E16               	addlw	016h
  3075  0295  0086               	movwf	fsr1l
  3076  0296  0187               	clrf fsr1h	
  3077                           	
  3078  0297  0871               	movf	(??_SegmentDisplay_Main+0)+0,w
  3079  0298  0781               	addwf	indf1,f
  3080                           	line	101
  3081                           ;SegmentDisplay_A2.c: 101: }
  3082  0299  2AA2               	goto	l3243
  3083                           	line	102
  3084                           	
  3085  029A                     l3241:	
  3086                           	line	104
  3087                           	
  3088  029A                     l4976:	
  3089                           ;SegmentDisplay_A2.c: 102: else
  3090                           ;SegmentDisplay_A2.c: 103: {
  3091                           ;SegmentDisplay_A2.c: 104: Segment->ComCount=0;
  3092  029A  087C               	movf	(_Segment),w
  3093  029B  3E16               	addlw	016h
  3094  029C  0086               	movwf	fsr1l
  3095  029D  0187               	clrf fsr1h	
  3096                           	
  3097  029E  0181               	clrf	indf1
  3098  029F  2AA2               	goto	l3243
  3099                           	line	105
  3100                           	
  3101  02A0                     l3242:	
  3102  02A0  2AA2               	goto	l3243
  3103                           	line	106
  3104                           	
  3105  02A1                     l3233:	
  3106  02A1  2AA2               	goto	l3243
  3107                           	line	107
  3108                           	
  3109  02A2                     l3232:	
  3110                           	line	108
  3111                           	
  3112  02A2                     l3243:	
  3113  02A2  0008               	return
  3114                           	opt stack 0
  3115                           GLOBAL	__end_of_SegmentDisplay_Main
  3116  02A3                     	__end_of_SegmentDisplay_Main:
  3117 ;; =============== function _SegmentDisplay_Main ends ============
  3118                           
  3119                           	signat	_SegmentDisplay_Main,88
  3120                           	global	_SegmentDisplay_Initial
  3121                           psect	text598,local,class=CODE,delta=2
  3122                           global __ptext598
  3123  05BD                     __ptext598:
  3124                           
  3125 ;; *************** function _SegmentDisplay_Initial *****************
  3126 ;; Defined at:
  3127 ;;		line 9 in file "G:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;		None               void
  3134 ;; Registers used:
  3135 ;;		wreg, fsr1l, fsr1h
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3141 ;;      Params:         0       0       0       0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0       0       0
  3143 ;;      Temps:          1       0       0       0       0       0       0       0
  3144 ;;      Totals:         1       0       0       0       0       0       0       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    2
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           psect	text598
  3155                           	file	"G:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  3156                           	line	9
  3157                           	global	__size_of_SegmentDisplay_Initial
  3158  000F                     	__size_of_SegmentDisplay_Initial	equ	__end_of_SegmentDisplay_Initial-_SegmentDisplay_In
                                 itial
  3159                           	
  3160  05BD                     _SegmentDisplay_Initial:	
  3161                           	opt	stack 13
  3162                           ; Regs used in _SegmentDisplay_Initial: [wregfsr1]
  3163                           	line	10
  3164                           	
  3165  05BD                     l4938:	
  3166                           ;SegmentDisplay_A2.c: 10: Segment=&VarSegment;
  3167  05BD  3020               	movlw	(_VarSegment)&0ffh
  3168  05BE  00F1               	movwf	(??_SegmentDisplay_Initial+0)+0
  3169  05BF  0871               	movf	(??_SegmentDisplay_Initial+0)+0,w
  3170  05C0  00FC               	movwf	(_Segment)
  3171                           	line	11
  3172                           	
  3173  05C1                     l4940:	
  3174                           ;SegmentDisplay_A2.c: 11: Segment->Enable=1;
  3175  05C1  087C               	movf	(_Segment),w
  3176  05C2  3E15               	addlw	015h
  3177  05C3  0086               	movwf	fsr1l
  3178  05C4  0187               	clrf fsr1h	
  3179                           	
  3180  05C5  1401               	bsf	indf1,0
  3181                           	line	13
  3182                           	
  3183  05C6                     l4942:	
  3184                           ;SegmentDisplay_A2.c: 13: Segment->Dec=1;
  3185  05C6  087C               	movf	(_Segment),w
  3186  05C7  3E15               	addlw	015h
  3187  05C8  0086               	movwf	fsr1l
  3188  05C9  0187               	clrf fsr1h	
  3189                           	
  3190  05CA  1581               	bsf	indf1,3
  3191                           	line	18
  3192                           	
  3193  05CB                     l3212:	
  3194  05CB  0008               	return
  3195                           	opt stack 0
  3196                           GLOBAL	__end_of_SegmentDisplay_Initial
  3197  05CC                     	__end_of_SegmentDisplay_Initial:
  3198 ;; =============== function _SegmentDisplay_Initial ends ============
  3199                           
  3200                           	signat	_SegmentDisplay_Initial,88
  3201                           	global	_MainT_Initial
  3202                           psect	text599,local,class=CODE,delta=2
  3203                           global __ptext599
  3204  05CC                     __ptext599:
  3205                           
  3206 ;; *************** function _MainT_Initial *****************
  3207 ;; Defined at:
  3208 ;;		line 34 in file "G:\Program\PIC\Source_File\myMain.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;		None               void
  3215 ;; Registers used:
  3216 ;;		wreg, fsr1l, fsr1h
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3222 ;;      Params:         0       0       0       0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0       0       0       0
  3224 ;;      Temps:          1       0       0       0       0       0       0       0
  3225 ;;      Totals:         1       0       0       0       0       0       0       0
  3226 ;;Total ram usage:        1 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    2
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           psect	text599
  3236                           	file	"G:\Program\PIC\Source_File\myMain.c"
  3237                           	line	34
  3238                           	global	__size_of_MainT_Initial
  3239  000F                     	__size_of_MainT_Initial	equ	__end_of_MainT_Initial-_MainT_Initial
  3240                           	
  3241  05CC                     _MainT_Initial:	
  3242                           	opt	stack 13
  3243                           ; Regs used in _MainT_Initial: [wregfsr1]
  3244                           	line	35
  3245                           	
  3246  05CC                     l4932:	
  3247                           ;myMain.c: 35: TMain=&VarTMain;
  3248  05CC  303C               	movlw	(_VarTMain)&0ffh
  3249  05CD  00F1               	movwf	(??_MainT_Initial+0)+0
  3250  05CE  0871               	movf	(??_MainT_Initial+0)+0,w
  3251  05CF  0020               	movlb 0	; select bank0
  3252  05D0  00D6               	movwf	(_TMain)
  3253                           	line	36
  3254                           	
  3255  05D1                     l4934:	
  3256                           ;myMain.c: 36: TMain->FirstOpen=1;
  3257  05D1  0856               	movf	(_TMain),w
  3258  05D2  3E0D               	addlw	0Dh
  3259  05D3  0086               	movwf	fsr1l
  3260  05D4  0187               	clrf fsr1h	
  3261                           	
  3262  05D5  1401               	bsf	indf1,0
  3263                           	line	37
  3264                           	
  3265  05D6                     l4936:	
  3266                           ;myMain.c: 37: Product=&VarProduct;
  3267  05D6  30A0               	movlw	(_VarProduct)&0ffh
  3268  05D7  00F1               	movwf	(??_MainT_Initial+0)+0
  3269  05D8  0871               	movf	(??_MainT_Initial+0)+0,w
  3270  05D9  00D5               	movwf	(_Product)
  3271                           	line	38
  3272                           	
  3273  05DA                     l2192:	
  3274  05DA  0008               	return
  3275                           	opt stack 0
  3276                           GLOBAL	__end_of_MainT_Initial
  3277  05DB                     	__end_of_MainT_Initial:
  3278 ;; =============== function _MainT_Initial ends ============
  3279                           
  3280                           	signat	_MainT_Initial,88
  3281                           	global	_I2C_Master_Transmission
  3282                           psect	text600,local,class=CODE,delta=2
  3283                           global __ptext600
  3284  03E9                     __ptext600:
  3285                           
  3286 ;; *************** function _I2C_Master_Transmission *****************
  3287 ;; Defined at:
  3288 ;;		line 379 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  i               1    2[COMMON] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;		None               void
  3295 ;; Registers used:
  3296 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3302 ;;      Params:         0       0       0       0       0       0       0       0
  3303 ;;      Locals:         1       0       0       0       0       0       0       0
  3304 ;;      Temps:          1       0       0       0       0       0       0       0
  3305 ;;      Totals:         2       0       0       0       0       0       0       0
  3306 ;;Total ram usage:        2 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    2
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_I2C_Main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           psect	text600
  3316                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3317                           	line	379
  3318                           	global	__size_of_I2C_Master_Transmission
  3319  0060                     	__size_of_I2C_Master_Transmission	equ	__end_of_I2C_Master_Transmission-_I2C_Master_Tran
                                 smission
  3320                           	
  3321  03E9                     _I2C_Master_Transmission:	
  3322                           	opt	stack 12
  3323                           ; Regs used in _I2C_Master_Transmission: [wreg+fsr1l-status,0]
  3324                           	line	381
  3325                           	
  3326  03E9                     l4882:	
  3327                           ;MCU_16f1516_B1.c: 380: char i;
  3328                           ;MCU_16f1516_B1.c: 381: while(SEN);
  3329  03E9  2BEA               	goto	l1062
  3330                           	
  3331  03EA                     l1063:	
  3332                           	
  3333  03EA                     l1062:	
  3334  03EA  0024               	movlb 4	; select bank4
  3335  03EB  1816               	btfsc	(4272/8)^0200h,(4272)&7
  3336  03EC  2BEE               	goto	u3001
  3337  03ED  2BEF               	goto	u3000
  3338  03EE                     u3001:
  3339  03EE  2BEA               	goto	l1062
  3340  03EF                     u3000:
  3341                           	
  3342  03EF                     l1064:	
  3343                           	line	382
  3344                           ;MCU_16f1516_B1.c: 382: SEN=1;
  3345  03EF  1416               	bsf	(4272/8)^0200h,(4272)&7
  3346                           	line	384
  3347                           ;MCU_16f1516_B1.c: 384: while(SEN);
  3348  03F0  2BF1               	goto	l1065
  3349                           	
  3350  03F1                     l1066:	
  3351                           	
  3352  03F1                     l1065:	
  3353  03F1  1816               	btfsc	(4272/8)^0200h,(4272)&7
  3354  03F2  2BF4               	goto	u3011
  3355  03F3  2BF5               	goto	u3010
  3356  03F4                     u3011:
  3357  03F4  2BF1               	goto	l1065
  3358  03F5                     u3010:
  3359  03F5  2BF6               	goto	l4884
  3360                           	
  3361  03F6                     l1067:	
  3362                           	line	387
  3363                           	
  3364  03F6                     l4884:	
  3365                           ;MCU_16f1516_B1.c: 387: SSPBUF=0x10;
  3366  03F6  3010               	movlw	(010h)
  3367  03F7  0091               	movwf	(529)^0200h	;volatile
  3368                           	line	388
  3369                           ;MCU_16f1516_B1.c: 388: while(BF);
  3370  03F8  2BF9               	goto	l1068
  3371                           	
  3372  03F9                     l1069:	
  3373                           	
  3374  03F9                     l1068:	
  3375  03F9  1814               	btfsc	(4256/8)^0200h,(4256)&7
  3376  03FA  2BFC               	goto	u3021
  3377  03FB  2BFD               	goto	u3020
  3378  03FC                     u3021:
  3379  03FC  2BF9               	goto	l1068
  3380  03FD                     u3020:
  3381  03FD  2BFF               	goto	l1071
  3382                           	
  3383  03FE                     l1070:	
  3384                           	line	391
  3385                           ;MCU_16f1516_B1.c: 391: while(ACKSTAT);
  3386  03FE  2BFF               	goto	l1071
  3387                           	
  3388  03FF                     l1072:	
  3389                           	
  3390  03FF                     l1071:	
  3391  03FF  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  3392  0400  2C02               	goto	u3031
  3393  0401  2C03               	goto	u3030
  3394  0402                     u3031:
  3395  0402  2BFF               	goto	l1071
  3396  0403                     u3030:
  3397                           	
  3398  0403                     l1073:	
  3399                           	line	393
  3400                           ;MCU_16f1516_B1.c: 393: for(i=0;i<32;i++)
  3401  0403  01F2               	clrf	(I2C_Master_Transmission@i)
  3402                           	
  3403  0404                     l4886:	
  3404  0404  3020               	movlw	(020h)
  3405  0405  0272               	subwf	(I2C_Master_Transmission@i),w
  3406  0406  1C03               	skipc
  3407  0407  2C09               	goto	u3041
  3408  0408  2C0A               	goto	u3040
  3409  0409                     u3041:
  3410  0409  2C0D               	goto	l1076
  3411  040A                     u3040:
  3412  040A  2C36               	goto	l1085
  3413                           	
  3414  040B                     l4888:	
  3415  040B  2C36               	goto	l1085
  3416                           	line	394
  3417                           	
  3418  040C                     l1074:	
  3419                           	line	395
  3420                           ;MCU_16f1516_B1.c: 394: {
  3421                           ;MCU_16f1516_B1.c: 395: while(SEN);
  3422  040C  2C0D               	goto	l1076
  3423                           	
  3424  040D                     l1077:	
  3425                           	
  3426  040D                     l1076:	
  3427  040D  1816               	btfsc	(4272/8)^0200h,(4272)&7
  3428  040E  2C10               	goto	u3051
  3429  040F  2C11               	goto	u3050
  3430  0410                     u3051:
  3431  0410  2C0D               	goto	l1076
  3432  0411                     u3050:
  3433  0411  2C12               	goto	l4890
  3434                           	
  3435  0412                     l1078:	
  3436                           	line	396
  3437                           	
  3438  0412                     l4890:	
  3439                           ;MCU_16f1516_B1.c: 396: SSPBUF=I2C->BufferWriter[i];
  3440  0412  0872               	movf	(I2C_Master_Transmission@i),w
  3441  0413  3E20               	addlw	020h
  3442  0414  0020               	movlb 0	; select bank0
  3443  0415  073A               	addwf	(_I2C),w
  3444  0416  00F1               	movwf	(??_I2C_Master_Transmission+0)+0
  3445  0417  0871               	movf	0+(??_I2C_Master_Transmission+0)+0,w
  3446  0418  0086               	movwf	fsr1l
  3447  0419  3001               	movlw 1	; select bank2/3
  3448  041A  0087               	movwf fsr1h	
  3449                           	
  3450  041B  0801               	movf	indf1,w
  3451  041C  0024               	movlb 4	; select bank4
  3452  041D  0091               	movwf	(529)^0200h	;volatile
  3453                           	line	397
  3454                           ;MCU_16f1516_B1.c: 397: while(BF);
  3455  041E  2C1F               	goto	l1079
  3456                           	
  3457  041F                     l1080:	
  3458                           	
  3459  041F                     l1079:	
  3460  041F  1814               	btfsc	(4256/8)^0200h,(4256)&7
  3461  0420  2C22               	goto	u3061
  3462  0421  2C23               	goto	u3060
  3463  0422                     u3061:
  3464  0422  2C1F               	goto	l1079
  3465  0423                     u3060:
  3466  0423  2C25               	goto	l1082
  3467                           	
  3468  0424                     l1081:	
  3469                           	line	400
  3470                           ;MCU_16f1516_B1.c: 400: while(ACKSTAT);
  3471  0424  2C25               	goto	l1082
  3472                           	
  3473  0425                     l1083:	
  3474                           	
  3475  0425                     l1082:	
  3476  0425  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  3477  0426  2C28               	goto	u3071
  3478  0427  2C29               	goto	u3070
  3479  0428                     u3071:
  3480  0428  2C25               	goto	l1082
  3481  0429                     u3070:
  3482  0429  2C2A               	goto	l4892
  3483                           	
  3484  042A                     l1084:	
  3485                           	line	393
  3486                           	
  3487  042A                     l4892:	
  3488  042A  3001               	movlw	(01h)
  3489  042B  00F1               	movwf	(??_I2C_Master_Transmission+0)+0
  3490  042C  0871               	movf	(??_I2C_Master_Transmission+0)+0,w
  3491  042D  07F2               	addwf	(I2C_Master_Transmission@i),f
  3492                           	
  3493  042E                     l4894:	
  3494  042E  3020               	movlw	(020h)
  3495  042F  0272               	subwf	(I2C_Master_Transmission@i),w
  3496  0430  1C03               	skipc
  3497  0431  2C33               	goto	u3081
  3498  0432  2C34               	goto	u3080
  3499  0433                     u3081:
  3500  0433  2C0D               	goto	l1076
  3501  0434                     u3080:
  3502  0434  2C36               	goto	l1085
  3503                           	
  3504  0435                     l1075:	
  3505                           	line	403
  3506                           ;MCU_16f1516_B1.c: 401: }
  3507                           ;MCU_16f1516_B1.c: 403: while(SEN);
  3508  0435  2C36               	goto	l1085
  3509                           	
  3510  0436                     l1086:	
  3511                           	
  3512  0436                     l1085:	
  3513  0436  1816               	btfsc	(4272/8)^0200h,(4272)&7
  3514  0437  2C39               	goto	u3091
  3515  0438  2C3A               	goto	u3090
  3516  0439                     u3091:
  3517  0439  2C36               	goto	l1085
  3518  043A                     u3090:
  3519  043A  2C3D               	goto	l1088
  3520                           	
  3521  043B                     l1087:	
  3522                           	line	404
  3523                           ;MCU_16f1516_B1.c: 404: while(!PEN)
  3524  043B  2C3D               	goto	l1088
  3525                           	
  3526  043C                     l1089:	
  3527                           	line	405
  3528                           ;MCU_16f1516_B1.c: 405: PEN=1;
  3529  043C  1516               	bsf	(4274/8)^0200h,(4274)&7
  3530                           	
  3531  043D                     l1088:	
  3532                           	line	404
  3533  043D  1D16               	btfss	(4274/8)^0200h,(4274)&7
  3534  043E  2C40               	goto	u3101
  3535  043F  2C41               	goto	u3100
  3536  0440                     u3101:
  3537  0440  2C3C               	goto	l1089
  3538  0441                     u3100:
  3539  0441  2C43               	goto	l1091
  3540                           	
  3541  0442                     l1090:	
  3542                           	line	406
  3543                           ;MCU_16f1516_B1.c: 406: while(PEN);
  3544  0442  2C43               	goto	l1091
  3545                           	
  3546  0443                     l1092:	
  3547                           	
  3548  0443                     l1091:	
  3549  0443  1916               	btfsc	(4274/8)^0200h,(4274)&7
  3550  0444  2C46               	goto	u3111
  3551  0445  2C47               	goto	u3110
  3552  0446                     u3111:
  3553  0446  2C43               	goto	l1091
  3554  0447                     u3110:
  3555  0447  2C48               	goto	l1094
  3556                           	
  3557  0448                     l1093:	
  3558                           	line	409
  3559                           	
  3560  0448                     l1094:	
  3561  0448  0008               	return
  3562                           	opt stack 0
  3563                           GLOBAL	__end_of_I2C_Master_Transmission
  3564  0449                     	__end_of_I2C_Master_Transmission:
  3565 ;; =============== function _I2C_Master_Transmission ends ============
  3566                           
  3567                           	signat	_I2C_Master_Transmission,88
  3568                           	global	_I2C_Master_Reception
  3569                           psect	text601,local,class=CODE,delta=2
  3570                           global __ptext601
  3571  02A3                     __ptext601:
  3572                           
  3573 ;; *************** function _I2C_Master_Reception *****************
  3574 ;; Defined at:
  3575 ;;		line 412 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  i               1    3[COMMON] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;		None               void
  3582 ;; Registers used:
  3583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3589 ;;      Params:         0       0       0       0       0       0       0       0
  3590 ;;      Locals:         1       0       0       0       0       0       0       0
  3591 ;;      Temps:          2       0       0       0       0       0       0       0
  3592 ;;      Totals:         3       0       0       0       0       0       0       0
  3593 ;;Total ram usage:        3 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    2
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_I2C_Main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           psect	text601
  3603                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3604                           	line	412
  3605                           	global	__size_of_I2C_Master_Reception
  3606  007A                     	__size_of_I2C_Master_Reception	equ	__end_of_I2C_Master_Reception-_I2C_Master_Reception
  3607                           	
  3608  02A3                     _I2C_Master_Reception:	
  3609                           	opt	stack 12
  3610                           ; Regs used in _I2C_Master_Reception: [wreg+fsr1l-status,0]
  3611                           	line	414
  3612                           	
  3613  02A3                     l4866:	
  3614                           ;MCU_16f1516_B1.c: 413: char i;
  3615                           ;MCU_16f1516_B1.c: 414: while(SEN);
  3616  02A3  2AA4               	goto	l1097
  3617                           	
  3618  02A4                     l1098:	
  3619                           	
  3620  02A4                     l1097:	
  3621  02A4  0024               	movlb 4	; select bank4
  3622  02A5  1816               	btfsc	(4272/8)^0200h,(4272)&7
  3623  02A6  2AA8               	goto	u2841
  3624  02A7  2AA9               	goto	u2840
  3625  02A8                     u2841:
  3626  02A8  2AA4               	goto	l1097
  3627  02A9                     u2840:
  3628                           	
  3629  02A9                     l1099:	
  3630                           	line	415
  3631                           ;MCU_16f1516_B1.c: 415: SEN=1;
  3632  02A9  1416               	bsf	(4272/8)^0200h,(4272)&7
  3633                           	line	416
  3634                           ;MCU_16f1516_B1.c: 416: while(SEN);
  3635  02AA  2AAB               	goto	l1100
  3636                           	
  3637  02AB                     l1101:	
  3638                           	
  3639  02AB                     l1100:	
  3640  02AB  1816               	btfsc	(4272/8)^0200h,(4272)&7
  3641  02AC  2AAE               	goto	u2851
  3642  02AD  2AAF               	goto	u2850
  3643  02AE                     u2851:
  3644  02AE  2AAB               	goto	l1100
  3645  02AF                     u2850:
  3646  02AF  2AB0               	goto	l4868
  3647                           	
  3648  02B0                     l1102:	
  3649                           	line	419
  3650                           	
  3651  02B0                     l4868:	
  3652                           ;MCU_16f1516_B1.c: 419: SSPBUF=0x11;
  3653  02B0  3011               	movlw	(011h)
  3654  02B1  0091               	movwf	(529)^0200h	;volatile
  3655                           	line	422
  3656                           ;MCU_16f1516_B1.c: 422: while(BF);
  3657  02B2  2AB3               	goto	l1103
  3658                           	
  3659  02B3                     l1104:	
  3660                           	
  3661  02B3                     l1103:	
  3662  02B3  1814               	btfsc	(4256/8)^0200h,(4256)&7
  3663  02B4  2AB6               	goto	u2861
  3664  02B5  2AB7               	goto	u2860
  3665  02B6                     u2861:
  3666  02B6  2AB3               	goto	l1103
  3667  02B7                     u2860:
  3668  02B7  2AB9               	goto	l1106
  3669                           	
  3670  02B8                     l1105:	
  3671                           	line	423
  3672                           ;MCU_16f1516_B1.c: 423: while(ACKSTAT);
  3673  02B8  2AB9               	goto	l1106
  3674                           	
  3675  02B9                     l1107:	
  3676                           	
  3677  02B9                     l1106:	
  3678  02B9  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  3679  02BA  2ABC               	goto	u2871
  3680  02BB  2ABD               	goto	u2870
  3681  02BC                     u2871:
  3682  02BC  2AB9               	goto	l1106
  3683  02BD                     u2870:
  3684                           	
  3685  02BD                     l1108:	
  3686                           	line	426
  3687                           ;MCU_16f1516_B1.c: 426: for(i=0;i<32;i++)
  3688  02BD  01F3               	clrf	(I2C_Master_Reception@i)
  3689                           	
  3690  02BE                     l4870:	
  3691  02BE  3020               	movlw	(020h)
  3692  02BF  0273               	subwf	(I2C_Master_Reception@i),w
  3693  02C0  1C03               	skipc
  3694  02C1  2AC3               	goto	u2881
  3695  02C2  2AC4               	goto	u2880
  3696  02C3                     u2881:
  3697  02C3  2AC7               	goto	l1111
  3698  02C4                     u2880:
  3699  02C4  2AF8               	goto	l1123
  3700                           	
  3701  02C5                     l4872:	
  3702  02C5  2AF8               	goto	l1123
  3703                           	line	427
  3704                           	
  3705  02C6                     l1109:	
  3706                           	line	428
  3707                           ;MCU_16f1516_B1.c: 427: {
  3708                           ;MCU_16f1516_B1.c: 428: while(SEN);
  3709  02C6  2AC7               	goto	l1111
  3710                           	
  3711  02C7                     l1112:	
  3712                           	
  3713  02C7                     l1111:	
  3714  02C7  1816               	btfsc	(4272/8)^0200h,(4272)&7
  3715  02C8  2ACA               	goto	u2891
  3716  02C9  2ACB               	goto	u2890
  3717  02CA                     u2891:
  3718  02CA  2AC7               	goto	l1111
  3719  02CB                     u2890:
  3720  02CB  2ACD               	goto	l1114
  3721                           	
  3722  02CC                     l1113:	
  3723                           	line	429
  3724                           ;MCU_16f1516_B1.c: 429: while(RCEN);
  3725  02CC  2ACD               	goto	l1114
  3726                           	
  3727  02CD                     l1115:	
  3728                           	
  3729  02CD                     l1114:	
  3730  02CD  1996               	btfsc	(4275/8)^0200h,(4275)&7
  3731  02CE  2AD0               	goto	u2901
  3732  02CF  2AD1               	goto	u2900
  3733  02D0                     u2901:
  3734  02D0  2ACD               	goto	l1114
  3735  02D1                     u2900:
  3736                           	
  3737  02D1                     l1116:	
  3738                           	line	430
  3739                           ;MCU_16f1516_B1.c: 430: RCEN=1;
  3740  02D1  1596               	bsf	(4275/8)^0200h,(4275)&7
  3741                           	line	431
  3742                           ;MCU_16f1516_B1.c: 431: while(RCEN);
  3743  02D2  2AD3               	goto	l1117
  3744                           	
  3745  02D3                     l1118:	
  3746                           	
  3747  02D3                     l1117:	
  3748  02D3  1996               	btfsc	(4275/8)^0200h,(4275)&7
  3749  02D4  2AD6               	goto	u2911
  3750  02D5  2AD7               	goto	u2910
  3751  02D6                     u2911:
  3752  02D6  2AD3               	goto	l1117
  3753  02D7                     u2910:
  3754  02D7  2AD8               	goto	l4874
  3755                           	
  3756  02D8                     l1119:	
  3757                           	line	432
  3758                           	
  3759  02D8                     l4874:	
  3760                           ;MCU_16f1516_B1.c: 432: I2C->BufferReader[i]=SSPBUF;
  3761  02D8  0811               	movf	(529)^0200h,w	;volatile
  3762  02D9  00F1               	movwf	(??_I2C_Master_Reception+0)+0
  3763  02DA  0873               	movf	(I2C_Master_Reception@i),w
  3764  02DB  0020               	movlb 0	; select bank0
  3765  02DC  073A               	addwf	(_I2C),w
  3766  02DD  00F2               	movwf	(??_I2C_Master_Reception+1)+0
  3767  02DE  0872               	movf	0+(??_I2C_Master_Reception+1)+0,w
  3768  02DF  0086               	movwf	fsr1l
  3769  02E0  3001               	movlw 1	; select bank2/3
  3770  02E1  0087               	movwf fsr1h	
  3771                           	
  3772  02E2  0871               	movf	(??_I2C_Master_Reception+0)+0,w
  3773  02E3  0081               	movwf	indf1
  3774                           	line	435
  3775                           	
  3776  02E4                     l4876:	
  3777                           ;MCU_16f1516_B1.c: 435: ACKEN=1;
  3778  02E4  0024               	movlb 4	; select bank4
  3779  02E5  1616               	bsf	(4276/8)^0200h,(4276)&7
  3780                           	line	436
  3781                           ;MCU_16f1516_B1.c: 436: while(ACKEN);
  3782  02E6  2AE7               	goto	l1120
  3783                           	
  3784  02E7                     l1121:	
  3785                           	
  3786  02E7                     l1120:	
  3787  02E7  1A16               	btfsc	(4276/8)^0200h,(4276)&7
  3788  02E8  2AEA               	goto	u2921
  3789  02E9  2AEB               	goto	u2920
  3790  02EA                     u2921:
  3791  02EA  2AE7               	goto	l1120
  3792  02EB                     u2920:
  3793  02EB  2AEC               	goto	l4878
  3794                           	
  3795  02EC                     l1122:	
  3796                           	line	426
  3797                           	
  3798  02EC                     l4878:	
  3799  02EC  3001               	movlw	(01h)
  3800  02ED  00F1               	movwf	(??_I2C_Master_Reception+0)+0
  3801  02EE  0871               	movf	(??_I2C_Master_Reception+0)+0,w
  3802  02EF  07F3               	addwf	(I2C_Master_Reception@i),f
  3803                           	
  3804  02F0                     l4880:	
  3805  02F0  3020               	movlw	(020h)
  3806  02F1  0273               	subwf	(I2C_Master_Reception@i),w
  3807  02F2  1C03               	skipc
  3808  02F3  2AF5               	goto	u2931
  3809  02F4  2AF6               	goto	u2930
  3810  02F5                     u2931:
  3811  02F5  2AC7               	goto	l1111
  3812  02F6                     u2930:
  3813  02F6  2AF8               	goto	l1123
  3814                           	
  3815  02F7                     l1110:	
  3816                           	line	438
  3817                           ;MCU_16f1516_B1.c: 437: }
  3818                           ;MCU_16f1516_B1.c: 438: while(RCEN);
  3819  02F7  2AF8               	goto	l1123
  3820                           	
  3821  02F8                     l1124:	
  3822                           	
  3823  02F8                     l1123:	
  3824  02F8  1996               	btfsc	(4275/8)^0200h,(4275)&7
  3825  02F9  2AFB               	goto	u2941
  3826  02FA  2AFC               	goto	u2940
  3827  02FB                     u2941:
  3828  02FB  2AF8               	goto	l1123
  3829  02FC                     u2940:
  3830                           	
  3831  02FC                     l1125:	
  3832                           	line	439
  3833                           ;MCU_16f1516_B1.c: 439: RCEN=1;
  3834  02FC  1596               	bsf	(4275/8)^0200h,(4275)&7
  3835                           	line	440
  3836                           ;MCU_16f1516_B1.c: 440: while(RCEN);
  3837  02FD  2AFE               	goto	l1126
  3838                           	
  3839  02FE                     l1127:	
  3840                           	
  3841  02FE                     l1126:	
  3842  02FE  1996               	btfsc	(4275/8)^0200h,(4275)&7
  3843  02FF  2B01               	goto	u2951
  3844  0300  2B02               	goto	u2950
  3845  0301                     u2951:
  3846  0301  2AFE               	goto	l1126
  3847  0302                     u2950:
  3848                           	
  3849  0302                     l1128:	
  3850                           	line	441
  3851                           ;MCU_16f1516_B1.c: 441: ACKEN=1;
  3852  0302  1616               	bsf	(4276/8)^0200h,(4276)&7
  3853                           	line	442
  3854                           ;MCU_16f1516_B1.c: 442: while(ACKEN);
  3855  0303  2B04               	goto	l1129
  3856                           	
  3857  0304                     l1130:	
  3858                           	
  3859  0304                     l1129:	
  3860  0304  1A16               	btfsc	(4276/8)^0200h,(4276)&7
  3861  0305  2B07               	goto	u2961
  3862  0306  2B08               	goto	u2960
  3863  0307                     u2961:
  3864  0307  2B04               	goto	l1129
  3865  0308                     u2960:
  3866  0308  2B0A               	goto	l1132
  3867                           	
  3868  0309                     l1131:	
  3869                           	line	445
  3870                           ;MCU_16f1516_B1.c: 445: while(SEN);
  3871  0309  2B0A               	goto	l1132
  3872                           	
  3873  030A                     l1133:	
  3874                           	
  3875  030A                     l1132:	
  3876  030A  1816               	btfsc	(4272/8)^0200h,(4272)&7
  3877  030B  2B0D               	goto	u2971
  3878  030C  2B0E               	goto	u2970
  3879  030D                     u2971:
  3880  030D  2B0A               	goto	l1132
  3881  030E                     u2970:
  3882  030E  2B11               	goto	l1135
  3883                           	
  3884  030F                     l1134:	
  3885                           	line	446
  3886                           ;MCU_16f1516_B1.c: 446: while(!PEN)
  3887  030F  2B11               	goto	l1135
  3888                           	
  3889  0310                     l1136:	
  3890                           	line	447
  3891                           ;MCU_16f1516_B1.c: 447: PEN=1;
  3892  0310  1516               	bsf	(4274/8)^0200h,(4274)&7
  3893                           	
  3894  0311                     l1135:	
  3895                           	line	446
  3896  0311  1D16               	btfss	(4274/8)^0200h,(4274)&7
  3897  0312  2B14               	goto	u2981
  3898  0313  2B15               	goto	u2980
  3899  0314                     u2981:
  3900  0314  2B10               	goto	l1136
  3901  0315                     u2980:
  3902  0315  2B17               	goto	l1138
  3903                           	
  3904  0316                     l1137:	
  3905                           	line	448
  3906                           ;MCU_16f1516_B1.c: 448: while(PEN);
  3907  0316  2B17               	goto	l1138
  3908                           	
  3909  0317                     l1139:	
  3910                           	
  3911  0317                     l1138:	
  3912  0317  1916               	btfsc	(4274/8)^0200h,(4274)&7
  3913  0318  2B1A               	goto	u2991
  3914  0319  2B1B               	goto	u2990
  3915  031A                     u2991:
  3916  031A  2B17               	goto	l1138
  3917  031B                     u2990:
  3918  031B  2B1C               	goto	l1141
  3919                           	
  3920  031C                     l1140:	
  3921                           	line	451
  3922                           	
  3923  031C                     l1141:	
  3924  031C  0008               	return
  3925                           	opt stack 0
  3926                           GLOBAL	__end_of_I2C_Master_Reception
  3927  031D                     	__end_of_I2C_Master_Reception:
  3928 ;; =============== function _I2C_Master_Reception ends ============
  3929                           
  3930                           	signat	_I2C_Master_Reception,88
  3931                           	global	_I2C_Set
  3932                           psect	text602,local,class=CODE,delta=2
  3933                           global __ptext602
  3934  05DB                     __ptext602:
  3935                           
  3936 ;; *************** function _I2C_Set *****************
  3937 ;; Defined at:
  3938 ;;		line 234 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;		None
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;		None
  3943 ;; Return value:  Size  Location     Type
  3944 ;;		None               void
  3945 ;; Registers used:
  3946 ;;		wreg, status,2
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3952 ;;      Params:         0       0       0       0       0       0       0       0
  3953 ;;      Locals:         0       0       0       0       0       0       0       0
  3954 ;;      Temps:          1       0       0       0       0       0       0       0
  3955 ;;      Totals:         1       0       0       0       0       0       0       0
  3956 ;;Total ram usage:        1 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    2
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_Mcu_Initial
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           psect	text602
  3966                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3967                           	line	234
  3968                           	global	__size_of_I2C_Set
  3969  000E                     	__size_of_I2C_Set	equ	__end_of_I2C_Set-_I2C_Set
  3970                           	
  3971  05DB                     _I2C_Set:	
  3972                           	opt	stack 12
  3973                           ; Regs used in _I2C_Set: [wreg+status,2]
  3974                           	line	235
  3975                           	
  3976  05DB                     l4832:	
  3977                           ;MCU_16f1516_B1.c: 235: I2C=&VarI2C;
  3978  05DB  3020               	movlw	(_VarI2C)&0ffh
  3979  05DC  00F1               	movwf	(??_I2C_Set+0)+0
  3980  05DD  0871               	movf	(??_I2C_Set+0)+0,w
  3981  05DE  0020               	movlb 0	; select bank0
  3982  05DF  00BA               	movwf	(_I2C)
  3983                           	line	237
  3984                           ;MCU_16f1516_B1.c: 237: SSPADD = 0x09;
  3985  05E0  3009               	movlw	(09h)
  3986  05E1  0024               	movlb 4	; select bank4
  3987  05E2  0092               	movwf	(530)^0200h	;volatile
  3988                           	line	238
  3989                           ;MCU_16f1516_B1.c: 238: SSPSTAT = 0x80;
  3990  05E3  3080               	movlw	(080h)
  3991  05E4  0094               	movwf	(532)^0200h	;volatile
  3992                           	line	239
  3993                           	
  3994  05E5                     l4834:	
  3995                           ;MCU_16f1516_B1.c: 239: SSPCON2 = 0;
  3996  05E5  0196               	clrf	(534)^0200h	;volatile
  3997                           	line	241
  3998                           	
  3999  05E6                     l4836:	
  4000                           ;MCU_16f1516_B1.c: 241: SSPCON1=0b101000;
  4001  05E6  3028               	movlw	(028h)
  4002  05E7  0095               	movwf	(533)^0200h	;volatile
  4003                           	line	258
  4004                           	
  4005  05E8                     l1042:	
  4006  05E8  0008               	return
  4007                           	opt stack 0
  4008                           GLOBAL	__end_of_I2C_Set
  4009  05E9                     	__end_of_I2C_Set:
  4010 ;; =============== function _I2C_Set ends ============
  4011                           
  4012                           	signat	_I2C_Set,88
  4013                           	global	_TMR1_Set
  4014                           psect	text603,local,class=CODE,delta=2
  4015                           global __ptext603
  4016  05AD                     __ptext603:
  4017                           
  4018 ;; *************** function _TMR1_Set *****************
  4019 ;; Defined at:
  4020 ;;		line 115 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;		None               void
  4027 ;; Registers used:
  4028 ;;		wreg
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4034 ;;      Params:         0       0       0       0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0
  4036 ;;      Temps:          1       0       0       0       0       0       0       0
  4037 ;;      Totals:         1       0       0       0       0       0       0       0
  4038 ;;Total ram usage:        1 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    2
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_Mcu_Initial
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           psect	text603
  4048                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4049                           	line	115
  4050                           	global	__size_of_TMR1_Set
  4051  0010                     	__size_of_TMR1_Set	equ	__end_of_TMR1_Set-_TMR1_Set
  4052                           	
  4053  05AD                     _TMR1_Set:	
  4054                           	opt	stack 12
  4055                           ; Regs used in _TMR1_Set: [wreg]
  4056                           	line	116
  4057                           	
  4058  05AD                     l4824:	
  4059                           ;MCU_16f1516_B1.c: 116: Timer1=&VarTimer1;
  4060  05AD  304B               	movlw	(_VarTimer1)&0ffh
  4061  05AE  00F1               	movwf	(??_TMR1_Set+0)+0
  4062  05AF  0871               	movf	(??_TMR1_Set+0)+0,w
  4063  05B0  0020               	movlb 0	; select bank0
  4064  05B1  00BB               	movwf	(_Timer1)
  4065                           	line	117
  4066                           ;MCU_16f1516_B1.c: 117: T1CON=(0x40 | 0x00 | 0x01);
  4067  05B2  3041               	movlw	(041h)
  4068  05B3  0098               	movwf	(24)	;volatile
  4069                           	line	118
  4070                           ;MCU_16f1516_B1.c: 118: TMR1H=((65536-700)/256);
  4071  05B4  30FD               	movlw	(0FDh)
  4072  05B5  0097               	movwf	(23)	;volatile
  4073                           	line	119
  4074                           ;MCU_16f1516_B1.c: 119: TMR1L=((65536-700)%256);
  4075  05B6  3044               	movlw	(044h)
  4076  05B7  0096               	movwf	(22)	;volatile
  4077                           	line	120
  4078                           	
  4079  05B8                     l4826:	
  4080                           ;MCU_16f1516_B1.c: 120: TMR1IE=1;
  4081  05B8  0021               	movlb 1	; select bank1
  4082  05B9  1411               	bsf	(1160/8)^080h,(1160)&7
  4083                           	line	121
  4084                           	
  4085  05BA                     l4828:	
  4086                           ;MCU_16f1516_B1.c: 121: PEIE=1;
  4087  05BA  170B               	bsf	(94/8),(94)&7
  4088                           	line	122
  4089                           	
  4090  05BB                     l4830:	
  4091                           ;MCU_16f1516_B1.c: 122: GIE=1;
  4092  05BB  178B               	bsf	(95/8),(95)&7
  4093                           	line	123
  4094                           	
  4095  05BC                     l1034:	
  4096  05BC  0008               	return
  4097                           	opt stack 0
  4098                           GLOBAL	__end_of_TMR1_Set
  4099  05BD                     	__end_of_TMR1_Set:
  4100 ;; =============== function _TMR1_Set ends ============
  4101                           
  4102                           	signat	_TMR1_Set,88
  4103                           	global	_IO_Set
  4104                           psect	text604,local,class=CODE,delta=2
  4105                           global __ptext604
  4106  0571                     __ptext604:
  4107                           
  4108 ;; *************** function _IO_Set *****************
  4109 ;; Defined at:
  4110 ;;		line 38 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;		None               void
  4117 ;; Registers used:
  4118 ;;		wreg, status,2
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4124 ;;      Params:         0       0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    2
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_Mcu_Initial
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           psect	text604
  4138                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4139                           	line	38
  4140                           	global	__size_of_IO_Set
  4141  0016                     	__size_of_IO_Set	equ	__end_of_IO_Set-_IO_Set
  4142                           	
  4143  0571                     _IO_Set:	
  4144                           	opt	stack 12
  4145                           ; Regs used in _IO_Set: [wreg+status,2]
  4146                           	line	39
  4147                           	
  4148  0571                     l4808:	
  4149                           ;MCU_16f1516_B1.c: 39: TRISA=0b00001001;;
  4150  0571  3009               	movlw	(09h)
  4151  0572  0021               	movlb 1	; select bank1
  4152  0573  008C               	movwf	(140)^080h	;volatile
  4153                           	line	40
  4154                           	
  4155  0574                     l4810:	
  4156                           ;MCU_16f1516_B1.c: 40: TRISB=0b00000000;;
  4157  0574  018D               	clrf	(141)^080h	;volatile
  4158                           	line	41
  4159                           	
  4160  0575                     l4812:	
  4161                           ;MCU_16f1516_B1.c: 41: TRISC=0b00011001;;
  4162  0575  3019               	movlw	(019h)
  4163  0576  008E               	movwf	(142)^080h	;volatile
  4164                           	line	42
  4165                           ;MCU_16f1516_B1.c: 42: LATA=0b00000000;;
  4166  0577  0022               	movlb 2	; select bank2
  4167  0578  018C               	clrf	(268)^0100h	;volatile
  4168                           	line	43
  4169                           ;MCU_16f1516_B1.c: 43: LATB=0b00000000;;
  4170  0579  018D               	clrf	(269)^0100h	;volatile
  4171                           	line	44
  4172                           ;MCU_16f1516_B1.c: 44: LATC=0b00000000;;
  4173  057A  018E               	clrf	(270)^0100h	;volatile
  4174                           	line	45
  4175                           	
  4176  057B                     l4814:	
  4177                           ;MCU_16f1516_B1.c: 45: ANSELA=0b00000001;;
  4178  057B  3001               	movlw	(01h)
  4179  057C  0023               	movlb 3	; select bank3
  4180  057D  008C               	movwf	(396)^0180h	;volatile
  4181                           	line	46
  4182                           	
  4183  057E                     l4816:	
  4184                           ;MCU_16f1516_B1.c: 46: ANSELB=0b00000000;;
  4185  057E  018D               	clrf	(397)^0180h	;volatile
  4186                           	line	47
  4187                           	
  4188  057F                     l4818:	
  4189                           ;MCU_16f1516_B1.c: 47: ANSELC=0b00000000;;
  4190  057F  018E               	clrf	(398)^0180h	;volatile
  4191                           	line	48
  4192                           	
  4193  0580                     l4820:	
  4194                           ;MCU_16f1516_B1.c: 48: PORTA=0b00001001;;
  4195  0580  3009               	movlw	(09h)
  4196  0581  0020               	movlb 0	; select bank0
  4197  0582  008C               	movwf	(12)	;volatile
  4198                           	line	49
  4199                           ;MCU_16f1516_B1.c: 49: PORTB=0b00000000;;
  4200  0583  018D               	clrf	(13)	;volatile
  4201                           	line	50
  4202                           	
  4203  0584                     l4822:	
  4204                           ;MCU_16f1516_B1.c: 50: PORTC=0b00011001;;
  4205  0584  3019               	movlw	(019h)
  4206  0585  008E               	movwf	(14)	;volatile
  4207                           	line	51
  4208                           	
  4209  0586                     l1028:	
  4210  0586  0008               	return
  4211                           	opt stack 0
  4212                           GLOBAL	__end_of_IO_Set
  4213  0587                     	__end_of_IO_Set:
  4214 ;; =============== function _IO_Set ends ============
  4215                           
  4216                           	signat	_IO_Set,88
  4217                           	global	_ISR
  4218                           psect	intentry,class=CODE,delta=2
  4219                           global __pintentry
  4220  0004                     __pintentry:
  4221                           
  4222 ;; *************** function _ISR *****************
  4223 ;; Defined at:
  4224 ;;		line 57 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;		None               void
  4231 ;; Registers used:
  4232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4238 ;;      Params:         0       0       0       0       0       0       0       0
  4239 ;;      Locals:         0       0       0       0       0       0       0       0
  4240 ;;      Temps:          1       0       0       0       0       0       0       0
  4241 ;;      Totals:         1       0       0       0       0       0       0       0
  4242 ;;Total ram usage:        1 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    1
  4245 ;; This function calls:
  4246 ;;		_TMR1_ISR
  4247 ;;		_I2C_ISR
  4248 ;; This function is called by:
  4249 ;;		Interrupt level 1
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           psect	intentry
  4253                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4254                           	line	57
  4255                           	global	__size_of_ISR
  4256  0011                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  4257                           	
  4258  0004                     _ISR:	
  4259                           	opt	stack 11
  4260                           ; Regs used in _ISR: [wreg+fsr1l-status,0+pclath+cstack]
  4261                           psect	intentry
  4262  0004  3180               	pagesel	$
  4263  0005  0020               	movlb 0	; select bank0
  4264  0006  087F               	movf	btemp+1,w
  4265  0007  00F0               	movwf	(??_ISR+0)
  4266                           	line	58
  4267                           	
  4268  0008                     i1l4838:	
  4269                           ;MCU_16f1516_B1.c: 58: _nop();
  4270  0008  0000               	nop
  4271                           	line	60
  4272                           ;MCU_16f1516_B1.c: 60: _nop();
  4273  0009  0000               	nop
  4274                           	line	62
  4275                           	
  4276  000A                     i1l4840:	
  4277                           ;MCU_16f1516_B1.c: 62: TMR1_ISR();
  4278  000A  3184  24A8  3180   	fcall	_TMR1_ISR
  4279                           	line	66
  4280                           	
  4281  000D                     i1l4842:	
  4282                           ;MCU_16f1516_B1.c: 66: _nop();
  4283  000D  0000               	nop
  4284                           	line	70
  4285                           ;MCU_16f1516_B1.c: 68: ;;
  4286                           ;MCU_16f1516_B1.c: 70: I2C_ISR();
  4287  000E  3185  2587  3180   	fcall	_I2C_ISR
  4288                           	line	71
  4289                           	
  4290  0011                     i1l1031:	
  4291  0011  0870               	movf	(??_ISR+0),w
  4292  0012  0020               	movlb 0	; select bank0
  4293  0013  00FF               	movwf	btemp+1
  4294  0014  0009               	retfie
  4295                           	opt stack 0
  4296                           GLOBAL	__end_of_ISR
  4297  0015                     	__end_of_ISR:
  4298 ;; =============== function _ISR ends ============
  4299                           
  4300                           	signat	_ISR,88
  4301                           	global	_I2C_ISR
  4302                           psect	text606,local,class=CODE,delta=2
  4303                           global __ptext606
  4304  0587                     __ptext606:
  4305                           
  4306 ;; *************** function _I2C_ISR *****************
  4307 ;; Defined at:
  4308 ;;		line 261 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;		None               void
  4315 ;; Registers used:
  4316 ;;		wreg, fsr1l, fsr1h
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4322 ;;      Params:         0       0       0       0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_ISR
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           psect	text606
  4335                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4336                           	line	261
  4337                           	global	__size_of_I2C_ISR
  4338  0015                     	__size_of_I2C_ISR	equ	__end_of_I2C_ISR-_I2C_ISR
  4339                           	
  4340  0587                     _I2C_ISR:	
  4341                           	opt	stack 11
  4342                           ; Regs used in _I2C_ISR: [wregfsr1]
  4343                           	line	262
  4344                           	
  4345  0587                     i1l4858:	
  4346                           ;MCU_16f1516_B1.c: 262: if(SSPIE && SSPIF)
  4347  0587  0021               	movlb 1	; select bank1
  4348  0588  1D91               	btfss	(1163/8)^080h,(1163)&7
  4349  0589  2D8B               	goto	u282_21
  4350  058A  2D8C               	goto	u282_20
  4351  058B                     u282_21:
  4352  058B  2D9B               	goto	i1l1046
  4353  058C                     u282_20:
  4354                           	
  4355  058C                     i1l4860:	
  4356  058C  0020               	movlb 0	; select bank0
  4357  058D  1D91               	btfss	(139/8),(139)&7
  4358  058E  2D90               	goto	u283_21
  4359  058F  2D91               	goto	u283_20
  4360  0590                     u283_21:
  4361  0590  2D9B               	goto	i1l1046
  4362  0591                     u283_20:
  4363                           	line	264
  4364                           	
  4365  0591                     i1l4862:	
  4366                           ;MCU_16f1516_B1.c: 263: {
  4367                           ;MCU_16f1516_B1.c: 264: SSPIE=0;
  4368  0591  0021               	movlb 1	; select bank1
  4369  0592  1191               	bcf	(1163/8)^080h,(1163)&7
  4370                           	line	265
  4371                           	
  4372  0593                     i1l4864:	
  4373                           ;MCU_16f1516_B1.c: 265: I2C->SlaveGO=1;
  4374  0593  0020               	movlb 0	; select bank0
  4375  0594  083A               	movf	(_I2C),w
  4376  0595  3E42               	addlw	042h
  4377  0596  0086               	movwf	fsr1l
  4378  0597  3001               	movlw 1	; select bank2/3
  4379  0598  0087               	movwf fsr1h	
  4380                           	
  4381  0599  1401               	bsf	indf1,0
  4382  059A  2D9B               	goto	i1l1046
  4383                           	line	272
  4384                           	
  4385  059B                     i1l1045:	
  4386                           	line	273
  4387                           	
  4388  059B                     i1l1046:	
  4389  059B  0008               	return
  4390                           	opt stack 0
  4391                           GLOBAL	__end_of_I2C_ISR
  4392  059C                     	__end_of_I2C_ISR:
  4393 ;; =============== function _I2C_ISR ends ============
  4394                           
  4395                           	signat	_I2C_ISR,88
  4396                           	global	_TMR1_ISR
  4397                           psect	text607,local,class=CODE,delta=2
  4398                           global __ptext607
  4399  04A8                     __ptext607:
  4400                           
  4401 ;; *************** function _TMR1_ISR *****************
  4402 ;; Defined at:
  4403 ;;		line 126 in file "G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;		None               void
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4417 ;;      Params:         0       0       0       0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0
  4420 ;;      Totals:         0       0       0       0       0       0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_ISR
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           psect	text607
  4430                           	file	"G:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4431                           	line	126
  4432                           	global	__size_of_TMR1_ISR
  4433  0035                     	__size_of_TMR1_ISR	equ	__end_of_TMR1_ISR-_TMR1_ISR
  4434                           	
  4435  04A8                     _TMR1_ISR:	
  4436                           	opt	stack 11
  4437                           ; Regs used in _TMR1_ISR: [wreg+fsr1l-status,0]
  4438                           	line	127
  4439                           	
  4440  04A8                     i1l4844:	
  4441                           ;MCU_16f1516_B1.c: 127: if(TMR1IE && TMR1IF)
  4442  04A8  0021               	movlb 1	; select bank1
  4443  04A9  1C11               	btfss	(1160/8)^080h,(1160)&7
  4444  04AA  2CAC               	goto	u279_21
  4445  04AB  2CAD               	goto	u279_20
  4446  04AC                     u279_21:
  4447  04AC  2CDC               	goto	i1l1039
  4448  04AD                     u279_20:
  4449                           	
  4450  04AD                     i1l4846:	
  4451  04AD  0020               	movlb 0	; select bank0
  4452  04AE  1C11               	btfss	(136/8),(136)&7
  4453  04AF  2CB1               	goto	u280_21
  4454  04B0  2CB2               	goto	u280_20
  4455  04B1                     u280_21:
  4456  04B1  2CDC               	goto	i1l1039
  4457  04B2                     u280_20:
  4458                           	line	129
  4459                           	
  4460  04B2                     i1l4848:	
  4461                           ;MCU_16f1516_B1.c: 128: {
  4462                           ;MCU_16f1516_B1.c: 129: TMR1H=((65536-700)/256);
  4463  04B2  30FD               	movlw	(0FDh)
  4464  04B3  0097               	movwf	(23)	;volatile
  4465                           	line	130
  4466                           ;MCU_16f1516_B1.c: 130: TMR1L=((65536-700)%256);
  4467  04B4  3044               	movlw	(044h)
  4468  04B5  0096               	movwf	(22)	;volatile
  4469                           	line	131
  4470                           	
  4471  04B6                     i1l4850:	
  4472                           ;MCU_16f1516_B1.c: 131: TMR1IF=0;
  4473  04B6  1011               	bcf	(136/8),(136)&7
  4474                           	line	132
  4475                           	
  4476  04B7                     i1l4852:	
  4477                           ;MCU_16f1516_B1.c: 132: Timer1->Count++;
  4478  04B7  083B               	movf	(_Timer1),w
  4479  04B8  3E01               	addlw	01h
  4480  04B9  0086               	movwf	fsr1l
  4481  04BA  0187               	clrf fsr1h	
  4482                           	
  4483  04BB  3001               	movlw	01h
  4484  04BC  0781               	addwf	indf1,f
  4485  04BD  3141               	addfsr	fsr1,1
  4486  04BE  1803               	skipnc
  4487  04BF  0A81               	incf	indf1,f
  4488                           	line	133
  4489                           	
  4490  04C0                     i1l4854:	
  4491                           ;MCU_16f1516_B1.c: 133: if(Timer1->Count == 20)
  4492  04C0  083B               	movf	(_Timer1),w
  4493  04C1  3E01               	addlw	01h
  4494  04C2  0086               	movwf	fsr1l
  4495  04C3  0187               	clrf fsr1h	
  4496                           	
  4497  04C4  3F40               	moviw	[0]fsr1
  4498  04C5  3A14               	xorlw	low(014h)
  4499  04C6  1D03               	skipz
  4500  04C7  2CCA               	goto	u281_25
  4501  04C8  3F41               	moviw	[1]fsr1
  4502  04C9  3A00               	xorlw	high(014h)
  4503  04CA                     u281_25:
  4504  04CA  1D03               	skipz
  4505  04CB  2CCD               	goto	u281_21
  4506  04CC  2CCE               	goto	u281_20
  4507  04CD                     u281_21:
  4508  04CD  2CDC               	goto	i1l1039
  4509  04CE                     u281_20:
  4510                           	line	135
  4511                           	
  4512  04CE                     i1l4856:	
  4513                           ;MCU_16f1516_B1.c: 134: {
  4514                           ;MCU_16f1516_B1.c: 135: Timer1->Count=0;
  4515  04CE  083B               	movf	(_Timer1),w
  4516  04CF  3E01               	addlw	01h
  4517  04D0  0086               	movwf	fsr1l
  4518  04D1  0187               	clrf fsr1h	
  4519                           	
  4520  04D2  3000               	movlw	low(0)
  4521  04D3  3FC0               	movwi	[0]fsr1
  4522  04D4  3000               	movlw	high(0)
  4523  04D5  3FC1               	movwi	[1]fsr1
  4524                           	line	136
  4525                           ;MCU_16f1516_B1.c: 136: TMain->T1_Timerout=1;
  4526  04D6  0856               	movf	(_TMain),w
  4527  04D7  0086               	movwf	fsr1l
  4528  04D8  0187               	clrf fsr1h	
  4529                           	
  4530  04D9  1501               	bsf	indf1,2
  4531  04DA  2CDC               	goto	i1l1039
  4532                           	line	137
  4533                           	
  4534  04DB                     i1l1038:	
  4535  04DB  2CDC               	goto	i1l1039
  4536                           	line	138
  4537                           	
  4538  04DC                     i1l1037:	
  4539                           	line	139
  4540                           	
  4541  04DC                     i1l1039:	
  4542  04DC  0008               	return
  4543                           	opt stack 0
  4544                           GLOBAL	__end_of_TMR1_ISR
  4545  04DD                     	__end_of_TMR1_ISR:
  4546 ;; =============== function _TMR1_ISR ends ============
  4547                           
  4548                           	signat	_TMR1_ISR,88
  4549                           psect	text608,local,class=CODE,delta=2
  4550                           global __ptext608
  4551  0000                     __ptext608:
  4552                           	global	btemp
  4553  007E                     	btemp set 07Eh
  4554                           
  4555                           	DABS	1,126,2	;btemp
  4556                           	global	wtemp0
  4557  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Aug 29 09:25:37 2014

                 ??_MainT_Initial 0071                                _BF 10A0                      ___awdiv@sign 0077  
       ??_setSegmentDisplayNumber 004E                               _I2C 003A                               _CKP 10AC  
                             _GIE 005F                               _RA1 0061                               _RA2 0062  
                             _RC0 0070                               _RA4 0064                               _RA5 0065  
                             _RA6 0066                               _RA7 0067                               _PEN 10B2  
                             _ISR 0004                               _SEN 10B0                   __end_of_I2C_ISR 059C  
                 __end_of_I2C_Set 05E9                      ___awmod@sign 0077                               wreg 0009  
   __size_of_I2C_Master_Reception 007A                              ?_ISR 0070                              l1100 02AB  
                            l1101 02AB                              l1110 02F7                              l1102 02B0  
                            l1111 02C7                              l1103 02B3                              l1120 02E7  
                            l1112 02C7                              l1104 02B3                              l1121 02E7  
                            l1113 02CC                              l1105 02B8                              l1025 05AC  
                            l1034 05BC                              l1042 05E8                              l1130 0304  
                            l1122 02EC                              l1114 02CD                              l1106 02B9  
                            l1050 04A7                              l1131 0309                              l1115 02CD  
                            l1123 02F8                              l1107 02B9                              l1051 0483  
                            l1028 0586                              l1140 031C                              l1132 030A  
                            l1124 02F8                              l1116 02D1                              l1108 02BD  
                            l1052 0482                              l1141 031C                              l1133 030A  
                            l1125 02FC                              l1117 02D3                              l1109 02C6  
                            l1053 04A6                              l1134 030F                              l1126 02FE  
                            l1118 02D3                              l1070 03FE                              l1062 03EA  
                            l1054 0492                              l1135 0311                              l1127 02FE  
                            l1119 02D8                              l1071 03FF                              l1063 03EA  
                            l1055 04A5                              l1136 0310                              l1128 0302  
                            l1080 041F                              l1072 03FF                              l1064 03EF  
                            l1056 04A7                              l2200 01F7                              l1137 0316  
                            l1129 0304                              l1081 0424                              l1073 0403  
                            l1065 03F1                              l1049 0468                              l2201 01F6  
                            l1138 0317                              l1090 0442                              l1082 0425  
                            l1074 040C                              l1066 03F1                              l2202 0218  
                            l1139 0317                              l1091 0443                              l1075 0435  
                            l1083 0425                              l1067 03F6                              l2203 0219  
                            l1092 0443                              l1084 042A                              l1076 040D  
                            l1068 03F9                              l1093 0448                              l1077 040D  
                            l1085 0436                              l1069 03F9                              l1094 0448  
                            l1086 0436                              l1078 0412                              l1087 043B  
                            l1079 041F                              l1088 043D                              l1097 02A4  
                            l1089 043C                              l1098 02A4                              l1099 02A9  
                            l3212 05CB                              l3220 0088                              l3221 009E  
                            l3222 0124                              l3215 0169                              l3223 013A  
                            l2192 05DA                              l3232 02A2                              l3240 026D  
                            l3400 0376                              l3224 0168                              l3216 0069  
                            l2184 04E8                              l3233 02A1                              l3241 029A  
                            l3401 0381                              l3225 014E                              l3217 0126  
                            l2185 0507                              l3242 02A0                              l3234 0249  
                            l3402 0388                              l3226 0167                              l3218 0125  
                            l2186 0506                              l3235 0270                              l3243 02A2  
                            l3227 0160                              l3219 009F                              l2195 0197  
                            l2187 0508                              l3236 0255                              l3228 0166  
                            l2196 0196                              l2188 0509                              l3237 026F  
                            l3229 0169                              l2197 0219                              l2189 0509  
                            l3238 0261                              l2198 01F8                              l3239 026E  
                            l2199 01BA                              l5210 031D                              l5220 0339  
                            l5212 0322                              l3460 0397                              l5060 05A6  
                            l5052 059C                              l5300 0080                              l3461 03A1  
                            l5230 034F                              l5222 033B                              l5214 032B  
                            l3470 03E8                              l3462 03D7                              l5062 05A7  
                            l5054 059F                              l5070 0453                              l5302 0087  
                            l5310 009F                              l3463 03B5                              l5240 036F  
                            l5232 0355                              l5224 0341                              l5216 032F  
                            l3392 032B                              l3464 03AB                              l5064 05A8  
                            l5056 05A2                              l5080 046C                              l5072 0454  
                            l5320 011A                              l5312 00B5                              l5304 0088  
                            l3393 0339                              l3465 03BA                              l3394 0377  
                            l5234 0364                              l5226 0345                              l5242 0377  
                            l5218 0334                              l3466 03BB                              l5250 0389  
                            l5066 05A9                              l5058 05A3                              l5090 04A1  
                            l5082 0475                              l5074 045A                              l5330 014E  
                            l5314 00C8                              l5306 0093                              l5322 0126  
                            l3395 034F                              l3467 03CA                     ??_Mcu_Initial 0072  
                            l5244 037B                              l5236 0368                              l5228 034A  
                            l3396 0345                              l3468 03D6                              l5260 03A7  
                            l5252 038E                              l5084 0483                              l5076 045D  
                            l5068 0449                              l5332 0158                              l5324 0130  
                            l5316 00F1                              l5308 0097                              l5340 017B  
                            l3397 0354                              l3469 03E1                              l5246 0381  
                            l5238 036A                              l3398 0355                              l5270 03C5  
                            l5262 03AB                              l5254 0397                              l5086 048C  
                            l5078 0465                              l5334 0160                              l5326 013A  
                            l5318 0107                              l5350 01B6                              l5342 0189  
                            l3399 036A                              l5248 0388                              l5280 03E1  
                            l5272 03CA                              l5264 03B0                              l5256 039B  
                            l5088 049B                              l5328 0144                              l5360 01E4  
                            l5352 01B9                              l5344 0197                              l5336 016A  
                            l4810 0574                              l5282 03E8                              l5274 03CF  
                            l5266 03B5                              l5258 03A1                              l5290 0037  
                            l5362 01EF                              l5354 01BA                              l5346 01A0  
                            l5338 0172                              l5370 04DD                              l4820 0580  
                            l4812 0575                              l5268 03BB                              l5276 03D7  
                            l5292 004B                              l5284 0018                              l5356 01C4  
                            l5348 01AE                              l5364 01F8                              l5380 04F0  
                            l5372 04E0                              l4822 0584                              l4814 057B  
                            l4830 05BB                              l5278 03DB                              l5294 0069  
                            l5286 0020                              l5366 0201                              l5358 01DA  
                            l5382 04F4                              l5374 04E3                              l4816 057E  
                            l4808 0571                              l4824 05AD                              l4832 05DB  
                            l5296 0071                              l5288 002D                              l5368 020F  
                            l5384 04F7                              l5376 04E6                              l4818 057F  
                            l4826 05B8                              l4834 05E5                              l5298 007E  
                            l5386 04FF                              l5378 04E8                              l4828 05BA  
                            l4836 05E6                              l4932 05CC                              l4940 05C1  
                            l5388 0502                              l4870 02BE                              l4934 05D1  
                            l4942 05C6                              l4950 0234                              l4880 02F0  
                            l4872 02C5                              l4936 05D6                              l4960 0253  
                            l4952 0239                              l4944 021A                              l4874 02D8  
                            l4866 02A3                              l4890 0412                              l4882 03E9  
                            l4938 05BD                              l4962 0255                              l4970 0270  
                            l4954 023E                              l4946 0222                              l4876 02E4  
                            l4868 02B0                              l4892 042A                              l4884 03F6  
                            l4972 0283                              l4964 025F                              l4956 0247  
                            l4948 022A                              l4878 02EC                              l4894 042E  
                            l4886 0404                              l4974 0291                              l4966 0261  
                            l4958 0249                              l4888 040B                              l4976 029A  
                            l4968 026B                              u3000 03EF                              u3001 03EE  
                            u3010 03F5                              u3011 03F4                              u3100 0441  
                            u3020 03FD                              u3101 0440                              u3021 03FC  
                            _LATA 010C                              u3110 0447                              u3030 0403  
                            _LATB 010D                              u3111 0446                              u3031 0402  
                            _LATC 010E                              u3040 040A                              u3200 0222  
                            u4000 0172                              u3041 0409                              u3201 0221  
                            u4001 0171                              u3050 0411                              u3210 0234  
                            u4010 0189                              u3051 0410                              u3211 0233  
                            u4011 0188                              u3060 0423                              u3220 0247  
                            u4020 01AE                              u3061 0422                              u3221 0246  
                            u4021 01AD                              u3070 0429                              u3230 0253  
                            u4030 01C4                              u3071 0428                              u3231 0252  
                            u4031 01C3                              u4015 0185                              u3080 0434  
                            u3240 025F                              u4040 01EF                              u3081 0433  
                            u3241 025E                              u4041 01EE                              u4025 01AA  
                            u3090 043A                              u3250 026B                              u4050 020F  
                            u3091 0439                              u3251 026A                              u4051 020E  
                            u3260 0291                              u3500 049B                              u4060 04F0  
                            u3261 0290                              u3501 049A                              u4061 04EF  
                            u4070 04FF                              u4055 020B                              u4071 04FE  
                            u2900 02D1                              u3700 0322                              u3460 0453  
                            u2901 02D0                              u3701 0321                              u3461 0452  
                            u2910 02D7                              u3710 032F                              u3470 046C  
                            u2911 02D6                              u3711 032E                              u3471 046B  
                            u2920 02EB                              u2840 02A9                              u3720 0341  
                            u3800 038E                              u3480 0475                              u2921 02EA  
                            u2841 02A8                              u3721 0340                              u3801 038D  
                            u3481 0474                              u2930 02F6                              u2850 02AF  
                            u3810 039B                              u3490 048C                              u2931 02F5  
                            u2851 02AE                              u3811 039A                              u3491 048B  
                            _PEIE 005E                              u2940 02FC                              u2860 02B7  
                            u3740 0353                              u3820 03A7                              u3900 002D  
                            u2941 02FB                              u2861 02B6                              u3741 0352  
                            u3821 03A6                              u3901 002C                              u2950 0302  
                            u2870 02BD                              u2951 0301                              u2871 02BC  
                            u3735 0346                              u2960 0308                              u2880 02C4  
                            u3760 0364                              u3840 03B9                              u2961 0307  
                            u2881 02C3                              u3761 0363                              u3841 03B8  
                            u2970 030E                              u2890 02CB                              u3850 03C5  
                            u3930 0071                              u2971 030D                              u2891 02CA  
                            u3755 0356                              u3851 03C4                              u3835 03AC  
                            u3931 0070                              u3915 003D                              u2980 0315  
                            u3780 0375                              u3940 007E                              _RCEN 10B3  
                            u2981 0314                              u3781 0374                              u3765 0360  
                            u3941 007D                              u3925 005A                              u2990 031B  
                            u3790 037B                              u3870 03D5                              u3950 0086  
                            u2991 031A                              u3775 036B                              u3871 03D4  
                            u3855 03C1                              u3951 0085                              u3880 03DB  
                            u3960 009D                              u3865 03CB                              u3961 009C  
                            u3945 007A                              u3970 0130                              u3890 0020  
                            u3971 012F                              u3891 001F                              u3980 0144  
                            u3981 0143                              u3990 0158                              u3991 0157  
                            _R_nW 10A2                              _main 04DD                  __end_of_I2C_Main 04A8  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              start 0015                             ??_ISR 0070  
                           ?_main 0070                             _ACKEN 10B4                   __end_of___awdiv 0389  
                 __end_of___awmod 03E9                   ___awdiv@divisor 0071                             _T1CON 0018  
                 ___awdiv@counter 0076                             _TMR1H 0017                             _TMR1L 0016  
                           _PORTA 000C                             _PORTB 000D                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _SSPIE 048B                             _SSPIF 008B                             _SSPOV 10AE  
                           _TMain 0056                             _MainT 016A                  __end_of_TMR1_ISR 04DD  
                __end_of_TMR1_Set 05BD   __end_of_setSegmentDisplayNumber 016A                             status 0003  
                           wtemp0 007E               __end_of_Mcu_Initial 05AD                      __end_of_main 050B  
__size_of_I2C_Master_Transmission 0060                         ??_I2C_ISR 0070                         ??_I2C_Set 0071  
                          ??_main 007C             I2C_Master_Reception@i 0073                            ?_MainT 0070  
                ___awdiv@dividend 0073                            _ANSELA 018C                            _ANSELB 018D  
                          _ANSELC 018E                            i1l1031 0011                            i1l1037 04DC  
                          i1l1045 059B                            i1l1038 04DB                            i1l1046 059B  
                          i1l1039 04DC                            i1l4840 000A                            i1l4850 04B6  
                          i1l4842 000D                            i1l4852 04B7                            i1l4844 04A8  
                          i1l4860 058C                            i1l4854 04C0                            i1l4846 04AD  
                          i1l4862 0591                            i1l4838 0008                            i1l4856 04CE  
                          i1l4848 04B2                            i1l4864 0593                            i1l4858 0587  
                          u280_20 04B2                            u280_21 04B1                            u281_20 04CE  
                          u281_21 04CD                            u281_25 04CA                            u282_20 058C  
                          u282_21 058B                            u283_20 0591                            u283_21 0590  
                          u279_20 04AD                            u279_21 04AC                            _OSCCON 0099  
                      _VarSegment 0020                            _TMR1IE 0488                            _TMR1IF 0088  
                          _IO_Set 0571                            _SSPADD 0212                            _SSPBUF 0211  
                      _VarProduct 00A0                            _VarI2C 0120                            _Timer1 003B  
                       ??___awdiv 0075                         ??___awmod 0075                  ___awdiv@quotient 0078  
                 ___awmod@divisor 0071                   ___awmod@counter 0076                            clrloop 05EA  
                       ?_I2C_Main 0070                       _Mcu_Initial 059C                     __end_of_MainT 021A  
                  __pcstackCOMMON 0070                      __pidataBANK0 0557                      __pidataBANK1 0537  
                       ?_TMR1_ISR 0070                         ?_TMR1_Set 0070                        ??_I2C_Main 0074  
                         ??_MainT 0052                        __pbssBANK0 003A                        __pbssBANK2 0120  
                         ?_IO_Set 0070      __end_of_I2C_Master_Reception 031D                        __pmaintext 04DD  
         _I2C_Master_Transmission 03E9                        ??_TMR1_ISR 0070                        ??_TMR1_Set 0071  
                      __pintentry 0004                           _I2C_ISR 0587                           _ACKSTAT 10B6  
    __size_of_SegmentDisplay_Main 0089                           _I2C_Set 05DB             __end_of_MainT_Initial 05DB  
                         _SSPCON1 0215                           _SSPCON2 0216                           _SSPSTAT 0214  
                 __size_of_IO_Set 0016                           _Segment 007C                           _Product 0055  
        ?_setSegmentDisplayNumber 007A                           ___awdiv 031D                           ___awmod 0389  
        ??_SegmentDisplay_Initial 0071                      __size_of_ISR 0011                  ___awmod@dividend 0073  
            end_of_initialization 0534                           init_ram 05EF                           initloop 05F0  
       ??_I2C_Master_Transmission 0071          I2C_Master_Transmission@i 0072                 __size_of_I2C_Main 005F  
            _I2C_Master_Reception 02A3                      ?_Mcu_Initial 0070                    __end_of_IO_Set 0587  
   setSegmentDisplayNumber@number 007A                 __size_of_TMR1_ISR 0035   __size_of_SegmentDisplay_Initial 000F  
               __size_of_TMR1_Set 0010               start_initialization 050B                       __end_of_ISR 0015  
           ?_I2C_Master_Reception 0070               _SegmentDisplay_Main 021A                          ??_IO_Set 0071  
                       _VarTimer1 004B                       __pdataBANK0 0020                       __pdataBANK1 00A0  
                        ?_I2C_ISR 0070              ?_SegmentDisplay_Main 0070                          ?_I2C_Set 0070  
                     __pbssCOMMON 007C                     __pcstackBANK0 004E            _SegmentDisplay_Initial 05BD  
                       __pnvBANK0 0055                          ?___awdiv 0071                         __ptext600 03E9  
                       __ptext601 02A3                         __ptext602 05DB                         __ptext603 05AD  
                        ?___awmod 0071                         __ptext604 0571                         __ptext606 0587  
                       __ptext607 04A8                         __ptext608 0000                         __ptext591 016A  
                       __ptext592 0018                         __ptext593 0449                         __ptext594 059C  
                       __ptext595 0389                         __ptext596 031D                         __ptext597 021A  
                       __ptext598 05BD                         __ptext599 05CC             ??_SegmentDisplay_Main 0071  
                        _I2C_Main 0449            ??_I2C_Master_Reception 0071                    __size_of_MainT 00B0  
__size_of_setSegmentDisplayNumber 0152          setSegmentDisplayNumber@i 0051            __size_of_MainT_Initial 000F  
            __size_of_Mcu_Initial 0011                          _TMR1_ISR 04A8                          _TMR1_Set 05AD  
                __size_of_I2C_ISR 0015                  __size_of_I2C_Set 000E                          _VarTMain 003C  
                __size_of___awdiv 006C                  __size_of___awmod 0060                     _MainT_Initial 05CC  
        ?_I2C_Master_Transmission 0070                     __size_of_main 002E                          clear_ram 05E9  
                  ?_MainT_Initial 0070           _setSegmentDisplayNumber 0018           ?_SegmentDisplay_Initial 0070  
                        intlevel1 0000    __end_of_SegmentDisplay_Initial 05CC   __end_of_I2C_Master_Transmission 0449  
     __end_of_SegmentDisplay_Main 02A3  
