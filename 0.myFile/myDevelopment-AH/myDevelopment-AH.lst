

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Sep 28 01:35:53 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  0090                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  0116                     	;# 
    96  0117                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  018E                     	;# 
   101  0191                     	;# 
   102  0191                     	;# 
   103  0192                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0197                     	;# 
   110  0199                     	;# 
   111  019A                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019C                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  019F                     	;# 
   121  020D                     	;# 
   122  0210                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0216                     	;# 
   135  0216                     	;# 
   136  0217                     	;# 
   137  0217                     	;# 
   138  0291                     	;# 
   139  0291                     	;# 
   140  0292                     	;# 
   141  0293                     	;# 
   142  0298                     	;# 
   143  0298                     	;# 
   144  0299                     	;# 
   145  029A                     	;# 
   146  0394                     	;# 
   147  0395                     	;# 
   148  0396                     	;# 
   149  0FE4                     	;# 
   150  0FE5                     	;# 
   151  0FE6                     	;# 
   152  0FE7                     	;# 
   153  0FE8                     	;# 
   154  0FE9                     	;# 
   155  0FEA                     	;# 
   156  0FEB                     	;# 
   157  0FED                     	;# 
   158  0FEE                     	;# 
   159  0FEF                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  0116                     	;# 
   207  0117                     	;# 
   208  011D                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  018E                     	;# 
   212  0191                     	;# 
   213  0191                     	;# 
   214  0192                     	;# 
   215  0193                     	;# 
   216  0193                     	;# 
   217  0194                     	;# 
   218  0195                     	;# 
   219  0196                     	;# 
   220  0197                     	;# 
   221  0199                     	;# 
   222  019A                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019B                     	;# 
   227  019C                     	;# 
   228  019C                     	;# 
   229  019D                     	;# 
   230  019E                     	;# 
   231  019F                     	;# 
   232  020D                     	;# 
   233  0210                     	;# 
   234  0211                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0212                     	;# 
   238  0213                     	;# 
   239  0213                     	;# 
   240  0214                     	;# 
   241  0214                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0216                     	;# 
   246  0216                     	;# 
   247  0217                     	;# 
   248  0217                     	;# 
   249  0291                     	;# 
   250  0291                     	;# 
   251  0292                     	;# 
   252  0293                     	;# 
   253  0298                     	;# 
   254  0298                     	;# 
   255  0299                     	;# 
   256  029A                     	;# 
   257  0394                     	;# 
   258  0395                     	;# 
   259  0396                     	;# 
   260  0FE4                     	;# 
   261  0FE5                     	;# 
   262  0FE6                     	;# 
   263  0FE7                     	;# 
   264  0FE8                     	;# 
   265  0FE9                     	;# 
   266  0FEA                     	;# 
   267  0FEB                     	;# 
   268  0FED                     	;# 
   269  0FEE                     	;# 
   270  0FEF                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0008                     	;# 
   280  0009                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  000E                     	;# 
   286  0010                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0016                     	;# 
   292  0017                     	;# 
   293  0018                     	;# 
   294  0019                     	;# 
   295  001A                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  008C                     	;# 
   299  008D                     	;# 
   300  008E                     	;# 
   301  0090                     	;# 
   302  0091                     	;# 
   303  0092                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  0116                     	;# 
   318  0117                     	;# 
   319  011D                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  018E                     	;# 
   323  0191                     	;# 
   324  0191                     	;# 
   325  0192                     	;# 
   326  0193                     	;# 
   327  0193                     	;# 
   328  0194                     	;# 
   329  0195                     	;# 
   330  0196                     	;# 
   331  0197                     	;# 
   332  0199                     	;# 
   333  019A                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019B                     	;# 
   338  019C                     	;# 
   339  019C                     	;# 
   340  019D                     	;# 
   341  019E                     	;# 
   342  019F                     	;# 
   343  020D                     	;# 
   344  0210                     	;# 
   345  0211                     	;# 
   346  0211                     	;# 
   347  0212                     	;# 
   348  0212                     	;# 
   349  0213                     	;# 
   350  0213                     	;# 
   351  0214                     	;# 
   352  0214                     	;# 
   353  0215                     	;# 
   354  0215                     	;# 
   355  0215                     	;# 
   356  0216                     	;# 
   357  0216                     	;# 
   358  0217                     	;# 
   359  0217                     	;# 
   360  0291                     	;# 
   361  0291                     	;# 
   362  0292                     	;# 
   363  0293                     	;# 
   364  0298                     	;# 
   365  0298                     	;# 
   366  0299                     	;# 
   367  029A                     	;# 
   368  0394                     	;# 
   369  0395                     	;# 
   370  0396                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE9                     	;# 
   377  0FEA                     	;# 
   378  0FEB                     	;# 
   379  0FED                     	;# 
   380  0FEE                     	;# 
   381  0FEF                     	;# 
   382                           
   383                           	psect	idataBANK1
   384  04AB                     __pidataBANK1:	
   385                           
   386                           ;initializer for _VarProduct
   387  04AB  3463               	retlw	99
   388  04AC  3402               	retlw	2
   389  04AD  3400               	retlw	0
   390  04AE  3400               	retlw	0
   391  04AF  3400               	retlw	0
   392  04B0  3400               	retlw	0
   393  04B1  3400               	retlw	0
   394  04B2  3400               	retlw	0
   395  04B3  3400               	retlw	0
   396  04B4  3400               	retlw	0
   397  04B5  3400               	retlw	0
   398  04B6  3400               	retlw	0
   399  04B7  34FF               	retlw	255
   400  04B8  34FF               	retlw	255
   401  04B9  34FF               	retlw	255
   402  04BA  3400               	retlw	0
   403  04BB  3400               	retlw	0
   404  04BC  3400               	retlw	0
   405  04BD  3400               	retlw	0
   406  04BE  3400               	retlw	0
   407  04BF  3400               	retlw	0
   408  04C0  3400               	retlw	0
   409  04C1  3400               	retlw	0
   410  04C2  3400               	retlw	0
   411  04C3  3400               	retlw	0
   412  04C4  3400               	retlw	0
   413  04C5  3400               	retlw	0
   414  04C6  3400               	retlw	0
   415  04C7  3400               	retlw	0
   416  04C8  3400               	retlw	0
   417  04C9  3400               	retlw	0
   418  04CA  3400               	retlw	0
   419                           
   420                           ;initializer for _VarSegment
   421  04CB  34C0               	retlw	192
   422  04CC  34F9               	retlw	249
   423  04CD  34A4               	retlw	164
   424  04CE  34B0               	retlw	176
   425  04CF  3499               	retlw	153
   426  04D0  3492               	retlw	146
   427  04D1  3482               	retlw	130
   428  04D2  34D8               	retlw	216
   429  04D3  3480               	retlw	128
   430  04D4  3490               	retlw	144
   431  04D5  3488               	retlw	136
   432  04D6  3483               	retlw	131
   433  04D7  34A7               	retlw	167
   434  04D8  34A1               	retlw	161
   435  04D9  3486               	retlw	134
   436  04DA  348E               	retlw	142
   437  04DB  34BF               	retlw	191
   438  04DC  3400               	retlw	0
   439  04DD  3400               	retlw	0
   440  04DE  3400               	retlw	0
   441  04DF  3400               	retlw	0
   442  04E0  3400               	retlw	0
   443  04E1  3400               	retlw	0
   444  04E2  3400               	retlw	0
   445  04E3  3400               	retlw	0
   446  04E4  3400               	retlw	0
   447                           
   448                           	psect	stringtext
   449  0700                     __pstringtext:	
   450  0700                     _dpowers:	
   451  0700  3401               	retlw	1
   452  0701  3400               	retlw	0
   453  0702  340A               	retlw	10
   454  0703  3400               	retlw	0
   455  0704  3464               	retlw	100
   456  0705  3400               	retlw	0
   457  0706  34E8               	retlw	232
   458  0707  3403               	retlw	3
   459  0708  3410               	retlw	16
   460  0709  3427               	retlw	39
   461  070A                     __end_of_dpowers:	
   462  070A                     __stringdata:	
   463  070A                     STR_1:	
   464  070A  3425               	retlw	37	;'%'
   465  070B  3464               	retlw	100	;'d'
   466  070C  342C               	retlw	44	;','
   467  070D  3400               	retlw	0
   468  070E                     __end_of__stringdata:	
   469                           
   470                           ; #config settings
   471  0000                     
   472                           	psect	nvCOMMON
   473  0079                     __pnvCOMMON:	
   474  0079                     _Product:	
   475  0079                     	ds	1
   476  007A                     _Timer1:	
   477  007A                     	ds	1
   478                           
   479                           	psect	nvBANK0
   480  0055                     __pnvBANK0:	
   481  0055                     _TMain:	
   482  0055                     	ds	1
   483  0056                     _UART:	
   484  0056                     	ds	1
   485  0057                     _I2C:	
   486  0057                     	ds	1
   487  0058                     _Segment:	
   488  0058                     	ds	1
   489  000C                     _PORTA	set	12
   490  000D                     _PORTB	set	13
   491  000E                     _PORTC	set	14
   492  0018                     _T1CON	set	24
   493  0017                     _TMR1H	set	23
   494  0016                     _TMR1L	set	22
   495  005F                     _GIE	set	95
   496  005E                     _PEIE	set	94
   497  0061                     _RA1	set	97
   498  0062                     _RA2	set	98
   499  0064                     _RA4	set	100
   500  0065                     _RA5	set	101
   501  0066                     _RA6	set	102
   502  0067                     _RA7	set	103
   503  0070                     _RC0	set	112
   504  008D                     _RCIF	set	141
   505  008B                     _SSPIF	set	139
   506  0088                     _TMR1IF	set	136
   507  008C                     _TXIF	set	140
   508  0099                     _OSCCON	set	153
   509  008C                     _TRISA	set	140
   510  008D                     _TRISB	set	141
   511  008E                     _TRISC	set	142
   512  048D                     _RCIE	set	1165
   513  048B                     _SSPIE	set	1163
   514  0488                     _TMR1IE	set	1160
   515  0476                     _TRISC6	set	1142
   516  0477                     _TRISC7	set	1143
   517  048C                     _TXIE	set	1164
   518  010C                     _LATA	set	268
   519  010D                     _LATB	set	269
   520  010E                     _LATC	set	270
   521  018C                     _ANSELA	set	396
   522  018D                     _ANSELB	set	397
   523  018E                     _ANSELC	set	398
   524  0199                     _RCREG	set	409
   525  019D                     _RCSTA	set	413
   526  019B                     _SPBRG	set	411
   527  019C                     _SPBRGH	set	412
   528  019A                     _TXREG	set	410
   529  019E                     _TXSTA	set	414
   530  0CFB                     _BRG16	set	3323
   531  0CEE                     _RX9	set	3310
   532  0CF6                     _TX9	set	3318
   533  0212                     _SSPADD	set	530
   534  0211                     _SSPBUF	set	529
   535  0215                     _SSPCON1	set	533
   536  0216                     _SSPCON2	set	534
   537  0214                     _SSPSTAT	set	532
   538  10B4                     _ACKEN	set	4276
   539  10B6                     _ACKSTAT	set	4278
   540  10A0                     _BF	set	4256
   541  10AC                     _CKP	set	4268
   542  10B2                     _PEN	set	4274
   543  10B3                     _RCEN	set	4275
   544  10A2                     _R_nW	set	4258
   545  10B0                     _SEN	set	4272
   546  10AE                     _SSPOV	set	4270
   547                           
   548                           	psect	cinit
   549  0018                     start_initialization:	
   550  0018                     __initialization:	
   551                           
   552                           ; Clear objects allocated to COMMON
   553  0018  01F6               	clrf	__pbssCOMMON& (0+127)
   554  0019  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   555  001A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   556                           
   557                           ; Clear objects allocated to BANK0
   558  001B  3046               	movlw	low __pbssBANK0
   559  001C  0084               	movwf	4
   560  001D  3000               	movlw	high __pbssBANK0
   561  001E  0085               	movwf	5
   562  001F  300F               	movlw	15
   563  0020  3187  2734  3180   	fcall	clear_ram0
   564                           
   565                           ; Clear objects allocated to BANK2
   566  0023  3020               	movlw	low __pbssBANK2
   567  0024  0084               	movwf	4
   568  0025  3001               	movlw	high __pbssBANK2
   569  0026  0085               	movwf	5
   570  0027  3043               	movlw	67
   571  0028  3187  2734  3180   	fcall	clear_ram0
   572                           
   573                           ; Clear objects allocated to BANK3
   574  002B  30A0               	movlw	low __pbssBANK3
   575  002C  0084               	movwf	4
   576  002D  3001               	movlw	high __pbssBANK3
   577  002E  0085               	movwf	5
   578  002F  3044               	movlw	68
   579  0030  3187  2734  3180   	fcall	clear_ram0
   580                           
   581                           ; Initialize objects allocated to BANK1
   582  0033  30AB               	movlw	low __pidataBANK1
   583  0034  0084               	movwf	4
   584  0035  3084               	movlw	(high __pidataBANK1)| (0+128)
   585  0036  0085               	movwf	5
   586  0037  30A0               	movlw	low __pdataBANK1
   587  0038  0086               	movwf	6
   588  0039  3000               	movlw	high __pdataBANK1
   589  003A  0087               	movwf	7
   590  003B  303A               	movlw	58
   591  003C  3187  273A         	fcall	init_ram
   592  003E                     end_of_initialization:	
   593                           ;End of C runtime variable initialization code
   594                           
   595  003E                     __end_of__initialization:	
   596  003E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   597  003F  0020               	movlb	0
   598  0040  3186  2E3D         	ljmp	_main	;jump to C main() function
   599                           
   600                           	psect	bssCOMMON
   601  0076                     __pbssCOMMON:	
   602  0076                     _VarTimer1:	
   603  0076                     	ds	3
   604                           
   605                           	psect	bssBANK0
   606  0046                     __pbssBANK0:	
   607  0046                     _VarTMain:	
   608  0046                     	ds	15
   609                           
   610                           	psect	dataBANK1
   611  00A0                     __pdataBANK1:	
   612  00A0                     _VarProduct:	
   613  00A0                     	ds	32
   614  00C0                     _VarSegment:	
   615  00C0                     	ds	26
   616                           
   617                           	psect	bssBANK2
   618  0120                     __pbssBANK2:	
   619  0120                     _VarI2C:	
   620  0120                     	ds	67
   621                           
   622                           	psect	bssBANK3
   623  01A0                     __pbssBANK3:	
   624  01A0                     _VarUart:	
   625  01A0                     	ds	68
   626                           
   627                           	psect	clrtext
   628  0734                     clear_ram0:	
   629                           ;	Called with FSR0 containing the base address, and
   630                           ;	WREG with the size to clear
   631                           
   632  0734  0064               	clrwdt	;clear the watchdog before getting into this loop
   633  0735                     clrloop0:	
   634  0735  0180               	clrf	0	;clear RAM location pointed to by FSR
   635  0736  3101               	addfsr 0,1
   636  0737  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   637  0738  2F35               	goto	clrloop0	;have we reached the end yet?
   638  0739  3400               	retlw	0	;all done for this memory range, return
   639                           
   640                           	psect	inittext
   641  073A                     init_ram:	
   642  073A  00FE               	movwf	126
   643  073B                     initloop:	
   644  073B  0012               	moviw fsr0++
   645  073C  001E               	movwi fsr1++
   646  073D  0BFE               	decfsz	126,f
   647  073E  2F3B               	goto	initloop
   648  073F  3400               	retlw	0
   649                           
   650                           	psect	cstackCOMMON
   651  0070                     __pcstackCOMMON:	
   652  0070                     ?_MainT_Initial:	
   653  0070                     ?_Mcu_Initialization:	
   654                           ; 0 bytes @ 0x0
   655                           
   656  0070                     ?_SegmentDisplay_Initial:	
   657                           ; 0 bytes @ 0x0
   658                           
   659  0070                     ?_MainT:	
   660                           ; 0 bytes @ 0x0
   661                           
   662  0070                     ?_I2C_Main:	
   663                           ; 0 bytes @ 0x0
   664                           
   665  0070                     ?_UART_Main:	
   666                           ; 0 bytes @ 0x0
   667                           
   668  0070                     ?_SegmentDisplay_Main:	
   669                           ; 0 bytes @ 0x0
   670                           
   671  0070                     ?_IO_Set:	
   672                           ; 0 bytes @ 0x0
   673                           
   674  0070                     ?_TMR1_Set:	
   675                           ; 0 bytes @ 0x0
   676                           
   677  0070                     ?_I2C_Set:	
   678                           ; 0 bytes @ 0x0
   679                           
   680  0070                     ?_UART_Set:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ?_TMR1_ISR:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ??_TMR1_ISR:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_UART_ISR:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ?_I2C_ISR:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ??_I2C_ISR:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ?_I2C_Master_Reception:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ?_I2C_Master_Transmission:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?_UART_Receive:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ?_UART_Transmit:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?_main:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ?_ISR:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ?_putch:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0070                     ??_getch:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ?i1_putch:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     ??i1_putch:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0070                     ?_getche:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_getch:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     i1putch@byte:	
   735                           ; 1 bytes @ 0x0
   736                           
   737                           
   738                           ; 1 bytes @ 0x0
   739  0070                     	ds	1
   740  0071                     ??_getche:	
   741  0071                     getche@c:	
   742                           ; 0 bytes @ 0x1
   743                           
   744                           
   745                           ; 1 bytes @ 0x1
   746  0071                     	ds	1
   747  0072                     ??_UART_ISR:	
   748                           
   749                           ; 0 bytes @ 0x2
   750  0072                     	ds	2
   751  0074                     UART_ISR@i:	
   752                           
   753                           ; 1 bytes @ 0x4
   754  0074                     	ds	1
   755  0075                     ??_ISR:	
   756                           
   757                           ; 0 bytes @ 0x5
   758  0075                     	ds	1
   759                           
   760                           	psect	cstackBANK0
   761  0020                     __pcstackBANK0:	
   762  0020                     ??_MainT_Initial:	
   763  0020                     ??_SegmentDisplay_Initial:	
   764                           ; 0 bytes @ 0x0
   765                           
   766  0020                     ??_MainT:	
   767                           ; 0 bytes @ 0x0
   768                           
   769  0020                     ??_SegmentDisplay_Main:	
   770                           ; 0 bytes @ 0x0
   771                           
   772  0020                     ??_IO_Set:	
   773                           ; 0 bytes @ 0x0
   774                           
   775  0020                     ??_TMR1_Set:	
   776                           ; 0 bytes @ 0x0
   777                           
   778  0020                     ??_I2C_Set:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0020                     ??_UART_Set:	
   782                           ; 0 bytes @ 0x0
   783                           
   784  0020                     ??_I2C_Master_Reception:	
   785                           ; 0 bytes @ 0x0
   786                           
   787  0020                     ??_I2C_Master_Transmission:	
   788                           ; 0 bytes @ 0x0
   789                           
   790  0020                     ??_UART_Receive:	
   791                           ; 0 bytes @ 0x0
   792                           
   793  0020                     ??_putch:	
   794                           ; 0 bytes @ 0x0
   795                           
   796  0020                     ?___awdiv:	
   797                           ; 0 bytes @ 0x0
   798                           
   799  0020                     ?___awmod:	
   800                           ; 2 bytes @ 0x0
   801                           
   802  0020                     ?___lwdiv:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0020                     putch@byte:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0020                     ___awdiv@divisor:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0020                     ___awmod@divisor:	
   812                           ; 2 bytes @ 0x0
   813                           
   814  0020                     ___lwdiv@divisor:	
   815                           ; 2 bytes @ 0x0
   816                           
   817                           
   818                           ; 2 bytes @ 0x0
   819  0020                     	ds	1
   820  0021                     ??_Mcu_Initialization:	
   821  0021                     I2C_Master_Transmission@i:	
   822                           ; 0 bytes @ 0x1
   823                           
   824                           
   825                           ; 1 bytes @ 0x1
   826  0021                     	ds	1
   827  0022                     I2C_Master_Reception@i:	
   828  0022                     ___awdiv@dividend:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0022                     ___awmod@dividend:	
   832                           ; 2 bytes @ 0x2
   833                           
   834  0022                     ___lwdiv@dividend:	
   835                           ; 2 bytes @ 0x2
   836                           
   837                           
   838                           ; 2 bytes @ 0x2
   839  0022                     	ds	1
   840  0023                     ??_I2C_Main:	
   841  0023                     UART_Receive@i:	
   842                           ; 0 bytes @ 0x3
   843                           
   844                           
   845                           ; 1 bytes @ 0x3
   846  0023                     	ds	1
   847  0024                     ??___awdiv:	
   848  0024                     ??___awmod:	
   849                           ; 0 bytes @ 0x4
   850                           
   851  0024                     ??___lwdiv:	
   852                           ; 0 bytes @ 0x4
   853                           
   854                           
   855                           ; 0 bytes @ 0x4
   856  0024                     	ds	1
   857  0025                     ___awdiv@counter:	
   858  0025                     ___awmod@counter:	
   859                           ; 1 bytes @ 0x5
   860                           
   861  0025                     ___lwdiv@counter:	
   862                           ; 1 bytes @ 0x5
   863                           
   864                           
   865                           ; 1 bytes @ 0x5
   866  0025                     	ds	1
   867  0026                     I2C_Main@i:	
   868  0026                     ___awdiv@sign:	
   869                           ; 1 bytes @ 0x6
   870                           
   871  0026                     ___awmod@sign:	
   872                           ; 1 bytes @ 0x6
   873                           
   874  0026                     ___lwdiv@quotient:	
   875                           ; 1 bytes @ 0x6
   876                           
   877                           
   878                           ; 2 bytes @ 0x6
   879  0026                     	ds	1
   880  0027                     ___awdiv@quotient:	
   881                           
   882                           ; 2 bytes @ 0x7
   883  0027                     	ds	1
   884  0028                     ?___lwmod:	
   885  0028                     ___lwmod@divisor:	
   886                           ; 2 bytes @ 0x8
   887                           
   888                           
   889                           ; 2 bytes @ 0x8
   890  0028                     	ds	1
   891  0029                     ?_setSegmentDisplayNumber:	
   892  0029                     setSegmentDisplayNumber@number:	
   893                           ; 0 bytes @ 0x9
   894                           
   895                           
   896                           ; 2 bytes @ 0x9
   897  0029                     	ds	1
   898  002A                     ___lwmod@dividend:	
   899                           
   900                           ; 2 bytes @ 0xA
   901  002A                     	ds	1
   902  002B                     ??_setSegmentDisplayNumber:	
   903                           
   904                           ; 0 bytes @ 0xB
   905  002B                     	ds	1
   906  002C                     ??___lwmod:	
   907                           
   908                           ; 0 bytes @ 0xC
   909  002C                     	ds	1
   910  002D                     ___lwmod@counter:	
   911                           
   912                           ; 1 bytes @ 0xD
   913  002D                     	ds	1
   914  002E                     ?_printf:	
   915  002E                     printf@f:	
   916                           ; 2 bytes @ 0xE
   917                           
   918                           
   919                           ; 2 bytes @ 0xE
   920  002E                     	ds	1
   921  002F                     setSegmentDisplayNumber@i:	
   922                           
   923                           ; 1 bytes @ 0xF
   924  002F                     	ds	3
   925  0032                     ??_printf:	
   926                           
   927                           ; 0 bytes @ 0x12
   928  0032                     	ds	4
   929  0036                     printf@ap:	
   930                           
   931                           ; 1 bytes @ 0x16
   932  0036                     	ds	1
   933  0037                     printf@flag:	
   934                           
   935                           ; 1 bytes @ 0x17
   936  0037                     	ds	1
   937  0038                     printf@prec:	
   938                           
   939                           ; 1 bytes @ 0x18
   940  0038                     	ds	1
   941  0039                     printf@_val:	
   942                           
   943                           ; 4 bytes @ 0x19
   944  0039                     	ds	4
   945  003D                     printf@c:	
   946                           
   947                           ; 1 bytes @ 0x1D
   948  003D                     	ds	1
   949  003E                     ??_UART_Transmit:	
   950                           
   951                           ; 0 bytes @ 0x1E
   952  003E                     	ds	3
   953  0041                     UART_Transmit@j:	
   954                           
   955                           ; 2 bytes @ 0x21
   956  0041                     	ds	2
   957  0043                     UART_Transmit@i:	
   958                           
   959                           ; 1 bytes @ 0x23
   960  0043                     	ds	1
   961  0044                     ??_UART_Main:	
   962                           
   963                           ; 0 bytes @ 0x24
   964  0044                     	ds	2
   965  0046                     ??_main:	
   966                           
   967                           	psect	maintext
   968  063D                     __pmaintext:	
   969                           ; 0 bytes @ 0x26
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 6 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\myMain.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;		None               void
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 17F/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   989 ;;      Params:         0       0       0       0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels required when called:    8
   995 ;; This function calls:
   996 ;;		_I2C_Main
   997 ;;		_MainT
   998 ;;		_MainT_Initial
   999 ;;		_Mcu_Initialization
  1000 ;;		_SegmentDisplay_Initial
  1001 ;;		_SegmentDisplay_Main
  1002 ;;		_UART_Main
  1003 ;; This function is called by:
  1004 ;;		Startup code after reset
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _main
  1010  063D                     _main:	
  1011                           
  1012                           ;myMain.c: 8: MainT_Initial();
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1016  063D  3186  26D2  3186   	fcall	_MainT_Initial
  1017                           
  1018                           ;myMain.c: 9: Mcu_Initialization();
  1019  0640  3186  26C3  3186   	fcall	_Mcu_Initialization
  1020                           
  1021                           ;myMain.c: 10: SegmentDisplay_Initial();
  1022  0643  3186  2693  3186   	fcall	_SegmentDisplay_Initial
  1023                           
  1024                           ;myMain.c: 11: ;;
  1025                           ;myMain.c: 12: __nop();
  1026  0646  0000               	nop
  1027  0647                     l2627:	
  1028                           ;myMain.c: 13: while(1)
  1029                           
  1030                           
  1031                           ;myMain.c: 14: {
  1032                           ;myMain.c: 17: if(TMain->T1_Timerout)
  1033  0647  0020               	movlb	0	; select bank0
  1034  0648  0855               	movf	_TMain,w
  1035  0649  0086               	movwf	6
  1036  064A  0187               	clrf	7
  1037  064B  1D01               	btfss	1,2
  1038  064C  2E47               	goto	l2627
  1039                           
  1040                           ;myMain.c: 18: {
  1041                           ;myMain.c: 19: TMain->T1_Timerout = 0;
  1042  064D  0855               	movf	_TMain,w
  1043  064E  0086               	movwf	6
  1044  064F  0187               	clrf	7
  1045  0650  1101               	bcf	1,2
  1046                           
  1047                           ;myMain.c: 20: MainT();
  1048  0651  3183  2316  3186   	fcall	_MainT
  1049                           
  1050                           ;myMain.c: 21: if(TMain->PowerON)
  1051  0654  0020               	movlb	0	; select bank0
  1052  0655  0855               	movf	_TMain,w
  1053  0656  0086               	movwf	6
  1054  0657  0187               	clrf	7
  1055  0658  1C01               	btfss	1,0
  1056  0659  2E47               	goto	l2627
  1057                           
  1058                           ;myMain.c: 22: {
  1059                           ;myMain.c: 23: ;;
  1060                           ;myMain.c: 24: I2C_Main();
  1061  065A  3182  22A3  3186   	fcall	_I2C_Main
  1062                           
  1063                           ;myMain.c: 25: UART_Main();
  1064  065D  3185  2554  3186   	fcall	_UART_Main
  1065                           
  1066                           ;myMain.c: 26: SegmentDisplay_Main();
  1067  0660  3182  2230  3186   	fcall	_SegmentDisplay_Main
  1068  0663  2E47               	goto	l2627
  1069  0664                     __end_of_main:	
  1070                           
  1071                           	psect	text1
  1072  0554                     __ptext1:	
  1073 ;; *************** function _UART_Main *****************
  1074 ;; Defined at:
  1075 ;;		line 723 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;		None               void
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1089 ;;      Params:         0       0       0       0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0       0
  1091 ;;      Temps:          0       2       0       0       0       0       0       0
  1092 ;;      Totals:         0       2       0       0       0       0       0       0
  1093 ;;Total ram usage:        2 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    7
  1096 ;; This function calls:
  1097 ;;		_UART_Receive
  1098 ;;		_UART_Transmit
  1099 ;;		_setSegmentDisplayNumber
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _UART_Main
  1107  0554                     _UART_Main:	
  1108                           
  1109                           ;MCU_B1.c: 725: if(UART->RxGO)
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _UART_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1113  0554  0020               	movlb	0	; select bank0
  1114  0555  0856               	movf	_UART,w
  1115  0556  3E43               	addlw	67
  1116  0557  0086               	movwf	6
  1117  0558  3001               	movlw	1	; select bank2/3
  1118  0559  0087               	movwf	7
  1119  055A  1C81               	btfss	1,1
  1120  055B  2D77               	goto	l2579
  1121                           
  1122                           ;MCU_B1.c: 726: {
  1123                           ;MCU_B1.c: 727: UART->RxGO=0;
  1124  055C  0856               	movf	_UART,w
  1125  055D  3E43               	addlw	67
  1126  055E  0086               	movwf	6
  1127  055F  3001               	movlw	1	; select bank2/3
  1128  0560  0087               	movwf	7
  1129  0561  1081               	bcf	1,1
  1130                           
  1131                           ;MCU_B1.c: 728: UART_Receive();
  1132  0562  3185  2588  3185   	fcall	_UART_Receive
  1133                           
  1134                           ;MCU_B1.c: 729: setSegmentDisplayNumber(UART->RxData[5]);
  1135  0565  0020               	movlb	0	; select bank0
  1136  0566  0856               	movf	_UART,w
  1137  0567  3E25               	addlw	37
  1138  0568  0086               	movwf	6
  1139  0569  3001               	movlw	1	; select bank2/3
  1140  056A  0087               	movwf	7
  1141  056B  0801               	movf	1,w
  1142  056C  00C4               	movwf	??_UART_Main
  1143  056D  01C5               	clrf	??_UART_Main+1
  1144  056E  0844               	movf	??_UART_Main,w
  1145  056F  00A9               	movwf	setSegmentDisplayNumber@number
  1146  0570  0845               	movf	??_UART_Main+1,w
  1147  0571  00AA               	movwf	setSegmentDisplayNumber@number+1
  1148  0572  3180  2042         	fcall	_setSegmentDisplayNumber
  1149                           
  1150                           ;MCU_B1.c: 730: RCIE=1;
  1151  0574  0021               	movlb	1	; select bank1
  1152  0575  1691               	bsf	17,5	;volatile
  1153                           
  1154                           ;MCU_B1.c: 731: }
  1155  0576  0008               	return
  1156  0577                     l2579:	
  1157                           
  1158                           ;MCU_B1.c: 732: else
  1159                           ;MCU_B1.c: 733: {
  1160                           ;MCU_B1.c: 734: if(UART->TxGO)
  1161  0577  0020               	movlb	0	; select bank0
  1162  0578  0856               	movf	_UART,w
  1163  0579  3E43               	addlw	67
  1164  057A  0086               	movwf	6
  1165  057B  3001               	movlw	1	; select bank2/3
  1166  057C  0087               	movwf	7
  1167  057D  1C01               	btfss	1,0
  1168  057E  0008               	return
  1169                           
  1170                           ;MCU_B1.c: 735: {
  1171                           ;MCU_B1.c: 736: UART->TxGO=0;
  1172  057F  0856               	movf	_UART,w
  1173  0580  3E43               	addlw	67
  1174  0581  0086               	movwf	6
  1175  0582  3001               	movlw	1	; select bank2/3
  1176  0583  0087               	movwf	7
  1177  0584  1001               	bcf	1,0
  1178                           
  1179                           ;MCU_B1.c: 737: UART_Transmit();
  1180  0585  3184  246C         	fcall	_UART_Transmit
  1181  0587  0008               	return
  1182  0588                     __end_of_UART_Main:	
  1183                           
  1184                           	psect	text2
  1185  0042                     __ptext2:	
  1186 ;; *************** function _setSegmentDisplayNumber *****************
  1187 ;; Defined at:
  1188 ;;		line 20 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  number          2    9[BANK0 ] int 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  i               1   15[BANK0 ] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;		None               void
  1195 ;; Registers used:
  1196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1202 ;;      Params:         0       2       0       0       0       0       0       0
  1203 ;;      Locals:         0       1       0       0       0       0       0       0
  1204 ;;      Temps:          0       4       0       0       0       0       0       0
  1205 ;;      Totals:         0       7       0       0       0       0       0       0
  1206 ;;Total ram usage:        7 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    5
  1209 ;; This function calls:
  1210 ;;		___awdiv
  1211 ;;		___awmod
  1212 ;; This function is called by:
  1213 ;;		_UART_Main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           
  1218                           ;psect for function _setSegmentDisplayNumber
  1219  0042                     _setSegmentDisplayNumber:	
  1220                           
  1221                           ;SegmentDisplay_A2.c: 22: char i;
  1222                           ;SegmentDisplay_A2.c: 23: if(Segment->Enable)
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _setSegmentDisplayNumber: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  1226  0042  0020               	movlb	0	; select bank0
  1227  0043  0858               	movf	_Segment,w
  1228  0044  3E15               	addlw	21
  1229  0045  0086               	movwf	6
  1230  0046  0187               	clrf	7
  1231  0047  1C01               	btfss	1,0
  1232  0048  0008               	return
  1233                           
  1234                           ;SegmentDisplay_A2.c: 24: {
  1235                           ;SegmentDisplay_A2.c: 25: Segment->GO=1;
  1236  0049  0858               	movf	_Segment,w
  1237  004A  3E15               	addlw	21
  1238  004B  0086               	movwf	6
  1239  004C  0187               	clrf	7
  1240  004D  1481               	bsf	1,1
  1241                           
  1242                           ;SegmentDisplay_A2.c: 26: if(Segment->Hex)
  1243  004E  0858               	movf	_Segment,w
  1244  004F  3E15               	addlw	21
  1245  0050  0086               	movwf	6
  1246  0051  0187               	clrf	7
  1247  0052  1D01               	btfss	1,2
  1248  0053  288E               	goto	l2317
  1249                           
  1250                           ;SegmentDisplay_A2.c: 27: {
  1251                           ;SegmentDisplay_A2.c: 28: Segment->Num[0]=(number & 0x000f);
  1252  0054  0829               	movf	setSegmentDisplayNumber@number,w
  1253  0055  390F               	andlw	15
  1254  0056  00AB               	movwf	??_setSegmentDisplayNumber
  1255  0057  0858               	movf	_Segment,w
  1256  0058  3E11               	addlw	17
  1257  0059  0086               	movwf	6
  1258  005A  0187               	clrf	7
  1259  005B  082B               	movf	??_setSegmentDisplayNumber,w
  1260  005C  0081               	movwf	1
  1261                           
  1262                           ;SegmentDisplay_A2.c: 29: Segment->Num[1]=((number>>4)&0x000f);
  1263  005D  082A               	movf	setSegmentDisplayNumber@number+1,w
  1264  005E  00AC               	movwf	??_setSegmentDisplayNumber+1
  1265  005F  0829               	movf	setSegmentDisplayNumber@number,w
  1266  0060  00AB               	movwf	??_setSegmentDisplayNumber
  1267  0061  3004               	movlw	4
  1268  0062  00AD               	movwf	??_setSegmentDisplayNumber+2
  1269  0063                     u3065:	
  1270  0063  0D2C               	rlf	??_setSegmentDisplayNumber+1,w
  1271  0064  0CAC               	rrf	??_setSegmentDisplayNumber+1,f
  1272  0065  0CAB               	rrf	??_setSegmentDisplayNumber,f
  1273  0066  0BAD               	decfsz	??_setSegmentDisplayNumber+2,f
  1274  0067  2863               	goto	u3065
  1275  0068  082B               	movf	??_setSegmentDisplayNumber,w
  1276  0069  390F               	andlw	15
  1277  006A  00AE               	movwf	??_setSegmentDisplayNumber+3
  1278  006B  0858               	movf	_Segment,w
  1279  006C  3E12               	addlw	18
  1280  006D  0086               	movwf	6
  1281  006E  0187               	clrf	7
  1282  006F  082E               	movf	??_setSegmentDisplayNumber+3,w
  1283  0070  0081               	movwf	1
  1284                           
  1285                           ;SegmentDisplay_A2.c: 30: Segment->Num[2]=((number>>8)&0x000f);
  1286  0071  082A               	movf	setSegmentDisplayNumber@number+1,w
  1287  0072  390F               	andlw	15
  1288  0073  00AB               	movwf	??_setSegmentDisplayNumber
  1289  0074  0858               	movf	_Segment,w
  1290  0075  3E13               	addlw	19
  1291  0076  0086               	movwf	6
  1292  0077  0187               	clrf	7
  1293  0078  082B               	movf	??_setSegmentDisplayNumber,w
  1294  0079  0081               	movwf	1
  1295                           
  1296                           ;SegmentDisplay_A2.c: 31: Segment->Num[3]=((number>>12)&0x000f);
  1297  007A  082A               	movf	setSegmentDisplayNumber@number+1,w
  1298  007B  00AC               	movwf	??_setSegmentDisplayNumber+1
  1299  007C  0829               	movf	setSegmentDisplayNumber@number,w
  1300  007D  00AB               	movwf	??_setSegmentDisplayNumber
  1301  007E  300C               	movlw	12
  1302  007F  00AD               	movwf	??_setSegmentDisplayNumber+2
  1303  0080                     u3075:	
  1304  0080  0D2C               	rlf	??_setSegmentDisplayNumber+1,w
  1305  0081  0CAC               	rrf	??_setSegmentDisplayNumber+1,f
  1306  0082  0CAB               	rrf	??_setSegmentDisplayNumber,f
  1307  0083  0BAD               	decfsz	??_setSegmentDisplayNumber+2,f
  1308  0084  2880               	goto	u3075
  1309  0085  082B               	movf	??_setSegmentDisplayNumber,w
  1310  0086  390F               	andlw	15
  1311  0087  00AE               	movwf	??_setSegmentDisplayNumber+3
  1312  0088  0858               	movf	_Segment,w
  1313  0089  3E14               	addlw	20
  1314  008A  0086               	movwf	6
  1315  008B  0187               	clrf	7
  1316  008C  082E               	movf	??_setSegmentDisplayNumber+3,w
  1317  008D  293B               	goto	L1
  1318  008E                     l2317:	
  1319                           ;SegmentDisplay_A2.c: 32: }
  1320                           
  1321                           
  1322                           ;SegmentDisplay_A2.c: 33: else if(Segment->Dec)
  1323  008E  0858               	movf	_Segment,w
  1324  008F  3E15               	addlw	21
  1325  0090  0086               	movwf	6
  1326  0091  0187               	clrf	7
  1327  0092  1D81               	btfss	1,3
  1328  0093  293C               	goto	l2345
  1329                           
  1330                           ;SegmentDisplay_A2.c: 34: {
  1331                           ;SegmentDisplay_A2.c: 35: if(number > 0x270f)
  1332  0094  082A               	movf	setSegmentDisplayNumber@number+1,w
  1333  0095  3A80               	xorlw	128
  1334  0096  00AB               	movwf	??_setSegmentDisplayNumber
  1335  0097  30A7               	movlw	167
  1336  0098  022B               	subwf	??_setSegmentDisplayNumber,w
  1337  0099  1D03               	skipz
  1338  009A  289D               	goto	u3095
  1339  009B  3010               	movlw	16
  1340  009C  0229               	subwf	setSegmentDisplayNumber@number,w
  1341  009D                     u3095:	
  1342  009D  1C03               	skipc
  1343  009E  28B5               	goto	l2333
  1344                           
  1345                           ;SegmentDisplay_A2.c: 36: {
  1346                           ;SegmentDisplay_A2.c: 37: for(i=0 ; i<4; i++)
  1347  009F  0020               	movlb	0	; select bank0
  1348  00A0  01AF               	clrf	setSegmentDisplayNumber@i
  1349  00A1                     L2:	
  1350  00A1  3004               	movlw	4
  1351  00A2  022F               	subwf	setSegmentDisplayNumber@i,w
  1352  00A3  1803               	btfsc	3,0
  1353  00A4  293C               	goto	l2345
  1354                           
  1355                           ;SegmentDisplay_A2.c: 38: {
  1356                           ;SegmentDisplay_A2.c: 39: Segment->Num[i]=16;
  1357  00A5  3010               	movlw	16
  1358  00A6  00AB               	movwf	??_setSegmentDisplayNumber
  1359  00A7  082F               	movf	setSegmentDisplayNumber@i,w
  1360  00A8  3E11               	addlw	17
  1361  00A9  0758               	addwf	_Segment,w
  1362  00AA  00AC               	movwf	??_setSegmentDisplayNumber+1
  1363  00AB  082C               	movf	??_setSegmentDisplayNumber+1,w
  1364  00AC  0086               	movwf	6
  1365  00AD  0187               	clrf	7
  1366  00AE  082B               	movf	??_setSegmentDisplayNumber,w
  1367  00AF  0081               	movwf	1
  1368  00B0  3001               	movlw	1
  1369  00B1  00AB               	movwf	??_setSegmentDisplayNumber
  1370  00B2  082B               	movf	??_setSegmentDisplayNumber,w
  1371  00B3  07AF               	addwf	setSegmentDisplayNumber@i,f
  1372  00B4  28A1               	goto	L2
  1373  00B5                     l2333:	
  1374                           ;SegmentDisplay_A2.c: 40: }
  1375                           ;SegmentDisplay_A2.c: 41: }
  1376                           
  1377                           
  1378                           ;SegmentDisplay_A2.c: 42: else
  1379                           ;SegmentDisplay_A2.c: 43: {
  1380                           ;SegmentDisplay_A2.c: 44: Segment->Num[3]=(number/1000);
  1381  00B5  30E8               	movlw	232
  1382  00B6  0020               	movlb	0	; select bank0
  1383  00B7  00A0               	movwf	___awdiv@divisor
  1384  00B8  3003               	movlw	3
  1385  00B9  00A1               	movwf	___awdiv@divisor+1
  1386  00BA  082A               	movf	setSegmentDisplayNumber@number+1,w
  1387  00BB  01A3               	clrf	___awdiv@dividend+1
  1388  00BC  07A3               	addwf	___awdiv@dividend+1,f
  1389  00BD  0829               	movf	setSegmentDisplayNumber@number,w
  1390  00BE  01A2               	clrf	___awdiv@dividend
  1391  00BF  07A2               	addwf	___awdiv@dividend,f
  1392  00C0  3183  23D0  3180   	fcall	___awdiv
  1393  00C3  0020               	movlb	0	; select bank0
  1394  00C4  0820               	movf	?___awdiv,w
  1395  00C5  00AB               	movwf	??_setSegmentDisplayNumber
  1396  00C6  0858               	movf	_Segment,w
  1397  00C7  3E14               	addlw	20
  1398  00C8  0086               	movwf	6
  1399  00C9  0187               	clrf	7
  1400  00CA  082B               	movf	??_setSegmentDisplayNumber,w
  1401  00CB  0081               	movwf	1
  1402                           
  1403                           ;SegmentDisplay_A2.c: 45: number%=1000;
  1404  00CC  30E8               	movlw	232
  1405  00CD  00A0               	movwf	___awmod@divisor
  1406  00CE  3003               	movlw	3
  1407  00CF  00A1               	movwf	___awmod@divisor+1
  1408  00D0  082A               	movf	setSegmentDisplayNumber@number+1,w
  1409  00D1  01A3               	clrf	___awmod@dividend+1
  1410  00D2  07A3               	addwf	___awmod@dividend+1,f
  1411  00D3  0829               	movf	setSegmentDisplayNumber@number,w
  1412  00D4  01A2               	clrf	___awmod@dividend
  1413  00D5  07A2               	addwf	___awmod@dividend,f
  1414  00D6  3184  2424  3180   	fcall	___awmod
  1415  00D9  0020               	movlb	0	; select bank0
  1416  00DA  0821               	movf	?___awmod+1,w
  1417  00DB  01AA               	clrf	setSegmentDisplayNumber@number+1
  1418  00DC  07AA               	addwf	setSegmentDisplayNumber@number+1,f
  1419  00DD  0820               	movf	?___awmod,w
  1420  00DE  01A9               	clrf	setSegmentDisplayNumber@number
  1421  00DF  07A9               	addwf	setSegmentDisplayNumber@number,f
  1422                           
  1423                           ;SegmentDisplay_A2.c: 46: Segment->Num[2]=(number/100);
  1424  00E0  3064               	movlw	100
  1425  00E1  00A0               	movwf	___awdiv@divisor
  1426  00E2  3000               	movlw	0
  1427  00E3  00A1               	movwf	___awdiv@divisor+1
  1428  00E4  082A               	movf	setSegmentDisplayNumber@number+1,w
  1429  00E5  01A3               	clrf	___awdiv@dividend+1
  1430  00E6  07A3               	addwf	___awdiv@dividend+1,f
  1431  00E7  0829               	movf	setSegmentDisplayNumber@number,w
  1432  00E8  01A2               	clrf	___awdiv@dividend
  1433  00E9  07A2               	addwf	___awdiv@dividend,f
  1434  00EA  3183  23D0  3180   	fcall	___awdiv
  1435  00ED  0020               	movlb	0	; select bank0
  1436  00EE  0820               	movf	?___awdiv,w
  1437  00EF  00AB               	movwf	??_setSegmentDisplayNumber
  1438  00F0  0858               	movf	_Segment,w
  1439  00F1  3E13               	addlw	19
  1440  00F2  0086               	movwf	6
  1441  00F3  0187               	clrf	7
  1442  00F4  082B               	movf	??_setSegmentDisplayNumber,w
  1443  00F5  0081               	movwf	1
  1444                           
  1445                           ;SegmentDisplay_A2.c: 47: number%=100;
  1446  00F6  3064               	movlw	100
  1447  00F7  00A0               	movwf	___awmod@divisor
  1448  00F8  3000               	movlw	0
  1449  00F9  00A1               	movwf	___awmod@divisor+1
  1450  00FA  082A               	movf	setSegmentDisplayNumber@number+1,w
  1451  00FB  01A3               	clrf	___awmod@dividend+1
  1452  00FC  07A3               	addwf	___awmod@dividend+1,f
  1453  00FD  0829               	movf	setSegmentDisplayNumber@number,w
  1454  00FE  01A2               	clrf	___awmod@dividend
  1455  00FF  07A2               	addwf	___awmod@dividend,f
  1456  0100  3184  2424  3180   	fcall	___awmod
  1457  0103  0020               	movlb	0	; select bank0
  1458  0104  0821               	movf	?___awmod+1,w
  1459  0105  01AA               	clrf	setSegmentDisplayNumber@number+1
  1460  0106  07AA               	addwf	setSegmentDisplayNumber@number+1,f
  1461  0107  0820               	movf	?___awmod,w
  1462  0108  01A9               	clrf	setSegmentDisplayNumber@number
  1463  0109  07A9               	addwf	setSegmentDisplayNumber@number,f
  1464                           
  1465                           ;SegmentDisplay_A2.c: 48: Segment->Num[1]=(number/10);
  1466  010A  300A               	movlw	10
  1467  010B  00A0               	movwf	___awdiv@divisor
  1468  010C  3000               	movlw	0
  1469  010D  00A1               	movwf	___awdiv@divisor+1
  1470  010E  082A               	movf	setSegmentDisplayNumber@number+1,w
  1471  010F  01A3               	clrf	___awdiv@dividend+1
  1472  0110  07A3               	addwf	___awdiv@dividend+1,f
  1473  0111  0829               	movf	setSegmentDisplayNumber@number,w
  1474  0112  01A2               	clrf	___awdiv@dividend
  1475  0113  07A2               	addwf	___awdiv@dividend,f
  1476  0114  3183  23D0  3180   	fcall	___awdiv
  1477  0117  0020               	movlb	0	; select bank0
  1478  0118  0820               	movf	?___awdiv,w
  1479  0119  00AB               	movwf	??_setSegmentDisplayNumber
  1480  011A  0858               	movf	_Segment,w
  1481  011B  3E12               	addlw	18
  1482  011C  0086               	movwf	6
  1483  011D  0187               	clrf	7
  1484  011E  082B               	movf	??_setSegmentDisplayNumber,w
  1485  011F  0081               	movwf	1
  1486                           
  1487                           ;SegmentDisplay_A2.c: 49: number%=10;
  1488  0120  300A               	movlw	10
  1489  0121  00A0               	movwf	___awmod@divisor
  1490  0122  3000               	movlw	0
  1491  0123  00A1               	movwf	___awmod@divisor+1
  1492  0124  082A               	movf	setSegmentDisplayNumber@number+1,w
  1493  0125  01A3               	clrf	___awmod@dividend+1
  1494  0126  07A3               	addwf	___awmod@dividend+1,f
  1495  0127  0829               	movf	setSegmentDisplayNumber@number,w
  1496  0128  01A2               	clrf	___awmod@dividend
  1497  0129  07A2               	addwf	___awmod@dividend,f
  1498  012A  3184  2424  3180   	fcall	___awmod
  1499  012D  0020               	movlb	0	; select bank0
  1500  012E  0821               	movf	?___awmod+1,w
  1501  012F  01AA               	clrf	setSegmentDisplayNumber@number+1
  1502  0130  07AA               	addwf	setSegmentDisplayNumber@number+1,f
  1503  0131  0820               	movf	?___awmod,w
  1504  0132  01A9               	clrf	setSegmentDisplayNumber@number
  1505  0133  07A9               	addwf	setSegmentDisplayNumber@number,f
  1506                           
  1507                           ;SegmentDisplay_A2.c: 50: Segment->Num[0]=number;
  1508  0134  0829               	movf	setSegmentDisplayNumber@number,w
  1509  0135  00AB               	movwf	??_setSegmentDisplayNumber
  1510  0136  0858               	movf	_Segment,w
  1511  0137  3E11               	addlw	17
  1512  0138  0086               	movwf	6
  1513  0139  0187               	clrf	7
  1514  013A  082B               	movf	??_setSegmentDisplayNumber,w
  1515  013B                     L1:	
  1516  013B  0081               	movwf	1
  1517  013C                     l2345:	
  1518                           
  1519                           ;SegmentDisplay_A2.c: 51: }
  1520                           ;SegmentDisplay_A2.c: 52: }
  1521                           ;SegmentDisplay_A2.c: 53: if(Segment->Num[3] > 0)
  1522  013C  0858               	movf	_Segment,w
  1523  013D  3E14               	addlw	20
  1524  013E  0086               	movwf	6
  1525  013F  0187               	clrf	7
  1526  0140  0801               	movf	1,w
  1527  0141  3A00               	xorlw	0
  1528  0142  1903               	skipnz
  1529  0143  294D               	goto	l2349
  1530                           
  1531                           ;SegmentDisplay_A2.c: 54: {
  1532                           ;SegmentDisplay_A2.c: 55: Segment->DisplayCount=3;
  1533  0144  3003               	movlw	3
  1534  0145  00AB               	movwf	??_setSegmentDisplayNumber
  1535  0146  0858               	movf	_Segment,w
  1536  0147  3E17               	addlw	23
  1537  0148  0086               	movwf	6
  1538  0149  0187               	clrf	7
  1539  014A  082B               	movf	??_setSegmentDisplayNumber,w
  1540  014B  0081               	movwf	1
  1541                           
  1542                           ;SegmentDisplay_A2.c: 56: }
  1543  014C  0008               	return
  1544  014D                     l2349:	
  1545                           
  1546                           ;SegmentDisplay_A2.c: 57: else if(Segment->Num[2] > 0)
  1547  014D  0858               	movf	_Segment,w
  1548  014E  3E13               	addlw	19
  1549  014F  0086               	movwf	6
  1550  0150  0187               	clrf	7
  1551  0151  0801               	movf	1,w
  1552  0152  3A00               	xorlw	0
  1553  0153  1903               	skipnz
  1554  0154  295E               	goto	l2353
  1555                           
  1556                           ;SegmentDisplay_A2.c: 58: {
  1557                           ;SegmentDisplay_A2.c: 59: Segment->DisplayCount=2;
  1558  0155  3002               	movlw	2
  1559  0156  00AB               	movwf	??_setSegmentDisplayNumber
  1560  0157  0858               	movf	_Segment,w
  1561  0158  3E17               	addlw	23
  1562  0159  0086               	movwf	6
  1563  015A  0187               	clrf	7
  1564  015B  082B               	movf	??_setSegmentDisplayNumber,w
  1565  015C  0081               	movwf	1
  1566                           
  1567                           ;SegmentDisplay_A2.c: 60: }
  1568  015D  0008               	return
  1569  015E                     l2353:	
  1570                           
  1571                           ;SegmentDisplay_A2.c: 61: else if(Segment->Num[1] > 0)
  1572  015E  0858               	movf	_Segment,w
  1573  015F  3E12               	addlw	18
  1574  0160  0086               	movwf	6
  1575  0161  0187               	clrf	7
  1576  0162  0801               	movf	1,w
  1577  0163  3A00               	xorlw	0
  1578  0164  1903               	skipnz
  1579  0165  296D               	goto	l2357
  1580                           
  1581                           ;SegmentDisplay_A2.c: 62: {
  1582                           ;SegmentDisplay_A2.c: 63: Segment->DisplayCount=1;
  1583  0166  0858               	movf	_Segment,w
  1584  0167  3E17               	addlw	23
  1585  0168  0086               	movwf	6
  1586  0169  0187               	clrf	7
  1587  016A  0181               	clrf	1
  1588  016B  0A81               	incf	1,f
  1589                           
  1590                           ;SegmentDisplay_A2.c: 64: }
  1591  016C  0008               	return
  1592  016D                     l2357:	
  1593                           
  1594                           ;SegmentDisplay_A2.c: 65: else
  1595                           ;SegmentDisplay_A2.c: 66: {
  1596                           ;SegmentDisplay_A2.c: 67: Segment->DisplayCount=0;
  1597  016D  0858               	movf	_Segment,w
  1598  016E  3E17               	addlw	23
  1599  016F  0086               	movwf	6
  1600  0170  0187               	clrf	7
  1601  0171  0181               	clrf	1
  1602  0172  0008               	return
  1603  0173                     __end_of_setSegmentDisplayNumber:	
  1604                           
  1605                           	psect	text3
  1606  0424                     __ptext3:	
  1607 ;; *************** function ___awmod *****************
  1608 ;; Defined at:
  1609 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  divisor         2    0[BANK0 ] int 
  1612 ;;  dividend        2    2[BANK0 ] int 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  sign            1    6[BANK0 ] unsigned char 
  1615 ;;  counter         1    5[BANK0 ] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2    0[BANK0 ] int 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1625 ;;      Params:         0       4       0       0       0       0       0       0
  1626 ;;      Locals:         0       2       0       0       0       0       0       0
  1627 ;;      Temps:          0       1       0       0       0       0       0       0
  1628 ;;      Totals:         0       7       0       0       0       0       0       0
  1629 ;;Total ram usage:        7 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    4
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_setSegmentDisplayNumber
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function ___awmod
  1641  0424                     ___awmod:	
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1645  0424  0020               	movlb	0	; select bank0
  1646  0425  01A6               	clrf	___awmod@sign
  1647  0426  1FA3               	btfss	___awmod@dividend+1,7
  1648  0427  2C2F               	goto	l2277
  1649  0428  09A2               	comf	___awmod@dividend,f
  1650  0429  09A3               	comf	___awmod@dividend+1,f
  1651  042A  0AA2               	incf	___awmod@dividend,f
  1652  042B  1903               	skipnz
  1653  042C  0AA3               	incf	___awmod@dividend+1,f
  1654  042D  01A6               	clrf	___awmod@sign
  1655  042E  0AA6               	incf	___awmod@sign,f
  1656  042F                     l2277:	
  1657  042F  1FA1               	btfss	___awmod@divisor+1,7
  1658  0430  2C36               	goto	l2281
  1659  0431  09A0               	comf	___awmod@divisor,f
  1660  0432  09A1               	comf	___awmod@divisor+1,f
  1661  0433  0AA0               	incf	___awmod@divisor,f
  1662  0434  1903               	skipnz
  1663  0435  0AA1               	incf	___awmod@divisor+1,f
  1664  0436                     l2281:	
  1665  0436  0821               	movf	___awmod@divisor+1,w
  1666  0437  0420               	iorwf	___awmod@divisor,w
  1667  0438  1903               	skipnz
  1668  0439  2C5D               	goto	l2299
  1669  043A  01A5               	clrf	___awmod@counter
  1670  043B  0AA5               	incf	___awmod@counter,f
  1671  043C                     l2289:	
  1672  043C  1BA1               	btfsc	___awmod@divisor+1,7
  1673  043D  2C48               	goto	l2291
  1674  043E  3001               	movlw	1
  1675  043F                     u2985:	
  1676  043F  35A0               	lslf	___awmod@divisor,f
  1677  0440  0DA1               	rlf	___awmod@divisor+1,f
  1678  0441  0B89               	decfsz	9,f
  1679  0442  2C3F               	goto	u2985
  1680  0443  3001               	movlw	1
  1681  0444  00A4               	movwf	??___awmod
  1682  0445  0824               	movf	??___awmod,w
  1683  0446  07A5               	addwf	___awmod@counter,f
  1684  0447  2C3C               	goto	l2289
  1685  0448                     l2291:	
  1686  0448  0821               	movf	___awmod@divisor+1,w
  1687  0449  0223               	subwf	___awmod@dividend+1,w
  1688  044A  1D03               	skipz
  1689  044B  2C4E               	goto	u3005
  1690  044C  0820               	movf	___awmod@divisor,w
  1691  044D  0222               	subwf	___awmod@dividend,w
  1692  044E                     u3005:	
  1693  044E  1C03               	skipc
  1694  044F  2C54               	goto	l2295
  1695  0450  0820               	movf	___awmod@divisor,w
  1696  0451  02A2               	subwf	___awmod@dividend,f
  1697  0452  0821               	movf	___awmod@divisor+1,w
  1698  0453  3BA3               	subwfb	___awmod@dividend+1,f
  1699  0454                     l2295:	
  1700  0454  3001               	movlw	1
  1701  0455                     u3015:	
  1702  0455  36A1               	lsrf	___awmod@divisor+1,f
  1703  0456  0CA0               	rrf	___awmod@divisor,f
  1704  0457  0B89               	decfsz	9,f
  1705  0458  2C55               	goto	u3015
  1706  0459  3001               	movlw	1
  1707  045A  02A5               	subwf	___awmod@counter,f
  1708  045B  1D03               	btfss	3,2
  1709  045C  2C48               	goto	l2291
  1710  045D                     l2299:	
  1711  045D  0826               	movf	___awmod@sign,w
  1712  045E  1903               	btfsc	3,2
  1713  045F  2C65               	goto	l2303
  1714  0460  09A2               	comf	___awmod@dividend,f
  1715  0461  09A3               	comf	___awmod@dividend+1,f
  1716  0462  0AA2               	incf	___awmod@dividend,f
  1717  0463  1903               	skipnz
  1718  0464  0AA3               	incf	___awmod@dividend+1,f
  1719  0465                     l2303:	
  1720  0465  0823               	movf	___awmod@dividend+1,w
  1721  0466  01A1               	clrf	?___awmod+1
  1722  0467  07A1               	addwf	?___awmod+1,f
  1723  0468  0822               	movf	___awmod@dividend,w
  1724  0469  01A0               	clrf	?___awmod
  1725  046A  07A0               	addwf	?___awmod,f
  1726  046B  0008               	return
  1727  046C                     __end_of___awmod:	
  1728                           
  1729                           	psect	text4
  1730  03D0                     __ptext4:	
  1731 ;; *************** function ___awdiv *****************
  1732 ;; Defined at:
  1733 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  divisor         2    0[BANK0 ] int 
  1736 ;;  dividend        2    2[BANK0 ] int 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  quotient        2    7[BANK0 ] int 
  1739 ;;  sign            1    6[BANK0 ] unsigned char 
  1740 ;;  counter         1    5[BANK0 ] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2    0[BANK0 ] int 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1750 ;;      Params:         0       4       0       0       0       0       0       0
  1751 ;;      Locals:         0       4       0       0       0       0       0       0
  1752 ;;      Temps:          0       1       0       0       0       0       0       0
  1753 ;;      Totals:         0       9       0       0       0       0       0       0
  1754 ;;Total ram usage:        9 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    4
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_setSegmentDisplayNumber
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function ___awdiv
  1766  03D0                     ___awdiv:	
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1770  03D0  0020               	movlb	0	; select bank0
  1771  03D1  01A6               	clrf	___awdiv@sign
  1772  03D2  1FA1               	btfss	___awdiv@divisor+1,7
  1773  03D3  2BDB               	goto	l2233
  1774  03D4  09A0               	comf	___awdiv@divisor,f
  1775  03D5  09A1               	comf	___awdiv@divisor+1,f
  1776  03D6  0AA0               	incf	___awdiv@divisor,f
  1777  03D7  1903               	skipnz
  1778  03D8  0AA1               	incf	___awdiv@divisor+1,f
  1779  03D9  01A6               	clrf	___awdiv@sign
  1780  03DA  0AA6               	incf	___awdiv@sign,f
  1781  03DB                     l2233:	
  1782  03DB  1FA3               	btfss	___awdiv@dividend+1,7
  1783  03DC  2BE6               	goto	l2239
  1784  03DD  09A2               	comf	___awdiv@dividend,f
  1785  03DE  09A3               	comf	___awdiv@dividend+1,f
  1786  03DF  0AA2               	incf	___awdiv@dividend,f
  1787  03E0  1903               	skipnz
  1788  03E1  0AA3               	incf	___awdiv@dividend+1,f
  1789  03E2  3001               	movlw	1
  1790  03E3  00A4               	movwf	??___awdiv
  1791  03E4  0824               	movf	??___awdiv,w
  1792  03E5  06A6               	xorwf	___awdiv@sign,f
  1793  03E6                     l2239:	
  1794  03E6  01A7               	clrf	___awdiv@quotient
  1795  03E7  01A8               	clrf	___awdiv@quotient+1
  1796  03E8  0821               	movf	___awdiv@divisor+1,w
  1797  03E9  0420               	iorwf	___awdiv@divisor,w
  1798  03EA  1903               	skipnz
  1799  03EB  2C15               	goto	l2261
  1800  03EC  01A5               	clrf	___awdiv@counter
  1801  03ED  0AA5               	incf	___awdiv@counter,f
  1802  03EE                     l2249:	
  1803  03EE  1BA1               	btfsc	___awdiv@divisor+1,7
  1804  03EF  2BFA               	goto	l2251
  1805  03F0  3001               	movlw	1
  1806  03F1                     u2885:	
  1807  03F1  35A0               	lslf	___awdiv@divisor,f
  1808  03F2  0DA1               	rlf	___awdiv@divisor+1,f
  1809  03F3  0B89               	decfsz	9,f
  1810  03F4  2BF1               	goto	u2885
  1811  03F5  3001               	movlw	1
  1812  03F6  00A4               	movwf	??___awdiv
  1813  03F7  0824               	movf	??___awdiv,w
  1814  03F8  07A5               	addwf	___awdiv@counter,f
  1815  03F9  2BEE               	goto	l2249
  1816  03FA                     l2251:	
  1817  03FA  3001               	movlw	1
  1818  03FB                     u2905:	
  1819  03FB  35A7               	lslf	___awdiv@quotient,f
  1820  03FC  0DA8               	rlf	___awdiv@quotient+1,f
  1821  03FD  0B89               	decfsz	9,f
  1822  03FE  2BFB               	goto	u2905
  1823  03FF  0821               	movf	___awdiv@divisor+1,w
  1824  0400  0223               	subwf	___awdiv@dividend+1,w
  1825  0401  1D03               	skipz
  1826  0402  2C05               	goto	u2915
  1827  0403  0820               	movf	___awdiv@divisor,w
  1828  0404  0222               	subwf	___awdiv@dividend,w
  1829  0405                     u2915:	
  1830  0405  1C03               	skipc
  1831  0406  2C0C               	goto	l2257
  1832  0407  0820               	movf	___awdiv@divisor,w
  1833  0408  02A2               	subwf	___awdiv@dividend,f
  1834  0409  0821               	movf	___awdiv@divisor+1,w
  1835  040A  3BA3               	subwfb	___awdiv@dividend+1,f
  1836  040B  1427               	bsf	___awdiv@quotient,0
  1837  040C                     l2257:	
  1838  040C  3001               	movlw	1
  1839  040D                     u2925:	
  1840  040D  36A1               	lsrf	___awdiv@divisor+1,f
  1841  040E  0CA0               	rrf	___awdiv@divisor,f
  1842  040F  0B89               	decfsz	9,f
  1843  0410  2C0D               	goto	u2925
  1844  0411  3001               	movlw	1
  1845  0412  02A5               	subwf	___awdiv@counter,f
  1846  0413  1D03               	btfss	3,2
  1847  0414  2BFA               	goto	l2251
  1848  0415                     l2261:	
  1849  0415  0826               	movf	___awdiv@sign,w
  1850  0416  1903               	btfsc	3,2
  1851  0417  2C1D               	goto	l2265
  1852  0418  09A7               	comf	___awdiv@quotient,f
  1853  0419  09A8               	comf	___awdiv@quotient+1,f
  1854  041A  0AA7               	incf	___awdiv@quotient,f
  1855  041B  1903               	skipnz
  1856  041C  0AA8               	incf	___awdiv@quotient+1,f
  1857  041D                     l2265:	
  1858  041D  0828               	movf	___awdiv@quotient+1,w
  1859  041E  01A1               	clrf	?___awdiv+1
  1860  041F  07A1               	addwf	?___awdiv+1,f
  1861  0420  0827               	movf	___awdiv@quotient,w
  1862  0421  01A0               	clrf	?___awdiv
  1863  0422  07A0               	addwf	?___awdiv,f
  1864  0423  0008               	return
  1865  0424                     __end_of___awdiv:	
  1866                           
  1867                           	psect	text5
  1868  046C                     __ptext5:	
  1869 ;; *************** function _UART_Transmit *****************
  1870 ;; Defined at:
  1871 ;;		line 741 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  j               2   33[BANK0 ] int 
  1876 ;;  i               1   35[BANK0 ] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;		None               void
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1886 ;;      Params:         0       0       0       0       0       0       0       0
  1887 ;;      Locals:         0       3       0       0       0       0       0       0
  1888 ;;      Temps:          0       3       0       0       0       0       0       0
  1889 ;;      Totals:         0       6       0       0       0       0       0       0
  1890 ;;Total ram usage:        6 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    6
  1893 ;; This function calls:
  1894 ;;		_printf
  1895 ;; This function is called by:
  1896 ;;		_UART_Main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _UART_Transmit
  1902  046C                     _UART_Transmit:	
  1903                           
  1904                           ;MCU_B1.c: 743: char i;
  1905                           ;MCU_B1.c: 744: int j;
  1906                           ;MCU_B1.c: 746: for(i=0;i<32;i++)
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _UART_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1910  046C  0020               	movlb	0	; select bank0
  1911  046D  01C3               	clrf	UART_Transmit@i
  1912  046E                     L3:	
  1913  046E  3020               	movlw	32
  1914  046F  0243               	subwf	UART_Transmit@i,w
  1915  0470  1803               	btfsc	3,0
  1916  0471  0008               	return
  1917                           
  1918                           ;MCU_B1.c: 747: {
  1919                           ;MCU_B1.c: 749: for(j=0;j<1000;j++);
  1920  0472  01C1               	clrf	UART_Transmit@j
  1921  0473  01C2               	clrf	UART_Transmit@j+1
  1922  0474  0842               	movf	UART_Transmit@j+1,w
  1923  0475  3A80               	xorlw	128
  1924  0476  00BE               	movwf	??_UART_Transmit
  1925  0477  3083               	movlw	131
  1926  0478  023E               	subwf	??_UART_Transmit,w
  1927  0479  1D03               	skipz
  1928  047A  2C7D               	goto	u3505
  1929  047B  30E8               	movlw	232
  1930  047C  0241               	subwf	UART_Transmit@j,w
  1931  047D                     u3505:	
  1932  047D  1803               	btfsc	3,0
  1933  047E  2C8F               	goto	l2481
  1934  047F                     l2479:	
  1935  047F  3001               	movlw	1
  1936  0480  0020               	movlb	0	; select bank0
  1937  0481  07C1               	addwf	UART_Transmit@j,f
  1938  0482  3000               	movlw	0
  1939  0483  3DC2               	addwfc	UART_Transmit@j+1,f
  1940  0484  0842               	movf	UART_Transmit@j+1,w
  1941  0485  3A80               	xorlw	128
  1942  0486  00BE               	movwf	??_UART_Transmit
  1943  0487  3083               	movlw	131
  1944  0488  023E               	subwf	??_UART_Transmit,w
  1945  0489  1D03               	skipz
  1946  048A  2C8D               	goto	u3515
  1947  048B  30E8               	movlw	232
  1948  048C  0241               	subwf	UART_Transmit@j,w
  1949  048D                     u3515:	
  1950  048D  1C03               	skipc
  1951  048E  2C7F               	goto	l2479
  1952  048F                     l2481:	
  1953                           
  1954                           ;MCU_B1.c: 750: printf("%d,",UART->TxData[i]);
  1955  048F  300A               	movlw	low (STR_1| (0+32768))
  1956  0490  0020               	movlb	0	; select bank0
  1957  0491  00AE               	movwf	printf@f
  1958  0492  3087               	movlw	high (STR_1| (0+32768))
  1959  0493  00AF               	movwf	printf@f+1
  1960  0494  0843               	movf	UART_Transmit@i,w
  1961  0495  0756               	addwf	_UART,w
  1962  0496  00BE               	movwf	??_UART_Transmit
  1963  0497  083E               	movf	??_UART_Transmit,w
  1964  0498  0086               	movwf	6
  1965  0499  3001               	movlw	1	; select bank2/3
  1966  049A  0087               	movwf	7
  1967  049B  0801               	movf	1,w
  1968  049C  00BF               	movwf	??_UART_Transmit+1
  1969  049D  01C0               	clrf	??_UART_Transmit+2
  1970  049E  083F               	movf	??_UART_Transmit+1,w
  1971  049F  00B0               	movwf	?_printf+2
  1972  04A0  0840               	movf	??_UART_Transmit+2,w
  1973  04A1  00B1               	movwf	?_printf+3
  1974  04A2  3181  2173  3184   	fcall	_printf
  1975  04A5  3001               	movlw	1
  1976  04A6  0020               	movlb	0	; select bank0
  1977  04A7  00BE               	movwf	??_UART_Transmit
  1978  04A8  083E               	movf	??_UART_Transmit,w
  1979  04A9  07C3               	addwf	UART_Transmit@i,f
  1980  04AA  2C6E               	goto	L3
  1981  04AB                     __end_of_UART_Transmit:	
  1982                           
  1983                           	psect	text6
  1984  0173                     __ptext6:	
  1985 ;; *************** function _printf *****************
  1986 ;; Defined at:
  1987 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  1990 ;;		 -> STR_1(4), 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  _val            4   25[BANK0 ] struct .
  1993 ;;  c               1   29[BANK0 ] char 
  1994 ;;  prec            1   24[BANK0 ] char 
  1995 ;;  flag            1   23[BANK0 ] unsigned char 
  1996 ;;  ap              1   22[BANK0 ] PTR void [1]
  1997 ;;		 -> ?_printf(2), 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  2   14[BANK0 ] int 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2007 ;;      Params:         0       4       0       0       0       0       0       0
  2008 ;;      Locals:         0       8       0       0       0       0       0       0
  2009 ;;      Temps:          0       4       0       0       0       0       0       0
  2010 ;;      Totals:         0      16       0       0       0       0       0       0
  2011 ;;Total ram usage:       16 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    5
  2014 ;; This function calls:
  2015 ;;		___lwdiv
  2016 ;;		___lwmod
  2017 ;;		_putch
  2018 ;; This function is called by:
  2019 ;;		_UART_Transmit
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _printf
  2025  0173                     _printf:	
  2026                           
  2027                           ;doprnt.c: 466: va_list ap;
  2028                           ;doprnt.c: 499: signed char c;
  2029                           ;doprnt.c: 506: signed char prec;
  2030                           ;doprnt.c: 508: unsigned char flag;
  2031                           ;doprnt.c: 527: union {
  2032                           ;doprnt.c: 528: unsigned int _val;
  2033                           ;doprnt.c: 529: struct {
  2034                           ;doprnt.c: 530: const char * _cp;
  2035                           ;doprnt.c: 531: unsigned _len;
  2036                           ;doprnt.c: 532: } _str;
  2037                           ;doprnt.c: 533: } _val;
  2038                           ;doprnt.c: 542: *ap = __va_start();
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2042  0173  3030               	movlw	(?_printf+2)& (0+255)
  2043  0174  0020               	movlb	0	; select bank0
  2044  0175  00B2               	movwf	??_printf
  2045  0176  0832               	movf	??_printf,w
  2046  0177  00B6               	movwf	printf@ap
  2047  0178                     l2223:	
  2048                           ;doprnt.c: 545: while(c = *f++) {
  2049                           
  2050  0178  0020               	movlb	0	; select bank0
  2051  0179  082F               	movf	printf@f+1,w
  2052  017A  00B3               	movwf	??_printf+1
  2053  017B  082E               	movf	printf@f,w
  2054  017C  00B2               	movwf	??_printf
  2055  017D  0AAE               	incf	printf@f,f
  2056  017E  1903               	skipnz
  2057  017F  0AAF               	incf	printf@f+1,f
  2058  0180  0832               	movf	??_printf,w
  2059  0181  0084               	movwf	4
  2060  0182  0833               	movf	??_printf+1,w
  2061  0183  0085               	movwf	5
  2062  0184  0800               	movf	0,w	;code access
  2063  0185  00B4               	movwf	??_printf+2
  2064  0186  0834               	movf	??_printf+2,w
  2065  0187  00BD               	movwf	printf@c
  2066  0188  08BD               	movf	printf@c,f
  2067  0189  1903               	btfsc	3,2
  2068  018A  0008               	return
  2069                           
  2070                           ;doprnt.c: 547: if(c != '%')
  2071  018B  083D               	movf	printf@c,w
  2072  018C  3A25               	xorlw	37
  2073  018D  1903               	skipnz
  2074  018E  2994               	goto	l2183
  2075                           
  2076                           ;doprnt.c: 549: {
  2077                           ;doprnt.c: 550: (putch(c) );
  2078  018F  083D               	movf	printf@c,w
  2079  0190  3187  271C  3181   	fcall	_putch
  2080                           
  2081                           ;doprnt.c: 551: continue;
  2082  0193  2978               	goto	l2223
  2083  0194                     l2183:	
  2084                           
  2085                           ;doprnt.c: 552: }
  2086                           ;doprnt.c: 557: flag = 0;
  2087  0194  0020               	movlb	0	; select bank0
  2088  0195  01B7               	clrf	printf@flag
  2089                           
  2090                           ;doprnt.c: 831: }
  2091                           
  2092                           ;doprnt.c: 822: continue;
  2093                           
  2094                           ;doprnt.c: 811: default:
  2095                           
  2096                           ;doprnt.c: 707: case 'i':
  2097                           ;doprnt.c: 708: break;
  2098                           
  2099                           ;doprnt.c: 706: case 'd':
  2100                           
  2101                           ;doprnt.c: 647: goto alldone;
  2102                           
  2103                           ;doprnt.c: 646: case 0:
  2104                           
  2105                           ;doprnt.c: 644: switch(c = *f++) {
  2106  0196  082F               	movf	printf@f+1,w
  2107  0197  00B3               	movwf	??_printf+1
  2108  0198  082E               	movf	printf@f,w
  2109  0199  00B2               	movwf	??_printf
  2110  019A  0AAE               	incf	printf@f,f
  2111  019B  1903               	skipnz
  2112  019C  0AAF               	incf	printf@f+1,f
  2113  019D  0832               	movf	??_printf,w
  2114  019E  0084               	movwf	4
  2115  019F  0833               	movf	??_printf+1,w
  2116  01A0  0085               	movwf	5
  2117  01A1  0800               	movf	0,w	;code access
  2118  01A2  00BD               	movwf	printf@c
  2119                           
  2120                           ; Switch size 1, requested type "space"
  2121                           ; Number of cases is 3, Range of values is 0 to 105
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte           10     6 (average)
  2125                           ; direct_byte          218     6 (fixed)
  2126                           ; jumptable            260     6 (fixed)
  2127                           ;	Chosen strategy is simple_byte
  2128  01A3  3A00               	xorlw	0	; case 0
  2129  01A4  1903               	skipnz
  2130  01A5  2A2F               	goto	l516
  2131  01A6  3A64               	xorlw	100	; case 100
  2132  01A7  1903               	skipnz
  2133  01A8  29AD               	goto	l2189
  2134  01A9  3A0D               	xorlw	13	; case 105
  2135  01AA  1903               	skipnz
  2136  01AB  29AD               	goto	l2189
  2137  01AC  2978               	goto	l2223
  2138  01AD                     l2189:	
  2139                           
  2140                           ;doprnt.c: 1262: {
  2141                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2142  01AD  0836               	movf	printf@ap,w
  2143  01AE  0086               	movwf	6
  2144  01AF  0187               	clrf	7
  2145  01B0  3F40               	moviw [0]fsr1
  2146  01B1  00B9               	movwf	printf@_val
  2147  01B2  3F41               	moviw [1]fsr1
  2148  01B3  00BA               	movwf	printf@_val+1
  2149  01B4  3002               	movlw	2
  2150  01B5  00B2               	movwf	??_printf
  2151  01B6  0832               	movf	??_printf,w
  2152  01B7  07B6               	addwf	printf@ap,f
  2153                           
  2154                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2155  01B8  1FBA               	btfss	printf@_val+1,7
  2156  01B9  29C3               	goto	l2199
  2157                           
  2158                           ;doprnt.c: 1271: flag |= 0x03;
  2159  01BA  3003               	movlw	3
  2160  01BB  00B2               	movwf	??_printf
  2161  01BC  0832               	movf	??_printf,w
  2162  01BD  04B7               	iorwf	printf@flag,f
  2163                           
  2164                           ;doprnt.c: 1272: _val._val = -_val._val;
  2165  01BE  09B9               	comf	printf@_val,f
  2166  01BF  09BA               	comf	printf@_val+1,f
  2167  01C0  0AB9               	incf	printf@_val,f
  2168  01C1  1903               	skipnz
  2169  01C2  0ABA               	incf	printf@_val+1,f
  2170  01C3                     l2199:	
  2171                           
  2172                           ;doprnt.c: 1273: }
  2173                           ;doprnt.c: 1275: }
  2174                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2175  01C3  01BD               	clrf	printf@c
  2176  01C4  0ABD               	incf	printf@c,f
  2177  01C5  083D               	movf	printf@c,w
  2178  01C6  3A05               	xorlw	5
  2179  01C7  1903               	btfsc	3,2
  2180  01C8  29E8               	goto	l2211
  2181  01C9                     l2203:	
  2182                           
  2183                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2184  01C9  083D               	movf	printf@c,w
  2185  01CA  00B2               	movwf	??_printf
  2186  01CB  01B3               	clrf	??_printf+1
  2187  01CC  35B2               	lslf	??_printf,f
  2188  01CD  0DB3               	rlf	??_printf+1,f
  2189  01CE  3000               	movlw	low (_dpowers| (0+32768))
  2190  01CF  0732               	addwf	??_printf,w
  2191  01D0  0084               	movwf	4
  2192  01D1  3087               	movlw	high (_dpowers| (0+32768))
  2193  01D2  3D33               	addwfc	??_printf+1,w
  2194  01D3  0085               	movwf	5
  2195  01D4  3F00               	moviw [0]fsr0
  2196  01D5  00B4               	movwf	??_printf+2
  2197  01D6  3F01               	moviw [1]fsr0
  2198  01D7  00B5               	movwf	??_printf+3
  2199  01D8  0835               	movf	??_printf+3,w
  2200  01D9  023A               	subwf	printf@_val+1,w
  2201  01DA  1D03               	skipz
  2202  01DB  29DE               	goto	u2805
  2203  01DC  0834               	movf	??_printf+2,w
  2204  01DD  0239               	subwf	printf@_val,w
  2205  01DE                     u2805:	
  2206  01DE  1C03               	btfss	3,0
  2207  01DF  29E8               	goto	l2211
  2208                           
  2209                           ;doprnt.c: 1316: break;
  2210  01E0  3001               	movlw	1
  2211  01E1  00B2               	movwf	??_printf
  2212  01E2  0832               	movf	??_printf,w
  2213  01E3  07BD               	addwf	printf@c,f
  2214  01E4  083D               	movf	printf@c,w
  2215  01E5  3A05               	xorlw	5
  2216  01E6  1D03               	skipz
  2217  01E7  29C9               	goto	l2203
  2218  01E8                     l2211:	
  2219                           
  2220                           ;doprnt.c: 1431: {
  2221                           ;doprnt.c: 1447: if(flag & 0x03)
  2222  01E8  0837               	movf	printf@flag,w
  2223  01E9  3903               	andlw	3
  2224  01EA  1903               	btfsc	3,2
  2225  01EB  29F0               	goto	l2215
  2226                           
  2227                           ;doprnt.c: 1448: (putch('-') );
  2228  01EC  302D               	movlw	45
  2229  01ED  3187  271C  3181   	fcall	_putch
  2230  01F0                     l2215:	
  2231                           
  2232                           ;doprnt.c: 1478: }
  2233                           ;doprnt.c: 1481: prec = c;
  2234  01F0  0020               	movlb	0	; select bank0
  2235  01F1  083D               	movf	printf@c,w
  2236  01F2  00B2               	movwf	??_printf
  2237  01F3  0832               	movf	??_printf,w
  2238  01F4  00B8               	movwf	printf@prec
  2239  01F5                     l2221:	
  2240                           ;doprnt.c: 1483: while(prec--) {
  2241                           
  2242  01F5  30FF               	movlw	-1
  2243  01F6  0020               	movlb	0	; select bank0
  2244  01F7  00B2               	movwf	??_printf
  2245  01F8  0832               	movf	??_printf,w
  2246  01F9  07B8               	addwf	printf@prec,f
  2247  01FA  0838               	movf	printf@prec,w
  2248  01FB  3AFF               	xorlw	255
  2249  01FC  1903               	btfsc	3,2
  2250  01FD  2978               	goto	l2223
  2251                           
  2252                           ;doprnt.c: 1487: {
  2253                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2254  01FE  300A               	movlw	10
  2255  01FF  00A8               	movwf	___lwmod@divisor
  2256  0200  3000               	movlw	0
  2257  0201  00A9               	movwf	___lwmod@divisor+1
  2258  0202  0838               	movf	printf@prec,w
  2259  0203  00B2               	movwf	??_printf
  2260  0204  01B3               	clrf	??_printf+1
  2261  0205  35B2               	lslf	??_printf,f
  2262  0206  0DB3               	rlf	??_printf+1,f
  2263  0207  3000               	movlw	low (_dpowers| (0+32768))
  2264  0208  0732               	addwf	??_printf,w
  2265  0209  0084               	movwf	4
  2266  020A  3087               	movlw	high (_dpowers| (0+32768))
  2267  020B  3D33               	addwfc	??_printf+1,w
  2268  020C  0085               	movwf	5
  2269  020D  3F00               	moviw [0]fsr0
  2270  020E  00A0               	movwf	___lwdiv@divisor
  2271  020F  3F01               	moviw [1]fsr0
  2272  0210  00A1               	movwf	___lwdiv@divisor+1
  2273  0211  083A               	movf	printf@_val+1,w
  2274  0212  01A3               	clrf	___lwdiv@dividend+1
  2275  0213  07A3               	addwf	___lwdiv@dividend+1,f
  2276  0214  0839               	movf	printf@_val,w
  2277  0215  01A2               	clrf	___lwdiv@dividend
  2278  0216  07A2               	addwf	___lwdiv@dividend,f
  2279  0217  3185  251D  3181   	fcall	___lwdiv
  2280  021A  0020               	movlb	0	; select bank0
  2281  021B  0821               	movf	?___lwdiv+1,w
  2282  021C  01AB               	clrf	___lwmod@dividend+1
  2283  021D  07AB               	addwf	___lwmod@dividend+1,f
  2284  021E  0820               	movf	?___lwdiv,w
  2285  021F  01AA               	clrf	___lwmod@dividend
  2286  0220  07AA               	addwf	___lwmod@dividend,f
  2287  0221  3185  25B9  3181   	fcall	___lwmod
  2288  0224  0020               	movlb	0	; select bank0
  2289  0225  0828               	movf	?___lwmod,w
  2290  0226  3E30               	addlw	48
  2291  0227  00B4               	movwf	??_printf+2
  2292  0228  0834               	movf	??_printf+2,w
  2293  0229  00BD               	movwf	printf@c
  2294                           
  2295                           ;doprnt.c: 1532: }
  2296                           ;doprnt.c: 1533: (putch(c) );
  2297  022A  083D               	movf	printf@c,w
  2298  022B  3187  271C  3181   	fcall	_putch
  2299  022E  29F5               	goto	l2221
  2300  022F                     l516:	
  2301                           ;doprnt.c: 1549: return 0;
  2302                           ;	Return value of _printf is never used
  2303                           
  2304                           ;doprnt.c: 1534: }
  2305                           ;doprnt.c: 1542: }
  2306                           ;doprnt.c: 1544: alldone:
  2307                           
  2308  022F  0008               	return
  2309  0230                     __end_of_printf:	
  2310                           
  2311                           	psect	text7
  2312  071C                     __ptext7:	
  2313 ;; *************** function _putch *****************
  2314 ;; Defined at:
  2315 ;;		line 799 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  byte            1    wreg     unsigned char 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  byte            1    0[BANK0 ] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;		None               void
  2322 ;; Registers used:
  2323 ;;		wreg
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2329 ;;      Params:         0       0       0       0       0       0       0       0
  2330 ;;      Locals:         0       1       0       0       0       0       0       0
  2331 ;;      Temps:          0       0       0       0       0       0       0       0
  2332 ;;      Totals:         0       1       0       0       0       0       0       0
  2333 ;;Total ram usage:        1 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    4
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_printf
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function _putch
  2345  071C                     _putch:	
  2346                           
  2347                           ;incstack = 0
  2348                           ; Regs used in _putch: [wreg]
  2349                           ;putch@byte stored from wreg
  2350  071C  0020               	movlb	0	; select bank0
  2351  071D  00A0               	movwf	putch@byte
  2352  071E                     l474:	
  2353                           ;MCU_B1.c: 803: continue;
  2354                           
  2355                           ;MCU_B1.c: 802: while(!TXIF)
  2356                           
  2357  071E  1E11               	btfss	17,4	;volatile
  2358  071F  2F1E               	goto	l474
  2359                           
  2360                           ;MCU_B1.c: 804: TXREG = byte;
  2361  0720  0820               	movf	putch@byte,w
  2362  0721  0023               	movlb	3	; select bank3
  2363  0722  009A               	movwf	26	;volatile
  2364  0723  0008               	return
  2365  0724                     __end_of_putch:	
  2366                           
  2367                           	psect	text8
  2368  05B9                     __ptext8:	
  2369 ;; *************** function ___lwmod *****************
  2370 ;; Defined at:
  2371 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  divisor         2    8[BANK0 ] unsigned int 
  2374 ;;  dividend        2   10[BANK0 ] unsigned int 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  counter         1   13[BANK0 ] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2    8[BANK0 ] unsigned int 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2386 ;;      Params:         0       4       0       0       0       0       0       0
  2387 ;;      Locals:         0       1       0       0       0       0       0       0
  2388 ;;      Temps:          0       1       0       0       0       0       0       0
  2389 ;;      Totals:         0       6       0       0       0       0       0       0
  2390 ;;Total ram usage:        6 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    4
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_printf
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function ___lwmod
  2402  05B9                     ___lwmod:	
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2406  05B9  0020               	movlb	0	; select bank0
  2407  05BA  0829               	movf	___lwmod@divisor+1,w
  2408  05BB  0428               	iorwf	___lwmod@divisor,w
  2409  05BC  1903               	skipnz
  2410  05BD  2DE1               	goto	l2173
  2411  05BE  01AD               	clrf	___lwmod@counter
  2412  05BF  0AAD               	incf	___lwmod@counter,f
  2413  05C0                     l2163:	
  2414  05C0  1BA9               	btfsc	___lwmod@divisor+1,7
  2415  05C1  2DCC               	goto	l2165
  2416  05C2  3001               	movlw	1
  2417  05C3                     u2725:	
  2418  05C3  35A8               	lslf	___lwmod@divisor,f
  2419  05C4  0DA9               	rlf	___lwmod@divisor+1,f
  2420  05C5  0B89               	decfsz	9,f
  2421  05C6  2DC3               	goto	u2725
  2422  05C7  3001               	movlw	1
  2423  05C8  00AC               	movwf	??___lwmod
  2424  05C9  082C               	movf	??___lwmod,w
  2425  05CA  07AD               	addwf	___lwmod@counter,f
  2426  05CB  2DC0               	goto	l2163
  2427  05CC                     l2165:	
  2428  05CC  0829               	movf	___lwmod@divisor+1,w
  2429  05CD  022B               	subwf	___lwmod@dividend+1,w
  2430  05CE  1D03               	skipz
  2431  05CF  2DD2               	goto	u2745
  2432  05D0  0828               	movf	___lwmod@divisor,w
  2433  05D1  022A               	subwf	___lwmod@dividend,w
  2434  05D2                     u2745:	
  2435  05D2  1C03               	skipc
  2436  05D3  2DD8               	goto	l2169
  2437  05D4  0828               	movf	___lwmod@divisor,w
  2438  05D5  02AA               	subwf	___lwmod@dividend,f
  2439  05D6  0829               	movf	___lwmod@divisor+1,w
  2440  05D7  3BAB               	subwfb	___lwmod@dividend+1,f
  2441  05D8                     l2169:	
  2442  05D8  3001               	movlw	1
  2443  05D9                     u2755:	
  2444  05D9  36A9               	lsrf	___lwmod@divisor+1,f
  2445  05DA  0CA8               	rrf	___lwmod@divisor,f
  2446  05DB  0B89               	decfsz	9,f
  2447  05DC  2DD9               	goto	u2755
  2448  05DD  3001               	movlw	1
  2449  05DE  02AD               	subwf	___lwmod@counter,f
  2450  05DF  1D03               	btfss	3,2
  2451  05E0  2DCC               	goto	l2165
  2452  05E1                     l2173:	
  2453  05E1  082B               	movf	___lwmod@dividend+1,w
  2454  05E2  01A9               	clrf	?___lwmod+1
  2455  05E3  07A9               	addwf	?___lwmod+1,f
  2456  05E4  082A               	movf	___lwmod@dividend,w
  2457  05E5  01A8               	clrf	?___lwmod
  2458  05E6  07A8               	addwf	?___lwmod,f
  2459  05E7  0008               	return
  2460  05E8                     __end_of___lwmod:	
  2461                           
  2462                           	psect	text9
  2463  051D                     __ptext9:	
  2464 ;; *************** function ___lwdiv *****************
  2465 ;; Defined at:
  2466 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  divisor         2    0[BANK0 ] unsigned int 
  2469 ;;  dividend        2    2[BANK0 ] unsigned int 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  quotient        2    6[BANK0 ] unsigned int 
  2472 ;;  counter         1    5[BANK0 ] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2    0[BANK0 ] unsigned int 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2482 ;;      Params:         0       4       0       0       0       0       0       0
  2483 ;;      Locals:         0       3       0       0       0       0       0       0
  2484 ;;      Temps:          0       1       0       0       0       0       0       0
  2485 ;;      Totals:         0       8       0       0       0       0       0       0
  2486 ;;Total ram usage:        8 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    4
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_printf
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function ___lwdiv
  2498  051D                     ___lwdiv:	
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2502  051D  0020               	movlb	0	; select bank0
  2503  051E  01A6               	clrf	___lwdiv@quotient
  2504  051F  01A7               	clrf	___lwdiv@quotient+1
  2505  0520  0821               	movf	___lwdiv@divisor+1,w
  2506  0521  0420               	iorwf	___lwdiv@divisor,w
  2507  0522  1903               	skipnz
  2508  0523  2D4D               	goto	l2151
  2509  0524  01A5               	clrf	___lwdiv@counter
  2510  0525  0AA5               	incf	___lwdiv@counter,f
  2511  0526                     l2139:	
  2512  0526  1BA1               	btfsc	___lwdiv@divisor+1,7
  2513  0527  2D32               	goto	l2141
  2514  0528  3001               	movlw	1
  2515  0529                     u2655:	
  2516  0529  35A0               	lslf	___lwdiv@divisor,f
  2517  052A  0DA1               	rlf	___lwdiv@divisor+1,f
  2518  052B  0B89               	decfsz	9,f
  2519  052C  2D29               	goto	u2655
  2520  052D  3001               	movlw	1
  2521  052E  00A4               	movwf	??___lwdiv
  2522  052F  0824               	movf	??___lwdiv,w
  2523  0530  07A5               	addwf	___lwdiv@counter,f
  2524  0531  2D26               	goto	l2139
  2525  0532                     l2141:	
  2526  0532  3001               	movlw	1
  2527  0533                     u2675:	
  2528  0533  35A6               	lslf	___lwdiv@quotient,f
  2529  0534  0DA7               	rlf	___lwdiv@quotient+1,f
  2530  0535  0B89               	decfsz	9,f
  2531  0536  2D33               	goto	u2675
  2532  0537  0821               	movf	___lwdiv@divisor+1,w
  2533  0538  0223               	subwf	___lwdiv@dividend+1,w
  2534  0539  1D03               	skipz
  2535  053A  2D3D               	goto	u2685
  2536  053B  0820               	movf	___lwdiv@divisor,w
  2537  053C  0222               	subwf	___lwdiv@dividend,w
  2538  053D                     u2685:	
  2539  053D  1C03               	skipc
  2540  053E  2D44               	goto	l2147
  2541  053F  0820               	movf	___lwdiv@divisor,w
  2542  0540  02A2               	subwf	___lwdiv@dividend,f
  2543  0541  0821               	movf	___lwdiv@divisor+1,w
  2544  0542  3BA3               	subwfb	___lwdiv@dividend+1,f
  2545  0543  1426               	bsf	___lwdiv@quotient,0
  2546  0544                     l2147:	
  2547  0544  3001               	movlw	1
  2548  0545                     u2695:	
  2549  0545  36A1               	lsrf	___lwdiv@divisor+1,f
  2550  0546  0CA0               	rrf	___lwdiv@divisor,f
  2551  0547  0B89               	decfsz	9,f
  2552  0548  2D45               	goto	u2695
  2553  0549  3001               	movlw	1
  2554  054A  02A5               	subwf	___lwdiv@counter,f
  2555  054B  1D03               	btfss	3,2
  2556  054C  2D32               	goto	l2141
  2557  054D                     l2151:	
  2558  054D  0827               	movf	___lwdiv@quotient+1,w
  2559  054E  01A1               	clrf	?___lwdiv+1
  2560  054F  07A1               	addwf	?___lwdiv+1,f
  2561  0550  0826               	movf	___lwdiv@quotient,w
  2562  0551  01A0               	clrf	?___lwdiv
  2563  0552  07A0               	addwf	?___lwdiv,f
  2564  0553  0008               	return
  2565  0554                     __end_of___lwdiv:	
  2566                           
  2567                           	psect	text10
  2568  0588                     __ptext10:	
  2569 ;; *************** function _UART_Receive *****************
  2570 ;; Defined at:
  2571 ;;		line 760 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  i               1    3[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;		None               void
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2585 ;;      Params:         0       0       0       0       0       0       0       0
  2586 ;;      Locals:         0       1       0       0       0       0       0       0
  2587 ;;      Temps:          0       3       0       0       0       0       0       0
  2588 ;;      Totals:         0       4       0       0       0       0       0       0
  2589 ;;Total ram usage:        4 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    4
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_UART_Main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function _UART_Receive
  2601  0588                     _UART_Receive:	
  2602                           
  2603                           ;MCU_B1.c: 762: char i;
  2604                           ;MCU_B1.c: 763: RA1=~RA1;
  2605                           
  2606                           ;incstack = 0
  2607                           ; Regs used in _UART_Receive: [wreg+fsr1l+fsr1h+status,2+status,0]
  2608  0588  3002               	movlw	2
  2609  0589  0020               	movlb	0	; select bank0
  2610  058A  068C               	xorwf	12,f
  2611                           
  2612                           ;MCU_B1.c: 765: TMain->Test=1;
  2613  058B  0855               	movf	_TMain,w
  2614  058C  3E0C               	addlw	12
  2615  058D  0086               	movwf	6
  2616  058E  0187               	clrf	7
  2617  058F  0181               	clrf	1
  2618  0590  0A81               	incf	1,f
  2619                           
  2620                           ;MCU_B1.c: 767: for(i=0;i<32;i++)
  2621  0591  01A3               	clrf	UART_Receive@i
  2622  0592  3020               	movlw	32
  2623  0593  0223               	subwf	UART_Receive@i,w
  2624  0594  1803               	btfsc	3,0
  2625  0595  2DB2               	goto	l2465
  2626  0596                     l2459:	
  2627                           
  2628                           ;MCU_B1.c: 768: {
  2629                           ;MCU_B1.c: 769: I2C->BufferWriter[i]=UART->RxData[i];
  2630  0596  0823               	movf	UART_Receive@i,w
  2631  0597  3E20               	addlw	32
  2632  0598  0756               	addwf	_UART,w
  2633  0599  00A0               	movwf	??_UART_Receive
  2634  059A  0820               	movf	??_UART_Receive,w
  2635  059B  0086               	movwf	6
  2636  059C  3001               	movlw	1	; select bank2/3
  2637  059D  0087               	movwf	7
  2638  059E  0801               	movf	1,w
  2639  059F  00A1               	movwf	??_UART_Receive+1
  2640  05A0  0823               	movf	UART_Receive@i,w
  2641  05A1  3E20               	addlw	32
  2642  05A2  0757               	addwf	_I2C,w
  2643  05A3  00A2               	movwf	??_UART_Receive+2
  2644  05A4  0822               	movf	??_UART_Receive+2,w
  2645  05A5  0086               	movwf	6
  2646  05A6  3001               	movlw	1	; select bank2/3
  2647  05A7  0087               	movwf	7
  2648  05A8  0821               	movf	??_UART_Receive+1,w
  2649  05A9  0081               	movwf	1
  2650  05AA  3001               	movlw	1
  2651  05AB  00A0               	movwf	??_UART_Receive
  2652  05AC  0820               	movf	??_UART_Receive,w
  2653  05AD  07A3               	addwf	UART_Receive@i,f
  2654  05AE  3020               	movlw	32
  2655  05AF  0223               	subwf	UART_Receive@i,w
  2656  05B0  1C03               	skipc
  2657  05B1  2D96               	goto	l2459
  2658  05B2                     l2465:	
  2659                           
  2660                           ;MCU_B1.c: 770: }
  2661                           ;MCU_B1.c: 771: I2C->MasterTxGO=1;
  2662  05B2  0857               	movf	_I2C,w
  2663  05B3  3E42               	addlw	66
  2664  05B4  0086               	movwf	6
  2665  05B5  3001               	movlw	1	; select bank2/3
  2666  05B6  0087               	movwf	7
  2667  05B7  1581               	bsf	1,3
  2668  05B8  0008               	return
  2669  05B9                     __end_of_UART_Receive:	
  2670                           
  2671                           	psect	text11
  2672  0230                     __ptext11:	
  2673 ;; *************** function _SegmentDisplay_Main *****************
  2674 ;; Defined at:
  2675 ;;		line 72 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;		None               void
  2682 ;; Registers used:
  2683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2689 ;;      Params:         0       0       0       0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0
  2691 ;;      Temps:          0       2       0       0       0       0       0       0
  2692 ;;      Totals:         0       2       0       0       0       0       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    4
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _SegmentDisplay_Main
  2705  0230                     _SegmentDisplay_Main:	
  2706                           
  2707                           ;SegmentDisplay_A2.c: 74: if(Segment->GO)
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _SegmentDisplay_Main: [wreg-fsr1h+status,2+status,0]
  2711  0230  0020               	movlb	0	; select bank0
  2712  0231  0858               	movf	_Segment,w
  2713  0232  3E15               	addlw	21
  2714  0233  0086               	movwf	6
  2715  0234  0187               	clrf	7
  2716  0235  1C81               	btfss	1,1
  2717  0236  0008               	return
  2718                           
  2719                           ;SegmentDisplay_A2.c: 75: {
  2720                           ;SegmentDisplay_A2.c: 76: Segment->Time++;
  2721  0237  3001               	movlw	1
  2722  0238  00A0               	movwf	??_SegmentDisplay_Main
  2723  0239  0858               	movf	_Segment,w
  2724  023A  3E19               	addlw	25
  2725  023B  0086               	movwf	6
  2726  023C  0187               	clrf	7
  2727  023D  0820               	movf	??_SegmentDisplay_Main,w
  2728  023E  0781               	addwf	1,f
  2729                           
  2730                           ;SegmentDisplay_A2.c: 77: if(Segment->Time == 5)
  2731  023F  0858               	movf	_Segment,w
  2732  0240  3E19               	addlw	25
  2733  0241  0086               	movwf	6
  2734  0242  0187               	clrf	7
  2735  0243  0801               	movf	1,w
  2736  0244  3A05               	xorlw	5
  2737  0245  1D03               	skipz
  2738  0246  0008               	return
  2739                           
  2740                           ;SegmentDisplay_A2.c: 78: {
  2741                           ;SegmentDisplay_A2.c: 79: Segment->Time=0;
  2742  0247  0858               	movf	_Segment,w
  2743  0248  3E19               	addlw	25
  2744  0249  0086               	movwf	6
  2745  024A  0187               	clrf	7
  2746  024B  0181               	clrf	1
  2747                           
  2748                           ;SegmentDisplay_A2.c: 80: PORTA&=0x0f;
  2749  024C  300F               	movlw	15
  2750  024D  00A0               	movwf	??_SegmentDisplay_Main
  2751  024E  0820               	movf	??_SegmentDisplay_Main,w
  2752  024F  058C               	andwf	12,f	;volatile
  2753                           
  2754                           ;SegmentDisplay_A2.c: 81: if(Segment->ComCount == 0)
  2755  0250  0858               	movf	_Segment,w
  2756  0251  3E16               	addlw	22
  2757  0252  0086               	movwf	6
  2758  0253  0187               	clrf	7
  2759  0254  0881               	movf	1,f
  2760  0255  1D03               	skipz
  2761  0256  2A59               	goto	l2599
  2762                           
  2763                           ;SegmentDisplay_A2.c: 82: {
  2764                           ;SegmentDisplay_A2.c: 83: RA4=1;
  2765  0257  160C               	bsf	12,4	;volatile
  2766                           
  2767                           ;SegmentDisplay_A2.c: 84: }
  2768  0258  2A75               	goto	l2611
  2769  0259                     l2599:	
  2770                           
  2771                           ;SegmentDisplay_A2.c: 85: else if(Segment->ComCount == 1)
  2772  0259  0858               	movf	_Segment,w
  2773  025A  3E16               	addlw	22
  2774  025B  0086               	movwf	6
  2775  025C  0187               	clrf	7
  2776  025D  0801               	movf	1,w
  2777  025E  3A01               	xorlw	1
  2778  025F  1D03               	skipz
  2779  0260  2A63               	goto	l2603
  2780                           
  2781                           ;SegmentDisplay_A2.c: 86: {
  2782                           ;SegmentDisplay_A2.c: 87: RA5=1;
  2783  0261  168C               	bsf	12,5	;volatile
  2784                           
  2785                           ;SegmentDisplay_A2.c: 88: }
  2786  0262  2A75               	goto	l2611
  2787  0263                     l2603:	
  2788                           
  2789                           ;SegmentDisplay_A2.c: 89: else if(Segment->ComCount == 2)
  2790  0263  0858               	movf	_Segment,w
  2791  0264  3E16               	addlw	22
  2792  0265  0086               	movwf	6
  2793  0266  0187               	clrf	7
  2794  0267  0801               	movf	1,w
  2795  0268  3A02               	xorlw	2
  2796  0269  1D03               	skipz
  2797  026A  2A6D               	goto	l2607
  2798                           
  2799                           ;SegmentDisplay_A2.c: 90: {
  2800                           ;SegmentDisplay_A2.c: 91: RA6=1;
  2801  026B  170C               	bsf	12,6	;volatile
  2802                           
  2803                           ;SegmentDisplay_A2.c: 92: }
  2804  026C  2A75               	goto	l2611
  2805  026D                     l2607:	
  2806                           
  2807                           ;SegmentDisplay_A2.c: 93: else if(Segment->ComCount == 3)
  2808  026D  0858               	movf	_Segment,w
  2809  026E  3E16               	addlw	22
  2810  026F  0086               	movwf	6
  2811  0270  0187               	clrf	7
  2812  0271  0801               	movf	1,w
  2813  0272  3A03               	xorlw	3
  2814  0273  1903               	btfsc	3,2
  2815                           
  2816                           ;SegmentDisplay_A2.c: 94: {
  2817                           ;SegmentDisplay_A2.c: 95: RA7=1;
  2818  0274  178C               	bsf	12,7	;volatile
  2819  0275                     l2611:	
  2820                           
  2821                           ;SegmentDisplay_A2.c: 96: }
  2822                           ;SegmentDisplay_A2.c: 97: PORTB=Segment->Display[Segment->Num[Segment->ComCount]];
  2823  0275  0858               	movf	_Segment,w
  2824  0276  3E16               	addlw	22
  2825  0277  0086               	movwf	6
  2826  0278  0187               	clrf	7
  2827  0279  0801               	movf	1,w
  2828  027A  3E11               	addlw	17
  2829  027B  0758               	addwf	_Segment,w
  2830  027C  00A0               	movwf	??_SegmentDisplay_Main
  2831  027D  0820               	movf	??_SegmentDisplay_Main,w
  2832  027E  0086               	movwf	6
  2833  027F  0187               	clrf	7
  2834  0280  0801               	movf	1,w
  2835  0281  0758               	addwf	_Segment,w
  2836  0282  00A1               	movwf	??_SegmentDisplay_Main+1
  2837  0283  0821               	movf	??_SegmentDisplay_Main+1,w
  2838  0284  0086               	movwf	6
  2839  0285  0187               	clrf	7
  2840  0286  0801               	movf	1,w
  2841  0287  008D               	movwf	13	;volatile
  2842                           
  2843                           ;SegmentDisplay_A2.c: 98: if(Segment->ComCount < Segment->DisplayCount)
  2844  0288  0858               	movf	_Segment,w
  2845  0289  3E16               	addlw	22
  2846  028A  0086               	movwf	6
  2847  028B  0187               	clrf	7
  2848  028C  0858               	movf	_Segment,w
  2849  028D  3E17               	addlw	23
  2850  028E  0084               	movwf	4
  2851  028F  0185               	clrf	5
  2852  0290  0800               	movf	0,w
  2853  0291  0201               	subwf	1,w
  2854  0292  1803               	skipnc
  2855  0293  2A9D               	goto	l2617
  2856                           
  2857                           ;SegmentDisplay_A2.c: 99: {
  2858                           ;SegmentDisplay_A2.c: 100: Segment->ComCount++;
  2859  0294  3001               	movlw	1
  2860  0295  00A0               	movwf	??_SegmentDisplay_Main
  2861  0296  0858               	movf	_Segment,w
  2862  0297  3E16               	addlw	22
  2863  0298  0086               	movwf	6
  2864  0299  0187               	clrf	7
  2865  029A  0820               	movf	??_SegmentDisplay_Main,w
  2866  029B  0781               	addwf	1,f
  2867                           
  2868                           ;SegmentDisplay_A2.c: 101: }
  2869  029C  0008               	return
  2870  029D                     l2617:	
  2871                           
  2872                           ;SegmentDisplay_A2.c: 102: else
  2873                           ;SegmentDisplay_A2.c: 103: {
  2874                           ;SegmentDisplay_A2.c: 104: Segment->ComCount=0;
  2875  029D  0858               	movf	_Segment,w
  2876  029E  3E16               	addlw	22
  2877  029F  0086               	movwf	6
  2878  02A0  0187               	clrf	7
  2879  02A1  0181               	clrf	1
  2880  02A2  0008               	return
  2881  02A3                     __end_of_SegmentDisplay_Main:	
  2882                           
  2883                           	psect	text12
  2884  0693                     __ptext12:	
  2885 ;; *************** function _SegmentDisplay_Initial *****************
  2886 ;; Defined at:
  2887 ;;		line 8 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;		None               void
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2901 ;;      Params:         0       0       0       0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0       0
  2903 ;;      Temps:          0       1       0       0       0       0       0       0
  2904 ;;      Totals:         0       1       0       0       0       0       0       0
  2905 ;;Total ram usage:        1 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    4
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_main
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           
  2916                           ;psect for function _SegmentDisplay_Initial
  2917  0693                     _SegmentDisplay_Initial:	
  2918                           
  2919                           ;SegmentDisplay_A2.c: 10: Segment=&VarSegment;
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in _SegmentDisplay_Initial: [wregfsr1]
  2923  0693  30C0               	movlw	_VarSegment& (0+255)
  2924  0694  0020               	movlb	0	; select bank0
  2925  0695  00A0               	movwf	??_SegmentDisplay_Initial
  2926  0696  0820               	movf	??_SegmentDisplay_Initial,w
  2927  0697  00D8               	movwf	_Segment
  2928                           
  2929                           ;SegmentDisplay_A2.c: 11: Segment->Enable=1;
  2930  0698  0858               	movf	_Segment,w
  2931  0699  3E15               	addlw	21
  2932  069A  0086               	movwf	6
  2933  069B  0187               	clrf	7
  2934  069C  1401               	bsf	1,0
  2935                           
  2936                           ;SegmentDisplay_A2.c: 13: Segment->Dec=1;
  2937  069D  0858               	movf	_Segment,w
  2938  069E  3E15               	addlw	21
  2939  069F  0086               	movwf	6
  2940  06A0  0187               	clrf	7
  2941  06A1  1581               	bsf	1,3
  2942  06A2  0008               	return
  2943  06A3                     __end_of_SegmentDisplay_Initial:	
  2944                           
  2945                           	psect	text13
  2946  06C3                     __ptext13:	
  2947 ;; *************** function _Mcu_Initialization *****************
  2948 ;; Defined at:
  2949 ;;		line 24 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2963 ;;      Params:         0       0       0       0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    5
  2970 ;; This function calls:
  2971 ;;		_I2C_Set
  2972 ;;		_IO_Set
  2973 ;;		_TMR1_Set
  2974 ;;		_UART_Set
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _Mcu_Initialization
  2982  06C3                     _Mcu_Initialization:	
  2983                           
  2984                           ;MCU_B1.c: 27: OSCCON=0x78; ;;
  2985                           
  2986                           ;incstack = 0
  2987                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  2988  06C3  3078               	movlw	120
  2989  06C4  0021               	movlb	1	; select bank1
  2990  06C5  0099               	movwf	25	;volatile
  2991                           
  2992                           ;MCU_B1.c: 29: IO_Set();
  2993  06C6  3186  267D  3186   	fcall	_IO_Set
  2994                           
  2995                           ;MCU_B1.c: 31: ;;
  2996                           ;MCU_B1.c: 33: TMR1_Set();
  2997  06C9  3186  26A3  3186   	fcall	_TMR1_Set
  2998                           
  2999                           ;MCU_B1.c: 35: ;;
  3000                           ;MCU_B1.c: 39: ;;
  3001                           ;MCU_B1.c: 41: ;;
  3002                           ;MCU_B1.c: 43: I2C_Set();
  3003  06CC  3187  270E  3186   	fcall	_I2C_Set
  3004                           
  3005                           ;MCU_B1.c: 45: UART_Set();
  3006  06CF  3186  2664         	fcall	_UART_Set
  3007  06D1  0008               	return
  3008  06D2                     __end_of_Mcu_Initialization:	
  3009                           
  3010                           	psect	text14
  3011  0664                     __ptext14:	
  3012 ;; *************** function _UART_Set *****************
  3013 ;; Defined at:
  3014 ;;		line 677 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;		None               void
  3021 ;; Registers used:
  3022 ;;		wreg, status,2
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3028 ;;      Params:         0       0       0       0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0
  3030 ;;      Temps:          0       1       0       0       0       0       0       0
  3031 ;;      Totals:         0       1       0       0       0       0       0       0
  3032 ;;Total ram usage:        1 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    4
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_Mcu_Initialization
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function _UART_Set
  3044  0664                     _UART_Set:	
  3045                           
  3046                           ;MCU_B1.c: 679: UART=&VarUart;
  3047                           
  3048                           ;incstack = 0
  3049                           ; Regs used in _UART_Set: [wreg+status,2]
  3050  0664  30A0               	movlw	_VarUart& (0+255)
  3051  0665  0020               	movlb	0	; select bank0
  3052  0666  00A0               	movwf	??_UART_Set
  3053  0667  0820               	movf	??_UART_Set,w
  3054  0668  00D6               	movwf	_UART
  3055                           
  3056                           ;MCU_B1.c: 680: TRISC7 = 1;
  3057  0669  0021               	movlb	1	; select bank1
  3058  066A  178E               	bsf	14,7	;volatile
  3059                           
  3060                           ;MCU_B1.c: 681: TRISC6 = 1;
  3061  066B  170E               	bsf	14,6	;volatile
  3062                           
  3063                           ;MCU_B1.c: 682: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  3064  066C  3033               	movlw	51
  3065  066D  0023               	movlb	3	; select bank3
  3066  066E  009B               	movwf	27	;volatile
  3067                           
  3068                           ;MCU_B1.c: 683: SPBRGH = 0;
  3069  066F  019C               	clrf	28	;volatile
  3070                           
  3071                           ;MCU_B1.c: 684: BRG16 = 0;
  3072  0670  119F               	bcf	31,3	;volatile
  3073                           
  3074                           ;MCU_B1.c: 685: RCSTA = (0|0x90);
  3075  0671  3090               	movlw	144
  3076  0672  009D               	movwf	29	;volatile
  3077                           
  3078                           ;MCU_B1.c: 686: TXSTA = (0x4|0|0x20);
  3079  0673  3024               	movlw	36
  3080  0674  009E               	movwf	30	;volatile
  3081                           
  3082                           ;MCU_B1.c: 687: TX9=0;
  3083  0675  131E               	bcf	30,6	;volatile
  3084                           
  3085                           ;MCU_B1.c: 688: RX9=0;
  3086  0676  131D               	bcf	29,6	;volatile
  3087                           
  3088                           ;MCU_B1.c: 689: TXIE=0;
  3089  0677  0021               	movlb	1	; select bank1
  3090  0678  1211               	bcf	17,4	;volatile
  3091                           
  3092                           ;MCU_B1.c: 690: RCIE=1;
  3093  0679  1691               	bsf	17,5	;volatile
  3094                           
  3095                           ;MCU_B1.c: 691: PEIE=1;
  3096  067A  170B               	bsf	11,6	;volatile
  3097                           
  3098                           ;MCU_B1.c: 692: GIE=1;
  3099  067B  178B               	bsf	11,7	;volatile
  3100  067C  0008               	return
  3101  067D                     __end_of_UART_Set:	
  3102                           
  3103                           	psect	text15
  3104  06A3                     __ptext15:	
  3105 ;; *************** function _TMR1_Set *****************
  3106 ;; Defined at:
  3107 ;;		line 242 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;		None               void
  3114 ;; Registers used:
  3115 ;;		wreg
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3121 ;;      Params:         0       0       0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0
  3123 ;;      Temps:          0       1       0       0       0       0       0       0
  3124 ;;      Totals:         0       1       0       0       0       0       0       0
  3125 ;;Total ram usage:        1 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    4
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_Mcu_Initialization
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _TMR1_Set
  3137  06A3                     _TMR1_Set:	
  3138                           
  3139                           ;MCU_B1.c: 244: Timer1=&VarTimer1;
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _TMR1_Set: [wreg]
  3143  06A3  3076               	movlw	_VarTimer1& (0+255)
  3144  06A4  0020               	movlb	0	; select bank0
  3145  06A5  00A0               	movwf	??_TMR1_Set
  3146  06A6  0820               	movf	??_TMR1_Set,w
  3147  06A7  00FA               	movwf	_Timer1
  3148                           
  3149                           ;MCU_B1.c: 245: T1CON=(0x40 | 0x00 | 0x01);
  3150  06A8  3041               	movlw	65
  3151  06A9  0098               	movwf	24	;volatile
  3152                           
  3153                           ;MCU_B1.c: 246: TMR1H=((65536-700)/256);
  3154  06AA  30FD               	movlw	253
  3155  06AB  0097               	movwf	23	;volatile
  3156                           
  3157                           ;MCU_B1.c: 247: TMR1L=((65536-700)%256);
  3158  06AC  3044               	movlw	68
  3159  06AD  0096               	movwf	22	;volatile
  3160                           
  3161                           ;MCU_B1.c: 248: TMR1IE=1;
  3162  06AE  0021               	movlb	1	; select bank1
  3163  06AF  1411               	bsf	17,0	;volatile
  3164                           
  3165                           ;MCU_B1.c: 249: PEIE=1;
  3166  06B0  170B               	bsf	11,6	;volatile
  3167                           
  3168                           ;MCU_B1.c: 250: GIE=1;
  3169  06B1  178B               	bsf	11,7	;volatile
  3170  06B2  0008               	return
  3171  06B3                     __end_of_TMR1_Set:	
  3172                           
  3173                           	psect	text16
  3174  067D                     __ptext16:	
  3175 ;; *************** function _IO_Set *****************
  3176 ;; Defined at:
  3177 ;;		line 50 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;		None               void
  3184 ;; Registers used:
  3185 ;;		wreg, status,2
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3191 ;;      Params:         0       0       0       0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    4
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_Mcu_Initialization
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _IO_Set
  3207  067D                     _IO_Set:	
  3208                           
  3209                           ;MCU_B1.c: 64: TRISA=0b00001001;;
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _IO_Set: [wreg+status,2]
  3213  067D  3009               	movlw	9
  3214  067E  0021               	movlb	1	; select bank1
  3215  067F  008C               	movwf	12	;volatile
  3216                           
  3217                           ;MCU_B1.c: 65: TRISB=0b00000000;;
  3218  0680  018D               	clrf	13	;volatile
  3219                           
  3220                           ;MCU_B1.c: 66: TRISC=0b00011001;;
  3221  0681  3019               	movlw	25
  3222  0682  008E               	movwf	14	;volatile
  3223                           
  3224                           ;MCU_B1.c: 67: LATA=0b00000000;;
  3225  0683  0022               	movlb	2	; select bank2
  3226  0684  018C               	clrf	12	;volatile
  3227                           
  3228                           ;MCU_B1.c: 68: LATB=0b00000000;;
  3229  0685  018D               	clrf	13	;volatile
  3230                           
  3231                           ;MCU_B1.c: 69: LATC=0b00000000;;
  3232  0686  018E               	clrf	14	;volatile
  3233                           
  3234                           ;MCU_B1.c: 70: ANSELA=0b00000001;;
  3235  0687  3001               	movlw	1
  3236  0688  0023               	movlb	3	; select bank3
  3237  0689  008C               	movwf	12	;volatile
  3238                           
  3239                           ;MCU_B1.c: 71: ANSELB=0b00000000;;
  3240  068A  018D               	clrf	13	;volatile
  3241                           
  3242                           ;MCU_B1.c: 72: ANSELC=0b00000000;;
  3243  068B  018E               	clrf	14	;volatile
  3244                           
  3245                           ;MCU_B1.c: 73: PORTA=0b00001001;;
  3246  068C  3009               	movlw	9
  3247  068D  0020               	movlb	0	; select bank0
  3248  068E  008C               	movwf	12	;volatile
  3249                           
  3250                           ;MCU_B1.c: 74: PORTB=0b00000000;;
  3251  068F  018D               	clrf	13	;volatile
  3252                           
  3253                           ;MCU_B1.c: 75: PORTC=0b00011001;;
  3254  0690  3019               	movlw	25
  3255  0691  008E               	movwf	14	;volatile
  3256  0692  0008               	return
  3257  0693                     __end_of_IO_Set:	
  3258                           
  3259                           	psect	text17
  3260  070E                     __ptext17:	
  3261 ;; *************** function _I2C_Set *****************
  3262 ;; Defined at:
  3263 ;;		line 403 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;		None               void
  3270 ;; Registers used:
  3271 ;;		wreg, status,2
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3277 ;;      Params:         0       0       0       0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0
  3279 ;;      Temps:          0       1       0       0       0       0       0       0
  3280 ;;      Totals:         0       1       0       0       0       0       0       0
  3281 ;;Total ram usage:        1 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    4
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_Mcu_Initialization
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _I2C_Set
  3293  070E                     _I2C_Set:	
  3294                           
  3295                           ;MCU_B1.c: 405: I2C=&VarI2C;
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _I2C_Set: [wreg+status,2]
  3299  070E  3020               	movlw	_VarI2C& (0+255)
  3300  070F  0020               	movlb	0	; select bank0
  3301  0710  00A0               	movwf	??_I2C_Set
  3302  0711  0820               	movf	??_I2C_Set,w
  3303  0712  00D7               	movwf	_I2C
  3304                           
  3305                           ;MCU_B1.c: 407: SSPADD = 0x09;
  3306  0713  3009               	movlw	9
  3307  0714  0024               	movlb	4	; select bank4
  3308  0715  0092               	movwf	18	;volatile
  3309                           
  3310                           ;MCU_B1.c: 408: SSPSTAT = 0x80;
  3311  0716  3080               	movlw	128
  3312  0717  0094               	movwf	20	;volatile
  3313                           
  3314                           ;MCU_B1.c: 409: SSPCON2 = 0;
  3315  0718  0196               	clrf	22	;volatile
  3316                           
  3317                           ;MCU_B1.c: 411: SSPCON1=0b101000;
  3318  0719  3028               	movlw	40
  3319  071A  0095               	movwf	21	;volatile
  3320  071B  0008               	return
  3321  071C                     __end_of_I2C_Set:	
  3322                           
  3323                           	psect	text18
  3324  06D2                     __ptext18:	
  3325 ;; *************** function _MainT_Initial *****************
  3326 ;; Defined at:
  3327 ;;		line 33 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\myMain.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;		None               void
  3334 ;; Registers used:
  3335 ;;		wreg, fsr1l, fsr1h
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3341 ;;      Params:         0       0       0       0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0
  3343 ;;      Temps:          0       1       0       0       0       0       0       0
  3344 ;;      Totals:         0       1       0       0       0       0       0       0
  3345 ;;Total ram usage:        1 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    4
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           
  3356                           ;psect for function _MainT_Initial
  3357  06D2                     _MainT_Initial:	
  3358                           
  3359                           ;myMain.c: 35: TMain=&VarTMain;
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _MainT_Initial: [wregfsr1]
  3363  06D2  3046               	movlw	_VarTMain& (0+255)
  3364  06D3  0020               	movlb	0	; select bank0
  3365  06D4  00A0               	movwf	??_MainT_Initial
  3366  06D5  0820               	movf	??_MainT_Initial,w
  3367  06D6  00D5               	movwf	_TMain
  3368                           
  3369                           ;myMain.c: 36: TMain->FirstOpen=1;
  3370  06D7  0855               	movf	_TMain,w
  3371  06D8  3E0D               	addlw	13
  3372  06D9  0086               	movwf	6
  3373  06DA  0187               	clrf	7
  3374  06DB  1401               	bsf	1,0
  3375                           
  3376                           ;myMain.c: 37: Product=&VarProduct;
  3377  06DC  30A0               	movlw	_VarProduct& (0+255)
  3378  06DD  00A0               	movwf	??_MainT_Initial
  3379  06DE  0820               	movf	??_MainT_Initial,w
  3380  06DF  00F9               	movwf	_Product
  3381  06E0  0008               	return
  3382  06E1                     __end_of_MainT_Initial:	
  3383                           
  3384                           	psect	text19
  3385  0316                     __ptext19:	
  3386 ;; *************** function _MainT *****************
  3387 ;; Defined at:
  3388 ;;		line 41 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\myMain.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  i               1    0        unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;		None               void
  3395 ;; Registers used:
  3396 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3402 ;;      Params:         0       0       0       0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    4
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _MainT
  3418  0316                     _MainT:	
  3419                           
  3420                           ;myMain.c: 43: char i;
  3421                           ;myMain.c: 45: if(!TMain->PowerON)
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0]
  3425  0316  0020               	movlb	0	; select bank0
  3426  0317  0855               	movf	_TMain,w
  3427  0318  0086               	movwf	6
  3428  0319  0187               	clrf	7
  3429  031A  1801               	btfsc	1,0
  3430  031B  2B3A               	goto	l2517
  3431                           
  3432                           ;myMain.c: 46: {
  3433                           ;myMain.c: 47: TMain->PowerCount++;
  3434  031C  0A55               	incf	_TMain,w
  3435  031D  0086               	movwf	6
  3436  031E  0187               	clrf	7
  3437  031F  3001               	movlw	1
  3438  0320  0781               	addwf	1,f
  3439  0321  3141               	addfsr 1,1
  3440  0322  1803               	skipnc
  3441  0323  0A81               	incf	1,f
  3442                           
  3443                           ;myMain.c: 48: if(TMain->PowerCount == 1500)
  3444  0324  0A55               	incf	_TMain,w
  3445  0325  0086               	movwf	6
  3446  0326  0187               	clrf	7
  3447  0327  3F40               	moviw [0]fsr1
  3448  0328  3ADC               	xorlw	220
  3449  0329  1D03               	skipz
  3450  032A  2B2D               	goto	u3545
  3451  032B  3F41               	moviw [1]fsr1
  3452  032C  3A05               	xorlw	5
  3453  032D                     u3545:	
  3454  032D  1D03               	skipz
  3455  032E  0008               	return
  3456                           
  3457                           ;myMain.c: 49: {
  3458                           ;myMain.c: 50: TMain->PowerCount=0;
  3459  032F  0A55               	incf	_TMain,w
  3460  0330  0086               	movwf	6
  3461  0331  0187               	clrf	7
  3462  0332  3000               	movlw	0
  3463  0333  3FC0               	movwi [0]fsr1
  3464  0334  3FC1               	movwi [1]fsr1
  3465                           
  3466                           ;myMain.c: 51: TMain->PowerON=1;
  3467  0335  0855               	movf	_TMain,w
  3468  0336  0086               	movwf	6
  3469  0337  0187               	clrf	7
  3470  0338  1401               	bsf	1,0
  3471                           
  3472                           ;myMain.c: 56: }
  3473                           ;myMain.c: 57: }
  3474  0339  0008               	return
  3475  033A                     l2517:	
  3476                           
  3477                           ;myMain.c: 58: else
  3478                           ;myMain.c: 59: {
  3479                           ;myMain.c: 60: TMain->Count1++;
  3480  033A  0855               	movf	_TMain,w
  3481  033B  3E05               	addlw	5
  3482  033C  0086               	movwf	6
  3483  033D  0187               	clrf	7
  3484  033E  3001               	movlw	1
  3485  033F  0781               	addwf	1,f
  3486  0340  3141               	addfsr 1,1
  3487  0341  1803               	skipnc
  3488  0342  0A81               	incf	1,f
  3489                           
  3490                           ;myMain.c: 61: if(TMain->Count1 == 1000)
  3491  0343  0855               	movf	_TMain,w
  3492  0344  3E05               	addlw	5
  3493  0345  0086               	movwf	6
  3494  0346  0187               	clrf	7
  3495  0347  3F40               	moviw [0]fsr1
  3496  0348  3AE8               	xorlw	232
  3497  0349  1D03               	skipz
  3498  034A  2B4D               	goto	u3555
  3499  034B  3F41               	moviw [1]fsr1
  3500  034C  3A03               	xorlw	3
  3501  034D                     u3555:	
  3502  034D  1D03               	skipz
  3503  034E  2B58               	goto	l2527
  3504                           
  3505                           ;myMain.c: 62: {
  3506                           ;myMain.c: 63: TMain->Count1=0;
  3507  034F  0855               	movf	_TMain,w
  3508  0350  3E05               	addlw	5
  3509  0351  0086               	movwf	6
  3510  0352  0187               	clrf	7
  3511  0353  3000               	movlw	0
  3512  0354  3FC0               	movwi [0]fsr1
  3513  0355  3FC1               	movwi [1]fsr1
  3514                           
  3515                           ;myMain.c: 64: RA2=~RA2;
  3516  0356  3004               	movlw	4
  3517  0357  068C               	xorwf	12,f
  3518  0358                     l2527:	
  3519                           ;myMain.c: 77: {
  3520                           
  3521                           
  3522                           ;myMain.c: 80: }
  3523                           ;myMain.c: 104: }
  3524                           ;myMain.c: 107: TMain->Count2++;
  3525  0358  0855               	movf	_TMain,w
  3526  0359  3E07               	addlw	7
  3527  035A  0086               	movwf	6
  3528  035B  0187               	clrf	7
  3529  035C  3001               	movlw	1
  3530  035D  0781               	addwf	1,f
  3531  035E  3141               	addfsr 1,1
  3532  035F  1803               	skipnc
  3533  0360  0A81               	incf	1,f
  3534                           
  3535                           ;myMain.c: 108: if(TMain->Count2 == 2000)
  3536  0361  0855               	movf	_TMain,w
  3537  0362  3E07               	addlw	7
  3538  0363  0086               	movwf	6
  3539  0364  0187               	clrf	7
  3540  0365  3F40               	moviw [0]fsr1
  3541  0366  3AD0               	xorlw	208
  3542  0367  1D03               	skipz
  3543  0368  2B6B               	goto	u3565
  3544  0369  3F41               	moviw [1]fsr1
  3545  036A  3A07               	xorlw	7
  3546  036B                     u3565:	
  3547  036B  1D03               	skipz
  3548  036C  0008               	return
  3549                           
  3550                           ;myMain.c: 109: {
  3551                           ;myMain.c: 110: TMain->Count2=0;
  3552  036D  0855               	movf	_TMain,w
  3553  036E  3E07               	addlw	7
  3554  036F  0086               	movwf	6
  3555  0370  0187               	clrf	7
  3556  0371  3000               	movlw	0
  3557  0372  3FC0               	movwi [0]fsr1
  3558  0373  3FC1               	movwi [1]fsr1
  3559  0374  0008               	return
  3560  0375                     __end_of_MainT:	
  3561                           
  3562                           	psect	text20
  3563  02A3                     __ptext20:	
  3564 ;; *************** function _I2C_Main *****************
  3565 ;; Defined at:
  3566 ;;		line 444 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  i               1    6[BANK0 ] unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;		None               void
  3573 ;; Registers used:
  3574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3580 ;;      Params:         0       0       0       0       0       0       0       0
  3581 ;;      Locals:         0       1       0       0       0       0       0       0
  3582 ;;      Temps:          0       3       0       0       0       0       0       0
  3583 ;;      Totals:         0       4       0       0       0       0       0       0
  3584 ;;Total ram usage:        4 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    5
  3587 ;; This function calls:
  3588 ;;		_I2C_Master_Reception
  3589 ;;		_I2C_Master_Transmission
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function _I2C_Main
  3597  02A3                     _I2C_Main:	
  3598                           
  3599                           ;MCU_B1.c: 446: char i;
  3600                           ;MCU_B1.c: 471: if(I2C->MasterRxGO)
  3601                           
  3602                           ;incstack = 0
  3603                           ; Regs used in _I2C_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3604  02A3  0020               	movlb	0	; select bank0
  3605  02A4  0857               	movf	_I2C,w
  3606  02A5  3E42               	addlw	66
  3607  02A6  0086               	movwf	6
  3608  02A7  3001               	movlw	1	; select bank2/3
  3609  02A8  0087               	movwf	7
  3610  02A9  1E01               	btfss	1,4
  3611  02AA  2AE3               	goto	l317
  3612                           
  3613                           ;MCU_B1.c: 472: {
  3614                           ;MCU_B1.c: 473: I2C->MasterRxGO=0;
  3615  02AB  0857               	movf	_I2C,w
  3616  02AC  3E42               	addlw	66
  3617  02AD  0086               	movwf	6
  3618  02AE  3001               	movlw	1	; select bank2/3
  3619  02AF  0087               	movwf	7
  3620  02B0  1201               	bcf	1,4
  3621                           
  3622                           ;MCU_B1.c: 474: I2C_Master_Reception();
  3623  02B1  3183  2375  3182   	fcall	_I2C_Master_Reception
  3624                           
  3625                           ;MCU_B1.c: 475: TMain->Test=1;
  3626  02B4  0020               	movlb	0	; select bank0
  3627  02B5  0855               	movf	_TMain,w
  3628  02B6  3E0C               	addlw	12
  3629  02B7  0086               	movwf	6
  3630  02B8  0187               	clrf	7
  3631  02B9  0181               	clrf	1
  3632  02BA  0A81               	incf	1,f
  3633                           
  3634                           ;MCU_B1.c: 476: RA1=~RA1;
  3635  02BB  3002               	movlw	2
  3636  02BC  068C               	xorwf	12,f
  3637                           
  3638                           ;MCU_B1.c: 478: for(i=0;i<32;i++)
  3639  02BD  01A6               	clrf	I2C_Main@i
  3640  02BE  3020               	movlw	32
  3641  02BF  0226               	subwf	I2C_Main@i,w
  3642  02C0  1803               	btfsc	3,0
  3643  02C1  2ADC               	goto	l2555
  3644  02C2                     l2549:	
  3645                           
  3646                           ;MCU_B1.c: 479: {
  3647                           ;MCU_B1.c: 480: UART->TxData[i]=I2C->BufferReader[i];
  3648  02C2  0826               	movf	I2C_Main@i,w
  3649  02C3  0757               	addwf	_I2C,w
  3650  02C4  00A3               	movwf	??_I2C_Main
  3651  02C5  0823               	movf	??_I2C_Main,w
  3652  02C6  0086               	movwf	6
  3653  02C7  3001               	movlw	1	; select bank2/3
  3654  02C8  0087               	movwf	7
  3655  02C9  0801               	movf	1,w
  3656  02CA  00A4               	movwf	??_I2C_Main+1
  3657  02CB  0826               	movf	I2C_Main@i,w
  3658  02CC  0756               	addwf	_UART,w
  3659  02CD  00A5               	movwf	??_I2C_Main+2
  3660  02CE  0825               	movf	??_I2C_Main+2,w
  3661  02CF  0086               	movwf	6
  3662  02D0  3001               	movlw	1	; select bank2/3
  3663  02D1  0087               	movwf	7
  3664  02D2  0824               	movf	??_I2C_Main+1,w
  3665  02D3  0081               	movwf	1
  3666  02D4  3001               	movlw	1
  3667  02D5  00A3               	movwf	??_I2C_Main
  3668  02D6  0823               	movf	??_I2C_Main,w
  3669  02D7  07A6               	addwf	I2C_Main@i,f
  3670  02D8  3020               	movlw	32
  3671  02D9  0226               	subwf	I2C_Main@i,w
  3672  02DA  1C03               	skipc
  3673  02DB  2AC2               	goto	l2549
  3674  02DC                     l2555:	
  3675                           
  3676                           ;MCU_B1.c: 481: }
  3677                           ;MCU_B1.c: 482: UART->TxGO=1;
  3678  02DC  0856               	movf	_UART,w
  3679  02DD  3E43               	addlw	67
  3680  02DE  0086               	movwf	6
  3681  02DF  3001               	movlw	1	; select bank2/3
  3682  02E0  0087               	movwf	7
  3683  02E1  1401               	bsf	1,0
  3684                           
  3685                           ;MCU_B1.c: 484: }
  3686  02E2  0008               	return
  3687  02E3                     l317:	
  3688                           
  3689                           ;MCU_B1.c: 485: else
  3690                           ;MCU_B1.c: 486: {
  3691                           ;MCU_B1.c: 487: if(RC0)
  3692  02E3  1C0E               	btfss	14,0	;volatile
  3693  02E4  2AF9               	goto	l2561
  3694                           
  3695                           ;MCU_B1.c: 488: {
  3696                           ;MCU_B1.c: 489: if(!I2C->SS)
  3697  02E5  0857               	movf	_I2C,w
  3698  02E6  3E42               	addlw	66
  3699  02E7  0086               	movwf	6
  3700  02E8  3001               	movlw	1	; select bank2/3
  3701  02E9  0087               	movwf	7
  3702  02EA  1A81               	btfsc	1,5
  3703  02EB  0008               	return
  3704                           
  3705                           ;MCU_B1.c: 490: {
  3706                           ;MCU_B1.c: 491: I2C->SS=1;
  3707  02EC  0857               	movf	_I2C,w
  3708  02ED  3E42               	addlw	66
  3709  02EE  0086               	movwf	6
  3710  02EF  3001               	movlw	1	; select bank2/3
  3711  02F0  0087               	movwf	7
  3712  02F1  1681               	bsf	1,5
  3713                           
  3714                           ;MCU_B1.c: 492: I2C->MasterRxGO=1;
  3715  02F2  0857               	movf	_I2C,w
  3716  02F3  3E42               	addlw	66
  3717  02F4  0086               	movwf	6
  3718  02F5  3001               	movlw	1	; select bank2/3
  3719  02F6  0087               	movwf	7
  3720  02F7  1601               	bsf	1,4
  3721                           
  3722                           ;MCU_B1.c: 493: }
  3723                           ;MCU_B1.c: 494: }
  3724  02F8  0008               	return
  3725  02F9                     l2561:	
  3726                           
  3727                           ;MCU_B1.c: 495: else
  3728                           ;MCU_B1.c: 496: {
  3729                           ;MCU_B1.c: 497: if(I2C->SS)
  3730  02F9  0857               	movf	_I2C,w
  3731  02FA  3E42               	addlw	66
  3732  02FB  0086               	movwf	6
  3733  02FC  3001               	movlw	1	; select bank2/3
  3734  02FD  0087               	movwf	7
  3735  02FE  1E81               	btfss	1,5
  3736  02FF  2B06               	goto	l324
  3737                           
  3738                           ;MCU_B1.c: 498: {
  3739                           ;MCU_B1.c: 499: I2C->SS=0;
  3740  0300  0857               	movf	_I2C,w
  3741  0301  3E42               	addlw	66
  3742  0302  0086               	movwf	6
  3743  0303  3001               	movlw	1	; select bank2/3
  3744  0304  0087               	movwf	7
  3745  0305  1281               	bcf	1,5
  3746  0306                     l324:	
  3747                           
  3748                           ;MCU_B1.c: 500: }
  3749                           ;MCU_B1.c: 501: if(I2C->MasterTxGO)
  3750  0306  0857               	movf	_I2C,w
  3751  0307  3E42               	addlw	66
  3752  0308  0086               	movwf	6
  3753  0309  3001               	movlw	1	; select bank2/3
  3754  030A  0087               	movwf	7
  3755  030B  1D81               	btfss	1,3
  3756  030C  0008               	return
  3757                           
  3758                           ;MCU_B1.c: 502: {
  3759                           ;MCU_B1.c: 503: I2C->MasterTxGO=0;
  3760  030D  0857               	movf	_I2C,w
  3761  030E  3E42               	addlw	66
  3762  030F  0086               	movwf	6
  3763  0310  3001               	movlw	1	; select bank2/3
  3764  0311  0087               	movwf	7
  3765  0312  1181               	bcf	1,3
  3766                           
  3767                           ;MCU_B1.c: 504: I2C_Master_Transmission();
  3768  0313  3184  24E5         	fcall	_I2C_Master_Transmission
  3769  0315  0008               	return
  3770  0316                     __end_of_I2C_Main:	
  3771                           
  3772                           	psect	text21
  3773  04E5                     __ptext21:	
  3774 ;; *************** function _I2C_Master_Transmission *****************
  3775 ;; Defined at:
  3776 ;;		line 544 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  i               1    1[BANK0 ] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;		None               void
  3783 ;; Registers used:
  3784 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3790 ;;      Params:         0       0       0       0       0       0       0       0
  3791 ;;      Locals:         0       1       0       0       0       0       0       0
  3792 ;;      Temps:          0       1       0       0       0       0       0       0
  3793 ;;      Totals:         0       2       0       0       0       0       0       0
  3794 ;;Total ram usage:        2 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    4
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_I2C_Main
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           
  3805                           ;psect for function _I2C_Master_Transmission
  3806  04E5                     _I2C_Master_Transmission:	
  3807  04E5                     l332:	
  3808                           ;MCU_B1.c: 546: char i;
  3809                           ;MCU_B1.c: 547: while(SEN);
  3810                           
  3811                           ;incstack = 0
  3812                           ; Regs used in _I2C_Master_Transmission: [wreg+fsr1l+fsr1h+status,2+status,0]
  3813                           
  3814  04E5  0024               	movlb	4	; select bank4
  3815  04E6  1816               	btfsc	22,0	;volatile
  3816  04E7  2CE5               	goto	l332
  3817                           
  3818                           ;MCU_B1.c: 548: SEN=1;
  3819  04E8  1416               	bsf	22,0	;volatile
  3820  04E9                     l335:	
  3821                           ;MCU_B1.c: 550: while(SEN);
  3822                           
  3823  04E9  1816               	btfsc	22,0	;volatile
  3824  04EA  2CE9               	goto	l335
  3825                           
  3826                           ;MCU_B1.c: 553: SSPBUF=0x10;
  3827  04EB  3010               	movlw	16
  3828  04EC  0091               	movwf	17	;volatile
  3829  04ED                     l338:	
  3830                           ;MCU_B1.c: 554: while(BF);
  3831                           
  3832  04ED  1814               	btfsc	20,0	;volatile
  3833  04EE  2CED               	goto	l338
  3834  04EF                     l341:	
  3835                           ;MCU_B1.c: 557: while(ACKSTAT);
  3836                           
  3837  04EF  1B16               	btfsc	22,6	;volatile
  3838  04F0  2CEF               	goto	l341
  3839                           
  3840                           ;MCU_B1.c: 559: for(i=0;i<32;i++)
  3841  04F1  0020               	movlb	0	; select bank0
  3842  04F2  01A1               	clrf	I2C_Master_Transmission@i
  3843  04F3  3020               	movlw	32
  3844  04F4  0221               	subwf	I2C_Master_Transmission@i,w
  3845  04F5  1803               	btfsc	3,0
  3846  04F6  2D13               	goto	l355
  3847  04F7                     l346:	
  3848                           ;MCU_B1.c: 560: {
  3849                           ;MCU_B1.c: 561: while(SEN);
  3850                           
  3851  04F7  0024               	movlb	4	; select bank4
  3852  04F8  1816               	btfsc	22,0	;volatile
  3853  04F9  2CF7               	goto	l346
  3854                           
  3855                           ;MCU_B1.c: 562: SSPBUF=I2C->BufferWriter[i];
  3856  04FA  0020               	movlb	0	; select bank0
  3857  04FB  0821               	movf	I2C_Master_Transmission@i,w
  3858  04FC  3E20               	addlw	32
  3859  04FD  0757               	addwf	_I2C,w
  3860  04FE  00A0               	movwf	??_I2C_Master_Transmission
  3861  04FF  0820               	movf	??_I2C_Master_Transmission,w
  3862  0500  0086               	movwf	6
  3863  0501  3001               	movlw	1	; select bank2/3
  3864  0502  0087               	movwf	7
  3865  0503  0801               	movf	1,w
  3866  0504  0024               	movlb	4	; select bank4
  3867  0505  0091               	movwf	17	;volatile
  3868  0506                     l349:	
  3869                           ;MCU_B1.c: 563: while(BF);
  3870                           
  3871  0506  1814               	btfsc	20,0	;volatile
  3872  0507  2D06               	goto	l349
  3873  0508                     l352:	
  3874                           ;MCU_B1.c: 566: while(ACKSTAT);
  3875                           
  3876  0508  1B16               	btfsc	22,6	;volatile
  3877  0509  2D08               	goto	l352
  3878  050A  3001               	movlw	1
  3879  050B  0020               	movlb	0	; select bank0
  3880  050C  00A0               	movwf	??_I2C_Master_Transmission
  3881  050D  0820               	movf	??_I2C_Master_Transmission,w
  3882  050E  07A1               	addwf	I2C_Master_Transmission@i,f
  3883  050F  3020               	movlw	32
  3884  0510  0221               	subwf	I2C_Master_Transmission@i,w
  3885  0511  1C03               	skipc
  3886  0512  2CF7               	goto	l346
  3887  0513                     l355:	
  3888                           ;MCU_B1.c: 567: }
  3889                           ;MCU_B1.c: 569: while(SEN);
  3890                           
  3891  0513  0024               	movlb	4	; select bank4
  3892  0514  1C16               	btfss	22,0	;volatile
  3893  0515  2D18               	goto	l358
  3894  0516  2D13               	goto	l355
  3895  0517                     l359:	
  3896                           ;MCU_B1.c: 570: while(!PEN)
  3897                           
  3898                           
  3899                           ;MCU_B1.c: 571: PEN=1;
  3900  0517  1516               	bsf	22,2	;volatile
  3901  0518                     l358:	
  3902  0518  1D16               	btfss	22,2	;volatile
  3903  0519  2D17               	goto	l359
  3904  051A                     l361:	
  3905                           ;MCU_B1.c: 572: while(PEN);
  3906                           
  3907  051A  1D16               	btfss	22,2	;volatile
  3908  051B  0008               	return
  3909  051C  2D1A               	goto	l361
  3910  051D                     __end_of_I2C_Master_Transmission:	
  3911                           
  3912                           	psect	text22
  3913  0375                     __ptext22:	
  3914 ;; *************** function _I2C_Master_Reception *****************
  3915 ;; Defined at:
  3916 ;;		line 577 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  i               1    2[BANK0 ] unsigned char 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;		None               void
  3923 ;; Registers used:
  3924 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3930 ;;      Params:         0       0       0       0       0       0       0       0
  3931 ;;      Locals:         0       1       0       0       0       0       0       0
  3932 ;;      Temps:          0       2       0       0       0       0       0       0
  3933 ;;      Totals:         0       3       0       0       0       0       0       0
  3934 ;;Total ram usage:        3 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    4
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_I2C_Main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _I2C_Master_Reception
  3946  0375                     _I2C_Master_Reception:	
  3947  0375                     l367:	
  3948                           ;MCU_B1.c: 579: char i;
  3949                           ;MCU_B1.c: 580: while(SEN);
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _I2C_Master_Reception: [wreg+fsr1l+fsr1h+status,2+status,0]
  3953                           
  3954  0375  0024               	movlb	4	; select bank4
  3955  0376  1816               	btfsc	22,0	;volatile
  3956  0377  2B75               	goto	l367
  3957                           
  3958                           ;MCU_B1.c: 581: SEN=1;
  3959  0378  1416               	bsf	22,0	;volatile
  3960  0379                     l370:	
  3961                           ;MCU_B1.c: 582: while(SEN);
  3962                           
  3963  0379  1816               	btfsc	22,0	;volatile
  3964  037A  2B79               	goto	l370
  3965                           
  3966                           ;MCU_B1.c: 585: SSPBUF=0x11;
  3967  037B  3011               	movlw	17
  3968  037C  0091               	movwf	17	;volatile
  3969  037D                     l373:	
  3970                           ;MCU_B1.c: 588: while(BF);
  3971                           
  3972  037D  1814               	btfsc	20,0	;volatile
  3973  037E  2B7D               	goto	l373
  3974  037F                     l376:	
  3975                           ;MCU_B1.c: 589: while(ACKSTAT);
  3976                           
  3977  037F  1B16               	btfsc	22,6	;volatile
  3978  0380  2B7F               	goto	l376
  3979  0381                     l379:	
  3980                           ;MCU_B1.c: 591: while(RCEN);
  3981                           
  3982  0381  1996               	btfsc	22,3	;volatile
  3983  0382  2B81               	goto	l379
  3984                           
  3985                           ;MCU_B1.c: 592: RCEN=1;
  3986  0383  1596               	bsf	22,3	;volatile
  3987  0384                     l382:	
  3988                           ;MCU_B1.c: 593: while(RCEN);
  3989                           
  3990  0384  1996               	btfsc	22,3	;volatile
  3991  0385  2B84               	goto	l382
  3992                           
  3993                           ;MCU_B1.c: 594: I2C->Address=SSPBUF;
  3994  0386  0811               	movf	17,w	;volatile
  3995  0387  0020               	movlb	0	; select bank0
  3996  0388  00A0               	movwf	??_I2C_Master_Reception
  3997  0389  0857               	movf	_I2C,w
  3998  038A  3E41               	addlw	65
  3999  038B  0086               	movwf	6
  4000  038C  3001               	movlw	1	; select bank2/3
  4001  038D  0087               	movwf	7
  4002  038E  0820               	movf	??_I2C_Master_Reception,w
  4003  038F  0081               	movwf	1
  4004  0390                     l385:	
  4005                           ;MCU_B1.c: 595: while(!ACKEN)
  4006                           
  4007  0390  0024               	movlb	4	; select bank4
  4008  0391  1A16               	btfsc	22,4	;volatile
  4009  0392  2B95               	goto	l388
  4010                           
  4011                           ;MCU_B1.c: 596: ACKEN=1;
  4012  0393  1616               	bsf	22,4	;volatile
  4013  0394  2B90               	goto	l385
  4014  0395                     l388:	
  4015                           ;MCU_B1.c: 597: while(ACKEN);
  4016                           
  4017  0395  1A16               	btfsc	22,4	;volatile
  4018  0396  2B95               	goto	l388
  4019  0397                     l391:	
  4020                           ;MCU_B1.c: 598: while(RCEN);
  4021                           
  4022  0397  1996               	btfsc	22,3	;volatile
  4023  0398  2B97               	goto	l391
  4024                           
  4025                           ;MCU_B1.c: 599: for(i=0;i<32;i++)
  4026  0399  0020               	movlb	0	; select bank0
  4027  039A  01A2               	clrf	I2C_Master_Reception@i
  4028  039B  3020               	movlw	32
  4029  039C  0222               	subwf	I2C_Master_Reception@i,w
  4030  039D  1803               	btfsc	3,0
  4031  039E  2BC3               	goto	l395
  4032  039F                     l396:	
  4033                           ;MCU_B1.c: 600: {
  4034                           ;MCU_B1.c: 601: while(SEN);
  4035                           
  4036  039F  0024               	movlb	4	; select bank4
  4037  03A0  1816               	btfsc	22,0	;volatile
  4038  03A1  2B9F               	goto	l396
  4039  03A2                     l399:	
  4040                           ;MCU_B1.c: 602: while(RCEN);
  4041                           
  4042  03A2  1996               	btfsc	22,3	;volatile
  4043  03A3  2BA2               	goto	l399
  4044                           
  4045                           ;MCU_B1.c: 603: RCEN=1;
  4046  03A4  1596               	bsf	22,3	;volatile
  4047  03A5                     l402:	
  4048                           ;MCU_B1.c: 604: while(RCEN);
  4049                           
  4050  03A5  1996               	btfsc	22,3	;volatile
  4051  03A6  2BA5               	goto	l402
  4052                           
  4053                           ;MCU_B1.c: 605: I2C->BufferReader[i]=SSPBUF;
  4054  03A7  0811               	movf	17,w	;volatile
  4055  03A8  0020               	movlb	0	; select bank0
  4056  03A9  00A0               	movwf	??_I2C_Master_Reception
  4057  03AA  0822               	movf	I2C_Master_Reception@i,w
  4058  03AB  0757               	addwf	_I2C,w
  4059  03AC  00A1               	movwf	??_I2C_Master_Reception+1
  4060  03AD  0821               	movf	??_I2C_Master_Reception+1,w
  4061  03AE  0086               	movwf	6
  4062  03AF  3001               	movlw	1	; select bank2/3
  4063  03B0  0087               	movwf	7
  4064  03B1  0820               	movf	??_I2C_Master_Reception,w
  4065  03B2  0081               	movwf	1
  4066  03B3                     l405:	
  4067                           ;MCU_B1.c: 606: while(!ACKEN)
  4068                           
  4069  03B3  0024               	movlb	4	; select bank4
  4070  03B4  1A16               	btfsc	22,4	;volatile
  4071  03B5  2BB8               	goto	l408
  4072                           
  4073                           ;MCU_B1.c: 607: ACKEN=1;
  4074  03B6  1616               	bsf	22,4	;volatile
  4075  03B7  2BB3               	goto	l405
  4076  03B8                     l408:	
  4077                           ;MCU_B1.c: 608: while(ACKEN);
  4078                           
  4079  03B8  1A16               	btfsc	22,4	;volatile
  4080  03B9  2BB8               	goto	l408
  4081  03BA  3001               	movlw	1
  4082  03BB  0020               	movlb	0	; select bank0
  4083  03BC  00A0               	movwf	??_I2C_Master_Reception
  4084  03BD  0820               	movf	??_I2C_Master_Reception,w
  4085  03BE  07A2               	addwf	I2C_Master_Reception@i,f
  4086  03BF  3020               	movlw	32
  4087  03C0  0222               	subwf	I2C_Master_Reception@i,w
  4088  03C1  1C03               	skipc
  4089  03C2  2B9F               	goto	l396
  4090  03C3                     l395:	
  4091                           
  4092                           ;MCU_B1.c: 610: }
  4093                           ;MCU_B1.c: 618: RCEN=1;
  4094  03C3  0024               	movlb	4	; select bank4
  4095  03C4  1596               	bsf	22,3	;volatile
  4096  03C5                     l411:	
  4097                           ;MCU_B1.c: 619: while(RCEN);
  4098                           
  4099  03C5  1996               	btfsc	22,3	;volatile
  4100  03C6  2BC5               	goto	l411
  4101  03C7                     l414:	
  4102                           ;MCU_B1.c: 621: while(SEN);
  4103                           
  4104  03C7  1C16               	btfss	22,0	;volatile
  4105  03C8  2BCB               	goto	l417
  4106  03C9  2BC7               	goto	l414
  4107  03CA                     l418:	
  4108                           ;MCU_B1.c: 622: while(!PEN)
  4109                           
  4110                           
  4111                           ;MCU_B1.c: 623: PEN=1;
  4112  03CA  1516               	bsf	22,2	;volatile
  4113  03CB                     l417:	
  4114  03CB  1D16               	btfss	22,2	;volatile
  4115  03CC  2BCA               	goto	l418
  4116  03CD                     l420:	
  4117                           ;MCU_B1.c: 624: while(PEN);
  4118                           
  4119  03CD  1D16               	btfss	22,2	;volatile
  4120  03CE  0008               	return
  4121  03CF  2BCD               	goto	l420
  4122  03D0                     __end_of_I2C_Master_Reception:	
  4123                           
  4124                           	psect	intentry
  4125  0004                     __pintentry:	
  4126 ;; *************** function _ISR *****************
  4127 ;; Defined at:
  4128 ;;		line 97 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;		None               void
  4135 ;; Registers used:
  4136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4142 ;;      Params:         0       0       0       0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0
  4144 ;;      Temps:          1       0       0       0       0       0       0       0
  4145 ;;      Totals:         1       0       0       0       0       0       0       0
  4146 ;;Total ram usage:        1 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    3
  4149 ;; This function calls:
  4150 ;;		_I2C_ISR
  4151 ;;		_TMR1_ISR
  4152 ;;		_UART_ISR
  4153 ;; This function is called by:
  4154 ;;		Interrupt level 1
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158  0004                     _ISR:	
  4159                           
  4160                           ;incstack = 0
  4161                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4162  0004  147E               	bsf	126,0	;set compiler interrupt flag
  4163  0005  3180               	pagesel	$
  4164  0006  0020               	movlb	0	; select bank0
  4165  0007  087F               	movf	127,w
  4166  0008  00F5               	movwf	??_ISR
  4167                           
  4168                           ;MCU_B1.c: 99: ;;
  4169                           ;MCU_B1.c: 101: ;;
  4170                           ;MCU_B1.c: 103: TMR1_ISR();
  4171  0009  3186  2614  3180   	fcall	_TMR1_ISR
  4172                           
  4173                           ;MCU_B1.c: 107: ;;
  4174                           ;MCU_B1.c: 109: UART_ISR();
  4175  000C  3185  25E8  3180   	fcall	_UART_ISR
  4176                           
  4177                           ;MCU_B1.c: 111: I2C_ISR();
  4178  000F  3186  26B3         	fcall	_I2C_ISR
  4179  0011  0875               	movf	??_ISR,w
  4180  0012  0020               	movlb	0	; select bank0
  4181  0013  00FF               	movwf	127
  4182  0014  107E               	bcf	126,0	;clear compiler interrupt flag
  4183  0015  0009               	retfie
  4184  0016                     __end_of_ISR:	
  4185                           
  4186                           	psect	text24
  4187  05E8                     __ptext24:	
  4188 ;; *************** function _UART_ISR *****************
  4189 ;; Defined at:
  4190 ;;		line 695 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  i               1    4[COMMON] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;		None               void
  4197 ;; Registers used:
  4198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4204 ;;      Params:         0       0       0       0       0       0       0       0
  4205 ;;      Locals:         1       0       0       0       0       0       0       0
  4206 ;;      Temps:          2       0       0       0       0       0       0       0
  4207 ;;      Totals:         3       0       0       0       0       0       0       0
  4208 ;;Total ram usage:        3 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    2
  4211 ;; This function calls:
  4212 ;;		_getche
  4213 ;; This function is called by:
  4214 ;;		_ISR
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function _UART_ISR
  4220  05E8                     _UART_ISR:	
  4221                           
  4222                           ;MCU_B1.c: 697: char i;
  4223                           ;MCU_B1.c: 698: if(RCIE && RCIF)
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in _UART_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4227  05E8  0021               	movlb	1	; select bank1
  4228  05E9  1E91               	btfss	17,5	;volatile
  4229  05EA  0008               	return
  4230  05EB  0020               	movlb	0	; select bank0
  4231  05EC  1E91               	btfss	17,5	;volatile
  4232  05ED  0008               	return
  4233                           
  4234                           ;MCU_B1.c: 699: {
  4235                           ;MCU_B1.c: 700: RCIE=0;
  4236  05EE  0021               	movlb	1	; select bank1
  4237  05EF  1291               	bcf	17,5	;volatile
  4238                           
  4239                           ;MCU_B1.c: 701: for(i=0;i<32;i++){
  4240  05F0  01F4               	clrf	UART_ISR@i
  4241  05F1  3020               	movlw	32
  4242  05F2  0274               	subwf	UART_ISR@i,w
  4243  05F3  1803               	btfsc	3,0
  4244  05F4  2E0C               	goto	i1l2051
  4245  05F5                     i1l2045:	
  4246                           
  4247                           ;MCU_B1.c: 702: UART->RxData[i]=getche();
  4248  05F5  3187  2724  3185   	fcall	_getche
  4249  05F8  00F2               	movwf	??_UART_ISR
  4250  05F9  0874               	movf	UART_ISR@i,w
  4251  05FA  3E20               	addlw	32
  4252  05FB  0020               	movlb	0	; select bank0
  4253  05FC  0756               	addwf	_UART,w
  4254  05FD  00F3               	movwf	??_UART_ISR+1
  4255  05FE  0873               	movf	??_UART_ISR+1,w
  4256  05FF  0086               	movwf	6
  4257  0600  3001               	movlw	1	; select bank2/3
  4258  0601  0087               	movwf	7
  4259  0602  0872               	movf	??_UART_ISR,w
  4260  0603  0081               	movwf	1
  4261  0604  3001               	movlw	1
  4262  0605  00F2               	movwf	??_UART_ISR
  4263  0606  0872               	movf	??_UART_ISR,w
  4264  0607  07F4               	addwf	UART_ISR@i,f
  4265  0608  3020               	movlw	32
  4266  0609  0274               	subwf	UART_ISR@i,w
  4267  060A  1C03               	skipc
  4268  060B  2DF5               	goto	i1l2045
  4269  060C                     i1l2051:	
  4270                           
  4271                           ;MCU_B1.c: 704: }
  4272                           ;MCU_B1.c: 705: UART->RxGO=1;
  4273  060C  0020               	movlb	0	; select bank0
  4274  060D  0856               	movf	_UART,w
  4275  060E  3E43               	addlw	67
  4276  060F  0086               	movwf	6
  4277  0610  3001               	movlw	1	; select bank2/3
  4278  0611  0087               	movwf	7
  4279  0612  1481               	bsf	1,1
  4280  0613  0008               	return
  4281  0614                     __end_of_UART_ISR:	
  4282                           
  4283                           	psect	text25
  4284  0724                     __ptext25:	
  4285 ;; *************** function _getche *****************
  4286 ;; Defined at:
  4287 ;;		line 814 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  c               1    1[COMMON] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      unsigned char 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4301 ;;      Params:         0       0       0       0       0       0       0       0
  4302 ;;      Locals:         1       0       0       0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0
  4304 ;;      Totals:         1       0       0       0       0       0       0       0
  4305 ;;Total ram usage:        1 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    1
  4308 ;; This function calls:
  4309 ;;		_getch
  4310 ;;		i1_putch
  4311 ;; This function is called by:
  4312 ;;		_UART_ISR
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _getche
  4318  0724                     _getche:	
  4319                           
  4320                           ;MCU_B1.c: 816: unsigned char c;
  4321                           ;MCU_B1.c: 817: putch(c = getch());
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  4325  0724  3187  2740  3187   	fcall	_getch
  4326  0727  00F1               	movwf	getche@c
  4327  0728  3187  272C         	fcall	i1_putch
  4328                           
  4329                           ;MCU_B1.c: 818: return c;
  4330  072A  0871               	movf	getche@c,w
  4331  072B  0008               	return
  4332  072C                     __end_of_getche:	
  4333                           
  4334                           	psect	text26
  4335  072C                     __ptext26:	
  4336 ;; *************** function i1_putch *****************
  4337 ;; Defined at:
  4338 ;;		line 799 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  byte            1    wreg     unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  byte            1    0[COMMON] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;		None               void
  4345 ;; Registers used:
  4346 ;;		wreg
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4352 ;;      Params:         0       0       0       0       0       0       0       0
  4353 ;;      Locals:         1       0       0       0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0
  4355 ;;      Totals:         1       0       0       0       0       0       0       0
  4356 ;;Total ram usage:        1 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_getche
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function i1_putch
  4367  072C                     i1_putch:	
  4368                           
  4369                           ;incstack = 0
  4370                           ; Regs used in i1_putch: [wreg]
  4371                           ;i1putch@byte stored from wreg
  4372  072C  00F0               	movwf	i1putch@byte
  4373  072D                     i1l474:	
  4374                           ;MCU_B1.c: 803: continue;
  4375                           
  4376                           ;MCU_B1.c: 802: while(!TXIF)
  4377                           
  4378  072D  0020               	movlb	0	; select bank0
  4379  072E  1E11               	btfss	17,4	;volatile
  4380  072F  2F2D               	goto	i1l474
  4381                           
  4382                           ;MCU_B1.c: 804: TXREG = byte;
  4383  0730  0870               	movf	i1putch@byte,w
  4384  0731  0023               	movlb	3	; select bank3
  4385  0732  009A               	movwf	26	;volatile
  4386  0733  0008               	return
  4387  0734                     __end_ofi1_putch:	
  4388                           
  4389                           	psect	text27
  4390  0740                     __ptext27:	
  4391 ;; *************** function _getch *****************
  4392 ;; Defined at:
  4393 ;;		line 807 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      unsigned char 
  4400 ;; Registers used:
  4401 ;;		wreg
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4407 ;;      Params:         0       0       0       0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0
  4410 ;;      Totals:         0       0       0       0       0       0       0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_getche
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           
  4421                           ;psect for function _getch
  4422  0740                     _getch:	
  4423  0740                     i1l480:	
  4424                           ;MCU_B1.c: 810: continue;
  4425                           
  4426                           ;MCU_B1.c: 809: while(!RCIF)
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in _getch: [wreg]
  4430                           
  4431  0740  0020               	movlb	0	; select bank0
  4432  0741  1E91               	btfss	17,5	;volatile
  4433  0742  2F40               	goto	i1l480
  4434                           
  4435                           ;MCU_B1.c: 811: return RCREG;
  4436  0743  0023               	movlb	3	; select bank3
  4437  0744  0819               	movf	25,w	;volatile
  4438  0745  0008               	return
  4439  0746                     __end_of_getch:	
  4440                           
  4441                           	psect	text28
  4442  0614                     __ptext28:	
  4443 ;; *************** function _TMR1_ISR *****************
  4444 ;; Defined at:
  4445 ;;		line 253 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;		None               void
  4452 ;; Registers used:
  4453 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4459 ;;      Params:         0       0       0       0       0       0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0
  4462 ;;      Totals:         0       0       0       0       0       0       0       0
  4463 ;;Total ram usage:        0 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_ISR
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function _TMR1_ISR
  4474  0614                     _TMR1_ISR:	
  4475                           
  4476                           ;MCU_B1.c: 255: if(TMR1IE && TMR1IF)
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4480  0614  0021               	movlb	1	; select bank1
  4481  0615  1C11               	btfss	17,0	;volatile
  4482  0616  0008               	return
  4483  0617  0020               	movlb	0	; select bank0
  4484  0618  1C11               	btfss	17,0	;volatile
  4485  0619  0008               	return
  4486                           
  4487                           ;MCU_B1.c: 256: {
  4488                           ;MCU_B1.c: 257: TMR1H=((65536-700)/256);
  4489  061A  30FD               	movlw	253
  4490  061B  0097               	movwf	23	;volatile
  4491                           
  4492                           ;MCU_B1.c: 258: TMR1L=((65536-700)%256);
  4493  061C  3044               	movlw	68
  4494  061D  0096               	movwf	22	;volatile
  4495                           
  4496                           ;MCU_B1.c: 259: TMR1IF=0;
  4497  061E  1011               	bcf	17,0	;volatile
  4498                           
  4499                           ;MCU_B1.c: 260: Timer1->Count++;
  4500  061F  0A7A               	incf	_Timer1,w
  4501  0620  0086               	movwf	6
  4502  0621  0187               	clrf	7
  4503  0622  3001               	movlw	1
  4504  0623  0781               	addwf	1,f
  4505  0624  3141               	addfsr 1,1
  4506  0625  1803               	skipnc
  4507  0626  0A81               	incf	1,f
  4508                           
  4509                           ;MCU_B1.c: 261: if(Timer1->Count == 20)
  4510  0627  0A7A               	incf	_Timer1,w
  4511  0628  0086               	movwf	6
  4512  0629  0187               	clrf	7
  4513  062A  3F40               	moviw [0]fsr1
  4514  062B  3A14               	xorlw	20
  4515  062C  1D03               	skipz
  4516  062D  2E30               	goto	u246_25
  4517  062E  3F41               	moviw [1]fsr1
  4518  062F  3A00               	xorlw	0
  4519  0630                     u246_25:	
  4520  0630  1D03               	skipz
  4521  0631  0008               	return
  4522                           
  4523                           ;MCU_B1.c: 262: {
  4524                           ;MCU_B1.c: 263: Timer1->Count=0;
  4525  0632  0A7A               	incf	_Timer1,w
  4526  0633  0086               	movwf	6
  4527  0634  0187               	clrf	7
  4528  0635  3000               	movlw	0
  4529  0636  3FC0               	movwi [0]fsr1
  4530  0637  3FC1               	movwi [1]fsr1
  4531                           
  4532                           ;MCU_B1.c: 264: TMain->T1_Timerout=1;
  4533  0638  0855               	movf	_TMain,w
  4534  0639  0086               	movwf	6
  4535  063A  0187               	clrf	7
  4536  063B  1501               	bsf	1,2
  4537  063C  0008               	return
  4538  063D                     __end_of_TMR1_ISR:	
  4539                           
  4540                           	psect	text29
  4541  06B3                     __ptext29:	
  4542 ;; *************** function _I2C_ISR *****************
  4543 ;; Defined at:
  4544 ;;		line 430 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;		None               void
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4558 ;;      Params:         0       0       0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_ISR
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function _I2C_ISR
  4573  06B3                     _I2C_ISR:	
  4574                           
  4575                           ;MCU_B1.c: 432: if(SSPIE && SSPIF)
  4576                           
  4577                           ;incstack = 0
  4578                           ; Regs used in _I2C_ISR: [wregfsr1]
  4579  06B3  0021               	movlb	1	; select bank1
  4580  06B4  1D91               	btfss	17,3	;volatile
  4581  06B5  0008               	return
  4582  06B6  0020               	movlb	0	; select bank0
  4583  06B7  1D91               	btfss	17,3	;volatile
  4584  06B8  0008               	return
  4585                           
  4586                           ;MCU_B1.c: 433: {
  4587                           ;MCU_B1.c: 434: SSPIE=0;
  4588  06B9  0021               	movlb	1	; select bank1
  4589  06BA  1191               	bcf	17,3	;volatile
  4590                           
  4591                           ;MCU_B1.c: 435: I2C->SlaveGO=1;
  4592  06BB  0020               	movlb	0	; select bank0
  4593  06BC  0857               	movf	_I2C,w
  4594  06BD  3E42               	addlw	66
  4595  06BE  0086               	movwf	6
  4596  06BF  3001               	movlw	1	; select bank2/3
  4597  06C0  0087               	movwf	7
  4598  06C1  1401               	bsf	1,0
  4599  06C2  0008               	return
  4600  06C3                     __end_of_I2C_ISR:	
  4601  007E                     btemp	set	126	;btemp
  4602  007E                     pic14e$flags	set	126
  4603  007E                     wtemp	set	126
  4604  007E                     wtemp0	set	126
  4605  0080                     wtemp1	set	128
  4606  0082                     wtemp2	set	130
  4607  0084                     wtemp3	set	132
  4608  0086                     wtemp4	set	134
  4609  0088                     wtemp5	set	136
  4610  007F                     wtemp6	set	127
  4611  007E                     ttemp	set	126
  4612  007E                     ttemp0	set	126
  4613  0081                     ttemp1	set	129
  4614  0084                     ttemp2	set	132
  4615  0087                     ttemp3	set	135
  4616  007F                     ttemp4	set	127
  4617  007E                     ltemp	set	126
  4618  007E                     ltemp0	set	126
  4619  0082                     ltemp1	set	130
  4620  0086                     ltemp2	set	134
  4621  0080                     ltemp3	set	128


Data Sizes:
    Strings     4
    Constant    10
    Data        58
    BSS         153
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     38      57
    BANK1            80      0      58
    BANK2            80      0      67
    BANK3            80      0      68
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S548$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    UART	PTR struct UART size(1) Largest target is 68
		 -> NULL(NULL[0]), VarUart(BANK3[68]), 

    I2C	PTR struct I2C size(1) Largest target is 67
		 -> NULL(NULL[0]), VarI2C(BANK2[67]), 

    Timer1	PTR struct Timer1 size(1) Largest target is 3
		 -> NULL(NULL[0]), VarTimer1(COMMON[3]), 

    Segment	PTR struct Segment size(1) Largest target is 26
		 -> NULL(NULL[0]), VarSegment(BANK1[26]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 

    TMain	PTR struct TMain size(1) Largest target is 15
		 -> NULL(NULL[0]), VarTMain(BANK0[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR
    _UART_ISR->_getche
    _getche->i1_putch

Critical Paths under _main in BANK0

    _main->_UART_Main
    _UART_Main->_UART_Transmit
    _setSegmentDisplayNumber->___awdiv
    _UART_Transmit->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _Mcu_Initialization->_I2C_Set
    _Mcu_Initialization->_TMR1_Set
    _Mcu_Initialization->_UART_Set
    _I2C_Main->_I2C_Master_Reception

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4220
                           _I2C_Main
                              _MainT
                      _MainT_Initial
                 _Mcu_Initialization
             _SegmentDisplay_Initial
                _SegmentDisplay_Main
                          _UART_Main
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            2     2      0    3892
                                             36 BANK0      2     2      0
                       _UART_Receive
                      _UART_Transmit
            _setSegmentDisplayNumber
 ---------------------------------------------------------------------------------
 (2) _setSegmentDisplayNumber                              7     5      2    2203
                                              9 BANK0      7     5      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     823
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     835
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        6     6      0    1559
                                             30 BANK0      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              16    12      4    1392
                                             14 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     362
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SegmentDisplay_Main                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SegmentDisplay_Initial                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _I2C_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initial                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Main                                             4     4      0     328
                                              3 BANK0      4     4      0
               _I2C_Master_Reception
            _I2C_Master_Transmission
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Transmission                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Reception                                 3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0     113
                                              5 COMMON     1     1      0
                            _I2C_ISR
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (6) _UART_ISR                                             3     3      0     113
                                              2 COMMON     3     3      0
                             _getche
 ---------------------------------------------------------------------------------
 (7) _getche                                               1     1      0      45
                                              1 COMMON     1     1      0
                              _getch
                            i1_putch
 ---------------------------------------------------------------------------------
 (8) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Main
     _I2C_Master_Reception
     _I2C_Master_Transmission
   _MainT
   _MainT_Initial
   _Mcu_Initialization
     _I2C_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
   _SegmentDisplay_Initial
   _SegmentDisplay_Main
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _setSegmentDisplayNumber
       ___awdiv
       ___awmod

 _ISR (ROOT)
   _I2C_ISR
   _TMR1_ISR
   _UART_ISR
     _getche
       _getch
       i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     105       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     26      39       6       71.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3A       8       72.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      43      10       83.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      44      12       85.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     105      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Sep 28 01:35:53 2014

                 ??_MainT_Initial 0020                                _BF 10A0                      ___awdiv@sign 0026  
       ??_setSegmentDisplayNumber 002B                               l402 03A5                               l411 03C5  
                             _I2C 0057                               l420 03CD                               l332 04E5  
                             l324 0306                               l405 03B3                               l341 04EF  
                             l317 02E3                               l414 03C7                               l335 04E9  
                             l408 03B8                               l352 0508                               l417 03CB  
                             l361 051A                               l418 03CA                               l370 0379  
                             l346 04F7                               l338 04ED                               l355 0513  
                             l516 022F                               l373 037D                               l349 0506  
                             l382 0384                               l358 0518                               l391 0397  
                             l367 0375                               l359 0517                               l376 037F  
                             l385 0390                               l474 071E                               l395 03C3  
                             l379 0381                               l396 039F                               l388 0395  
                             l399 03A2                               _CKP 10AC                               _GIE 005F  
                             _RA1 0061                               _RA2 0062                               _RC0 0070  
                             _RA4 0064                               _RA5 0065                               _RA6 0066  
                             _RA7 0067                               _PEN 10B2                               _ISR 0004  
                             _SEN 10B0                               _RX9 0CEE                               _TX9 0CF6  
                 __end_of_I2C_ISR 06C3                   __end_of_I2C_Set 071C                      ___awmod@sign 0026  
                             wreg 0009     __size_of_I2C_Master_Reception 005B                              ?_ISR 0070  
                            l2211 01E8                              l2203 01C9                              l2141 0532  
                            l2221 01F5                              l2151 054D                              l2215 01F0  
                            l2223 0178                              l2303 0465                              l2233 03DB  
                            l2147 0544                              l2139 0526                              l2163 05C0  
                            l2251 03FA                              l2165 05CC                              l2173 05E1  
                            l2261 0415                              l2333 00B5                              l2317 008E  
                            l2183 0194                              l2239 03E6                              l2169 05D8  
                            l2265 041D                              l2257 040C                              l2249 03EE  
                            l2281 0436                              l2353 015E                              l2345 013C  
                            l2603 0263                              l2611 0275                              l2291 0448  
                            l2517 033A                              l2189 01AD                              l2277 042F  
                            l2357 016D                              l2349 014D                              l2527 0358  
                            l2607 026D                              l2199 01C3                              l2295 0454  
                            l2561 02F9                              l2617 029D                              l2465 05B2  
                            l2481 048F                              l2289 043C                              l2555 02DC  
                            l2459 0596                              l2299 045D                              l2627 0647  
                            l2549 02C2                              l2479 047F                              l2579 0577  
                            l2599 0259                              STR_1 070A                              u3005 044E  
                            _LATA 010C                              _LATB 010D                              u3015 0455  
                            _LATC 010E                              u3065 0063                              u3075 0080  
                            u3095 009D                              u3505 047D                              u3515 048D  
                            u2725 05C3                              u2805 01DE                              u2655 0529  
                            u3545 032D                              u2745 05D2                              u2905 03FB  
                            u3555 034D                              u2675 0533                              u2755 05D9  
                            u2915 0405                              _PEIE 005E                              u3565 036B  
                            u2685 053D                              u2925 040D                              u2695 0545  
                            _RCIE 048D                              _RCEN 10B3                              _RCIF 008D  
                            u2885 03F1                              u2985 043F                              _UART 0056  
                            _TXIE 048C                              _TXIF 008C                              _R_nW 10A2  
                            _main 063D                  __end_of_I2C_Main 0316                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            ltemp 007E                              start 0016                              ttemp 007E  
                            wtemp 007E                   __end_ofi1_putch 0734                             ??_ISR 0075  
                           ?_main 0070                             _ACKEN 10B4                   __end_of___awdiv 0424  
                           _BRG16 0CFB                     __CFG_WDTE$OFF 0000                   __end_of___awmod 046C  
                 ___awdiv@divisor 0020                             _T1CON 0018                   __end_of___lwdiv 0554  
                 __end_of___lwmod 05E8                             i1l480 0740                             i1l474 072D  
                 ___awdiv@counter 0025                             _RCREG 0199                             _RCSTA 019D  
                           _TMR1H 0017                             _TMR1L 0016                             _SPBRG 019B  
                           _PORTA 000C                             _PORTB 000D                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _SSPIE 048B                             _SSPIF 008B                             _SSPOV 10AE  
                           _TXREG 019A                             _TXSTA 019E                             _TMain 0055  
                           _MainT 0316                     __CFG_WRT$BOOT 0000                  __end_of_UART_ISR 0614  
              __size_of_UART_Main 0034                  __end_of_TMR1_ISR 063D                  __end_of_UART_Set 067D  
                __end_of_TMR1_Set 06B3                             _getch 0740                   __end_of_dpowers 070A  
                           _putch 071C                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080   __end_of_setSegmentDisplayNumber 0173  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __initialization 0018                      __end_of_main 0664  
__size_of_I2C_Master_Transmission 0038                         ??_I2C_ISR 0070                         ??_I2C_Set 0020  
                          ??_main 0046             I2C_Master_Reception@i 0022                            ?_MainT 0070  
                       I2C_Main@i 0026                            ?_getch 0070                  ___awdiv@dividend 0022  
                          _ANSELA 018C                            ?_putch 0070                            _ANSELB 018D  
                          _ANSELC 018E                            i1l2051 060C                            i1l2045 05F5  
                          u246_25 0630                            _OSCCON 0099                         ??i1_putch 0070  
                      _VarSegment 00C0                            _TMR1IE 0488                            _TMR1IF 0088  
                          _SPBRGH 019C                            _IO_Set 067D                            _SSPADD 0212  
                          _TRISC6 0476                            _TRISC7 0477                            _SSPBUF 0211  
                      _VarProduct 00A0        __end_of_Mcu_Initialization 06D2                            _VarI2C 0120  
                          _Timer1 007A                 __end_of_UART_Main 0588                         ??___awdiv 0024  
                       ??___awmod 0024                         ??___lwdiv 0024                         ??___lwmod 002C  
                          _getche 0724                  ___awdiv@quotient 0027                   ___awmod@divisor 0020  
                 ___awmod@counter 0025                            _printf 0173                         ?_I2C_Main 0070  
         __end_of__initialization 003E             __end_of_UART_Transmit 04AB                     __end_of_MainT 0375  
                  __pcstackCOMMON 0070                      __pidataBANK1 04AB                         ?_UART_ISR 0070  
                       ?_TMR1_ISR 0070                         ?_UART_Set 0070                     __end_of_getch 0746  
                       ?_TMR1_Set 0070                       i1putch@byte 0070                     __end_of_putch 0724  
                      ??_I2C_Main 0023                           ??_MainT 0020                           ??_getch 0070  
                         ??_putch 0020                        __pbssBANK0 0046                        __pbssBANK2 0120  
                      __pbssBANK3 01A0                           ?_IO_Set 0070                        __pnvCOMMON 0079  
    __end_of_I2C_Master_Reception 03D0                        __pmaintext 063D                        ??_UART_ISR 0072  
         _I2C_Master_Transmission 04E5                        ??_TMR1_ISR 0070                        ??_UART_Set 0020  
                      ??_TMR1_Set 0020                        __pintentry 0004                           ?_getche 0070  
                         _I2C_ISR 06B3                           _ACKSTAT 10B6      __size_of_SegmentDisplay_Main 0073  
                         _I2C_Set 070E                         UART_ISR@i 0074             __end_of_MainT_Initial 06E1  
                         ?_printf 002E                           _SSPCON1 0215                           _SSPCON2 0216  
                         _SSPSTAT 0214                           i1_putch 072C                     ?_UART_Receive 0070  
                 __size_of_IO_Set 0016                           _Segment 0058                           _VarUart 01A0  
                         _Product 0079          ?_setSegmentDisplayNumber 0029                           ___awdiv 03D0  
                         ___awmod 0424                           ___lwdiv 051D                           ___lwmod 05B9  
                 __size_of_getche 0008          ??_SegmentDisplay_Initial 0020                           __ptext1 0554  
                         __ptext2 0042                           __ptext3 0424                           __ptext4 03D0  
                         __ptext5 046C                           __ptext6 0173                           __ptext7 071C  
                         __ptext8 05B9                           __ptext9 051D                   __size_of_printf 00BD  
                    __size_of_ISR 0012                           _dpowers 0700                  ___awmod@dividend 0022  
                         getche@c 0071                           clrloop0 0735              end_of_initialization 003E  
                  ??_UART_Receive 0020                           init_ram 073A                           initloop 073B  
                  UART_Transmit@i 0043                    UART_Transmit@j 0041         ??_I2C_Master_Transmission 0020  
                         printf@c 003D                           printf@f 002E                      __pstringtext 0700  
                       _UART_Main 0554          I2C_Master_Transmission@i 0021                _Mcu_Initialization 06C3  
                __CFG_FOSC$INTOSC 0000                 __size_of_I2C_Main 0073               ?_Mcu_Initialization 0070  
            _I2C_Master_Reception 0375                    __end_of_IO_Set 0693              ??_Mcu_Initialization 0021  
   setSegmentDisplayNumber@number 0029                        ?_UART_Main 0070                 __size_of_UART_ISR 002C  
               __size_of_TMR1_ISR 0029                    __end_of_getche 072C                 __size_of_UART_Set 0019  
 __size_of_SegmentDisplay_Initial 0010                 __size_of_TMR1_Set 0010                    __end_of_printf 0230  
             start_initialization 0018                       __end_of_ISR 0016             ?_I2C_Master_Reception 0070  
             _SegmentDisplay_Main 0230                          ??_IO_Set 0020                         _VarTimer1 0076  
                        ??_getche 0071                       __pdataBANK1 00A0                          ?_I2C_ISR 0070  
            ?_SegmentDisplay_Main 0070                          ?_I2C_Set 0070                          ??_printf 0032  
            __end_of_UART_Receive 05B9                       __pbssCOMMON 0076                         ___latbits 0002  
          __size_of_UART_Transmit 003F                     __pcstackBANK0 0020               __end_of__stringdata 070E  
          _SegmentDisplay_Initial 0693                          ?i1_putch 0070                         __pnvBANK0 0055  
                ___lwdiv@dividend 0022                          ?___awdiv 0020                          ?___awmod 0020  
                        ?___lwdiv 0020             ??_SegmentDisplay_Main 0020                          ?___lwmod 0028  
                     ??_UART_Main 0044                     UART_Receive@i 0023                          _I2C_Main 02A3  
          ??_I2C_Master_Reception 0020                    __size_of_MainT 005F  __size_of_setSegmentDisplayNumber 0131  
                ___lwdiv@quotient 0026          setSegmentDisplayNumber@i 002F                    __size_of_getch 0006  
                  __size_of_putch 0008            __size_of_MainT_Initial 000F                         clear_ram0 0734  
                   _UART_Transmit 046C                          _UART_ISR 05E8                          _TMR1_ISR 0614  
                        _UART_Set 0664                          _TMR1_Set 06A3                  __size_of_I2C_ISR 0010  
                __size_of_I2C_Set 000E                       __stringdata 070A                        printf@_val 0039  
                      printf@flag 0037                        printf@prec 0038                  __size_ofi1_putch 0008  
                        _VarTMain 0046                    ?_UART_Transmit 0070             __size_of_UART_Receive 0031  
                __size_of___awdiv 0054                  __size_of___awmod 0048                  __size_of___lwdiv 0037  
                __size_of___lwmod 002F                     _MainT_Initial 06D2                   ___lwdiv@divisor 0020  
                 ___lwdiv@counter 0025                          __ptext10 0588                          __ptext11 0230  
                        __ptext20 02A3                          __ptext12 0693                          __ptext21 04E5  
                        __ptext13 06C3                          __ptext22 0375                          __ptext14 0664  
                        __ptext15 06A3                          __ptext24 05E8                          __ptext16 067D  
                        __ptext25 0724                          __ptext17 070E                          __ptext26 072C  
                        __ptext18 06D2                          __ptext27 0740                          __ptext19 0316  
                        __ptext28 0614                          __ptext29 06B3          ?_I2C_Master_Transmission 0070  
                   __size_of_main 0027                      _UART_Receive 0588       __size_of_Mcu_Initialization 000F  
                  ?_MainT_Initial 0070                         putch@byte 0020           _setSegmentDisplayNumber 0042  
         ?_SegmentDisplay_Initial 0070                       pic14e$flags 007E                          intlevel1 0000  
                ___lwmod@dividend 002A                   ??_UART_Transmit 003E                          printf@ap 0036  
                 ___lwmod@divisor 0028                   ___lwmod@counter 002D    __end_of_SegmentDisplay_Initial 06A3  
 __end_of_I2C_Master_Transmission 051D       __end_of_SegmentDisplay_Main 02A3  
