

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Sep 15 00:43:19 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  0090                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  010C                     	;# 
    92  010D                     	;# 
    93  010E                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  011D                     	;# 
    97  018C                     	;# 
    98  018D                     	;# 
    99  018E                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0197                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0211                     	;# 
   124  0212                     	;# 
   125  0212                     	;# 
   126  0213                     	;# 
   127  0213                     	;# 
   128  0214                     	;# 
   129  0214                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0216                     	;# 
   134  0216                     	;# 
   135  0217                     	;# 
   136  0217                     	;# 
   137  0291                     	;# 
   138  0291                     	;# 
   139  0292                     	;# 
   140  0293                     	;# 
   141  0298                     	;# 
   142  0298                     	;# 
   143  0299                     	;# 
   144  029A                     	;# 
   145  0394                     	;# 
   146  0395                     	;# 
   147  0396                     	;# 
   148  0FE4                     	;# 
   149  0FE5                     	;# 
   150  0FE6                     	;# 
   151  0FE7                     	;# 
   152  0FE8                     	;# 
   153  0FE9                     	;# 
   154  0FEA                     	;# 
   155  0FEB                     	;# 
   156  0FED                     	;# 
   157  0FEE                     	;# 
   158  0FEF                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  0116                     	;# 
   206  0117                     	;# 
   207  011D                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  018E                     	;# 
   211  0191                     	;# 
   212  0191                     	;# 
   213  0192                     	;# 
   214  0193                     	;# 
   215  0193                     	;# 
   216  0194                     	;# 
   217  0195                     	;# 
   218  0196                     	;# 
   219  0197                     	;# 
   220  0199                     	;# 
   221  019A                     	;# 
   222  019B                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019C                     	;# 
   227  019C                     	;# 
   228  019D                     	;# 
   229  019E                     	;# 
   230  019F                     	;# 
   231  020D                     	;# 
   232  0210                     	;# 
   233  0211                     	;# 
   234  0211                     	;# 
   235  0212                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0213                     	;# 
   239  0214                     	;# 
   240  0214                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0216                     	;# 
   245  0216                     	;# 
   246  0217                     	;# 
   247  0217                     	;# 
   248  0291                     	;# 
   249  0291                     	;# 
   250  0292                     	;# 
   251  0293                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  029A                     	;# 
   256  0394                     	;# 
   257  0395                     	;# 
   258  0396                     	;# 
   259  0FE4                     	;# 
   260  0FE5                     	;# 
   261  0FE6                     	;# 
   262  0FE7                     	;# 
   263  0FE8                     	;# 
   264  0FE9                     	;# 
   265  0FEA                     	;# 
   266  0FEB                     	;# 
   267  0FED                     	;# 
   268  0FEE                     	;# 
   269  0FEF                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0008                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  0010                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0015                     	;# 
   289  0016                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001C                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  008E                     	;# 
   300  0090                     	;# 
   301  0091                     	;# 
   302  0092                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  0116                     	;# 
   317  0117                     	;# 
   318  011D                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  018E                     	;# 
   322  0191                     	;# 
   323  0191                     	;# 
   324  0192                     	;# 
   325  0193                     	;# 
   326  0193                     	;# 
   327  0194                     	;# 
   328  0195                     	;# 
   329  0196                     	;# 
   330  0197                     	;# 
   331  0199                     	;# 
   332  019A                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019C                     	;# 
   338  019C                     	;# 
   339  019D                     	;# 
   340  019E                     	;# 
   341  019F                     	;# 
   342  020D                     	;# 
   343  0210                     	;# 
   344  0211                     	;# 
   345  0211                     	;# 
   346  0212                     	;# 
   347  0212                     	;# 
   348  0213                     	;# 
   349  0213                     	;# 
   350  0214                     	;# 
   351  0214                     	;# 
   352  0215                     	;# 
   353  0215                     	;# 
   354  0215                     	;# 
   355  0216                     	;# 
   356  0216                     	;# 
   357  0217                     	;# 
   358  0217                     	;# 
   359  0291                     	;# 
   360  0291                     	;# 
   361  0292                     	;# 
   362  0293                     	;# 
   363  0298                     	;# 
   364  0298                     	;# 
   365  0299                     	;# 
   366  029A                     	;# 
   367  0394                     	;# 
   368  0395                     	;# 
   369  0396                     	;# 
   370  0FE4                     	;# 
   371  0FE5                     	;# 
   372  0FE6                     	;# 
   373  0FE7                     	;# 
   374  0FE8                     	;# 
   375  0FE9                     	;# 
   376  0FEA                     	;# 
   377  0FEB                     	;# 
   378  0FED                     	;# 
   379  0FEE                     	;# 
   380  0FEF                     	;# 
   381                           
   382                           	psect	idataBANK0
   383  0675                     __pidataBANK0:	
   384                           
   385                           ;initializer for _VarSegment
   386  0675  34C0               	retlw	192
   387  0676  34F9               	retlw	249
   388  0677  34A4               	retlw	164
   389  0678  34B0               	retlw	176
   390  0679  3499               	retlw	153
   391  067A  3492               	retlw	146
   392  067B  3482               	retlw	130
   393  067C  34D8               	retlw	216
   394  067D  3480               	retlw	128
   395  067E  3490               	retlw	144
   396  067F  3488               	retlw	136
   397  0680  3483               	retlw	131
   398  0681  34A7               	retlw	167
   399  0682  34A1               	retlw	161
   400  0683  3486               	retlw	134
   401  0684  348E               	retlw	142
   402  0685  34BF               	retlw	191
   403  0686  3400               	retlw	0
   404  0687  3400               	retlw	0
   405  0688  3400               	retlw	0
   406  0689  3400               	retlw	0
   407  068A  3400               	retlw	0
   408  068B  3400               	retlw	0
   409  068C  3400               	retlw	0
   410  068D  3400               	retlw	0
   411  068E  3400               	retlw	0
   412                           
   413                           	psect	idataBANK1
   414  0655                     __pidataBANK1:	
   415                           
   416                           ;initializer for _VarProduct
   417  0655  3463               	retlw	99
   418  0656  3402               	retlw	2
   419  0657  3400               	retlw	0
   420  0658  3400               	retlw	0
   421  0659  3400               	retlw	0
   422  065A  3400               	retlw	0
   423  065B  3400               	retlw	0
   424  065C  3400               	retlw	0
   425  065D  3400               	retlw	0
   426  065E  3400               	retlw	0
   427  065F  3400               	retlw	0
   428  0660  3400               	retlw	0
   429  0661  34FF               	retlw	255
   430  0662  34FF               	retlw	255
   431  0663  34FF               	retlw	255
   432  0664  3400               	retlw	0
   433  0665  3400               	retlw	0
   434  0666  3400               	retlw	0
   435  0667  3400               	retlw	0
   436  0668  3400               	retlw	0
   437  0669  3400               	retlw	0
   438  066A  3400               	retlw	0
   439  066B  3400               	retlw	0
   440  066C  3400               	retlw	0
   441  066D  3400               	retlw	0
   442  066E  3400               	retlw	0
   443  066F  3400               	retlw	0
   444  0670  3400               	retlw	0
   445  0671  3400               	retlw	0
   446  0672  3400               	retlw	0
   447  0673  3400               	retlw	0
   448  0674  3400               	retlw	0
   449                           
   450                           	psect	stringtext
   451  0800                     __pstringtext:	
   452  0800                     _dpowers:	
   453  0800  3401               	retlw	1
   454  0801  3400               	retlw	0
   455  0802  340A               	retlw	10
   456  0803  3400               	retlw	0
   457  0804  3464               	retlw	100
   458  0805  3400               	retlw	0
   459  0806  34E8               	retlw	232
   460  0807  3403               	retlw	3
   461  0808  3410               	retlw	16
   462  0809  3427               	retlw	39
   463  080A                     __end_of_dpowers:	
   464  080A                     __stringdata:	
   465  080A                     STR_1:	
   466  080A  3425               	retlw	37	;'%'
   467  080B  3464               	retlw	100	;'d'
   468  080C  3400               	retlw	0
   469  080D                     __end_of__stringdata:	
   470                           
   471                           ; #config settings
   472  0000                     
   473                           	psect	nvCOMMON
   474  0079                     __pnvCOMMON:	
   475  0079                     _Product:	
   476  0079                     	ds	1
   477                           
   478                           	psect	nvBANK0
   479  006B                     __pnvBANK0:	
   480  006B                     _TMain:	
   481  006B                     	ds	1
   482  000C                     _PORTA	set	12
   483  000D                     _PORTB	set	13
   484  000E                     _PORTC	set	14
   485  0018                     _T1CON	set	24
   486  0017                     _TMR1H	set	23
   487  0016                     _TMR1L	set	22
   488  005F                     _GIE	set	95
   489  005E                     _PEIE	set	94
   490  0061                     _RA1	set	97
   491  0062                     _RA2	set	98
   492  0064                     _RA4	set	100
   493  0065                     _RA5	set	101
   494  0066                     _RA6	set	102
   495  0067                     _RA7	set	103
   496  0070                     _RC0	set	112
   497  008D                     _RCIF	set	141
   498  008B                     _SSPIF	set	139
   499  0088                     _TMR1IF	set	136
   500  008C                     _TXIF	set	140
   501  0099                     _OSCCON	set	153
   502  008C                     _TRISA	set	140
   503  008D                     _TRISB	set	141
   504  008E                     _TRISC	set	142
   505  048D                     _RCIE	set	1165
   506  048B                     _SSPIE	set	1163
   507  0488                     _TMR1IE	set	1160
   508  0476                     _TRISC6	set	1142
   509  0477                     _TRISC7	set	1143
   510  048C                     _TXIE	set	1164
   511  010C                     _LATA	set	268
   512  010D                     _LATB	set	269
   513  010E                     _LATC	set	270
   514  018C                     _ANSELA	set	396
   515  018D                     _ANSELB	set	397
   516  018E                     _ANSELC	set	398
   517  0199                     _RCREG	set	409
   518  019D                     _RCSTA	set	413
   519  019B                     _SPBRG	set	411
   520  019C                     _SPBRGH	set	412
   521  019A                     _TXREG	set	410
   522  019E                     _TXSTA	set	414
   523  0CFB                     _BRG16	set	3323
   524  0CFE                     _RCIDL	set	3326
   525  0CEE                     _RX9	set	3310
   526  0CF1                     _TRMT	set	3313
   527  0CF6                     _TX9	set	3318
   528  0212                     _SSPADD	set	530
   529  0211                     _SSPBUF	set	529
   530  0215                     _SSPCON1	set	533
   531  0216                     _SSPCON2	set	534
   532  0214                     _SSPSTAT	set	532
   533  10B4                     _ACKEN	set	4276
   534  10B6                     _ACKSTAT	set	4278
   535  10A0                     _BF	set	4256
   536  10AC                     _CKP	set	4268
   537  10B2                     _PEN	set	4274
   538  10B3                     _RCEN	set	4275
   539  10A2                     _R_nW	set	4258
   540  10B0                     _SEN	set	4272
   541  10AE                     _SSPOV	set	4270
   542                           
   543                           	psect	cinit
   544  001B                     start_initialization:	
   545  001B                     __initialization:	
   546                           
   547                           ; Clear objects allocated to COMMON
   548  001B  01FA               	clrf	__pbssCOMMON& (0+127)
   549                           
   550                           ; Clear objects allocated to BANK0
   551  001C  3056               	movlw	low __pbssBANK0
   552  001D  0084               	movwf	4
   553  001E  3000               	movlw	high __pbssBANK0
   554  001F  0085               	movwf	5
   555  0020  3015               	movlw	21
   556  0021  3187  2726  3180   	fcall	clear_ram0
   557                           
   558                           ; Clear objects allocated to BANK2
   559  0024  3020               	movlw	low __pbssBANK2
   560  0025  0084               	movwf	4
   561  0026  3001               	movlw	high __pbssBANK2
   562  0027  0085               	movwf	5
   563  0028  3044               	movlw	68
   564  0029  3187  2726  3180   	fcall	clear_ram0
   565                           
   566                           ; Clear objects allocated to BANK3
   567  002C  30A0               	movlw	low __pbssBANK3
   568  002D  0084               	movwf	4
   569  002E  3001               	movlw	high __pbssBANK3
   570  002F  0085               	movwf	5
   571  0030  3043               	movlw	67
   572  0031  3187  2726  3180   	fcall	clear_ram0
   573                           
   574                           ; Initialize objects allocated to BANK0
   575  0034  3075               	movlw	low __pidataBANK0
   576  0035  0084               	movwf	4
   577  0036  3086               	movlw	(high __pidataBANK0)| (0+128)
   578  0037  0085               	movwf	5
   579  0038  303C               	movlw	low __pdataBANK0
   580  0039  0086               	movwf	6
   581  003A  3000               	movlw	high __pdataBANK0
   582  003B  0087               	movwf	7
   583  003C  301A               	movlw	26
   584  003D  3187  272C  3180   	fcall	init_ram
   585                           
   586                           ; Initialize objects allocated to BANK1
   587  0040  3055               	movlw	low __pidataBANK1
   588  0041  0084               	movwf	4
   589  0042  3086               	movlw	(high __pidataBANK1)| (0+128)
   590  0043  0085               	movwf	5
   591  0044  30A0               	movlw	low __pdataBANK1
   592  0045  0086               	movwf	6
   593  0046  3000               	movlw	high __pdataBANK1
   594  0047  0087               	movwf	7
   595  0048  3020               	movlw	32
   596  0049  3187  272C         	fcall	init_ram
   597  004B                     end_of_initialization:	
   598                           ;End of C runtime variable initialization code
   599                           
   600  004B                     __end_of__initialization:	
   601  004B  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   602  004C  0020               	movlb	0
   603  004D  3185  2DE5         	ljmp	_main	;jump to C main() function
   604                           
   605                           	psect	bssCOMMON
   606  007A                     __pbssCOMMON:	
   607  007A                     _Timer1:	
   608  007A                     	ds	1
   609                           
   610                           	psect	bssBANK0
   611  0056                     __pbssBANK0:	
   612  0056                     _I2C:	
   613  0056                     	ds	1
   614  0057                     _UART:	
   615  0057                     	ds	1
   616  0058                     _VarTMain:	
   617  0058                     	ds	15
   618  0067                     _VarTimer1:	
   619  0067                     	ds	3
   620  006A                     _Segment:	
   621  006A                     	ds	1
   622                           
   623                           	psect	dataBANK0
   624  003C                     __pdataBANK0:	
   625  003C                     _VarSegment:	
   626  003C                     	ds	26
   627                           
   628                           	psect	dataBANK1
   629  00A0                     __pdataBANK1:	
   630  00A0                     _VarProduct:	
   631  00A0                     	ds	32
   632                           
   633                           	psect	bssBANK2
   634  0120                     __pbssBANK2:	
   635  0120                     _VarUart:	
   636  0120                     	ds	68
   637                           
   638                           	psect	bssBANK3
   639  01A0                     __pbssBANK3:	
   640  01A0                     _VarI2C:	
   641  01A0                     	ds	67
   642                           
   643                           	psect	clrtext
   644  0726                     clear_ram0:	
   645                           ;	Called with FSR0 containing the base address, and
   646                           ;	WREG with the size to clear
   647                           
   648  0726  0064               	clrwdt	;clear the watchdog before getting into this loop
   649  0727                     clrloop0:	
   650  0727  0180               	clrf	0	;clear RAM location pointed to by FSR
   651  0728  3101               	addfsr 0,1
   652  0729  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   653  072A  2F27               	goto	clrloop0	;have we reached the end yet?
   654  072B  3400               	retlw	0	;all done for this memory range, return
   655                           
   656                           	psect	inittext
   657  072C                     init_ram:	
   658  072C  00FE               	movwf	126
   659  072D                     initloop:	
   660  072D  0012               	moviw fsr0++
   661  072E  001E               	movwi fsr1++
   662  072F  0BFE               	decfsz	126,f
   663  0730  2F2D               	goto	initloop
   664  0731  3400               	retlw	0
   665                           
   666                           	psect	cstackCOMMON
   667  0070                     __pcstackCOMMON:	
   668  0070                     ?_MainT_Initial:	
   669  0070                     ?_Mcu_Initial:	
   670                           ; 0 bytes @ 0x0
   671                           
   672  0070                     ?_SegmentDisplay_Initial:	
   673                           ; 0 bytes @ 0x0
   674                           
   675  0070                     ?_MainT:	
   676                           ; 0 bytes @ 0x0
   677                           
   678  0070                     ?_I2C_Main:	
   679                           ; 0 bytes @ 0x0
   680                           
   681  0070                     ?_UART_Main:	
   682                           ; 0 bytes @ 0x0
   683                           
   684  0070                     ?_SegmentDisplay_Main:	
   685                           ; 0 bytes @ 0x0
   686                           
   687  0070                     ?_IO_Set:	
   688                           ; 0 bytes @ 0x0
   689                           
   690  0070                     ?_TMR1_Set:	
   691                           ; 0 bytes @ 0x0
   692                           
   693  0070                     ?_I2C_Set:	
   694                           ; 0 bytes @ 0x0
   695                           
   696  0070                     ?_UART_Set:	
   697                           ; 0 bytes @ 0x0
   698                           
   699  0070                     ?_TMR1_ISR:	
   700                           ; 0 bytes @ 0x0
   701                           
   702  0070                     ??_TMR1_ISR:	
   703                           ; 0 bytes @ 0x0
   704                           
   705  0070                     ?_UART_ISR:	
   706                           ; 0 bytes @ 0x0
   707                           
   708  0070                     ??_UART_ISR:	
   709                           ; 0 bytes @ 0x0
   710                           
   711  0070                     ?_I2C_ISR:	
   712                           ; 0 bytes @ 0x0
   713                           
   714  0070                     ??_I2C_ISR:	
   715                           ; 0 bytes @ 0x0
   716                           
   717  0070                     ?_I2C_Master_Reception:	
   718                           ; 0 bytes @ 0x0
   719                           
   720  0070                     ?_I2C_Master_Transmission:	
   721                           ; 0 bytes @ 0x0
   722                           
   723  0070                     ?_UART_Receive:	
   724                           ; 0 bytes @ 0x0
   725                           
   726  0070                     ?_UART_Transmit:	
   727                           ; 0 bytes @ 0x0
   728                           
   729  0070                     ?_main:	
   730                           ; 0 bytes @ 0x0
   731                           
   732  0070                     ?_ISR:	
   733                           ; 0 bytes @ 0x0
   734                           
   735  0070                     ?_putch:	
   736                           ; 0 bytes @ 0x0
   737                           
   738                           
   739                           ; 0 bytes @ 0x0
   740  0070                     	ds	2
   741  0072                     ??_ISR:	
   742                           
   743                           ; 0 bytes @ 0x2
   744  0072                     	ds	1
   745  0073                     ??_MainT_Initial:	
   746  0073                     ??_SegmentDisplay_Initial:	
   747                           ; 0 bytes @ 0x3
   748                           
   749  0073                     ??_SegmentDisplay_Main:	
   750                           ; 0 bytes @ 0x3
   751                           
   752  0073                     ??_IO_Set:	
   753                           ; 0 bytes @ 0x3
   754                           
   755  0073                     ??_TMR1_Set:	
   756                           ; 0 bytes @ 0x3
   757                           
   758  0073                     ??_I2C_Set:	
   759                           ; 0 bytes @ 0x3
   760                           
   761  0073                     ??_UART_Set:	
   762                           ; 0 bytes @ 0x3
   763                           
   764  0073                     ??_I2C_Master_Reception:	
   765                           ; 0 bytes @ 0x3
   766                           
   767  0073                     ??_I2C_Master_Transmission:	
   768                           ; 0 bytes @ 0x3
   769                           
   770  0073                     ??_UART_Receive:	
   771                           ; 0 bytes @ 0x3
   772                           
   773  0073                     ??_putch:	
   774                           ; 0 bytes @ 0x3
   775                           
   776  0073                     ?___awdiv:	
   777                           ; 0 bytes @ 0x3
   778                           
   779  0073                     ?___awmod:	
   780                           ; 2 bytes @ 0x3
   781                           
   782  0073                     ?___lwdiv:	
   783                           ; 2 bytes @ 0x3
   784                           
   785  0073                     putch@byte:	
   786                           ; 2 bytes @ 0x3
   787                           
   788  0073                     ___awdiv@divisor:	
   789                           ; 1 bytes @ 0x3
   790                           
   791  0073                     ___awmod@divisor:	
   792                           ; 2 bytes @ 0x3
   793                           
   794  0073                     ___lwdiv@divisor:	
   795                           ; 2 bytes @ 0x3
   796                           
   797                           
   798                           ; 2 bytes @ 0x3
   799  0073                     	ds	1
   800  0074                     ??_Mcu_Initial:	
   801  0074                     I2C_Master_Transmission@i:	
   802                           ; 0 bytes @ 0x4
   803                           
   804                           
   805                           ; 1 bytes @ 0x4
   806  0074                     	ds	1
   807  0075                     I2C_Master_Reception@i:	
   808  0075                     ___awdiv@dividend:	
   809                           ; 1 bytes @ 0x5
   810                           
   811  0075                     ___awmod@dividend:	
   812                           ; 2 bytes @ 0x5
   813                           
   814  0075                     ___lwdiv@dividend:	
   815                           ; 2 bytes @ 0x5
   816                           
   817                           
   818                           ; 2 bytes @ 0x5
   819  0075                     	ds	1
   820  0076                     ??_I2C_Main:	
   821  0076                     UART_Receive@i:	
   822                           ; 0 bytes @ 0x6
   823                           
   824                           
   825                           ; 1 bytes @ 0x6
   826  0076                     	ds	1
   827  0077                     ??___awdiv:	
   828  0077                     ??___awmod:	
   829                           ; 0 bytes @ 0x7
   830                           
   831  0077                     ??___lwdiv:	
   832                           ; 0 bytes @ 0x7
   833                           
   834                           
   835                           ; 0 bytes @ 0x7
   836  0077                     	ds	1
   837  0078                     ??___lwmod:	
   838  0078                     setSegmentDisplayNumber@i:	
   839                           ; 0 bytes @ 0x8
   840                           
   841                           
   842                           ; 1 bytes @ 0x8
   843  0078                     	ds	1
   844  0079                     ??_UART_Main:	
   845  0079                     ??_main:	
   846                           ; 0 bytes @ 0x9
   847                           
   848                           
   849                           	psect	cstackBANK0
   850  0020                     __pcstackBANK0:	
   851                           ; 0 bytes @ 0x9
   852                           
   853  0020                     I2C_Main@i:	
   854  0020                     ___awdiv@counter:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     ___awmod@counter:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0020                     ___lwdiv@counter:	
   861                           ; 1 bytes @ 0x0
   862                           
   863                           
   864                           ; 1 bytes @ 0x0
   865  0020                     	ds	1
   866  0021                     ___awdiv@sign:	
   867  0021                     ___awmod@sign:	
   868                           ; 1 bytes @ 0x1
   869                           
   870  0021                     ___lwdiv@quotient:	
   871                           ; 1 bytes @ 0x1
   872                           
   873                           
   874                           ; 2 bytes @ 0x1
   875  0021                     	ds	1
   876  0022                     ___awdiv@quotient:	
   877                           
   878                           ; 2 bytes @ 0x2
   879  0022                     	ds	1
   880  0023                     ?___lwmod:	
   881  0023                     ___lwmod@divisor:	
   882                           ; 2 bytes @ 0x3
   883                           
   884                           
   885                           ; 2 bytes @ 0x3
   886  0023                     	ds	1
   887  0024                     ?_setSegmentDisplayNumber:	
   888  0024                     setSegmentDisplayNumber@number:	
   889                           ; 0 bytes @ 0x4
   890                           
   891                           
   892                           ; 2 bytes @ 0x4
   893  0024                     	ds	1
   894  0025                     ___lwmod@dividend:	
   895                           
   896                           ; 2 bytes @ 0x5
   897  0025                     	ds	1
   898  0026                     ??_setSegmentDisplayNumber:	
   899                           
   900                           ; 0 bytes @ 0x6
   901  0026                     	ds	1
   902  0027                     ___lwmod@counter:	
   903                           
   904                           ; 1 bytes @ 0x7
   905  0027                     	ds	1
   906  0028                     ?_printf:	
   907  0028                     printf@f:	
   908                           ; 2 bytes @ 0x8
   909                           
   910                           
   911                           ; 2 bytes @ 0x8
   912  0028                     	ds	2
   913  002A                     ??_MainT:	
   914                           
   915                           ; 0 bytes @ 0xA
   916  002A                     	ds	2
   917  002C                     ??_printf:	
   918                           
   919                           ; 0 bytes @ 0xC
   920  002C                     	ds	1
   921  002D                     MainT@i:	
   922                           
   923                           ; 1 bytes @ 0xD
   924  002D                     	ds	3
   925  0030                     printf@ap:	
   926                           
   927                           ; 1 bytes @ 0x10
   928  0030                     	ds	1
   929  0031                     printf@flag:	
   930                           
   931                           ; 1 bytes @ 0x11
   932  0031                     	ds	1
   933  0032                     printf@prec:	
   934                           
   935                           ; 1 bytes @ 0x12
   936  0032                     	ds	1
   937  0033                     printf@_val:	
   938                           
   939                           ; 4 bytes @ 0x13
   940  0033                     	ds	4
   941  0037                     printf@c:	
   942                           
   943                           ; 1 bytes @ 0x17
   944  0037                     	ds	1
   945  0038                     ??_UART_Transmit:	
   946                           
   947                           ; 0 bytes @ 0x18
   948  0038                     	ds	3
   949  003B                     UART_Transmit@i:	
   950                           
   951                           ; 1 bytes @ 0x1B
   952  003B                     	ds	1
   953                           
   954                           	psect	maintext
   955  05E5                     __pmaintext:	
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   958 ;;
   959 ;; *************** function _main *****************
   960 ;; Defined at:
   961 ;;		line 6 in file "I:\Program\PIC\Source_File\myMain.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;		None               void
   968 ;; Registers used:
   969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 17F/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   975 ;;      Params:         0       0       0       0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels required when called:    6
   981 ;; This function calls:
   982 ;;		_I2C_Main
   983 ;;		_MainT
   984 ;;		_MainT_Initial
   985 ;;		_Mcu_Initial
   986 ;;		_SegmentDisplay_Initial
   987 ;;		_SegmentDisplay_Main
   988 ;;		_UART_Main
   989 ;; This function is called by:
   990 ;;		Startup code after reset
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           
   995                           ;psect for function _main
   996  05E5                     _main:	
   997                           
   998                           ;myMain.c: 8: MainT_Initial();
   999                           
  1000                           ;incstack = 0
  1001                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1002  05E5  3187  2701  3185   	fcall	_MainT_Initial
  1003                           
  1004                           ;myMain.c: 9: Mcu_Initial();
  1005  05E8  3186  26BE  3185   	fcall	_Mcu_Initial
  1006                           
  1007                           ;myMain.c: 10: SegmentDisplay_Initial();
  1008  05EB  3186  26D1  3185   	fcall	_SegmentDisplay_Initial
  1009                           
  1010                           ;myMain.c: 11: ;;
  1011                           ;myMain.c: 12: __nop();
  1012  05EE  0000               	nop
  1013  05EF                     l2472:	
  1014                           ;myMain.c: 13: while(1)
  1015                           
  1016                           
  1017                           ;myMain.c: 14: {
  1018                           ;myMain.c: 17: if(TMain->T1_Timerout)
  1019  05EF  0020               	movlb	0	; select bank0
  1020  05F0  086B               	movf	_TMain,w
  1021  05F1  0086               	movwf	6
  1022  05F2  0187               	clrf	7
  1023  05F3  1D01               	btfss	1,2
  1024  05F4  2DEF               	goto	l2472
  1025                           
  1026                           ;myMain.c: 18: {
  1027                           ;myMain.c: 19: TMain->T1_Timerout = 0;
  1028  05F5  086B               	movf	_TMain,w
  1029  05F6  0086               	movwf	6
  1030  05F7  0187               	clrf	7
  1031  05F8  1101               	bcf	1,2
  1032                           
  1033                           ;myMain.c: 20: MainT();
  1034  05F9  3182  223E  3185   	fcall	_MainT
  1035                           
  1036                           ;myMain.c: 21: if(TMain->PowerON)
  1037  05FC  0020               	movlb	0	; select bank0
  1038  05FD  086B               	movf	_TMain,w
  1039  05FE  0086               	movwf	6
  1040  05FF  0187               	clrf	7
  1041  0600  1C01               	btfss	1,0
  1042  0601  2DEF               	goto	l2472
  1043                           
  1044                           ;myMain.c: 22: {
  1045                           ;myMain.c: 23: ;;
  1046                           ;myMain.c: 24: I2C_Main();
  1047  0602  3183  2367  3185   	fcall	_I2C_Main
  1048                           
  1049                           ;myMain.c: 25: UART_Main();
  1050  0605  3186  2631  3185   	fcall	_UART_Main
  1051                           
  1052                           ;myMain.c: 26: SegmentDisplay_Main();
  1053  0608  3182  22F4  3185   	fcall	_SegmentDisplay_Main
  1054  060B  2DEF               	goto	l2472
  1055  060C                     __end_of_main:	
  1056                           
  1057                           	psect	text1
  1058  0631                     __ptext1:	
  1059 ;; *************** function _UART_Main *****************
  1060 ;; Defined at:
  1061 ;;		line 524 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;		None               void
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1075 ;;      Params:         0       0       0       0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0
  1078 ;;      Totals:         0       0       0       0       0       0       0       0
  1079 ;;Total ram usage:        0 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    5
  1082 ;; This function calls:
  1083 ;;		_UART_Receive
  1084 ;;		_UART_Transmit
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _UART_Main
  1092  0631                     _UART_Main:	
  1093                           
  1094                           ;MCU_16f1516_B1.c: 526: if(UART->RxGO)
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _UART_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1098  0631  0020               	movlb	0	; select bank0
  1099  0632  0857               	movf	_UART,w
  1100  0633  3E43               	addlw	67
  1101  0634  0086               	movwf	6
  1102  0635  3001               	movlw	1	; select bank2/3
  1103  0636  0087               	movwf	7
  1104  0637  1C81               	btfss	1,1
  1105  0638  2E44               	goto	l2458
  1106                           
  1107                           ;MCU_16f1516_B1.c: 527: {
  1108                           ;MCU_16f1516_B1.c: 528: UART->RxGO=0;
  1109  0639  0857               	movf	_UART,w
  1110  063A  3E43               	addlw	67
  1111  063B  0086               	movwf	6
  1112  063C  3001               	movlw	1	; select bank2/3
  1113  063D  0087               	movwf	7
  1114  063E  1081               	bcf	1,1
  1115                           
  1116                           ;MCU_16f1516_B1.c: 529: UART_Receive();
  1117  063F  3185  258D         	fcall	_UART_Receive
  1118                           
  1119                           ;MCU_16f1516_B1.c: 530: RCIE=1;
  1120  0641  0021               	movlb	1	; select bank1
  1121  0642  1691               	bsf	17,5	;volatile
  1122                           
  1123                           ;MCU_16f1516_B1.c: 531: }
  1124  0643  0008               	return
  1125  0644                     l2458:	
  1126                           
  1127                           ;MCU_16f1516_B1.c: 532: else
  1128                           ;MCU_16f1516_B1.c: 533: {
  1129                           ;MCU_16f1516_B1.c: 534: if(UART->TxGO)
  1130  0644  0020               	movlb	0	; select bank0
  1131  0645  0857               	movf	_UART,w
  1132  0646  3E43               	addlw	67
  1133  0647  0086               	movwf	6
  1134  0648  3001               	movlw	1	; select bank2/3
  1135  0649  0087               	movwf	7
  1136  064A  1C01               	btfss	1,0
  1137  064B  0008               	return
  1138                           
  1139                           ;MCU_16f1516_B1.c: 535: {
  1140                           ;MCU_16f1516_B1.c: 536: UART->TxGO=0;
  1141  064C  0857               	movf	_UART,w
  1142  064D  3E43               	addlw	67
  1143  064E  0086               	movwf	6
  1144  064F  3001               	movlw	1	; select bank2/3
  1145  0650  0087               	movwf	7
  1146  0651  1001               	bcf	1,0
  1147                           
  1148                           ;MCU_16f1516_B1.c: 537: UART_Transmit();
  1149  0652  3186  260C         	fcall	_UART_Transmit
  1150  0654  0008               	return
  1151  0655                     __end_of_UART_Main:	
  1152                           
  1153                           	psect	text2
  1154  060C                     __ptext2:	
  1155 ;; *************** function _UART_Transmit *****************
  1156 ;; Defined at:
  1157 ;;		line 541 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  i               1   27[BANK0 ] unsigned char 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;		None               void
  1164 ;; Registers used:
  1165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1171 ;;      Params:         0       0       0       0       0       0       0       0
  1172 ;;      Locals:         0       1       0       0       0       0       0       0
  1173 ;;      Temps:          0       3       0       0       0       0       0       0
  1174 ;;      Totals:         0       4       0       0       0       0       0       0
  1175 ;;Total ram usage:        4 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    4
  1178 ;; This function calls:
  1179 ;;		_printf
  1180 ;; This function is called by:
  1181 ;;		_UART_Main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _UART_Transmit
  1187  060C                     _UART_Transmit:	
  1188                           
  1189                           ;MCU_16f1516_B1.c: 543: char i;
  1190                           ;MCU_16f1516_B1.c: 544: for(i=0;i<32;i++)
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _UART_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1194  060C  0020               	movlb	0	; select bank0
  1195  060D  01BB               	clrf	UART_Transmit@i
  1196  060E                     L1:	
  1197  060E  3020               	movlw	32
  1198  060F  023B               	subwf	UART_Transmit@i,w
  1199  0610  1803               	btfsc	3,0
  1200  0611  0008               	return
  1201  0612                     l459:	
  1202                           ;MCU_16f1516_B1.c: 545: {
  1203                           ;MCU_16f1516_B1.c: 546: while(!TRMT);
  1204                           
  1205  0612  0023               	movlb	3	; select bank3
  1206  0613  1C9E               	btfss	30,1	;volatile
  1207  0614  2E12               	goto	l459
  1208                           
  1209                           ;MCU_16f1516_B1.c: 547: printf("%d",UART->TxData[i]);
  1210  0615  300A               	movlw	low (STR_1| (0+32768))
  1211  0616  0020               	movlb	0	; select bank0
  1212  0617  00A8               	movwf	printf@f
  1213  0618  3088               	movlw	high (STR_1| (0+32768))
  1214  0619  00A9               	movwf	printf@f+1
  1215  061A  083B               	movf	UART_Transmit@i,w
  1216  061B  0757               	addwf	_UART,w
  1217  061C  00B8               	movwf	??_UART_Transmit
  1218  061D  0838               	movf	??_UART_Transmit,w
  1219  061E  0086               	movwf	6
  1220  061F  3001               	movlw	1	; select bank2/3
  1221  0620  0087               	movwf	7
  1222  0621  0801               	movf	1,w
  1223  0622  00B9               	movwf	??_UART_Transmit+1
  1224  0623  01BA               	clrf	??_UART_Transmit+2
  1225  0624  0839               	movf	??_UART_Transmit+1,w
  1226  0625  00AA               	movwf	?_printf+2
  1227  0626  083A               	movf	??_UART_Transmit+2,w
  1228  0627  00AB               	movwf	?_printf+3
  1229  0628  3181  2181  3186   	fcall	_printf
  1230  062B  3001               	movlw	1
  1231  062C  0020               	movlb	0	; select bank0
  1232  062D  00B8               	movwf	??_UART_Transmit
  1233  062E  0838               	movf	??_UART_Transmit,w
  1234  062F  07BB               	addwf	UART_Transmit@i,f
  1235  0630  2E0E               	goto	L1
  1236  0631                     __end_of_UART_Transmit:	
  1237                           
  1238                           	psect	text3
  1239  0181                     __ptext3:	
  1240 ;; *************** function _printf *****************
  1241 ;; Defined at:
  1242 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  1245 ;;		 -> STR_1(3), 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  _val            4   19[BANK0 ] struct .
  1248 ;;  c               1   23[BANK0 ] char 
  1249 ;;  prec            1   18[BANK0 ] char 
  1250 ;;  flag            1   17[BANK0 ] unsigned char 
  1251 ;;  ap              1   16[BANK0 ] PTR void [1]
  1252 ;;		 -> ?_printf(2), 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  2    8[BANK0 ] int 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1262 ;;      Params:         0       4       0       0       0       0       0       0
  1263 ;;      Locals:         0       8       0       0       0       0       0       0
  1264 ;;      Temps:          0       4       0       0       0       0       0       0
  1265 ;;      Totals:         0      16       0       0       0       0       0       0
  1266 ;;Total ram usage:       16 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    3
  1269 ;; This function calls:
  1270 ;;		___lwdiv
  1271 ;;		___lwmod
  1272 ;;		_putch
  1273 ;; This function is called by:
  1274 ;;		_UART_Transmit
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _printf
  1280  0181                     _printf:	
  1281                           
  1282                           ;doprnt.c: 466: va_list ap;
  1283                           ;doprnt.c: 499: signed char c;
  1284                           ;doprnt.c: 506: signed char prec;
  1285                           ;doprnt.c: 508: unsigned char flag;
  1286                           ;doprnt.c: 527: union {
  1287                           ;doprnt.c: 528: unsigned int _val;
  1288                           ;doprnt.c: 529: struct {
  1289                           ;doprnt.c: 530: const char * _cp;
  1290                           ;doprnt.c: 531: unsigned _len;
  1291                           ;doprnt.c: 532: } _str;
  1292                           ;doprnt.c: 533: } _val;
  1293                           ;doprnt.c: 542: *ap = __va_start();
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1297  0181  302A               	movlw	(?_printf+2)& (0+255)
  1298  0182  0020               	movlb	0	; select bank0
  1299  0183  00AC               	movwf	??_printf
  1300  0184  082C               	movf	??_printf,w
  1301  0185  00B0               	movwf	printf@ap
  1302  0186                     l2232:	
  1303                           ;doprnt.c: 545: while(c = *f++) {
  1304                           
  1305  0186  0020               	movlb	0	; select bank0
  1306  0187  0829               	movf	printf@f+1,w
  1307  0188  00AD               	movwf	??_printf+1
  1308  0189  0828               	movf	printf@f,w
  1309  018A  00AC               	movwf	??_printf
  1310  018B  0AA8               	incf	printf@f,f
  1311  018C  1903               	skipnz
  1312  018D  0AA9               	incf	printf@f+1,f
  1313  018E  082C               	movf	??_printf,w
  1314  018F  0084               	movwf	4
  1315  0190  082D               	movf	??_printf+1,w
  1316  0191  0085               	movwf	5
  1317  0192  0800               	movf	0,w	;code access
  1318  0193  00AE               	movwf	??_printf+2
  1319  0194  082E               	movf	??_printf+2,w
  1320  0195  00B7               	movwf	printf@c
  1321  0196  08B7               	movf	printf@c,f
  1322  0197  1903               	btfsc	3,2
  1323  0198  0008               	return
  1324                           
  1325                           ;doprnt.c: 547: if(c != '%')
  1326  0199  0837               	movf	printf@c,w
  1327  019A  3A25               	xorlw	37
  1328  019B  1903               	skipnz
  1329  019C  29A2               	goto	l2192
  1330                           
  1331                           ;doprnt.c: 549: {
  1332                           ;doprnt.c: 550: (putch(c) );
  1333  019D  0837               	movf	printf@c,w
  1334  019E  3187  271E  3181   	fcall	_putch
  1335                           
  1336                           ;doprnt.c: 551: continue;
  1337  01A1  2986               	goto	l2232
  1338  01A2                     l2192:	
  1339                           
  1340                           ;doprnt.c: 552: }
  1341                           ;doprnt.c: 557: flag = 0;
  1342  01A2  0020               	movlb	0	; select bank0
  1343  01A3  01B1               	clrf	printf@flag
  1344                           
  1345                           ;doprnt.c: 831: }
  1346                           
  1347                           ;doprnt.c: 822: continue;
  1348                           
  1349                           ;doprnt.c: 811: default:
  1350                           
  1351                           ;doprnt.c: 707: case 'i':
  1352                           ;doprnt.c: 708: break;
  1353                           
  1354                           ;doprnt.c: 706: case 'd':
  1355                           
  1356                           ;doprnt.c: 647: goto alldone;
  1357                           
  1358                           ;doprnt.c: 646: case 0:
  1359                           
  1360                           ;doprnt.c: 644: switch(c = *f++) {
  1361  01A4  0829               	movf	printf@f+1,w
  1362  01A5  00AD               	movwf	??_printf+1
  1363  01A6  0828               	movf	printf@f,w
  1364  01A7  00AC               	movwf	??_printf
  1365  01A8  0AA8               	incf	printf@f,f
  1366  01A9  1903               	skipnz
  1367  01AA  0AA9               	incf	printf@f+1,f
  1368  01AB  082C               	movf	??_printf,w
  1369  01AC  0084               	movwf	4
  1370  01AD  082D               	movf	??_printf+1,w
  1371  01AE  0085               	movwf	5
  1372  01AF  0800               	movf	0,w	;code access
  1373  01B0  00B7               	movwf	printf@c
  1374                           
  1375                           ; Switch size 1, requested type "space"
  1376                           ; Number of cases is 3, Range of values is 0 to 105
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte           10     6 (average)
  1380                           ; direct_byte          218     6 (fixed)
  1381                           ; jumptable            260     6 (fixed)
  1382                           ;	Chosen strategy is simple_byte
  1383  01B1  3A00               	xorlw	0	; case 0
  1384  01B2  1903               	skipnz
  1385  01B3  2A3D               	goto	l515
  1386  01B4  3A64               	xorlw	100	; case 100
  1387  01B5  1903               	skipnz
  1388  01B6  29BB               	goto	l2198
  1389  01B7  3A0D               	xorlw	13	; case 105
  1390  01B8  1903               	skipnz
  1391  01B9  29BB               	goto	l2198
  1392  01BA  2986               	goto	l2232
  1393  01BB                     l2198:	
  1394                           
  1395                           ;doprnt.c: 1262: {
  1396                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1397  01BB  0830               	movf	printf@ap,w
  1398  01BC  0086               	movwf	6
  1399  01BD  0187               	clrf	7
  1400  01BE  3F40               	moviw [0]fsr1
  1401  01BF  00B3               	movwf	printf@_val
  1402  01C0  3F41               	moviw [1]fsr1
  1403  01C1  00B4               	movwf	printf@_val+1
  1404  01C2  3002               	movlw	2
  1405  01C3  00AC               	movwf	??_printf
  1406  01C4  082C               	movf	??_printf,w
  1407  01C5  07B0               	addwf	printf@ap,f
  1408                           
  1409                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1410  01C6  1FB4               	btfss	printf@_val+1,7
  1411  01C7  29D1               	goto	l2208
  1412                           
  1413                           ;doprnt.c: 1271: flag |= 0x03;
  1414  01C8  3003               	movlw	3
  1415  01C9  00AC               	movwf	??_printf
  1416  01CA  082C               	movf	??_printf,w
  1417  01CB  04B1               	iorwf	printf@flag,f
  1418                           
  1419                           ;doprnt.c: 1272: _val._val = -_val._val;
  1420  01CC  09B3               	comf	printf@_val,f
  1421  01CD  09B4               	comf	printf@_val+1,f
  1422  01CE  0AB3               	incf	printf@_val,f
  1423  01CF  1903               	skipnz
  1424  01D0  0AB4               	incf	printf@_val+1,f
  1425  01D1                     l2208:	
  1426                           
  1427                           ;doprnt.c: 1273: }
  1428                           ;doprnt.c: 1275: }
  1429                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1430  01D1  01B7               	clrf	printf@c
  1431  01D2  0AB7               	incf	printf@c,f
  1432  01D3  0837               	movf	printf@c,w
  1433  01D4  3A05               	xorlw	5
  1434  01D5  1903               	btfsc	3,2
  1435  01D6  29F6               	goto	l2220
  1436  01D7                     l2212:	
  1437                           
  1438                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1439  01D7  0837               	movf	printf@c,w
  1440  01D8  00AC               	movwf	??_printf
  1441  01D9  01AD               	clrf	??_printf+1
  1442  01DA  35AC               	lslf	??_printf,f
  1443  01DB  0DAD               	rlf	??_printf+1,f
  1444  01DC  3000               	movlw	low (_dpowers| (0+32768))
  1445  01DD  072C               	addwf	??_printf,w
  1446  01DE  0084               	movwf	4
  1447  01DF  3088               	movlw	high (_dpowers| (0+32768))
  1448  01E0  3D2D               	addwfc	??_printf+1,w
  1449  01E1  0085               	movwf	5
  1450  01E2  3F00               	moviw [0]fsr0
  1451  01E3  00AE               	movwf	??_printf+2
  1452  01E4  3F01               	moviw [1]fsr0
  1453  01E5  00AF               	movwf	??_printf+3
  1454  01E6  082F               	movf	??_printf+3,w
  1455  01E7  0234               	subwf	printf@_val+1,w
  1456  01E8  1D03               	skipz
  1457  01E9  29EC               	goto	u2745
  1458  01EA  082E               	movf	??_printf+2,w
  1459  01EB  0233               	subwf	printf@_val,w
  1460  01EC                     u2745:	
  1461  01EC  1C03               	btfss	3,0
  1462  01ED  29F6               	goto	l2220
  1463                           
  1464                           ;doprnt.c: 1316: break;
  1465  01EE  3001               	movlw	1
  1466  01EF  00AC               	movwf	??_printf
  1467  01F0  082C               	movf	??_printf,w
  1468  01F1  07B7               	addwf	printf@c,f
  1469  01F2  0837               	movf	printf@c,w
  1470  01F3  3A05               	xorlw	5
  1471  01F4  1D03               	skipz
  1472  01F5  29D7               	goto	l2212
  1473  01F6                     l2220:	
  1474                           
  1475                           ;doprnt.c: 1431: {
  1476                           ;doprnt.c: 1447: if(flag & 0x03)
  1477  01F6  0831               	movf	printf@flag,w
  1478  01F7  3903               	andlw	3
  1479  01F8  1903               	btfsc	3,2
  1480  01F9  29FE               	goto	l2224
  1481                           
  1482                           ;doprnt.c: 1448: (putch('-') );
  1483  01FA  302D               	movlw	45
  1484  01FB  3187  271E  3181   	fcall	_putch
  1485  01FE                     l2224:	
  1486                           
  1487                           ;doprnt.c: 1478: }
  1488                           ;doprnt.c: 1481: prec = c;
  1489  01FE  0020               	movlb	0	; select bank0
  1490  01FF  0837               	movf	printf@c,w
  1491  0200  00AC               	movwf	??_printf
  1492  0201  082C               	movf	??_printf,w
  1493  0202  00B2               	movwf	printf@prec
  1494  0203                     l2230:	
  1495                           ;doprnt.c: 1483: while(prec--) {
  1496                           
  1497  0203  30FF               	movlw	-1
  1498  0204  0020               	movlb	0	; select bank0
  1499  0205  00AC               	movwf	??_printf
  1500  0206  082C               	movf	??_printf,w
  1501  0207  07B2               	addwf	printf@prec,f
  1502  0208  0832               	movf	printf@prec,w
  1503  0209  3AFF               	xorlw	255
  1504  020A  1903               	btfsc	3,2
  1505  020B  2986               	goto	l2232
  1506                           
  1507                           ;doprnt.c: 1487: {
  1508                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1509  020C  300A               	movlw	10
  1510  020D  00A3               	movwf	___lwmod@divisor
  1511  020E  3000               	movlw	0
  1512  020F  00A4               	movwf	___lwmod@divisor+1
  1513  0210  0832               	movf	printf@prec,w
  1514  0211  00AC               	movwf	??_printf
  1515  0212  01AD               	clrf	??_printf+1
  1516  0213  35AC               	lslf	??_printf,f
  1517  0214  0DAD               	rlf	??_printf+1,f
  1518  0215  3000               	movlw	low (_dpowers| (0+32768))
  1519  0216  072C               	addwf	??_printf,w
  1520  0217  0084               	movwf	4
  1521  0218  3088               	movlw	high (_dpowers| (0+32768))
  1522  0219  3D2D               	addwfc	??_printf+1,w
  1523  021A  0085               	movwf	5
  1524  021B  3F00               	moviw [0]fsr0
  1525  021C  00F3               	movwf	___lwdiv@divisor
  1526  021D  3F01               	moviw [1]fsr0
  1527  021E  00F4               	movwf	___lwdiv@divisor+1
  1528  021F  0834               	movf	printf@_val+1,w
  1529  0220  01F6               	clrf	___lwdiv@dividend+1
  1530  0221  07F6               	addwf	___lwdiv@dividend+1,f
  1531  0222  0833               	movf	printf@_val,w
  1532  0223  01F5               	clrf	___lwdiv@dividend
  1533  0224  07F5               	addwf	___lwdiv@dividend,f
  1534  0225  3184  24F3  3181   	fcall	___lwdiv
  1535  0228  0874               	movf	?___lwdiv+1,w
  1536  0229  0020               	movlb	0	; select bank0
  1537  022A  01A6               	clrf	___lwmod@dividend+1
  1538  022B  07A6               	addwf	___lwmod@dividend+1,f
  1539  022C  0873               	movf	?___lwdiv,w
  1540  022D  01A5               	clrf	___lwmod@dividend
  1541  022E  07A5               	addwf	___lwmod@dividend,f
  1542  022F  3185  255E  3181   	fcall	___lwmod
  1543  0232  0020               	movlb	0	; select bank0
  1544  0233  0823               	movf	?___lwmod,w
  1545  0234  3E30               	addlw	48
  1546  0235  00AE               	movwf	??_printf+2
  1547  0236  082E               	movf	??_printf+2,w
  1548  0237  00B7               	movwf	printf@c
  1549                           
  1550                           ;doprnt.c: 1532: }
  1551                           ;doprnt.c: 1533: (putch(c) );
  1552  0238  0837               	movf	printf@c,w
  1553  0239  3187  271E  3181   	fcall	_putch
  1554  023C  2A03               	goto	l2230
  1555  023D                     l515:	
  1556                           ;doprnt.c: 1549: return 0;
  1557                           ;	Return value of _printf is never used
  1558                           
  1559                           ;doprnt.c: 1534: }
  1560                           ;doprnt.c: 1542: }
  1561                           ;doprnt.c: 1544: alldone:
  1562                           
  1563  023D  0008               	return
  1564  023E                     __end_of_printf:	
  1565                           
  1566                           	psect	text4
  1567  071E                     __ptext4:	
  1568 ;; *************** function _putch *****************
  1569 ;; Defined at:
  1570 ;;		line 590 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  byte            1    wreg     unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  byte            1    3[COMMON] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;		None               void
  1577 ;; Registers used:
  1578 ;;		wreg
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1584 ;;      Params:         0       0       0       0       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0
  1587 ;;      Totals:         1       0       0       0       0       0       0       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    2
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_printf
  1595 ;;		_getche
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _putch
  1601  071E                     _putch:	
  1602                           
  1603                           ;incstack = 0
  1604                           ; Regs used in _putch: [wreg]
  1605                           ;putch@byte stored from wreg
  1606  071E  00F3               	movwf	putch@byte
  1607  071F                     l473:	
  1608                           ;MCU_16f1516_B1.c: 594: continue;
  1609                           
  1610                           ;MCU_16f1516_B1.c: 593: while(!TXIF)
  1611                           
  1612  071F  0020               	movlb	0	; select bank0
  1613  0720  1E11               	btfss	17,4	;volatile
  1614  0721  2F1F               	goto	l473
  1615                           
  1616                           ;MCU_16f1516_B1.c: 595: TXREG = byte;
  1617  0722  0873               	movf	putch@byte,w
  1618  0723  0023               	movlb	3	; select bank3
  1619  0724  009A               	movwf	26	;volatile
  1620  0725  0008               	return
  1621  0726                     __end_of_putch:	
  1622                           
  1623                           	psect	text5
  1624  055E                     __ptext5:	
  1625 ;; *************** function ___lwmod *****************
  1626 ;; Defined at:
  1627 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  divisor         2    3[BANK0 ] unsigned int 
  1630 ;;  dividend        2    5[BANK0 ] unsigned int 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  counter         1    7[BANK0 ] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  2    3[BANK0 ] unsigned int 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1642 ;;      Params:         0       4       0       0       0       0       0       0
  1643 ;;      Locals:         0       1       0       0       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0       0       0       0
  1645 ;;      Totals:         1       5       0       0       0       0       0       0
  1646 ;;Total ram usage:        6 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    2
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_printf
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function ___lwmod
  1658  055E                     ___lwmod:	
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1662  055E  0020               	movlb	0	; select bank0
  1663  055F  0824               	movf	___lwmod@divisor+1,w
  1664  0560  0423               	iorwf	___lwmod@divisor,w
  1665  0561  1903               	skipnz
  1666  0562  2D86               	goto	l2182
  1667  0563  01A7               	clrf	___lwmod@counter
  1668  0564  0AA7               	incf	___lwmod@counter,f
  1669  0565                     l2172:	
  1670  0565  1BA4               	btfsc	___lwmod@divisor+1,7
  1671  0566  2D71               	goto	l2174
  1672  0567  3001               	movlw	1
  1673  0568                     u2665:	
  1674  0568  35A3               	lslf	___lwmod@divisor,f
  1675  0569  0DA4               	rlf	___lwmod@divisor+1,f
  1676  056A  0B89               	decfsz	9,f
  1677  056B  2D68               	goto	u2665
  1678  056C  3001               	movlw	1
  1679  056D  00F8               	movwf	??___lwmod
  1680  056E  0878               	movf	??___lwmod,w
  1681  056F  07A7               	addwf	___lwmod@counter,f
  1682  0570  2D65               	goto	l2172
  1683  0571                     l2174:	
  1684  0571  0824               	movf	___lwmod@divisor+1,w
  1685  0572  0226               	subwf	___lwmod@dividend+1,w
  1686  0573  1D03               	skipz
  1687  0574  2D77               	goto	u2685
  1688  0575  0823               	movf	___lwmod@divisor,w
  1689  0576  0225               	subwf	___lwmod@dividend,w
  1690  0577                     u2685:	
  1691  0577  1C03               	skipc
  1692  0578  2D7D               	goto	l2178
  1693  0579  0823               	movf	___lwmod@divisor,w
  1694  057A  02A5               	subwf	___lwmod@dividend,f
  1695  057B  0824               	movf	___lwmod@divisor+1,w
  1696  057C  3BA6               	subwfb	___lwmod@dividend+1,f
  1697  057D                     l2178:	
  1698  057D  3001               	movlw	1
  1699  057E                     u2695:	
  1700  057E  36A4               	lsrf	___lwmod@divisor+1,f
  1701  057F  0CA3               	rrf	___lwmod@divisor,f
  1702  0580  0B89               	decfsz	9,f
  1703  0581  2D7E               	goto	u2695
  1704  0582  3001               	movlw	1
  1705  0583  02A7               	subwf	___lwmod@counter,f
  1706  0584  1D03               	btfss	3,2
  1707  0585  2D71               	goto	l2174
  1708  0586                     l2182:	
  1709  0586  0826               	movf	___lwmod@dividend+1,w
  1710  0587  01A4               	clrf	?___lwmod+1
  1711  0588  07A4               	addwf	?___lwmod+1,f
  1712  0589  0825               	movf	___lwmod@dividend,w
  1713  058A  01A3               	clrf	?___lwmod
  1714  058B  07A3               	addwf	?___lwmod,f
  1715  058C  0008               	return
  1716  058D                     __end_of___lwmod:	
  1717                           
  1718                           	psect	text6
  1719  04F3                     __ptext6:	
  1720 ;; *************** function ___lwdiv *****************
  1721 ;; Defined at:
  1722 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  divisor         2    3[COMMON] unsigned int 
  1725 ;;  dividend        2    5[COMMON] unsigned int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  quotient        2    1[BANK0 ] unsigned int 
  1728 ;;  counter         1    0[BANK0 ] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2    3[COMMON] unsigned int 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1738 ;;      Params:         4       0       0       0       0       0       0       0
  1739 ;;      Locals:         0       3       0       0       0       0       0       0
  1740 ;;      Temps:          1       0       0       0       0       0       0       0
  1741 ;;      Totals:         5       3       0       0       0       0       0       0
  1742 ;;Total ram usage:        8 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    2
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_printf
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function ___lwdiv
  1754  04F3                     ___lwdiv:	
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1758  04F3  0020               	movlb	0	; select bank0
  1759  04F4  01A1               	clrf	___lwdiv@quotient
  1760  04F5  01A2               	clrf	___lwdiv@quotient+1
  1761  04F6  0874               	movf	___lwdiv@divisor+1,w
  1762  04F7  0473               	iorwf	___lwdiv@divisor,w
  1763  04F8  1903               	skipnz
  1764  04F9  2D23               	goto	l2160
  1765  04FA  01A0               	clrf	___lwdiv@counter
  1766  04FB  0AA0               	incf	___lwdiv@counter,f
  1767  04FC                     l2148:	
  1768  04FC  1BF4               	btfsc	___lwdiv@divisor+1,7
  1769  04FD  2D08               	goto	l2150
  1770  04FE  3001               	movlw	1
  1771  04FF                     u2595:	
  1772  04FF  35F3               	lslf	___lwdiv@divisor,f
  1773  0500  0DF4               	rlf	___lwdiv@divisor+1,f
  1774  0501  0B89               	decfsz	9,f
  1775  0502  2CFF               	goto	u2595
  1776  0503  3001               	movlw	1
  1777  0504  00F7               	movwf	??___lwdiv
  1778  0505  0877               	movf	??___lwdiv,w
  1779  0506  07A0               	addwf	___lwdiv@counter,f
  1780  0507  2CFC               	goto	l2148
  1781  0508                     l2150:	
  1782  0508  3001               	movlw	1
  1783  0509                     u2615:	
  1784  0509  35A1               	lslf	___lwdiv@quotient,f
  1785  050A  0DA2               	rlf	___lwdiv@quotient+1,f
  1786  050B  0B89               	decfsz	9,f
  1787  050C  2D09               	goto	u2615
  1788  050D  0874               	movf	___lwdiv@divisor+1,w
  1789  050E  0276               	subwf	___lwdiv@dividend+1,w
  1790  050F  1D03               	skipz
  1791  0510  2D13               	goto	u2625
  1792  0511  0873               	movf	___lwdiv@divisor,w
  1793  0512  0275               	subwf	___lwdiv@dividend,w
  1794  0513                     u2625:	
  1795  0513  1C03               	skipc
  1796  0514  2D1A               	goto	l2156
  1797  0515  0873               	movf	___lwdiv@divisor,w
  1798  0516  02F5               	subwf	___lwdiv@dividend,f
  1799  0517  0874               	movf	___lwdiv@divisor+1,w
  1800  0518  3BF6               	subwfb	___lwdiv@dividend+1,f
  1801  0519  1421               	bsf	___lwdiv@quotient,0
  1802  051A                     l2156:	
  1803  051A  3001               	movlw	1
  1804  051B                     u2635:	
  1805  051B  36F4               	lsrf	___lwdiv@divisor+1,f
  1806  051C  0CF3               	rrf	___lwdiv@divisor,f
  1807  051D  0B89               	decfsz	9,f
  1808  051E  2D1B               	goto	u2635
  1809  051F  3001               	movlw	1
  1810  0520  02A0               	subwf	___lwdiv@counter,f
  1811  0521  1D03               	btfss	3,2
  1812  0522  2D08               	goto	l2150
  1813  0523                     l2160:	
  1814  0523  0822               	movf	___lwdiv@quotient+1,w
  1815  0524  01F4               	clrf	?___lwdiv+1
  1816  0525  07F4               	addwf	?___lwdiv+1,f
  1817  0526  0821               	movf	___lwdiv@quotient,w
  1818  0527  01F3               	clrf	?___lwdiv
  1819  0528  07F3               	addwf	?___lwdiv,f
  1820  0529  0008               	return
  1821  052A                     __end_of___lwdiv:	
  1822                           
  1823                           	psect	text7
  1824  058D                     __ptext7:	
  1825 ;; *************** function _UART_Receive *****************
  1826 ;; Defined at:
  1827 ;;		line 552 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  i               1    6[COMMON] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;		None               void
  1834 ;; Registers used:
  1835 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1841 ;;      Params:         0       0       0       0       0       0       0       0
  1842 ;;      Locals:         1       0       0       0       0       0       0       0
  1843 ;;      Temps:          3       0       0       0       0       0       0       0
  1844 ;;      Totals:         4       0       0       0       0       0       0       0
  1845 ;;Total ram usage:        4 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    2
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_UART_Main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function _UART_Receive
  1857  058D                     _UART_Receive:	
  1858                           
  1859                           ;MCU_16f1516_B1.c: 554: char i;
  1860                           ;MCU_16f1516_B1.c: 556: TMain->Test=1;
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _UART_Receive: [wreg+fsr1l+fsr1h+status,2+status,0]
  1864  058D  0020               	movlb	0	; select bank0
  1865  058E  086B               	movf	_TMain,w
  1866  058F  3E0C               	addlw	12
  1867  0590  0086               	movwf	6
  1868  0591  0187               	clrf	7
  1869  0592  0181               	clrf	1
  1870  0593  0A81               	incf	1,f
  1871                           
  1872                           ;MCU_16f1516_B1.c: 558: for(i=0;i<32;i++)
  1873  0594  01F6               	clrf	UART_Receive@i
  1874  0595  3020               	movlw	32
  1875  0596  0276               	subwf	UART_Receive@i,w
  1876  0597  1803               	btfsc	3,0
  1877  0598  2DB5               	goto	l1854
  1878  0599                     l1848:	
  1879                           
  1880                           ;MCU_16f1516_B1.c: 559: {
  1881                           ;MCU_16f1516_B1.c: 560: I2C->BufferWriter[i]=UART->RxData[i];
  1882  0599  0876               	movf	UART_Receive@i,w
  1883  059A  3E20               	addlw	32
  1884  059B  0757               	addwf	_UART,w
  1885  059C  00F3               	movwf	??_UART_Receive
  1886  059D  0873               	movf	??_UART_Receive,w
  1887  059E  0086               	movwf	6
  1888  059F  3001               	movlw	1	; select bank2/3
  1889  05A0  0087               	movwf	7
  1890  05A1  0801               	movf	1,w
  1891  05A2  00F4               	movwf	??_UART_Receive+1
  1892  05A3  0876               	movf	UART_Receive@i,w
  1893  05A4  3E20               	addlw	32
  1894  05A5  0756               	addwf	_I2C,w
  1895  05A6  00F5               	movwf	??_UART_Receive+2
  1896  05A7  0875               	movf	??_UART_Receive+2,w
  1897  05A8  0086               	movwf	6
  1898  05A9  3001               	movlw	1	; select bank2/3
  1899  05AA  0087               	movwf	7
  1900  05AB  0874               	movf	??_UART_Receive+1,w
  1901  05AC  0081               	movwf	1
  1902  05AD  3001               	movlw	1
  1903  05AE  00F3               	movwf	??_UART_Receive
  1904  05AF  0873               	movf	??_UART_Receive,w
  1905  05B0  07F6               	addwf	UART_Receive@i,f
  1906  05B1  3020               	movlw	32
  1907  05B2  0276               	subwf	UART_Receive@i,w
  1908  05B3  1C03               	skipc
  1909  05B4  2D99               	goto	l1848
  1910  05B5                     l1854:	
  1911                           
  1912                           ;MCU_16f1516_B1.c: 561: }
  1913                           ;MCU_16f1516_B1.c: 562: I2C->MasterTxGO=1;
  1914  05B5  0856               	movf	_I2C,w
  1915  05B6  3E42               	addlw	66
  1916  05B7  0086               	movwf	6
  1917  05B8  3001               	movlw	1	; select bank2/3
  1918  05B9  0087               	movwf	7
  1919  05BA  1581               	bsf	1,3
  1920  05BB  0008               	return
  1921  05BC                     __end_of_UART_Receive:	
  1922                           
  1923                           	psect	text8
  1924  02F4                     __ptext8:	
  1925 ;; *************** function _SegmentDisplay_Main *****************
  1926 ;; Defined at:
  1927 ;;		line 72 in file "I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;		None               void
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1941 ;;      Params:         0       0       0       0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0       0       0       0
  1943 ;;      Temps:          2       0       0       0       0       0       0       0
  1944 ;;      Totals:         2       0       0       0       0       0       0       0
  1945 ;;Total ram usage:        2 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    2
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _SegmentDisplay_Main
  1957  02F4                     _SegmentDisplay_Main:	
  1958                           
  1959                           ;SegmentDisplay_A2.c: 74: if(Segment->GO)
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in _SegmentDisplay_Main: [wreg-fsr1h+status,2+status,0]
  1963  02F4  0020               	movlb	0	; select bank0
  1964  02F5  086A               	movf	_Segment,w
  1965  02F6  3E15               	addlw	21
  1966  02F7  0086               	movwf	6
  1967  02F8  0187               	clrf	7
  1968  02F9  1C81               	btfss	1,1
  1969  02FA  0008               	return
  1970                           
  1971                           ;SegmentDisplay_A2.c: 75: {
  1972                           ;SegmentDisplay_A2.c: 76: Segment->Time++;
  1973  02FB  3001               	movlw	1
  1974  02FC  00F3               	movwf	??_SegmentDisplay_Main
  1975  02FD  086A               	movf	_Segment,w
  1976  02FE  3E19               	addlw	25
  1977  02FF  0086               	movwf	6
  1978  0300  0187               	clrf	7
  1979  0301  0873               	movf	??_SegmentDisplay_Main,w
  1980  0302  0781               	addwf	1,f
  1981                           
  1982                           ;SegmentDisplay_A2.c: 77: if(Segment->Time == 5)
  1983  0303  086A               	movf	_Segment,w
  1984  0304  3E19               	addlw	25
  1985  0305  0086               	movwf	6
  1986  0306  0187               	clrf	7
  1987  0307  0801               	movf	1,w
  1988  0308  3A05               	xorlw	5
  1989  0309  1D03               	skipz
  1990  030A  0008               	return
  1991                           
  1992                           ;SegmentDisplay_A2.c: 78: {
  1993                           ;SegmentDisplay_A2.c: 79: Segment->Time=0;
  1994  030B  086A               	movf	_Segment,w
  1995  030C  3E19               	addlw	25
  1996  030D  0086               	movwf	6
  1997  030E  0187               	clrf	7
  1998  030F  0181               	clrf	1
  1999                           
  2000                           ;SegmentDisplay_A2.c: 80: PORTA&=0x0f;
  2001  0310  300F               	movlw	15
  2002  0311  00F3               	movwf	??_SegmentDisplay_Main
  2003  0312  0873               	movf	??_SegmentDisplay_Main,w
  2004  0313  058C               	andwf	12,f	;volatile
  2005                           
  2006                           ;SegmentDisplay_A2.c: 81: if(Segment->ComCount == 0)
  2007  0314  086A               	movf	_Segment,w
  2008  0315  3E16               	addlw	22
  2009  0316  0086               	movwf	6
  2010  0317  0187               	clrf	7
  2011  0318  0881               	movf	1,f
  2012  0319  1D03               	skipz
  2013  031A  2B1D               	goto	l2008
  2014                           
  2015                           ;SegmentDisplay_A2.c: 82: {
  2016                           ;SegmentDisplay_A2.c: 83: RA4=1;
  2017  031B  160C               	bsf	12,4	;volatile
  2018                           
  2019                           ;SegmentDisplay_A2.c: 84: }
  2020  031C  2B39               	goto	l2020
  2021  031D                     l2008:	
  2022                           
  2023                           ;SegmentDisplay_A2.c: 85: else if(Segment->ComCount == 1)
  2024  031D  086A               	movf	_Segment,w
  2025  031E  3E16               	addlw	22
  2026  031F  0086               	movwf	6
  2027  0320  0187               	clrf	7
  2028  0321  0801               	movf	1,w
  2029  0322  3A01               	xorlw	1
  2030  0323  1D03               	skipz
  2031  0324  2B27               	goto	l2012
  2032                           
  2033                           ;SegmentDisplay_A2.c: 86: {
  2034                           ;SegmentDisplay_A2.c: 87: RA5=1;
  2035  0325  168C               	bsf	12,5	;volatile
  2036                           
  2037                           ;SegmentDisplay_A2.c: 88: }
  2038  0326  2B39               	goto	l2020
  2039  0327                     l2012:	
  2040                           
  2041                           ;SegmentDisplay_A2.c: 89: else if(Segment->ComCount == 2)
  2042  0327  086A               	movf	_Segment,w
  2043  0328  3E16               	addlw	22
  2044  0329  0086               	movwf	6
  2045  032A  0187               	clrf	7
  2046  032B  0801               	movf	1,w
  2047  032C  3A02               	xorlw	2
  2048  032D  1D03               	skipz
  2049  032E  2B31               	goto	l2016
  2050                           
  2051                           ;SegmentDisplay_A2.c: 90: {
  2052                           ;SegmentDisplay_A2.c: 91: RA6=1;
  2053  032F  170C               	bsf	12,6	;volatile
  2054                           
  2055                           ;SegmentDisplay_A2.c: 92: }
  2056  0330  2B39               	goto	l2020
  2057  0331                     l2016:	
  2058                           
  2059                           ;SegmentDisplay_A2.c: 93: else if(Segment->ComCount == 3)
  2060  0331  086A               	movf	_Segment,w
  2061  0332  3E16               	addlw	22
  2062  0333  0086               	movwf	6
  2063  0334  0187               	clrf	7
  2064  0335  0801               	movf	1,w
  2065  0336  3A03               	xorlw	3
  2066  0337  1903               	btfsc	3,2
  2067                           
  2068                           ;SegmentDisplay_A2.c: 94: {
  2069                           ;SegmentDisplay_A2.c: 95: RA7=1;
  2070  0338  178C               	bsf	12,7	;volatile
  2071  0339                     l2020:	
  2072                           
  2073                           ;SegmentDisplay_A2.c: 96: }
  2074                           ;SegmentDisplay_A2.c: 97: PORTB=Segment->Display[Segment->Num[Segment->ComCount]];
  2075  0339  086A               	movf	_Segment,w
  2076  033A  3E16               	addlw	22
  2077  033B  0086               	movwf	6
  2078  033C  0187               	clrf	7
  2079  033D  0801               	movf	1,w
  2080  033E  3E11               	addlw	17
  2081  033F  076A               	addwf	_Segment,w
  2082  0340  00F3               	movwf	??_SegmentDisplay_Main
  2083  0341  0873               	movf	??_SegmentDisplay_Main,w
  2084  0342  0086               	movwf	6
  2085  0343  0187               	clrf	7
  2086  0344  0801               	movf	1,w
  2087  0345  076A               	addwf	_Segment,w
  2088  0346  00F4               	movwf	??_SegmentDisplay_Main+1
  2089  0347  0874               	movf	??_SegmentDisplay_Main+1,w
  2090  0348  0086               	movwf	6
  2091  0349  0187               	clrf	7
  2092  034A  0801               	movf	1,w
  2093  034B  008D               	movwf	13	;volatile
  2094                           
  2095                           ;SegmentDisplay_A2.c: 98: if(Segment->ComCount < Segment->DisplayCount)
  2096  034C  086A               	movf	_Segment,w
  2097  034D  3E16               	addlw	22
  2098  034E  0086               	movwf	6
  2099  034F  0187               	clrf	7
  2100  0350  086A               	movf	_Segment,w
  2101  0351  3E17               	addlw	23
  2102  0352  0084               	movwf	4
  2103  0353  0185               	clrf	5
  2104  0354  0800               	movf	0,w
  2105  0355  0201               	subwf	1,w
  2106  0356  1803               	skipnc
  2107  0357  2B61               	goto	l2026
  2108                           
  2109                           ;SegmentDisplay_A2.c: 99: {
  2110                           ;SegmentDisplay_A2.c: 100: Segment->ComCount++;
  2111  0358  3001               	movlw	1
  2112  0359  00F3               	movwf	??_SegmentDisplay_Main
  2113  035A  086A               	movf	_Segment,w
  2114  035B  3E16               	addlw	22
  2115  035C  0086               	movwf	6
  2116  035D  0187               	clrf	7
  2117  035E  0873               	movf	??_SegmentDisplay_Main,w
  2118  035F  0781               	addwf	1,f
  2119                           
  2120                           ;SegmentDisplay_A2.c: 101: }
  2121  0360  0008               	return
  2122  0361                     l2026:	
  2123                           
  2124                           ;SegmentDisplay_A2.c: 102: else
  2125                           ;SegmentDisplay_A2.c: 103: {
  2126                           ;SegmentDisplay_A2.c: 104: Segment->ComCount=0;
  2127  0361  086A               	movf	_Segment,w
  2128  0362  3E16               	addlw	22
  2129  0363  0086               	movwf	6
  2130  0364  0187               	clrf	7
  2131  0365  0181               	clrf	1
  2132  0366  0008               	return
  2133  0367                     __end_of_SegmentDisplay_Main:	
  2134                           
  2135                           	psect	text9
  2136  06D1                     __ptext9:	
  2137 ;; *************** function _SegmentDisplay_Initial *****************
  2138 ;; Defined at:
  2139 ;;		line 8 in file "I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;		None               void
  2146 ;; Registers used:
  2147 ;;		wreg, fsr1l, fsr1h
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2153 ;;      Params:         0       0       0       0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0
  2155 ;;      Temps:          1       0       0       0       0       0       0       0
  2156 ;;      Totals:         1       0       0       0       0       0       0       0
  2157 ;;Total ram usage:        1 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    2
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function _SegmentDisplay_Initial
  2169  06D1                     _SegmentDisplay_Initial:	
  2170                           
  2171                           ;SegmentDisplay_A2.c: 10: Segment=&VarSegment;
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _SegmentDisplay_Initial: [wregfsr1]
  2175  06D1  303C               	movlw	_VarSegment& (0+255)
  2176  06D2  00F3               	movwf	??_SegmentDisplay_Initial
  2177  06D3  0873               	movf	??_SegmentDisplay_Initial,w
  2178  06D4  0020               	movlb	0	; select bank0
  2179  06D5  00EA               	movwf	_Segment
  2180                           
  2181                           ;SegmentDisplay_A2.c: 11: Segment->Enable=1;
  2182  06D6  086A               	movf	_Segment,w
  2183  06D7  3E15               	addlw	21
  2184  06D8  0086               	movwf	6
  2185  06D9  0187               	clrf	7
  2186  06DA  1401               	bsf	1,0
  2187                           
  2188                           ;SegmentDisplay_A2.c: 13: Segment->Dec=1;
  2189  06DB  086A               	movf	_Segment,w
  2190  06DC  3E15               	addlw	21
  2191  06DD  0086               	movwf	6
  2192  06DE  0187               	clrf	7
  2193  06DF  1581               	bsf	1,3
  2194  06E0  0008               	return
  2195  06E1                     __end_of_SegmentDisplay_Initial:	
  2196                           
  2197                           	psect	text10
  2198  06BE                     __ptext10:	
  2199 ;; *************** function _Mcu_Initial *****************
  2200 ;; Defined at:
  2201 ;;		line 11 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;		None               void
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0, pclath, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2215 ;;      Params:         0       0       0       0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    3
  2222 ;; This function calls:
  2223 ;;		_I2C_Set
  2224 ;;		_IO_Set
  2225 ;;		_TMR1_Set
  2226 ;;		_UART_Set
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _Mcu_Initial
  2234  06BE                     _Mcu_Initial:	
  2235                           
  2236                           ;MCU_16f1516_B1.c: 14: OSCCON=0x78; ;;
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in _Mcu_Initial: [wreg+status,2+status,0+pclath+cstack]
  2240  06BE  3078               	movlw	120
  2241  06BF  0021               	movlb	1	; select bank1
  2242  06C0  0099               	movwf	25	;volatile
  2243                           
  2244                           ;MCU_16f1516_B1.c: 16: IO_Set();
  2245  06C1  3186  26A8  3186   	fcall	_IO_Set
  2246                           
  2247                           ;MCU_16f1516_B1.c: 18: __nop();
  2248  06C4  0000               	nop
  2249                           
  2250                           ;MCU_16f1516_B1.c: 20: TMR1_Set();
  2251  06C5  3186  26E1  3186   	fcall	_TMR1_Set
  2252                           
  2253                           ;MCU_16f1516_B1.c: 22: __nop();
  2254  06C8  0000               	nop
  2255                           
  2256                           ;MCU_16f1516_B1.c: 26: __nop();
  2257  06C9  0000               	nop
  2258                           
  2259                           ;MCU_16f1516_B1.c: 28: __nop();
  2260  06CA  0000               	nop
  2261                           
  2262                           ;MCU_16f1516_B1.c: 30: I2C_Set();
  2263  06CB  3187  2710  3186   	fcall	_I2C_Set
  2264                           
  2265                           ;MCU_16f1516_B1.c: 32: UART_Set();
  2266  06CE  3186  268F         	fcall	_UART_Set
  2267  06D0  0008               	return
  2268  06D1                     __end_of_Mcu_Initial:	
  2269                           
  2270                           	psect	text11
  2271  068F                     __ptext11:	
  2272 ;; *************** function _UART_Set *****************
  2273 ;; Defined at:
  2274 ;;		line 489 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;		None               void
  2281 ;; Registers used:
  2282 ;;		wreg, status,2
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2288 ;;      Params:         0       0       0       0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0
  2290 ;;      Temps:          1       0       0       0       0       0       0       0
  2291 ;;      Totals:         1       0       0       0       0       0       0       0
  2292 ;;Total ram usage:        1 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    2
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_Mcu_Initial
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           
  2303                           ;psect for function _UART_Set
  2304  068F                     _UART_Set:	
  2305                           
  2306                           ;MCU_16f1516_B1.c: 491: UART=&VarUart;
  2307                           
  2308                           ;incstack = 0
  2309                           ; Regs used in _UART_Set: [wreg+status,2]
  2310  068F  3020               	movlw	_VarUart& (0+255)
  2311  0690  00F3               	movwf	??_UART_Set
  2312  0691  0873               	movf	??_UART_Set,w
  2313  0692  0020               	movlb	0	; select bank0
  2314  0693  00D7               	movwf	_UART
  2315                           
  2316                           ;MCU_16f1516_B1.c: 492: TRISC7 = 1;
  2317  0694  0021               	movlb	1	; select bank1
  2318  0695  178E               	bsf	14,7	;volatile
  2319                           
  2320                           ;MCU_16f1516_B1.c: 493: TRISC6 = 1;
  2321  0696  170E               	bsf	14,6	;volatile
  2322                           
  2323                           ;MCU_16f1516_B1.c: 494: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  2324  0697  3033               	movlw	51
  2325  0698  0023               	movlb	3	; select bank3
  2326  0699  009B               	movwf	27	;volatile
  2327                           
  2328                           ;MCU_16f1516_B1.c: 495: SPBRGH = 0;
  2329  069A  019C               	clrf	28	;volatile
  2330                           
  2331                           ;MCU_16f1516_B1.c: 496: BRG16 = 0;
  2332  069B  119F               	bcf	31,3	;volatile
  2333                           
  2334                           ;MCU_16f1516_B1.c: 497: RCSTA = (0|0x90);
  2335  069C  3090               	movlw	144
  2336  069D  009D               	movwf	29	;volatile
  2337                           
  2338                           ;MCU_16f1516_B1.c: 498: TXSTA = (0x4|0|0x20);
  2339  069E  3024               	movlw	36
  2340  069F  009E               	movwf	30	;volatile
  2341                           
  2342                           ;MCU_16f1516_B1.c: 499: TX9=0;
  2343  06A0  131E               	bcf	30,6	;volatile
  2344                           
  2345                           ;MCU_16f1516_B1.c: 500: RX9=0;
  2346  06A1  131D               	bcf	29,6	;volatile
  2347                           
  2348                           ;MCU_16f1516_B1.c: 501: TXIE=0;
  2349  06A2  0021               	movlb	1	; select bank1
  2350  06A3  1211               	bcf	17,4	;volatile
  2351                           
  2352                           ;MCU_16f1516_B1.c: 502: RCIE=1;
  2353  06A4  1691               	bsf	17,5	;volatile
  2354                           
  2355                           ;MCU_16f1516_B1.c: 503: PEIE=1;
  2356  06A5  170B               	bsf	11,6	;volatile
  2357                           
  2358                           ;MCU_16f1516_B1.c: 504: GIE=1;
  2359  06A6  178B               	bsf	11,7	;volatile
  2360  06A7  0008               	return
  2361  06A8                     __end_of_UART_Set:	
  2362                           
  2363                           	psect	text12
  2364  06E1                     __ptext12:	
  2365 ;; *************** function _TMR1_Set *****************
  2366 ;; Defined at:
  2367 ;;		line 114 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;		None               void
  2374 ;; Registers used:
  2375 ;;		wreg
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2381 ;;      Params:         0       0       0       0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0       0
  2383 ;;      Temps:          1       0       0       0       0       0       0       0
  2384 ;;      Totals:         1       0       0       0       0       0       0       0
  2385 ;;Total ram usage:        1 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    2
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_Mcu_Initial
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _TMR1_Set
  2397  06E1                     _TMR1_Set:	
  2398                           
  2399                           ;MCU_16f1516_B1.c: 116: Timer1=&VarTimer1;
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in _TMR1_Set: [wreg]
  2403  06E1  3067               	movlw	_VarTimer1& (0+255)
  2404  06E2  00F3               	movwf	??_TMR1_Set
  2405  06E3  0873               	movf	??_TMR1_Set,w
  2406  06E4  00FA               	movwf	_Timer1
  2407                           
  2408                           ;MCU_16f1516_B1.c: 117: T1CON=(0x40 | 0x00 | 0x01);
  2409  06E5  3041               	movlw	65
  2410  06E6  0020               	movlb	0	; select bank0
  2411  06E7  0098               	movwf	24	;volatile
  2412                           
  2413                           ;MCU_16f1516_B1.c: 118: TMR1H=((65536-700)/256);
  2414  06E8  30FD               	movlw	253
  2415  06E9  0097               	movwf	23	;volatile
  2416                           
  2417                           ;MCU_16f1516_B1.c: 119: TMR1L=((65536-700)%256);
  2418  06EA  3044               	movlw	68
  2419  06EB  0096               	movwf	22	;volatile
  2420                           
  2421                           ;MCU_16f1516_B1.c: 120: TMR1IE=1;
  2422  06EC  0021               	movlb	1	; select bank1
  2423  06ED  1411               	bsf	17,0	;volatile
  2424                           
  2425                           ;MCU_16f1516_B1.c: 121: PEIE=1;
  2426  06EE  170B               	bsf	11,6	;volatile
  2427                           
  2428                           ;MCU_16f1516_B1.c: 122: GIE=1;
  2429  06EF  178B               	bsf	11,7	;volatile
  2430  06F0  0008               	return
  2431  06F1                     __end_of_TMR1_Set:	
  2432                           
  2433                           	psect	text13
  2434  06A8                     __ptext13:	
  2435 ;; *************** function _IO_Set *****************
  2436 ;; Defined at:
  2437 ;;		line 37 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;		None               void
  2444 ;; Registers used:
  2445 ;;		wreg, status,2
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2451 ;;      Params:         0       0       0       0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_Mcu_Initial
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _IO_Set
  2467  06A8                     _IO_Set:	
  2468                           
  2469                           ;MCU_16f1516_B1.c: 39: TRISA=0b00001001;;
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in _IO_Set: [wreg+status,2]
  2473  06A8  3009               	movlw	9
  2474  06A9  0021               	movlb	1	; select bank1
  2475  06AA  008C               	movwf	12	;volatile
  2476                           
  2477                           ;MCU_16f1516_B1.c: 40: TRISB=0b00000000;;
  2478  06AB  018D               	clrf	13	;volatile
  2479                           
  2480                           ;MCU_16f1516_B1.c: 41: TRISC=0b00011001;;
  2481  06AC  3019               	movlw	25
  2482  06AD  008E               	movwf	14	;volatile
  2483                           
  2484                           ;MCU_16f1516_B1.c: 42: LATA=0b00000000;;
  2485  06AE  0022               	movlb	2	; select bank2
  2486  06AF  018C               	clrf	12	;volatile
  2487                           
  2488                           ;MCU_16f1516_B1.c: 43: LATB=0b00000000;;
  2489  06B0  018D               	clrf	13	;volatile
  2490                           
  2491                           ;MCU_16f1516_B1.c: 44: LATC=0b00000000;;
  2492  06B1  018E               	clrf	14	;volatile
  2493                           
  2494                           ;MCU_16f1516_B1.c: 45: ANSELA=0b00000001;;
  2495  06B2  3001               	movlw	1
  2496  06B3  0023               	movlb	3	; select bank3
  2497  06B4  008C               	movwf	12	;volatile
  2498                           
  2499                           ;MCU_16f1516_B1.c: 46: ANSELB=0b00000000;;
  2500  06B5  018D               	clrf	13	;volatile
  2501                           
  2502                           ;MCU_16f1516_B1.c: 47: ANSELC=0b00000000;;
  2503  06B6  018E               	clrf	14	;volatile
  2504                           
  2505                           ;MCU_16f1516_B1.c: 48: PORTA=0b00001001;;
  2506  06B7  3009               	movlw	9
  2507  06B8  0020               	movlb	0	; select bank0
  2508  06B9  008C               	movwf	12	;volatile
  2509                           
  2510                           ;MCU_16f1516_B1.c: 49: PORTB=0b00000000;;
  2511  06BA  018D               	clrf	13	;volatile
  2512                           
  2513                           ;MCU_16f1516_B1.c: 50: PORTC=0b00011001;;
  2514  06BB  3019               	movlw	25
  2515  06BC  008E               	movwf	14	;volatile
  2516  06BD  0008               	return
  2517  06BE                     __end_of_IO_Set:	
  2518                           
  2519                           	psect	text14
  2520  0710                     __ptext14:	
  2521 ;; *************** function _I2C_Set *****************
  2522 ;; Defined at:
  2523 ;;		line 233 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;		None               void
  2530 ;; Registers used:
  2531 ;;		wreg, status,2
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2537 ;;      Params:         0       0       0       0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0
  2539 ;;      Temps:          1       0       0       0       0       0       0       0
  2540 ;;      Totals:         1       0       0       0       0       0       0       0
  2541 ;;Total ram usage:        1 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    2
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_Mcu_Initial
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function _I2C_Set
  2553  0710                     _I2C_Set:	
  2554                           
  2555                           ;MCU_16f1516_B1.c: 235: I2C=&VarI2C;
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _I2C_Set: [wreg+status,2]
  2559  0710  30A0               	movlw	_VarI2C& (0+255)
  2560  0711  00F3               	movwf	??_I2C_Set
  2561  0712  0873               	movf	??_I2C_Set,w
  2562  0713  0020               	movlb	0	; select bank0
  2563  0714  00D6               	movwf	_I2C
  2564                           
  2565                           ;MCU_16f1516_B1.c: 237: SSPADD = 0x09;
  2566  0715  3009               	movlw	9
  2567  0716  0024               	movlb	4	; select bank4
  2568  0717  0092               	movwf	18	;volatile
  2569                           
  2570                           ;MCU_16f1516_B1.c: 238: SSPSTAT = 0x80;
  2571  0718  3080               	movlw	128
  2572  0719  0094               	movwf	20	;volatile
  2573                           
  2574                           ;MCU_16f1516_B1.c: 239: SSPCON2 = 0;
  2575  071A  0196               	clrf	22	;volatile
  2576                           
  2577                           ;MCU_16f1516_B1.c: 241: SSPCON1=0b101000;
  2578  071B  3028               	movlw	40
  2579  071C  0095               	movwf	21	;volatile
  2580  071D  0008               	return
  2581  071E                     __end_of_I2C_Set:	
  2582                           
  2583                           	psect	text15
  2584  0701                     __ptext15:	
  2585 ;; *************** function _MainT_Initial *****************
  2586 ;; Defined at:
  2587 ;;		line 33 in file "I:\Program\PIC\Source_File\myMain.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;		None               void
  2594 ;; Registers used:
  2595 ;;		wreg, fsr1l, fsr1h
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2601 ;;      Params:         0       0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0
  2603 ;;      Temps:          1       0       0       0       0       0       0       0
  2604 ;;      Totals:         1       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    2
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _MainT_Initial
  2617  0701                     _MainT_Initial:	
  2618                           
  2619                           ;myMain.c: 35: TMain=&VarTMain;
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _MainT_Initial: [wregfsr1]
  2623  0701  3058               	movlw	_VarTMain& (0+255)
  2624  0702  00F3               	movwf	??_MainT_Initial
  2625  0703  0873               	movf	??_MainT_Initial,w
  2626  0704  0020               	movlb	0	; select bank0
  2627  0705  00EB               	movwf	_TMain
  2628                           
  2629                           ;myMain.c: 36: TMain->FirstOpen=1;
  2630  0706  086B               	movf	_TMain,w
  2631  0707  3E0D               	addlw	13
  2632  0708  0086               	movwf	6
  2633  0709  0187               	clrf	7
  2634  070A  1401               	bsf	1,0
  2635                           
  2636                           ;myMain.c: 37: Product=&VarProduct;
  2637  070B  30A0               	movlw	_VarProduct& (0+255)
  2638  070C  00F3               	movwf	??_MainT_Initial
  2639  070D  0873               	movf	??_MainT_Initial,w
  2640  070E  00F9               	movwf	_Product
  2641  070F  0008               	return
  2642  0710                     __end_of_MainT_Initial:	
  2643                           
  2644                           	psect	text16
  2645  023E                     __ptext16:	
  2646 ;; *************** function _MainT *****************
  2647 ;; Defined at:
  2648 ;;		line 41 in file "I:\Program\PIC\Source_File\myMain.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  i               1   13[BANK0 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;		None               void
  2655 ;; Registers used:
  2656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2662 ;;      Params:         0       0       0       0       0       0       0       0
  2663 ;;      Locals:         0       1       0       0       0       0       0       0
  2664 ;;      Temps:          0       3       0       0       0       0       0       0
  2665 ;;      Totals:         0       4       0       0       0       0       0       0
  2666 ;;Total ram usage:        4 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    4
  2669 ;; This function calls:
  2670 ;;		_setSegmentDisplayNumber
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _MainT
  2678  023E                     _MainT:	
  2679                           
  2680                           ;myMain.c: 43: char i;
  2681                           ;myMain.c: 45: if(!TMain->PowerON)
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2685  023E  0020               	movlb	0	; select bank0
  2686  023F  086B               	movf	_TMain,w
  2687  0240  0086               	movwf	6
  2688  0241  0187               	clrf	7
  2689  0242  1801               	btfsc	1,0
  2690  0243  2A62               	goto	l2376
  2691                           
  2692                           ;myMain.c: 46: {
  2693                           ;myMain.c: 47: TMain->PowerCount++;
  2694  0244  0A6B               	incf	_TMain,w
  2695  0245  0086               	movwf	6
  2696  0246  0187               	clrf	7
  2697  0247  3001               	movlw	1
  2698  0248  0781               	addwf	1,f
  2699  0249  3141               	addfsr 1,1
  2700  024A  1803               	skipnc
  2701  024B  0A81               	incf	1,f
  2702                           
  2703                           ;myMain.c: 48: if(TMain->PowerCount == 1500)
  2704  024C  0A6B               	incf	_TMain,w
  2705  024D  0086               	movwf	6
  2706  024E  0187               	clrf	7
  2707  024F  3F40               	moviw [0]fsr1
  2708  0250  3ADC               	xorlw	220
  2709  0251  1D03               	skipz
  2710  0252  2A55               	goto	u3315
  2711  0253  3F41               	moviw [1]fsr1
  2712  0254  3A05               	xorlw	5
  2713  0255                     u3315:	
  2714  0255  1D03               	skipz
  2715  0256  0008               	return
  2716                           
  2717                           ;myMain.c: 49: {
  2718                           ;myMain.c: 50: TMain->PowerCount=0;
  2719  0257  0A6B               	incf	_TMain,w
  2720  0258  0086               	movwf	6
  2721  0259  0187               	clrf	7
  2722  025A  3000               	movlw	0
  2723  025B  3FC0               	movwi [0]fsr1
  2724  025C  3FC1               	movwi [1]fsr1
  2725                           
  2726                           ;myMain.c: 51: TMain->PowerON=1;
  2727  025D  086B               	movf	_TMain,w
  2728  025E  0086               	movwf	6
  2729  025F  0187               	clrf	7
  2730  0260  1401               	bsf	1,0
  2731                           
  2732                           ;myMain.c: 56: }
  2733                           ;myMain.c: 57: }
  2734  0261  0008               	return
  2735  0262                     l2376:	
  2736                           
  2737                           ;myMain.c: 58: else
  2738                           ;myMain.c: 59: {
  2739                           ;myMain.c: 60: TMain->Count1++;
  2740  0262  086B               	movf	_TMain,w
  2741  0263  3E05               	addlw	5
  2742  0264  0086               	movwf	6
  2743  0265  0187               	clrf	7
  2744  0266  3001               	movlw	1
  2745  0267  0781               	addwf	1,f
  2746  0268  3141               	addfsr 1,1
  2747  0269  1803               	skipnc
  2748  026A  0A81               	incf	1,f
  2749                           
  2750                           ;myMain.c: 61: if(TMain->Count1 == 2000)
  2751  026B  086B               	movf	_TMain,w
  2752  026C  3E05               	addlw	5
  2753  026D  0086               	movwf	6
  2754  026E  0187               	clrf	7
  2755  026F  3F40               	moviw [0]fsr1
  2756  0270  3AD0               	xorlw	208
  2757  0271  1D03               	skipz
  2758  0272  2A75               	goto	u3325
  2759  0273  3F41               	moviw [1]fsr1
  2760  0274  3A07               	xorlw	7
  2761  0275                     u3325:	
  2762  0275  1D03               	skipz
  2763  0276  2AD7               	goto	l2408
  2764                           
  2765                           ;myMain.c: 62: {
  2766                           ;myMain.c: 63: TMain->Count1=0;
  2767  0277  086B               	movf	_TMain,w
  2768  0278  3E05               	addlw	5
  2769  0279  0086               	movwf	6
  2770  027A  0187               	clrf	7
  2771  027B  3000               	movlw	0
  2772  027C  3FC0               	movwi [0]fsr1
  2773  027D  3FC1               	movwi [1]fsr1
  2774                           
  2775                           ;myMain.c: 64: RA2=~RA2;
  2776  027E  3004               	movlw	4
  2777  027F  068C               	xorwf	12,f
  2778                           
  2779                           ;myMain.c: 67: for(i=0;i<32;i++){
  2780  0280  01AD               	clrf	MainT@i
  2781  0281  3020               	movlw	32
  2782  0282  022D               	subwf	MainT@i,w
  2783  0283  1803               	btfsc	3,0
  2784  0284  2A9A               	goto	l2396
  2785  0285                     l2390:	
  2786                           
  2787                           ;myMain.c: 68: UART->TxData[i]=64-i;
  2788  0285  032D               	decf	MainT@i,w
  2789  0286  3AFF               	xorlw	255
  2790  0287  3E40               	addlw	64
  2791  0288  00AA               	movwf	??_MainT
  2792  0289  082D               	movf	MainT@i,w
  2793  028A  0757               	addwf	_UART,w
  2794  028B  00AB               	movwf	??_MainT+1
  2795  028C  082B               	movf	??_MainT+1,w
  2796  028D  0086               	movwf	6
  2797  028E  3001               	movlw	1	; select bank2/3
  2798  028F  0087               	movwf	7
  2799  0290  082A               	movf	??_MainT,w
  2800  0291  0081               	movwf	1
  2801  0292  3001               	movlw	1
  2802  0293  00AA               	movwf	??_MainT
  2803  0294  082A               	movf	??_MainT,w
  2804  0295  07AD               	addwf	MainT@i,f
  2805  0296  3020               	movlw	32
  2806  0297  022D               	subwf	MainT@i,w
  2807  0298  1C03               	skipc
  2808  0299  2A85               	goto	l2390
  2809  029A                     l2396:	
  2810                           
  2811                           ;myMain.c: 74: if(TMain->Flag == 0)
  2812  029A  0857               	movf	_UART,w
  2813  029B  3E43               	addlw	67
  2814  029C  0086               	movwf	6
  2815  029D  3001               	movlw	1	; select bank2/3
  2816  029E  0087               	movwf	7
  2817  029F  1401               	bsf	1,0
  2818                           
  2819                           ;myMain.c: 78: }
  2820                           ;myMain.c: 80: if(TMain->Test)
  2821                           
  2822                           ;myMain.c: 75: {
  2823  02A0  086B               	movf	_TMain,w
  2824  02A1  3E0C               	addlw	12
  2825  02A2  0086               	movwf	6
  2826  02A3  0187               	clrf	7
  2827  02A4  0801               	movf	1,w
  2828  02A5  3A00               	xorlw	0
  2829  02A6  1903               	skipnz
  2830  02A7  2AD7               	goto	l2408
  2831                           
  2832                           ;myMain.c: 81: {
  2833                           ;myMain.c: 82: setSegmentDisplayNumber(I2C->BufferReader[I2C->Count]);
  2834  02A8  0856               	movf	_I2C,w
  2835  02A9  3E40               	addlw	64
  2836  02AA  0086               	movwf	6
  2837  02AB  3001               	movlw	1	; select bank2/3
  2838  02AC  0087               	movwf	7
  2839  02AD  0801               	movf	1,w
  2840  02AE  0756               	addwf	_I2C,w
  2841  02AF  00AA               	movwf	??_MainT
  2842  02B0  082A               	movf	??_MainT,w
  2843  02B1  0086               	movwf	6
  2844  02B2  3001               	movlw	1	; select bank2/3
  2845  02B3  0087               	movwf	7
  2846  02B4  0801               	movf	1,w
  2847  02B5  00AB               	movwf	??_MainT+1
  2848  02B6  01AC               	clrf	??_MainT+2
  2849  02B7  082B               	movf	??_MainT+1,w
  2850  02B8  00A4               	movwf	setSegmentDisplayNumber@number
  2851  02B9  082C               	movf	??_MainT+2,w
  2852  02BA  00A5               	movwf	setSegmentDisplayNumber@number+1
  2853  02BB  3180  204F  3182   	fcall	_setSegmentDisplayNumber
  2854                           
  2855                           ;myMain.c: 83: I2C->Count++;
  2856  02BE  3001               	movlw	1
  2857  02BF  0020               	movlb	0	; select bank0
  2858  02C0  00AA               	movwf	??_MainT
  2859  02C1  0856               	movf	_I2C,w
  2860  02C2  3E40               	addlw	64
  2861  02C3  0086               	movwf	6
  2862  02C4  3001               	movlw	1	; select bank2/3
  2863  02C5  0087               	movwf	7
  2864  02C6  082A               	movf	??_MainT,w
  2865  02C7  0781               	addwf	1,f
  2866                           
  2867                           ;myMain.c: 84: if(I2C->Count==32)
  2868  02C8  0856               	movf	_I2C,w
  2869  02C9  3E40               	addlw	64
  2870  02CA  0086               	movwf	6
  2871  02CB  3001               	movlw	1	; select bank2/3
  2872  02CC  0087               	movwf	7
  2873  02CD  0801               	movf	1,w
  2874  02CE  3A20               	xorlw	32
  2875  02CF  1D03               	skipz
  2876  02D0  2AD7               	goto	l2408
  2877                           
  2878                           ;myMain.c: 85: {
  2879                           ;myMain.c: 86: I2C->Count=0;
  2880  02D1  0856               	movf	_I2C,w
  2881  02D2  3E40               	addlw	64
  2882  02D3  0086               	movwf	6
  2883  02D4  3001               	movlw	1	; select bank2/3
  2884  02D5  0087               	movwf	7
  2885  02D6  0181               	clrf	1
  2886  02D7                     l2408:	
  2887                           
  2888                           ;myMain.c: 87: }
  2889                           ;myMain.c: 88: }
  2890                           ;myMain.c: 101: }
  2891                           ;myMain.c: 104: TMain->Count2++;
  2892  02D7  086B               	movf	_TMain,w
  2893  02D8  3E07               	addlw	7
  2894  02D9  0086               	movwf	6
  2895  02DA  0187               	clrf	7
  2896  02DB  3001               	movlw	1
  2897  02DC  0781               	addwf	1,f
  2898  02DD  3141               	addfsr 1,1
  2899  02DE  1803               	skipnc
  2900  02DF  0A81               	incf	1,f
  2901                           
  2902                           ;myMain.c: 105: if(TMain->Count2 == 2000)
  2903  02E0  086B               	movf	_TMain,w
  2904  02E1  3E07               	addlw	7
  2905  02E2  0086               	movwf	6
  2906  02E3  0187               	clrf	7
  2907  02E4  3F40               	moviw [0]fsr1
  2908  02E5  3AD0               	xorlw	208
  2909  02E6  1D03               	skipz
  2910  02E7  2AEA               	goto	u3375
  2911  02E8  3F41               	moviw [1]fsr1
  2912  02E9  3A07               	xorlw	7
  2913  02EA                     u3375:	
  2914  02EA  1D03               	skipz
  2915  02EB  0008               	return
  2916                           
  2917                           ;myMain.c: 106: {
  2918                           ;myMain.c: 107: TMain->Count2=0;
  2919  02EC  086B               	movf	_TMain,w
  2920  02ED  3E07               	addlw	7
  2921  02EE  0086               	movwf	6
  2922  02EF  0187               	clrf	7
  2923  02F0  3000               	movlw	0
  2924  02F1  3FC0               	movwi [0]fsr1
  2925  02F2  3FC1               	movwi [1]fsr1
  2926  02F3  0008               	return
  2927  02F4                     __end_of_MainT:	
  2928                           
  2929                           	psect	text17
  2930  004F                     __ptext17:	
  2931 ;; *************** function _setSegmentDisplayNumber *****************
  2932 ;; Defined at:
  2933 ;;		line 20 in file "I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  number          2    4[BANK0 ] int 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  i               1    8[COMMON] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;		None               void
  2940 ;; Registers used:
  2941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2947 ;;      Params:         0       2       0       0       0       0       0       0
  2948 ;;      Locals:         1       0       0       0       0       0       0       0
  2949 ;;      Temps:          0       4       0       0       0       0       0       0
  2950 ;;      Totals:         1       6       0       0       0       0       0       0
  2951 ;;Total ram usage:        7 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    3
  2954 ;; This function calls:
  2955 ;;		___awdiv
  2956 ;;		___awmod
  2957 ;; This function is called by:
  2958 ;;		_MainT
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _setSegmentDisplayNumber
  2964  004F                     _setSegmentDisplayNumber:	
  2965                           
  2966                           ;SegmentDisplay_A2.c: 22: char i;
  2967                           ;SegmentDisplay_A2.c: 23: if(Segment->Enable)
  2968                           
  2969                           ;incstack = 0
  2970                           ; Regs used in _setSegmentDisplayNumber: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  2971  004F  0020               	movlb	0	; select bank0
  2972  0050  086A               	movf	_Segment,w
  2973  0051  3E15               	addlw	21
  2974  0052  0086               	movwf	6
  2975  0053  0187               	clrf	7
  2976  0054  1C01               	btfss	1,0
  2977  0055  0008               	return
  2978                           
  2979                           ;SegmentDisplay_A2.c: 24: {
  2980                           ;SegmentDisplay_A2.c: 25: Segment->GO=1;
  2981  0056  086A               	movf	_Segment,w
  2982  0057  3E15               	addlw	21
  2983  0058  0086               	movwf	6
  2984  0059  0187               	clrf	7
  2985  005A  1481               	bsf	1,1
  2986                           
  2987                           ;SegmentDisplay_A2.c: 26: if(Segment->Hex)
  2988  005B  086A               	movf	_Segment,w
  2989  005C  3E15               	addlw	21
  2990  005D  0086               	movwf	6
  2991  005E  0187               	clrf	7
  2992  005F  1D01               	btfss	1,2
  2993  0060  289B               	goto	l2282
  2994                           
  2995                           ;SegmentDisplay_A2.c: 27: {
  2996                           ;SegmentDisplay_A2.c: 28: Segment->Num[0]=(number & 0x000f);
  2997  0061  0824               	movf	setSegmentDisplayNumber@number,w
  2998  0062  390F               	andlw	15
  2999  0063  00A6               	movwf	??_setSegmentDisplayNumber
  3000  0064  086A               	movf	_Segment,w
  3001  0065  3E11               	addlw	17
  3002  0066  0086               	movwf	6
  3003  0067  0187               	clrf	7
  3004  0068  0826               	movf	??_setSegmentDisplayNumber,w
  3005  0069  0081               	movwf	1
  3006                           
  3007                           ;SegmentDisplay_A2.c: 29: Segment->Num[1]=((number>>4)&0x000f);
  3008  006A  0825               	movf	setSegmentDisplayNumber@number+1,w
  3009  006B  00A7               	movwf	??_setSegmentDisplayNumber+1
  3010  006C  0824               	movf	setSegmentDisplayNumber@number,w
  3011  006D  00A6               	movwf	??_setSegmentDisplayNumber
  3012  006E  3004               	movlw	4
  3013  006F  00A8               	movwf	??_setSegmentDisplayNumber+2
  3014  0070                     u2905:	
  3015  0070  0D27               	rlf	??_setSegmentDisplayNumber+1,w
  3016  0071  0CA7               	rrf	??_setSegmentDisplayNumber+1,f
  3017  0072  0CA6               	rrf	??_setSegmentDisplayNumber,f
  3018  0073  0BA8               	decfsz	??_setSegmentDisplayNumber+2,f
  3019  0074  2870               	goto	u2905
  3020  0075  0826               	movf	??_setSegmentDisplayNumber,w
  3021  0076  390F               	andlw	15
  3022  0077  00A9               	movwf	??_setSegmentDisplayNumber+3
  3023  0078  086A               	movf	_Segment,w
  3024  0079  3E12               	addlw	18
  3025  007A  0086               	movwf	6
  3026  007B  0187               	clrf	7
  3027  007C  0829               	movf	??_setSegmentDisplayNumber+3,w
  3028  007D  0081               	movwf	1
  3029                           
  3030                           ;SegmentDisplay_A2.c: 30: Segment->Num[2]=((number>>8)&0x000f);
  3031  007E  0825               	movf	setSegmentDisplayNumber@number+1,w
  3032  007F  390F               	andlw	15
  3033  0080  00A6               	movwf	??_setSegmentDisplayNumber
  3034  0081  086A               	movf	_Segment,w
  3035  0082  3E13               	addlw	19
  3036  0083  0086               	movwf	6
  3037  0084  0187               	clrf	7
  3038  0085  0826               	movf	??_setSegmentDisplayNumber,w
  3039  0086  0081               	movwf	1
  3040                           
  3041                           ;SegmentDisplay_A2.c: 31: Segment->Num[3]=((number>>12)&0x000f);
  3042  0087  0825               	movf	setSegmentDisplayNumber@number+1,w
  3043  0088  00A7               	movwf	??_setSegmentDisplayNumber+1
  3044  0089  0824               	movf	setSegmentDisplayNumber@number,w
  3045  008A  00A6               	movwf	??_setSegmentDisplayNumber
  3046  008B  300C               	movlw	12
  3047  008C  00A8               	movwf	??_setSegmentDisplayNumber+2
  3048  008D                     u2915:	
  3049  008D  0D27               	rlf	??_setSegmentDisplayNumber+1,w
  3050  008E  0CA7               	rrf	??_setSegmentDisplayNumber+1,f
  3051  008F  0CA6               	rrf	??_setSegmentDisplayNumber,f
  3052  0090  0BA8               	decfsz	??_setSegmentDisplayNumber+2,f
  3053  0091  288D               	goto	u2915
  3054  0092  0826               	movf	??_setSegmentDisplayNumber,w
  3055  0093  390F               	andlw	15
  3056  0094  00A9               	movwf	??_setSegmentDisplayNumber+3
  3057  0095  086A               	movf	_Segment,w
  3058  0096  3E14               	addlw	20
  3059  0097  0086               	movwf	6
  3060  0098  0187               	clrf	7
  3061  0099  0829               	movf	??_setSegmentDisplayNumber+3,w
  3062  009A  2948               	goto	L2
  3063  009B                     l2282:	
  3064                           ;SegmentDisplay_A2.c: 32: }
  3065                           
  3066                           
  3067                           ;SegmentDisplay_A2.c: 33: else if(Segment->Dec)
  3068  009B  086A               	movf	_Segment,w
  3069  009C  3E15               	addlw	21
  3070  009D  0086               	movwf	6
  3071  009E  0187               	clrf	7
  3072  009F  1D81               	btfss	1,3
  3073  00A0  2949               	goto	l2310
  3074                           
  3075                           ;SegmentDisplay_A2.c: 34: {
  3076                           ;SegmentDisplay_A2.c: 35: if(number > 0x270f)
  3077  00A1  0825               	movf	setSegmentDisplayNumber@number+1,w
  3078  00A2  3A80               	xorlw	128
  3079  00A3  00A6               	movwf	??_setSegmentDisplayNumber
  3080  00A4  30A7               	movlw	167
  3081  00A5  0226               	subwf	??_setSegmentDisplayNumber,w
  3082  00A6  1D03               	skipz
  3083  00A7  28AA               	goto	u2935
  3084  00A8  3010               	movlw	16
  3085  00A9  0224               	subwf	setSegmentDisplayNumber@number,w
  3086  00AA                     u2935:	
  3087  00AA  1C03               	skipc
  3088  00AB  28C2               	goto	l2298
  3089                           
  3090                           ;SegmentDisplay_A2.c: 36: {
  3091                           ;SegmentDisplay_A2.c: 37: for(i=0 ; i<4; i++)
  3092  00AC  01F8               	clrf	setSegmentDisplayNumber@i
  3093  00AD                     L3:	
  3094  00AD  3004               	movlw	4
  3095  00AE  0278               	subwf	setSegmentDisplayNumber@i,w
  3096  00AF  1803               	btfsc	3,0
  3097  00B0  2949               	goto	l2310
  3098                           
  3099                           ;SegmentDisplay_A2.c: 38: {
  3100                           ;SegmentDisplay_A2.c: 39: Segment->Num[i]=16;
  3101  00B1  3010               	movlw	16
  3102  00B2  0020               	movlb	0	; select bank0
  3103  00B3  00A6               	movwf	??_setSegmentDisplayNumber
  3104  00B4  0878               	movf	setSegmentDisplayNumber@i,w
  3105  00B5  3E11               	addlw	17
  3106  00B6  076A               	addwf	_Segment,w
  3107  00B7  00A7               	movwf	??_setSegmentDisplayNumber+1
  3108  00B8  0827               	movf	??_setSegmentDisplayNumber+1,w
  3109  00B9  0086               	movwf	6
  3110  00BA  0187               	clrf	7
  3111  00BB  0826               	movf	??_setSegmentDisplayNumber,w
  3112  00BC  0081               	movwf	1
  3113  00BD  3001               	movlw	1
  3114  00BE  00A6               	movwf	??_setSegmentDisplayNumber
  3115  00BF  0826               	movf	??_setSegmentDisplayNumber,w
  3116  00C0  07F8               	addwf	setSegmentDisplayNumber@i,f
  3117  00C1  28AD               	goto	L3
  3118  00C2                     l2298:	
  3119                           ;SegmentDisplay_A2.c: 40: }
  3120                           ;SegmentDisplay_A2.c: 41: }
  3121                           
  3122                           
  3123                           ;SegmentDisplay_A2.c: 42: else
  3124                           ;SegmentDisplay_A2.c: 43: {
  3125                           ;SegmentDisplay_A2.c: 44: Segment->Num[3]=(number/1000);
  3126  00C2  30E8               	movlw	232
  3127  00C3  00F3               	movwf	___awdiv@divisor
  3128  00C4  3003               	movlw	3
  3129  00C5  00F4               	movwf	___awdiv@divisor+1
  3130  00C6  0020               	movlb	0	; select bank0
  3131  00C7  0825               	movf	setSegmentDisplayNumber@number+1,w
  3132  00C8  01F6               	clrf	___awdiv@dividend+1
  3133  00C9  07F6               	addwf	___awdiv@dividend+1,f
  3134  00CA  0824               	movf	setSegmentDisplayNumber@number,w
  3135  00CB  01F5               	clrf	___awdiv@dividend
  3136  00CC  07F5               	addwf	___awdiv@dividend,f
  3137  00CD  3183  23DA  3180   	fcall	___awdiv
  3138  00D0  0873               	movf	?___awdiv,w
  3139  00D1  0020               	movlb	0	; select bank0
  3140  00D2  00A6               	movwf	??_setSegmentDisplayNumber
  3141  00D3  086A               	movf	_Segment,w
  3142  00D4  3E14               	addlw	20
  3143  00D5  0086               	movwf	6
  3144  00D6  0187               	clrf	7
  3145  00D7  0826               	movf	??_setSegmentDisplayNumber,w
  3146  00D8  0081               	movwf	1
  3147                           
  3148                           ;SegmentDisplay_A2.c: 45: number%=1000;
  3149  00D9  30E8               	movlw	232
  3150  00DA  00F3               	movwf	___awmod@divisor
  3151  00DB  3003               	movlw	3
  3152  00DC  00F4               	movwf	___awmod@divisor+1
  3153  00DD  0825               	movf	setSegmentDisplayNumber@number+1,w
  3154  00DE  01F6               	clrf	___awmod@dividend+1
  3155  00DF  07F6               	addwf	___awmod@dividend+1,f
  3156  00E0  0824               	movf	setSegmentDisplayNumber@number,w
  3157  00E1  01F5               	clrf	___awmod@dividend
  3158  00E2  07F5               	addwf	___awmod@dividend,f
  3159  00E3  3184  242E  3180   	fcall	___awmod
  3160  00E6  0874               	movf	?___awmod+1,w
  3161  00E7  0020               	movlb	0	; select bank0
  3162  00E8  01A5               	clrf	setSegmentDisplayNumber@number+1
  3163  00E9  07A5               	addwf	setSegmentDisplayNumber@number+1,f
  3164  00EA  0873               	movf	?___awmod,w
  3165  00EB  01A4               	clrf	setSegmentDisplayNumber@number
  3166  00EC  07A4               	addwf	setSegmentDisplayNumber@number,f
  3167                           
  3168                           ;SegmentDisplay_A2.c: 46: Segment->Num[2]=(number/100);
  3169  00ED  3064               	movlw	100
  3170  00EE  00F3               	movwf	___awdiv@divisor
  3171  00EF  3000               	movlw	0
  3172  00F0  00F4               	movwf	___awdiv@divisor+1
  3173  00F1  0825               	movf	setSegmentDisplayNumber@number+1,w
  3174  00F2  01F6               	clrf	___awdiv@dividend+1
  3175  00F3  07F6               	addwf	___awdiv@dividend+1,f
  3176  00F4  0824               	movf	setSegmentDisplayNumber@number,w
  3177  00F5  01F5               	clrf	___awdiv@dividend
  3178  00F6  07F5               	addwf	___awdiv@dividend,f
  3179  00F7  3183  23DA  3180   	fcall	___awdiv
  3180  00FA  0873               	movf	?___awdiv,w
  3181  00FB  0020               	movlb	0	; select bank0
  3182  00FC  00A6               	movwf	??_setSegmentDisplayNumber
  3183  00FD  086A               	movf	_Segment,w
  3184  00FE  3E13               	addlw	19
  3185  00FF  0086               	movwf	6
  3186  0100  0187               	clrf	7
  3187  0101  0826               	movf	??_setSegmentDisplayNumber,w
  3188  0102  0081               	movwf	1
  3189                           
  3190                           ;SegmentDisplay_A2.c: 47: number%=100;
  3191  0103  3064               	movlw	100
  3192  0104  00F3               	movwf	___awmod@divisor
  3193  0105  3000               	movlw	0
  3194  0106  00F4               	movwf	___awmod@divisor+1
  3195  0107  0825               	movf	setSegmentDisplayNumber@number+1,w
  3196  0108  01F6               	clrf	___awmod@dividend+1
  3197  0109  07F6               	addwf	___awmod@dividend+1,f
  3198  010A  0824               	movf	setSegmentDisplayNumber@number,w
  3199  010B  01F5               	clrf	___awmod@dividend
  3200  010C  07F5               	addwf	___awmod@dividend,f
  3201  010D  3184  242E  3180   	fcall	___awmod
  3202  0110  0874               	movf	?___awmod+1,w
  3203  0111  0020               	movlb	0	; select bank0
  3204  0112  01A5               	clrf	setSegmentDisplayNumber@number+1
  3205  0113  07A5               	addwf	setSegmentDisplayNumber@number+1,f
  3206  0114  0873               	movf	?___awmod,w
  3207  0115  01A4               	clrf	setSegmentDisplayNumber@number
  3208  0116  07A4               	addwf	setSegmentDisplayNumber@number,f
  3209                           
  3210                           ;SegmentDisplay_A2.c: 48: Segment->Num[1]=(number/10);
  3211  0117  300A               	movlw	10
  3212  0118  00F3               	movwf	___awdiv@divisor
  3213  0119  3000               	movlw	0
  3214  011A  00F4               	movwf	___awdiv@divisor+1
  3215  011B  0825               	movf	setSegmentDisplayNumber@number+1,w
  3216  011C  01F6               	clrf	___awdiv@dividend+1
  3217  011D  07F6               	addwf	___awdiv@dividend+1,f
  3218  011E  0824               	movf	setSegmentDisplayNumber@number,w
  3219  011F  01F5               	clrf	___awdiv@dividend
  3220  0120  07F5               	addwf	___awdiv@dividend,f
  3221  0121  3183  23DA  3180   	fcall	___awdiv
  3222  0124  0873               	movf	?___awdiv,w
  3223  0125  0020               	movlb	0	; select bank0
  3224  0126  00A6               	movwf	??_setSegmentDisplayNumber
  3225  0127  086A               	movf	_Segment,w
  3226  0128  3E12               	addlw	18
  3227  0129  0086               	movwf	6
  3228  012A  0187               	clrf	7
  3229  012B  0826               	movf	??_setSegmentDisplayNumber,w
  3230  012C  0081               	movwf	1
  3231                           
  3232                           ;SegmentDisplay_A2.c: 49: number%=10;
  3233  012D  300A               	movlw	10
  3234  012E  00F3               	movwf	___awmod@divisor
  3235  012F  3000               	movlw	0
  3236  0130  00F4               	movwf	___awmod@divisor+1
  3237  0131  0825               	movf	setSegmentDisplayNumber@number+1,w
  3238  0132  01F6               	clrf	___awmod@dividend+1
  3239  0133  07F6               	addwf	___awmod@dividend+1,f
  3240  0134  0824               	movf	setSegmentDisplayNumber@number,w
  3241  0135  01F5               	clrf	___awmod@dividend
  3242  0136  07F5               	addwf	___awmod@dividend,f
  3243  0137  3184  242E  3180   	fcall	___awmod
  3244  013A  0874               	movf	?___awmod+1,w
  3245  013B  0020               	movlb	0	; select bank0
  3246  013C  01A5               	clrf	setSegmentDisplayNumber@number+1
  3247  013D  07A5               	addwf	setSegmentDisplayNumber@number+1,f
  3248  013E  0873               	movf	?___awmod,w
  3249  013F  01A4               	clrf	setSegmentDisplayNumber@number
  3250  0140  07A4               	addwf	setSegmentDisplayNumber@number,f
  3251                           
  3252                           ;SegmentDisplay_A2.c: 50: Segment->Num[0]=number;
  3253  0141  0824               	movf	setSegmentDisplayNumber@number,w
  3254  0142  00A6               	movwf	??_setSegmentDisplayNumber
  3255  0143  086A               	movf	_Segment,w
  3256  0144  3E11               	addlw	17
  3257  0145  0086               	movwf	6
  3258  0146  0187               	clrf	7
  3259  0147  0826               	movf	??_setSegmentDisplayNumber,w
  3260  0148                     L2:	
  3261  0148  0081               	movwf	1
  3262  0149                     l2310:	
  3263                           
  3264                           ;SegmentDisplay_A2.c: 51: }
  3265                           ;SegmentDisplay_A2.c: 52: }
  3266                           ;SegmentDisplay_A2.c: 53: if(Segment->Num[3] > 0)
  3267  0149  0020               	movlb	0	; select bank0
  3268  014A  086A               	movf	_Segment,w
  3269  014B  3E14               	addlw	20
  3270  014C  0086               	movwf	6
  3271  014D  0187               	clrf	7
  3272  014E  0801               	movf	1,w
  3273  014F  3A00               	xorlw	0
  3274  0150  1903               	skipnz
  3275  0151  295B               	goto	l2314
  3276                           
  3277                           ;SegmentDisplay_A2.c: 54: {
  3278                           ;SegmentDisplay_A2.c: 55: Segment->DisplayCount=3;
  3279  0152  3003               	movlw	3
  3280  0153  00A6               	movwf	??_setSegmentDisplayNumber
  3281  0154  086A               	movf	_Segment,w
  3282  0155  3E17               	addlw	23
  3283  0156  0086               	movwf	6
  3284  0157  0187               	clrf	7
  3285  0158  0826               	movf	??_setSegmentDisplayNumber,w
  3286  0159  0081               	movwf	1
  3287                           
  3288                           ;SegmentDisplay_A2.c: 56: }
  3289  015A  0008               	return
  3290  015B                     l2314:	
  3291                           
  3292                           ;SegmentDisplay_A2.c: 57: else if(Segment->Num[2] > 0)
  3293  015B  086A               	movf	_Segment,w
  3294  015C  3E13               	addlw	19
  3295  015D  0086               	movwf	6
  3296  015E  0187               	clrf	7
  3297  015F  0801               	movf	1,w
  3298  0160  3A00               	xorlw	0
  3299  0161  1903               	skipnz
  3300  0162  296C               	goto	l2318
  3301                           
  3302                           ;SegmentDisplay_A2.c: 58: {
  3303                           ;SegmentDisplay_A2.c: 59: Segment->DisplayCount=2;
  3304  0163  3002               	movlw	2
  3305  0164  00A6               	movwf	??_setSegmentDisplayNumber
  3306  0165  086A               	movf	_Segment,w
  3307  0166  3E17               	addlw	23
  3308  0167  0086               	movwf	6
  3309  0168  0187               	clrf	7
  3310  0169  0826               	movf	??_setSegmentDisplayNumber,w
  3311  016A  0081               	movwf	1
  3312                           
  3313                           ;SegmentDisplay_A2.c: 60: }
  3314  016B  0008               	return
  3315  016C                     l2318:	
  3316                           
  3317                           ;SegmentDisplay_A2.c: 61: else if(Segment->Num[1] > 0)
  3318  016C  086A               	movf	_Segment,w
  3319  016D  3E12               	addlw	18
  3320  016E  0086               	movwf	6
  3321  016F  0187               	clrf	7
  3322  0170  0801               	movf	1,w
  3323  0171  3A00               	xorlw	0
  3324  0172  1903               	skipnz
  3325  0173  297B               	goto	l2322
  3326                           
  3327                           ;SegmentDisplay_A2.c: 62: {
  3328                           ;SegmentDisplay_A2.c: 63: Segment->DisplayCount=1;
  3329  0174  086A               	movf	_Segment,w
  3330  0175  3E17               	addlw	23
  3331  0176  0086               	movwf	6
  3332  0177  0187               	clrf	7
  3333  0178  0181               	clrf	1
  3334  0179  0A81               	incf	1,f
  3335                           
  3336                           ;SegmentDisplay_A2.c: 64: }
  3337  017A  0008               	return
  3338  017B                     l2322:	
  3339                           
  3340                           ;SegmentDisplay_A2.c: 65: else
  3341                           ;SegmentDisplay_A2.c: 66: {
  3342                           ;SegmentDisplay_A2.c: 67: Segment->DisplayCount=0;
  3343  017B  086A               	movf	_Segment,w
  3344  017C  3E17               	addlw	23
  3345  017D  0086               	movwf	6
  3346  017E  0187               	clrf	7
  3347  017F  0181               	clrf	1
  3348  0180  0008               	return
  3349  0181                     __end_of_setSegmentDisplayNumber:	
  3350                           
  3351                           	psect	text18
  3352  042E                     __ptext18:	
  3353 ;; *************** function ___awmod *****************
  3354 ;; Defined at:
  3355 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  divisor         2    3[COMMON] int 
  3358 ;;  dividend        2    5[COMMON] int 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  sign            1    1[BANK0 ] unsigned char 
  3361 ;;  counter         1    0[BANK0 ] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2    3[COMMON] int 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3371 ;;      Params:         4       0       0       0       0       0       0       0
  3372 ;;      Locals:         0       2       0       0       0       0       0       0
  3373 ;;      Temps:          1       0       0       0       0       0       0       0
  3374 ;;      Totals:         5       2       0       0       0       0       0       0
  3375 ;;Total ram usage:        7 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    2
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_setSegmentDisplayNumber
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function ___awmod
  3387  042E                     ___awmod:	
  3388                           
  3389                           ;incstack = 0
  3390                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3391  042E  0020               	movlb	0	; select bank0
  3392  042F  01A1               	clrf	___awmod@sign
  3393  0430  1FF6               	btfss	___awmod@dividend+1,7
  3394  0431  2C39               	goto	l2242
  3395  0432  09F5               	comf	___awmod@dividend,f
  3396  0433  09F6               	comf	___awmod@dividend+1,f
  3397  0434  0AF5               	incf	___awmod@dividend,f
  3398  0435  1903               	skipnz
  3399  0436  0AF6               	incf	___awmod@dividend+1,f
  3400  0437  01A1               	clrf	___awmod@sign
  3401  0438  0AA1               	incf	___awmod@sign,f
  3402  0439                     l2242:	
  3403  0439  1FF4               	btfss	___awmod@divisor+1,7
  3404  043A  2C40               	goto	l2246
  3405  043B  09F3               	comf	___awmod@divisor,f
  3406  043C  09F4               	comf	___awmod@divisor+1,f
  3407  043D  0AF3               	incf	___awmod@divisor,f
  3408  043E  1903               	skipnz
  3409  043F  0AF4               	incf	___awmod@divisor+1,f
  3410  0440                     l2246:	
  3411  0440  0874               	movf	___awmod@divisor+1,w
  3412  0441  0473               	iorwf	___awmod@divisor,w
  3413  0442  1903               	skipnz
  3414  0443  2C67               	goto	l2264
  3415  0444  01A0               	clrf	___awmod@counter
  3416  0445  0AA0               	incf	___awmod@counter,f
  3417  0446                     l2254:	
  3418  0446  1BF4               	btfsc	___awmod@divisor+1,7
  3419  0447  2C52               	goto	l2256
  3420  0448  3001               	movlw	1
  3421  0449                     u2825:	
  3422  0449  35F3               	lslf	___awmod@divisor,f
  3423  044A  0DF4               	rlf	___awmod@divisor+1,f
  3424  044B  0B89               	decfsz	9,f
  3425  044C  2C49               	goto	u2825
  3426  044D  3001               	movlw	1
  3427  044E  00F7               	movwf	??___awmod
  3428  044F  0877               	movf	??___awmod,w
  3429  0450  07A0               	addwf	___awmod@counter,f
  3430  0451  2C46               	goto	l2254
  3431  0452                     l2256:	
  3432  0452  0874               	movf	___awmod@divisor+1,w
  3433  0453  0276               	subwf	___awmod@dividend+1,w
  3434  0454  1D03               	skipz
  3435  0455  2C58               	goto	u2845
  3436  0456  0873               	movf	___awmod@divisor,w
  3437  0457  0275               	subwf	___awmod@dividend,w
  3438  0458                     u2845:	
  3439  0458  1C03               	skipc
  3440  0459  2C5E               	goto	l2260
  3441  045A  0873               	movf	___awmod@divisor,w
  3442  045B  02F5               	subwf	___awmod@dividend,f
  3443  045C  0874               	movf	___awmod@divisor+1,w
  3444  045D  3BF6               	subwfb	___awmod@dividend+1,f
  3445  045E                     l2260:	
  3446  045E  3001               	movlw	1
  3447  045F                     u2855:	
  3448  045F  36F4               	lsrf	___awmod@divisor+1,f
  3449  0460  0CF3               	rrf	___awmod@divisor,f
  3450  0461  0B89               	decfsz	9,f
  3451  0462  2C5F               	goto	u2855
  3452  0463  3001               	movlw	1
  3453  0464  02A0               	subwf	___awmod@counter,f
  3454  0465  1D03               	btfss	3,2
  3455  0466  2C52               	goto	l2256
  3456  0467                     l2264:	
  3457  0467  0821               	movf	___awmod@sign,w
  3458  0468  1903               	btfsc	3,2
  3459  0469  2C6F               	goto	l2268
  3460  046A  09F5               	comf	___awmod@dividend,f
  3461  046B  09F6               	comf	___awmod@dividend+1,f
  3462  046C  0AF5               	incf	___awmod@dividend,f
  3463  046D  1903               	skipnz
  3464  046E  0AF6               	incf	___awmod@dividend+1,f
  3465  046F                     l2268:	
  3466  046F  0876               	movf	___awmod@dividend+1,w
  3467  0470  01F4               	clrf	?___awmod+1
  3468  0471  07F4               	addwf	?___awmod+1,f
  3469  0472  0875               	movf	___awmod@dividend,w
  3470  0473  01F3               	clrf	?___awmod
  3471  0474  07F3               	addwf	?___awmod,f
  3472  0475  0008               	return
  3473  0476                     __end_of___awmod:	
  3474                           
  3475                           	psect	text19
  3476  03DA                     __ptext19:	
  3477 ;; *************** function ___awdiv *****************
  3478 ;; Defined at:
  3479 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  divisor         2    3[COMMON] int 
  3482 ;;  dividend        2    5[COMMON] int 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  quotient        2    2[BANK0 ] int 
  3485 ;;  sign            1    1[BANK0 ] unsigned char 
  3486 ;;  counter         1    0[BANK0 ] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2    3[COMMON] int 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3496 ;;      Params:         4       0       0       0       0       0       0       0
  3497 ;;      Locals:         0       4       0       0       0       0       0       0
  3498 ;;      Temps:          1       0       0       0       0       0       0       0
  3499 ;;      Totals:         5       4       0       0       0       0       0       0
  3500 ;;Total ram usage:        9 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    2
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_setSegmentDisplayNumber
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function ___awdiv
  3512  03DA                     ___awdiv:	
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3516  03DA  0020               	movlb	0	; select bank0
  3517  03DB  01A1               	clrf	___awdiv@sign
  3518  03DC  1FF4               	btfss	___awdiv@divisor+1,7
  3519  03DD  2BE5               	goto	l1626
  3520  03DE  09F3               	comf	___awdiv@divisor,f
  3521  03DF  09F4               	comf	___awdiv@divisor+1,f
  3522  03E0  0AF3               	incf	___awdiv@divisor,f
  3523  03E1  1903               	skipnz
  3524  03E2  0AF4               	incf	___awdiv@divisor+1,f
  3525  03E3  01A1               	clrf	___awdiv@sign
  3526  03E4  0AA1               	incf	___awdiv@sign,f
  3527  03E5                     l1626:	
  3528  03E5  1FF6               	btfss	___awdiv@dividend+1,7
  3529  03E6  2BF0               	goto	l1632
  3530  03E7  09F5               	comf	___awdiv@dividend,f
  3531  03E8  09F6               	comf	___awdiv@dividend+1,f
  3532  03E9  0AF5               	incf	___awdiv@dividend,f
  3533  03EA  1903               	skipnz
  3534  03EB  0AF6               	incf	___awdiv@dividend+1,f
  3535  03EC  3001               	movlw	1
  3536  03ED  00F7               	movwf	??___awdiv
  3537  03EE  0877               	movf	??___awdiv,w
  3538  03EF  06A1               	xorwf	___awdiv@sign,f
  3539  03F0                     l1632:	
  3540  03F0  01A2               	clrf	___awdiv@quotient
  3541  03F1  01A3               	clrf	___awdiv@quotient+1
  3542  03F2  0874               	movf	___awdiv@divisor+1,w
  3543  03F3  0473               	iorwf	___awdiv@divisor,w
  3544  03F4  1903               	skipnz
  3545  03F5  2C1F               	goto	l1654
  3546  03F6  01A0               	clrf	___awdiv@counter
  3547  03F7  0AA0               	incf	___awdiv@counter,f
  3548  03F8                     l1642:	
  3549  03F8  1BF4               	btfsc	___awdiv@divisor+1,7
  3550  03F9  2C04               	goto	l1644
  3551  03FA  3001               	movlw	1
  3552  03FB                     u1555:	
  3553  03FB  35F3               	lslf	___awdiv@divisor,f
  3554  03FC  0DF4               	rlf	___awdiv@divisor+1,f
  3555  03FD  0B89               	decfsz	9,f
  3556  03FE  2BFB               	goto	u1555
  3557  03FF  3001               	movlw	1
  3558  0400  00F7               	movwf	??___awdiv
  3559  0401  0877               	movf	??___awdiv,w
  3560  0402  07A0               	addwf	___awdiv@counter,f
  3561  0403  2BF8               	goto	l1642
  3562  0404                     l1644:	
  3563  0404  3001               	movlw	1
  3564  0405                     u1575:	
  3565  0405  35A2               	lslf	___awdiv@quotient,f
  3566  0406  0DA3               	rlf	___awdiv@quotient+1,f
  3567  0407  0B89               	decfsz	9,f
  3568  0408  2C05               	goto	u1575
  3569  0409  0874               	movf	___awdiv@divisor+1,w
  3570  040A  0276               	subwf	___awdiv@dividend+1,w
  3571  040B  1D03               	skipz
  3572  040C  2C0F               	goto	u1585
  3573  040D  0873               	movf	___awdiv@divisor,w
  3574  040E  0275               	subwf	___awdiv@dividend,w
  3575  040F                     u1585:	
  3576  040F  1C03               	skipc
  3577  0410  2C16               	goto	l1650
  3578  0411  0873               	movf	___awdiv@divisor,w
  3579  0412  02F5               	subwf	___awdiv@dividend,f
  3580  0413  0874               	movf	___awdiv@divisor+1,w
  3581  0414  3BF6               	subwfb	___awdiv@dividend+1,f
  3582  0415  1422               	bsf	___awdiv@quotient,0
  3583  0416                     l1650:	
  3584  0416  3001               	movlw	1
  3585  0417                     u1595:	
  3586  0417  36F4               	lsrf	___awdiv@divisor+1,f
  3587  0418  0CF3               	rrf	___awdiv@divisor,f
  3588  0419  0B89               	decfsz	9,f
  3589  041A  2C17               	goto	u1595
  3590  041B  3001               	movlw	1
  3591  041C  02A0               	subwf	___awdiv@counter,f
  3592  041D  1D03               	btfss	3,2
  3593  041E  2C04               	goto	l1644
  3594  041F                     l1654:	
  3595  041F  0821               	movf	___awdiv@sign,w
  3596  0420  1903               	btfsc	3,2
  3597  0421  2C27               	goto	l1658
  3598  0422  09A2               	comf	___awdiv@quotient,f
  3599  0423  09A3               	comf	___awdiv@quotient+1,f
  3600  0424  0AA2               	incf	___awdiv@quotient,f
  3601  0425  1903               	skipnz
  3602  0426  0AA3               	incf	___awdiv@quotient+1,f
  3603  0427                     l1658:	
  3604  0427  0823               	movf	___awdiv@quotient+1,w
  3605  0428  01F4               	clrf	?___awdiv+1
  3606  0429  07F4               	addwf	?___awdiv+1,f
  3607  042A  0822               	movf	___awdiv@quotient,w
  3608  042B  01F3               	clrf	?___awdiv
  3609  042C  07F3               	addwf	?___awdiv,f
  3610  042D  0008               	return
  3611  042E                     __end_of___awdiv:	
  3612                           
  3613                           	psect	text20
  3614  0367                     __ptext20:	
  3615 ;; *************** function _I2C_Main *****************
  3616 ;; Defined at:
  3617 ;;		line 275 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  i               1    0[BANK0 ] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;		None               void
  3624 ;; Registers used:
  3625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3631 ;;      Params:         0       0       0       0       0       0       0       0
  3632 ;;      Locals:         0       1       0       0       0       0       0       0
  3633 ;;      Temps:          3       0       0       0       0       0       0       0
  3634 ;;      Totals:         3       1       0       0       0       0       0       0
  3635 ;;Total ram usage:        4 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    3
  3638 ;; This function calls:
  3639 ;;		_I2C_Master_Reception
  3640 ;;		_I2C_Master_Transmission
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _I2C_Main
  3648  0367                     _I2C_Main:	
  3649                           
  3650                           ;MCU_16f1516_B1.c: 277: char i;
  3651                           ;MCU_16f1516_B1.c: 302: if(I2C->MasterRxGO)
  3652                           
  3653                           ;incstack = 0
  3654                           ; Regs used in _I2C_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3655  0367  0020               	movlb	0	; select bank0
  3656  0368  0856               	movf	_I2C,w
  3657  0369  3E42               	addlw	66
  3658  036A  0086               	movwf	6
  3659  036B  3001               	movlw	1	; select bank2/3
  3660  036C  0087               	movwf	7
  3661  036D  1E01               	btfss	1,4
  3662  036E  2BA7               	goto	l325
  3663                           
  3664                           ;MCU_16f1516_B1.c: 303: {
  3665                           ;MCU_16f1516_B1.c: 304: I2C->MasterRxGO=0;
  3666  036F  0856               	movf	_I2C,w
  3667  0370  3E42               	addlw	66
  3668  0371  0086               	movwf	6
  3669  0372  3001               	movlw	1	; select bank2/3
  3670  0373  0087               	movwf	7
  3671  0374  1201               	bcf	1,4
  3672                           
  3673                           ;MCU_16f1516_B1.c: 305: I2C_Master_Reception();
  3674  0375  3184  2476  3183   	fcall	_I2C_Master_Reception
  3675                           
  3676                           ;MCU_16f1516_B1.c: 306: TMain->Test=1;
  3677  0378  0020               	movlb	0	; select bank0
  3678  0379  086B               	movf	_TMain,w
  3679  037A  3E0C               	addlw	12
  3680  037B  0086               	movwf	6
  3681  037C  0187               	clrf	7
  3682  037D  0181               	clrf	1
  3683  037E  0A81               	incf	1,f
  3684                           
  3685                           ;MCU_16f1516_B1.c: 307: RA1=~RA1;
  3686  037F  3002               	movlw	2
  3687  0380  068C               	xorwf	12,f
  3688                           
  3689                           ;MCU_16f1516_B1.c: 309: for(i=0;i<32;i++)
  3690  0381  01A0               	clrf	I2C_Main@i
  3691  0382  3020               	movlw	32
  3692  0383  0220               	subwf	I2C_Main@i,w
  3693  0384  1803               	btfsc	3,0
  3694  0385  2BA0               	goto	l2436
  3695  0386                     l2430:	
  3696                           
  3697                           ;MCU_16f1516_B1.c: 310: {
  3698                           ;MCU_16f1516_B1.c: 311: UART->TxData[i]=I2C->BufferReader[i];
  3699  0386  0820               	movf	I2C_Main@i,w
  3700  0387  0756               	addwf	_I2C,w
  3701  0388  00F6               	movwf	??_I2C_Main
  3702  0389  0876               	movf	??_I2C_Main,w
  3703  038A  0086               	movwf	6
  3704  038B  3001               	movlw	1	; select bank2/3
  3705  038C  0087               	movwf	7
  3706  038D  0801               	movf	1,w
  3707  038E  00F7               	movwf	??_I2C_Main+1
  3708  038F  0820               	movf	I2C_Main@i,w
  3709  0390  0757               	addwf	_UART,w
  3710  0391  00F8               	movwf	??_I2C_Main+2
  3711  0392  0878               	movf	??_I2C_Main+2,w
  3712  0393  0086               	movwf	6
  3713  0394  3001               	movlw	1	; select bank2/3
  3714  0395  0087               	movwf	7
  3715  0396  0877               	movf	??_I2C_Main+1,w
  3716  0397  0081               	movwf	1
  3717  0398  3001               	movlw	1
  3718  0399  00F6               	movwf	??_I2C_Main
  3719  039A  0876               	movf	??_I2C_Main,w
  3720  039B  07A0               	addwf	I2C_Main@i,f
  3721  039C  3020               	movlw	32
  3722  039D  0220               	subwf	I2C_Main@i,w
  3723  039E  1C03               	skipc
  3724  039F  2B86               	goto	l2430
  3725  03A0                     l2436:	
  3726                           
  3727                           ;MCU_16f1516_B1.c: 312: }
  3728                           ;MCU_16f1516_B1.c: 313: UART->TxGO=1;
  3729  03A0  0857               	movf	_UART,w
  3730  03A1  3E43               	addlw	67
  3731  03A2  0086               	movwf	6
  3732  03A3  3001               	movlw	1	; select bank2/3
  3733  03A4  0087               	movwf	7
  3734  03A5  1401               	bsf	1,0
  3735                           
  3736                           ;MCU_16f1516_B1.c: 315: }
  3737  03A6  0008               	return
  3738  03A7                     l325:	
  3739                           
  3740                           ;MCU_16f1516_B1.c: 316: else
  3741                           ;MCU_16f1516_B1.c: 317: {
  3742                           ;MCU_16f1516_B1.c: 318: if(RC0)
  3743  03A7  1C0E               	btfss	14,0	;volatile
  3744  03A8  2BBD               	goto	l2442
  3745                           
  3746                           ;MCU_16f1516_B1.c: 319: {
  3747                           ;MCU_16f1516_B1.c: 320: if(!I2C->SS)
  3748  03A9  0856               	movf	_I2C,w
  3749  03AA  3E42               	addlw	66
  3750  03AB  0086               	movwf	6
  3751  03AC  3001               	movlw	1	; select bank2/3
  3752  03AD  0087               	movwf	7
  3753  03AE  1A81               	btfsc	1,5
  3754  03AF  0008               	return
  3755                           
  3756                           ;MCU_16f1516_B1.c: 321: {
  3757                           ;MCU_16f1516_B1.c: 322: I2C->SS=1;
  3758  03B0  0856               	movf	_I2C,w
  3759  03B1  3E42               	addlw	66
  3760  03B2  0086               	movwf	6
  3761  03B3  3001               	movlw	1	; select bank2/3
  3762  03B4  0087               	movwf	7
  3763  03B5  1681               	bsf	1,5
  3764                           
  3765                           ;MCU_16f1516_B1.c: 323: I2C->MasterRxGO=1;
  3766  03B6  0856               	movf	_I2C,w
  3767  03B7  3E42               	addlw	66
  3768  03B8  0086               	movwf	6
  3769  03B9  3001               	movlw	1	; select bank2/3
  3770  03BA  0087               	movwf	7
  3771  03BB  1601               	bsf	1,4
  3772                           
  3773                           ;MCU_16f1516_B1.c: 324: }
  3774                           ;MCU_16f1516_B1.c: 325: }
  3775  03BC  0008               	return
  3776  03BD                     l2442:	
  3777                           
  3778                           ;MCU_16f1516_B1.c: 326: else
  3779                           ;MCU_16f1516_B1.c: 327: {
  3780                           ;MCU_16f1516_B1.c: 328: if(I2C->SS)
  3781  03BD  0856               	movf	_I2C,w
  3782  03BE  3E42               	addlw	66
  3783  03BF  0086               	movwf	6
  3784  03C0  3001               	movlw	1	; select bank2/3
  3785  03C1  0087               	movwf	7
  3786  03C2  1E81               	btfss	1,5
  3787  03C3  2BCA               	goto	l332
  3788                           
  3789                           ;MCU_16f1516_B1.c: 329: {
  3790                           ;MCU_16f1516_B1.c: 330: I2C->SS=0;
  3791  03C4  0856               	movf	_I2C,w
  3792  03C5  3E42               	addlw	66
  3793  03C6  0086               	movwf	6
  3794  03C7  3001               	movlw	1	; select bank2/3
  3795  03C8  0087               	movwf	7
  3796  03C9  1281               	bcf	1,5
  3797  03CA                     l332:	
  3798                           
  3799                           ;MCU_16f1516_B1.c: 331: }
  3800                           ;MCU_16f1516_B1.c: 332: if(I2C->MasterTxGO)
  3801  03CA  0856               	movf	_I2C,w
  3802  03CB  3E42               	addlw	66
  3803  03CC  0086               	movwf	6
  3804  03CD  3001               	movlw	1	; select bank2/3
  3805  03CE  0087               	movwf	7
  3806  03CF  1D81               	btfss	1,3
  3807  03D0  0008               	return
  3808                           
  3809                           ;MCU_16f1516_B1.c: 333: {
  3810                           ;MCU_16f1516_B1.c: 334: I2C->MasterTxGO=0;
  3811  03D1  0856               	movf	_I2C,w
  3812  03D2  3E42               	addlw	66
  3813  03D3  0086               	movwf	6
  3814  03D4  3001               	movlw	1	; select bank2/3
  3815  03D5  0087               	movwf	7
  3816  03D6  1181               	bcf	1,3
  3817                           
  3818                           ;MCU_16f1516_B1.c: 335: I2C_Master_Transmission();
  3819  03D7  3185  252A         	fcall	_I2C_Master_Transmission
  3820  03D9  0008               	return
  3821  03DA                     __end_of_I2C_Main:	
  3822                           
  3823                           	psect	text21
  3824  052A                     __ptext21:	
  3825 ;; *************** function _I2C_Master_Transmission *****************
  3826 ;; Defined at:
  3827 ;;		line 375 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  i               1    4[COMMON] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;		None               void
  3834 ;; Registers used:
  3835 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3841 ;;      Params:         0       0       0       0       0       0       0       0
  3842 ;;      Locals:         1       0       0       0       0       0       0       0
  3843 ;;      Temps:          1       0       0       0       0       0       0       0
  3844 ;;      Totals:         2       0       0       0       0       0       0       0
  3845 ;;Total ram usage:        2 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    2
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_I2C_Main
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           
  3856                           ;psect for function _I2C_Master_Transmission
  3857  052A                     _I2C_Master_Transmission:	
  3858  052A                     l340:	
  3859                           ;MCU_16f1516_B1.c: 377: char i;
  3860                           ;MCU_16f1516_B1.c: 378: while(SEN);
  3861                           
  3862                           ;incstack = 0
  3863                           ; Regs used in _I2C_Master_Transmission: [wreg+fsr1l+fsr1h+status,2+status,0]
  3864                           
  3865  052A  0024               	movlb	4	; select bank4
  3866  052B  1816               	btfsc	22,0	;volatile
  3867  052C  2D2A               	goto	l340
  3868                           
  3869                           ;MCU_16f1516_B1.c: 379: SEN=1;
  3870  052D  1416               	bsf	22,0	;volatile
  3871  052E                     l343:	
  3872                           ;MCU_16f1516_B1.c: 381: while(SEN);
  3873                           
  3874  052E  1816               	btfsc	22,0	;volatile
  3875  052F  2D2E               	goto	l343
  3876                           
  3877                           ;MCU_16f1516_B1.c: 384: SSPBUF=0x10;
  3878  0530  3010               	movlw	16
  3879  0531  0091               	movwf	17	;volatile
  3880  0532                     l346:	
  3881                           ;MCU_16f1516_B1.c: 385: while(BF);
  3882                           
  3883  0532  1814               	btfsc	20,0	;volatile
  3884  0533  2D32               	goto	l346
  3885  0534                     l349:	
  3886                           ;MCU_16f1516_B1.c: 388: while(ACKSTAT);
  3887                           
  3888  0534  1B16               	btfsc	22,6	;volatile
  3889  0535  2D34               	goto	l349
  3890                           
  3891                           ;MCU_16f1516_B1.c: 390: for(i=0;i<32;i++)
  3892  0536  01F4               	clrf	I2C_Master_Transmission@i
  3893  0537  3020               	movlw	32
  3894  0538  0274               	subwf	I2C_Master_Transmission@i,w
  3895  0539  1803               	btfsc	3,0
  3896  053A  2D55               	goto	l363
  3897  053B                     l354:	
  3898                           ;MCU_16f1516_B1.c: 391: {
  3899                           ;MCU_16f1516_B1.c: 392: while(SEN);
  3900                           
  3901  053B  1816               	btfsc	22,0	;volatile
  3902  053C  2D3B               	goto	l354
  3903                           
  3904                           ;MCU_16f1516_B1.c: 393: SSPBUF=I2C->BufferWriter[i];
  3905  053D  0874               	movf	I2C_Master_Transmission@i,w
  3906  053E  3E20               	addlw	32
  3907  053F  0020               	movlb	0	; select bank0
  3908  0540  0756               	addwf	_I2C,w
  3909  0541  00F3               	movwf	??_I2C_Master_Transmission
  3910  0542  0873               	movf	??_I2C_Master_Transmission,w
  3911  0543  0086               	movwf	6
  3912  0544  3001               	movlw	1	; select bank2/3
  3913  0545  0087               	movwf	7
  3914  0546  0801               	movf	1,w
  3915  0547  0024               	movlb	4	; select bank4
  3916  0548  0091               	movwf	17	;volatile
  3917  0549                     l357:	
  3918                           ;MCU_16f1516_B1.c: 394: while(BF);
  3919                           
  3920  0549  1814               	btfsc	20,0	;volatile
  3921  054A  2D49               	goto	l357
  3922  054B                     l360:	
  3923                           ;MCU_16f1516_B1.c: 397: while(ACKSTAT);
  3924                           
  3925  054B  1B16               	btfsc	22,6	;volatile
  3926  054C  2D4B               	goto	l360
  3927  054D  3001               	movlw	1
  3928  054E  00F3               	movwf	??_I2C_Master_Transmission
  3929  054F  0873               	movf	??_I2C_Master_Transmission,w
  3930  0550  07F4               	addwf	I2C_Master_Transmission@i,f
  3931  0551  3020               	movlw	32
  3932  0552  0274               	subwf	I2C_Master_Transmission@i,w
  3933  0553  1C03               	skipc
  3934  0554  2D3B               	goto	l354
  3935  0555                     l363:	
  3936                           ;MCU_16f1516_B1.c: 398: }
  3937                           ;MCU_16f1516_B1.c: 400: while(SEN);
  3938                           
  3939  0555  1C16               	btfss	22,0	;volatile
  3940  0556  2D59               	goto	l366
  3941  0557  2D55               	goto	l363
  3942  0558                     l367:	
  3943                           ;MCU_16f1516_B1.c: 401: while(!PEN)
  3944                           
  3945                           
  3946                           ;MCU_16f1516_B1.c: 402: PEN=1;
  3947  0558  1516               	bsf	22,2	;volatile
  3948  0559                     l366:	
  3949  0559  1D16               	btfss	22,2	;volatile
  3950  055A  2D58               	goto	l367
  3951  055B                     l369:	
  3952                           ;MCU_16f1516_B1.c: 403: while(PEN);
  3953                           
  3954  055B  1D16               	btfss	22,2	;volatile
  3955  055C  0008               	return
  3956  055D  2D5B               	goto	l369
  3957  055E                     __end_of_I2C_Master_Transmission:	
  3958                           
  3959                           	psect	text22
  3960  0476                     __ptext22:	
  3961 ;; *************** function _I2C_Master_Reception *****************
  3962 ;; Defined at:
  3963 ;;		line 408 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  i               1    5[COMMON] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;		None               void
  3970 ;; Registers used:
  3971 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3977 ;;      Params:         0       0       0       0       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0       0       0       0
  3979 ;;      Temps:          2       0       0       0       0       0       0       0
  3980 ;;      Totals:         3       0       0       0       0       0       0       0
  3981 ;;Total ram usage:        3 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    2
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_I2C_Main
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _I2C_Master_Reception
  3993  0476                     _I2C_Master_Reception:	
  3994  0476                     l375:	
  3995                           ;MCU_16f1516_B1.c: 410: char i;
  3996                           ;MCU_16f1516_B1.c: 411: while(SEN);
  3997                           
  3998                           ;incstack = 0
  3999                           ; Regs used in _I2C_Master_Reception: [wreg+fsr1l+fsr1h+status,2+status,0]
  4000                           
  4001  0476  0024               	movlb	4	; select bank4
  4002  0477  1816               	btfsc	22,0	;volatile
  4003  0478  2C76               	goto	l375
  4004                           
  4005                           ;MCU_16f1516_B1.c: 412: SEN=1;
  4006  0479  1416               	bsf	22,0	;volatile
  4007  047A                     l378:	
  4008                           ;MCU_16f1516_B1.c: 413: while(SEN);
  4009                           
  4010  047A  1816               	btfsc	22,0	;volatile
  4011  047B  2C7A               	goto	l378
  4012                           
  4013                           ;MCU_16f1516_B1.c: 416: SSPBUF=0x11;
  4014  047C  3011               	movlw	17
  4015  047D  0091               	movwf	17	;volatile
  4016  047E                     l381:	
  4017                           ;MCU_16f1516_B1.c: 419: while(BF);
  4018                           
  4019  047E  1814               	btfsc	20,0	;volatile
  4020  047F  2C7E               	goto	l381
  4021  0480                     l384:	
  4022                           ;MCU_16f1516_B1.c: 420: while(ACKSTAT);
  4023                           
  4024  0480  1B16               	btfsc	22,6	;volatile
  4025  0481  2C80               	goto	l384
  4026                           
  4027                           ;MCU_16f1516_B1.c: 423: for(i=0;i<32;i++)
  4028  0482  01F5               	clrf	I2C_Master_Reception@i
  4029  0483  3020               	movlw	32
  4030  0484  0275               	subwf	I2C_Master_Reception@i,w
  4031  0485  1803               	btfsc	3,0
  4032  0486  2CA9               	goto	l404
  4033  0487                     l389:	
  4034                           ;MCU_16f1516_B1.c: 424: {
  4035                           ;MCU_16f1516_B1.c: 425: while(SEN);
  4036                           
  4037  0487  1816               	btfsc	22,0	;volatile
  4038  0488  2C87               	goto	l389
  4039  0489                     l392:	
  4040                           ;MCU_16f1516_B1.c: 426: while(RCEN);
  4041                           
  4042  0489  1996               	btfsc	22,3	;volatile
  4043  048A  2C89               	goto	l392
  4044                           
  4045                           ;MCU_16f1516_B1.c: 427: RCEN=1;
  4046  048B  1596               	bsf	22,3	;volatile
  4047  048C                     l395:	
  4048                           ;MCU_16f1516_B1.c: 428: while(RCEN);
  4049                           
  4050  048C  1996               	btfsc	22,3	;volatile
  4051  048D  2C8C               	goto	l395
  4052                           
  4053                           ;MCU_16f1516_B1.c: 429: I2C->BufferReader[i]=SSPBUF;
  4054  048E  0811               	movf	17,w	;volatile
  4055  048F  00F3               	movwf	??_I2C_Master_Reception
  4056  0490  0875               	movf	I2C_Master_Reception@i,w
  4057  0491  0020               	movlb	0	; select bank0
  4058  0492  0756               	addwf	_I2C,w
  4059  0493  00F4               	movwf	??_I2C_Master_Reception+1
  4060  0494  0874               	movf	??_I2C_Master_Reception+1,w
  4061  0495  0086               	movwf	6
  4062  0496  3001               	movlw	1	; select bank2/3
  4063  0497  0087               	movwf	7
  4064  0498  0873               	movf	??_I2C_Master_Reception,w
  4065  0499  0081               	movwf	1
  4066  049A                     l398:	
  4067                           ;MCU_16f1516_B1.c: 430: while(!ACKEN)
  4068                           
  4069  049A  0024               	movlb	4	; select bank4
  4070  049B  1A16               	btfsc	22,4	;volatile
  4071  049C  2C9F               	goto	l401
  4072                           
  4073                           ;MCU_16f1516_B1.c: 431: ACKEN=1;
  4074  049D  1616               	bsf	22,4	;volatile
  4075  049E  2C9A               	goto	l398
  4076  049F                     l401:	
  4077                           ;MCU_16f1516_B1.c: 432: while(ACKEN);
  4078                           
  4079  049F  1A16               	btfsc	22,4	;volatile
  4080  04A0  2C9F               	goto	l401
  4081  04A1  3001               	movlw	1
  4082  04A2  00F3               	movwf	??_I2C_Master_Reception
  4083  04A3  0873               	movf	??_I2C_Master_Reception,w
  4084  04A4  07F5               	addwf	I2C_Master_Reception@i,f
  4085  04A5  3020               	movlw	32
  4086  04A6  0275               	subwf	I2C_Master_Reception@i,w
  4087  04A7  1C03               	skipc
  4088  04A8  2C87               	goto	l389
  4089  04A9                     l404:	
  4090                           ;MCU_16f1516_B1.c: 433: }
  4091                           ;MCU_16f1516_B1.c: 434: while(RCEN);
  4092                           
  4093  04A9  1996               	btfsc	22,3	;volatile
  4094  04AA  2CA9               	goto	l404
  4095                           
  4096                           ;MCU_16f1516_B1.c: 435: RCEN=1;
  4097  04AB  1596               	bsf	22,3	;volatile
  4098  04AC                     l407:	
  4099                           ;MCU_16f1516_B1.c: 436: while(RCEN);
  4100                           
  4101  04AC  1996               	btfsc	22,3	;volatile
  4102  04AD  2CAC               	goto	l407
  4103  04AE                     l410:	
  4104                           ;MCU_16f1516_B1.c: 438: while(SEN);
  4105                           
  4106  04AE  1C16               	btfss	22,0	;volatile
  4107  04AF  2CB2               	goto	l413
  4108  04B0  2CAE               	goto	l410
  4109  04B1                     l414:	
  4110                           ;MCU_16f1516_B1.c: 439: while(!PEN)
  4111                           
  4112                           
  4113                           ;MCU_16f1516_B1.c: 440: PEN=1;
  4114  04B1  1516               	bsf	22,2	;volatile
  4115  04B2                     l413:	
  4116  04B2  1D16               	btfss	22,2	;volatile
  4117  04B3  2CB1               	goto	l414
  4118  04B4                     l416:	
  4119                           ;MCU_16f1516_B1.c: 441: while(PEN);
  4120                           
  4121  04B4  1D16               	btfss	22,2	;volatile
  4122  04B5  0008               	return
  4123  04B6  2CB4               	goto	l416
  4124  04B7                     __end_of_I2C_Master_Reception:	
  4125                           
  4126                           	psect	intentry
  4127  0004                     __pintentry:	
  4128 ;; *************** function _ISR *****************
  4129 ;; Defined at:
  4130 ;;		line 56 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;		None               void
  4137 ;; Registers used:
  4138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4144 ;;      Params:         0       0       0       0       0       0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0
  4146 ;;      Temps:          1       0       0       0       0       0       0       0
  4147 ;;      Totals:         1       0       0       0       0       0       0       0
  4148 ;;Total ram usage:        1 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    1
  4151 ;; This function calls:
  4152 ;;		_I2C_ISR
  4153 ;;		_TMR1_ISR
  4154 ;;		_UART_ISR
  4155 ;; This function is called by:
  4156 ;;		Interrupt level 1
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160  0004                     _ISR:	
  4161                           
  4162                           ;incstack = 0
  4163                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4164  0004  147E               	bsf	126,0	;set compiler interrupt flag
  4165  0005  3180               	pagesel	$
  4166  0006  0020               	movlb	0	; select bank0
  4167  0007  087F               	movf	127,w
  4168  0008  00F2               	movwf	??_ISR
  4169                           
  4170                           ;MCU_16f1516_B1.c: 58: __nop();
  4171  0009  0000               	nop
  4172                           
  4173                           ;MCU_16f1516_B1.c: 60: __nop();
  4174  000A  0000               	nop
  4175                           
  4176                           ;MCU_16f1516_B1.c: 62: TMR1_ISR();
  4177  000B  3185  25BC  3180   	fcall	_TMR1_ISR
  4178                           
  4179                           ;MCU_16f1516_B1.c: 66: __nop();
  4180  000E  0000               	nop
  4181                           
  4182                           ;MCU_16f1516_B1.c: 68: UART_ISR();
  4183  000F  3184  24B7  3180   	fcall	_UART_ISR
  4184                           
  4185                           ;MCU_16f1516_B1.c: 70: I2C_ISR();
  4186  0012  3186  26F1         	fcall	_I2C_ISR
  4187  0014  0872               	movf	??_ISR,w
  4188  0015  0020               	movlb	0	; select bank0
  4189  0016  00FF               	movwf	127
  4190  0017  107E               	bcf	126,0	;clear compiler interrupt flag
  4191  0018  0009               	retfie
  4192  0019                     __end_of_ISR:	
  4193                           
  4194                           	psect	text24
  4195  04B7                     __ptext24:	
  4196 ;; *************** function _UART_ISR *****************
  4197 ;; Defined at:
  4198 ;;		line 507 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  i               1    0        unsigned char 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;		None               void
  4205 ;; Registers used:
  4206 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4212 ;;      Params:         0       0       0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0
  4214 ;;      Temps:          2       0       0       0       0       0       0       0
  4215 ;;      Totals:         2       0       0       0       0       0       0       0
  4216 ;;Total ram usage:        2 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_ISR
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           
  4226                           ;psect for function _UART_ISR
  4227  04B7                     _UART_ISR:	
  4228                           
  4229                           ;MCU_16f1516_B1.c: 509: char i;
  4230                           ;MCU_16f1516_B1.c: 510: if(RCIE && RCIF)
  4231                           
  4232                           ;incstack = 0
  4233                           ; Regs used in _UART_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4234  04B7  0021               	movlb	1	; select bank1
  4235  04B8  1E91               	btfss	17,5	;volatile
  4236  04B9  0008               	return
  4237  04BA  0020               	movlb	0	; select bank0
  4238  04BB  1E91               	btfss	17,5	;volatile
  4239  04BC  0008               	return
  4240  04BD                     i1l444:	
  4241                           ;MCU_16f1516_B1.c: 511: {
  4242                           ;MCU_16f1516_B1.c: 512: while(!RCIDL);
  4243                           
  4244  04BD  0023               	movlb	3	; select bank3
  4245  04BE  1F1F               	btfss	31,6	;volatile
  4246  04BF  2CBD               	goto	i1l444
  4247                           
  4248                           ;MCU_16f1516_B1.c: 513: UART->RxData[UART->RxLength]=RCREG;
  4249  04C0  0819               	movf	25,w	;volatile
  4250  04C1  00F0               	movwf	??_UART_ISR
  4251  04C2  0020               	movlb	0	; select bank0
  4252  04C3  0857               	movf	_UART,w
  4253  04C4  3E42               	addlw	66
  4254  04C5  0086               	movwf	6
  4255  04C6  3001               	movlw	1	; select bank2/3
  4256  04C7  0087               	movwf	7
  4257  04C8  0801               	movf	1,w
  4258  04C9  3E20               	addlw	32
  4259  04CA  0757               	addwf	_UART,w
  4260  04CB  00F1               	movwf	??_UART_ISR+1
  4261  04CC  0871               	movf	??_UART_ISR+1,w
  4262  04CD  0086               	movwf	6
  4263  04CE  3001               	movlw	1	; select bank2/3
  4264  04CF  0087               	movwf	7
  4265  04D0  0870               	movf	??_UART_ISR,w
  4266  04D1  0081               	movwf	1
  4267                           
  4268                           ;MCU_16f1516_B1.c: 515: UART->RxLength++;
  4269  04D2  3001               	movlw	1
  4270  04D3  00F0               	movwf	??_UART_ISR
  4271  04D4  0857               	movf	_UART,w
  4272  04D5  3E42               	addlw	66
  4273  04D6  0086               	movwf	6
  4274  04D7  3001               	movlw	1	; select bank2/3
  4275  04D8  0087               	movwf	7
  4276  04D9  0870               	movf	??_UART_ISR,w
  4277  04DA  0781               	addwf	1,f
  4278                           
  4279                           ;MCU_16f1516_B1.c: 516: if(UART->RxLength == 32)
  4280  04DB  0857               	movf	_UART,w
  4281  04DC  3E42               	addlw	66
  4282  04DD  0086               	movwf	6
  4283  04DE  3001               	movlw	1	; select bank2/3
  4284  04DF  0087               	movwf	7
  4285  04E0  0801               	movf	1,w
  4286  04E1  3A20               	xorlw	32
  4287  04E2  1D03               	skipz
  4288  04E3  0008               	return
  4289                           
  4290                           ;MCU_16f1516_B1.c: 517: {
  4291                           ;MCU_16f1516_B1.c: 518: UART->RxLength=0;
  4292  04E4  0857               	movf	_UART,w
  4293  04E5  3E42               	addlw	66
  4294  04E6  0086               	movwf	6
  4295  04E7  3001               	movlw	1	; select bank2/3
  4296  04E8  0087               	movwf	7
  4297  04E9  0181               	clrf	1
  4298                           
  4299                           ;MCU_16f1516_B1.c: 519: UART->RxGO=1;
  4300  04EA  0857               	movf	_UART,w
  4301  04EB  3E43               	addlw	67
  4302  04EC  0086               	movwf	6
  4303  04ED  3001               	movlw	1	; select bank2/3
  4304  04EE  0087               	movwf	7
  4305  04EF  1481               	bsf	1,1
  4306                           
  4307                           ;MCU_16f1516_B1.c: 520: RCIE=0;
  4308  04F0  0021               	movlb	1	; select bank1
  4309  04F1  1291               	bcf	17,5	;volatile
  4310  04F2  0008               	return
  4311  04F3                     __end_of_UART_ISR:	
  4312                           
  4313                           	psect	text25
  4314  05BC                     __ptext25:	
  4315 ;; *************** function _TMR1_ISR *****************
  4316 ;; Defined at:
  4317 ;;		line 125 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;		None               void
  4324 ;; Registers used:
  4325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4331 ;;      Params:         0       0       0       0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0
  4334 ;;      Totals:         0       0       0       0       0       0       0       0
  4335 ;;Total ram usage:        0 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_ISR
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _TMR1_ISR
  4346  05BC                     _TMR1_ISR:	
  4347                           
  4348                           ;MCU_16f1516_B1.c: 127: if(TMR1IE && TMR1IF)
  4349                           
  4350                           ;incstack = 0
  4351                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4352  05BC  0021               	movlb	1	; select bank1
  4353  05BD  1C11               	btfss	17,0	;volatile
  4354  05BE  0008               	return
  4355  05BF  0020               	movlb	0	; select bank0
  4356  05C0  1C11               	btfss	17,0	;volatile
  4357  05C1  0008               	return
  4358                           
  4359                           ;MCU_16f1516_B1.c: 128: {
  4360                           ;MCU_16f1516_B1.c: 129: TMR1H=((65536-700)/256);
  4361  05C2  30FD               	movlw	253
  4362  05C3  0097               	movwf	23	;volatile
  4363                           
  4364                           ;MCU_16f1516_B1.c: 130: TMR1L=((65536-700)%256);
  4365  05C4  3044               	movlw	68
  4366  05C5  0096               	movwf	22	;volatile
  4367                           
  4368                           ;MCU_16f1516_B1.c: 131: TMR1IF=0;
  4369  05C6  1011               	bcf	17,0	;volatile
  4370                           
  4371                           ;MCU_16f1516_B1.c: 132: Timer1->Count++;
  4372  05C7  0A7A               	incf	_Timer1,w
  4373  05C8  0086               	movwf	6
  4374  05C9  0187               	clrf	7
  4375  05CA  3001               	movlw	1
  4376  05CB  0781               	addwf	1,f
  4377  05CC  3141               	addfsr 1,1
  4378  05CD  1803               	skipnc
  4379  05CE  0A81               	incf	1,f
  4380                           
  4381                           ;MCU_16f1516_B1.c: 133: if(Timer1->Count == 20)
  4382  05CF  0A7A               	incf	_Timer1,w
  4383  05D0  0086               	movwf	6
  4384  05D1  0187               	clrf	7
  4385  05D2  3F40               	moviw [0]fsr1
  4386  05D3  3A14               	xorlw	20
  4387  05D4  1D03               	skipz
  4388  05D5  2DD8               	goto	u241_25
  4389  05D6  3F41               	moviw [1]fsr1
  4390  05D7  3A00               	xorlw	0
  4391  05D8                     u241_25:	
  4392  05D8  1D03               	skipz
  4393  05D9  0008               	return
  4394                           
  4395                           ;MCU_16f1516_B1.c: 134: {
  4396                           ;MCU_16f1516_B1.c: 135: Timer1->Count=0;
  4397  05DA  0A7A               	incf	_Timer1,w
  4398  05DB  0086               	movwf	6
  4399  05DC  0187               	clrf	7
  4400  05DD  3000               	movlw	0
  4401  05DE  3FC0               	movwi [0]fsr1
  4402  05DF  3FC1               	movwi [1]fsr1
  4403                           
  4404                           ;MCU_16f1516_B1.c: 136: TMain->T1_Timerout=1;
  4405  05E0  086B               	movf	_TMain,w
  4406  05E1  0086               	movwf	6
  4407  05E2  0187               	clrf	7
  4408  05E3  1501               	bsf	1,2
  4409  05E4  0008               	return
  4410  05E5                     __end_of_TMR1_ISR:	
  4411                           
  4412                           	psect	text26
  4413  06F1                     __ptext26:	
  4414 ;; *************** function _I2C_ISR *****************
  4415 ;; Defined at:
  4416 ;;		line 260 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;		None
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;		None
  4421 ;; Return value:  Size  Location     Type
  4422 ;;		None               void
  4423 ;; Registers used:
  4424 ;;		wreg, fsr1l, fsr1h
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4430 ;;      Params:         0       0       0       0       0       0       0       0
  4431 ;;      Locals:         0       0       0       0       0       0       0       0
  4432 ;;      Temps:          0       0       0       0       0       0       0       0
  4433 ;;      Totals:         0       0       0       0       0       0       0       0
  4434 ;;Total ram usage:        0 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_ISR
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           
  4444                           ;psect for function _I2C_ISR
  4445  06F1                     _I2C_ISR:	
  4446                           
  4447                           ;MCU_16f1516_B1.c: 262: if(SSPIE && SSPIF)
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in _I2C_ISR: [wregfsr1]
  4451  06F1  0021               	movlb	1	; select bank1
  4452  06F2  1D91               	btfss	17,3	;volatile
  4453  06F3  0008               	return
  4454  06F4  0020               	movlb	0	; select bank0
  4455  06F5  1D91               	btfss	17,3	;volatile
  4456  06F6  0008               	return
  4457                           
  4458                           ;MCU_16f1516_B1.c: 263: {
  4459                           ;MCU_16f1516_B1.c: 264: SSPIE=0;
  4460  06F7  0021               	movlb	1	; select bank1
  4461  06F8  1191               	bcf	17,3	;volatile
  4462                           
  4463                           ;MCU_16f1516_B1.c: 265: I2C->SlaveGO=1;
  4464  06F9  0020               	movlb	0	; select bank0
  4465  06FA  0856               	movf	_I2C,w
  4466  06FB  3E42               	addlw	66
  4467  06FC  0086               	movwf	6
  4468  06FD  3001               	movlw	1	; select bank2/3
  4469  06FE  0087               	movwf	7
  4470  06FF  1401               	bsf	1,0
  4471  0700  0008               	return
  4472  0701                     __end_of_I2C_ISR:	
  4473  007E                     btemp	set	126	;btemp
  4474  007E                     pic14e$flags	set	126
  4475  007E                     wtemp	set	126
  4476  007E                     wtemp0	set	126
  4477  0080                     wtemp1	set	128
  4478  0082                     wtemp2	set	130
  4479  0084                     wtemp3	set	132
  4480  0086                     wtemp4	set	134
  4481  0088                     wtemp5	set	136
  4482  007F                     wtemp6	set	127
  4483  007E                     ttemp	set	126
  4484  007E                     ttemp0	set	126
  4485  0081                     ttemp1	set	129
  4486  0084                     ttemp2	set	132
  4487  0087                     ttemp3	set	135
  4488  007F                     ttemp4	set	127
  4489  007E                     ltemp	set	126
  4490  007E                     ltemp0	set	126
  4491  0082                     ltemp1	set	130
  4492  0086                     ltemp2	set	134
  4493  0080                     ltemp3	set	128


Data Sizes:
    Strings     3
    Constant    10
    Data        58
    BSS         157
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     28      76
    BANK1            80      0      32
    BANK2            80      0      68
    BANK3            80      0      67
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S549$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    Timer1	PTR struct Timer1 size(1) Largest target is 3
		 -> NULL(NULL[0]), VarTimer1(BANK0[3]), 

    Segment	PTR struct Segment size(1) Largest target is 26
		 -> NULL(NULL[0]), VarSegment(BANK0[26]), 

    I2C	PTR struct I2C size(1) Largest target is 67
		 -> NULL(NULL[0]), VarI2C(BANK3[67]), 

    UART	PTR struct UART size(1) Largest target is 68
		 -> NULL(NULL[0]), VarUart(BANK2[68]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 

    TMain	PTR struct TMain size(1) Largest target is 15
		 -> NULL(NULL[0]), VarTMain(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_I2C_Main
    _printf->___lwmod
    ___lwmod->___lwdiv
    _Mcu_Initial->_I2C_Set
    _Mcu_Initial->_TMR1_Set
    _Mcu_Initial->_UART_Set
    _MainT->_setSegmentDisplayNumber
    _setSegmentDisplayNumber->___awdiv
    _setSegmentDisplayNumber->___awmod
    _I2C_Main->_I2C_Master_Reception

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR

Critical Paths under _main in BANK0

    _UART_Main->_UART_Transmit
    _UART_Transmit->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _MainT->_setSegmentDisplayNumber
    _setSegmentDisplayNumber->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4016
                           _I2C_Main
                              _MainT
                      _MainT_Initial
                        _Mcu_Initial
             _SegmentDisplay_Initial
                _SegmentDisplay_Main
                          _UART_Main
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            0     0      0    1572
                       _UART_Receive
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        4     4      0    1482
                                             24 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              16    12      4    1383
                                              8 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     362
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     371
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         4     4      0      90
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _SegmentDisplay_Main                                  2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SegmentDisplay_Initial                               1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initial                                          0     0      0       0
                            _I2C_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Set                                              1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initial                                        1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                4     4      0    2116
                                             10 BANK0      4     4      0
            _setSegmentDisplayNumber
 ---------------------------------------------------------------------------------
 (2) _setSegmentDisplayNumber                              7     5      2    1986
                                              8 COMMON     1     1      0
                                              4 BANK0      6     4      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     823
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     618
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Main                                             4     4      0     328
                                              6 COMMON     3     3      0
                                              0 BANK0      1     1      0
               _I2C_Master_Reception
            _I2C_Master_Transmission
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Transmission                              2     2      0      99
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Reception                                 3     3      0      99
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              2 COMMON     1     1      0
                            _I2C_ISR
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (6) _UART_ISR                                             3     3      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Main
     _I2C_Master_Reception
     _I2C_Master_Transmission
   _MainT
     _setSegmentDisplayNumber
       ___awdiv
       ___awmod
   _MainT_Initial
   _Mcu_Initial
     _I2C_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
   _SegmentDisplay_Initial
   _SegmentDisplay_Main
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch

 _ISR (ROOT)
   _I2C_ISR
   _TMR1_ISR
   _UART_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      FE       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1C      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      20       8       40.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      44      10       85.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      43      12       83.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      FE      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Sep 15 00:43:19 2014

                 ??_MainT_Initial 0073                                _BF 10A0                      ___awdiv@sign 0021  
       ??_setSegmentDisplayNumber 0026                               l401 049F                               l410 04AE  
                             _I2C 0056                               l404 04A9                               l340 052A  
                             l332 03CA                               l413 04B2                               l325 03A7  
                             l414 04B1                               l407 04AC                               l343 052E  
                             l416 04B4                               l360 054B                               l354 053B  
                             l346 0532                               l363 0555                               l515 023D  
                             l381 047E                               l357 0549                               l349 0534  
                             l366 0559                               l375 0476                               l367 0558  
                             l392 0489                               l384 0480                               l369 055B  
                             l473 071F                               l378 047A                               l395 048C  
                             l459 0612                               l389 0487                               l398 049A  
                             _CKP 10AC                               _GIE 005F                               _RA1 0061  
                             _RA2 0062                               _RC0 0070                               _RA4 0064  
                             _RA5 0065                               _RA6 0066                               _RA7 0067  
                             _PEN 10B2                               _ISR 0004                               _SEN 10B0  
                             _RX9 0CEE                               _TX9 0CF6                   __end_of_I2C_ISR 0701  
                 __end_of_I2C_Set 071E                      ___awmod@sign 0021                               wreg 0009  
   __size_of_I2C_Master_Reception 0041                              ?_ISR 0070                              l2012 0327  
                            l2020 0339                              l2016 0331                              l2008 031D  
                            l2026 0361                              l2220 01F6                              l2212 01D7  
                            l2310 0149                              l2150 0508                              l2230 0203  
                            l2160 0523                              l2224 01FE                              l2208 01D1  
                            l2232 0186                              l2242 0439                              l2322 017B  
                            l2314 015B                              l2260 045E                              l2156 051A  
                            l2148 04FC                              l2172 0565                              l2430 0386  
                            l2254 0446                              l2246 0440                              l2318 016C  
                            l2174 0571                              l2182 0586                              l1632 03F0  
                            l2256 0452                              l2264 0467                              l2408 02D7  
                            l2192 01A2                              l2442 03BD                              l1650 0416  
                            l1642 03F8                              l1626 03E5                              l2282 009B  
                            l2178 057D                              l2436 03A0                              l1644 0404  
                            l2268 046F                              l1654 041F                              l2390 0285  
                            l2198 01BB                              l2376 0262                              l2472 05EF  
                            l1658 0427                              l2298 00C2                              l2458 0644  
                            l2396 029A                              l1854 05B5                              l1848 0599  
                   ??_Mcu_Initial 0074                              STR_1 080A                              _LATA 010C  
                            _LATB 010D                              _LATC 010E                              u1555 03FB  
                            u3315 0255                              u3325 0275                              u1575 0405  
                            u2615 0509                              u1585 040F                              u2625 0513  
                            u1595 0417                              u2635 051B                              u3375 02EA  
                            u2825 0449                              u2905 0070                              u2665 0568  
                            u2745 01EC                              u2915 008D                              u2595 04FF  
                            _PEIE 005E                              u2845 0458                              u2685 0577  
                            u2855 045F                              u2935 00AA                              u2695 057E  
                            _RCIE 048D                              _RCEN 10B3                              _RCIF 008D  
                            _UART 0057                              _TRMT 0CF1                              _TXIE 048C  
                            _TXIF 008C                              _R_nW 10A2                              _main 05E5  
                __end_of_I2C_Main 03DA                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              ltemp 007E  
                            start 0019                              ttemp 007E                              wtemp 007E  
                           ??_ISR 0072                             ?_main 0070                             _ACKEN 10B4  
                 __end_of___awdiv 042E                             _BRG16 0CFB                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0476                   ___awdiv@divisor 0073                             _T1CON 0018  
                 __end_of___lwdiv 052A                   __end_of___lwmod 058D                             i1l444 04BD  
                           _RCIDL 0CFE                   ___awdiv@counter 0020                             _RCREG 0199  
                           _RCSTA 019D                             _TMR1H 0017                             _TMR1L 0016  
                           _SPBRG 019B                             _PORTA 000C                             _PORTB 000D  
                           _PORTC 000E                             _TRISA 008C                             _TRISB 008D  
                           _TRISC 008E                             _SSPIE 048B                             _SSPIF 008B  
                           _SSPOV 10AE                             _TXREG 019A                             _TXSTA 019E  
                           _TMain 006B                             _MainT 023E                     __CFG_WRT$BOOT 0000  
                __end_of_UART_ISR 04F3                __size_of_UART_Main 0024                  __end_of_TMR1_ISR 05E5  
                __end_of_UART_Set 06A8                  __end_of_TMR1_Set 06F1                   __end_of_dpowers 080A  
                           _putch 071E                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080   __end_of_setSegmentDisplayNumber 0181  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F               __end_of_Mcu_Initial 06D1                   __initialization 001B  
                    __end_of_main 060C  __size_of_I2C_Master_Transmission 0034                         ??_I2C_ISR 0070  
                       ??_I2C_Set 0073                            ??_main 0079             I2C_Master_Reception@i 0075  
                          ?_MainT 0070                         I2C_Main@i 0020                  ___awdiv@dividend 0075  
                          _ANSELA 018C                            ?_putch 0070                            _ANSELB 018D  
                          _ANSELC 018E                            u241_25 05D8                            _OSCCON 0099  
                      _VarSegment 003C                            _TMR1IE 0488                            _TMR1IF 0088  
                          _SPBRGH 019C                            _IO_Set 06A8                            MainT@i 002D  
                          _SSPADD 0212                            _TRISC6 0476                            _TRISC7 0477  
                          _SSPBUF 0211                        _VarProduct 00A0                            _VarI2C 01A0  
                          _Timer1 007A                 __end_of_UART_Main 0655                         ??___awdiv 0077  
                       ??___awmod 0077                         ??___lwdiv 0077                         ??___lwmod 0078  
                ___awdiv@quotient 0022                   ___awmod@divisor 0073                   ___awmod@counter 0020  
                          _printf 0181                         ?_I2C_Main 0070                       _Mcu_Initial 06BE  
         __end_of__initialization 004B             __end_of_UART_Transmit 0631                     __end_of_MainT 02F4  
                  __pcstackCOMMON 0070                      __pidataBANK0 0675                      __pidataBANK1 0655  
                       ?_UART_ISR 0070                         ?_TMR1_ISR 0070                         ?_UART_Set 0070  
                       ?_TMR1_Set 0070                     __end_of_putch 0726                        ??_I2C_Main 0076  
                         ??_MainT 002A                           ??_putch 0073                        __pbssBANK0 0056  
                      __pbssBANK2 0120                        __pbssBANK3 01A0                           ?_IO_Set 0070  
                      __pnvCOMMON 0079      __end_of_I2C_Master_Reception 04B7                        __pmaintext 05E5  
                      ??_UART_ISR 0070           _I2C_Master_Transmission 052A                        ??_TMR1_ISR 0070  
                      ??_UART_Set 0073                        ??_TMR1_Set 0073                        __pintentry 0004  
                         _I2C_ISR 06F1                           _ACKSTAT 10B6      __size_of_SegmentDisplay_Main 0073  
                         _I2C_Set 0710             __end_of_MainT_Initial 0710                           ?_printf 0028  
                         _SSPCON1 0215                           _SSPCON2 0216                           _SSPSTAT 0214  
                   ?_UART_Receive 0070                   __size_of_IO_Set 0016                           _Segment 006A  
                         _VarUart 0120                           _Product 0079          ?_setSegmentDisplayNumber 0024  
                         ___awdiv 03DA                           ___awmod 042E                           ___lwdiv 04F3  
                         ___lwmod 055E          ??_SegmentDisplay_Initial 0073                           __ptext1 0631  
                         __ptext2 060C                           __ptext3 0181                           __ptext4 071E  
                         __ptext5 055E                           __ptext6 04F3                           __ptext7 058D  
                         __ptext8 02F4                           __ptext9 06D1                   __size_of_printf 00BD  
                    __size_of_ISR 0015                           _dpowers 0800                  ___awmod@dividend 0075  
                         clrloop0 0727              end_of_initialization 004B                    ??_UART_Receive 0073  
                         init_ram 072C                           initloop 072D                    UART_Transmit@i 003B  
       ??_I2C_Master_Transmission 0073                           printf@c 0037                           printf@f 0028  
                    __pstringtext 0800                         _UART_Main 0631          I2C_Master_Transmission@i 0074  
                __CFG_FOSC$INTOSC 0000                 __size_of_I2C_Main 0073              _I2C_Master_Reception 0476  
                    ?_Mcu_Initial 0070                    __end_of_IO_Set 06BE     setSegmentDisplayNumber@number 0024  
                      ?_UART_Main 0070                 __size_of_UART_ISR 003C                 __size_of_TMR1_ISR 0029  
               __size_of_UART_Set 0019   __size_of_SegmentDisplay_Initial 0010                 __size_of_TMR1_Set 0010  
                  __end_of_printf 023E               start_initialization 001B                       __end_of_ISR 0019  
           ?_I2C_Master_Reception 0070               _SegmentDisplay_Main 02F4                          ??_IO_Set 0073  
                       _VarTimer1 0067                       __pdataBANK0 003C                       __pdataBANK1 00A0  
                        ?_I2C_ISR 0070              ?_SegmentDisplay_Main 0070                          ?_I2C_Set 0070  
                        ??_printf 002C              __end_of_UART_Receive 05BC                       __pbssCOMMON 007A  
                       ___latbits 0002            __size_of_UART_Transmit 0025                     __pcstackBANK0 0020  
             __end_of__stringdata 080D            _SegmentDisplay_Initial 06D1                         __pnvBANK0 006B  
                ___lwdiv@dividend 0075                          ?___awdiv 0073                          ?___awmod 0073  
                        ?___lwdiv 0073             ??_SegmentDisplay_Main 0073                          ?___lwmod 0023  
                     ??_UART_Main 0079                     UART_Receive@i 0076                          _I2C_Main 0367  
          ??_I2C_Master_Reception 0073                    __size_of_MainT 00B6  __size_of_setSegmentDisplayNumber 0132  
                ___lwdiv@quotient 0021          setSegmentDisplayNumber@i 0078                    __size_of_putch 0008  
          __size_of_MainT_Initial 000F              __size_of_Mcu_Initial 0013                         clear_ram0 0726  
                   _UART_Transmit 060C                          _UART_ISR 04B7                          _TMR1_ISR 05BC  
                        _UART_Set 068F                          _TMR1_Set 06E1                  __size_of_I2C_ISR 0010  
                __size_of_I2C_Set 000E                       __stringdata 080A                        printf@_val 0033  
                      printf@flag 0031                        printf@prec 0032                          _VarTMain 0058  
                  ?_UART_Transmit 0070             __size_of_UART_Receive 002F                  __size_of___awdiv 0054  
                __size_of___awmod 0048                  __size_of___lwdiv 0037                  __size_of___lwmod 002F  
                   _MainT_Initial 0701                   ___lwdiv@divisor 0073                   ___lwdiv@counter 0020  
                        __ptext10 06BE                          __ptext11 068F                          __ptext20 0367  
                        __ptext12 06E1                          __ptext21 052A                          __ptext13 06A8  
                        __ptext22 0476                          __ptext14 0710                          __ptext15 0701  
                        __ptext24 04B7                          __ptext16 023E                          __ptext25 05BC  
                        __ptext17 004F                          __ptext26 06F1                          __ptext18 042E  
                        __ptext19 03DA          ?_I2C_Master_Transmission 0070                     __size_of_main 0027  
                    _UART_Receive 058D                    ?_MainT_Initial 0070                         putch@byte 0073  
         _setSegmentDisplayNumber 004F           ?_SegmentDisplay_Initial 0070                       pic14e$flags 007E  
                        intlevel1 0000                  ___lwmod@dividend 0025                   ??_UART_Transmit 0038  
                        printf@ap 0030                   ___lwmod@divisor 0023                   ___lwmod@counter 0027  
  __end_of_SegmentDisplay_Initial 06E1   __end_of_I2C_Master_Transmission 055E       __end_of_SegmentDisplay_Main 0367  
