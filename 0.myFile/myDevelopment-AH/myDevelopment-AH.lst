

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Sep 24 07:34:13 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  0090                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018E                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0194                     	;# 
   105  0195                     	;# 
   106  0196                     	;# 
   107  0197                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  020D                     	;# 
   120  0210                     	;# 
   121  0211                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0212                     	;# 
   125  0213                     	;# 
   126  0213                     	;# 
   127  0214                     	;# 
   128  0214                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0216                     	;# 
   133  0216                     	;# 
   134  0217                     	;# 
   135  0217                     	;# 
   136  0291                     	;# 
   137  0291                     	;# 
   138  0292                     	;# 
   139  0293                     	;# 
   140  0298                     	;# 
   141  0298                     	;# 
   142  0299                     	;# 
   143  029A                     	;# 
   144  0394                     	;# 
   145  0395                     	;# 
   146  0396                     	;# 
   147  0FE4                     	;# 
   148  0FE5                     	;# 
   149  0FE6                     	;# 
   150  0FE7                     	;# 
   151  0FE8                     	;# 
   152  0FE9                     	;# 
   153  0FEA                     	;# 
   154  0FEB                     	;# 
   155  0FED                     	;# 
   156  0FEE                     	;# 
   157  0FEF                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  0116                     	;# 
   205  0117                     	;# 
   206  011D                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  018E                     	;# 
   210  0191                     	;# 
   211  0191                     	;# 
   212  0192                     	;# 
   213  0193                     	;# 
   214  0193                     	;# 
   215  0194                     	;# 
   216  0195                     	;# 
   217  0196                     	;# 
   218  0197                     	;# 
   219  0199                     	;# 
   220  019A                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019C                     	;# 
   226  019C                     	;# 
   227  019D                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  020D                     	;# 
   231  0210                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0216                     	;# 
   244  0216                     	;# 
   245  0217                     	;# 
   246  0217                     	;# 
   247  0291                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0298                     	;# 
   252  0298                     	;# 
   253  0299                     	;# 
   254  029A                     	;# 
   255  0394                     	;# 
   256  0395                     	;# 
   257  0396                     	;# 
   258  0FE4                     	;# 
   259  0FE5                     	;# 
   260  0FE6                     	;# 
   261  0FE7                     	;# 
   262  0FE8                     	;# 
   263  0FE9                     	;# 
   264  0FEA                     	;# 
   265  0FEB                     	;# 
   266  0FED                     	;# 
   267  0FEE                     	;# 
   268  0FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  0010                     	;# 
   285  0011                     	;# 
   286  0012                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0016                     	;# 
   290  0017                     	;# 
   291  0018                     	;# 
   292  0019                     	;# 
   293  001A                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  008C                     	;# 
   297  008D                     	;# 
   298  008E                     	;# 
   299  0090                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  0116                     	;# 
   316  0117                     	;# 
   317  011D                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  018E                     	;# 
   321  0191                     	;# 
   322  0191                     	;# 
   323  0192                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0194                     	;# 
   327  0195                     	;# 
   328  0196                     	;# 
   329  0197                     	;# 
   330  0199                     	;# 
   331  019A                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019C                     	;# 
   337  019C                     	;# 
   338  019D                     	;# 
   339  019E                     	;# 
   340  019F                     	;# 
   341  020D                     	;# 
   342  0210                     	;# 
   343  0211                     	;# 
   344  0211                     	;# 
   345  0212                     	;# 
   346  0212                     	;# 
   347  0213                     	;# 
   348  0213                     	;# 
   349  0214                     	;# 
   350  0214                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0215                     	;# 
   354  0216                     	;# 
   355  0216                     	;# 
   356  0217                     	;# 
   357  0217                     	;# 
   358  0291                     	;# 
   359  0291                     	;# 
   360  0292                     	;# 
   361  0293                     	;# 
   362  0298                     	;# 
   363  0298                     	;# 
   364  0299                     	;# 
   365  029A                     	;# 
   366  0394                     	;# 
   367  0395                     	;# 
   368  0396                     	;# 
   369  0FE4                     	;# 
   370  0FE5                     	;# 
   371  0FE6                     	;# 
   372  0FE7                     	;# 
   373  0FE8                     	;# 
   374  0FE9                     	;# 
   375  0FEA                     	;# 
   376  0FEB                     	;# 
   377  0FED                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380                           
   381                           	psect	idataBANK1
   382  062A                     __pidataBANK1:	
   383                           
   384                           ;initializer for _VarProduct
   385  062A  3463               	retlw	99
   386  062B  3402               	retlw	2
   387  062C  3400               	retlw	0
   388  062D  3400               	retlw	0
   389  062E  3400               	retlw	0
   390  062F  3400               	retlw	0
   391  0630  3400               	retlw	0
   392  0631  3400               	retlw	0
   393  0632  3400               	retlw	0
   394  0633  3400               	retlw	0
   395  0634  3400               	retlw	0
   396  0635  3400               	retlw	0
   397  0636  34FF               	retlw	255
   398  0637  34FF               	retlw	255
   399  0638  34FF               	retlw	255
   400  0639  3400               	retlw	0
   401  063A  3400               	retlw	0
   402  063B  3400               	retlw	0
   403  063C  3400               	retlw	0
   404  063D  3400               	retlw	0
   405  063E  3400               	retlw	0
   406  063F  3400               	retlw	0
   407  0640  3400               	retlw	0
   408  0641  3400               	retlw	0
   409  0642  3400               	retlw	0
   410  0643  3400               	retlw	0
   411  0644  3400               	retlw	0
   412  0645  3400               	retlw	0
   413  0646  3400               	retlw	0
   414  0647  3400               	retlw	0
   415  0648  3400               	retlw	0
   416  0649  3400               	retlw	0
   417                           
   418                           ;initializer for _VarSegment
   419  064A  34C0               	retlw	192
   420  064B  34F9               	retlw	249
   421  064C  34A4               	retlw	164
   422  064D  34B0               	retlw	176
   423  064E  3499               	retlw	153
   424  064F  3492               	retlw	146
   425  0650  3482               	retlw	130
   426  0651  34D8               	retlw	216
   427  0652  3480               	retlw	128
   428  0653  3490               	retlw	144
   429  0654  3488               	retlw	136
   430  0655  3483               	retlw	131
   431  0656  34A7               	retlw	167
   432  0657  34A1               	retlw	161
   433  0658  3486               	retlw	134
   434  0659  348E               	retlw	142
   435  065A  34BF               	retlw	191
   436  065B  3400               	retlw	0
   437  065C  3400               	retlw	0
   438  065D  3400               	retlw	0
   439  065E  3400               	retlw	0
   440  065F  3400               	retlw	0
   441  0660  3400               	retlw	0
   442  0661  3400               	retlw	0
   443  0662  3400               	retlw	0
   444  0663  3400               	retlw	0
   445                           
   446                           	psect	stringtext
   447  1000                     __pstringtext:	
   448  1000                     _dpowers:	
   449  1000  3401               	retlw	1
   450  1001  3400               	retlw	0
   451  1002  340A               	retlw	10
   452  1003  3400               	retlw	0
   453  1004  3464               	retlw	100
   454  1005  3400               	retlw	0
   455  1006  34E8               	retlw	232
   456  1007  3403               	retlw	3
   457  1008  3410               	retlw	16
   458  1009  3427               	retlw	39
   459  100A                     __end_of_dpowers:	
   460  100A                     __stringdata:	
   461  100A                     STR_1:	
   462  100A  3425               	retlw	37	;'%'
   463  100B  3464               	retlw	100	;'d'
   464  100C  342C               	retlw	44	;','
   465  100D  3400               	retlw	0
   466  100E                     __end_of__stringdata:	
   467                           
   468                           ; #config settings
   469  0000                     
   470                           	psect	nvBANK0
   471  005E                     __pnvBANK0:	
   472  005E                     _Product:	
   473  005E                     	ds	1
   474  005F                     _TMain:	
   475  005F                     	ds	1
   476  000C                     _PORTA	set	12
   477  000D                     _PORTB	set	13
   478  000E                     _PORTC	set	14
   479  0018                     _T1CON	set	24
   480  0017                     _TMR1H	set	23
   481  0016                     _TMR1L	set	22
   482  005F                     _GIE	set	95
   483  005E                     _PEIE	set	94
   484  0061                     _RA1	set	97
   485  0062                     _RA2	set	98
   486  0064                     _RA4	set	100
   487  0065                     _RA5	set	101
   488  0066                     _RA6	set	102
   489  0067                     _RA7	set	103
   490  0070                     _RC0	set	112
   491  008D                     _RCIF	set	141
   492  008B                     _SSPIF	set	139
   493  0088                     _TMR1IF	set	136
   494  008C                     _TXIF	set	140
   495  0099                     _OSCCON	set	153
   496  008C                     _TRISA	set	140
   497  008D                     _TRISB	set	141
   498  008E                     _TRISC	set	142
   499  048D                     _RCIE	set	1165
   500  048B                     _SSPIE	set	1163
   501  0488                     _TMR1IE	set	1160
   502  0476                     _TRISC6	set	1142
   503  0477                     _TRISC7	set	1143
   504  048C                     _TXIE	set	1164
   505  010C                     _LATA	set	268
   506  010D                     _LATB	set	269
   507  010E                     _LATC	set	270
   508  018C                     _ANSELA	set	396
   509  018D                     _ANSELB	set	397
   510  018E                     _ANSELC	set	398
   511  0199                     _RCREG	set	409
   512  019D                     _RCSTA	set	413
   513  019B                     _SPBRG	set	411
   514  019C                     _SPBRGH	set	412
   515  019A                     _TXREG	set	410
   516  019E                     _TXSTA	set	414
   517  0CFB                     _BRG16	set	3323
   518  0CFE                     _RCIDL	set	3326
   519  0CEE                     _RX9	set	3310
   520  0CF6                     _TX9	set	3318
   521  0212                     _SSPADD	set	530
   522  0211                     _SSPBUF	set	529
   523  0215                     _SSPCON1	set	533
   524  0216                     _SSPCON2	set	534
   525  0214                     _SSPSTAT	set	532
   526  10B4                     _ACKEN	set	4276
   527  10B6                     _ACKSTAT	set	4278
   528  10A0                     _BF	set	4256
   529  10AC                     _CKP	set	4268
   530  10B2                     _PEN	set	4274
   531  10B3                     _RCEN	set	4275
   532  10A2                     _R_nW	set	4258
   533  10B0                     _SEN	set	4272
   534  10AE                     _SSPOV	set	4270
   535                           
   536                           	psect	cinit
   537  001B                     start_initialization:	
   538  001B                     __initialization:	
   539                           
   540                           ; Clear objects allocated to BANK0
   541  001B  3048               	movlw	low __pbssBANK0
   542  001C  0084               	movwf	4
   543  001D  3000               	movlw	high __pbssBANK0
   544  001E  0085               	movwf	5
   545  001F  3016               	movlw	22
   546  0020  318F  276B  3180   	fcall	clear_ram0
   547                           
   548                           ; Clear objects allocated to BANK2
   549  0023  3020               	movlw	low __pbssBANK2
   550  0024  0084               	movwf	4
   551  0025  3001               	movlw	high __pbssBANK2
   552  0026  0085               	movwf	5
   553  0027  3044               	movlw	68
   554  0028  318F  276B  3180   	fcall	clear_ram0
   555                           
   556                           ; Clear objects allocated to BANK3
   557  002B  30A0               	movlw	low __pbssBANK3
   558  002C  0084               	movwf	4
   559  002D  3001               	movlw	high __pbssBANK3
   560  002E  0085               	movwf	5
   561  002F  3043               	movlw	67
   562  0030  318F  276B  3180   	fcall	clear_ram0
   563                           
   564                           ; Initialize objects allocated to BANK1
   565  0033  302A               	movlw	low __pidataBANK1
   566  0034  0084               	movwf	4
   567  0035  3086               	movlw	(high __pidataBANK1)| (0+128)
   568  0036  0085               	movwf	5
   569  0037  30A0               	movlw	low __pdataBANK1
   570  0038  0086               	movwf	6
   571  0039  3000               	movlw	high __pdataBANK1
   572  003A  0087               	movwf	7
   573  003B  303A               	movlw	58
   574  003C  318F  2765         	fcall	init_ram
   575  003E                     end_of_initialization:	
   576                           ;End of C runtime variable initialization code
   577                           
   578  003E                     __end_of__initialization:	
   579  003E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   580  003F  0020               	movlb	0
   581  0040  3187  2F90         	ljmp	_main	;jump to C main() function
   582                           
   583                           	psect	bssBANK0
   584  0048                     __pbssBANK0:	
   585  0048                     _Timer1:	
   586  0048                     	ds	1
   587  0049                     _UART:	
   588  0049                     	ds	1
   589  004A                     _VarTMain:	
   590  004A                     	ds	15
   591  0059                     _VarTimer1:	
   592  0059                     	ds	3
   593  005C                     _I2C:	
   594  005C                     	ds	1
   595  005D                     _Segment:	
   596  005D                     	ds	1
   597                           
   598                           	psect	dataBANK1
   599  00A0                     __pdataBANK1:	
   600  00A0                     _VarProduct:	
   601  00A0                     	ds	32
   602  00C0                     _VarSegment:	
   603  00C0                     	ds	26
   604                           
   605                           	psect	bssBANK2
   606  0120                     __pbssBANK2:	
   607  0120                     _VarUart:	
   608  0120                     	ds	68
   609                           
   610                           	psect	bssBANK3
   611  01A0                     __pbssBANK3:	
   612  01A0                     _VarI2C:	
   613  01A0                     	ds	67
   614                           
   615                           	psect	clrtext
   616  0F6B                     clear_ram0:	
   617                           ;	Called with FSR0 containing the base address, and
   618                           ;	WREG with the size to clear
   619                           
   620  0F6B  0064               	clrwdt	;clear the watchdog before getting into this loop
   621  0F6C                     clrloop0:	
   622  0F6C  0180               	clrf	0	;clear RAM location pointed to by FSR
   623  0F6D  3101               	addfsr 0,1
   624  0F6E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   625  0F6F  2F6C               	goto	clrloop0	;have we reached the end yet?
   626  0F70  3400               	retlw	0	;all done for this memory range, return
   627                           
   628                           	psect	inittext
   629  0F65                     init_ram:	
   630  0F65  00FE               	movwf	126
   631  0F66                     initloop:	
   632  0F66  0012               	moviw fsr0++
   633  0F67  001E               	movwi fsr1++
   634  0F68  0BFE               	decfsz	126,f
   635  0F69  2F66               	goto	initloop
   636  0F6A  3400               	retlw	0
   637                           
   638                           	psect	cstackCOMMON
   639  0070                     __pcstackCOMMON:	
   640  0070                     ?_IO_Set:	
   641  0070                     ?_TMR1_Set:	
   642                           ; 0 bytes @ 0x0
   643                           
   644  0070                     ?_I2C_Set:	
   645                           ; 0 bytes @ 0x0
   646                           
   647  0070                     ?_UART_Set:	
   648                           ; 0 bytes @ 0x0
   649                           
   650  0070                     ?_TMR1_ISR:	
   651                           ; 0 bytes @ 0x0
   652                           
   653  0070                     ??_TMR1_ISR:	
   654                           ; 0 bytes @ 0x0
   655                           
   656  0070                     ?_UART_ISR:	
   657                           ; 0 bytes @ 0x0
   658                           
   659  0070                     ?_I2C_ISR:	
   660                           ; 0 bytes @ 0x0
   661                           
   662  0070                     ??_I2C_ISR:	
   663                           ; 0 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_Master_Reception:	
   666                           ; 0 bytes @ 0x0
   667                           
   668  0070                     ?_I2C_Master_Transmission:	
   669                           ; 0 bytes @ 0x0
   670                           
   671  0070                     ?_UART_Receive:	
   672                           ; 0 bytes @ 0x0
   673                           
   674  0070                     ?_UART_Transmit:	
   675                           ; 0 bytes @ 0x0
   676                           
   677  0070                     ?_MainT_Initial:	
   678                           ; 0 bytes @ 0x0
   679                           
   680  0070                     ?_SegmentDisplay_Initial:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ?_MainT:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ?_SegmentDisplay_Main:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_Mcu_Initial:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ?_ISR:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ?_I2C_Main:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ?_UART_Main:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ?_putch:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?_main:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ?i1___awdiv:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?i1___awmod:	
   711                           ; 2 bytes @ 0x0
   712                           
   713  0070                     i1___awdiv@divisor:	
   714                           ; 2 bytes @ 0x0
   715                           
   716  0070                     i1___awmod@divisor:	
   717                           ; 2 bytes @ 0x0
   718                           
   719                           
   720                           ; 2 bytes @ 0x0
   721  0070                     	ds	2
   722  0072                     i1___awdiv@dividend:	
   723  0072                     i1___awmod@dividend:	
   724                           ; 2 bytes @ 0x2
   725                           
   726                           
   727                           ; 2 bytes @ 0x2
   728  0072                     	ds	2
   729  0074                     ??i1___awdiv:	
   730  0074                     ??i1___awmod:	
   731                           ; 0 bytes @ 0x4
   732                           
   733                           
   734                           ; 0 bytes @ 0x4
   735  0074                     	ds	1
   736  0075                     i1___awdiv@counter:	
   737  0075                     i1___awmod@counter:	
   738                           ; 1 bytes @ 0x5
   739                           
   740                           
   741                           ; 1 bytes @ 0x5
   742  0075                     	ds	1
   743  0076                     i1___awdiv@sign:	
   744  0076                     i1___awmod@sign:	
   745                           ; 1 bytes @ 0x6
   746                           
   747                           
   748                           ; 1 bytes @ 0x6
   749  0076                     	ds	1
   750  0077                     i1___awdiv@quotient:	
   751                           
   752                           ; 2 bytes @ 0x7
   753  0077                     	ds	2
   754  0079                     ?i1_setSegmentDisplayNumber:	
   755  0079                     i1setSegmentDisplayNumber@number:	
   756                           ; 0 bytes @ 0x9
   757                           
   758                           
   759                           ; 2 bytes @ 0x9
   760  0079                     	ds	2
   761  007B                     i1setSegmentDisplayNumber@i:	
   762                           
   763                           ; 1 bytes @ 0xB
   764  007B                     	ds	1
   765  007C                     ??_UART_ISR:	
   766                           
   767                           ; 0 bytes @ 0xC
   768  007C                     	ds	2
   769                           
   770                           	psect	cstackBANK0
   771  0020                     __pcstackBANK0:	
   772  0020                     ??i1_setSegmentDisplayNumber:	
   773                           
   774                           ; 0 bytes @ 0x0
   775  0020                     	ds	4
   776  0024                     ??_ISR:	
   777                           
   778                           ; 0 bytes @ 0x4
   779  0024                     	ds	1
   780  0025                     ??_IO_Set:	
   781  0025                     ??_TMR1_Set:	
   782                           ; 0 bytes @ 0x5
   783                           
   784  0025                     ??_I2C_Set:	
   785                           ; 0 bytes @ 0x5
   786                           
   787  0025                     ??_UART_Set:	
   788                           ; 0 bytes @ 0x5
   789                           
   790  0025                     ??_I2C_Master_Reception:	
   791                           ; 0 bytes @ 0x5
   792                           
   793  0025                     ??_I2C_Master_Transmission:	
   794                           ; 0 bytes @ 0x5
   795                           
   796  0025                     ??_UART_Receive:	
   797                           ; 0 bytes @ 0x5
   798                           
   799  0025                     ??_MainT_Initial:	
   800                           ; 0 bytes @ 0x5
   801                           
   802  0025                     ??_SegmentDisplay_Initial:	
   803                           ; 0 bytes @ 0x5
   804                           
   805  0025                     ??_MainT:	
   806                           ; 0 bytes @ 0x5
   807                           
   808  0025                     ??_SegmentDisplay_Main:	
   809                           ; 0 bytes @ 0x5
   810                           
   811  0025                     ??_putch:	
   812                           ; 0 bytes @ 0x5
   813                           
   814  0025                     ?___awdiv:	
   815                           ; 0 bytes @ 0x5
   816                           
   817  0025                     ?___awmod:	
   818                           ; 2 bytes @ 0x5
   819                           
   820  0025                     ?___lwdiv:	
   821                           ; 2 bytes @ 0x5
   822                           
   823  0025                     putch@byte:	
   824                           ; 2 bytes @ 0x5
   825                           
   826  0025                     ___awdiv@divisor:	
   827                           ; 1 bytes @ 0x5
   828                           
   829  0025                     ___awmod@divisor:	
   830                           ; 2 bytes @ 0x5
   831                           
   832  0025                     ___lwdiv@divisor:	
   833                           ; 2 bytes @ 0x5
   834                           
   835                           
   836                           ; 2 bytes @ 0x5
   837  0025                     	ds	1
   838  0026                     ??_Mcu_Initial:	
   839  0026                     I2C_Master_Transmission@i:	
   840                           ; 0 bytes @ 0x6
   841                           
   842                           
   843                           ; 1 bytes @ 0x6
   844  0026                     	ds	1
   845  0027                     I2C_Master_Reception@i:	
   846  0027                     ___awdiv@dividend:	
   847                           ; 1 bytes @ 0x7
   848                           
   849  0027                     ___awmod@dividend:	
   850                           ; 2 bytes @ 0x7
   851                           
   852  0027                     ___lwdiv@dividend:	
   853                           ; 2 bytes @ 0x7
   854                           
   855                           
   856                           ; 2 bytes @ 0x7
   857  0027                     	ds	1
   858  0028                     ??_I2C_Main:	
   859  0028                     UART_Receive@i:	
   860                           ; 0 bytes @ 0x8
   861                           
   862                           
   863                           ; 1 bytes @ 0x8
   864  0028                     	ds	1
   865  0029                     ??___awdiv:	
   866  0029                     ??___awmod:	
   867                           ; 0 bytes @ 0x9
   868                           
   869  0029                     ??___lwdiv:	
   870                           ; 0 bytes @ 0x9
   871                           
   872                           
   873                           ; 0 bytes @ 0x9
   874  0029                     	ds	1
   875  002A                     ___awdiv@counter:	
   876  002A                     ___awmod@counter:	
   877                           ; 1 bytes @ 0xA
   878                           
   879  002A                     ___lwdiv@quotient:	
   880                           ; 1 bytes @ 0xA
   881                           
   882                           
   883                           ; 2 bytes @ 0xA
   884  002A                     	ds	1
   885  002B                     I2C_Main@i:	
   886  002B                     ___awdiv@sign:	
   887                           ; 1 bytes @ 0xB
   888                           
   889  002B                     ___awmod@sign:	
   890                           ; 1 bytes @ 0xB
   891                           
   892                           
   893                           ; 1 bytes @ 0xB
   894  002B                     	ds	1
   895  002C                     ___lwdiv@counter:	
   896  002C                     ___awdiv@quotient:	
   897                           ; 1 bytes @ 0xC
   898                           
   899                           
   900                           ; 2 bytes @ 0xC
   901  002C                     	ds	1
   902  002D                     ?___lwmod:	
   903  002D                     ___lwmod@divisor:	
   904                           ; 2 bytes @ 0xD
   905                           
   906                           
   907                           ; 2 bytes @ 0xD
   908  002D                     	ds	1
   909  002E                     ?_setSegmentDisplayNumber:	
   910  002E                     setSegmentDisplayNumber@number:	
   911                           ; 0 bytes @ 0xE
   912                           
   913                           
   914                           ; 2 bytes @ 0xE
   915  002E                     	ds	1
   916  002F                     ___lwmod@dividend:	
   917                           
   918                           ; 2 bytes @ 0xF
   919  002F                     	ds	1
   920  0030                     ??_setSegmentDisplayNumber:	
   921                           
   922                           ; 0 bytes @ 0x10
   923  0030                     	ds	1
   924  0031                     ??___lwmod:	
   925                           
   926                           ; 0 bytes @ 0x11
   927  0031                     	ds	1
   928  0032                     ___lwmod@counter:	
   929                           
   930                           ; 1 bytes @ 0x12
   931  0032                     	ds	1
   932  0033                     ?_printf:	
   933  0033                     printf@f:	
   934                           ; 2 bytes @ 0x13
   935                           
   936                           
   937                           ; 2 bytes @ 0x13
   938  0033                     	ds	1
   939  0034                     setSegmentDisplayNumber@i:	
   940                           
   941                           ; 1 bytes @ 0x14
   942  0034                     	ds	3
   943  0037                     ??_printf:	
   944                           
   945                           ; 0 bytes @ 0x17
   946  0037                     	ds	4
   947  003B                     printf@ap:	
   948                           
   949                           ; 1 bytes @ 0x1B
   950  003B                     	ds	1
   951  003C                     printf@flag:	
   952                           
   953                           ; 1 bytes @ 0x1C
   954  003C                     	ds	1
   955  003D                     printf@prec:	
   956                           
   957                           ; 1 bytes @ 0x1D
   958  003D                     	ds	1
   959  003E                     printf@_val:	
   960                           
   961                           ; 4 bytes @ 0x1E
   962  003E                     	ds	4
   963  0042                     printf@c:	
   964                           
   965                           ; 1 bytes @ 0x22
   966  0042                     	ds	1
   967  0043                     ??_UART_Transmit:	
   968                           
   969                           ; 0 bytes @ 0x23
   970  0043                     	ds	2
   971  0045                     UART_Transmit@i:	
   972                           
   973                           ; 1 bytes @ 0x25
   974  0045                     	ds	1
   975  0046                     ??_UART_Main:	
   976                           
   977                           ; 0 bytes @ 0x26
   978  0046                     	ds	2
   979  0048                     ??_main:	
   980                           
   981                           	psect	maintext
   982  0790                     __pmaintext:	
   983                           ; 0 bytes @ 0x28
   984 ;;
   985 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   986 ;;
   987 ;; *************** function _main *****************
   988 ;; Defined at:
   989 ;;		line 6 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\myMain.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;		None               void
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 17F/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1003 ;;      Params:         0       0       0       0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels required when called:    8
  1009 ;; This function calls:
  1010 ;;		_I2C_Main
  1011 ;;		_MainT
  1012 ;;		_MainT_Initial
  1013 ;;		_Mcu_Initial
  1014 ;;		_SegmentDisplay_Initial
  1015 ;;		_SegmentDisplay_Main
  1016 ;;		_UART_Main
  1017 ;; This function is called by:
  1018 ;;		Startup code after reset
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _main
  1024  0790                     _main:	
  1025                           
  1026                           ;myMain.c: 8: MainT_Initial();
  1027                           
  1028                           ;incstack = 0
  1029                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1030  0790  318F  277F  3187   	fcall	_MainT_Initial
  1031                           
  1032                           ;myMain.c: 9: Mcu_Initial();
  1033  0793  318F  27BE  3187   	fcall	_Mcu_Initial
  1034                           
  1035                           ;myMain.c: 10: SegmentDisplay_Initial();
  1036  0796  318F  27AE  3187   	fcall	_SegmentDisplay_Initial
  1037                           
  1038                           ;myMain.c: 11: ;;
  1039                           ;myMain.c: 12: __nop();
  1040  0799  0000               	nop
  1041  079A                     l2350:	
  1042                           ;myMain.c: 13: while(1)
  1043                           
  1044                           
  1045                           ;myMain.c: 14: {
  1046                           ;myMain.c: 17: if(TMain->T1_Timerout)
  1047  079A  0020               	movlb	0	; select bank0
  1048  079B  085F               	movf	_TMain,w
  1049  079C  0086               	movwf	6
  1050  079D  0187               	clrf	7
  1051  079E  1D01               	btfss	1,2
  1052  079F  2F9A               	goto	l2350
  1053                           
  1054                           ;myMain.c: 18: {
  1055                           ;myMain.c: 19: TMain->T1_Timerout = 0;
  1056  07A0  085F               	movf	_TMain,w
  1057  07A1  0086               	movwf	6
  1058  07A2  0187               	clrf	7
  1059  07A3  1101               	bcf	1,2
  1060                           
  1061                           ;myMain.c: 20: MainT();
  1062  07A4  3184  2445  3187   	fcall	_MainT
  1063                           
  1064                           ;myMain.c: 21: if(TMain->PowerON)
  1065  07A7  0020               	movlb	0	; select bank0
  1066  07A8  085F               	movf	_TMain,w
  1067  07A9  0086               	movwf	6
  1068  07AA  0187               	clrf	7
  1069  07AB  1C01               	btfss	1,0
  1070  07AC  2F9A               	goto	l2350
  1071                           
  1072                           ;myMain.c: 22: {
  1073                           ;myMain.c: 23: ;;
  1074                           ;myMain.c: 24: I2C_Main();
  1075  07AD  3183  23D2  3187   	fcall	_I2C_Main
  1076                           
  1077                           ;myMain.c: 25: UART_Main();
  1078  07B0  3186  26D3  3187   	fcall	_UART_Main
  1079                           
  1080                           ;myMain.c: 26: SegmentDisplay_Main();
  1081  07B3  3183  235F  3187   	fcall	_SegmentDisplay_Main
  1082  07B6  2F9A               	goto	l2350
  1083  07B7                     __end_of_main:	
  1084                           
  1085                           	psect	text1
  1086  06D3                     __ptext1:	
  1087 ;; *************** function _UART_Main *****************
  1088 ;; Defined at:
  1089 ;;		line 536 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;		None               void
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1103 ;;      Params:         0       0       0       0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0
  1105 ;;      Temps:          0       2       0       0       0       0       0       0
  1106 ;;      Totals:         0       2       0       0       0       0       0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    7
  1110 ;; This function calls:
  1111 ;;		_UART_Receive
  1112 ;;		_UART_Transmit
  1113 ;;		_setSegmentDisplayNumber
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           
  1120                           ;psect for function _UART_Main
  1121  06D3                     _UART_Main:	
  1122                           
  1123                           ;MCU_16f1516_B1.c: 538: if(UART->RxGO)
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _UART_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1127  06D3  0020               	movlb	0	; select bank0
  1128  06D4  0849               	movf	_UART,w
  1129  06D5  3E43               	addlw	67
  1130  06D6  0086               	movwf	6
  1131  06D7  3001               	movlw	1	; select bank2/3
  1132  06D8  0087               	movwf	7
  1133  06D9  1C81               	btfss	1,1
  1134  06DA  2EF6               	goto	l2216
  1135                           
  1136                           ;MCU_16f1516_B1.c: 539: {
  1137                           ;MCU_16f1516_B1.c: 540: UART->RxGO=0;
  1138  06DB  0849               	movf	_UART,w
  1139  06DC  3E43               	addlw	67
  1140  06DD  0086               	movwf	6
  1141  06DE  3001               	movlw	1	; select bank2/3
  1142  06DF  0087               	movwf	7
  1143  06E0  1081               	bcf	1,1
  1144                           
  1145                           ;MCU_16f1516_B1.c: 541: UART_Receive();
  1146  06E1  3187  2707  3186   	fcall	_UART_Receive
  1147                           
  1148                           ;MCU_16f1516_B1.c: 542: RCIE=1;
  1149  06E4  0021               	movlb	1	; select bank1
  1150  06E5  1691               	bsf	17,5	;volatile
  1151                           
  1152                           ;MCU_16f1516_B1.c: 543: setSegmentDisplayNumber(UART->RxData[0]);
  1153  06E6  0020               	movlb	0	; select bank0
  1154  06E7  0849               	movf	_UART,w
  1155  06E8  3E20               	addlw	32
  1156  06E9  0086               	movwf	6
  1157  06EA  3001               	movlw	1	; select bank2/3
  1158  06EB  0087               	movwf	7
  1159  06EC  0801               	movf	1,w
  1160  06ED  00C6               	movwf	??_UART_Main
  1161  06EE  01C7               	clrf	??_UART_Main+1
  1162  06EF  0846               	movf	??_UART_Main,w
  1163  06F0  00AE               	movwf	setSegmentDisplayNumber@number
  1164  06F1  0847               	movf	??_UART_Main+1,w
  1165  06F2  00AF               	movwf	setSegmentDisplayNumber@number+1
  1166  06F3  3180  2042         	fcall	_setSegmentDisplayNumber
  1167                           
  1168                           ;MCU_16f1516_B1.c: 544: }
  1169  06F5  0008               	return
  1170  06F6                     l2216:	
  1171                           
  1172                           ;MCU_16f1516_B1.c: 545: else
  1173                           ;MCU_16f1516_B1.c: 546: {
  1174                           ;MCU_16f1516_B1.c: 547: if(UART->TxGO)
  1175  06F6  0020               	movlb	0	; select bank0
  1176  06F7  0849               	movf	_UART,w
  1177  06F8  3E43               	addlw	67
  1178  06F9  0086               	movwf	6
  1179  06FA  3001               	movlw	1	; select bank2/3
  1180  06FB  0087               	movwf	7
  1181  06FC  1C01               	btfss	1,0
  1182  06FD  0008               	return
  1183                           
  1184                           ;MCU_16f1516_B1.c: 548: {
  1185                           ;MCU_16f1516_B1.c: 549: UART->TxGO=0;
  1186  06FE  0849               	movf	_UART,w
  1187  06FF  3E43               	addlw	67
  1188  0700  0086               	movwf	6
  1189  0701  3001               	movlw	1	; select bank2/3
  1190  0702  0087               	movwf	7
  1191  0703  1001               	bcf	1,0
  1192                           
  1193                           ;MCU_16f1516_B1.c: 550: UART_Transmit();
  1194  0704  3187  27DB         	fcall	_UART_Transmit
  1195  0706  0008               	return
  1196  0707                     __end_of_UART_Main:	
  1197                           
  1198                           	psect	text2
  1199  0042                     __ptext2:	
  1200 ;; *************** function _setSegmentDisplayNumber *****************
  1201 ;; Defined at:
  1202 ;;		line 20 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  number          2   14[BANK0 ] int 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  i               1   20[BANK0 ] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;		None               void
  1209 ;; Registers used:
  1210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1216 ;;      Params:         0       2       0       0       0       0       0       0
  1217 ;;      Locals:         0       1       0       0       0       0       0       0
  1218 ;;      Temps:          0       4       0       0       0       0       0       0
  1219 ;;      Totals:         0       7       0       0       0       0       0       0
  1220 ;;Total ram usage:        7 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    5
  1223 ;; This function calls:
  1224 ;;		___awdiv
  1225 ;;		___awmod
  1226 ;; This function is called by:
  1227 ;;		_UART_Main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _setSegmentDisplayNumber
  1233  0042                     _setSegmentDisplayNumber:	
  1234                           
  1235                           ;SegmentDisplay_A2.c: 22: char i;
  1236                           ;SegmentDisplay_A2.c: 23: if(Segment->Enable)
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in _setSegmentDisplayNumber: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  1240  0042  0020               	movlb	0	; select bank0
  1241  0043  085D               	movf	_Segment,w
  1242  0044  3E15               	addlw	21
  1243  0045  0086               	movwf	6
  1244  0046  0187               	clrf	7
  1245  0047  1C01               	btfss	1,0
  1246  0048  0008               	return
  1247                           
  1248                           ;SegmentDisplay_A2.c: 24: {
  1249                           ;SegmentDisplay_A2.c: 25: Segment->GO=1;
  1250  0049  085D               	movf	_Segment,w
  1251  004A  3E15               	addlw	21
  1252  004B  0086               	movwf	6
  1253  004C  0187               	clrf	7
  1254  004D  1481               	bsf	1,1
  1255                           
  1256                           ;SegmentDisplay_A2.c: 26: if(Segment->Hex)
  1257  004E  085D               	movf	_Segment,w
  1258  004F  3E15               	addlw	21
  1259  0050  0086               	movwf	6
  1260  0051  0187               	clrf	7
  1261  0052  1D01               	btfss	1,2
  1262  0053  288E               	goto	l1994
  1263                           
  1264                           ;SegmentDisplay_A2.c: 27: {
  1265                           ;SegmentDisplay_A2.c: 28: Segment->Num[0]=(number & 0x000f);
  1266  0054  082E               	movf	setSegmentDisplayNumber@number,w
  1267  0055  390F               	andlw	15
  1268  0056  00B0               	movwf	??_setSegmentDisplayNumber
  1269  0057  085D               	movf	_Segment,w
  1270  0058  3E11               	addlw	17
  1271  0059  0086               	movwf	6
  1272  005A  0187               	clrf	7
  1273  005B  0830               	movf	??_setSegmentDisplayNumber,w
  1274  005C  0081               	movwf	1
  1275                           
  1276                           ;SegmentDisplay_A2.c: 29: Segment->Num[1]=((number>>4)&0x000f);
  1277  005D  082F               	movf	setSegmentDisplayNumber@number+1,w
  1278  005E  00B1               	movwf	??_setSegmentDisplayNumber+1
  1279  005F  082E               	movf	setSegmentDisplayNumber@number,w
  1280  0060  00B0               	movwf	??_setSegmentDisplayNumber
  1281  0061  3004               	movlw	4
  1282  0062  00B2               	movwf	??_setSegmentDisplayNumber+2
  1283  0063                     u2525:	
  1284  0063  0D31               	rlf	??_setSegmentDisplayNumber+1,w
  1285  0064  0CB1               	rrf	??_setSegmentDisplayNumber+1,f
  1286  0065  0CB0               	rrf	??_setSegmentDisplayNumber,f
  1287  0066  0BB2               	decfsz	??_setSegmentDisplayNumber+2,f
  1288  0067  2863               	goto	u2525
  1289  0068  0830               	movf	??_setSegmentDisplayNumber,w
  1290  0069  390F               	andlw	15
  1291  006A  00B3               	movwf	??_setSegmentDisplayNumber+3
  1292  006B  085D               	movf	_Segment,w
  1293  006C  3E12               	addlw	18
  1294  006D  0086               	movwf	6
  1295  006E  0187               	clrf	7
  1296  006F  0833               	movf	??_setSegmentDisplayNumber+3,w
  1297  0070  0081               	movwf	1
  1298                           
  1299                           ;SegmentDisplay_A2.c: 30: Segment->Num[2]=((number>>8)&0x000f);
  1300  0071  082F               	movf	setSegmentDisplayNumber@number+1,w
  1301  0072  390F               	andlw	15
  1302  0073  00B0               	movwf	??_setSegmentDisplayNumber
  1303  0074  085D               	movf	_Segment,w
  1304  0075  3E13               	addlw	19
  1305  0076  0086               	movwf	6
  1306  0077  0187               	clrf	7
  1307  0078  0830               	movf	??_setSegmentDisplayNumber,w
  1308  0079  0081               	movwf	1
  1309                           
  1310                           ;SegmentDisplay_A2.c: 31: Segment->Num[3]=((number>>12)&0x000f);
  1311  007A  082F               	movf	setSegmentDisplayNumber@number+1,w
  1312  007B  00B1               	movwf	??_setSegmentDisplayNumber+1
  1313  007C  082E               	movf	setSegmentDisplayNumber@number,w
  1314  007D  00B0               	movwf	??_setSegmentDisplayNumber
  1315  007E  300C               	movlw	12
  1316  007F  00B2               	movwf	??_setSegmentDisplayNumber+2
  1317  0080                     u2535:	
  1318  0080  0D31               	rlf	??_setSegmentDisplayNumber+1,w
  1319  0081  0CB1               	rrf	??_setSegmentDisplayNumber+1,f
  1320  0082  0CB0               	rrf	??_setSegmentDisplayNumber,f
  1321  0083  0BB2               	decfsz	??_setSegmentDisplayNumber+2,f
  1322  0084  2880               	goto	u2535
  1323  0085  0830               	movf	??_setSegmentDisplayNumber,w
  1324  0086  390F               	andlw	15
  1325  0087  00B3               	movwf	??_setSegmentDisplayNumber+3
  1326  0088  085D               	movf	_Segment,w
  1327  0089  3E14               	addlw	20
  1328  008A  0086               	movwf	6
  1329  008B  0187               	clrf	7
  1330  008C  0833               	movf	??_setSegmentDisplayNumber+3,w
  1331  008D  293B               	goto	L1
  1332  008E                     l1994:	
  1333                           ;SegmentDisplay_A2.c: 32: }
  1334                           
  1335                           
  1336                           ;SegmentDisplay_A2.c: 33: else if(Segment->Dec)
  1337  008E  085D               	movf	_Segment,w
  1338  008F  3E15               	addlw	21
  1339  0090  0086               	movwf	6
  1340  0091  0187               	clrf	7
  1341  0092  1D81               	btfss	1,3
  1342  0093  293C               	goto	l2022
  1343                           
  1344                           ;SegmentDisplay_A2.c: 34: {
  1345                           ;SegmentDisplay_A2.c: 35: if(number > 0x270f)
  1346  0094  082F               	movf	setSegmentDisplayNumber@number+1,w
  1347  0095  3A80               	xorlw	128
  1348  0096  00B0               	movwf	??_setSegmentDisplayNumber
  1349  0097  30A7               	movlw	167
  1350  0098  0230               	subwf	??_setSegmentDisplayNumber,w
  1351  0099  1D03               	skipz
  1352  009A  289D               	goto	u2555
  1353  009B  3010               	movlw	16
  1354  009C  022E               	subwf	setSegmentDisplayNumber@number,w
  1355  009D                     u2555:	
  1356  009D  1C03               	skipc
  1357  009E  28B5               	goto	l2010
  1358                           
  1359                           ;SegmentDisplay_A2.c: 36: {
  1360                           ;SegmentDisplay_A2.c: 37: for(i=0 ; i<4; i++)
  1361  009F  0020               	movlb	0	; select bank0
  1362  00A0  01B4               	clrf	setSegmentDisplayNumber@i
  1363  00A1                     L2:	
  1364  00A1  3004               	movlw	4
  1365  00A2  0234               	subwf	setSegmentDisplayNumber@i,w
  1366  00A3  1803               	btfsc	3,0
  1367  00A4  293C               	goto	l2022
  1368                           
  1369                           ;SegmentDisplay_A2.c: 38: {
  1370                           ;SegmentDisplay_A2.c: 39: Segment->Num[i]=16;
  1371  00A5  3010               	movlw	16
  1372  00A6  00B0               	movwf	??_setSegmentDisplayNumber
  1373  00A7  0834               	movf	setSegmentDisplayNumber@i,w
  1374  00A8  3E11               	addlw	17
  1375  00A9  075D               	addwf	_Segment,w
  1376  00AA  00B1               	movwf	??_setSegmentDisplayNumber+1
  1377  00AB  0831               	movf	??_setSegmentDisplayNumber+1,w
  1378  00AC  0086               	movwf	6
  1379  00AD  0187               	clrf	7
  1380  00AE  0830               	movf	??_setSegmentDisplayNumber,w
  1381  00AF  0081               	movwf	1
  1382  00B0  3001               	movlw	1
  1383  00B1  00B0               	movwf	??_setSegmentDisplayNumber
  1384  00B2  0830               	movf	??_setSegmentDisplayNumber,w
  1385  00B3  07B4               	addwf	setSegmentDisplayNumber@i,f
  1386  00B4  28A1               	goto	L2
  1387  00B5                     l2010:	
  1388                           ;SegmentDisplay_A2.c: 40: }
  1389                           ;SegmentDisplay_A2.c: 41: }
  1390                           
  1391                           
  1392                           ;SegmentDisplay_A2.c: 42: else
  1393                           ;SegmentDisplay_A2.c: 43: {
  1394                           ;SegmentDisplay_A2.c: 44: Segment->Num[3]=(number/1000);
  1395  00B5  30E8               	movlw	232
  1396  00B6  0020               	movlb	0	; select bank0
  1397  00B7  00A5               	movwf	___awdiv@divisor
  1398  00B8  3003               	movlw	3
  1399  00B9  00A6               	movwf	___awdiv@divisor+1
  1400  00BA  082F               	movf	setSegmentDisplayNumber@number+1,w
  1401  00BB  01A8               	clrf	___awdiv@dividend+1
  1402  00BC  07A8               	addwf	___awdiv@dividend+1,f
  1403  00BD  082E               	movf	setSegmentDisplayNumber@number,w
  1404  00BE  01A7               	clrf	___awdiv@dividend
  1405  00BF  07A7               	addwf	___awdiv@dividend,f
  1406  00C0  3184  24A4  3180   	fcall	___awdiv
  1407  00C3  0020               	movlb	0	; select bank0
  1408  00C4  0825               	movf	?___awdiv,w
  1409  00C5  00B0               	movwf	??_setSegmentDisplayNumber
  1410  00C6  085D               	movf	_Segment,w
  1411  00C7  3E14               	addlw	20
  1412  00C8  0086               	movwf	6
  1413  00C9  0187               	clrf	7
  1414  00CA  0830               	movf	??_setSegmentDisplayNumber,w
  1415  00CB  0081               	movwf	1
  1416                           
  1417                           ;SegmentDisplay_A2.c: 45: number%=1000;
  1418  00CC  30E8               	movlw	232
  1419  00CD  00A5               	movwf	___awmod@divisor
  1420  00CE  3003               	movlw	3
  1421  00CF  00A6               	movwf	___awmod@divisor+1
  1422  00D0  082F               	movf	setSegmentDisplayNumber@number+1,w
  1423  00D1  01A8               	clrf	___awmod@dividend+1
  1424  00D2  07A8               	addwf	___awmod@dividend+1,f
  1425  00D3  082E               	movf	setSegmentDisplayNumber@number,w
  1426  00D4  01A7               	clrf	___awmod@dividend
  1427  00D5  07A7               	addwf	___awmod@dividend,f
  1428  00D6  3185  259B  3180   	fcall	___awmod
  1429  00D9  0020               	movlb	0	; select bank0
  1430  00DA  0826               	movf	?___awmod+1,w
  1431  00DB  01AF               	clrf	setSegmentDisplayNumber@number+1
  1432  00DC  07AF               	addwf	setSegmentDisplayNumber@number+1,f
  1433  00DD  0825               	movf	?___awmod,w
  1434  00DE  01AE               	clrf	setSegmentDisplayNumber@number
  1435  00DF  07AE               	addwf	setSegmentDisplayNumber@number,f
  1436                           
  1437                           ;SegmentDisplay_A2.c: 46: Segment->Num[2]=(number/100);
  1438  00E0  3064               	movlw	100
  1439  00E1  00A5               	movwf	___awdiv@divisor
  1440  00E2  3000               	movlw	0
  1441  00E3  00A6               	movwf	___awdiv@divisor+1
  1442  00E4  082F               	movf	setSegmentDisplayNumber@number+1,w
  1443  00E5  01A8               	clrf	___awdiv@dividend+1
  1444  00E6  07A8               	addwf	___awdiv@dividend+1,f
  1445  00E7  082E               	movf	setSegmentDisplayNumber@number,w
  1446  00E8  01A7               	clrf	___awdiv@dividend
  1447  00E9  07A7               	addwf	___awdiv@dividend,f
  1448  00EA  3184  24A4  3180   	fcall	___awdiv
  1449  00ED  0020               	movlb	0	; select bank0
  1450  00EE  0825               	movf	?___awdiv,w
  1451  00EF  00B0               	movwf	??_setSegmentDisplayNumber
  1452  00F0  085D               	movf	_Segment,w
  1453  00F1  3E13               	addlw	19
  1454  00F2  0086               	movwf	6
  1455  00F3  0187               	clrf	7
  1456  00F4  0830               	movf	??_setSegmentDisplayNumber,w
  1457  00F5  0081               	movwf	1
  1458                           
  1459                           ;SegmentDisplay_A2.c: 47: number%=100;
  1460  00F6  3064               	movlw	100
  1461  00F7  00A5               	movwf	___awmod@divisor
  1462  00F8  3000               	movlw	0
  1463  00F9  00A6               	movwf	___awmod@divisor+1
  1464  00FA  082F               	movf	setSegmentDisplayNumber@number+1,w
  1465  00FB  01A8               	clrf	___awmod@dividend+1
  1466  00FC  07A8               	addwf	___awmod@dividend+1,f
  1467  00FD  082E               	movf	setSegmentDisplayNumber@number,w
  1468  00FE  01A7               	clrf	___awmod@dividend
  1469  00FF  07A7               	addwf	___awmod@dividend,f
  1470  0100  3185  259B  3180   	fcall	___awmod
  1471  0103  0020               	movlb	0	; select bank0
  1472  0104  0826               	movf	?___awmod+1,w
  1473  0105  01AF               	clrf	setSegmentDisplayNumber@number+1
  1474  0106  07AF               	addwf	setSegmentDisplayNumber@number+1,f
  1475  0107  0825               	movf	?___awmod,w
  1476  0108  01AE               	clrf	setSegmentDisplayNumber@number
  1477  0109  07AE               	addwf	setSegmentDisplayNumber@number,f
  1478                           
  1479                           ;SegmentDisplay_A2.c: 48: Segment->Num[1]=(number/10);
  1480  010A  300A               	movlw	10
  1481  010B  00A5               	movwf	___awdiv@divisor
  1482  010C  3000               	movlw	0
  1483  010D  00A6               	movwf	___awdiv@divisor+1
  1484  010E  082F               	movf	setSegmentDisplayNumber@number+1,w
  1485  010F  01A8               	clrf	___awdiv@dividend+1
  1486  0110  07A8               	addwf	___awdiv@dividend+1,f
  1487  0111  082E               	movf	setSegmentDisplayNumber@number,w
  1488  0112  01A7               	clrf	___awdiv@dividend
  1489  0113  07A7               	addwf	___awdiv@dividend,f
  1490  0114  3184  24A4  3180   	fcall	___awdiv
  1491  0117  0020               	movlb	0	; select bank0
  1492  0118  0825               	movf	?___awdiv,w
  1493  0119  00B0               	movwf	??_setSegmentDisplayNumber
  1494  011A  085D               	movf	_Segment,w
  1495  011B  3E12               	addlw	18
  1496  011C  0086               	movwf	6
  1497  011D  0187               	clrf	7
  1498  011E  0830               	movf	??_setSegmentDisplayNumber,w
  1499  011F  0081               	movwf	1
  1500                           
  1501                           ;SegmentDisplay_A2.c: 49: number%=10;
  1502  0120  300A               	movlw	10
  1503  0121  00A5               	movwf	___awmod@divisor
  1504  0122  3000               	movlw	0
  1505  0123  00A6               	movwf	___awmod@divisor+1
  1506  0124  082F               	movf	setSegmentDisplayNumber@number+1,w
  1507  0125  01A8               	clrf	___awmod@dividend+1
  1508  0126  07A8               	addwf	___awmod@dividend+1,f
  1509  0127  082E               	movf	setSegmentDisplayNumber@number,w
  1510  0128  01A7               	clrf	___awmod@dividend
  1511  0129  07A7               	addwf	___awmod@dividend,f
  1512  012A  3185  259B  3180   	fcall	___awmod
  1513  012D  0020               	movlb	0	; select bank0
  1514  012E  0826               	movf	?___awmod+1,w
  1515  012F  01AF               	clrf	setSegmentDisplayNumber@number+1
  1516  0130  07AF               	addwf	setSegmentDisplayNumber@number+1,f
  1517  0131  0825               	movf	?___awmod,w
  1518  0132  01AE               	clrf	setSegmentDisplayNumber@number
  1519  0133  07AE               	addwf	setSegmentDisplayNumber@number,f
  1520                           
  1521                           ;SegmentDisplay_A2.c: 50: Segment->Num[0]=number;
  1522  0134  082E               	movf	setSegmentDisplayNumber@number,w
  1523  0135  00B0               	movwf	??_setSegmentDisplayNumber
  1524  0136  085D               	movf	_Segment,w
  1525  0137  3E11               	addlw	17
  1526  0138  0086               	movwf	6
  1527  0139  0187               	clrf	7
  1528  013A  0830               	movf	??_setSegmentDisplayNumber,w
  1529  013B                     L1:	
  1530  013B  0081               	movwf	1
  1531  013C                     l2022:	
  1532                           
  1533                           ;SegmentDisplay_A2.c: 51: }
  1534                           ;SegmentDisplay_A2.c: 52: }
  1535                           ;SegmentDisplay_A2.c: 53: if(Segment->Num[3] > 0)
  1536  013C  085D               	movf	_Segment,w
  1537  013D  3E14               	addlw	20
  1538  013E  0086               	movwf	6
  1539  013F  0187               	clrf	7
  1540  0140  0801               	movf	1,w
  1541  0141  3A00               	xorlw	0
  1542  0142  1903               	skipnz
  1543  0143  294D               	goto	l2026
  1544                           
  1545                           ;SegmentDisplay_A2.c: 54: {
  1546                           ;SegmentDisplay_A2.c: 55: Segment->DisplayCount=3;
  1547  0144  3003               	movlw	3
  1548  0145  00B0               	movwf	??_setSegmentDisplayNumber
  1549  0146  085D               	movf	_Segment,w
  1550  0147  3E17               	addlw	23
  1551  0148  0086               	movwf	6
  1552  0149  0187               	clrf	7
  1553  014A  0830               	movf	??_setSegmentDisplayNumber,w
  1554  014B  0081               	movwf	1
  1555                           
  1556                           ;SegmentDisplay_A2.c: 56: }
  1557  014C  0008               	return
  1558  014D                     l2026:	
  1559                           
  1560                           ;SegmentDisplay_A2.c: 57: else if(Segment->Num[2] > 0)
  1561  014D  085D               	movf	_Segment,w
  1562  014E  3E13               	addlw	19
  1563  014F  0086               	movwf	6
  1564  0150  0187               	clrf	7
  1565  0151  0801               	movf	1,w
  1566  0152  3A00               	xorlw	0
  1567  0153  1903               	skipnz
  1568  0154  295E               	goto	l2030
  1569                           
  1570                           ;SegmentDisplay_A2.c: 58: {
  1571                           ;SegmentDisplay_A2.c: 59: Segment->DisplayCount=2;
  1572  0155  3002               	movlw	2
  1573  0156  00B0               	movwf	??_setSegmentDisplayNumber
  1574  0157  085D               	movf	_Segment,w
  1575  0158  3E17               	addlw	23
  1576  0159  0086               	movwf	6
  1577  015A  0187               	clrf	7
  1578  015B  0830               	movf	??_setSegmentDisplayNumber,w
  1579  015C  0081               	movwf	1
  1580                           
  1581                           ;SegmentDisplay_A2.c: 60: }
  1582  015D  0008               	return
  1583  015E                     l2030:	
  1584                           
  1585                           ;SegmentDisplay_A2.c: 61: else if(Segment->Num[1] > 0)
  1586  015E  085D               	movf	_Segment,w
  1587  015F  3E12               	addlw	18
  1588  0160  0086               	movwf	6
  1589  0161  0187               	clrf	7
  1590  0162  0801               	movf	1,w
  1591  0163  3A00               	xorlw	0
  1592  0164  1903               	skipnz
  1593  0165  296D               	goto	l2034
  1594                           
  1595                           ;SegmentDisplay_A2.c: 62: {
  1596                           ;SegmentDisplay_A2.c: 63: Segment->DisplayCount=1;
  1597  0166  085D               	movf	_Segment,w
  1598  0167  3E17               	addlw	23
  1599  0168  0086               	movwf	6
  1600  0169  0187               	clrf	7
  1601  016A  0181               	clrf	1
  1602  016B  0A81               	incf	1,f
  1603                           
  1604                           ;SegmentDisplay_A2.c: 64: }
  1605  016C  0008               	return
  1606  016D                     l2034:	
  1607                           
  1608                           ;SegmentDisplay_A2.c: 65: else
  1609                           ;SegmentDisplay_A2.c: 66: {
  1610                           ;SegmentDisplay_A2.c: 67: Segment->DisplayCount=0;
  1611  016D  085D               	movf	_Segment,w
  1612  016E  3E17               	addlw	23
  1613  016F  0086               	movwf	6
  1614  0170  0187               	clrf	7
  1615  0171  0181               	clrf	1
  1616  0172  0008               	return
  1617  0173                     __end_of_setSegmentDisplayNumber:	
  1618                           
  1619                           	psect	text3
  1620  059B                     __ptext3:	
  1621 ;; *************** function ___awmod *****************
  1622 ;; Defined at:
  1623 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  divisor         2    5[BANK0 ] int 
  1626 ;;  dividend        2    7[BANK0 ] int 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  sign            1   11[BANK0 ] unsigned char 
  1629 ;;  counter         1   10[BANK0 ] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  2    5[BANK0 ] int 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1639 ;;      Params:         0       4       0       0       0       0       0       0
  1640 ;;      Locals:         0       2       0       0       0       0       0       0
  1641 ;;      Temps:          0       1       0       0       0       0       0       0
  1642 ;;      Totals:         0       7       0       0       0       0       0       0
  1643 ;;Total ram usage:        7 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    4
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_setSegmentDisplayNumber
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function ___awmod
  1655  059B                     ___awmod:	
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1659  059B  0020               	movlb	0	; select bank0
  1660  059C  01AB               	clrf	___awmod@sign
  1661  059D  1FA8               	btfss	___awmod@dividend+1,7
  1662  059E  2DA6               	goto	l1784
  1663  059F  09A7               	comf	___awmod@dividend,f
  1664  05A0  09A8               	comf	___awmod@dividend+1,f
  1665  05A1  0AA7               	incf	___awmod@dividend,f
  1666  05A2  1903               	skipnz
  1667  05A3  0AA8               	incf	___awmod@dividend+1,f
  1668  05A4  01AB               	clrf	___awmod@sign
  1669  05A5  0AAB               	incf	___awmod@sign,f
  1670  05A6                     l1784:	
  1671  05A6  1FA6               	btfss	___awmod@divisor+1,7
  1672  05A7  2DAD               	goto	l1788
  1673  05A8  09A5               	comf	___awmod@divisor,f
  1674  05A9  09A6               	comf	___awmod@divisor+1,f
  1675  05AA  0AA5               	incf	___awmod@divisor,f
  1676  05AB  1903               	skipnz
  1677  05AC  0AA6               	incf	___awmod@divisor+1,f
  1678  05AD                     l1788:	
  1679  05AD  0826               	movf	___awmod@divisor+1,w
  1680  05AE  0425               	iorwf	___awmod@divisor,w
  1681  05AF  1903               	skipnz
  1682  05B0  2DD4               	goto	l1806
  1683  05B1  01AA               	clrf	___awmod@counter
  1684  05B2  0AAA               	incf	___awmod@counter,f
  1685  05B3                     l1796:	
  1686  05B3  1BA6               	btfsc	___awmod@divisor+1,7
  1687  05B4  2DBF               	goto	l1798
  1688  05B5  3001               	movlw	1
  1689  05B6                     u1935:	
  1690  05B6  35A5               	lslf	___awmod@divisor,f
  1691  05B7  0DA6               	rlf	___awmod@divisor+1,f
  1692  05B8  0B89               	decfsz	9,f
  1693  05B9  2DB6               	goto	u1935
  1694  05BA  3001               	movlw	1
  1695  05BB  00A9               	movwf	??___awmod
  1696  05BC  0829               	movf	??___awmod,w
  1697  05BD  07AA               	addwf	___awmod@counter,f
  1698  05BE  2DB3               	goto	l1796
  1699  05BF                     l1798:	
  1700  05BF  0826               	movf	___awmod@divisor+1,w
  1701  05C0  0228               	subwf	___awmod@dividend+1,w
  1702  05C1  1D03               	skipz
  1703  05C2  2DC5               	goto	u1955
  1704  05C3  0825               	movf	___awmod@divisor,w
  1705  05C4  0227               	subwf	___awmod@dividend,w
  1706  05C5                     u1955:	
  1707  05C5  1C03               	skipc
  1708  05C6  2DCB               	goto	l1802
  1709  05C7  0825               	movf	___awmod@divisor,w
  1710  05C8  02A7               	subwf	___awmod@dividend,f
  1711  05C9  0826               	movf	___awmod@divisor+1,w
  1712  05CA  3BA8               	subwfb	___awmod@dividend+1,f
  1713  05CB                     l1802:	
  1714  05CB  3001               	movlw	1
  1715  05CC                     u1965:	
  1716  05CC  36A6               	lsrf	___awmod@divisor+1,f
  1717  05CD  0CA5               	rrf	___awmod@divisor,f
  1718  05CE  0B89               	decfsz	9,f
  1719  05CF  2DCC               	goto	u1965
  1720  05D0  3001               	movlw	1
  1721  05D1  02AA               	subwf	___awmod@counter,f
  1722  05D2  1D03               	btfss	3,2
  1723  05D3  2DBF               	goto	l1798
  1724  05D4                     l1806:	
  1725  05D4  082B               	movf	___awmod@sign,w
  1726  05D5  1903               	btfsc	3,2
  1727  05D6  2DDC               	goto	l1810
  1728  05D7  09A7               	comf	___awmod@dividend,f
  1729  05D8  09A8               	comf	___awmod@dividend+1,f
  1730  05D9  0AA7               	incf	___awmod@dividend,f
  1731  05DA  1903               	skipnz
  1732  05DB  0AA8               	incf	___awmod@dividend+1,f
  1733  05DC                     l1810:	
  1734  05DC  0828               	movf	___awmod@dividend+1,w
  1735  05DD  01A6               	clrf	?___awmod+1
  1736  05DE  07A6               	addwf	?___awmod+1,f
  1737  05DF  0827               	movf	___awmod@dividend,w
  1738  05E0  01A5               	clrf	?___awmod
  1739  05E1  07A5               	addwf	?___awmod,f
  1740  05E2  0008               	return
  1741  05E3                     __end_of___awmod:	
  1742                           
  1743                           	psect	text4
  1744  04A4                     __ptext4:	
  1745 ;; *************** function ___awdiv *****************
  1746 ;; Defined at:
  1747 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  divisor         2    5[BANK0 ] int 
  1750 ;;  dividend        2    7[BANK0 ] int 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  quotient        2   12[BANK0 ] int 
  1753 ;;  sign            1   11[BANK0 ] unsigned char 
  1754 ;;  counter         1   10[BANK0 ] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2    5[BANK0 ] int 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1764 ;;      Params:         0       4       0       0       0       0       0       0
  1765 ;;      Locals:         0       4       0       0       0       0       0       0
  1766 ;;      Temps:          0       1       0       0       0       0       0       0
  1767 ;;      Totals:         0       9       0       0       0       0       0       0
  1768 ;;Total ram usage:        9 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    4
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_setSegmentDisplayNumber
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           
  1779                           ;psect for function ___awdiv
  1780  04A4                     ___awdiv:	
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1784  04A4  0020               	movlb	0	; select bank0
  1785  04A5  01AB               	clrf	___awdiv@sign
  1786  04A6  1FA6               	btfss	___awdiv@divisor+1,7
  1787  04A7  2CAF               	goto	l1740
  1788  04A8  09A5               	comf	___awdiv@divisor,f
  1789  04A9  09A6               	comf	___awdiv@divisor+1,f
  1790  04AA  0AA5               	incf	___awdiv@divisor,f
  1791  04AB  1903               	skipnz
  1792  04AC  0AA6               	incf	___awdiv@divisor+1,f
  1793  04AD  01AB               	clrf	___awdiv@sign
  1794  04AE  0AAB               	incf	___awdiv@sign,f
  1795  04AF                     l1740:	
  1796  04AF  1FA8               	btfss	___awdiv@dividend+1,7
  1797  04B0  2CBA               	goto	l1746
  1798  04B1  09A7               	comf	___awdiv@dividend,f
  1799  04B2  09A8               	comf	___awdiv@dividend+1,f
  1800  04B3  0AA7               	incf	___awdiv@dividend,f
  1801  04B4  1903               	skipnz
  1802  04B5  0AA8               	incf	___awdiv@dividend+1,f
  1803  04B6  3001               	movlw	1
  1804  04B7  00A9               	movwf	??___awdiv
  1805  04B8  0829               	movf	??___awdiv,w
  1806  04B9  06AB               	xorwf	___awdiv@sign,f
  1807  04BA                     l1746:	
  1808  04BA  01AC               	clrf	___awdiv@quotient
  1809  04BB  01AD               	clrf	___awdiv@quotient+1
  1810  04BC  0826               	movf	___awdiv@divisor+1,w
  1811  04BD  0425               	iorwf	___awdiv@divisor,w
  1812  04BE  1903               	skipnz
  1813  04BF  2CE9               	goto	l1768
  1814  04C0  01AA               	clrf	___awdiv@counter
  1815  04C1  0AAA               	incf	___awdiv@counter,f
  1816  04C2                     l1756:	
  1817  04C2  1BA6               	btfsc	___awdiv@divisor+1,7
  1818  04C3  2CCE               	goto	l1758
  1819  04C4  3001               	movlw	1
  1820  04C5                     u1835:	
  1821  04C5  35A5               	lslf	___awdiv@divisor,f
  1822  04C6  0DA6               	rlf	___awdiv@divisor+1,f
  1823  04C7  0B89               	decfsz	9,f
  1824  04C8  2CC5               	goto	u1835
  1825  04C9  3001               	movlw	1
  1826  04CA  00A9               	movwf	??___awdiv
  1827  04CB  0829               	movf	??___awdiv,w
  1828  04CC  07AA               	addwf	___awdiv@counter,f
  1829  04CD  2CC2               	goto	l1756
  1830  04CE                     l1758:	
  1831  04CE  3001               	movlw	1
  1832  04CF                     u1855:	
  1833  04CF  35AC               	lslf	___awdiv@quotient,f
  1834  04D0  0DAD               	rlf	___awdiv@quotient+1,f
  1835  04D1  0B89               	decfsz	9,f
  1836  04D2  2CCF               	goto	u1855
  1837  04D3  0826               	movf	___awdiv@divisor+1,w
  1838  04D4  0228               	subwf	___awdiv@dividend+1,w
  1839  04D5  1D03               	skipz
  1840  04D6  2CD9               	goto	u1865
  1841  04D7  0825               	movf	___awdiv@divisor,w
  1842  04D8  0227               	subwf	___awdiv@dividend,w
  1843  04D9                     u1865:	
  1844  04D9  1C03               	skipc
  1845  04DA  2CE0               	goto	l1764
  1846  04DB  0825               	movf	___awdiv@divisor,w
  1847  04DC  02A7               	subwf	___awdiv@dividend,f
  1848  04DD  0826               	movf	___awdiv@divisor+1,w
  1849  04DE  3BA8               	subwfb	___awdiv@dividend+1,f
  1850  04DF  142C               	bsf	___awdiv@quotient,0
  1851  04E0                     l1764:	
  1852  04E0  3001               	movlw	1
  1853  04E1                     u1875:	
  1854  04E1  36A6               	lsrf	___awdiv@divisor+1,f
  1855  04E2  0CA5               	rrf	___awdiv@divisor,f
  1856  04E3  0B89               	decfsz	9,f
  1857  04E4  2CE1               	goto	u1875
  1858  04E5  3001               	movlw	1
  1859  04E6  02AA               	subwf	___awdiv@counter,f
  1860  04E7  1D03               	btfss	3,2
  1861  04E8  2CCE               	goto	l1758
  1862  04E9                     l1768:	
  1863  04E9  082B               	movf	___awdiv@sign,w
  1864  04EA  1903               	btfsc	3,2
  1865  04EB  2CF1               	goto	l1772
  1866  04EC  09AC               	comf	___awdiv@quotient,f
  1867  04ED  09AD               	comf	___awdiv@quotient+1,f
  1868  04EE  0AAC               	incf	___awdiv@quotient,f
  1869  04EF  1903               	skipnz
  1870  04F0  0AAD               	incf	___awdiv@quotient+1,f
  1871  04F1                     l1772:	
  1872  04F1  082D               	movf	___awdiv@quotient+1,w
  1873  04F2  01A6               	clrf	?___awdiv+1
  1874  04F3  07A6               	addwf	?___awdiv+1,f
  1875  04F4  082C               	movf	___awdiv@quotient,w
  1876  04F5  01A5               	clrf	?___awdiv
  1877  04F6  07A5               	addwf	?___awdiv,f
  1878  04F7  0008               	return
  1879  04F8                     __end_of___awdiv:	
  1880                           
  1881                           	psect	text5
  1882  07DB                     __ptext5:	
  1883 ;; *************** function _UART_Transmit *****************
  1884 ;; Defined at:
  1885 ;;		line 554 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  i               1   37[BANK0 ] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;		None               void
  1892 ;; Registers used:
  1893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1899 ;;      Params:         0       0       0       0       0       0       0       0
  1900 ;;      Locals:         0       1       0       0       0       0       0       0
  1901 ;;      Temps:          0       2       0       0       0       0       0       0
  1902 ;;      Totals:         0       3       0       0       0       0       0       0
  1903 ;;Total ram usage:        3 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    6
  1906 ;; This function calls:
  1907 ;;		_printf
  1908 ;; This function is called by:
  1909 ;;		_UART_Main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _UART_Transmit
  1915  07DB                     _UART_Transmit:	
  1916                           
  1917                           ;MCU_16f1516_B1.c: 556: char i;
  1918                           ;MCU_16f1516_B1.c: 559: for(i=0;i<32;i++)
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _UART_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1922  07DB  0020               	movlb	0	; select bank0
  1923  07DC  01C5               	clrf	UART_Transmit@i
  1924  07DD                     L3:	
  1925  07DD  3020               	movlw	32
  1926  07DE  0245               	subwf	UART_Transmit@i,w
  1927  07DF  1803               	btfsc	3,0
  1928  07E0  0008               	return
  1929                           
  1930                           ;MCU_16f1516_B1.c: 560: {
  1931                           ;MCU_16f1516_B1.c: 566: printf("%d,",i);
  1932  07E1  300A               	movlw	low (STR_1| (0+32768))
  1933  07E2  00B3               	movwf	printf@f
  1934  07E3  3090               	movlw	high (STR_1| (0+32768))
  1935  07E4  00B4               	movwf	printf@f+1
  1936  07E5  0845               	movf	UART_Transmit@i,w
  1937  07E6  00C3               	movwf	??_UART_Transmit
  1938  07E7  01C4               	clrf	??_UART_Transmit+1
  1939  07E8  0843               	movf	??_UART_Transmit,w
  1940  07E9  00B5               	movwf	?_printf+2
  1941  07EA  0844               	movf	??_UART_Transmit+1,w
  1942  07EB  00B6               	movwf	?_printf+3
  1943  07EC  3182  22A2  3187   	fcall	_printf
  1944  07EF  3001               	movlw	1
  1945  07F0  0020               	movlb	0	; select bank0
  1946  07F1  00C3               	movwf	??_UART_Transmit
  1947  07F2  0843               	movf	??_UART_Transmit,w
  1948  07F3  07C5               	addwf	UART_Transmit@i,f
  1949  07F4  2FDD               	goto	L3
  1950  07F5                     __end_of_UART_Transmit:	
  1951                           
  1952                           	psect	text6
  1953  02A2                     __ptext6:	
  1954 ;; *************** function _printf *****************
  1955 ;; Defined at:
  1956 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  f               2   19[BANK0 ] PTR const unsigned char 
  1959 ;;		 -> STR_1(4), 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  _val            4   30[BANK0 ] struct .
  1962 ;;  c               1   34[BANK0 ] char 
  1963 ;;  prec            1   29[BANK0 ] char 
  1964 ;;  flag            1   28[BANK0 ] unsigned char 
  1965 ;;  ap              1   27[BANK0 ] PTR void [1]
  1966 ;;		 -> ?_printf(2), 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2   19[BANK0 ] int 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1976 ;;      Params:         0       4       0       0       0       0       0       0
  1977 ;;      Locals:         0       8       0       0       0       0       0       0
  1978 ;;      Temps:          0       4       0       0       0       0       0       0
  1979 ;;      Totals:         0      16       0       0       0       0       0       0
  1980 ;;Total ram usage:       16 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    5
  1983 ;; This function calls:
  1984 ;;		___lwdiv
  1985 ;;		___lwmod
  1986 ;;		_putch
  1987 ;; This function is called by:
  1988 ;;		_UART_Transmit
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           
  1993                           ;psect for function _printf
  1994  02A2                     _printf:	
  1995                           
  1996                           ;doprnt.c: 466: va_list ap;
  1997                           ;doprnt.c: 499: signed char c;
  1998                           ;doprnt.c: 506: signed char prec;
  1999                           ;doprnt.c: 508: unsigned char flag;
  2000                           ;doprnt.c: 527: union {
  2001                           ;doprnt.c: 528: unsigned int _val;
  2002                           ;doprnt.c: 529: struct {
  2003                           ;doprnt.c: 530: const char * _cp;
  2004                           ;doprnt.c: 531: unsigned _len;
  2005                           ;doprnt.c: 532: } _str;
  2006                           ;doprnt.c: 533: } _val;
  2007                           ;doprnt.c: 542: *ap = __va_start();
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2011  02A2  3035               	movlw	(?_printf+2)& (0+255)
  2012  02A3  0020               	movlb	0	; select bank0
  2013  02A4  00B7               	movwf	??_printf
  2014  02A5  0837               	movf	??_printf,w
  2015  02A6  00BB               	movwf	printf@ap
  2016  02A7                     l1730:	
  2017                           ;doprnt.c: 545: while(c = *f++) {
  2018                           
  2019  02A7  0020               	movlb	0	; select bank0
  2020  02A8  0834               	movf	printf@f+1,w
  2021  02A9  00B8               	movwf	??_printf+1
  2022  02AA  0833               	movf	printf@f,w
  2023  02AB  00B7               	movwf	??_printf
  2024  02AC  0AB3               	incf	printf@f,f
  2025  02AD  1903               	skipnz
  2026  02AE  0AB4               	incf	printf@f+1,f
  2027  02AF  0837               	movf	??_printf,w
  2028  02B0  0084               	movwf	4
  2029  02B1  0838               	movf	??_printf+1,w
  2030  02B2  0085               	movwf	5
  2031  02B3  0800               	movf	0,w	;code access
  2032  02B4  00B9               	movwf	??_printf+2
  2033  02B5  0839               	movf	??_printf+2,w
  2034  02B6  00C2               	movwf	printf@c
  2035  02B7  08C2               	movf	printf@c,f
  2036  02B8  1903               	btfsc	3,2
  2037  02B9  0008               	return
  2038                           
  2039                           ;doprnt.c: 547: if(c != '%')
  2040  02BA  0842               	movf	printf@c,w
  2041  02BB  3A25               	xorlw	37
  2042  02BC  1903               	skipnz
  2043  02BD  2AC3               	goto	l1690
  2044                           
  2045                           ;doprnt.c: 549: {
  2046                           ;doprnt.c: 550: (putch(c) );
  2047  02BE  0842               	movf	printf@c,w
  2048  02BF  3187  27F5  3182   	fcall	_putch
  2049                           
  2050                           ;doprnt.c: 551: continue;
  2051  02C2  2AA7               	goto	l1730
  2052  02C3                     l1690:	
  2053                           
  2054                           ;doprnt.c: 552: }
  2055                           ;doprnt.c: 557: flag = 0;
  2056  02C3  0020               	movlb	0	; select bank0
  2057  02C4  01BC               	clrf	printf@flag
  2058                           
  2059                           ;doprnt.c: 831: }
  2060                           
  2061                           ;doprnt.c: 822: continue;
  2062                           
  2063                           ;doprnt.c: 811: default:
  2064                           
  2065                           ;doprnt.c: 707: case 'i':
  2066                           ;doprnt.c: 708: break;
  2067                           
  2068                           ;doprnt.c: 706: case 'd':
  2069                           
  2070                           ;doprnt.c: 647: goto alldone;
  2071                           
  2072                           ;doprnt.c: 646: case 0:
  2073                           
  2074                           ;doprnt.c: 644: switch(c = *f++) {
  2075  02C5  0834               	movf	printf@f+1,w
  2076  02C6  00B8               	movwf	??_printf+1
  2077  02C7  0833               	movf	printf@f,w
  2078  02C8  00B7               	movwf	??_printf
  2079  02C9  0AB3               	incf	printf@f,f
  2080  02CA  1903               	skipnz
  2081  02CB  0AB4               	incf	printf@f+1,f
  2082  02CC  0837               	movf	??_printf,w
  2083  02CD  0084               	movwf	4
  2084  02CE  0838               	movf	??_printf+1,w
  2085  02CF  0085               	movwf	5
  2086  02D0  0800               	movf	0,w	;code access
  2087  02D1  00C2               	movwf	printf@c
  2088                           
  2089                           ; Switch size 1, requested type "space"
  2090                           ; Number of cases is 3, Range of values is 0 to 105
  2091                           ; switch strategies available:
  2092                           ; Name         Instructions Cycles
  2093                           ; simple_byte           10     6 (average)
  2094                           ; direct_byte          218     6 (fixed)
  2095                           ; jumptable            260     6 (fixed)
  2096                           ;	Chosen strategy is simple_byte
  2097  02D2  3A00               	xorlw	0	; case 0
  2098  02D3  1903               	skipnz
  2099  02D4  2B5E               	goto	l517
  2100  02D5  3A64               	xorlw	100	; case 100
  2101  02D6  1903               	skipnz
  2102  02D7  2ADC               	goto	l1696
  2103  02D8  3A0D               	xorlw	13	; case 105
  2104  02D9  1903               	skipnz
  2105  02DA  2ADC               	goto	l1696
  2106  02DB  2AA7               	goto	l1730
  2107  02DC                     l1696:	
  2108                           
  2109                           ;doprnt.c: 1262: {
  2110                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2111  02DC  083B               	movf	printf@ap,w
  2112  02DD  0086               	movwf	6
  2113  02DE  0187               	clrf	7
  2114  02DF  3F40               	moviw [0]fsr1
  2115  02E0  00BE               	movwf	printf@_val
  2116  02E1  3F41               	moviw [1]fsr1
  2117  02E2  00BF               	movwf	printf@_val+1
  2118  02E3  3002               	movlw	2
  2119  02E4  00B7               	movwf	??_printf
  2120  02E5  0837               	movf	??_printf,w
  2121  02E6  07BB               	addwf	printf@ap,f
  2122                           
  2123                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2124  02E7  1FBF               	btfss	printf@_val+1,7
  2125  02E8  2AF2               	goto	l1706
  2126                           
  2127                           ;doprnt.c: 1271: flag |= 0x03;
  2128  02E9  3003               	movlw	3
  2129  02EA  00B7               	movwf	??_printf
  2130  02EB  0837               	movf	??_printf,w
  2131  02EC  04BC               	iorwf	printf@flag,f
  2132                           
  2133                           ;doprnt.c: 1272: _val._val = -_val._val;
  2134  02ED  09BE               	comf	printf@_val,f
  2135  02EE  09BF               	comf	printf@_val+1,f
  2136  02EF  0ABE               	incf	printf@_val,f
  2137  02F0  1903               	skipnz
  2138  02F1  0ABF               	incf	printf@_val+1,f
  2139  02F2                     l1706:	
  2140                           
  2141                           ;doprnt.c: 1273: }
  2142                           ;doprnt.c: 1275: }
  2143                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2144  02F2  01C2               	clrf	printf@c
  2145  02F3  0AC2               	incf	printf@c,f
  2146  02F4  0842               	movf	printf@c,w
  2147  02F5  3A05               	xorlw	5
  2148  02F6  1903               	btfsc	3,2
  2149  02F7  2B17               	goto	l1718
  2150  02F8                     l1710:	
  2151                           
  2152                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2153  02F8  0842               	movf	printf@c,w
  2154  02F9  00B7               	movwf	??_printf
  2155  02FA  01B8               	clrf	??_printf+1
  2156  02FB  35B7               	lslf	??_printf,f
  2157  02FC  0DB8               	rlf	??_printf+1,f
  2158  02FD  3000               	movlw	low (_dpowers| (0+32768))
  2159  02FE  0737               	addwf	??_printf,w
  2160  02FF  0084               	movwf	4
  2161  0300  3090               	movlw	high (_dpowers| (0+32768))
  2162  0301  3D38               	addwfc	??_printf+1,w
  2163  0302  0085               	movwf	5
  2164  0303  3F00               	moviw [0]fsr0
  2165  0304  00B9               	movwf	??_printf+2
  2166  0305  3F01               	moviw [1]fsr0
  2167  0306  00BA               	movwf	??_printf+3
  2168  0307  083A               	movf	??_printf+3,w
  2169  0308  023F               	subwf	printf@_val+1,w
  2170  0309  1D03               	skipz
  2171  030A  2B0D               	goto	u1755
  2172  030B  0839               	movf	??_printf+2,w
  2173  030C  023E               	subwf	printf@_val,w
  2174  030D                     u1755:	
  2175  030D  1C03               	btfss	3,0
  2176  030E  2B17               	goto	l1718
  2177                           
  2178                           ;doprnt.c: 1316: break;
  2179  030F  3001               	movlw	1
  2180  0310  00B7               	movwf	??_printf
  2181  0311  0837               	movf	??_printf,w
  2182  0312  07C2               	addwf	printf@c,f
  2183  0313  0842               	movf	printf@c,w
  2184  0314  3A05               	xorlw	5
  2185  0315  1D03               	skipz
  2186  0316  2AF8               	goto	l1710
  2187  0317                     l1718:	
  2188                           
  2189                           ;doprnt.c: 1431: {
  2190                           ;doprnt.c: 1447: if(flag & 0x03)
  2191  0317  083C               	movf	printf@flag,w
  2192  0318  3903               	andlw	3
  2193  0319  1903               	btfsc	3,2
  2194  031A  2B1F               	goto	l1722
  2195                           
  2196                           ;doprnt.c: 1448: (putch('-') );
  2197  031B  302D               	movlw	45
  2198  031C  3187  27F5  3182   	fcall	_putch
  2199  031F                     l1722:	
  2200                           
  2201                           ;doprnt.c: 1478: }
  2202                           ;doprnt.c: 1481: prec = c;
  2203  031F  0020               	movlb	0	; select bank0
  2204  0320  0842               	movf	printf@c,w
  2205  0321  00B7               	movwf	??_printf
  2206  0322  0837               	movf	??_printf,w
  2207  0323  00BD               	movwf	printf@prec
  2208  0324                     l1728:	
  2209                           ;doprnt.c: 1483: while(prec--) {
  2210                           
  2211  0324  30FF               	movlw	-1
  2212  0325  0020               	movlb	0	; select bank0
  2213  0326  00B7               	movwf	??_printf
  2214  0327  0837               	movf	??_printf,w
  2215  0328  07BD               	addwf	printf@prec,f
  2216  0329  083D               	movf	printf@prec,w
  2217  032A  3AFF               	xorlw	255
  2218  032B  1903               	btfsc	3,2
  2219  032C  2AA7               	goto	l1730
  2220                           
  2221                           ;doprnt.c: 1487: {
  2222                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2223  032D  300A               	movlw	10
  2224  032E  00AD               	movwf	___lwmod@divisor
  2225  032F  3000               	movlw	0
  2226  0330  00AE               	movwf	___lwmod@divisor+1
  2227  0331  083D               	movf	printf@prec,w
  2228  0332  00B7               	movwf	??_printf
  2229  0333  01B8               	clrf	??_printf+1
  2230  0334  35B7               	lslf	??_printf,f
  2231  0335  0DB8               	rlf	??_printf+1,f
  2232  0336  3000               	movlw	low (_dpowers| (0+32768))
  2233  0337  0737               	addwf	??_printf,w
  2234  0338  0084               	movwf	4
  2235  0339  3090               	movlw	high (_dpowers| (0+32768))
  2236  033A  3D38               	addwfc	??_printf+1,w
  2237  033B  0085               	movwf	5
  2238  033C  3F00               	moviw [0]fsr0
  2239  033D  00A5               	movwf	___lwdiv@divisor
  2240  033E  3F01               	moviw [1]fsr0
  2241  033F  00A6               	movwf	___lwdiv@divisor+1
  2242  0340  083F               	movf	printf@_val+1,w
  2243  0341  01A8               	clrf	___lwdiv@dividend+1
  2244  0342  07A8               	addwf	___lwdiv@dividend+1,f
  2245  0343  083E               	movf	printf@_val,w
  2246  0344  01A7               	clrf	___lwdiv@dividend
  2247  0345  07A7               	addwf	___lwdiv@dividend,f
  2248  0346  3186  269C  3182   	fcall	___lwdiv
  2249  0349  0020               	movlb	0	; select bank0
  2250  034A  0826               	movf	?___lwdiv+1,w
  2251  034B  01B0               	clrf	___lwmod@dividend+1
  2252  034C  07B0               	addwf	___lwmod@dividend+1,f
  2253  034D  0825               	movf	?___lwdiv,w
  2254  034E  01AF               	clrf	___lwmod@dividend
  2255  034F  07AF               	addwf	___lwmod@dividend,f
  2256  0350  3187  2738  3182   	fcall	___lwmod
  2257  0353  0020               	movlb	0	; select bank0
  2258  0354  082D               	movf	?___lwmod,w
  2259  0355  3E30               	addlw	48
  2260  0356  00B9               	movwf	??_printf+2
  2261  0357  0839               	movf	??_printf+2,w
  2262  0358  00C2               	movwf	printf@c
  2263                           
  2264                           ;doprnt.c: 1532: }
  2265                           ;doprnt.c: 1533: (putch(c) );
  2266  0359  0842               	movf	printf@c,w
  2267  035A  3187  27F5  3182   	fcall	_putch
  2268  035D  2B24               	goto	l1728
  2269  035E                     l517:	
  2270                           ;doprnt.c: 1549: return 0;
  2271                           ;	Return value of _printf is never used
  2272                           
  2273                           ;doprnt.c: 1534: }
  2274                           ;doprnt.c: 1542: }
  2275                           ;doprnt.c: 1544: alldone:
  2276                           
  2277  035E  0008               	return
  2278  035F                     __end_of_printf:	
  2279                           
  2280                           	psect	text7
  2281  07F5                     __ptext7:	
  2282 ;; *************** function _putch *****************
  2283 ;; Defined at:
  2284 ;;		line 612 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  byte            1    wreg     unsigned char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  byte            1    5[BANK0 ] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2298 ;;      Params:         0       0       0       0       0       0       0       0
  2299 ;;      Locals:         0       1       0       0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0
  2301 ;;      Totals:         0       1       0       0       0       0       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    4
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_printf
  2309 ;;		_getche
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _putch
  2315  07F5                     _putch:	
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _putch: [wreg]
  2319                           ;putch@byte stored from wreg
  2320  07F5  0020               	movlb	0	; select bank0
  2321  07F6  00A5               	movwf	putch@byte
  2322  07F7                     l343:	
  2323                           ;MCU_16f1516_B1.c: 616: continue;
  2324                           
  2325                           ;MCU_16f1516_B1.c: 615: while(!TXIF)
  2326                           
  2327  07F7  1E11               	btfss	17,4	;volatile
  2328  07F8  2FF7               	goto	l343
  2329                           
  2330                           ;MCU_16f1516_B1.c: 617: TXREG = byte;
  2331  07F9  0825               	movf	putch@byte,w
  2332  07FA  0023               	movlb	3	; select bank3
  2333  07FB  009A               	movwf	26	;volatile
  2334  07FC  0008               	return
  2335  07FD                     __end_of_putch:	
  2336                           
  2337                           	psect	text8
  2338  0738                     __ptext8:	
  2339 ;; *************** function ___lwmod *****************
  2340 ;; Defined at:
  2341 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  divisor         2   13[BANK0 ] unsigned int 
  2344 ;;  dividend        2   15[BANK0 ] unsigned int 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  counter         1   18[BANK0 ] unsigned char 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2   13[BANK0 ] unsigned int 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2356 ;;      Params:         0       4       0       0       0       0       0       0
  2357 ;;      Locals:         0       1       0       0       0       0       0       0
  2358 ;;      Temps:          0       1       0       0       0       0       0       0
  2359 ;;      Totals:         0       6       0       0       0       0       0       0
  2360 ;;Total ram usage:        6 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    4
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_printf
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function ___lwmod
  2372  0738                     ___lwmod:	
  2373                           
  2374                           ;incstack = 0
  2375                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2376  0738  0020               	movlb	0	; select bank0
  2377  0739  082E               	movf	___lwmod@divisor+1,w
  2378  073A  042D               	iorwf	___lwmod@divisor,w
  2379  073B  1903               	skipnz
  2380  073C  2F60               	goto	l1680
  2381  073D  01B2               	clrf	___lwmod@counter
  2382  073E  0AB2               	incf	___lwmod@counter,f
  2383  073F                     l1670:	
  2384  073F  1BAE               	btfsc	___lwmod@divisor+1,7
  2385  0740  2F4B               	goto	l1672
  2386  0741  3001               	movlw	1
  2387  0742                     u1675:	
  2388  0742  35AD               	lslf	___lwmod@divisor,f
  2389  0743  0DAE               	rlf	___lwmod@divisor+1,f
  2390  0744  0B89               	decfsz	9,f
  2391  0745  2F42               	goto	u1675
  2392  0746  3001               	movlw	1
  2393  0747  00B1               	movwf	??___lwmod
  2394  0748  0831               	movf	??___lwmod,w
  2395  0749  07B2               	addwf	___lwmod@counter,f
  2396  074A  2F3F               	goto	l1670
  2397  074B                     l1672:	
  2398  074B  082E               	movf	___lwmod@divisor+1,w
  2399  074C  0230               	subwf	___lwmod@dividend+1,w
  2400  074D  1D03               	skipz
  2401  074E  2F51               	goto	u1695
  2402  074F  082D               	movf	___lwmod@divisor,w
  2403  0750  022F               	subwf	___lwmod@dividend,w
  2404  0751                     u1695:	
  2405  0751  1C03               	skipc
  2406  0752  2F57               	goto	l1676
  2407  0753  082D               	movf	___lwmod@divisor,w
  2408  0754  02AF               	subwf	___lwmod@dividend,f
  2409  0755  082E               	movf	___lwmod@divisor+1,w
  2410  0756  3BB0               	subwfb	___lwmod@dividend+1,f
  2411  0757                     l1676:	
  2412  0757  3001               	movlw	1
  2413  0758                     u1705:	
  2414  0758  36AE               	lsrf	___lwmod@divisor+1,f
  2415  0759  0CAD               	rrf	___lwmod@divisor,f
  2416  075A  0B89               	decfsz	9,f
  2417  075B  2F58               	goto	u1705
  2418  075C  3001               	movlw	1
  2419  075D  02B2               	subwf	___lwmod@counter,f
  2420  075E  1D03               	btfss	3,2
  2421  075F  2F4B               	goto	l1672
  2422  0760                     l1680:	
  2423  0760  0830               	movf	___lwmod@dividend+1,w
  2424  0761  01AE               	clrf	?___lwmod+1
  2425  0762  07AE               	addwf	?___lwmod+1,f
  2426  0763  082F               	movf	___lwmod@dividend,w
  2427  0764  01AD               	clrf	?___lwmod
  2428  0765  07AD               	addwf	?___lwmod,f
  2429  0766  0008               	return
  2430  0767                     __end_of___lwmod:	
  2431                           
  2432                           	psect	text9
  2433  069C                     __ptext9:	
  2434 ;; *************** function ___lwdiv *****************
  2435 ;; Defined at:
  2436 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  divisor         2    5[BANK0 ] unsigned int 
  2439 ;;  dividend        2    7[BANK0 ] unsigned int 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  quotient        2   10[BANK0 ] unsigned int 
  2442 ;;  counter         1   12[BANK0 ] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  2    5[BANK0 ] unsigned int 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2452 ;;      Params:         0       4       0       0       0       0       0       0
  2453 ;;      Locals:         0       3       0       0       0       0       0       0
  2454 ;;      Temps:          0       1       0       0       0       0       0       0
  2455 ;;      Totals:         0       8       0       0       0       0       0       0
  2456 ;;Total ram usage:        8 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    4
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_printf
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function ___lwdiv
  2468  069C                     ___lwdiv:	
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2472  069C  0020               	movlb	0	; select bank0
  2473  069D  01AA               	clrf	___lwdiv@quotient
  2474  069E  01AB               	clrf	___lwdiv@quotient+1
  2475  069F  0826               	movf	___lwdiv@divisor+1,w
  2476  06A0  0425               	iorwf	___lwdiv@divisor,w
  2477  06A1  1903               	skipnz
  2478  06A2  2ECC               	goto	l1658
  2479  06A3  01AC               	clrf	___lwdiv@counter
  2480  06A4  0AAC               	incf	___lwdiv@counter,f
  2481  06A5                     l1646:	
  2482  06A5  1BA6               	btfsc	___lwdiv@divisor+1,7
  2483  06A6  2EB1               	goto	l1648
  2484  06A7  3001               	movlw	1
  2485  06A8                     u1605:	
  2486  06A8  35A5               	lslf	___lwdiv@divisor,f
  2487  06A9  0DA6               	rlf	___lwdiv@divisor+1,f
  2488  06AA  0B89               	decfsz	9,f
  2489  06AB  2EA8               	goto	u1605
  2490  06AC  3001               	movlw	1
  2491  06AD  00A9               	movwf	??___lwdiv
  2492  06AE  0829               	movf	??___lwdiv,w
  2493  06AF  07AC               	addwf	___lwdiv@counter,f
  2494  06B0  2EA5               	goto	l1646
  2495  06B1                     l1648:	
  2496  06B1  3001               	movlw	1
  2497  06B2                     u1625:	
  2498  06B2  35AA               	lslf	___lwdiv@quotient,f
  2499  06B3  0DAB               	rlf	___lwdiv@quotient+1,f
  2500  06B4  0B89               	decfsz	9,f
  2501  06B5  2EB2               	goto	u1625
  2502  06B6  0826               	movf	___lwdiv@divisor+1,w
  2503  06B7  0228               	subwf	___lwdiv@dividend+1,w
  2504  06B8  1D03               	skipz
  2505  06B9  2EBC               	goto	u1635
  2506  06BA  0825               	movf	___lwdiv@divisor,w
  2507  06BB  0227               	subwf	___lwdiv@dividend,w
  2508  06BC                     u1635:	
  2509  06BC  1C03               	skipc
  2510  06BD  2EC3               	goto	l1654
  2511  06BE  0825               	movf	___lwdiv@divisor,w
  2512  06BF  02A7               	subwf	___lwdiv@dividend,f
  2513  06C0  0826               	movf	___lwdiv@divisor+1,w
  2514  06C1  3BA8               	subwfb	___lwdiv@dividend+1,f
  2515  06C2  142A               	bsf	___lwdiv@quotient,0
  2516  06C3                     l1654:	
  2517  06C3  3001               	movlw	1
  2518  06C4                     u1645:	
  2519  06C4  36A6               	lsrf	___lwdiv@divisor+1,f
  2520  06C5  0CA5               	rrf	___lwdiv@divisor,f
  2521  06C6  0B89               	decfsz	9,f
  2522  06C7  2EC4               	goto	u1645
  2523  06C8  3001               	movlw	1
  2524  06C9  02AC               	subwf	___lwdiv@counter,f
  2525  06CA  1D03               	btfss	3,2
  2526  06CB  2EB1               	goto	l1648
  2527  06CC                     l1658:	
  2528  06CC  082B               	movf	___lwdiv@quotient+1,w
  2529  06CD  01A6               	clrf	?___lwdiv+1
  2530  06CE  07A6               	addwf	?___lwdiv+1,f
  2531  06CF  082A               	movf	___lwdiv@quotient,w
  2532  06D0  01A5               	clrf	?___lwdiv
  2533  06D1  07A5               	addwf	?___lwdiv,f
  2534  06D2  0008               	return
  2535  06D3                     __end_of___lwdiv:	
  2536                           
  2537                           	psect	text10
  2538  0707                     __ptext10:	
  2539 ;; *************** function _UART_Receive *****************
  2540 ;; Defined at:
  2541 ;;		line 573 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  i               1    8[BANK0 ] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;		None               void
  2548 ;; Registers used:
  2549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2555 ;;      Params:         0       0       0       0       0       0       0       0
  2556 ;;      Locals:         0       1       0       0       0       0       0       0
  2557 ;;      Temps:          0       3       0       0       0       0       0       0
  2558 ;;      Totals:         0       4       0       0       0       0       0       0
  2559 ;;Total ram usage:        4 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    4
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_UART_Main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _UART_Receive
  2571  0707                     _UART_Receive:	
  2572                           
  2573                           ;MCU_16f1516_B1.c: 575: char i;
  2574                           ;MCU_16f1516_B1.c: 576: RA1=~RA1;
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _UART_Receive: [wreg+fsr1l+fsr1h+status,2+status,0]
  2578  0707  3002               	movlw	2
  2579  0708  0020               	movlb	0	; select bank0
  2580  0709  068C               	xorwf	12,f
  2581                           
  2582                           ;MCU_16f1516_B1.c: 578: TMain->Test=1;
  2583  070A  085F               	movf	_TMain,w
  2584  070B  3E0C               	addlw	12
  2585  070C  0086               	movwf	6
  2586  070D  0187               	clrf	7
  2587  070E  0181               	clrf	1
  2588  070F  0A81               	incf	1,f
  2589                           
  2590                           ;MCU_16f1516_B1.c: 580: for(i=0;i<32;i++)
  2591  0710  01A8               	clrf	UART_Receive@i
  2592  0711  3020               	movlw	32
  2593  0712  0228               	subwf	UART_Receive@i,w
  2594  0713  1803               	btfsc	3,0
  2595  0714  2F31               	goto	l2052
  2596  0715                     l2046:	
  2597                           
  2598                           ;MCU_16f1516_B1.c: 581: {
  2599                           ;MCU_16f1516_B1.c: 582: I2C->BufferWriter[i]=UART->RxData[i];
  2600  0715  0828               	movf	UART_Receive@i,w
  2601  0716  3E20               	addlw	32
  2602  0717  0749               	addwf	_UART,w
  2603  0718  00A5               	movwf	??_UART_Receive
  2604  0719  0825               	movf	??_UART_Receive,w
  2605  071A  0086               	movwf	6
  2606  071B  3001               	movlw	1	; select bank2/3
  2607  071C  0087               	movwf	7
  2608  071D  0801               	movf	1,w
  2609  071E  00A6               	movwf	??_UART_Receive+1
  2610  071F  0828               	movf	UART_Receive@i,w
  2611  0720  3E20               	addlw	32
  2612  0721  075C               	addwf	_I2C,w
  2613  0722  00A7               	movwf	??_UART_Receive+2
  2614  0723  0827               	movf	??_UART_Receive+2,w
  2615  0724  0086               	movwf	6
  2616  0725  3001               	movlw	1	; select bank2/3
  2617  0726  0087               	movwf	7
  2618  0727  0826               	movf	??_UART_Receive+1,w
  2619  0728  0081               	movwf	1
  2620  0729  3001               	movlw	1
  2621  072A  00A5               	movwf	??_UART_Receive
  2622  072B  0825               	movf	??_UART_Receive,w
  2623  072C  07A8               	addwf	UART_Receive@i,f
  2624  072D  3020               	movlw	32
  2625  072E  0228               	subwf	UART_Receive@i,w
  2626  072F  1C03               	skipc
  2627  0730  2F15               	goto	l2046
  2628  0731                     l2052:	
  2629                           
  2630                           ;MCU_16f1516_B1.c: 583: }
  2631                           ;MCU_16f1516_B1.c: 584: I2C->MasterTxGO=1;
  2632  0731  085C               	movf	_I2C,w
  2633  0732  3E42               	addlw	66
  2634  0733  0086               	movwf	6
  2635  0734  3001               	movlw	1	; select bank2/3
  2636  0735  0087               	movwf	7
  2637  0736  1581               	bsf	1,3
  2638  0737  0008               	return
  2639  0738                     __end_of_UART_Receive:	
  2640                           
  2641                           	psect	text11
  2642  035F                     __ptext11:	
  2643 ;; *************** function _SegmentDisplay_Main *****************
  2644 ;; Defined at:
  2645 ;;		line 72 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;		None               void
  2652 ;; Registers used:
  2653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2659 ;;      Params:         0       0       0       0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0
  2661 ;;      Temps:          0       2       0       0       0       0       0       0
  2662 ;;      Totals:         0       2       0       0       0       0       0       0
  2663 ;;Total ram usage:        2 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    4
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _SegmentDisplay_Main
  2675  035F                     _SegmentDisplay_Main:	
  2676                           
  2677                           ;SegmentDisplay_A2.c: 74: if(Segment->GO)
  2678                           
  2679                           ;incstack = 0
  2680                           ; Regs used in _SegmentDisplay_Main: [wreg-fsr1h+status,2+status,0]
  2681  035F  0020               	movlb	0	; select bank0
  2682  0360  085D               	movf	_Segment,w
  2683  0361  3E15               	addlw	21
  2684  0362  0086               	movwf	6
  2685  0363  0187               	clrf	7
  2686  0364  1C81               	btfss	1,1
  2687  0365  0008               	return
  2688                           
  2689                           ;SegmentDisplay_A2.c: 75: {
  2690                           ;SegmentDisplay_A2.c: 76: Segment->Time++;
  2691  0366  3001               	movlw	1
  2692  0367  00A5               	movwf	??_SegmentDisplay_Main
  2693  0368  085D               	movf	_Segment,w
  2694  0369  3E19               	addlw	25
  2695  036A  0086               	movwf	6
  2696  036B  0187               	clrf	7
  2697  036C  0825               	movf	??_SegmentDisplay_Main,w
  2698  036D  0781               	addwf	1,f
  2699                           
  2700                           ;SegmentDisplay_A2.c: 77: if(Segment->Time == 5)
  2701  036E  085D               	movf	_Segment,w
  2702  036F  3E19               	addlw	25
  2703  0370  0086               	movwf	6
  2704  0371  0187               	clrf	7
  2705  0372  0801               	movf	1,w
  2706  0373  3A05               	xorlw	5
  2707  0374  1D03               	skipz
  2708  0375  0008               	return
  2709                           
  2710                           ;SegmentDisplay_A2.c: 78: {
  2711                           ;SegmentDisplay_A2.c: 79: Segment->Time=0;
  2712  0376  085D               	movf	_Segment,w
  2713  0377  3E19               	addlw	25
  2714  0378  0086               	movwf	6
  2715  0379  0187               	clrf	7
  2716  037A  0181               	clrf	1
  2717                           
  2718                           ;SegmentDisplay_A2.c: 80: PORTA&=0x0f;
  2719  037B  300F               	movlw	15
  2720  037C  00A5               	movwf	??_SegmentDisplay_Main
  2721  037D  0825               	movf	??_SegmentDisplay_Main,w
  2722  037E  058C               	andwf	12,f	;volatile
  2723                           
  2724                           ;SegmentDisplay_A2.c: 81: if(Segment->ComCount == 0)
  2725  037F  085D               	movf	_Segment,w
  2726  0380  3E16               	addlw	22
  2727  0381  0086               	movwf	6
  2728  0382  0187               	clrf	7
  2729  0383  0881               	movf	1,f
  2730  0384  1D03               	skipz
  2731  0385  2B88               	goto	l2272
  2732                           
  2733                           ;SegmentDisplay_A2.c: 82: {
  2734                           ;SegmentDisplay_A2.c: 83: RA4=1;
  2735  0386  160C               	bsf	12,4	;volatile
  2736                           
  2737                           ;SegmentDisplay_A2.c: 84: }
  2738  0387  2BA4               	goto	l2284
  2739  0388                     l2272:	
  2740                           
  2741                           ;SegmentDisplay_A2.c: 85: else if(Segment->ComCount == 1)
  2742  0388  085D               	movf	_Segment,w
  2743  0389  3E16               	addlw	22
  2744  038A  0086               	movwf	6
  2745  038B  0187               	clrf	7
  2746  038C  0801               	movf	1,w
  2747  038D  3A01               	xorlw	1
  2748  038E  1D03               	skipz
  2749  038F  2B92               	goto	l2276
  2750                           
  2751                           ;SegmentDisplay_A2.c: 86: {
  2752                           ;SegmentDisplay_A2.c: 87: RA5=1;
  2753  0390  168C               	bsf	12,5	;volatile
  2754                           
  2755                           ;SegmentDisplay_A2.c: 88: }
  2756  0391  2BA4               	goto	l2284
  2757  0392                     l2276:	
  2758                           
  2759                           ;SegmentDisplay_A2.c: 89: else if(Segment->ComCount == 2)
  2760  0392  085D               	movf	_Segment,w
  2761  0393  3E16               	addlw	22
  2762  0394  0086               	movwf	6
  2763  0395  0187               	clrf	7
  2764  0396  0801               	movf	1,w
  2765  0397  3A02               	xorlw	2
  2766  0398  1D03               	skipz
  2767  0399  2B9C               	goto	l2280
  2768                           
  2769                           ;SegmentDisplay_A2.c: 90: {
  2770                           ;SegmentDisplay_A2.c: 91: RA6=1;
  2771  039A  170C               	bsf	12,6	;volatile
  2772                           
  2773                           ;SegmentDisplay_A2.c: 92: }
  2774  039B  2BA4               	goto	l2284
  2775  039C                     l2280:	
  2776                           
  2777                           ;SegmentDisplay_A2.c: 93: else if(Segment->ComCount == 3)
  2778  039C  085D               	movf	_Segment,w
  2779  039D  3E16               	addlw	22
  2780  039E  0086               	movwf	6
  2781  039F  0187               	clrf	7
  2782  03A0  0801               	movf	1,w
  2783  03A1  3A03               	xorlw	3
  2784  03A2  1903               	btfsc	3,2
  2785                           
  2786                           ;SegmentDisplay_A2.c: 94: {
  2787                           ;SegmentDisplay_A2.c: 95: RA7=1;
  2788  03A3  178C               	bsf	12,7	;volatile
  2789  03A4                     l2284:	
  2790                           
  2791                           ;SegmentDisplay_A2.c: 96: }
  2792                           ;SegmentDisplay_A2.c: 97: PORTB=Segment->Display[Segment->Num[Segment->ComCount]];
  2793  03A4  085D               	movf	_Segment,w
  2794  03A5  3E16               	addlw	22
  2795  03A6  0086               	movwf	6
  2796  03A7  0187               	clrf	7
  2797  03A8  0801               	movf	1,w
  2798  03A9  3E11               	addlw	17
  2799  03AA  075D               	addwf	_Segment,w
  2800  03AB  00A5               	movwf	??_SegmentDisplay_Main
  2801  03AC  0825               	movf	??_SegmentDisplay_Main,w
  2802  03AD  0086               	movwf	6
  2803  03AE  0187               	clrf	7
  2804  03AF  0801               	movf	1,w
  2805  03B0  075D               	addwf	_Segment,w
  2806  03B1  00A6               	movwf	??_SegmentDisplay_Main+1
  2807  03B2  0826               	movf	??_SegmentDisplay_Main+1,w
  2808  03B3  0086               	movwf	6
  2809  03B4  0187               	clrf	7
  2810  03B5  0801               	movf	1,w
  2811  03B6  008D               	movwf	13	;volatile
  2812                           
  2813                           ;SegmentDisplay_A2.c: 98: if(Segment->ComCount < Segment->DisplayCount)
  2814  03B7  085D               	movf	_Segment,w
  2815  03B8  3E16               	addlw	22
  2816  03B9  0086               	movwf	6
  2817  03BA  0187               	clrf	7
  2818  03BB  085D               	movf	_Segment,w
  2819  03BC  3E17               	addlw	23
  2820  03BD  0084               	movwf	4
  2821  03BE  0185               	clrf	5
  2822  03BF  0800               	movf	0,w
  2823  03C0  0201               	subwf	1,w
  2824  03C1  1803               	skipnc
  2825  03C2  2BCC               	goto	l2290
  2826                           
  2827                           ;SegmentDisplay_A2.c: 99: {
  2828                           ;SegmentDisplay_A2.c: 100: Segment->ComCount++;
  2829  03C3  3001               	movlw	1
  2830  03C4  00A5               	movwf	??_SegmentDisplay_Main
  2831  03C5  085D               	movf	_Segment,w
  2832  03C6  3E16               	addlw	22
  2833  03C7  0086               	movwf	6
  2834  03C8  0187               	clrf	7
  2835  03C9  0825               	movf	??_SegmentDisplay_Main,w
  2836  03CA  0781               	addwf	1,f
  2837                           
  2838                           ;SegmentDisplay_A2.c: 101: }
  2839  03CB  0008               	return
  2840  03CC                     l2290:	
  2841                           
  2842                           ;SegmentDisplay_A2.c: 102: else
  2843                           ;SegmentDisplay_A2.c: 103: {
  2844                           ;SegmentDisplay_A2.c: 104: Segment->ComCount=0;
  2845  03CC  085D               	movf	_Segment,w
  2846  03CD  3E16               	addlw	22
  2847  03CE  0086               	movwf	6
  2848  03CF  0187               	clrf	7
  2849  03D0  0181               	clrf	1
  2850  03D1  0008               	return
  2851  03D2                     __end_of_SegmentDisplay_Main:	
  2852                           
  2853                           	psect	text12
  2854  0FAE                     __ptext12:	
  2855 ;; *************** function _SegmentDisplay_Initial *****************
  2856 ;; Defined at:
  2857 ;;		line 8 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;		None               void
  2864 ;; Registers used:
  2865 ;;		wreg, fsr1l, fsr1h
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2871 ;;      Params:         0       0       0       0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0
  2873 ;;      Temps:          0       1       0       0       0       0       0       0
  2874 ;;      Totals:         0       1       0       0       0       0       0       0
  2875 ;;Total ram usage:        1 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    4
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_main
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _SegmentDisplay_Initial
  2887  0FAE                     _SegmentDisplay_Initial:	
  2888                           
  2889                           ;SegmentDisplay_A2.c: 10: Segment=&VarSegment;
  2890                           
  2891                           ;incstack = 0
  2892                           ; Regs used in _SegmentDisplay_Initial: [wregfsr1]
  2893  0FAE  30C0               	movlw	_VarSegment& (0+255)
  2894  0FAF  0020               	movlb	0	; select bank0
  2895  0FB0  00A5               	movwf	??_SegmentDisplay_Initial
  2896  0FB1  0825               	movf	??_SegmentDisplay_Initial,w
  2897  0FB2  00DD               	movwf	_Segment
  2898                           
  2899                           ;SegmentDisplay_A2.c: 11: Segment->Enable=1;
  2900  0FB3  085D               	movf	_Segment,w
  2901  0FB4  3E15               	addlw	21
  2902  0FB5  0086               	movwf	6
  2903  0FB6  0187               	clrf	7
  2904  0FB7  1401               	bsf	1,0
  2905                           
  2906                           ;SegmentDisplay_A2.c: 13: Segment->Dec=1;
  2907  0FB8  085D               	movf	_Segment,w
  2908  0FB9  3E15               	addlw	21
  2909  0FBA  0086               	movwf	6
  2910  0FBB  0187               	clrf	7
  2911  0FBC  1581               	bsf	1,3
  2912  0FBD  0008               	return
  2913  0FBE                     __end_of_SegmentDisplay_Initial:	
  2914                           
  2915                           	psect	text13
  2916  0FBE                     __ptext13:	
  2917 ;; *************** function _Mcu_Initial *****************
  2918 ;; Defined at:
  2919 ;;		line 11 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;		None               void
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0, pclath, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2933 ;;      Params:         0       0       0       0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    5
  2940 ;; This function calls:
  2941 ;;		_I2C_Set
  2942 ;;		_IO_Set
  2943 ;;		_TMR1_Set
  2944 ;;		_UART_Set
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _Mcu_Initial
  2952  0FBE                     _Mcu_Initial:	
  2953                           
  2954                           ;MCU_16f1516_B1.c: 14: OSCCON=0x78; ;;
  2955                           
  2956                           ;incstack = 0
  2957                           ; Regs used in _Mcu_Initial: [wreg+status,2+status,0+pclath+cstack]
  2958  0FBE  3078               	movlw	120
  2959  0FBF  0021               	movlb	1	; select bank1
  2960  0FC0  0099               	movwf	25	;volatile
  2961                           
  2962                           ;MCU_16f1516_B1.c: 16: IO_Set();
  2963  0FC1  318F  27D1  318F   	fcall	_IO_Set
  2964                           
  2965                           ;MCU_16f1516_B1.c: 18: __nop();
  2966  0FC4  0000               	nop
  2967                           
  2968                           ;MCU_16f1516_B1.c: 20: TMR1_Set();
  2969  0FC5  318F  279E  318F   	fcall	_TMR1_Set
  2970                           
  2971                           ;MCU_16f1516_B1.c: 22: __nop();
  2972  0FC8  0000               	nop
  2973                           
  2974                           ;MCU_16f1516_B1.c: 26: __nop();
  2975  0FC9  0000               	nop
  2976                           
  2977                           ;MCU_16f1516_B1.c: 28: __nop();
  2978  0FCA  0000               	nop
  2979                           
  2980                           ;MCU_16f1516_B1.c: 30: I2C_Set();
  2981  0FCB  318F  2771  318F   	fcall	_I2C_Set
  2982                           
  2983                           ;MCU_16f1516_B1.c: 32: UART_Set();
  2984  0FCE  318F  27E7         	fcall	_UART_Set
  2985  0FD0  0008               	return
  2986  0FD1                     __end_of_Mcu_Initial:	
  2987                           
  2988                           	psect	text14
  2989  0FE7                     __ptext14:	
  2990 ;; *************** function _UART_Set *****************
  2991 ;; Defined at:
  2992 ;;		line 498 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;		None               void
  2999 ;; Registers used:
  3000 ;;		wreg, status,2
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3006 ;;      Params:         0       0       0       0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0
  3008 ;;      Temps:          0       1       0       0       0       0       0       0
  3009 ;;      Totals:         0       1       0       0       0       0       0       0
  3010 ;;Total ram usage:        1 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    4
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_Mcu_Initial
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _UART_Set
  3022  0FE7                     _UART_Set:	
  3023                           
  3024                           ;MCU_16f1516_B1.c: 500: UART=&VarUart;
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _UART_Set: [wreg+status,2]
  3028  0FE7  3020               	movlw	_VarUart& (0+255)
  3029  0FE8  0020               	movlb	0	; select bank0
  3030  0FE9  00A5               	movwf	??_UART_Set
  3031  0FEA  0825               	movf	??_UART_Set,w
  3032  0FEB  00C9               	movwf	_UART
  3033                           
  3034                           ;MCU_16f1516_B1.c: 501: TRISC7 = 1;
  3035  0FEC  0021               	movlb	1	; select bank1
  3036  0FED  178E               	bsf	14,7	;volatile
  3037                           
  3038                           ;MCU_16f1516_B1.c: 502: TRISC6 = 1;
  3039  0FEE  170E               	bsf	14,6	;volatile
  3040                           
  3041                           ;MCU_16f1516_B1.c: 503: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  3042  0FEF  3033               	movlw	51
  3043  0FF0  0023               	movlb	3	; select bank3
  3044  0FF1  009B               	movwf	27	;volatile
  3045                           
  3046                           ;MCU_16f1516_B1.c: 504: SPBRGH = 0;
  3047  0FF2  019C               	clrf	28	;volatile
  3048                           
  3049                           ;MCU_16f1516_B1.c: 505: BRG16 = 0;
  3050  0FF3  119F               	bcf	31,3	;volatile
  3051                           
  3052                           ;MCU_16f1516_B1.c: 506: RCSTA = (0|0x90);
  3053  0FF4  3090               	movlw	144
  3054  0FF5  009D               	movwf	29	;volatile
  3055                           
  3056                           ;MCU_16f1516_B1.c: 507: TXSTA = (0x4|0|0x20);
  3057  0FF6  3024               	movlw	36
  3058  0FF7  009E               	movwf	30	;volatile
  3059                           
  3060                           ;MCU_16f1516_B1.c: 508: TX9=0;
  3061  0FF8  131E               	bcf	30,6	;volatile
  3062                           
  3063                           ;MCU_16f1516_B1.c: 509: RX9=0;
  3064  0FF9  131D               	bcf	29,6	;volatile
  3065                           
  3066                           ;MCU_16f1516_B1.c: 510: TXIE=0;
  3067  0FFA  0021               	movlb	1	; select bank1
  3068  0FFB  1211               	bcf	17,4	;volatile
  3069                           
  3070                           ;MCU_16f1516_B1.c: 511: RCIE=1;
  3071  0FFC  1691               	bsf	17,5	;volatile
  3072                           
  3073                           ;MCU_16f1516_B1.c: 512: PEIE=1;
  3074  0FFD  170B               	bsf	11,6	;volatile
  3075                           
  3076                           ;MCU_16f1516_B1.c: 513: GIE=1;
  3077  0FFE  178B               	bsf	11,7	;volatile
  3078  0FFF  0008               	return
  3079  1000                     __end_of_UART_Set:	
  3080                           
  3081                           	psect	text15
  3082  0F9E                     __ptext15:	
  3083 ;; *************** function _TMR1_Set *****************
  3084 ;; Defined at:
  3085 ;;		line 114 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3099 ;;      Params:         0       0       0       0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0
  3101 ;;      Temps:          0       1       0       0       0       0       0       0
  3102 ;;      Totals:         0       1       0       0       0       0       0       0
  3103 ;;Total ram usage:        1 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    4
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_Mcu_Initial
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           
  3114                           ;psect for function _TMR1_Set
  3115  0F9E                     _TMR1_Set:	
  3116                           
  3117                           ;MCU_16f1516_B1.c: 116: Timer1=&VarTimer1;
  3118                           
  3119                           ;incstack = 0
  3120                           ; Regs used in _TMR1_Set: [wreg]
  3121  0F9E  3059               	movlw	_VarTimer1& (0+255)
  3122  0F9F  0020               	movlb	0	; select bank0
  3123  0FA0  00A5               	movwf	??_TMR1_Set
  3124  0FA1  0825               	movf	??_TMR1_Set,w
  3125  0FA2  00C8               	movwf	_Timer1
  3126                           
  3127                           ;MCU_16f1516_B1.c: 117: T1CON=(0x40 | 0x00 | 0x01);
  3128  0FA3  3041               	movlw	65
  3129  0FA4  0098               	movwf	24	;volatile
  3130                           
  3131                           ;MCU_16f1516_B1.c: 118: TMR1H=((65536-700)/256);
  3132  0FA5  30FD               	movlw	253
  3133  0FA6  0097               	movwf	23	;volatile
  3134                           
  3135                           ;MCU_16f1516_B1.c: 119: TMR1L=((65536-700)%256);
  3136  0FA7  3044               	movlw	68
  3137  0FA8  0096               	movwf	22	;volatile
  3138                           
  3139                           ;MCU_16f1516_B1.c: 120: TMR1IE=1;
  3140  0FA9  0021               	movlb	1	; select bank1
  3141  0FAA  1411               	bsf	17,0	;volatile
  3142                           
  3143                           ;MCU_16f1516_B1.c: 121: PEIE=1;
  3144  0FAB  170B               	bsf	11,6	;volatile
  3145                           
  3146                           ;MCU_16f1516_B1.c: 122: GIE=1;
  3147  0FAC  178B               	bsf	11,7	;volatile
  3148  0FAD  0008               	return
  3149  0FAE                     __end_of_TMR1_Set:	
  3150                           
  3151                           	psect	text16
  3152  0FD1                     __ptext16:	
  3153 ;; *************** function _IO_Set *****************
  3154 ;; Defined at:
  3155 ;;		line 37 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;		None               void
  3162 ;; Registers used:
  3163 ;;		wreg, status,2
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3169 ;;      Params:         0       0       0       0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0
  3172 ;;      Totals:         0       0       0       0       0       0       0       0
  3173 ;;Total ram usage:        0 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    4
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_Mcu_Initial
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function _IO_Set
  3185  0FD1                     _IO_Set:	
  3186                           
  3187                           ;MCU_16f1516_B1.c: 39: TRISA=0b00001001;;
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in _IO_Set: [wreg+status,2]
  3191  0FD1  3009               	movlw	9
  3192  0FD2  0021               	movlb	1	; select bank1
  3193  0FD3  008C               	movwf	12	;volatile
  3194                           
  3195                           ;MCU_16f1516_B1.c: 40: TRISB=0b00000000;;
  3196  0FD4  018D               	clrf	13	;volatile
  3197                           
  3198                           ;MCU_16f1516_B1.c: 41: TRISC=0b00011001;;
  3199  0FD5  3019               	movlw	25
  3200  0FD6  008E               	movwf	14	;volatile
  3201                           
  3202                           ;MCU_16f1516_B1.c: 42: LATA=0b00000000;;
  3203  0FD7  0022               	movlb	2	; select bank2
  3204  0FD8  018C               	clrf	12	;volatile
  3205                           
  3206                           ;MCU_16f1516_B1.c: 43: LATB=0b00000000;;
  3207  0FD9  018D               	clrf	13	;volatile
  3208                           
  3209                           ;MCU_16f1516_B1.c: 44: LATC=0b00000000;;
  3210  0FDA  018E               	clrf	14	;volatile
  3211                           
  3212                           ;MCU_16f1516_B1.c: 45: ANSELA=0b00000001;;
  3213  0FDB  3001               	movlw	1
  3214  0FDC  0023               	movlb	3	; select bank3
  3215  0FDD  008C               	movwf	12	;volatile
  3216                           
  3217                           ;MCU_16f1516_B1.c: 46: ANSELB=0b00000000;;
  3218  0FDE  018D               	clrf	13	;volatile
  3219                           
  3220                           ;MCU_16f1516_B1.c: 47: ANSELC=0b00000000;;
  3221  0FDF  018E               	clrf	14	;volatile
  3222                           
  3223                           ;MCU_16f1516_B1.c: 48: PORTA=0b00001001;;
  3224  0FE0  3009               	movlw	9
  3225  0FE1  0020               	movlb	0	; select bank0
  3226  0FE2  008C               	movwf	12	;volatile
  3227                           
  3228                           ;MCU_16f1516_B1.c: 49: PORTB=0b00000000;;
  3229  0FE3  018D               	clrf	13	;volatile
  3230                           
  3231                           ;MCU_16f1516_B1.c: 50: PORTC=0b00011001;;
  3232  0FE4  3019               	movlw	25
  3233  0FE5  008E               	movwf	14	;volatile
  3234  0FE6  0008               	return
  3235  0FE7                     __end_of_IO_Set:	
  3236                           
  3237                           	psect	text17
  3238  0F71                     __ptext17:	
  3239 ;; *************** function _I2C_Set *****************
  3240 ;; Defined at:
  3241 ;;		line 233 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		wreg, status,2
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3255 ;;      Params:         0       0       0       0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0
  3257 ;;      Temps:          0       1       0       0       0       0       0       0
  3258 ;;      Totals:         0       1       0       0       0       0       0       0
  3259 ;;Total ram usage:        1 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    4
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_Mcu_Initial
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _I2C_Set
  3271  0F71                     _I2C_Set:	
  3272                           
  3273                           ;MCU_16f1516_B1.c: 235: I2C=&VarI2C;
  3274                           
  3275                           ;incstack = 0
  3276                           ; Regs used in _I2C_Set: [wreg+status,2]
  3277  0F71  30A0               	movlw	_VarI2C& (0+255)
  3278  0F72  0020               	movlb	0	; select bank0
  3279  0F73  00A5               	movwf	??_I2C_Set
  3280  0F74  0825               	movf	??_I2C_Set,w
  3281  0F75  00DC               	movwf	_I2C
  3282                           
  3283                           ;MCU_16f1516_B1.c: 237: SSPADD = 0x09;
  3284  0F76  3009               	movlw	9
  3285  0F77  0024               	movlb	4	; select bank4
  3286  0F78  0092               	movwf	18	;volatile
  3287                           
  3288                           ;MCU_16f1516_B1.c: 238: SSPSTAT = 0x80;
  3289  0F79  3080               	movlw	128
  3290  0F7A  0094               	movwf	20	;volatile
  3291                           
  3292                           ;MCU_16f1516_B1.c: 239: SSPCON2 = 0;
  3293  0F7B  0196               	clrf	22	;volatile
  3294                           
  3295                           ;MCU_16f1516_B1.c: 241: SSPCON1=0b101000;
  3296  0F7C  3028               	movlw	40
  3297  0F7D  0095               	movwf	21	;volatile
  3298  0F7E  0008               	return
  3299  0F7F                     __end_of_I2C_Set:	
  3300                           
  3301                           	psect	text18
  3302  0F7F                     __ptext18:	
  3303 ;; *************** function _MainT_Initial *****************
  3304 ;; Defined at:
  3305 ;;		line 33 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\myMain.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;		None               void
  3312 ;; Registers used:
  3313 ;;		wreg, fsr1l, fsr1h
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3319 ;;      Params:         0       0       0       0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0       0       0       0
  3321 ;;      Temps:          0       1       0       0       0       0       0       0
  3322 ;;      Totals:         0       1       0       0       0       0       0       0
  3323 ;;Total ram usage:        1 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    4
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _MainT_Initial
  3335  0F7F                     _MainT_Initial:	
  3336                           
  3337                           ;myMain.c: 35: TMain=&VarTMain;
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _MainT_Initial: [wregfsr1]
  3341  0F7F  304A               	movlw	_VarTMain& (0+255)
  3342  0F80  0020               	movlb	0	; select bank0
  3343  0F81  00A5               	movwf	??_MainT_Initial
  3344  0F82  0825               	movf	??_MainT_Initial,w
  3345  0F83  00DF               	movwf	_TMain
  3346                           
  3347                           ;myMain.c: 36: TMain->FirstOpen=1;
  3348  0F84  085F               	movf	_TMain,w
  3349  0F85  3E0D               	addlw	13
  3350  0F86  0086               	movwf	6
  3351  0F87  0187               	clrf	7
  3352  0F88  1401               	bsf	1,0
  3353                           
  3354                           ;myMain.c: 37: Product=&VarProduct;
  3355  0F89  30A0               	movlw	_VarProduct& (0+255)
  3356  0F8A  00A5               	movwf	??_MainT_Initial
  3357  0F8B  0825               	movf	??_MainT_Initial,w
  3358  0F8C  00DE               	movwf	_Product
  3359  0F8D  0008               	return
  3360  0F8E                     __end_of_MainT_Initial:	
  3361                           
  3362                           	psect	text19
  3363  0445                     __ptext19:	
  3364 ;; *************** function _MainT *****************
  3365 ;; Defined at:
  3366 ;;		line 41 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\myMain.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  i               1    0        unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3380 ;;      Params:         0       0       0       0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0       0       0       0
  3383 ;;      Totals:         0       0       0       0       0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    4
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           
  3395                           ;psect for function _MainT
  3396  0445                     _MainT:	
  3397                           
  3398                           ;myMain.c: 43: char i;
  3399                           ;myMain.c: 45: if(!TMain->PowerON)
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0]
  3403  0445  0020               	movlb	0	; select bank0
  3404  0446  085F               	movf	_TMain,w
  3405  0447  0086               	movwf	6
  3406  0448  0187               	clrf	7
  3407  0449  1801               	btfsc	1,0
  3408  044A  2C69               	goto	l2242
  3409                           
  3410                           ;myMain.c: 46: {
  3411                           ;myMain.c: 47: TMain->PowerCount++;
  3412  044B  0A5F               	incf	_TMain,w
  3413  044C  0086               	movwf	6
  3414  044D  0187               	clrf	7
  3415  044E  3001               	movlw	1
  3416  044F  0781               	addwf	1,f
  3417  0450  3141               	addfsr 1,1
  3418  0451  1803               	skipnc
  3419  0452  0A81               	incf	1,f
  3420                           
  3421                           ;myMain.c: 48: if(TMain->PowerCount == 1500)
  3422  0453  0A5F               	incf	_TMain,w
  3423  0454  0086               	movwf	6
  3424  0455  0187               	clrf	7
  3425  0456  3F40               	moviw [0]fsr1
  3426  0457  3ADC               	xorlw	220
  3427  0458  1D03               	skipz
  3428  0459  2C5C               	goto	u2945
  3429  045A  3F41               	moviw [1]fsr1
  3430  045B  3A05               	xorlw	5
  3431  045C                     u2945:	
  3432  045C  1D03               	skipz
  3433  045D  0008               	return
  3434                           
  3435                           ;myMain.c: 49: {
  3436                           ;myMain.c: 50: TMain->PowerCount=0;
  3437  045E  0A5F               	incf	_TMain,w
  3438  045F  0086               	movwf	6
  3439  0460  0187               	clrf	7
  3440  0461  3000               	movlw	0
  3441  0462  3FC0               	movwi [0]fsr1
  3442  0463  3FC1               	movwi [1]fsr1
  3443                           
  3444                           ;myMain.c: 51: TMain->PowerON=1;
  3445  0464  085F               	movf	_TMain,w
  3446  0465  0086               	movwf	6
  3447  0466  0187               	clrf	7
  3448  0467  1401               	bsf	1,0
  3449                           
  3450                           ;myMain.c: 56: }
  3451                           ;myMain.c: 57: }
  3452  0468  0008               	return
  3453  0469                     l2242:	
  3454                           
  3455                           ;myMain.c: 58: else
  3456                           ;myMain.c: 59: {
  3457                           ;myMain.c: 60: TMain->Count1++;
  3458  0469  085F               	movf	_TMain,w
  3459  046A  3E05               	addlw	5
  3460  046B  0086               	movwf	6
  3461  046C  0187               	clrf	7
  3462  046D  3001               	movlw	1
  3463  046E  0781               	addwf	1,f
  3464  046F  3141               	addfsr 1,1
  3465  0470  1803               	skipnc
  3466  0471  0A81               	incf	1,f
  3467                           
  3468                           ;myMain.c: 61: if(TMain->Count1 == 1000)
  3469  0472  085F               	movf	_TMain,w
  3470  0473  3E05               	addlw	5
  3471  0474  0086               	movwf	6
  3472  0475  0187               	clrf	7
  3473  0476  3F40               	moviw [0]fsr1
  3474  0477  3AE8               	xorlw	232
  3475  0478  1D03               	skipz
  3476  0479  2C7C               	goto	u2955
  3477  047A  3F41               	moviw [1]fsr1
  3478  047B  3A03               	xorlw	3
  3479  047C                     u2955:	
  3480  047C  1D03               	skipz
  3481  047D  2C87               	goto	l2252
  3482                           
  3483                           ;myMain.c: 62: {
  3484                           ;myMain.c: 63: TMain->Count1=0;
  3485  047E  085F               	movf	_TMain,w
  3486  047F  3E05               	addlw	5
  3487  0480  0086               	movwf	6
  3488  0481  0187               	clrf	7
  3489  0482  3000               	movlw	0
  3490  0483  3FC0               	movwi [0]fsr1
  3491  0484  3FC1               	movwi [1]fsr1
  3492                           
  3493                           ;myMain.c: 64: RA2=~RA2;
  3494  0485  3004               	movlw	4
  3495  0486  068C               	xorwf	12,f
  3496  0487                     l2252:	
  3497                           ;myMain.c: 79: {
  3498                           
  3499                           
  3500                           ;myMain.c: 82: }
  3501                           ;myMain.c: 105: }
  3502                           ;myMain.c: 108: TMain->Count2++;
  3503  0487  085F               	movf	_TMain,w
  3504  0488  3E07               	addlw	7
  3505  0489  0086               	movwf	6
  3506  048A  0187               	clrf	7
  3507  048B  3001               	movlw	1
  3508  048C  0781               	addwf	1,f
  3509  048D  3141               	addfsr 1,1
  3510  048E  1803               	skipnc
  3511  048F  0A81               	incf	1,f
  3512                           
  3513                           ;myMain.c: 109: if(TMain->Count2 == 2000)
  3514  0490  085F               	movf	_TMain,w
  3515  0491  3E07               	addlw	7
  3516  0492  0086               	movwf	6
  3517  0493  0187               	clrf	7
  3518  0494  3F40               	moviw [0]fsr1
  3519  0495  3AD0               	xorlw	208
  3520  0496  1D03               	skipz
  3521  0497  2C9A               	goto	u2965
  3522  0498  3F41               	moviw [1]fsr1
  3523  0499  3A07               	xorlw	7
  3524  049A                     u2965:	
  3525  049A  1D03               	skipz
  3526  049B  0008               	return
  3527                           
  3528                           ;myMain.c: 110: {
  3529                           ;myMain.c: 111: TMain->Count2=0;
  3530  049C  085F               	movf	_TMain,w
  3531  049D  3E07               	addlw	7
  3532  049E  0086               	movwf	6
  3533  049F  0187               	clrf	7
  3534  04A0  3000               	movlw	0
  3535  04A1  3FC0               	movwi [0]fsr1
  3536  04A2  3FC1               	movwi [1]fsr1
  3537  04A3  0008               	return
  3538  04A4                     __end_of_MainT:	
  3539                           
  3540                           	psect	text20
  3541  03D2                     __ptext20:	
  3542 ;; *************** function _I2C_Main *****************
  3543 ;; Defined at:
  3544 ;;		line 275 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  i               1   11[BANK0 ] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3558 ;;      Params:         0       0       0       0       0       0       0       0
  3559 ;;      Locals:         0       1       0       0       0       0       0       0
  3560 ;;      Temps:          0       3       0       0       0       0       0       0
  3561 ;;      Totals:         0       4       0       0       0       0       0       0
  3562 ;;Total ram usage:        4 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    5
  3565 ;; This function calls:
  3566 ;;		_I2C_Master_Reception
  3567 ;;		_I2C_Master_Transmission
  3568 ;; This function is called by:
  3569 ;;		_main
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           
  3574                           ;psect for function _I2C_Main
  3575  03D2                     _I2C_Main:	
  3576                           
  3577                           ;MCU_16f1516_B1.c: 277: char i;
  3578                           ;MCU_16f1516_B1.c: 302: if(I2C->MasterRxGO)
  3579                           
  3580                           ;incstack = 0
  3581                           ; Regs used in _I2C_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3582  03D2  0020               	movlb	0	; select bank0
  3583  03D3  085C               	movf	_I2C,w
  3584  03D4  3E42               	addlw	66
  3585  03D5  0086               	movwf	6
  3586  03D6  3001               	movlw	1	; select bank2/3
  3587  03D7  0087               	movwf	7
  3588  03D8  1E01               	btfss	1,4
  3589  03D9  2C12               	goto	l187
  3590                           
  3591                           ;MCU_16f1516_B1.c: 303: {
  3592                           ;MCU_16f1516_B1.c: 304: I2C->MasterRxGO=0;
  3593  03DA  085C               	movf	_I2C,w
  3594  03DB  3E42               	addlw	66
  3595  03DC  0086               	movwf	6
  3596  03DD  3001               	movlw	1	; select bank2/3
  3597  03DE  0087               	movwf	7
  3598  03DF  1201               	bcf	1,4
  3599                           
  3600                           ;MCU_16f1516_B1.c: 305: I2C_Master_Reception();
  3601  03E0  3185  254B  3183   	fcall	_I2C_Master_Reception
  3602                           
  3603                           ;MCU_16f1516_B1.c: 306: TMain->Test=1;
  3604  03E3  0020               	movlb	0	; select bank0
  3605  03E4  085F               	movf	_TMain,w
  3606  03E5  3E0C               	addlw	12
  3607  03E6  0086               	movwf	6
  3608  03E7  0187               	clrf	7
  3609  03E8  0181               	clrf	1
  3610  03E9  0A81               	incf	1,f
  3611                           
  3612                           ;MCU_16f1516_B1.c: 307: RA1=~RA1;
  3613  03EA  3002               	movlw	2
  3614  03EB  068C               	xorwf	12,f
  3615                           
  3616                           ;MCU_16f1516_B1.c: 309: for(i=0;i<32;i++)
  3617  03EC  01AB               	clrf	I2C_Main@i
  3618  03ED  3020               	movlw	32
  3619  03EE  022B               	subwf	I2C_Main@i,w
  3620  03EF  1803               	btfsc	3,0
  3621  03F0  2C0B               	goto	l2192
  3622  03F1                     l2186:	
  3623                           
  3624                           ;MCU_16f1516_B1.c: 310: {
  3625                           ;MCU_16f1516_B1.c: 311: UART->TxData[i]=I2C->BufferReader[i];
  3626  03F1  082B               	movf	I2C_Main@i,w
  3627  03F2  075C               	addwf	_I2C,w
  3628  03F3  00A8               	movwf	??_I2C_Main
  3629  03F4  0828               	movf	??_I2C_Main,w
  3630  03F5  0086               	movwf	6
  3631  03F6  3001               	movlw	1	; select bank2/3
  3632  03F7  0087               	movwf	7
  3633  03F8  0801               	movf	1,w
  3634  03F9  00A9               	movwf	??_I2C_Main+1
  3635  03FA  082B               	movf	I2C_Main@i,w
  3636  03FB  0749               	addwf	_UART,w
  3637  03FC  00AA               	movwf	??_I2C_Main+2
  3638  03FD  082A               	movf	??_I2C_Main+2,w
  3639  03FE  0086               	movwf	6
  3640  03FF  3001               	movlw	1	; select bank2/3
  3641  0400  0087               	movwf	7
  3642  0401  0829               	movf	??_I2C_Main+1,w
  3643  0402  0081               	movwf	1
  3644  0403  3001               	movlw	1
  3645  0404  00A8               	movwf	??_I2C_Main
  3646  0405  0828               	movf	??_I2C_Main,w
  3647  0406  07AB               	addwf	I2C_Main@i,f
  3648  0407  3020               	movlw	32
  3649  0408  022B               	subwf	I2C_Main@i,w
  3650  0409  1C03               	skipc
  3651  040A  2BF1               	goto	l2186
  3652  040B                     l2192:	
  3653                           
  3654                           ;MCU_16f1516_B1.c: 312: }
  3655                           ;MCU_16f1516_B1.c: 313: UART->TxGO=1;
  3656  040B  0849               	movf	_UART,w
  3657  040C  3E43               	addlw	67
  3658  040D  0086               	movwf	6
  3659  040E  3001               	movlw	1	; select bank2/3
  3660  040F  0087               	movwf	7
  3661  0410  1401               	bsf	1,0
  3662                           
  3663                           ;MCU_16f1516_B1.c: 315: }
  3664  0411  0008               	return
  3665  0412                     l187:	
  3666                           
  3667                           ;MCU_16f1516_B1.c: 316: else
  3668                           ;MCU_16f1516_B1.c: 317: {
  3669                           ;MCU_16f1516_B1.c: 318: if(RC0)
  3670  0412  1C0E               	btfss	14,0	;volatile
  3671  0413  2C28               	goto	l2198
  3672                           
  3673                           ;MCU_16f1516_B1.c: 319: {
  3674                           ;MCU_16f1516_B1.c: 320: if(!I2C->SS)
  3675  0414  085C               	movf	_I2C,w
  3676  0415  3E42               	addlw	66
  3677  0416  0086               	movwf	6
  3678  0417  3001               	movlw	1	; select bank2/3
  3679  0418  0087               	movwf	7
  3680  0419  1A81               	btfsc	1,5
  3681  041A  0008               	return
  3682                           
  3683                           ;MCU_16f1516_B1.c: 321: {
  3684                           ;MCU_16f1516_B1.c: 322: I2C->SS=1;
  3685  041B  085C               	movf	_I2C,w
  3686  041C  3E42               	addlw	66
  3687  041D  0086               	movwf	6
  3688  041E  3001               	movlw	1	; select bank2/3
  3689  041F  0087               	movwf	7
  3690  0420  1681               	bsf	1,5
  3691                           
  3692                           ;MCU_16f1516_B1.c: 323: I2C->MasterRxGO=1;
  3693  0421  085C               	movf	_I2C,w
  3694  0422  3E42               	addlw	66
  3695  0423  0086               	movwf	6
  3696  0424  3001               	movlw	1	; select bank2/3
  3697  0425  0087               	movwf	7
  3698  0426  1601               	bsf	1,4
  3699                           
  3700                           ;MCU_16f1516_B1.c: 324: }
  3701                           ;MCU_16f1516_B1.c: 325: }
  3702  0427  0008               	return
  3703  0428                     l2198:	
  3704                           
  3705                           ;MCU_16f1516_B1.c: 326: else
  3706                           ;MCU_16f1516_B1.c: 327: {
  3707                           ;MCU_16f1516_B1.c: 328: if(I2C->SS)
  3708  0428  085C               	movf	_I2C,w
  3709  0429  3E42               	addlw	66
  3710  042A  0086               	movwf	6
  3711  042B  3001               	movlw	1	; select bank2/3
  3712  042C  0087               	movwf	7
  3713  042D  1E81               	btfss	1,5
  3714  042E  2C35               	goto	l194
  3715                           
  3716                           ;MCU_16f1516_B1.c: 329: {
  3717                           ;MCU_16f1516_B1.c: 330: I2C->SS=0;
  3718  042F  085C               	movf	_I2C,w
  3719  0430  3E42               	addlw	66
  3720  0431  0086               	movwf	6
  3721  0432  3001               	movlw	1	; select bank2/3
  3722  0433  0087               	movwf	7
  3723  0434  1281               	bcf	1,5
  3724  0435                     l194:	
  3725                           
  3726                           ;MCU_16f1516_B1.c: 331: }
  3727                           ;MCU_16f1516_B1.c: 332: if(I2C->MasterTxGO)
  3728  0435  085C               	movf	_I2C,w
  3729  0436  3E42               	addlw	66
  3730  0437  0086               	movwf	6
  3731  0438  3001               	movlw	1	; select bank2/3
  3732  0439  0087               	movwf	7
  3733  043A  1D81               	btfss	1,3
  3734  043B  0008               	return
  3735                           
  3736                           ;MCU_16f1516_B1.c: 333: {
  3737                           ;MCU_16f1516_B1.c: 334: I2C->MasterTxGO=0;
  3738  043C  085C               	movf	_I2C,w
  3739  043D  3E42               	addlw	66
  3740  043E  0086               	movwf	6
  3741  043F  3001               	movlw	1	; select bank2/3
  3742  0440  0087               	movwf	7
  3743  0441  1181               	bcf	1,3
  3744                           
  3745                           ;MCU_16f1516_B1.c: 335: I2C_Master_Transmission();
  3746  0442  3186  2664         	fcall	_I2C_Master_Transmission
  3747  0444  0008               	return
  3748  0445                     __end_of_I2C_Main:	
  3749                           
  3750                           	psect	text21
  3751  0664                     __ptext21:	
  3752 ;; *************** function _I2C_Master_Transmission *****************
  3753 ;; Defined at:
  3754 ;;		line 375 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  i               1    6[BANK0 ] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;		None               void
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3768 ;;      Params:         0       0       0       0       0       0       0       0
  3769 ;;      Locals:         0       1       0       0       0       0       0       0
  3770 ;;      Temps:          0       1       0       0       0       0       0       0
  3771 ;;      Totals:         0       2       0       0       0       0       0       0
  3772 ;;Total ram usage:        2 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    4
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_I2C_Main
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           
  3783                           ;psect for function _I2C_Master_Transmission
  3784  0664                     _I2C_Master_Transmission:	
  3785  0664                     l202:	
  3786                           ;MCU_16f1516_B1.c: 377: char i;
  3787                           ;MCU_16f1516_B1.c: 378: while(SEN);
  3788                           
  3789                           ;incstack = 0
  3790                           ; Regs used in _I2C_Master_Transmission: [wreg+fsr1l+fsr1h+status,2+status,0]
  3791                           
  3792  0664  0024               	movlb	4	; select bank4
  3793  0665  1816               	btfsc	22,0	;volatile
  3794  0666  2E64               	goto	l202
  3795                           
  3796                           ;MCU_16f1516_B1.c: 379: SEN=1;
  3797  0667  1416               	bsf	22,0	;volatile
  3798  0668                     l205:	
  3799                           ;MCU_16f1516_B1.c: 381: while(SEN);
  3800                           
  3801  0668  1816               	btfsc	22,0	;volatile
  3802  0669  2E68               	goto	l205
  3803                           
  3804                           ;MCU_16f1516_B1.c: 384: SSPBUF=0x10;
  3805  066A  3010               	movlw	16
  3806  066B  0091               	movwf	17	;volatile
  3807  066C                     l208:	
  3808                           ;MCU_16f1516_B1.c: 385: while(BF);
  3809                           
  3810  066C  1814               	btfsc	20,0	;volatile
  3811  066D  2E6C               	goto	l208
  3812  066E                     l211:	
  3813                           ;MCU_16f1516_B1.c: 388: while(ACKSTAT);
  3814                           
  3815  066E  1B16               	btfsc	22,6	;volatile
  3816  066F  2E6E               	goto	l211
  3817                           
  3818                           ;MCU_16f1516_B1.c: 390: for(i=0;i<32;i++)
  3819  0670  0020               	movlb	0	; select bank0
  3820  0671  01A6               	clrf	I2C_Master_Transmission@i
  3821  0672  3020               	movlw	32
  3822  0673  0226               	subwf	I2C_Master_Transmission@i,w
  3823  0674  1803               	btfsc	3,0
  3824  0675  2E92               	goto	l225
  3825  0676                     l216:	
  3826                           ;MCU_16f1516_B1.c: 391: {
  3827                           ;MCU_16f1516_B1.c: 392: while(SEN);
  3828                           
  3829  0676  0024               	movlb	4	; select bank4
  3830  0677  1816               	btfsc	22,0	;volatile
  3831  0678  2E76               	goto	l216
  3832                           
  3833                           ;MCU_16f1516_B1.c: 393: SSPBUF=I2C->BufferWriter[i];
  3834  0679  0020               	movlb	0	; select bank0
  3835  067A  0826               	movf	I2C_Master_Transmission@i,w
  3836  067B  3E20               	addlw	32
  3837  067C  075C               	addwf	_I2C,w
  3838  067D  00A5               	movwf	??_I2C_Master_Transmission
  3839  067E  0825               	movf	??_I2C_Master_Transmission,w
  3840  067F  0086               	movwf	6
  3841  0680  3001               	movlw	1	; select bank2/3
  3842  0681  0087               	movwf	7
  3843  0682  0801               	movf	1,w
  3844  0683  0024               	movlb	4	; select bank4
  3845  0684  0091               	movwf	17	;volatile
  3846  0685                     l219:	
  3847                           ;MCU_16f1516_B1.c: 394: while(BF);
  3848                           
  3849  0685  1814               	btfsc	20,0	;volatile
  3850  0686  2E85               	goto	l219
  3851  0687                     l222:	
  3852                           ;MCU_16f1516_B1.c: 397: while(ACKSTAT);
  3853                           
  3854  0687  1B16               	btfsc	22,6	;volatile
  3855  0688  2E87               	goto	l222
  3856  0689  3001               	movlw	1
  3857  068A  0020               	movlb	0	; select bank0
  3858  068B  00A5               	movwf	??_I2C_Master_Transmission
  3859  068C  0825               	movf	??_I2C_Master_Transmission,w
  3860  068D  07A6               	addwf	I2C_Master_Transmission@i,f
  3861  068E  3020               	movlw	32
  3862  068F  0226               	subwf	I2C_Master_Transmission@i,w
  3863  0690  1C03               	skipc
  3864  0691  2E76               	goto	l216
  3865  0692                     l225:	
  3866                           ;MCU_16f1516_B1.c: 398: }
  3867                           ;MCU_16f1516_B1.c: 400: while(SEN);
  3868                           
  3869  0692  0024               	movlb	4	; select bank4
  3870  0693  1C16               	btfss	22,0	;volatile
  3871  0694  2E97               	goto	l228
  3872  0695  2E92               	goto	l225
  3873  0696                     l229:	
  3874                           ;MCU_16f1516_B1.c: 401: while(!PEN)
  3875                           
  3876                           
  3877                           ;MCU_16f1516_B1.c: 402: PEN=1;
  3878  0696  1516               	bsf	22,2	;volatile
  3879  0697                     l228:	
  3880  0697  1D16               	btfss	22,2	;volatile
  3881  0698  2E96               	goto	l229
  3882  0699                     l231:	
  3883                           ;MCU_16f1516_B1.c: 403: while(PEN);
  3884                           
  3885  0699  1D16               	btfss	22,2	;volatile
  3886  069A  0008               	return
  3887  069B  2E99               	goto	l231
  3888  069C                     __end_of_I2C_Master_Transmission:	
  3889                           
  3890                           	psect	text22
  3891  054B                     __ptext22:	
  3892 ;; *************** function _I2C_Master_Reception *****************
  3893 ;; Defined at:
  3894 ;;		line 408 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;		None
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  i               1    7[BANK0 ] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;		None               void
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3908 ;;      Params:         0       0       0       0       0       0       0       0
  3909 ;;      Locals:         0       1       0       0       0       0       0       0
  3910 ;;      Temps:          0       2       0       0       0       0       0       0
  3911 ;;      Totals:         0       3       0       0       0       0       0       0
  3912 ;;Total ram usage:        3 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    4
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_I2C_Main
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           
  3923                           ;psect for function _I2C_Master_Reception
  3924  054B                     _I2C_Master_Reception:	
  3925  054B                     l237:	
  3926                           ;MCU_16f1516_B1.c: 410: char i;
  3927                           ;MCU_16f1516_B1.c: 411: while(SEN);
  3928                           
  3929                           ;incstack = 0
  3930                           ; Regs used in _I2C_Master_Reception: [wreg+fsr1l+fsr1h+status,2+status,0]
  3931                           
  3932  054B  0024               	movlb	4	; select bank4
  3933  054C  1816               	btfsc	22,0	;volatile
  3934  054D  2D4B               	goto	l237
  3935                           
  3936                           ;MCU_16f1516_B1.c: 412: SEN=1;
  3937  054E  1416               	bsf	22,0	;volatile
  3938  054F                     l240:	
  3939                           ;MCU_16f1516_B1.c: 413: while(SEN);
  3940                           
  3941  054F  1816               	btfsc	22,0	;volatile
  3942  0550  2D4F               	goto	l240
  3943                           
  3944                           ;MCU_16f1516_B1.c: 416: SSPBUF=0x11;
  3945  0551  3011               	movlw	17
  3946  0552  0091               	movwf	17	;volatile
  3947  0553                     l243:	
  3948                           ;MCU_16f1516_B1.c: 419: while(BF);
  3949                           
  3950  0553  1814               	btfsc	20,0	;volatile
  3951  0554  2D53               	goto	l243
  3952  0555                     l246:	
  3953                           ;MCU_16f1516_B1.c: 420: while(ACKSTAT);
  3954                           
  3955  0555  1B16               	btfsc	22,6	;volatile
  3956  0556  2D55               	goto	l246
  3957                           
  3958                           ;MCU_16f1516_B1.c: 423: for(i=0;i<32;i++)
  3959  0557  0020               	movlb	0	; select bank0
  3960  0558  01A7               	clrf	I2C_Master_Reception@i
  3961  0559  3020               	movlw	32
  3962  055A  0227               	subwf	I2C_Master_Reception@i,w
  3963  055B  1803               	btfsc	3,0
  3964  055C  2D81               	goto	l266
  3965  055D                     l251:	
  3966                           ;MCU_16f1516_B1.c: 424: {
  3967                           ;MCU_16f1516_B1.c: 425: while(SEN);
  3968                           
  3969  055D  0024               	movlb	4	; select bank4
  3970  055E  1816               	btfsc	22,0	;volatile
  3971  055F  2D5D               	goto	l251
  3972  0560                     l254:	
  3973                           ;MCU_16f1516_B1.c: 426: while(RCEN);
  3974                           
  3975  0560  1996               	btfsc	22,3	;volatile
  3976  0561  2D60               	goto	l254
  3977                           
  3978                           ;MCU_16f1516_B1.c: 427: RCEN=1;
  3979  0562  1596               	bsf	22,3	;volatile
  3980  0563                     l257:	
  3981                           ;MCU_16f1516_B1.c: 428: while(RCEN);
  3982                           
  3983  0563  1996               	btfsc	22,3	;volatile
  3984  0564  2D63               	goto	l257
  3985                           
  3986                           ;MCU_16f1516_B1.c: 429: I2C->BufferReader[i]=SSPBUF;
  3987  0565  0811               	movf	17,w	;volatile
  3988  0566  0020               	movlb	0	; select bank0
  3989  0567  00A5               	movwf	??_I2C_Master_Reception
  3990  0568  0827               	movf	I2C_Master_Reception@i,w
  3991  0569  075C               	addwf	_I2C,w
  3992  056A  00A6               	movwf	??_I2C_Master_Reception+1
  3993  056B  0826               	movf	??_I2C_Master_Reception+1,w
  3994  056C  0086               	movwf	6
  3995  056D  3001               	movlw	1	; select bank2/3
  3996  056E  0087               	movwf	7
  3997  056F  0825               	movf	??_I2C_Master_Reception,w
  3998  0570  0081               	movwf	1
  3999  0571                     l260:	
  4000                           ;MCU_16f1516_B1.c: 430: while(!ACKEN)
  4001                           
  4002  0571  0024               	movlb	4	; select bank4
  4003  0572  1A16               	btfsc	22,4	;volatile
  4004  0573  2D76               	goto	l263
  4005                           
  4006                           ;MCU_16f1516_B1.c: 431: ACKEN=1;
  4007  0574  1616               	bsf	22,4	;volatile
  4008  0575  2D71               	goto	l260
  4009  0576                     l263:	
  4010                           ;MCU_16f1516_B1.c: 432: while(ACKEN);
  4011                           
  4012  0576  1A16               	btfsc	22,4	;volatile
  4013  0577  2D76               	goto	l263
  4014  0578  3001               	movlw	1
  4015  0579  0020               	movlb	0	; select bank0
  4016  057A  00A5               	movwf	??_I2C_Master_Reception
  4017  057B  0825               	movf	??_I2C_Master_Reception,w
  4018  057C  07A7               	addwf	I2C_Master_Reception@i,f
  4019  057D  3020               	movlw	32
  4020  057E  0227               	subwf	I2C_Master_Reception@i,w
  4021  057F  1C03               	skipc
  4022  0580  2D5D               	goto	l251
  4023  0581                     l266:	
  4024                           ;MCU_16f1516_B1.c: 433: }
  4025                           ;MCU_16f1516_B1.c: 434: while(RCEN);
  4026                           
  4027  0581  0024               	movlb	4	; select bank4
  4028  0582  1996               	btfsc	22,3	;volatile
  4029  0583  2D81               	goto	l266
  4030                           
  4031                           ;MCU_16f1516_B1.c: 435: RCEN=1;
  4032  0584  1596               	bsf	22,3	;volatile
  4033  0585                     l269:	
  4034                           ;MCU_16f1516_B1.c: 436: while(RCEN);
  4035                           
  4036  0585  1D96               	btfss	22,3	;volatile
  4037  0586  2D89               	goto	l272
  4038  0587  2D85               	goto	l269
  4039  0588                     l273:	
  4040                           ;MCU_16f1516_B1.c: 437: while(!ACKEN)
  4041                           
  4042                           
  4043                           ;MCU_16f1516_B1.c: 438: ACKEN=1;
  4044  0588  1616               	bsf	22,4	;volatile
  4045  0589                     l272:	
  4046  0589  1E16               	btfss	22,4	;volatile
  4047  058A  2D88               	goto	l273
  4048  058B                     l275:	
  4049                           ;MCU_16f1516_B1.c: 439: while(ACKEN);
  4050                           
  4051  058B  1A16               	btfsc	22,4	;volatile
  4052  058C  2D8B               	goto	l275
  4053  058D                     l278:	
  4054                           ;MCU_16f1516_B1.c: 440: while(RCEN);
  4055                           
  4056  058D  1996               	btfsc	22,3	;volatile
  4057  058E  2D8D               	goto	l278
  4058                           
  4059                           ;MCU_16f1516_B1.c: 441: RCEN=1;
  4060  058F  1596               	bsf	22,3	;volatile
  4061  0590                     l281:	
  4062                           ;MCU_16f1516_B1.c: 442: while(RCEN);
  4063                           
  4064  0590  1996               	btfsc	22,3	;volatile
  4065  0591  2D90               	goto	l281
  4066  0592                     l284:	
  4067                           ;MCU_16f1516_B1.c: 444: while(SEN);
  4068                           
  4069  0592  1C16               	btfss	22,0	;volatile
  4070  0593  2D96               	goto	l287
  4071  0594  2D92               	goto	l284
  4072  0595                     l288:	
  4073                           ;MCU_16f1516_B1.c: 445: while(!PEN)
  4074                           
  4075                           
  4076                           ;MCU_16f1516_B1.c: 446: PEN=1;
  4077  0595  1516               	bsf	22,2	;volatile
  4078  0596                     l287:	
  4079  0596  1D16               	btfss	22,2	;volatile
  4080  0597  2D95               	goto	l288
  4081  0598                     l290:	
  4082                           ;MCU_16f1516_B1.c: 447: while(PEN);
  4083                           
  4084  0598  1D16               	btfss	22,2	;volatile
  4085  0599  0008               	return
  4086  059A  2D98               	goto	l290
  4087  059B                     __end_of_I2C_Master_Reception:	
  4088                           
  4089                           	psect	intentry
  4090  0004                     __pintentry:	
  4091 ;; *************** function _ISR *****************
  4092 ;; Defined at:
  4093 ;;		line 56 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;		None               void
  4100 ;; Registers used:
  4101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4107 ;;      Params:         0       0       0       0       0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0
  4109 ;;      Temps:          0       1       0       0       0       0       0       0
  4110 ;;      Totals:         0       1       0       0       0       0       0       0
  4111 ;;Total ram usage:        1 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    3
  4114 ;; This function calls:
  4115 ;;		_I2C_ISR
  4116 ;;		_TMR1_ISR
  4117 ;;		_UART_ISR
  4118 ;; This function is called by:
  4119 ;;		Interrupt level 1
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123  0004                     _ISR:	
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4127  0004  147E               	bsf	126,0	;set compiler interrupt flag
  4128  0005  3180               	pagesel	$
  4129  0006  0020               	movlb	0	; select bank0
  4130  0007  087F               	movf	127,w
  4131  0008  00A4               	movwf	??_ISR
  4132                           
  4133                           ;MCU_16f1516_B1.c: 58: __nop();
  4134  0009  0000               	nop
  4135                           
  4136                           ;MCU_16f1516_B1.c: 60: __nop();
  4137  000A  0000               	nop
  4138                           
  4139                           ;MCU_16f1516_B1.c: 62: TMR1_ISR();
  4140  000B  3187  2767  3180   	fcall	_TMR1_ISR
  4141                           
  4142                           ;MCU_16f1516_B1.c: 66: __nop();
  4143  000E  0000               	nop
  4144                           
  4145                           ;MCU_16f1516_B1.c: 68: UART_ISR();
  4146  000F  3187  27B7  3180   	fcall	_UART_ISR
  4147                           
  4148                           ;MCU_16f1516_B1.c: 70: I2C_ISR();
  4149  0012  318F  278E         	fcall	_I2C_ISR
  4150  0014  0020               	movlb	0	; select bank0
  4151  0015  0824               	movf	??_ISR,w
  4152  0016  00FF               	movwf	127
  4153  0017  107E               	bcf	126,0	;clear compiler interrupt flag
  4154  0018  0009               	retfie
  4155  0019                     __end_of_ISR:	
  4156                           
  4157                           	psect	text24
  4158  07B7                     __ptext24:	
  4159 ;; *************** function _UART_ISR *****************
  4160 ;; Defined at:
  4161 ;;		line 516 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  i               1    0        unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;		None               void
  4168 ;; Registers used:
  4169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4175 ;;      Params:         0       0       0       0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0
  4177 ;;      Temps:          2       0       0       0       0       0       0       0
  4178 ;;      Totals:         2       0       0       0       0       0       0       0
  4179 ;;Total ram usage:        2 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    2
  4182 ;; This function calls:
  4183 ;;		i1_setSegmentDisplayNumber
  4184 ;; This function is called by:
  4185 ;;		_ISR
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           
  4190                           ;psect for function _UART_ISR
  4191  07B7                     _UART_ISR:	
  4192                           
  4193                           ;MCU_16f1516_B1.c: 518: char i;
  4194                           ;MCU_16f1516_B1.c: 519: if(RCIE && RCIF)
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in _UART_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4198  07B7  0021               	movlb	1	; select bank1
  4199  07B8  1E91               	btfss	17,5	;volatile
  4200  07B9  0008               	return
  4201  07BA  0020               	movlb	0	; select bank0
  4202  07BB  1E91               	btfss	17,5	;volatile
  4203  07BC  0008               	return
  4204  07BD                     i1l318:	
  4205                           ;MCU_16f1516_B1.c: 520: {
  4206                           ;MCU_16f1516_B1.c: 521: while(!RCIDL);
  4207                           
  4208  07BD  0023               	movlb	3	; select bank3
  4209  07BE  1F1F               	btfss	31,6	;volatile
  4210  07BF  2FBD               	goto	i1l318
  4211                           
  4212                           ;MCU_16f1516_B1.c: 523: UART->RxData[0]=RCREG;
  4213  07C0  0819               	movf	25,w	;volatile
  4214  07C1  00FC               	movwf	??_UART_ISR
  4215  07C2  0020               	movlb	0	; select bank0
  4216  07C3  0849               	movf	_UART,w
  4217  07C4  3E20               	addlw	32
  4218  07C5  0086               	movwf	6
  4219  07C6  3001               	movlw	1	; select bank2/3
  4220  07C7  0087               	movwf	7
  4221  07C8  087C               	movf	??_UART_ISR,w
  4222  07C9  0081               	movwf	1
  4223                           
  4224                           ;MCU_16f1516_B1.c: 532: RA1=~RA1;
  4225  07CA  3002               	movlw	2
  4226  07CB  068C               	xorwf	12,f
  4227                           
  4228                           ;MCU_16f1516_B1.c: 533: setSegmentDisplayNumber(UART->RxData[0]);
  4229  07CC  0849               	movf	_UART,w
  4230  07CD  3E20               	addlw	32
  4231  07CE  0086               	movwf	6
  4232  07CF  3001               	movlw	1	; select bank2/3
  4233  07D0  0087               	movwf	7
  4234  07D1  0801               	movf	1,w
  4235  07D2  00FC               	movwf	??_UART_ISR
  4236  07D3  01FD               	clrf	??_UART_ISR+1
  4237  07D4  087C               	movf	??_UART_ISR,w
  4238  07D5  00F9               	movwf	i1setSegmentDisplayNumber@number
  4239  07D6  087D               	movf	??_UART_ISR+1,w
  4240  07D7  00FA               	movwf	i1setSegmentDisplayNumber@number+1
  4241  07D8  3181  2173         	fcall	i1_setSegmentDisplayNumber
  4242  07DA  0008               	return
  4243  07DB                     __end_of_UART_ISR:	
  4244                           
  4245                           	psect	text25
  4246  0173                     __ptext25:	
  4247 ;; *************** function i1_setSegmentDisplayNumber *****************
  4248 ;; Defined at:
  4249 ;;		line 20 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\SegmentDisplay_A2.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  number          2    9[COMMON] int 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  setSegmentDi    1   11[COMMON] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;		None               void
  4256 ;; Registers used:
  4257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4263 ;;      Params:         2       0       0       0       0       0       0       0
  4264 ;;      Locals:         1       0       0       0       0       0       0       0
  4265 ;;      Temps:          0       4       0       0       0       0       0       0
  4266 ;;      Totals:         3       4       0       0       0       0       0       0
  4267 ;;Total ram usage:        7 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    1
  4270 ;; This function calls:
  4271 ;;		i1___awdiv
  4272 ;;		i1___awmod
  4273 ;; This function is called by:
  4274 ;;		_UART_ISR
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function i1_setSegmentDisplayNumber
  4280  0173                     i1_setSegmentDisplayNumber:	
  4281                           
  4282                           ;SegmentDisplay_A2.c: 22: char i;
  4283                           ;SegmentDisplay_A2.c: 23: if(Segment->Enable)
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in i1_setSegmentDisplayNumber: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  4287  0173  0020               	movlb	0	; select bank0
  4288  0174  085D               	movf	_Segment,w
  4289  0175  3E15               	addlw	21
  4290  0176  0086               	movwf	6
  4291  0177  0187               	clrf	7
  4292  0178  1C01               	btfss	1,0
  4293  0179  0008               	return
  4294                           
  4295                           ;SegmentDisplay_A2.c: 24: {
  4296                           ;SegmentDisplay_A2.c: 25: Segment->GO=1;
  4297  017A  085D               	movf	_Segment,w
  4298  017B  3E15               	addlw	21
  4299  017C  0086               	movwf	6
  4300  017D  0187               	clrf	7
  4301  017E  1481               	bsf	1,1
  4302                           
  4303                           ;SegmentDisplay_A2.c: 26: if(Segment->Hex)
  4304  017F  085D               	movf	_Segment,w
  4305  0180  3E15               	addlw	21
  4306  0181  0086               	movwf	6
  4307  0182  0187               	clrf	7
  4308  0183  1D01               	btfss	1,2
  4309  0184  29BF               	goto	i1l2076
  4310                           
  4311                           ;SegmentDisplay_A2.c: 27: {
  4312                           ;SegmentDisplay_A2.c: 28: Segment->Num[0]=(number & 0x000f);
  4313  0185  0879               	movf	i1setSegmentDisplayNumber@number,w
  4314  0186  390F               	andlw	15
  4315  0187  00A0               	movwf	??i1_setSegmentDisplayNumber
  4316  0188  085D               	movf	_Segment,w
  4317  0189  3E11               	addlw	17
  4318  018A  0086               	movwf	6
  4319  018B  0187               	clrf	7
  4320  018C  0820               	movf	??i1_setSegmentDisplayNumber,w
  4321  018D  0081               	movwf	1
  4322                           
  4323                           ;SegmentDisplay_A2.c: 29: Segment->Num[1]=((number>>4)&0x000f);
  4324  018E  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4325  018F  00A1               	movwf	??i1_setSegmentDisplayNumber+1
  4326  0190  0879               	movf	i1setSegmentDisplayNumber@number,w
  4327  0191  00A0               	movwf	??i1_setSegmentDisplayNumber
  4328  0192  3004               	movlw	4
  4329  0193  00A2               	movwf	??i1_setSegmentDisplayNumber+2
  4330  0194                     u267_25:	
  4331  0194  0D21               	rlf	??i1_setSegmentDisplayNumber+1,w
  4332  0195  0CA1               	rrf	??i1_setSegmentDisplayNumber+1,f
  4333  0196  0CA0               	rrf	??i1_setSegmentDisplayNumber,f
  4334  0197  0BA2               	decfsz	??i1_setSegmentDisplayNumber+2,f
  4335  0198  2994               	goto	u267_25
  4336  0199  0820               	movf	??i1_setSegmentDisplayNumber,w
  4337  019A  390F               	andlw	15
  4338  019B  00A3               	movwf	??i1_setSegmentDisplayNumber+3
  4339  019C  085D               	movf	_Segment,w
  4340  019D  3E12               	addlw	18
  4341  019E  0086               	movwf	6
  4342  019F  0187               	clrf	7
  4343  01A0  0823               	movf	??i1_setSegmentDisplayNumber+3,w
  4344  01A1  0081               	movwf	1
  4345                           
  4346                           ;SegmentDisplay_A2.c: 30: Segment->Num[2]=((number>>8)&0x000f);
  4347  01A2  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4348  01A3  390F               	andlw	15
  4349  01A4  00A0               	movwf	??i1_setSegmentDisplayNumber
  4350  01A5  085D               	movf	_Segment,w
  4351  01A6  3E13               	addlw	19
  4352  01A7  0086               	movwf	6
  4353  01A8  0187               	clrf	7
  4354  01A9  0820               	movf	??i1_setSegmentDisplayNumber,w
  4355  01AA  0081               	movwf	1
  4356                           
  4357                           ;SegmentDisplay_A2.c: 31: Segment->Num[3]=((number>>12)&0x000f);
  4358  01AB  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4359  01AC  00A1               	movwf	??i1_setSegmentDisplayNumber+1
  4360  01AD  0879               	movf	i1setSegmentDisplayNumber@number,w
  4361  01AE  00A0               	movwf	??i1_setSegmentDisplayNumber
  4362  01AF  300C               	movlw	12
  4363  01B0  00A2               	movwf	??i1_setSegmentDisplayNumber+2
  4364  01B1                     u268_25:	
  4365  01B1  0D21               	rlf	??i1_setSegmentDisplayNumber+1,w
  4366  01B2  0CA1               	rrf	??i1_setSegmentDisplayNumber+1,f
  4367  01B3  0CA0               	rrf	??i1_setSegmentDisplayNumber,f
  4368  01B4  0BA2               	decfsz	??i1_setSegmentDisplayNumber+2,f
  4369  01B5  29B1               	goto	u268_25
  4370  01B6  0820               	movf	??i1_setSegmentDisplayNumber,w
  4371  01B7  390F               	andlw	15
  4372  01B8  00A3               	movwf	??i1_setSegmentDisplayNumber+3
  4373  01B9  085D               	movf	_Segment,w
  4374  01BA  3E14               	addlw	20
  4375  01BB  0086               	movwf	6
  4376  01BC  0187               	clrf	7
  4377  01BD  0823               	movf	??i1_setSegmentDisplayNumber+3,w
  4378  01BE  2A69               	goto	L4
  4379  01BF                     i1l2076:	
  4380                           ;SegmentDisplay_A2.c: 32: }
  4381                           
  4382                           
  4383                           ;SegmentDisplay_A2.c: 33: else if(Segment->Dec)
  4384  01BF  085D               	movf	_Segment,w
  4385  01C0  3E15               	addlw	21
  4386  01C1  0086               	movwf	6
  4387  01C2  0187               	clrf	7
  4388  01C3  1D81               	btfss	1,3
  4389  01C4  2A6A               	goto	i1l2104
  4390                           
  4391                           ;SegmentDisplay_A2.c: 34: {
  4392                           ;SegmentDisplay_A2.c: 35: if(number > 0x270f)
  4393  01C5  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4394  01C6  3A80               	xorlw	128
  4395  01C7  00A0               	movwf	??i1_setSegmentDisplayNumber
  4396  01C8  30A7               	movlw	167
  4397  01C9  0220               	subwf	??i1_setSegmentDisplayNumber,w
  4398  01CA  1D03               	skipz
  4399  01CB  29CE               	goto	u270_25
  4400  01CC  3010               	movlw	16
  4401  01CD  0279               	subwf	i1setSegmentDisplayNumber@number,w
  4402  01CE                     u270_25:	
  4403  01CE  1C03               	skipc
  4404  01CF  29E6               	goto	i1l2092
  4405                           
  4406                           ;SegmentDisplay_A2.c: 36: {
  4407                           ;SegmentDisplay_A2.c: 37: for(i=0 ; i<4; i++)
  4408  01D0  01FB               	clrf	i1setSegmentDisplayNumber@i
  4409  01D1                     L5:	
  4410  01D1  3004               	movlw	4
  4411  01D2  027B               	subwf	i1setSegmentDisplayNumber@i,w
  4412  01D3  1803               	btfsc	3,0
  4413  01D4  2A6A               	goto	i1l2104
  4414                           
  4415                           ;SegmentDisplay_A2.c: 38: {
  4416                           ;SegmentDisplay_A2.c: 39: Segment->Num[i]=16;
  4417  01D5  3010               	movlw	16
  4418  01D6  0020               	movlb	0	; select bank0
  4419  01D7  00A0               	movwf	??i1_setSegmentDisplayNumber
  4420  01D8  087B               	movf	i1setSegmentDisplayNumber@i,w
  4421  01D9  3E11               	addlw	17
  4422  01DA  075D               	addwf	_Segment,w
  4423  01DB  00A1               	movwf	??i1_setSegmentDisplayNumber+1
  4424  01DC  0821               	movf	??i1_setSegmentDisplayNumber+1,w
  4425  01DD  0086               	movwf	6
  4426  01DE  0187               	clrf	7
  4427  01DF  0820               	movf	??i1_setSegmentDisplayNumber,w
  4428  01E0  0081               	movwf	1
  4429  01E1  3001               	movlw	1
  4430  01E2  00A0               	movwf	??i1_setSegmentDisplayNumber
  4431  01E3  0820               	movf	??i1_setSegmentDisplayNumber,w
  4432  01E4  07FB               	addwf	i1setSegmentDisplayNumber@i,f
  4433  01E5  29D1               	goto	L5
  4434  01E6                     i1l2092:	
  4435                           ;SegmentDisplay_A2.c: 40: }
  4436                           ;SegmentDisplay_A2.c: 41: }
  4437                           
  4438                           
  4439                           ;SegmentDisplay_A2.c: 42: else
  4440                           ;SegmentDisplay_A2.c: 43: {
  4441                           ;SegmentDisplay_A2.c: 44: Segment->Num[3]=(number/1000);
  4442  01E6  30E8               	movlw	232
  4443  01E7  00F0               	movwf	i1___awdiv@divisor
  4444  01E8  3003               	movlw	3
  4445  01E9  00F1               	movwf	i1___awdiv@divisor+1
  4446  01EA  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4447  01EB  01F3               	clrf	i1___awdiv@dividend+1
  4448  01EC  07F3               	addwf	i1___awdiv@dividend+1,f
  4449  01ED  0879               	movf	i1setSegmentDisplayNumber@number,w
  4450  01EE  01F2               	clrf	i1___awdiv@dividend
  4451  01EF  07F2               	addwf	i1___awdiv@dividend,f
  4452  01F0  3184  24F8  3181   	fcall	i1___awdiv
  4453  01F3  0870               	movf	?i1___awdiv,w
  4454  01F4  0020               	movlb	0	; select bank0
  4455  01F5  00A0               	movwf	??i1_setSegmentDisplayNumber
  4456  01F6  085D               	movf	_Segment,w
  4457  01F7  3E14               	addlw	20
  4458  01F8  0086               	movwf	6
  4459  01F9  0187               	clrf	7
  4460  01FA  0820               	movf	??i1_setSegmentDisplayNumber,w
  4461  01FB  0081               	movwf	1
  4462                           
  4463                           ;SegmentDisplay_A2.c: 45: number%=1000;
  4464  01FC  30E8               	movlw	232
  4465  01FD  00F0               	movwf	i1___awmod@divisor
  4466  01FE  3003               	movlw	3
  4467  01FF  00F1               	movwf	i1___awmod@divisor+1
  4468  0200  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4469  0201  01F3               	clrf	i1___awmod@dividend+1
  4470  0202  07F3               	addwf	i1___awmod@dividend+1,f
  4471  0203  0879               	movf	i1setSegmentDisplayNumber@number,w
  4472  0204  01F2               	clrf	i1___awmod@dividend
  4473  0205  07F2               	addwf	i1___awmod@dividend,f
  4474  0206  3185  25E3  3181   	fcall	i1___awmod
  4475  0209  0871               	movf	?i1___awmod+1,w
  4476  020A  01FA               	clrf	i1setSegmentDisplayNumber@number+1
  4477  020B  07FA               	addwf	i1setSegmentDisplayNumber@number+1,f
  4478  020C  0870               	movf	?i1___awmod,w
  4479  020D  01F9               	clrf	i1setSegmentDisplayNumber@number
  4480  020E  07F9               	addwf	i1setSegmentDisplayNumber@number,f
  4481                           
  4482                           ;SegmentDisplay_A2.c: 46: Segment->Num[2]=(number/100);
  4483  020F  3064               	movlw	100
  4484  0210  00F0               	movwf	i1___awdiv@divisor
  4485  0211  3000               	movlw	0
  4486  0212  00F1               	movwf	i1___awdiv@divisor+1
  4487  0213  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4488  0214  01F3               	clrf	i1___awdiv@dividend+1
  4489  0215  07F3               	addwf	i1___awdiv@dividend+1,f
  4490  0216  0879               	movf	i1setSegmentDisplayNumber@number,w
  4491  0217  01F2               	clrf	i1___awdiv@dividend
  4492  0218  07F2               	addwf	i1___awdiv@dividend,f
  4493  0219  3184  24F8  3181   	fcall	i1___awdiv
  4494  021C  0870               	movf	?i1___awdiv,w
  4495  021D  0020               	movlb	0	; select bank0
  4496  021E  00A0               	movwf	??i1_setSegmentDisplayNumber
  4497  021F  085D               	movf	_Segment,w
  4498  0220  3E13               	addlw	19
  4499  0221  0086               	movwf	6
  4500  0222  0187               	clrf	7
  4501  0223  0820               	movf	??i1_setSegmentDisplayNumber,w
  4502  0224  0081               	movwf	1
  4503                           
  4504                           ;SegmentDisplay_A2.c: 47: number%=100;
  4505  0225  3064               	movlw	100
  4506  0226  00F0               	movwf	i1___awmod@divisor
  4507  0227  3000               	movlw	0
  4508  0228  00F1               	movwf	i1___awmod@divisor+1
  4509  0229  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4510  022A  01F3               	clrf	i1___awmod@dividend+1
  4511  022B  07F3               	addwf	i1___awmod@dividend+1,f
  4512  022C  0879               	movf	i1setSegmentDisplayNumber@number,w
  4513  022D  01F2               	clrf	i1___awmod@dividend
  4514  022E  07F2               	addwf	i1___awmod@dividend,f
  4515  022F  3185  25E3  3181   	fcall	i1___awmod
  4516  0232  0871               	movf	?i1___awmod+1,w
  4517  0233  01FA               	clrf	i1setSegmentDisplayNumber@number+1
  4518  0234  07FA               	addwf	i1setSegmentDisplayNumber@number+1,f
  4519  0235  0870               	movf	?i1___awmod,w
  4520  0236  01F9               	clrf	i1setSegmentDisplayNumber@number
  4521  0237  07F9               	addwf	i1setSegmentDisplayNumber@number,f
  4522                           
  4523                           ;SegmentDisplay_A2.c: 48: Segment->Num[1]=(number/10);
  4524  0238  300A               	movlw	10
  4525  0239  00F0               	movwf	i1___awdiv@divisor
  4526  023A  3000               	movlw	0
  4527  023B  00F1               	movwf	i1___awdiv@divisor+1
  4528  023C  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4529  023D  01F3               	clrf	i1___awdiv@dividend+1
  4530  023E  07F3               	addwf	i1___awdiv@dividend+1,f
  4531  023F  0879               	movf	i1setSegmentDisplayNumber@number,w
  4532  0240  01F2               	clrf	i1___awdiv@dividend
  4533  0241  07F2               	addwf	i1___awdiv@dividend,f
  4534  0242  3184  24F8  3181   	fcall	i1___awdiv
  4535  0245  0870               	movf	?i1___awdiv,w
  4536  0246  0020               	movlb	0	; select bank0
  4537  0247  00A0               	movwf	??i1_setSegmentDisplayNumber
  4538  0248  085D               	movf	_Segment,w
  4539  0249  3E12               	addlw	18
  4540  024A  0086               	movwf	6
  4541  024B  0187               	clrf	7
  4542  024C  0820               	movf	??i1_setSegmentDisplayNumber,w
  4543  024D  0081               	movwf	1
  4544                           
  4545                           ;SegmentDisplay_A2.c: 49: number%=10;
  4546  024E  300A               	movlw	10
  4547  024F  00F0               	movwf	i1___awmod@divisor
  4548  0250  3000               	movlw	0
  4549  0251  00F1               	movwf	i1___awmod@divisor+1
  4550  0252  087A               	movf	i1setSegmentDisplayNumber@number+1,w
  4551  0253  01F3               	clrf	i1___awmod@dividend+1
  4552  0254  07F3               	addwf	i1___awmod@dividend+1,f
  4553  0255  0879               	movf	i1setSegmentDisplayNumber@number,w
  4554  0256  01F2               	clrf	i1___awmod@dividend
  4555  0257  07F2               	addwf	i1___awmod@dividend,f
  4556  0258  3185  25E3  3181   	fcall	i1___awmod
  4557  025B  0871               	movf	?i1___awmod+1,w
  4558  025C  01FA               	clrf	i1setSegmentDisplayNumber@number+1
  4559  025D  07FA               	addwf	i1setSegmentDisplayNumber@number+1,f
  4560  025E  0870               	movf	?i1___awmod,w
  4561  025F  01F9               	clrf	i1setSegmentDisplayNumber@number
  4562  0260  07F9               	addwf	i1setSegmentDisplayNumber@number,f
  4563                           
  4564                           ;SegmentDisplay_A2.c: 50: Segment->Num[0]=number;
  4565  0261  0879               	movf	i1setSegmentDisplayNumber@number,w
  4566  0262  0020               	movlb	0	; select bank0
  4567  0263  00A0               	movwf	??i1_setSegmentDisplayNumber
  4568  0264  085D               	movf	_Segment,w
  4569  0265  3E11               	addlw	17
  4570  0266  0086               	movwf	6
  4571  0267  0187               	clrf	7
  4572  0268  0820               	movf	??i1_setSegmentDisplayNumber,w
  4573  0269                     L4:	
  4574  0269  0081               	movwf	1
  4575  026A                     i1l2104:	
  4576                           
  4577                           ;SegmentDisplay_A2.c: 51: }
  4578                           ;SegmentDisplay_A2.c: 52: }
  4579                           ;SegmentDisplay_A2.c: 53: if(Segment->Num[3] > 0)
  4580  026A  0020               	movlb	0	; select bank0
  4581  026B  085D               	movf	_Segment,w
  4582  026C  3E14               	addlw	20
  4583  026D  0086               	movwf	6
  4584  026E  0187               	clrf	7
  4585  026F  0801               	movf	1,w
  4586  0270  3A00               	xorlw	0
  4587  0271  1903               	skipnz
  4588  0272  2A7C               	goto	i1l2108
  4589                           
  4590                           ;SegmentDisplay_A2.c: 54: {
  4591                           ;SegmentDisplay_A2.c: 55: Segment->DisplayCount=3;
  4592  0273  3003               	movlw	3
  4593  0274  00A0               	movwf	??i1_setSegmentDisplayNumber
  4594  0275  085D               	movf	_Segment,w
  4595  0276  3E17               	addlw	23
  4596  0277  0086               	movwf	6
  4597  0278  0187               	clrf	7
  4598  0279  0820               	movf	??i1_setSegmentDisplayNumber,w
  4599  027A  0081               	movwf	1
  4600                           
  4601                           ;SegmentDisplay_A2.c: 56: }
  4602  027B  0008               	return
  4603  027C                     i1l2108:	
  4604                           
  4605                           ;SegmentDisplay_A2.c: 57: else if(Segment->Num[2] > 0)
  4606  027C  085D               	movf	_Segment,w
  4607  027D  3E13               	addlw	19
  4608  027E  0086               	movwf	6
  4609  027F  0187               	clrf	7
  4610  0280  0801               	movf	1,w
  4611  0281  3A00               	xorlw	0
  4612  0282  1903               	skipnz
  4613  0283  2A8D               	goto	i1l2112
  4614                           
  4615                           ;SegmentDisplay_A2.c: 58: {
  4616                           ;SegmentDisplay_A2.c: 59: Segment->DisplayCount=2;
  4617  0284  3002               	movlw	2
  4618  0285  00A0               	movwf	??i1_setSegmentDisplayNumber
  4619  0286  085D               	movf	_Segment,w
  4620  0287  3E17               	addlw	23
  4621  0288  0086               	movwf	6
  4622  0289  0187               	clrf	7
  4623  028A  0820               	movf	??i1_setSegmentDisplayNumber,w
  4624  028B  0081               	movwf	1
  4625                           
  4626                           ;SegmentDisplay_A2.c: 60: }
  4627  028C  0008               	return
  4628  028D                     i1l2112:	
  4629                           
  4630                           ;SegmentDisplay_A2.c: 61: else if(Segment->Num[1] > 0)
  4631  028D  085D               	movf	_Segment,w
  4632  028E  3E12               	addlw	18
  4633  028F  0086               	movwf	6
  4634  0290  0187               	clrf	7
  4635  0291  0801               	movf	1,w
  4636  0292  3A00               	xorlw	0
  4637  0293  1903               	skipnz
  4638  0294  2A9C               	goto	i1l2116
  4639                           
  4640                           ;SegmentDisplay_A2.c: 62: {
  4641                           ;SegmentDisplay_A2.c: 63: Segment->DisplayCount=1;
  4642  0295  085D               	movf	_Segment,w
  4643  0296  3E17               	addlw	23
  4644  0297  0086               	movwf	6
  4645  0298  0187               	clrf	7
  4646  0299  0181               	clrf	1
  4647  029A  0A81               	incf	1,f
  4648                           
  4649                           ;SegmentDisplay_A2.c: 64: }
  4650  029B  0008               	return
  4651  029C                     i1l2116:	
  4652                           
  4653                           ;SegmentDisplay_A2.c: 65: else
  4654                           ;SegmentDisplay_A2.c: 66: {
  4655                           ;SegmentDisplay_A2.c: 67: Segment->DisplayCount=0;
  4656  029C  085D               	movf	_Segment,w
  4657  029D  3E17               	addlw	23
  4658  029E  0086               	movwf	6
  4659  029F  0187               	clrf	7
  4660  02A0  0181               	clrf	1
  4661  02A1  0008               	return
  4662  02A2                     __end_ofi1_setSegmentDisplayNumber:	
  4663                           
  4664                           	psect	text26
  4665  05E3                     __ptext26:	
  4666 ;; *************** function i1___awmod *****************
  4667 ;; Defined at:
  4668 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  divisor         2    0[COMMON] int 
  4671 ;;  dividend        2    2[COMMON] int 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  __awmod         1    6[COMMON] unsigned char 
  4674 ;;  __awmod         1    5[COMMON] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  2    0[COMMON] int 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4684 ;;      Params:         4       0       0       0       0       0       0       0
  4685 ;;      Locals:         2       0       0       0       0       0       0       0
  4686 ;;      Temps:          1       0       0       0       0       0       0       0
  4687 ;;      Totals:         7       0       0       0       0       0       0       0
  4688 ;;Total ram usage:        7 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		i1_setSegmentDisplayNumber
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function i1___awmod
  4699  05E3                     i1___awmod:	
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4703  05E3  01F6               	clrf	i1___awmod@sign
  4704  05E4  1FF3               	btfss	i1___awmod@dividend+1,7
  4705  05E5  2DED               	goto	i1l1866
  4706  05E6  09F2               	comf	i1___awmod@dividend,f
  4707  05E7  09F3               	comf	i1___awmod@dividend+1,f
  4708  05E8  0AF2               	incf	i1___awmod@dividend,f
  4709  05E9  1903               	skipnz
  4710  05EA  0AF3               	incf	i1___awmod@dividend+1,f
  4711  05EB  01F6               	clrf	i1___awmod@sign
  4712  05EC  0AF6               	incf	i1___awmod@sign,f
  4713  05ED                     i1l1866:	
  4714  05ED  1FF1               	btfss	i1___awmod@divisor+1,7
  4715  05EE  2DF4               	goto	i1l1870
  4716  05EF  09F0               	comf	i1___awmod@divisor,f
  4717  05F0  09F1               	comf	i1___awmod@divisor+1,f
  4718  05F1  0AF0               	incf	i1___awmod@divisor,f
  4719  05F2  1903               	skipnz
  4720  05F3  0AF1               	incf	i1___awmod@divisor+1,f
  4721  05F4                     i1l1870:	
  4722  05F4  0871               	movf	i1___awmod@divisor+1,w
  4723  05F5  0470               	iorwf	i1___awmod@divisor,w
  4724  05F6  1903               	skipnz
  4725  05F7  2E1B               	goto	i1l1888
  4726  05F8  01F5               	clrf	i1___awmod@counter
  4727  05F9  0AF5               	incf	i1___awmod@counter,f
  4728  05FA                     i1l1878:	
  4729  05FA  1BF1               	btfsc	i1___awmod@divisor+1,7
  4730  05FB  2E06               	goto	i1l1880
  4731  05FC  3001               	movlw	1
  4732  05FD                     u212_25:	
  4733  05FD  35F0               	lslf	i1___awmod@divisor,f
  4734  05FE  0DF1               	rlf	i1___awmod@divisor+1,f
  4735  05FF  0B89               	decfsz	9,f
  4736  0600  2DFD               	goto	u212_25
  4737  0601  3001               	movlw	1
  4738  0602  00F4               	movwf	??i1___awmod
  4739  0603  0874               	movf	??i1___awmod,w
  4740  0604  07F5               	addwf	i1___awmod@counter,f
  4741  0605  2DFA               	goto	i1l1878
  4742  0606                     i1l1880:	
  4743  0606  0871               	movf	i1___awmod@divisor+1,w
  4744  0607  0273               	subwf	i1___awmod@dividend+1,w
  4745  0608  1D03               	skipz
  4746  0609  2E0C               	goto	u214_25
  4747  060A  0870               	movf	i1___awmod@divisor,w
  4748  060B  0272               	subwf	i1___awmod@dividend,w
  4749  060C                     u214_25:	
  4750  060C  1C03               	skipc
  4751  060D  2E12               	goto	i1l1884
  4752  060E  0870               	movf	i1___awmod@divisor,w
  4753  060F  02F2               	subwf	i1___awmod@dividend,f
  4754  0610  0871               	movf	i1___awmod@divisor+1,w
  4755  0611  3BF3               	subwfb	i1___awmod@dividend+1,f
  4756  0612                     i1l1884:	
  4757  0612  3001               	movlw	1
  4758  0613                     u215_25:	
  4759  0613  36F1               	lsrf	i1___awmod@divisor+1,f
  4760  0614  0CF0               	rrf	i1___awmod@divisor,f
  4761  0615  0B89               	decfsz	9,f
  4762  0616  2E13               	goto	u215_25
  4763  0617  3001               	movlw	1
  4764  0618  02F5               	subwf	i1___awmod@counter,f
  4765  0619  1D03               	btfss	3,2
  4766  061A  2E06               	goto	i1l1880
  4767  061B                     i1l1888:	
  4768  061B  0876               	movf	i1___awmod@sign,w
  4769  061C  1903               	btfsc	3,2
  4770  061D  2E23               	goto	i1l1892
  4771  061E  09F2               	comf	i1___awmod@dividend,f
  4772  061F  09F3               	comf	i1___awmod@dividend+1,f
  4773  0620  0AF2               	incf	i1___awmod@dividend,f
  4774  0621  1903               	skipnz
  4775  0622  0AF3               	incf	i1___awmod@dividend+1,f
  4776  0623                     i1l1892:	
  4777  0623  0873               	movf	i1___awmod@dividend+1,w
  4778  0624  01F1               	clrf	?i1___awmod+1
  4779  0625  07F1               	addwf	?i1___awmod+1,f
  4780  0626  0872               	movf	i1___awmod@dividend,w
  4781  0627  01F0               	clrf	?i1___awmod
  4782  0628  07F0               	addwf	?i1___awmod,f
  4783  0629  0008               	return
  4784  062A                     __end_ofi1___awmod:	
  4785                           
  4786                           	psect	text27
  4787  04F8                     __ptext27:	
  4788 ;; *************** function i1___awdiv *****************
  4789 ;; Defined at:
  4790 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  divisor         2    0[COMMON] int 
  4793 ;;  dividend        2    2[COMMON] int 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  __awdiv         2    7[COMMON] int 
  4796 ;;  __awdiv         1    6[COMMON] unsigned char 
  4797 ;;  __awdiv         1    5[COMMON] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  2    0[COMMON] int 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4807 ;;      Params:         4       0       0       0       0       0       0       0
  4808 ;;      Locals:         4       0       0       0       0       0       0       0
  4809 ;;      Temps:          1       0       0       0       0       0       0       0
  4810 ;;      Totals:         9       0       0       0       0       0       0       0
  4811 ;;Total ram usage:        9 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		i1_setSegmentDisplayNumber
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function i1___awdiv
  4822  04F8                     i1___awdiv:	
  4823                           
  4824                           ;incstack = 0
  4825                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4826  04F8  01F6               	clrf	i1___awdiv@sign
  4827  04F9  1FF1               	btfss	i1___awdiv@divisor+1,7
  4828  04FA  2D02               	goto	i1l1822
  4829  04FB  09F0               	comf	i1___awdiv@divisor,f
  4830  04FC  09F1               	comf	i1___awdiv@divisor+1,f
  4831  04FD  0AF0               	incf	i1___awdiv@divisor,f
  4832  04FE  1903               	skipnz
  4833  04FF  0AF1               	incf	i1___awdiv@divisor+1,f
  4834  0500  01F6               	clrf	i1___awdiv@sign
  4835  0501  0AF6               	incf	i1___awdiv@sign,f
  4836  0502                     i1l1822:	
  4837  0502  1FF3               	btfss	i1___awdiv@dividend+1,7
  4838  0503  2D0D               	goto	i1l1828
  4839  0504  09F2               	comf	i1___awdiv@dividend,f
  4840  0505  09F3               	comf	i1___awdiv@dividend+1,f
  4841  0506  0AF2               	incf	i1___awdiv@dividend,f
  4842  0507  1903               	skipnz
  4843  0508  0AF3               	incf	i1___awdiv@dividend+1,f
  4844  0509  3001               	movlw	1
  4845  050A  00F4               	movwf	??i1___awdiv
  4846  050B  0874               	movf	??i1___awdiv,w
  4847  050C  06F6               	xorwf	i1___awdiv@sign,f
  4848  050D                     i1l1828:	
  4849  050D  01F7               	clrf	i1___awdiv@quotient
  4850  050E  01F8               	clrf	i1___awdiv@quotient+1
  4851  050F  0871               	movf	i1___awdiv@divisor+1,w
  4852  0510  0470               	iorwf	i1___awdiv@divisor,w
  4853  0511  1903               	skipnz
  4854  0512  2D3C               	goto	i1l1850
  4855  0513  01F5               	clrf	i1___awdiv@counter
  4856  0514  0AF5               	incf	i1___awdiv@counter,f
  4857  0515                     i1l1838:	
  4858  0515  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4859  0516  2D21               	goto	i1l1840
  4860  0517  3001               	movlw	1
  4861  0518                     u202_25:	
  4862  0518  35F0               	lslf	i1___awdiv@divisor,f
  4863  0519  0DF1               	rlf	i1___awdiv@divisor+1,f
  4864  051A  0B89               	decfsz	9,f
  4865  051B  2D18               	goto	u202_25
  4866  051C  3001               	movlw	1
  4867  051D  00F4               	movwf	??i1___awdiv
  4868  051E  0874               	movf	??i1___awdiv,w
  4869  051F  07F5               	addwf	i1___awdiv@counter,f
  4870  0520  2D15               	goto	i1l1838
  4871  0521                     i1l1840:	
  4872  0521  3001               	movlw	1
  4873  0522                     u204_25:	
  4874  0522  35F7               	lslf	i1___awdiv@quotient,f
  4875  0523  0DF8               	rlf	i1___awdiv@quotient+1,f
  4876  0524  0B89               	decfsz	9,f
  4877  0525  2D22               	goto	u204_25
  4878  0526  0871               	movf	i1___awdiv@divisor+1,w
  4879  0527  0273               	subwf	i1___awdiv@dividend+1,w
  4880  0528  1D03               	skipz
  4881  0529  2D2C               	goto	u205_25
  4882  052A  0870               	movf	i1___awdiv@divisor,w
  4883  052B  0272               	subwf	i1___awdiv@dividend,w
  4884  052C                     u205_25:	
  4885  052C  1C03               	skipc
  4886  052D  2D33               	goto	i1l1846
  4887  052E  0870               	movf	i1___awdiv@divisor,w
  4888  052F  02F2               	subwf	i1___awdiv@dividend,f
  4889  0530  0871               	movf	i1___awdiv@divisor+1,w
  4890  0531  3BF3               	subwfb	i1___awdiv@dividend+1,f
  4891  0532  1477               	bsf	i1___awdiv@quotient,0
  4892  0533                     i1l1846:	
  4893  0533  3001               	movlw	1
  4894  0534                     u206_25:	
  4895  0534  36F1               	lsrf	i1___awdiv@divisor+1,f
  4896  0535  0CF0               	rrf	i1___awdiv@divisor,f
  4897  0536  0B89               	decfsz	9,f
  4898  0537  2D34               	goto	u206_25
  4899  0538  3001               	movlw	1
  4900  0539  02F5               	subwf	i1___awdiv@counter,f
  4901  053A  1D03               	btfss	3,2
  4902  053B  2D21               	goto	i1l1840
  4903  053C                     i1l1850:	
  4904  053C  0876               	movf	i1___awdiv@sign,w
  4905  053D  1903               	btfsc	3,2
  4906  053E  2D44               	goto	i1l1854
  4907  053F  09F7               	comf	i1___awdiv@quotient,f
  4908  0540  09F8               	comf	i1___awdiv@quotient+1,f
  4909  0541  0AF7               	incf	i1___awdiv@quotient,f
  4910  0542  1903               	skipnz
  4911  0543  0AF8               	incf	i1___awdiv@quotient+1,f
  4912  0544                     i1l1854:	
  4913  0544  0878               	movf	i1___awdiv@quotient+1,w
  4914  0545  01F1               	clrf	?i1___awdiv+1
  4915  0546  07F1               	addwf	?i1___awdiv+1,f
  4916  0547  0877               	movf	i1___awdiv@quotient,w
  4917  0548  01F0               	clrf	?i1___awdiv
  4918  0549  07F0               	addwf	?i1___awdiv,f
  4919  054A  0008               	return
  4920  054B                     __end_ofi1___awdiv:	
  4921                           
  4922                           	psect	text28
  4923  0767                     __ptext28:	
  4924 ;; *************** function _TMR1_ISR *****************
  4925 ;; Defined at:
  4926 ;;		line 125 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;		None               void
  4933 ;; Registers used:
  4934 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4940 ;;      Params:         0       0       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_ISR
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           
  4954                           ;psect for function _TMR1_ISR
  4955  0767                     _TMR1_ISR:	
  4956                           
  4957                           ;MCU_16f1516_B1.c: 127: if(TMR1IE && TMR1IF)
  4958                           
  4959                           ;incstack = 0
  4960                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4961  0767  0021               	movlb	1	; select bank1
  4962  0768  1C11               	btfss	17,0	;volatile
  4963  0769  0008               	return
  4964  076A  0020               	movlb	0	; select bank0
  4965  076B  1C11               	btfss	17,0	;volatile
  4966  076C  0008               	return
  4967                           
  4968                           ;MCU_16f1516_B1.c: 128: {
  4969                           ;MCU_16f1516_B1.c: 129: TMR1H=((65536-700)/256);
  4970  076D  30FD               	movlw	253
  4971  076E  0097               	movwf	23	;volatile
  4972                           
  4973                           ;MCU_16f1516_B1.c: 130: TMR1L=((65536-700)%256);
  4974  076F  3044               	movlw	68
  4975  0770  0096               	movwf	22	;volatile
  4976                           
  4977                           ;MCU_16f1516_B1.c: 131: TMR1IF=0;
  4978  0771  1011               	bcf	17,0	;volatile
  4979                           
  4980                           ;MCU_16f1516_B1.c: 132: Timer1->Count++;
  4981  0772  0A48               	incf	_Timer1,w
  4982  0773  0086               	movwf	6
  4983  0774  0187               	clrf	7
  4984  0775  3001               	movlw	1
  4985  0776  0781               	addwf	1,f
  4986  0777  3141               	addfsr 1,1
  4987  0778  1803               	skipnc
  4988  0779  0A81               	incf	1,f
  4989                           
  4990                           ;MCU_16f1516_B1.c: 133: if(Timer1->Count == 20)
  4991  077A  0A48               	incf	_Timer1,w
  4992  077B  0086               	movwf	6
  4993  077C  0187               	clrf	7
  4994  077D  3F40               	moviw [0]fsr1
  4995  077E  3A14               	xorlw	20
  4996  077F  1D03               	skipz
  4997  0780  2F83               	goto	u278_25
  4998  0781  3F41               	moviw [1]fsr1
  4999  0782  3A00               	xorlw	0
  5000  0783                     u278_25:	
  5001  0783  1D03               	skipz
  5002  0784  0008               	return
  5003                           
  5004                           ;MCU_16f1516_B1.c: 134: {
  5005                           ;MCU_16f1516_B1.c: 135: Timer1->Count=0;
  5006  0785  0A48               	incf	_Timer1,w
  5007  0786  0086               	movwf	6
  5008  0787  0187               	clrf	7
  5009  0788  3000               	movlw	0
  5010  0789  3FC0               	movwi [0]fsr1
  5011  078A  3FC1               	movwi [1]fsr1
  5012                           
  5013                           ;MCU_16f1516_B1.c: 136: TMain->T1_Timerout=1;
  5014  078B  085F               	movf	_TMain,w
  5015  078C  0086               	movwf	6
  5016  078D  0187               	clrf	7
  5017  078E  1501               	bsf	1,2
  5018  078F  0008               	return
  5019  0790                     __end_of_TMR1_ISR:	
  5020                           
  5021                           	psect	text29
  5022  0F8E                     __ptext29:	
  5023 ;; *************** function _I2C_ISR *****************
  5024 ;; Defined at:
  5025 ;;		line 260 in file "C:\Users\Eric\Documents\GitHub\myPicCode\Source_File\MCU_16f1516_B1.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, fsr1l, fsr1h
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5039 ;;      Params:         0       0       0       0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0
  5042 ;;      Totals:         0       0       0       0       0       0       0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_ISR
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           
  5053                           ;psect for function _I2C_ISR
  5054  0F8E                     _I2C_ISR:	
  5055                           
  5056                           ;MCU_16f1516_B1.c: 262: if(SSPIE && SSPIF)
  5057                           
  5058                           ;incstack = 0
  5059                           ; Regs used in _I2C_ISR: [wregfsr1]
  5060  0F8E  0021               	movlb	1	; select bank1
  5061  0F8F  1D91               	btfss	17,3	;volatile
  5062  0F90  0008               	return
  5063  0F91  0020               	movlb	0	; select bank0
  5064  0F92  1D91               	btfss	17,3	;volatile
  5065  0F93  0008               	return
  5066                           
  5067                           ;MCU_16f1516_B1.c: 263: {
  5068                           ;MCU_16f1516_B1.c: 264: SSPIE=0;
  5069  0F94  0021               	movlb	1	; select bank1
  5070  0F95  1191               	bcf	17,3	;volatile
  5071                           
  5072                           ;MCU_16f1516_B1.c: 265: I2C->SlaveGO=1;
  5073  0F96  0020               	movlb	0	; select bank0
  5074  0F97  085C               	movf	_I2C,w
  5075  0F98  3E42               	addlw	66
  5076  0F99  0086               	movwf	6
  5077  0F9A  3001               	movlw	1	; select bank2/3
  5078  0F9B  0087               	movwf	7
  5079  0F9C  1401               	bsf	1,0
  5080  0F9D  0008               	return
  5081  0F9E                     __end_of_I2C_ISR:	
  5082  007E                     btemp	set	126	;btemp
  5083  007E                     pic14e$flags	set	126
  5084  007E                     wtemp	set	126
  5085  007E                     wtemp0	set	126
  5086  0080                     wtemp1	set	128
  5087  0082                     wtemp2	set	130
  5088  0084                     wtemp3	set	132
  5089  0086                     wtemp4	set	134
  5090  0088                     wtemp5	set	136
  5091  007F                     wtemp6	set	127
  5092  007E                     ttemp	set	126
  5093  007E                     ttemp0	set	126
  5094  0081                     ttemp1	set	129
  5095  0084                     ttemp2	set	132
  5096  0087                     ttemp3	set	135
  5097  007F                     ttemp4	set	127
  5098  007E                     ltemp	set	126
  5099  007E                     ltemp0	set	126
  5100  0082                     ltemp1	set	130
  5101  0086                     ltemp2	set	134
  5102  0080                     ltemp3	set	128


Data Sizes:
    Strings     4
    Constant    10
    Data        58
    BSS         157
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      64
    BANK1            80      0      58
    BANK2            80      0      68
    BANK3            80      0      67
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S542$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    Segment	PTR struct Segment size(1) Largest target is 26
		 -> NULL(NULL[0]), VarSegment(BANK1[26]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 

    UART	PTR struct UART size(1) Largest target is 68
		 -> NULL(NULL[0]), VarUart(BANK2[68]), 

    I2C	PTR struct I2C size(1) Largest target is 67
		 -> NULL(NULL[0]), VarI2C(BANK3[67]), 

    TMain	PTR struct TMain size(1) Largest target is 15
		 -> NULL(NULL[0]), VarTMain(BANK0[15]), 

    Timer1	PTR struct Timer1 size(1) Largest target is 3
		 -> NULL(NULL[0]), VarTimer1(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR
    _UART_ISR->i1_setSegmentDisplayNumber
    i1_setSegmentDisplayNumber->i1___awdiv

Critical Paths under _main in BANK0

    _main->_UART_Main
    _UART_Main->_UART_Transmit
    _setSegmentDisplayNumber->___awdiv
    _UART_Transmit->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _Mcu_Initial->_I2C_Set
    _Mcu_Initial->_TMR1_Set
    _Mcu_Initial->_UART_Set
    _I2C_Main->_I2C_Master_Reception

Critical Paths under _ISR in BANK0

    _UART_ISR->i1_setSegmentDisplayNumber

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3025
                           _I2C_Main
                              _MainT
                      _MainT_Initial
                        _Mcu_Initial
             _SegmentDisplay_Initial
                _SegmentDisplay_Main
                          _UART_Main
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            2     2      0    2799
                                             38 BANK0      2     2      0
                       _UART_Receive
                      _UART_Transmit
            _setSegmentDisplayNumber
 ---------------------------------------------------------------------------------
 (2) _setSegmentDisplayNumber                              7     5      2    1647
                                             14 BANK0      7     5      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     614
                                              5 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     618
                                              5 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        3     3      0    1062
                                             35 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              16    12      4     994
                                             19 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      22
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                             13 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     268
                                              5 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         4     4      0      90
                                              5 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SegmentDisplay_Main                                  2     2      0       0
                                              5 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SegmentDisplay_Initial                               1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initial                                          0     0      0       0
                            _I2C_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Set                                              1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initial                                        1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Main                                             4     4      0     226
                                              8 BANK0      4     4      0
               _I2C_Master_Reception
            _I2C_Master_Transmission
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Transmission                              2     2      0      68
                                              5 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Reception                                 3     3      0      68
                                              5 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0    1269
                                              4 BANK0      1     1      0
                            _I2C_ISR
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (6) _UART_ISR                                             3     3      0    1269
                                             12 COMMON     2     2      0
          i1_setSegmentDisplayNumber
 ---------------------------------------------------------------------------------
 (7) i1_setSegmentDisplayNumber                            7     5      2    1269
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (8) i1___awmod                                            7     3      4     452
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            9     5      4     456
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Main
     _I2C_Master_Reception
     _I2C_Master_Transmission
   _MainT
   _MainT_Initial
   _Mcu_Initial
     _I2C_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
   _SegmentDisplay_Initial
   _SegmentDisplay_Main
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _setSegmentDisplayNumber
       ___awdiv
       ___awmod

 _ISR (ROOT)
   _I2C_ISR
   _TMR1_ISR
   _UART_ISR
     i1_setSegmentDisplayNumber
       i1___awdiv
       i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     10F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3A       8       72.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      44      10       85.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      43      12       83.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     10F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Sep 24 07:34:13 2014

                   ??_MainT_Initial 0025                                  _BF 10A0  
                      ___awdiv@sign 002B           ??_setSegmentDisplayNumber 0030  
                               l202 0664                                 l211 066E  
                               l205 0668                                 l222 0687  
                               l231 0699                                 l240 054F  
                               l216 0676                                 l208 066C  
                               l225 0692                                 l251 055D  
                               l243 0553                                 l219 0685  
                               _I2C 005C                                 l260 0571  
                               l228 0697                                 l237 054B  
                               l229 0696                                 l254 0560  
                               l246 0555                                 l263 0576  
                               l343 07F7                                 l272 0589  
                               l281 0590                                 l273 0588  
                               l257 0563                                 l290 0598  
                               l266 0581                                 l194 0435  
                               l275 058B                                 l187 0412  
                               l284 0592                                 l269 0585  
                               l517 035E                                 l278 058D  
                               l287 0596                                 l288 0595  
                               _CKP 10AC                                 _GIE 005F  
                               _RA1 0061                                 _RA2 0062  
                               _RC0 0070                                 _RA4 0064  
                               _RA5 0065                                 _RA6 0066  
                               _RA7 0067                                 _PEN 10B2  
                               _ISR 0004                                 _SEN 10B0  
                               _RX9 0CEE                                 _TX9 0CF6  
                   __end_of_I2C_ISR 0F9E                     __end_of_I2C_Set 0F7F  
                      ___awmod@sign 002B                                 wreg 0009  
     __size_of_I2C_Master_Reception 0050                                ?_ISR 0070  
                              l2010 00B5                                l2030 015E  
                              l2022 013C                                l2034 016D  
                              l2026 014D                                l2052 0731  
                              l2046 0715                                l2216 06F6  
                              l2242 0469                                l2252 0487  
                              l1710 02F8                                l2350 079A  
                              l2192 040B                                l2280 039C  
                              l2272 0388                                l2186 03F1  
                              l2290 03CC                                l1722 031F  
                              l1706 02F2                                l1730 02A7  
                              l1810 05DC                                l1802 05CB  
                              l2276 0392                                l2284 03A4  
                              l1740 04AF                                l2198 0428  
                              l1654 06C3                                l1646 06A5  
                              l1670 073F                                l1718 0317  
                              l1806 05D4                                l1648 06B1  
                              l1672 074B                                l1680 0760  
                              l1728 0324                                l1658 06CC  
                              l1690 02C3                                l1746 04BA  
                              l1676 0757                                l1772 04F1  
                              l1764 04E0                                l1756 04C2  
                              l1758 04CE                                l1696 02DC  
                              l1768 04E9                                l1784 05A6  
                     ??_Mcu_Initial 0026                                l1796 05B3  
                              l1788 05AD                                l1798 05BF  
                              l1994 008E                                STR_1 100A  
                              _LATA 010C                                _LATB 010D  
                              _LATC 010E                                u1605 06A8  
                              u1625 06B2                                u1705 0758  
                              u1635 06BC                                u1645 06C4  
                              u2525 0063                                u2535 0080  
                              u1675 0742                                u1755 030D  
                              u1835 04C5                                u2555 009D  
                              u1695 0751                                u1855 04CF  
                              u1935 05B6                                u1865 04D9  
                              u1875 04E1                                u1955 05C5  
                              _PEIE 005E                                u1965 05CC  
                              u2945 045C                                u2955 047C  
                              _RCIE 048D                                _RCEN 10B3  
                              _RCIF 008D                                u2965 049A  
                              _UART 0049                                _TXIE 048C  
                              _TXIF 008C                                _R_nW 10A2  
                              _main 0790                    __end_of_I2C_Main 0445  
                              fsr0h 0005                                fsr1h 0007  
                              fsr0l 0004                                indf0 0000  
                              indf1 0001                                fsr1l 0006  
                              btemp 007E                                ltemp 007E  
                              start 0019                                ttemp 007E  
                              wtemp 007E                               ??_ISR 0024  
                             ?_main 0070                      i1___awdiv@sign 0076  
                             _ACKEN 10B4                     __end_of___awdiv 04F8  
                             _BRG16 0CFB                       __CFG_WDTE$OFF 0000  
                   __end_of___awmod 05E3                     ___awdiv@divisor 0025  
                             _T1CON 0018                     __end_of___lwdiv 06D3  
                             i1l318 07BD                     __end_of___lwmod 0767  
                             _RCIDL 0CFE                     ___awdiv@counter 002A  
                             _RCREG 0199                               _RCSTA 019D  
                             _TMR1H 0017                               _TMR1L 0016  
                             _SPBRG 019B                               _PORTA 000C  
                             _PORTB 000D                               _PORTC 000E  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISC 008E                               _SSPIE 048B  
                             _SSPIF 008B                               _SSPOV 10AE  
                             _TXREG 019A                               _TXSTA 019E  
                             _TMain 005F                               _MainT 0445  
                     __CFG_WRT$BOOT 0000     i1setSegmentDisplayNumber@number 0079  
                  __end_of_UART_ISR 07DB                  __size_of_UART_Main 0034  
                  __end_of_TMR1_ISR 0790                    __end_of_UART_Set 1000  
                    i1___awmod@sign 0076                    __end_of_TMR1_Set 0FAE  
                   __end_of_dpowers 100A                               _putch 07F5  
                             ltemp0 007E                               ltemp1 0082  
                             ltemp2 0086                               ltemp3 0080  
   __end_of_setSegmentDisplayNumber 0173                               ttemp0 007E  
                             ttemp1 0081                               ttemp2 0084  
                             ttemp3 0087                               ttemp4 007F  
                             status 0003                               wtemp0 007E  
                             wtemp1 0080                               wtemp2 0082  
                             wtemp3 0084                               wtemp4 0086  
                             wtemp5 0088                               wtemp6 007F  
                __size_ofi1___awdiv 0053                  __size_ofi1___awmod 0047  
               __end_of_Mcu_Initial 0FD1                     __initialization 001B  
                      __end_of_main 07B7  __size_ofi1_setSegmentDisplayNumber 012F  
  __size_of_I2C_Master_Transmission 0038                           ??_I2C_ISR 0070  
                         ??_I2C_Set 0025                              ??_main 0048  
             I2C_Master_Reception@i 0027                              ?_MainT 0070  
                         I2C_Main@i 002B                    ___awdiv@dividend 0027  
                            _ANSELA 018C                              ?_putch 0070  
                            _ANSELB 018D                              _ANSELC 018E  
                            i1l2112 028D                              i1l2104 026A  
                            i1l2116 029C                              i1l2108 027C  
                            i1l2092 01E6                              i1l2076 01BF  
                            i1l1822 0502                              i1l1840 0521  
                            i1l1850 053C                              i1l1828 050D  
                            u202_25 0518                              i1l1854 0544  
                            i1l1846 0533                              i1l1838 0515  
                            i1l1870 05F4                              i1l1880 0606  
                            i1l1866 05ED                              i1l1892 0623  
                            i1l1884 0612                              i1l1878 05FA  
                            i1l1888 061B                              u204_25 0522  
                            u212_25 05FD                              u205_25 052C  
                            u206_25 0534                              u214_25 060C  
                            u215_25 0613                              u270_25 01CE  
                            u267_25 0194                              u268_25 01B1  
                            u278_25 0783                              _OSCCON 0099  
                        _VarSegment 00C0                              _TMR1IE 0488  
                            _TMR1IF 0088                              _SPBRGH 019C  
                            _IO_Set 0FD1                              _SSPADD 0212  
                            _TRISC6 0476                              _TRISC7 0477  
                            _SSPBUF 0211                          _VarProduct 00A0  
                            _VarI2C 01A0                              _Timer1 0048  
                 __end_of_UART_Main 0707                           ??___awdiv 0029  
                         ??___awmod 0029                           ??___lwdiv 0029  
                         ??___lwmod 0031                    ___awdiv@quotient 002C  
                   ___awmod@divisor 0025                     ___awmod@counter 002A  
                            _printf 02A2                   __end_ofi1___awdiv 054B  
                 __end_ofi1___awmod 062A                           ?_I2C_Main 0070  
                       _Mcu_Initial 0FBE             __end_of__initialization 003E  
             __end_of_UART_Transmit 07F5                       __end_of_MainT 04A4  
                    __pcstackCOMMON 0070                        __pidataBANK1 062A  
                         ?_UART_ISR 0070                           ?_TMR1_ISR 0070  
                         ?_UART_Set 0070                           ?_TMR1_Set 0070  
                     __end_of_putch 07FD                          ??_I2C_Main 0028  
                           ??_MainT 0025                             ??_putch 0025  
                        __pbssBANK0 0048                          __pbssBANK2 0120  
                        __pbssBANK3 01A0                             ?_IO_Set 0070  
      __end_of_I2C_Master_Reception 059B                          __pmaintext 0790  
                        ??_UART_ISR 007C             _I2C_Master_Transmission 0664  
                        ??_TMR1_ISR 0070                          ??_UART_Set 0025  
                        ??_TMR1_Set 0025                          __pintentry 0004  
                           _I2C_ISR 0F8E                             _ACKSTAT 10B6  
      __size_of_SegmentDisplay_Main 0073                             _I2C_Set 0F71  
             __end_of_MainT_Initial 0F8E                             ?_printf 0033  
                i1___awdiv@dividend 0072                             _SSPCON1 0215  
                           _SSPCON2 0216                             _SSPSTAT 0214  
                     ?_UART_Receive 0070                     __size_of_IO_Set 0016  
                           _Segment 005D                  i1___awdiv@quotient 0077  
                           _VarUart 0120                             _Product 005E  
          ?_setSegmentDisplayNumber 002E                             ___awdiv 04A4  
                           ___awmod 059B                             ___lwdiv 069C  
                           ___lwmod 0738            ??_SegmentDisplay_Initial 0025  
                           __ptext1 06D3                             __ptext2 0042  
                           __ptext3 059B                             __ptext4 04A4  
                           __ptext5 07DB                             __ptext6 02A2  
                           __ptext7 07F5                             __ptext8 0738  
                           __ptext9 069C                     __size_of_printf 00BD  
                      __size_of_ISR 0015                             _dpowers 1000  
                  ___awmod@dividend 0027                             clrloop0 0F6C  
              end_of_initialization 003E                      ??_UART_Receive 0025  
                           init_ram 0F65                             initloop 0F66  
                    UART_Transmit@i 0045           ??_I2C_Master_Transmission 0025  
                           printf@c 0042                             printf@f 0033  
                      __pstringtext 1000                           _UART_Main 06D3  
          I2C_Master_Transmission@i 0026                    __CFG_FOSC$INTOSC 0000  
                 __size_of_I2C_Main 0073                           i1___awdiv 04F8  
                         i1___awmod 05E3                _I2C_Master_Reception 054B  
                      ?_Mcu_Initial 0070                      __end_of_IO_Set 0FE7  
     setSegmentDisplayNumber@number 002E                          ?_UART_Main 0070  
                 __size_of_UART_ISR 0024                   __size_of_TMR1_ISR 0029  
                 __size_of_UART_Set 0019     __size_of_SegmentDisplay_Initial 0010  
                 __size_of_TMR1_Set 0010          ?i1_setSegmentDisplayNumber 0079  
                    __end_of_printf 035F                 start_initialization 001B  
                       __end_of_ISR 0019               ?_I2C_Master_Reception 0070  
                        ?i1___awdiv 0070                          ?i1___awmod 0070  
               _SegmentDisplay_Main 035F                            ??_IO_Set 0025  
                         _VarTimer1 0059                         __pdataBANK1 00A0  
                i1___awmod@dividend 0072                            ?_I2C_ISR 0070  
              ?_SegmentDisplay_Main 0070                            ?_I2C_Set 0070  
                          ??_printf 0037                __end_of_UART_Receive 0738  
 __end_ofi1_setSegmentDisplayNumber 02A2                           ___latbits 0002  
            __size_of_UART_Transmit 001A                       __pcstackBANK0 0020  
               __end_of__stringdata 100E              _SegmentDisplay_Initial 0FAE  
                         __pnvBANK0 005E                    ___lwdiv@dividend 0027  
                          ?___awdiv 0025                            ?___awmod 0025  
                          ?___lwdiv 0025               ??_SegmentDisplay_Main 0025  
                          ?___lwmod 002D                   i1___awdiv@divisor 0070  
                       ??_UART_Main 0046                   i1___awdiv@counter 0075  
                     UART_Receive@i 0028                            _I2C_Main 03D2  
            ??_I2C_Master_Reception 0025                      __size_of_MainT 005F  
  __size_of_setSegmentDisplayNumber 0131                         ??i1___awdiv 0074  
                       ??i1___awmod 0074                    ___lwdiv@quotient 002A  
          setSegmentDisplayNumber@i 0034                      __size_of_putch 0008  
            __size_of_MainT_Initial 000F                __size_of_Mcu_Initial 0013  
                         clear_ram0 0F6B                       _UART_Transmit 07DB  
                          _UART_ISR 07B7                            _TMR1_ISR 0767  
                          _UART_Set 0FE7                            _TMR1_Set 0F9E  
                  __size_of_I2C_ISR 0010                    __size_of_I2C_Set 000E  
                       __stringdata 100A          i1setSegmentDisplayNumber@i 007B  
                        printf@_val 003E                          printf@flag 003C  
                        printf@prec 003D                            _VarTMain 004A  
                    ?_UART_Transmit 0070               __size_of_UART_Receive 0031  
                 i1___awmod@divisor 0070                   i1___awmod@counter 0075  
                  __size_of___awdiv 0054                    __size_of___awmod 0048  
                  __size_of___lwdiv 0037                    __size_of___lwmod 002F  
                     _MainT_Initial 0F7F         ??i1_setSegmentDisplayNumber 0020  
                   ___lwdiv@divisor 0025                     ___lwdiv@counter 002C  
                          __ptext10 0707                            __ptext11 035F  
                          __ptext20 03D2                            __ptext12 0FAE  
                          __ptext21 0664                            __ptext13 0FBE  
                          __ptext22 054B                            __ptext14 0FE7  
                          __ptext15 0F9E                            __ptext24 07B7  
                          __ptext16 0FD1                            __ptext25 0173  
                          __ptext17 0F71                            __ptext26 05E3  
                          __ptext18 0F7F                            __ptext27 04F8  
                          __ptext19 0445                            __ptext28 0767  
                          __ptext29 0F8E            ?_I2C_Master_Transmission 0070  
                     __size_of_main 0027                        _UART_Receive 0707  
                    ?_MainT_Initial 0070                           putch@byte 0025  
           _setSegmentDisplayNumber 0042             ?_SegmentDisplay_Initial 0070  
                       pic14e$flags 007E                            intlevel1 0000  
                  ___lwmod@dividend 002F                     ??_UART_Transmit 0043  
         i1_setSegmentDisplayNumber 0173                            printf@ap 003B  
                   ___lwmod@divisor 002D                     ___lwmod@counter 0032  
    __end_of_SegmentDisplay_Initial 0FBE     __end_of_I2C_Master_Transmission 069C  
       __end_of_SegmentDisplay_Main 03D2  
