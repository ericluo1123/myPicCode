

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Aug 29 22:33:09 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1516
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 7 "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 7 "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    51  8007  FFE4               	dw 0xFFFC & 0xFFE7 ;#
    52                           # 8 "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 8 "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
    55  8008  FFFE               	dw 0xFFFF & 0xFFFE ;#
    56                           	FNCALL	_main,_MainT_Initial
    57                           	FNCALL	_main,_Mcu_Initial
    58                           	FNCALL	_main,_SegmentDisplay_Initial
    59                           	FNCALL	_main,_MainT
    60                           	FNCALL	_main,_I2C_Main
    61                           	FNCALL	_main,_UART_Main
    62                           	FNCALL	_main,_SegmentDisplay_Main
    63                           	FNCALL	_UART_Main,_UART_Receive
    64                           	FNCALL	_UART_Main,_UART_Transmit
    65                           	FNCALL	_UART_Transmit,_printf
    66                           	FNCALL	_MainT,_setSegmentDisplayNumber
    67                           	FNCALL	_printf,_putch
    68                           	FNCALL	_printf,___lwdiv
    69                           	FNCALL	_setSegmentDisplayNumber,___awdiv
    70                           	FNCALL	_setSegmentDisplayNumber,___awmod
    71                           	FNCALL	_I2C_Main,_I2C_Master_Reception
    72                           	FNCALL	_I2C_Main,_I2C_Master_Transmission
    73                           	FNCALL	_Mcu_Initial,_IO_Set
    74                           	FNCALL	_Mcu_Initial,_TMR1_Set
    75                           	FNCALL	_Mcu_Initial,_I2C_Set
    76                           	FNCALL	_Mcu_Initial,_UART_Set
    77                           	FNROOT	_main
    78                           	FNCALL	_ISR,_TMR1_ISR
    79                           	FNCALL	_ISR,_UART_ISR
    80                           	FNCALL	_ISR,_I2C_ISR
    81                           	FNCALL	intlevel1,_ISR
    82                           	global	intlevel1
    83                           	FNROOT	intlevel1
    84                           	global	_VarSegment
    85                           	global	_VarProduct
    86                           psect	idataBANK0,class=CODE,space=0,delta=2
    87                           global __pidataBANK0
    88  07AE                     __pidataBANK0:
    89                           	file	"I:\Program\PIC\Header_File\SegmentDisplay_A2.h"
    90                           	line	69
    91                           
    92                           ;initializer for _VarSegment
    93  07AE  34C0               	retlw	0C0h
    94  07AF  34F9               	retlw	0F9h
    95  07B0  34A4               	retlw	0A4h
    96  07B1  34B0               	retlw	0B0h
    97  07B2  3499               	retlw	099h
    98  07B3  3492               	retlw	092h
    99  07B4  3482               	retlw	082h
   100  07B5  34D8               	retlw	0D8h
   101  07B6  3480               	retlw	080h
   102  07B7  3490               	retlw	090h
   103  07B8  3488               	retlw	088h
   104  07B9  3483               	retlw	083h
   105  07BA  34A7               	retlw	0A7h
   106  07BB  34A1               	retlw	0A1h
   107  07BC  3486               	retlw	086h
   108  07BD  348E               	retlw	08Eh
   109  07BE  34BF               	retlw	0BFh
   110  07BF  3400               	retlw	0
   111  07C0  3400               	retlw	0
   112  07C1  3400               	retlw	0
   113  07C2  3400               	retlw	0
   114  07C3  3400               	retlw	0
   115  07C4  3400               	retlw	0
   116  07C5  3400               	retlw	0
   117  07C6  3400               	retlw	0
   118  07C7  3400               	retlw	0
   119                           psect	idataBANK1,class=CODE,space=0,delta=2
   120                           global __pidataBANK1
   121  078E                     __pidataBANK1:
   122                           	file	"I:\Program\PIC\0.myFile\myDevelopment-AH\Release\../Release/myDevelopment-A.h"
   123                           	line	245
   124                           
   125                           ;initializer for _VarProduct
   126  078E  3463               	retlw	063h
   127  078F  3402               	retlw	02h
   128  0790  3400               	retlw	0
   129  0791  3400               	retlw	0
   130  0792  3400               	retlw	0
   131  0793  3400               	retlw	0
   132  0794  3400               	retlw	0
   133  0795  3400               	retlw	0
   134  0796  3400               	retlw	0
   135  0797  3400               	retlw	0
   136  0798  3400               	retlw	0
   137  0799  3400               	retlw	0
   138  079A  34FF               	retlw	0FFh
   139  079B  34FF               	retlw	0FFh
   140  079C  34FF               	retlw	0FFh
   141  079D  3400               	retlw	0
   142  079E  3400               	retlw	0
   143  079F  3400               	retlw	0
   144  07A0  3400               	retlw	0
   145  07A1  3400               	retlw	0
   146  07A2  3400               	retlw	0
   147  07A3  3400               	retlw	0
   148  07A4  3400               	retlw	0
   149  07A5  3400               	retlw	0
   150  07A6  3400               	retlw	0
   151  07A7  3400               	retlw	0
   152  07A8  3400               	retlw	0
   153  07A9  3400               	retlw	0
   154  07AA  3400               	retlw	0
   155  07AB  3400               	retlw	0
   156  07AC  3400               	retlw	0
   157  07AD  3400               	retlw	0
   158                           	global	_hexpowers
   159                           psect	strings,class=STRING,delta=2
   160                           global __pstrings
   161  0700                     __pstrings:
   162                           	global    __stringtab
   163  0700                     __stringtab:
   164  0700  3400               	retlw	0
   165                           psect	strings
   166                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   167                           	line	358
   168  0701                     _hexpowers:
   169  0701  3401               	retlw	01h
   170  0702  3400               	retlw	0
   171                           
   172  0703  3410               	retlw	010h
   173  0704  3400               	retlw	0
   174                           
   175  0705  3400               	retlw	0
   176  0706  3401               	retlw	01h
   177                           
   178  0707  3400               	retlw	0
   179  0708  3410               	retlw	010h
   180                           
   181                           	global	_hexpowers
   182                           	global	_I2C
   183                           	global	_Segment
   184                           	global	_Timer1
   185                           	global	_UART
   186                           	global	_VarTMain
   187                           	global	_VarTimer1
   188                           	global	_VarUart
   189                           	global	_VarI2C
   190                           	global	_TMain
   191                           psect	nvBANK0,class=BANK0,space=1
   192                           global __pnvBANK0
   193  0062                     __pnvBANK0:
   194  0062                     _TMain:
   195  0062                            ds      1
   196                           
   197                           	global	_Product
   198                           psect	nvCOMMON,class=COMMON,space=1
   199                           global __pnvCOMMON
   200  007A                     __pnvCOMMON:
   201  007A                     _Product:
   202  007A                            ds      1
   203                           
   204                           	global	_PORTA
   205  000C                     _PORTA	set	12
   206                           	global	_PORTB
   207  000D                     _PORTB	set	13
   208                           	global	_PORTC
   209  000E                     _PORTC	set	14
   210                           	global	_T1CON
   211  0018                     _T1CON	set	24
   212                           	global	_TMR1H
   213  0017                     _TMR1H	set	23
   214                           	global	_TMR1L
   215  0016                     _TMR1L	set	22
   216                           	global	_GIE
   217  005F                     _GIE	set	95
   218                           	global	_PEIE
   219  005E                     _PEIE	set	94
   220                           	global	_RA1
   221  0061                     _RA1	set	97
   222                           	global	_RA2
   223  0062                     _RA2	set	98
   224                           	global	_RA4
   225  0064                     _RA4	set	100
   226                           	global	_RA5
   227  0065                     _RA5	set	101
   228                           	global	_RA6
   229  0066                     _RA6	set	102
   230                           	global	_RA7
   231  0067                     _RA7	set	103
   232                           	global	_RC0
   233  0070                     _RC0	set	112
   234                           	global	_RCIF
   235  008D                     _RCIF	set	141
   236                           	global	_SSPIF
   237  008B                     _SSPIF	set	139
   238                           	global	_TMR1IF
   239  0088                     _TMR1IF	set	136
   240                           	global	_TXIF
   241  008C                     _TXIF	set	140
   242                           	global	_OSCCON
   243  0099                     _OSCCON	set	153
   244                           	global	_TRISA
   245  008C                     _TRISA	set	140
   246                           	global	_TRISB
   247  008D                     _TRISB	set	141
   248                           	global	_TRISC
   249  008E                     _TRISC	set	142
   250                           	global	_RCIE
   251  048D                     _RCIE	set	1165
   252                           	global	_SSPIE
   253  048B                     _SSPIE	set	1163
   254                           	global	_TMR1IE
   255  0488                     _TMR1IE	set	1160
   256                           	global	_TRISC6
   257  0476                     _TRISC6	set	1142
   258                           	global	_TRISC7
   259  0477                     _TRISC7	set	1143
   260                           	global	_TXIE
   261  048C                     _TXIE	set	1164
   262                           	global	_LATA
   263  010C                     _LATA	set	268
   264                           	global	_LATB
   265  010D                     _LATB	set	269
   266                           	global	_LATC
   267  010E                     _LATC	set	270
   268                           	global	_ANSELA
   269  018C                     _ANSELA	set	396
   270                           	global	_ANSELB
   271  018D                     _ANSELB	set	397
   272                           	global	_ANSELC
   273  018E                     _ANSELC	set	398
   274                           	global	_RCREG
   275  0199                     _RCREG	set	409
   276                           	global	_RCSTA
   277  019D                     _RCSTA	set	413
   278                           	global	_SPBRG
   279  019B                     _SPBRG	set	411
   280                           	global	_SPBRGH
   281  019C                     _SPBRGH	set	412
   282                           	global	_TXREG
   283  019A                     _TXREG	set	410
   284                           	global	_TXSTA
   285  019E                     _TXSTA	set	414
   286                           	global	_BRG16
   287  0CFB                     _BRG16	set	3323
   288                           	global	_RCIDL
   289  0CFE                     _RCIDL	set	3326
   290                           	global	_RX9
   291  0CEE                     _RX9	set	3310
   292                           	global	_TRMT
   293  0CF1                     _TRMT	set	3313
   294                           	global	_TX9
   295  0CF6                     _TX9	set	3318
   296                           	global	_SSPADD
   297  0212                     _SSPADD	set	530
   298                           	global	_SSPBUF
   299  0211                     _SSPBUF	set	529
   300                           	global	_SSPCON1
   301  0215                     _SSPCON1	set	533
   302                           	global	_SSPCON2
   303  0216                     _SSPCON2	set	534
   304                           	global	_SSPSTAT
   305  0214                     _SSPSTAT	set	532
   306                           	global	_ACKEN
   307  10B4                     _ACKEN	set	4276
   308                           	global	_ACKSTAT
   309  10B6                     _ACKSTAT	set	4278
   310                           	global	_BF
   311  10A0                     _BF	set	4256
   312                           	global	_CKP
   313  10AC                     _CKP	set	4268
   314                           	global	_PEN
   315  10B2                     _PEN	set	4274
   316                           	global	_RCEN
   317  10B3                     _RCEN	set	4275
   318                           	global	_R_nW
   319  10A2                     _R_nW	set	4258
   320                           	global	_SEN
   321  10B0                     _SEN	set	4272
   322                           	global	_SSPOV
   323  10AE                     _SSPOV	set	4270
   324                           psect	strings
   325                           	
   326  0709                     STR_5:	
   327  0709  3430               	retlw	48	;'0'
   328  070A  3431               	retlw	49	;'1'
   329  070B  3432               	retlw	50	;'2'
   330  070C  3433               	retlw	51	;'3'
   331  070D  3434               	retlw	52	;'4'
   332  070E  3435               	retlw	53	;'5'
   333  070F  3436               	retlw	54	;'6'
   334  0710  3437               	retlw	55	;'7'
   335  0711  3438               	retlw	56	;'8'
   336  0712  3439               	retlw	57	;'9'
   337  0713  3461               	retlw	97	;'a'
   338  0714  3462               	retlw	98	;'b'
   339  0715  3463               	retlw	99	;'c'
   340  0716  3464               	retlw	100	;'d'
   341  0717  3465               	retlw	101	;'e'
   342  0718  3466               	retlw	102	;'f'
   343  0719  3400               	retlw	0
   344                           psect	strings
   345                           	
   346  071A                     STR_1:	
   347  071A  340D               	retlw	13
   348  071B  3474               	retlw	116	;'t'
   349  071C  3468               	retlw	104	;'h'
   350  071D  3469               	retlw	105	;'i'
   351  071E  3473               	retlw	115	;'s'
   352  071F  3420               	retlw	32	;' '
   353  0720  346E               	retlw	110	;'n'
   354  0721  3475               	retlw	117	;'u'
   355  0722  346D               	retlw	109	;'m'
   356  0723  3462               	retlw	98	;'b'
   357  0724  3465               	retlw	101	;'e'
   358  0725  3472               	retlw	114	;'r'
   359  0726  340A               	retlw	10
   360  0727  3400               	retlw	0
   361                           psect	strings
   362                           	
   363  0728                     STR_3:	
   364  0728  3430               	retlw	48	;'0'
   365  0729  3478               	retlw	120	;'x'
   366  072A  3425               	retlw	37	;'%'
   367  072B  3478               	retlw	120	;'x'
   368  072C  3409               	retlw	9
   369  072D  3400               	retlw	0
   370                           psect	strings
   371                           	
   372  072E                     STR_4:	
   373  072E  340A               	retlw	10
   374  072F  340A               	retlw	10
   375  0730  3400               	retlw	0
   376                           psect	strings
   377                           	
   378  0731                     STR_2:	
   379  0731  340D               	retlw	13
   380  0732  3400               	retlw	0
   381                           psect	strings
   382                           	file	"myDevelopment-AH.as"
   383                           	line	#
   384                           psect cinit,class=CODE,delta=2
   385                           global start_initialization
   386  0687                     start_initialization:
   387                           
   388                           psect	bssCOMMON,class=COMMON,space=1
   389                           global __pbssCOMMON
   390  0078                     __pbssCOMMON:
   391  0078                     _Timer1:
   392  0078                            ds      1
   393                           
   394  0079                     _UART:
   395  0079                            ds      1
   396                           
   397                           psect	bssBANK0,class=BANK0,space=1
   398                           global __pbssBANK0
   399  003A                     __pbssBANK0:
   400  003A                     _I2C:
   401  003A                            ds      1
   402                           
   403  003B                     _Segment:
   404  003B                            ds      1
   405                           
   406  003C                     _VarTMain:
   407  003C                            ds      15
   408                           
   409  004B                     _VarTimer1:
   410  004B                            ds      3
   411                           
   412                           psect	dataBANK0,class=BANK0,space=1
   413                           global __pdataBANK0
   414  0020                     __pdataBANK0:
   415                           	file	"I:\Program\PIC\Header_File\SegmentDisplay_A2.h"
   416                           	line	69
   417  0020                     _VarSegment:
   418  0020                            ds      26
   419                           
   420                           psect	dataBANK1,class=BANK1,space=1
   421                           global __pdataBANK1
   422  00A0                     __pdataBANK1:
   423                           	file	"I:\Program\PIC\0.myFile\myDevelopment-AH\Release\../Release/myDevelopment-A.h"
   424                           	line	245
   425  00A0                     _VarProduct:
   426  00A0                            ds      32
   427                           
   428                           psect	bssBANK2,class=BANK2,space=1
   429                           global __pbssBANK2
   430  0120                     __pbssBANK2:
   431  0120                     _VarUart:
   432  0120                            ds      68
   433                           
   434                           psect	bssBANK3,class=BANK3,space=1
   435                           global __pbssBANK3
   436  01A0                     __pbssBANK3:
   437  01A0                     _VarI2C:
   438  01A0                            ds      67
   439                           
   440                           psect clrtext,class=CODE,delta=2
   441                           global clear_ram
   442                           ;	Called with FSR0 containing the base address, and
   443                           ;	WREG with the size to clear
   444  07F6                     clear_ram:
   445  07F6  0064               	clrwdt			;clear the watchdog before getting into this loop
   446  07F7                     clrloop:
   447  07F7  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   448  07F8  3101               	addfsr	0,1
   449  07F9  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   450  07FA  2FF7               	goto clrloop	;have we reached the end yet?
   451  07FB  3400               	retlw	0		;all done for this memory range, return
   452                           ; Clear objects allocated to COMMON
   453                           psect cinit,class=CODE,delta=2
   454                           	global __pbssCOMMON
   455  0687  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   456  0688  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   457                           ; Clear objects allocated to BANK0
   458                           psect cinit,class=CODE,delta=2
   459                           	global __pbssBANK0
   460  0689  303A               	movlw	low(__pbssBANK0)
   461  068A  0084               	movwf	fsr0l
   462  068B  3000               	movlw	high(__pbssBANK0)
   463  068C  0085               	movwf	fsr0h
   464  068D  3014               	movlw	014h
   465  068E  3187  27F6  3186   	fcall	clear_ram
   466                           ; Clear objects allocated to BANK2
   467                           psect cinit,class=CODE,delta=2
   468                           	global __pbssBANK2
   469  0691  3020               	movlw	low(__pbssBANK2)
   470  0692  0084               	movwf	fsr0l
   471  0693  3001               	movlw	high(__pbssBANK2)
   472  0694  0085               	movwf	fsr0h
   473  0695  3044               	movlw	044h
   474  0696  3187  27F6  3186   	fcall	clear_ram
   475                           ; Clear objects allocated to BANK3
   476                           psect cinit,class=CODE,delta=2
   477                           	global __pbssBANK3
   478  0699  30A0               	movlw	low(__pbssBANK3)
   479  069A  0084               	movwf	fsr0l
   480  069B  3001               	movlw	high(__pbssBANK3)
   481  069C  0085               	movwf	fsr0h
   482  069D  3043               	movlw	043h
   483  069E  3187  27F6  3186   	fcall	clear_ram
   484                           psect inittext,class=CODE,delta=2
   485                           global init_ram,btemp
   486  0F97                     init_ram:
   487  0F97  00FE               	movwf btemp,f
   488  0F98                     initloop:
   489  0F98  0012               	moviw fsr0++
   490  0F99  001E               	movwi fsr1++
   491  0F9A  0BFE               	decfsz btemp
   492  0F9B  2F98               	goto initloop
   493  0F9C  3400               	retlw 0
   494                           ; Initialize objects allocated to BANK0
   495                           	global __pidataBANK0,__pdataBANK0
   496                           psect cinit,class=CODE,delta=2
   497  06A1  30AE               	movlw low(__pidataBANK0)
   498  06A2  0084               	movwf fsr0l
   499  06A3  3087               	movlw high(__pidataBANK0)|80h
   500  06A4  0085               	movwf fsr0h
   501  06A5  3020               	movlw low(__pdataBANK0)
   502  06A6  0086               	movwf fsr1l
   503  06A7  3000               	movlw high(__pdataBANK0)
   504  06A8  0087               	movwf fsr1h
   505  06A9  301A               	movlw 01Ah
   506  06AA  318F  2797  3186   	fcall init_ram
   507                           ; Initialize objects allocated to BANK1
   508                           	global __pidataBANK1,__pdataBANK1
   509                           psect cinit,class=CODE,delta=2
   510  06AD  308E               	movlw low(__pidataBANK1)
   511  06AE  0084               	movwf fsr0l
   512  06AF  3087               	movlw high(__pidataBANK1)|80h
   513  06B0  0085               	movwf fsr0h
   514  06B1  30A0               	movlw low(__pdataBANK1)
   515  06B2  0086               	movwf fsr1l
   516  06B3  3000               	movlw high(__pdataBANK1)
   517  06B4  0087               	movwf fsr1h
   518  06B5  3020               	movlw 020h
   519  06B6  318F  2797  3186   	fcall init_ram
   520                           psect cinit,class=CODE,delta=2
   521                           global end_of_initialization
   522                           
   523                           ;End of C runtime variable initialization code
   524                           
   525  06B9                     end_of_initialization:
   526  06B9  0020               movlb 0
   527  06BA  3187  2F33         ljmp _main	;jump to C main() function
   528                           psect	cstackCOMMON,class=COMMON,space=1
   529                           global __pcstackCOMMON
   530  0070                     __pcstackCOMMON:
   531                           	global	?_MainT_Initial
   532  0070                     ?_MainT_Initial:	; 0 bytes @ 0x0
   533                           	global	?_Mcu_Initial
   534  0070                     ?_Mcu_Initial:	; 0 bytes @ 0x0
   535                           	global	?_SegmentDisplay_Initial
   536  0070                     ?_SegmentDisplay_Initial:	; 0 bytes @ 0x0
   537                           	global	?_MainT
   538  0070                     ?_MainT:	; 0 bytes @ 0x0
   539                           	global	?_I2C_Main
   540  0070                     ?_I2C_Main:	; 0 bytes @ 0x0
   541                           	global	?_UART_Main
   542  0070                     ?_UART_Main:	; 0 bytes @ 0x0
   543                           	global	?_SegmentDisplay_Main
   544  0070                     ?_SegmentDisplay_Main:	; 0 bytes @ 0x0
   545                           	global	?_IO_Set
   546  0070                     ?_IO_Set:	; 0 bytes @ 0x0
   547                           	global	?_TMR1_Set
   548  0070                     ?_TMR1_Set:	; 0 bytes @ 0x0
   549                           	global	?_I2C_Set
   550  0070                     ?_I2C_Set:	; 0 bytes @ 0x0
   551                           	global	?_UART_Set
   552  0070                     ?_UART_Set:	; 0 bytes @ 0x0
   553                           	global	?_TMR1_ISR
   554  0070                     ?_TMR1_ISR:	; 0 bytes @ 0x0
   555                           	global	??_TMR1_ISR
   556  0070                     ??_TMR1_ISR:	; 0 bytes @ 0x0
   557                           	global	?_UART_ISR
   558  0070                     ?_UART_ISR:	; 0 bytes @ 0x0
   559                           	global	??_UART_ISR
   560  0070                     ??_UART_ISR:	; 0 bytes @ 0x0
   561                           	global	?_I2C_ISR
   562  0070                     ?_I2C_ISR:	; 0 bytes @ 0x0
   563                           	global	??_I2C_ISR
   564  0070                     ??_I2C_ISR:	; 0 bytes @ 0x0
   565                           	global	?_I2C_Master_Reception
   566  0070                     ?_I2C_Master_Reception:	; 0 bytes @ 0x0
   567                           	global	?_I2C_Master_Transmission
   568  0070                     ?_I2C_Master_Transmission:	; 0 bytes @ 0x0
   569                           	global	?_UART_Receive
   570  0070                     ?_UART_Receive:	; 0 bytes @ 0x0
   571                           	global	?_UART_Transmit
   572  0070                     ?_UART_Transmit:	; 0 bytes @ 0x0
   573                           	global	?_main
   574  0070                     ?_main:	; 0 bytes @ 0x0
   575                           	global	?_ISR
   576  0070                     ?_ISR:	; 0 bytes @ 0x0
   577                           	global	?_putch
   578  0070                     ?_putch:	; 0 bytes @ 0x0
   579  0070                     	ds	2
   580                           	global	??_ISR
   581  0072                     ??_ISR:	; 0 bytes @ 0x2
   582  0072                     	ds	1
   583                           	global	??_MainT_Initial
   584  0073                     ??_MainT_Initial:	; 0 bytes @ 0x3
   585                           	global	??_SegmentDisplay_Initial
   586  0073                     ??_SegmentDisplay_Initial:	; 0 bytes @ 0x3
   587                           	global	??_SegmentDisplay_Main
   588  0073                     ??_SegmentDisplay_Main:	; 0 bytes @ 0x3
   589                           	global	??_IO_Set
   590  0073                     ??_IO_Set:	; 0 bytes @ 0x3
   591                           	global	??_TMR1_Set
   592  0073                     ??_TMR1_Set:	; 0 bytes @ 0x3
   593                           	global	??_I2C_Set
   594  0073                     ??_I2C_Set:	; 0 bytes @ 0x3
   595                           	global	??_UART_Set
   596  0073                     ??_UART_Set:	; 0 bytes @ 0x3
   597                           	global	??_I2C_Master_Reception
   598  0073                     ??_I2C_Master_Reception:	; 0 bytes @ 0x3
   599                           	global	??_I2C_Master_Transmission
   600  0073                     ??_I2C_Master_Transmission:	; 0 bytes @ 0x3
   601                           	global	??_UART_Receive
   602  0073                     ??_UART_Receive:	; 0 bytes @ 0x3
   603                           	global	??_putch
   604  0073                     ??_putch:	; 0 bytes @ 0x3
   605                           	global	?___lwdiv
   606  0073                     ?___lwdiv:	; 2 bytes @ 0x3
   607                           	global	?___awdiv
   608  0073                     ?___awdiv:	; 2 bytes @ 0x3
   609                           	global	?___awmod
   610  0073                     ?___awmod:	; 2 bytes @ 0x3
   611                           	global	putch@byte
   612  0073                     putch@byte:	; 1 bytes @ 0x3
   613                           	global	___lwdiv@divisor
   614  0073                     ___lwdiv@divisor:	; 2 bytes @ 0x3
   615                           	global	___awdiv@divisor
   616  0073                     ___awdiv@divisor:	; 2 bytes @ 0x3
   617                           	global	___awmod@divisor
   618  0073                     ___awmod@divisor:	; 2 bytes @ 0x3
   619  0073                     	ds	1
   620                           	global	??_Mcu_Initial
   621  0074                     ??_Mcu_Initial:	; 0 bytes @ 0x4
   622                           	global	I2C_Master_Transmission@i
   623  0074                     I2C_Master_Transmission@i:	; 1 bytes @ 0x4
   624  0074                     	ds	1
   625                           	global	I2C_Master_Reception@i
   626  0075                     I2C_Master_Reception@i:	; 1 bytes @ 0x5
   627                           	global	___lwdiv@dividend
   628  0075                     ___lwdiv@dividend:	; 2 bytes @ 0x5
   629                           	global	___awdiv@dividend
   630  0075                     ___awdiv@dividend:	; 2 bytes @ 0x5
   631                           	global	___awmod@dividend
   632  0075                     ___awmod@dividend:	; 2 bytes @ 0x5
   633  0075                     	ds	1
   634                           	global	I2C_Main@i
   635  0076                     I2C_Main@i:	; 1 bytes @ 0x6
   636                           	global	UART_Receive@i
   637  0076                     UART_Receive@i:	; 1 bytes @ 0x6
   638  0076                     	ds	1
   639                           	global	??___lwdiv
   640  0077                     ??___lwdiv:	; 0 bytes @ 0x7
   641                           	global	??___awdiv
   642  0077                     ??___awdiv:	; 0 bytes @ 0x7
   643                           	global	??___awmod
   644  0077                     ??___awmod:	; 0 bytes @ 0x7
   645  0077                     	ds	1
   646                           	global	??_UART_Main
   647  0078                     ??_UART_Main:	; 0 bytes @ 0x8
   648                           	global	??_main
   649  0078                     ??_main:	; 0 bytes @ 0x8
   650                           psect	cstackBANK0,class=BANK0,space=1
   651                           global __pcstackBANK0
   652  004E                     __pcstackBANK0:
   653                           	global	??_I2C_Main
   654  004E                     ??_I2C_Main:	; 0 bytes @ 0x0
   655                           	global	___lwdiv@counter
   656  004E                     ___lwdiv@counter:	; 1 bytes @ 0x0
   657                           	global	___awdiv@counter
   658  004E                     ___awdiv@counter:	; 1 bytes @ 0x0
   659                           	global	___awmod@counter
   660  004E                     ___awmod@counter:	; 1 bytes @ 0x0
   661  004E                     	ds	1
   662                           	global	___awdiv@sign
   663  004F                     ___awdiv@sign:	; 1 bytes @ 0x1
   664                           	global	___awmod@sign
   665  004F                     ___awmod@sign:	; 1 bytes @ 0x1
   666                           	global	___lwdiv@quotient
   667  004F                     ___lwdiv@quotient:	; 2 bytes @ 0x1
   668  004F                     	ds	1
   669                           	global	___awdiv@quotient
   670  0050                     ___awdiv@quotient:	; 2 bytes @ 0x2
   671  0050                     	ds	1
   672                           	global	?_printf
   673  0051                     ?_printf:	; 2 bytes @ 0x3
   674  0051                     	ds	1
   675                           	global	?_setSegmentDisplayNumber
   676  0052                     ?_setSegmentDisplayNumber:	; 0 bytes @ 0x4
   677                           	global	setSegmentDisplayNumber@number
   678  0052                     setSegmentDisplayNumber@number:	; 2 bytes @ 0x4
   679  0052                     	ds	1
   680                           	global	??_printf
   681  0053                     ??_printf:	; 0 bytes @ 0x5
   682  0053                     	ds	1
   683                           	global	??_setSegmentDisplayNumber
   684  0054                     ??_setSegmentDisplayNumber:	; 0 bytes @ 0x6
   685  0054                     	ds	1
   686                           	global	printf@flag
   687  0055                     printf@flag:	; 1 bytes @ 0x7
   688  0055                     	ds	1
   689                           	global	printf@ap
   690  0056                     printf@ap:	; 1 bytes @ 0x8
   691  0056                     	ds	1
   692                           	global	setSegmentDisplayNumber@i
   693  0057                     setSegmentDisplayNumber@i:	; 1 bytes @ 0x9
   694                           	global	printf@_val
   695  0057                     printf@_val:	; 4 bytes @ 0x9
   696  0057                     	ds	1
   697                           	global	??_MainT
   698  0058                     ??_MainT:	; 0 bytes @ 0xA
   699  0058                     	ds	3
   700                           	global	printf@f
   701  005B                     printf@f:	; 1 bytes @ 0xD
   702  005B                     	ds	1
   703                           	global	printf@prec
   704  005C                     printf@prec:	; 1 bytes @ 0xE
   705  005C                     	ds	1
   706                           	global	printf@c
   707  005D                     printf@c:	; 1 bytes @ 0xF
   708  005D                     	ds	1
   709                           	global	??_UART_Transmit
   710  005E                     ??_UART_Transmit:	; 0 bytes @ 0x10
   711  005E                     	ds	3
   712                           	global	UART_Transmit@i
   713  0061                     UART_Transmit@i:	; 1 bytes @ 0x13
   714  0061                     	ds	1
   715 ;;Data sizes: Strings 42, constant 8, data 58, bss 157, persistent 2 stack 0
   716 ;;Auto spaces:   Size  Autos    Used
   717 ;; COMMON          14      8      11
   718 ;; BANK0           80     20      67
   719 ;; BANK1           80      0      32
   720 ;; BANK2           80      0      68
   721 ;; BANK3           80      0      67
   722 ;; BANK4           80      0       0
   723 ;; BANK5           80      0       0
   724 ;; BANK6           16      0       0
   725                           
   726 ;;
   727 ;; Pointer list with targets:
   728                           
   729 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   730 ;;
   731 ;; ?___awmod	int  size(1) Largest target is 0
   732 ;;
   733 ;; ?___awdiv	int  size(1) Largest target is 0
   734 ;;
   735 ;; printf@f	PTR const unsigned char  size(1) Largest target is 14
   736 ;;		 -> STR_4(CODE[3]), STR_3(CODE[6]), STR_2(CODE[2]), STR_1(CODE[14]), 
   737 ;;
   738 ;; ?_printf	int  size(1) Largest target is 0
   739 ;;
   740 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   741 ;;		 -> ?_printf(BANK0[2]), 
   742 ;;
   743 ;; S4314$_cp	PTR const unsigned char  size(1) Largest target is 0
   744 ;;
   745 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   746 ;;
   747 ;; UART	PTR struct UART size(1) Largest target is 68
   748 ;;		 -> NULL(NULL[0]), VarUart(BANK2[68]), 
   749 ;;
   750 ;; Timer1	PTR struct Timer1 size(1) Largest target is 3
   751 ;;		 -> NULL(NULL[0]), VarTimer1(BANK0[3]), 
   752 ;;
   753 ;; Segment	PTR struct Segment size(1) Largest target is 26
   754 ;;		 -> NULL(NULL[0]), VarSegment(BANK0[26]), 
   755 ;;
   756 ;; I2C	PTR struct I2C size(1) Largest target is 67
   757 ;;		 -> NULL(NULL[0]), VarI2C(BANK3[67]), 
   758 ;;
   759 ;; Product	PTR struct Product size(1) Largest target is 32
   760 ;;		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 
   761 ;;
   762 ;; TMain	PTR struct TMain size(1) Largest target is 15
   763 ;;		 -> NULL(NULL[0]), VarTMain(BANK0[15]), 
   764 ;;
   765                           
   766                           
   767 ;;
   768 ;; Critical Paths under _main in COMMON
   769 ;;
   770 ;;   _printf->___lwdiv
   771 ;;   _setSegmentDisplayNumber->___awdiv
   772 ;;   _setSegmentDisplayNumber->___awmod
   773 ;;   _I2C_Main->_I2C_Master_Reception
   774 ;;   _Mcu_Initial->_TMR1_Set
   775 ;;   _Mcu_Initial->_I2C_Set
   776 ;;   _Mcu_Initial->_UART_Set
   777 ;;
   778 ;; Critical Paths under _ISR in COMMON
   779 ;;
   780 ;;   _ISR->_UART_ISR
   781 ;;
   782 ;; Critical Paths under _main in BANK0
   783 ;;
   784 ;;   _UART_Main->_UART_Transmit
   785 ;;   _UART_Transmit->_printf
   786 ;;   _MainT->_setSegmentDisplayNumber
   787 ;;   _printf->___lwdiv
   788 ;;   _setSegmentDisplayNumber->___awdiv
   789 ;;
   790 ;; Critical Paths under _ISR in BANK0
   791 ;;
   792 ;;   None.
   793 ;;
   794 ;; Critical Paths under _main in BANK1
   795 ;;
   796 ;;   None.
   797 ;;
   798 ;; Critical Paths under _ISR in BANK1
   799 ;;
   800 ;;   None.
   801 ;;
   802 ;; Critical Paths under _main in BANK2
   803 ;;
   804 ;;   None.
   805 ;;
   806 ;; Critical Paths under _ISR in BANK2
   807 ;;
   808 ;;   None.
   809 ;;
   810 ;; Critical Paths under _main in BANK3
   811 ;;
   812 ;;   None.
   813 ;;
   814 ;; Critical Paths under _ISR in BANK3
   815 ;;
   816 ;;   None.
   817 ;;
   818 ;; Critical Paths under _main in BANK4
   819 ;;
   820 ;;   None.
   821 ;;
   822 ;; Critical Paths under _ISR in BANK4
   823 ;;
   824 ;;   None.
   825 ;;
   826 ;; Critical Paths under _main in BANK5
   827 ;;
   828 ;;   None.
   829 ;;
   830 ;; Critical Paths under _ISR in BANK5
   831 ;;
   832 ;;   None.
   833 ;;
   834 ;; Critical Paths under _main in BANK6
   835 ;;
   836 ;;   None.
   837 ;;
   838 ;; Critical Paths under _ISR in BANK6
   839 ;;
   840 ;;   None.
   841                           
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   844 ;;
   845                           
   846 ;;
   847 ;;Call Graph Tables:
   848 ;;
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (0) _main                                                 0     0      0    2540
   853 ;;                      _MainT_Initial
   854 ;;                        _Mcu_Initial
   855 ;;             _SegmentDisplay_Initial
   856 ;;                              _MainT
   857 ;;                           _I2C_Main
   858 ;;                          _UART_Main
   859 ;;                _SegmentDisplay_Main
   860 ;; ---------------------------------------------------------------------------------
   861 ;; (1) _UART_Main                                            0     0      0     916
   862 ;;                       _UART_Receive
   863 ;;                      _UART_Transmit
   864 ;; ---------------------------------------------------------------------------------
   865 ;; (2) _UART_Transmit                                        4     4      0     826
   866 ;;                                             16 BANK0      4     4      0
   867 ;;                             _printf
   868 ;; ---------------------------------------------------------------------------------
   869 ;; (1) _MainT                                                4     4      0    1358
   870 ;;                                             10 BANK0      3     3      0
   871 ;;            _setSegmentDisplayNumber
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (3) _printf                                              13    11      2     727
   874 ;;                                              3 BANK0     13    11      2
   875 ;;                              _putch
   876 ;;                            ___lwdiv
   877 ;; ---------------------------------------------------------------------------------
   878 ;; (2) _setSegmentDisplayNumber                              6     4      2    1358
   879 ;;                                              4 BANK0      6     4      2
   880 ;;                            ___awdiv
   881 ;;                            ___awmod
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (1) _I2C_Main                                             4     4      0     266
   884 ;;                                              6 COMMON     1     1      0
   885 ;;                                              0 BANK0      3     3      0
   886 ;;               _I2C_Master_Reception
   887 ;;            _I2C_Master_Transmission
   888 ;; ---------------------------------------------------------------------------------
   889 ;; (1) _Mcu_Initial                                          0     0      0       0
   890 ;;                             _IO_Set
   891 ;;                           _TMR1_Set
   892 ;;                            _I2C_Set
   893 ;;                           _UART_Set
   894 ;; ---------------------------------------------------------------------------------
   895 ;; (3) ___awmod                                              7     3      4     433
   896 ;;                                              3 COMMON     5     1      4
   897 ;;                                              0 BANK0      2     2      0
   898 ;; ---------------------------------------------------------------------------------
   899 ;; (3) ___awdiv                                              9     5      4     445
   900 ;;                                              3 COMMON     5     1      4
   901 ;;                                              0 BANK0      4     4      0
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (4) ___lwdiv                                              8     4      4     241
   904 ;;                                              3 COMMON     5     1      4
   905 ;;                                              0 BANK0      3     3      0
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (4) _putch                                                1     1      0      22
   908 ;;                                              3 COMMON     1     1      0
   909 ;; ---------------------------------------------------------------------------------
   910 ;; (2) _UART_Receive                                         4     4      0      90
   911 ;;                                              3 COMMON     4     4      0
   912 ;; ---------------------------------------------------------------------------------
   913 ;; (2) _I2C_Master_Transmission                              2     2      0      68
   914 ;;                                              3 COMMON     2     2      0
   915 ;; ---------------------------------------------------------------------------------
   916 ;; (2) _I2C_Master_Reception                                 3     3      0      68
   917 ;;                                              3 COMMON     3     3      0
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (2) _UART_Set                                             1     1      0       0
   920 ;;                                              3 COMMON     1     1      0
   921 ;; ---------------------------------------------------------------------------------
   922 ;; (2) _I2C_Set                                              1     1      0       0
   923 ;;                                              3 COMMON     1     1      0
   924 ;; ---------------------------------------------------------------------------------
   925 ;; (2) _TMR1_Set                                             1     1      0       0
   926 ;;                                              3 COMMON     1     1      0
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (2) _IO_Set                                               0     0      0       0
   929 ;; ---------------------------------------------------------------------------------
   930 ;; (1) _SegmentDisplay_Main                                  2     2      0       0
   931 ;;                                              3 COMMON     2     2      0
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (1) _SegmentDisplay_Initial                               1     1      0       0
   934 ;;                                              3 COMMON     1     1      0
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (1) _MainT_Initial                                        1     1      0       0
   937 ;;                                              3 COMMON     1     1      0
   938 ;; ---------------------------------------------------------------------------------
   939 ;; Estimated maximum stack depth 4
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   942 ;; ---------------------------------------------------------------------------------
   943 ;; (5) _ISR                                                  1     1      0       0
   944 ;;                                              2 COMMON     1     1      0
   945 ;;                           _TMR1_ISR
   946 ;;                           _UART_ISR
   947 ;;                            _I2C_ISR
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (6) _I2C_ISR                                              0     0      0       0
   950 ;; ---------------------------------------------------------------------------------
   951 ;; (6) _UART_ISR                                             3     3      0       0
   952 ;;                                              0 COMMON     2     2      0
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (6) _TMR1_ISR                                             0     0      0       0
   955 ;; ---------------------------------------------------------------------------------
   956 ;; Estimated maximum stack depth 6
   957 ;; ---------------------------------------------------------------------------------
   958                           
   959 ;; Call Graph Graphs:
   960                           
   961 ;; _main (ROOT)
   962 ;;   _MainT_Initial
   963 ;;   _Mcu_Initial
   964 ;;     _IO_Set
   965 ;;     _TMR1_Set
   966 ;;     _I2C_Set
   967 ;;     _UART_Set
   968 ;;   _SegmentDisplay_Initial
   969 ;;   _MainT
   970 ;;     _setSegmentDisplayNumber
   971 ;;       ___awdiv
   972 ;;       ___awmod
   973 ;;   _I2C_Main
   974 ;;     _I2C_Master_Reception
   975 ;;     _I2C_Master_Transmission
   976 ;;   _UART_Main
   977 ;;     _UART_Receive
   978 ;;     _UART_Transmit
   979 ;;       _printf
   980 ;;         _putch
   981 ;;         ___lwdiv
   982 ;;   _SegmentDisplay_Main
   983 ;;
   984 ;; _ISR (ROOT)
   985 ;;   _TMR1_ISR
   986 ;;   _UART_ISR
   987 ;;   _I2C_ISR
   988 ;;
   989                           
   990 ;; Address spaces:
   991                           
   992 ;;Name               Size   Autos  Total    Cost      Usage
   993 ;;BIGRAM             1F0      0       0       0        0.0%
   994 ;;NULL                 0      0       0       0        0.0%
   995 ;;CODE                 0      0       0       0        0.0%
   996 ;;BITCOMMON            E      0       0       1        0.0%
   997 ;;BITSFR0              0      0       0       1        0.0%
   998 ;;SFR0                 0      0       0       1        0.0%
   999 ;;COMMON               E      8       B       2       78.6%
  1000 ;;BITSFR1              0      0       0       2        0.0%
  1001 ;;SFR1                 0      0       0       2        0.0%
  1002 ;;BITSFR2              0      0       0       3        0.0%
  1003 ;;SFR2                 0      0       0       3        0.0%
  1004 ;;STACK                0      0       8       3        0.0%
  1005 ;;BITSFR3              0      0       0       4        0.0%
  1006 ;;SFR3                 0      0       0       4        0.0%
  1007 ;;ABS                  0      0      F5       4        0.0%
  1008 ;;BITBANK0            50      0       0       5        0.0%
  1009 ;;BITSFR4              0      0       0       5        0.0%
  1010 ;;SFR4                 0      0       0       5        0.0%
  1011 ;;BANK0               50     14      43       6       83.8%
  1012 ;;BITSFR5              0      0       0       6        0.0%
  1013 ;;SFR5                 0      0       0       6        0.0%
  1014 ;;BITBANK1            50      0       0       7        0.0%
  1015 ;;BITSFR6              0      0       0       7        0.0%
  1016 ;;SFR6                 0      0       0       7        0.0%
  1017 ;;BANK1               50      0      20       8       40.0%
  1018 ;;BITSFR7              0      0       0       8        0.0%
  1019 ;;SFR7                 0      0       0       8        0.0%
  1020 ;;BITBANK2            50      0       0       9        0.0%
  1021 ;;BITSFR8              0      0       0       9        0.0%
  1022 ;;SFR8                 0      0       0       9        0.0%
  1023 ;;BANK2               50      0      44      10       85.0%
  1024 ;;BITSFR9              0      0       0      10        0.0%
  1025 ;;SFR9                 0      0       0      10        0.0%
  1026 ;;BITBANK3            50      0       0      11        0.0%
  1027 ;;BITSFR10             0      0       0      11        0.0%
  1028 ;;SFR10                0      0       0      11        0.0%
  1029 ;;BANK3               50      0      43      12       83.8%
  1030 ;;BITSFR11             0      0       0      12        0.0%
  1031 ;;SFR11                0      0       0      12        0.0%
  1032 ;;BITBANK4            50      0       0      13        0.0%
  1033 ;;BITSFR12             0      0       0      13        0.0%
  1034 ;;SFR12                0      0       0      13        0.0%
  1035 ;;BANK4               50      0       0      14        0.0%
  1036 ;;BITSFR13             0      0       0      14        0.0%
  1037 ;;SFR13                0      0       0      14        0.0%
  1038 ;;BITBANK5            50      0       0      15        0.0%
  1039 ;;BITSFR14             0      0       0      15        0.0%
  1040 ;;SFR14                0      0       0      15        0.0%
  1041 ;;BANK5               50      0       0      16        0.0%
  1042 ;;BITSFR15             0      0       0      16        0.0%
  1043 ;;SFR15                0      0       0      16        0.0%
  1044 ;;BITBANK6            10      0       0      17        0.0%
  1045 ;;BITSFR16             0      0       0      17        0.0%
  1046 ;;SFR16                0      0       0      17        0.0%
  1047 ;;BANK6               10      0       0      18        0.0%
  1048 ;;BITSFR17             0      0       0      18        0.0%
  1049 ;;SFR17                0      0       0      18        0.0%
  1050 ;;BITSFR18             0      0       0      19        0.0%
  1051 ;;SFR18                0      0       0      19        0.0%
  1052 ;;DATA                 0      0      FD      19        0.0%
  1053 ;;BITSFR19             0      0       0      20        0.0%
  1054 ;;SFR19                0      0       0      20        0.0%
  1055 ;;BITSFR20             0      0       0      21        0.0%
  1056 ;;SFR20                0      0       0      21        0.0%
  1057 ;;BITSFR21             0      0       0      22        0.0%
  1058 ;;SFR21                0      0       0      22        0.0%
  1059 ;;BITSFR22             0      0       0      23        0.0%
  1060 ;;SFR22                0      0       0      23        0.0%
  1061 ;;BITSFR23             0      0       0      24        0.0%
  1062 ;;SFR23                0      0       0      24        0.0%
  1063 ;;BITSFR24             0      0       0      25        0.0%
  1064 ;;SFR24                0      0       0      25        0.0%
  1065 ;;BITSFR25             0      0       0      26        0.0%
  1066 ;;SFR25                0      0       0      26        0.0%
  1067 ;;BITSFR26             0      0       0      27        0.0%
  1068 ;;SFR26                0      0       0      27        0.0%
  1069 ;;BITSFR27             0      0       0      28        0.0%
  1070 ;;SFR27                0      0       0      28        0.0%
  1071 ;;BITSFR28             0      0       0      29        0.0%
  1072 ;;SFR28                0      0       0      29        0.0%
  1073 ;;BITSFR29             0      0       0      30        0.0%
  1074 ;;SFR29                0      0       0      30        0.0%
  1075 ;;BITSFR30             0      0       0      31        0.0%
  1076 ;;SFR30                0      0       0      31        0.0%
  1077 ;;BITSFR31             0      0       0      32        0.0%
  1078 ;;SFR31                0      0       0      32        0.0%
  1079                           
  1080                           	global	_main
  1081                           psect	maintext,global,class=CODE,delta=2
  1082                           global __pmaintext
  1083  0733                     __pmaintext:
  1084                           
  1085 ;; *************** function _main *****************
  1086 ;; Defined at:
  1087 ;;		line 7 in file "I:\Program\PIC\Source_File\myMain.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;		None               void
  1094 ;; Registers used:
  1095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 17F/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1101 ;;      Params:         0       0       0       0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels required when called:    6
  1107 ;; This function calls:
  1108 ;;		_MainT_Initial
  1109 ;;		_Mcu_Initial
  1110 ;;		_SegmentDisplay_Initial
  1111 ;;		_MainT
  1112 ;;		_I2C_Main
  1113 ;;		_UART_Main
  1114 ;;		_SegmentDisplay_Main
  1115 ;; This function is called by:
  1116 ;;		Startup code after reset
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           psect	maintext
  1120                           	file	"I:\Program\PIC\Source_File\myMain.c"
  1121                           	line	7
  1122                           	global	__size_of_main
  1123  0031                     	__size_of_main	equ	__end_of_main-_main
  1124                           	
  1125  0733                     _main:	
  1126                           	opt	stack 10
  1127                           ; Regs used in _main: [allreg]
  1128                           	line	8
  1129                           	
  1130  0733                     l5947:	
  1131                           ;myMain.c: 8: MainT_Initial();
  1132  0733  3186  26F1  3187   	fcall	_MainT_Initial
  1133                           	line	9
  1134                           	
  1135  0736                     l5949:	
  1136                           ;myMain.c: 9: Mcu_Initial();
  1137  0736  318F  27D7  3187   	fcall	_Mcu_Initial
  1138                           	line	10
  1139                           	
  1140  0739                     l5951:	
  1141                           ;myMain.c: 10: SegmentDisplay_Initial();
  1142  0739  318F  27B7  3187   	fcall	_SegmentDisplay_Initial
  1143                           	line	12
  1144                           	
  1145  073C                     l5953:	
  1146                           ;myMain.c: 11: ;;
  1147                           ;myMain.c: 12: _nop();
  1148  073C  0000               	nop
  1149  073D  2F3E               	goto	l5955
  1150                           	line	13
  1151                           ;myMain.c: 13: while(1)
  1152                           	
  1153  073E                     l1031:	
  1154                           	line	17
  1155                           	
  1156  073E                     l5955:	
  1157                           ;myMain.c: 14: {
  1158                           ;myMain.c: 17: if(TMain->T1_Timerout)
  1159  073E  0020               	movlb 0	; select bank0
  1160  073F  0862               	movf	(_TMain),w
  1161  0740  0086               	movwf	fsr1l
  1162  0741  0187               	clrf fsr1h	
  1163                           	
  1164  0742  1D01               	btfss	indf1,2
  1165  0743  2F45               	goto	u4791
  1166  0744  2F46               	goto	u4790
  1167  0745                     u4791:
  1168  0745  2F3E               	goto	l5955
  1169  0746                     u4790:
  1170                           	line	19
  1171                           	
  1172  0746                     l5957:	
  1173                           ;myMain.c: 18: {
  1174                           ;myMain.c: 19: TMain->T1_Timerout = 0;
  1175  0746  0862               	movf	(_TMain),w
  1176  0747  0086               	movwf	fsr1l
  1177  0748  0187               	clrf fsr1h	
  1178                           	
  1179  0749  1101               	bcf	indf1,2
  1180                           	line	20
  1181                           	
  1182  074A                     l5959:	
  1183                           ;myMain.c: 20: MainT();
  1184  074A  3181  216E  3187   	fcall	_MainT
  1185                           	line	21
  1186                           	
  1187  074D                     l5961:	
  1188                           ;myMain.c: 21: if(TMain->PowerON)
  1189  074D  0020               	movlb 0	; select bank0
  1190  074E  0862               	movf	(_TMain),w
  1191  074F  0086               	movwf	fsr1l
  1192  0750  0187               	clrf fsr1h	
  1193                           	
  1194  0751  1C01               	btfss	indf1,0
  1195  0752  2F54               	goto	u4801
  1196  0753  2F55               	goto	u4800
  1197  0754                     u4801:
  1198  0754  2F3E               	goto	l5955
  1199  0755                     u4800:
  1200                           	line	24
  1201                           	
  1202  0755                     l5963:	
  1203                           ;myMain.c: 22: {
  1204                           ;myMain.c: 23: ;;
  1205                           ;myMain.c: 24: I2C_Main();
  1206  0755  3182  22C9  3187   	fcall	_I2C_Main
  1207                           	line	25
  1208                           	
  1209  0758                     l5965:	
  1210                           ;myMain.c: 25: UART_Main();
  1211  0758  3187  2764  3187   	fcall	_UART_Main
  1212                           	line	26
  1213                           	
  1214  075B                     l5967:	
  1215                           ;myMain.c: 26: SegmentDisplay_Main();
  1216  075B  3183  2353  3187   	fcall	_SegmentDisplay_Main
  1217  075E  2F3E               	goto	l5955
  1218                           	line	27
  1219                           	
  1220  075F                     l1033:	
  1221  075F  2F3E               	goto	l5955
  1222                           	line	28
  1223                           	
  1224  0760                     l1032:	
  1225  0760  2F3E               	goto	l5955
  1226                           	line	29
  1227                           	
  1228  0761                     l1034:	
  1229                           	line	13
  1230  0761  2F3E               	goto	l5955
  1231                           	
  1232  0762                     l1035:	
  1233                           	line	30
  1234                           	
  1235  0762                     l1036:	
  1236                           	global	start
  1237  0762  3180  2818         	ljmp	start
  1238                           	opt stack 0
  1239                           GLOBAL	__end_of_main
  1240  0764                     	__end_of_main:
  1241 ;; =============== function _main ends ============
  1242                           
  1243                           	signat	_main,88
  1244                           	global	_UART_Main
  1245                           psect	text912,local,class=CODE,delta=2
  1246                           global __ptext912
  1247  0764                     __ptext912:
  1248                           
  1249 ;; *************** function _UART_Main *****************
  1250 ;; Defined at:
  1251 ;;		line 525 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;		None               void
  1258 ;; Registers used:
  1259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1265 ;;      Params:         0       0       0       0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0
  1268 ;;      Totals:         0       0       0       0       0       0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    5
  1272 ;; This function calls:
  1273 ;;		_UART_Receive
  1274 ;;		_UART_Transmit
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           psect	text912
  1280                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1281                           	line	525
  1282                           	global	__size_of_UART_Main
  1283  002A                     	__size_of_UART_Main	equ	__end_of_UART_Main-_UART_Main
  1284                           	
  1285  0764                     _UART_Main:	
  1286                           	opt	stack 10
  1287                           ; Regs used in _UART_Main: [wreg-status,0+pclath+cstack]
  1288                           	line	526
  1289                           	
  1290  0764                     l5933:	
  1291                           ;MCU_16f1516_B1.c: 526: if(UART->RxGO)
  1292  0764  0879               	movf	(_UART),w
  1293  0765  3E43               	addlw	043h
  1294  0766  0086               	movwf	fsr1l
  1295  0767  3001               	movlw 1	; select bank2/3
  1296  0768  0087               	movwf fsr1h	
  1297                           	
  1298  0769  1C81               	btfss	indf1,1
  1299  076A  2F6C               	goto	u4771
  1300  076B  2F6D               	goto	u4770
  1301  076C                     u4771:
  1302  076C  2F79               	goto	l5941
  1303  076D                     u4770:
  1304                           	line	528
  1305                           	
  1306  076D                     l5935:	
  1307                           ;MCU_16f1516_B1.c: 527: {
  1308                           ;MCU_16f1516_B1.c: 528: UART->RxGO=0;
  1309  076D  0879               	movf	(_UART),w
  1310  076E  3E43               	addlw	043h
  1311  076F  0086               	movwf	fsr1l
  1312  0770  3001               	movlw 1	; select bank2/3
  1313  0771  0087               	movwf fsr1h	
  1314                           	
  1315  0772  1081               	bcf	indf1,1
  1316                           	line	529
  1317                           	
  1318  0773                     l5937:	
  1319                           ;MCU_16f1516_B1.c: 529: UART_Receive();
  1320  0773  3186  2650  3187   	fcall	_UART_Receive
  1321                           	line	530
  1322                           	
  1323  0776                     l5939:	
  1324                           ;MCU_16f1516_B1.c: 530: RCIE=1;
  1325  0776  0021               	movlb 1	; select bank1
  1326  0777  1691               	bsf	(1165/8)^080h,(1165)&7
  1327                           	line	531
  1328                           ;MCU_16f1516_B1.c: 531: }
  1329  0778  2F8D               	goto	l3286
  1330                           	line	532
  1331                           	
  1332  0779                     l3283:	
  1333                           	line	534
  1334                           	
  1335  0779                     l5941:	
  1336                           ;MCU_16f1516_B1.c: 532: else
  1337                           ;MCU_16f1516_B1.c: 533: {
  1338                           ;MCU_16f1516_B1.c: 534: if(UART->TxGO)
  1339  0779  0879               	movf	(_UART),w
  1340  077A  3E43               	addlw	043h
  1341  077B  0086               	movwf	fsr1l
  1342  077C  3001               	movlw 1	; select bank2/3
  1343  077D  0087               	movwf fsr1h	
  1344                           	
  1345  077E  1C01               	btfss	indf1,0
  1346  077F  2F81               	goto	u4781
  1347  0780  2F82               	goto	u4780
  1348  0781                     u4781:
  1349  0781  2F8D               	goto	l3286
  1350  0782                     u4780:
  1351                           	line	536
  1352                           	
  1353  0782                     l5943:	
  1354                           ;MCU_16f1516_B1.c: 535: {
  1355                           ;MCU_16f1516_B1.c: 536: UART->TxGO=0;
  1356  0782  0879               	movf	(_UART),w
  1357  0783  3E43               	addlw	043h
  1358  0784  0086               	movwf	fsr1l
  1359  0785  3001               	movlw 1	; select bank2/3
  1360  0786  0087               	movwf fsr1h	
  1361                           	
  1362  0787  1001               	bcf	indf1,0
  1363                           	line	537
  1364                           	
  1365  0788                     l5945:	
  1366                           ;MCU_16f1516_B1.c: 537: UART_Transmit();
  1367  0788  3186  2613  3187   	fcall	_UART_Transmit
  1368  078B  2F8D               	goto	l3286
  1369                           	line	538
  1370                           	
  1371  078C                     l3285:	
  1372  078C  2F8D               	goto	l3286
  1373                           	line	539
  1374                           	
  1375  078D                     l3284:	
  1376                           	line	540
  1377                           	
  1378  078D                     l3286:	
  1379  078D  0008               	return
  1380                           	opt stack 0
  1381                           GLOBAL	__end_of_UART_Main
  1382  078E                     	__end_of_UART_Main:
  1383 ;; =============== function _UART_Main ends ============
  1384                           
  1385                           	signat	_UART_Main,88
  1386                           	global	_UART_Transmit
  1387                           psect	text913,local,class=CODE,delta=2
  1388                           global __ptext913
  1389  0613                     __ptext913:
  1390                           
  1391 ;; *************** function _UART_Transmit *****************
  1392 ;; Defined at:
  1393 ;;		line 542 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  i               1   19[BANK0 ] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;		None               void
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1407 ;;      Params:         0       0       0       0       0       0       0       0
  1408 ;;      Locals:         0       1       0       0       0       0       0       0
  1409 ;;      Temps:          0       3       0       0       0       0       0       0
  1410 ;;      Totals:         0       4       0       0       0       0       0       0
  1411 ;;Total ram usage:        4 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    4
  1414 ;; This function calls:
  1415 ;;		_printf
  1416 ;; This function is called by:
  1417 ;;		_UART_Main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           psect	text913
  1421                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  1422                           	line	542
  1423                           	global	__size_of_UART_Transmit
  1424  003D                     	__size_of_UART_Transmit	equ	__end_of_UART_Transmit-_UART_Transmit
  1425                           	
  1426  0613                     _UART_Transmit:	
  1427                           	opt	stack 10
  1428                           ; Regs used in _UART_Transmit: [wreg-status,0+pclath+cstack]
  1429                           	line	544
  1430                           	
  1431  0613                     l5917:	
  1432                           ;MCU_16f1516_B1.c: 543: char i;
  1433                           ;MCU_16f1516_B1.c: 544: printf("\rthis number\n");
  1434  0613  301A               	movlw	(STR_1|8000h)&0ffh
  1435  0614  3182  221E  3186   	fcall	_printf
  1436                           	line	545
  1437                           ;MCU_16f1516_B1.c: 545: printf("\r");
  1438  0617  3031               	movlw	(STR_2|8000h)&0ffh
  1439  0618  3182  221E  3186   	fcall	_printf
  1440                           	line	546
  1441                           	
  1442  061B                     l5919:	
  1443                           ;MCU_16f1516_B1.c: 546: for(i=0;i<32;i++)
  1444  061B  0020               	movlb 0	; select bank0
  1445  061C  01E1               	clrf	(UART_Transmit@i)
  1446                           	
  1447  061D                     l5921:	
  1448  061D  3020               	movlw	(020h)
  1449  061E  0261               	subwf	(UART_Transmit@i),w
  1450  061F  1C03               	skipc
  1451  0620  2E22               	goto	u4741
  1452  0621  2E23               	goto	u4740
  1453  0622                     u4741:
  1454  0622  2E26               	goto	l3291
  1455  0623                     u4740:
  1456  0623  2E4B               	goto	l5931
  1457                           	
  1458  0624                     l5923:	
  1459  0624  2E4B               	goto	l5931
  1460                           	line	547
  1461                           	
  1462  0625                     l3289:	
  1463                           	line	548
  1464                           ;MCU_16f1516_B1.c: 547: {
  1465                           ;MCU_16f1516_B1.c: 548: while(!TRMT);
  1466  0625  2E26               	goto	l3291
  1467                           	
  1468  0626                     l3292:	
  1469                           	
  1470  0626                     l3291:	
  1471  0626  0023               	movlb 3	; select bank3
  1472  0627  1C9E               	btfss	(3313/8)^0180h,(3313)&7
  1473  0628  2E2A               	goto	u4751
  1474  0629  2E2B               	goto	u4750
  1475  062A                     u4751:
  1476  062A  2E26               	goto	l3291
  1477  062B                     u4750:
  1478  062B  2E2C               	goto	l5925
  1479                           	
  1480  062C                     l3293:	
  1481                           	line	549
  1482                           	
  1483  062C                     l5925:	
  1484                           ;MCU_16f1516_B1.c: 549: printf("0x%x\t",UART->TxData[i]);
  1485  062C  0020               	movlb 0	; select bank0
  1486  062D  0861               	movf	(UART_Transmit@i),w
  1487  062E  0779               	addwf	(_UART),w
  1488  062F  00DE               	movwf	(??_UART_Transmit+0)+0
  1489  0630  085E               	movf	0+(??_UART_Transmit+0)+0,w
  1490  0631  0086               	movwf	fsr1l
  1491  0632  3001               	movlw 1	; select bank2/3
  1492  0633  0087               	movwf fsr1h	
  1493                           	
  1494  0634  0801               	movf	indf1,w
  1495  0635  00DF               	movwf	(??_UART_Transmit+1)+0
  1496  0636  01E0               	clrf	(??_UART_Transmit+1)+0+1
  1497  0637  085F               	movf	0+(??_UART_Transmit+1)+0,w
  1498  0638  00D1               	movwf	(?_printf)
  1499  0639  0860               	movf	1+(??_UART_Transmit+1)+0,w
  1500  063A  00D2               	movwf	(?_printf+1)
  1501  063B  3028               	movlw	(STR_3|8000h)&0ffh
  1502  063C  3182  221E  3186   	fcall	_printf
  1503                           	line	546
  1504                           	
  1505  063F                     l5927:	
  1506  063F  3001               	movlw	(01h)
  1507  0640  0020               	movlb 0	; select bank0
  1508  0641  00DE               	movwf	(??_UART_Transmit+0)+0
  1509  0642  085E               	movf	(??_UART_Transmit+0)+0,w
  1510  0643  07E1               	addwf	(UART_Transmit@i),f
  1511                           	
  1512  0644                     l5929:	
  1513  0644  3020               	movlw	(020h)
  1514  0645  0261               	subwf	(UART_Transmit@i),w
  1515  0646  1C03               	skipc
  1516  0647  2E49               	goto	u4761
  1517  0648  2E4A               	goto	u4760
  1518  0649                     u4761:
  1519  0649  2E26               	goto	l3291
  1520  064A                     u4760:
  1521  064A  2E4B               	goto	l5931
  1522                           	
  1523  064B                     l3290:	
  1524                           	line	553
  1525                           	
  1526  064B                     l5931:	
  1527                           ;MCU_16f1516_B1.c: 552: }
  1528                           ;MCU_16f1516_B1.c: 553: printf("\n\n");
  1529  064B  302E               	movlw	(STR_4|8000h)&0ffh
  1530  064C  3182  221E  3186   	fcall	_printf
  1531                           	line	554
  1532                           	
  1533  064F                     l3294:	
  1534  064F  0008               	return
  1535                           	opt stack 0
  1536                           GLOBAL	__end_of_UART_Transmit
  1537  0650                     	__end_of_UART_Transmit:
  1538 ;; =============== function _UART_Transmit ends ============
  1539                           
  1540                           	signat	_UART_Transmit,88
  1541                           	global	_MainT
  1542                           psect	text914,local,class=CODE,delta=2
  1543                           global __ptext914
  1544  016E                     __ptext914:
  1545                           
  1546 ;; *************** function _MainT *****************
  1547 ;; Defined at:
  1548 ;;		line 42 in file "I:\Program\PIC\Source_File\myMain.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  i               1    0        unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1562 ;;      Params:         0       0       0       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0       0
  1564 ;;      Temps:          0       3       0       0       0       0       0       0
  1565 ;;      Totals:         0       3       0       0       0       0       0       0
  1566 ;;Total ram usage:        3 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    4
  1569 ;; This function calls:
  1570 ;;		_setSegmentDisplayNumber
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           psect	text914
  1576                           	file	"I:\Program\PIC\Source_File\myMain.c"
  1577                           	line	42
  1578                           	global	__size_of_MainT
  1579  00B0                     	__size_of_MainT	equ	__end_of_MainT-_MainT
  1580                           	
  1581  016E                     _MainT:	
  1582                           	opt	stack 11
  1583                           ; Regs used in _MainT: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  1584                           	line	45
  1585                           	
  1586  016E                     l5883:	
  1587                           ;myMain.c: 43: char i;
  1588                           ;myMain.c: 45: if(!TMain->PowerON)
  1589  016E  0020               	movlb 0	; select bank0
  1590  016F  0862               	movf	(_TMain),w
  1591  0170  0086               	movwf	fsr1l
  1592  0171  0187               	clrf fsr1h	
  1593                           	
  1594  0172  1801               	btfsc	indf1,0
  1595  0173  2975               	goto	u4681
  1596  0174  2976               	goto	u4680
  1597  0175                     u4681:
  1598  0175  299B               	goto	l5891
  1599  0176                     u4680:
  1600                           	line	47
  1601                           	
  1602  0176                     l5885:	
  1603                           ;myMain.c: 46: {
  1604                           ;myMain.c: 47: TMain->PowerCount++;
  1605  0176  0862               	movf	(_TMain),w
  1606  0177  3E01               	addlw	01h
  1607  0178  0086               	movwf	fsr1l
  1608  0179  0187               	clrf fsr1h	
  1609                           	
  1610  017A  3001               	movlw	01h
  1611  017B  0781               	addwf	indf1,f
  1612  017C  3141               	addfsr	fsr1,1
  1613  017D  1803               	skipnc
  1614  017E  0A81               	incf	indf1,f
  1615                           	line	48
  1616                           	
  1617  017F                     l5887:	
  1618                           ;myMain.c: 48: if(TMain->PowerCount == 1500)
  1619  017F  0862               	movf	(_TMain),w
  1620  0180  3E01               	addlw	01h
  1621  0181  0086               	movwf	fsr1l
  1622  0182  0187               	clrf fsr1h	
  1623                           	
  1624  0183  3F40               	moviw	[0]fsr1
  1625  0184  3ADC               	xorlw	low(05DCh)
  1626  0185  1D03               	skipz
  1627  0186  2989               	goto	u4695
  1628  0187  3F41               	moviw	[1]fsr1
  1629  0188  3A05               	xorlw	high(05DCh)
  1630  0189                     u4695:
  1631  0189  1D03               	skipz
  1632  018A  298C               	goto	u4691
  1633  018B  298D               	goto	u4690
  1634  018C                     u4691:
  1635  018C  2A1D               	goto	l1050
  1636  018D                     u4690:
  1637                           	line	50
  1638                           	
  1639  018D                     l5889:	
  1640                           ;myMain.c: 49: {
  1641                           ;myMain.c: 50: TMain->PowerCount=0;
  1642  018D  0862               	movf	(_TMain),w
  1643  018E  3E01               	addlw	01h
  1644  018F  0086               	movwf	fsr1l
  1645  0190  0187               	clrf fsr1h	
  1646                           	
  1647  0191  3000               	movlw	low(0)
  1648  0192  3FC0               	movwi	[0]fsr1
  1649  0193  3000               	movlw	high(0)
  1650  0194  3FC1               	movwi	[1]fsr1
  1651                           	line	51
  1652                           ;myMain.c: 51: TMain->PowerON=1;
  1653  0195  0862               	movf	(_TMain),w
  1654  0196  0086               	movwf	fsr1l
  1655  0197  0187               	clrf fsr1h	
  1656                           	
  1657  0198  1401               	bsf	indf1,0
  1658  0199  2A1D               	goto	l1050
  1659                           	line	56
  1660                           	
  1661  019A                     l1043:	
  1662                           	line	57
  1663                           ;myMain.c: 56: }
  1664                           ;myMain.c: 57: }
  1665  019A  2A1D               	goto	l1050
  1666                           	line	58
  1667                           	
  1668  019B                     l1042:	
  1669                           	line	60
  1670                           	
  1671  019B                     l5891:	
  1672                           ;myMain.c: 58: else
  1673                           ;myMain.c: 59: {
  1674                           ;myMain.c: 60: TMain->Count1++;
  1675  019B  0862               	movf	(_TMain),w
  1676  019C  3E05               	addlw	05h
  1677  019D  0086               	movwf	fsr1l
  1678  019E  0187               	clrf fsr1h	
  1679                           	
  1680  019F  3001               	movlw	01h
  1681  01A0  0781               	addwf	indf1,f
  1682  01A1  3141               	addfsr	fsr1,1
  1683  01A2  1803               	skipnc
  1684  01A3  0A81               	incf	indf1,f
  1685                           	line	61
  1686                           	
  1687  01A4                     l5893:	
  1688                           ;myMain.c: 61: if(TMain->Count1 == 1000)
  1689  01A4  0862               	movf	(_TMain),w
  1690  01A5  3E05               	addlw	05h
  1691  01A6  0086               	movwf	fsr1l
  1692  01A7  0187               	clrf fsr1h	
  1693                           	
  1694  01A8  3F40               	moviw	[0]fsr1
  1695  01A9  3AE8               	xorlw	low(03E8h)
  1696  01AA  1D03               	skipz
  1697  01AB  29AE               	goto	u4705
  1698  01AC  3F41               	moviw	[1]fsr1
  1699  01AD  3A03               	xorlw	high(03E8h)
  1700  01AE                     u4705:
  1701  01AE  1D03               	skipz
  1702  01AF  29B1               	goto	u4701
  1703  01B0  29B2               	goto	u4700
  1704  01B1                     u4701:
  1705  01B1  29FC               	goto	l5911
  1706  01B2                     u4700:
  1707                           	line	63
  1708                           	
  1709  01B2                     l5895:	
  1710                           ;myMain.c: 62: {
  1711                           ;myMain.c: 63: TMain->Count1=0;
  1712  01B2  0862               	movf	(_TMain),w
  1713  01B3  3E05               	addlw	05h
  1714  01B4  0086               	movwf	fsr1l
  1715  01B5  0187               	clrf fsr1h	
  1716                           	
  1717  01B6  3000               	movlw	low(0)
  1718  01B7  3FC0               	movwi	[0]fsr1
  1719  01B8  3000               	movlw	high(0)
  1720  01B9  3FC1               	movwi	[1]fsr1
  1721                           	line	64
  1722                           	
  1723  01BA                     l5897:	
  1724                           ;myMain.c: 64: RA2=~RA2;
  1725  01BA  3004               	movlw	1<<((98)&7)
  1726  01BB  068C               	xorwf	((98)/8),f
  1727  01BC  29BE               	goto	l5901
  1728                           	line	78
  1729                           	
  1730  01BD                     l5899:	
  1731  01BD  29BE               	goto	l5901
  1732                           	line	82
  1733                           ;myMain.c: 79: {
  1734                           	
  1735  01BE                     l1046:	
  1736                           	line	84
  1737                           	
  1738  01BE                     l5901:	
  1739                           ;myMain.c: 82: }
  1740                           ;myMain.c: 84: if(TMain->Test)
  1741  01BE  0862               	movf	(_TMain),w
  1742  01BF  3E0C               	addlw	0Ch
  1743  01C0  0086               	movwf	fsr1l
  1744  01C1  0187               	clrf fsr1h	
  1745                           	
  1746  01C2  0801               	movf	indf1,w
  1747  01C3  3A00               	xorlw	0&0ffh
  1748  01C4  1903               	skipnz
  1749  01C5  29C7               	goto	u4711
  1750  01C6  29C8               	goto	u4710
  1751  01C7                     u4711:
  1752  01C7  29FC               	goto	l5911
  1753  01C8                     u4710:
  1754                           	line	86
  1755                           	
  1756  01C8                     l5903:	
  1757                           ;myMain.c: 85: {
  1758                           ;myMain.c: 86: setSegmentDisplayNumber(I2C->BufferReader[I2C->Count]);
  1759  01C8  083A               	movf	(_I2C),w
  1760  01C9  3E40               	addlw	040h
  1761  01CA  0086               	movwf	fsr1l
  1762  01CB  3001               	movlw 1	; select bank2/3
  1763  01CC  0087               	movwf fsr1h	
  1764                           	
  1765  01CD  0801               	movf	indf1,w
  1766  01CE  073A               	addwf	(_I2C),w
  1767  01CF  00D8               	movwf	(??_MainT+0)+0
  1768  01D0  0858               	movf	0+(??_MainT+0)+0,w
  1769  01D1  0086               	movwf	fsr1l
  1770  01D2  3001               	movlw 1	; select bank2/3
  1771  01D3  0087               	movwf fsr1h	
  1772                           	
  1773  01D4  0801               	movf	indf1,w
  1774  01D5  00D9               	movwf	(??_MainT+1)+0
  1775  01D6  01DA               	clrf	(??_MainT+1)+0+1
  1776  01D7  0859               	movf	0+(??_MainT+1)+0,w
  1777  01D8  00D2               	movwf	(?_setSegmentDisplayNumber)
  1778  01D9  085A               	movf	1+(??_MainT+1)+0,w
  1779  01DA  00D3               	movwf	(?_setSegmentDisplayNumber+1)
  1780  01DB  3180  201B  3181   	fcall	_setSegmentDisplayNumber
  1781                           	line	87
  1782                           	
  1783  01DE                     l5905:	
  1784                           ;myMain.c: 87: I2C->Count++;
  1785  01DE  3001               	movlw	(01h)
  1786  01DF  0020               	movlb 0	; select bank0
  1787  01E0  00D8               	movwf	(??_MainT+0)+0
  1788  01E1  083A               	movf	(_I2C),w
  1789  01E2  3E40               	addlw	040h
  1790  01E3  0086               	movwf	fsr1l
  1791  01E4  3001               	movlw 1	; select bank2/3
  1792  01E5  0087               	movwf fsr1h	
  1793                           	
  1794  01E6  0858               	movf	(??_MainT+0)+0,w
  1795  01E7  0781               	addwf	indf1,f
  1796                           	line	88
  1797                           	
  1798  01E8                     l5907:	
  1799                           ;myMain.c: 88: if(I2C->Count==32)
  1800  01E8  083A               	movf	(_I2C),w
  1801  01E9  3E40               	addlw	040h
  1802  01EA  0086               	movwf	fsr1l
  1803  01EB  3001               	movlw 1	; select bank2/3
  1804  01EC  0087               	movwf fsr1h	
  1805                           	
  1806  01ED  0801               	movf	indf1,w
  1807  01EE  3A20               	xorlw	020h&0ffh
  1808  01EF  1D03               	skipz
  1809  01F0  29F2               	goto	u4721
  1810  01F1  29F3               	goto	u4720
  1811  01F2                     u4721:
  1812  01F2  29FC               	goto	l5911
  1813  01F3                     u4720:
  1814                           	line	90
  1815                           	
  1816  01F3                     l5909:	
  1817                           ;myMain.c: 89: {
  1818                           ;myMain.c: 90: I2C->Count=0;
  1819  01F3  083A               	movf	(_I2C),w
  1820  01F4  3E40               	addlw	040h
  1821  01F5  0086               	movwf	fsr1l
  1822  01F6  3001               	movlw 1	; select bank2/3
  1823  01F7  0087               	movwf fsr1h	
  1824                           	
  1825  01F8  0181               	clrf	indf1
  1826  01F9  29FC               	goto	l5911
  1827                           	line	91
  1828                           	
  1829  01FA                     l1048:	
  1830  01FA  29FC               	goto	l5911
  1831                           	line	92
  1832                           	
  1833  01FB                     l1047:	
  1834  01FB  29FC               	goto	l5911
  1835                           	line	105
  1836                           	
  1837  01FC                     l1045:	
  1838                           	line	108
  1839                           	
  1840  01FC                     l5911:	
  1841                           ;myMain.c: 91: }
  1842                           ;myMain.c: 92: }
  1843                           ;myMain.c: 105: }
  1844                           ;myMain.c: 108: TMain->Count2++;
  1845  01FC  0862               	movf	(_TMain),w
  1846  01FD  3E07               	addlw	07h
  1847  01FE  0086               	movwf	fsr1l
  1848  01FF  0187               	clrf fsr1h	
  1849                           	
  1850  0200  3001               	movlw	01h
  1851  0201  0781               	addwf	indf1,f
  1852  0202  3141               	addfsr	fsr1,1
  1853  0203  1803               	skipnc
  1854  0204  0A81               	incf	indf1,f
  1855                           	line	109
  1856                           	
  1857  0205                     l5913:	
  1858                           ;myMain.c: 109: if(TMain->Count2 == 2000)
  1859  0205  0862               	movf	(_TMain),w
  1860  0206  3E07               	addlw	07h
  1861  0207  0086               	movwf	fsr1l
  1862  0208  0187               	clrf fsr1h	
  1863                           	
  1864  0209  3F40               	moviw	[0]fsr1
  1865  020A  3AD0               	xorlw	low(07D0h)
  1866  020B  1D03               	skipz
  1867  020C  2A0F               	goto	u4735
  1868  020D  3F41               	moviw	[1]fsr1
  1869  020E  3A07               	xorlw	high(07D0h)
  1870  020F                     u4735:
  1871  020F  1D03               	skipz
  1872  0210  2A12               	goto	u4731
  1873  0211  2A13               	goto	u4730
  1874  0212                     u4731:
  1875  0212  2A1D               	goto	l1050
  1876  0213                     u4730:
  1877                           	line	111
  1878                           	
  1879  0213                     l5915:	
  1880                           ;myMain.c: 110: {
  1881                           ;myMain.c: 111: TMain->Count2=0;
  1882  0213  0862               	movf	(_TMain),w
  1883  0214  3E07               	addlw	07h
  1884  0215  0086               	movwf	fsr1l
  1885  0216  0187               	clrf fsr1h	
  1886                           	
  1887  0217  3000               	movlw	low(0)
  1888  0218  3FC0               	movwi	[0]fsr1
  1889  0219  3000               	movlw	high(0)
  1890  021A  3FC1               	movwi	[1]fsr1
  1891  021B  2A1D               	goto	l1050
  1892                           	line	124
  1893                           	
  1894  021C                     l1049:	
  1895  021C  2A1D               	goto	l1050
  1896                           	line	127
  1897                           	
  1898  021D                     l1044:	
  1899                           	line	128
  1900                           	
  1901  021D                     l1050:	
  1902  021D  0008               	return
  1903                           	opt stack 0
  1904                           GLOBAL	__end_of_MainT
  1905  021E                     	__end_of_MainT:
  1906 ;; =============== function _MainT ends ============
  1907                           
  1908                           	signat	_MainT,88
  1909                           	global	_printf
  1910                           psect	text915,local,class=CODE,delta=2
  1911                           global __ptext915
  1912  021E                     __ptext915:
  1913                           
  1914 ;; *************** function _printf *****************
  1915 ;; Defined at:
  1916 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  f               1    wreg     PTR const unsigned char 
  1919 ;;		 -> STR_4(3), STR_3(6), STR_2(2), STR_1(14), 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  f               1   13[BANK0 ] PTR const unsigned char 
  1922 ;;		 -> STR_4(3), STR_3(6), STR_2(2), STR_1(14), 
  1923 ;;  _val            4    9[BANK0 ] struct .
  1924 ;;  c               1   15[BANK0 ] char 
  1925 ;;  prec            1   14[BANK0 ] char 
  1926 ;;  ap              1    8[BANK0 ] PTR void [1]
  1927 ;;		 -> ?_printf(2), 
  1928 ;;  flag            1    7[BANK0 ] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    3[BANK0 ] int 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1938 ;;      Params:         0       2       0       0       0       0       0       0
  1939 ;;      Locals:         0       9       0       0       0       0       0       0
  1940 ;;      Temps:          0       2       0       0       0       0       0       0
  1941 ;;      Totals:         0      13       0       0       0       0       0       0
  1942 ;;Total ram usage:       13 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    3
  1945 ;; This function calls:
  1946 ;;		_putch
  1947 ;;		___lwdiv
  1948 ;; This function is called by:
  1949 ;;		_UART_Transmit
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           psect	text915
  1953                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  1954                           	line	461
  1955                           	global	__size_of_printf
  1956  00AB                     	__size_of_printf	equ	__end_of_printf-_printf
  1957                           	
  1958  021E                     _printf:	
  1959                           	opt	stack 10
  1960                           ; Regs used in _printf: [wreg-status,0+pclath+cstack]
  1961                           ;printf@f stored from wreg
  1962                           	line	537
  1963  021E  0020               	movlb 0	; select bank0
  1964  021F  00DB               	movwf	(printf@f)
  1965                           	
  1966  0220                     l5845:	
  1967  0220  3051               	movlw	(?_printf)&0ffh
  1968  0221  00D3               	movwf	(??_printf+0)+0
  1969  0222  0853               	movf	(??_printf+0)+0,w
  1970  0223  00D6               	movwf	(printf@ap)
  1971                           	line	540
  1972  0224  2AB6               	goto	l5881
  1973                           	
  1974  0225                     l3329:	
  1975                           	line	542
  1976                           	
  1977  0225                     l5847:	
  1978  0225  085D               	movf	(printf@c),w
  1979  0226  3A25               	xorlw	025h&0ffh
  1980  0227  1903               	skipnz
  1981  0228  2A2A               	goto	u4621
  1982  0229  2A2B               	goto	u4620
  1983  022A                     u4621:
  1984  022A  2A30               	goto	l3330
  1985  022B                     u4620:
  1986                           	line	545
  1987                           	
  1988  022B                     l5849:	
  1989  022B  085D               	movf	(printf@c),w
  1990  022C  318F  279D  3182   	fcall	_putch
  1991                           	line	546
  1992  022F  2AB6               	goto	l5881
  1993                           	line	547
  1994                           	
  1995  0230                     l3330:	
  1996                           	line	552
  1997  0230  01D5               	clrf	(printf@flag)
  1998                           	line	638
  1999  0231  2A36               	goto	l5853
  2000                           	line	640
  2001                           	
  2002  0232                     l3332:	
  2003                           	line	641
  2004  0232  2AC8               	goto	l3344
  2005                           	line	721
  2006                           	
  2007  0233                     l3334:	
  2008                           	line	726
  2009  0233  2A45               	goto	l5855
  2010                           	line	805
  2011                           	
  2012  0234                     l3336:	
  2013                           	line	816
  2014  0234  2AB6               	goto	l5881
  2015                           	line	825
  2016                           	
  2017  0235                     l5851:	
  2018  0235  2A45               	goto	l5855
  2019                           	line	638
  2020                           	
  2021  0236                     l3331:	
  2022                           	
  2023  0236                     l5853:	
  2024  0236  3001               	movlw	01h
  2025  0237  07DB               	addwf	(printf@f),f
  2026  0238  30FF               	movlw	-01h
  2027  0239  075B               	addwf	(printf@f),w
  2028  023A  3187               	movlp	high __stringtab
  2029  023B  000A               	callw
  2030  023C  3182               	pagesel	$
  2031  023D  00DD               	movwf	(printf@c)
  2032                           	; Switch size 1, requested type "space"
  2033                           ; Number of cases is 2, Range of values is 0 to 120
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte            7     4 (average)
  2037                           ; direct_byte          248     6 (fixed)
  2038                           ; jumptable            260     6 (fixed)
  2039                           ; rangetable           125     4 (fixed)
  2040                           ; spacedrange          247     6 (fixed)
  2041                           ; locatedrange         121     3 (fixed)
  2042                           ;	Chosen strategy is simple_byte
  2043                           
  2044                           	opt asmopt_off
  2045  023E  3A00               	xorlw	0^0	; case 0
  2046  023F  1903               	skipnz
  2047  0240  2AC8               	goto	l3344
  2048  0241  3A78               	xorlw	120^0	; case 120
  2049  0242  1903               	skipnz
  2050  0243  2A45               	goto	l5855
  2051  0244  2AB6               	goto	l5881
  2052                           	opt asmopt_on
  2053                           
  2054                           	line	825
  2055                           	
  2056  0245                     l3335:	
  2057                           	line	1281
  2058                           	
  2059  0245                     l5855:	
  2060  0245  0856               	movf	(printf@ap),w
  2061  0246  0086               	movwf	fsr1l
  2062  0247  0187               	clrf fsr1h	
  2063                           	
  2064  0248  3F40               	moviw	[0]fsr1
  2065  0249  00D7               	movwf	(printf@_val)
  2066  024A  3F41               	moviw	[1]fsr1
  2067  024B  00D8               	movwf	(printf@_val+1)
  2068                           	
  2069  024C                     l5857:	
  2070  024C  3002               	movlw	(02h)
  2071  024D  00D3               	movwf	(??_printf+0)+0
  2072  024E  0853               	movf	(??_printf+0)+0,w
  2073  024F  07D6               	addwf	(printf@ap),f
  2074                           	line	1311
  2075                           	
  2076  0250                     l5859:	
  2077  0250  01DD               	clrf	(printf@c)
  2078  0251  1403               	bsf	status,0
  2079  0252  0DDD               	rlf	(printf@c),f
  2080                           	
  2081  0253                     l5861:	
  2082  0253  085D               	movf	(printf@c),w
  2083  0254  3A04               	xorlw	04h&0ffh
  2084  0255  1D03               	skipz
  2085  0256  2A58               	goto	u4631
  2086  0257  2A59               	goto	u4630
  2087  0258                     u4631:
  2088  0258  2A5B               	goto	l5865
  2089  0259                     u4630:
  2090  0259  2A7F               	goto	l5873
  2091                           	
  2092  025A                     l5863:	
  2093  025A  2A7F               	goto	l5873
  2094                           	line	1312
  2095                           	
  2096  025B                     l3337:	
  2097                           	
  2098  025B                     l5865:	
  2099  025B  3001               	movlw	low(_hexpowers|8000h)
  2100  025C  0084               	movwf	fsr0l
  2101  025D  3087               	movlw	high(_hexpowers|8000h)
  2102  025E  0085               	movwf	fsr0h
  2103  025F  085D               	movf	(printf@c),w
  2104  0260  0709               	addwf	wreg,w
  2105  0261  0784               	addwf	fsr0l,f
  2106  0262  1803               	skipnc
  2107  0263  0A85               	incf	fsr0h,f
  2108  0264  3F00               	moviw	[0]fsr0
  2109  0265  00D3               	movwf	(??_printf+0)+0
  2110  0266  3F01               	moviw	[1]fsr0
  2111  0267  00D4               	movwf	(??_printf+0)+0+1
  2112  0268  0854               	movf	1+(??_printf+0)+0,w
  2113  0269  0258               	subwf	(printf@_val+1),w
  2114  026A  1D03               	skipz
  2115  026B  2A6E               	goto	u4645
  2116  026C  0853               	movf	0+(??_printf+0)+0,w
  2117  026D  0257               	subwf	(printf@_val),w
  2118  026E                     u4645:
  2119  026E  1803               	skipnc
  2120  026F  2A71               	goto	u4641
  2121  0270  2A72               	goto	u4640
  2122  0271                     u4641:
  2123  0271  2A74               	goto	l5869
  2124  0272                     u4640:
  2125  0272  2A7F               	goto	l5873
  2126                           	line	1313
  2127                           	
  2128  0273                     l5867:	
  2129  0273  2A7F               	goto	l5873
  2130                           	
  2131  0274                     l3339:	
  2132                           	line	1311
  2133                           	
  2134  0274                     l5869:	
  2135  0274  3001               	movlw	(01h)
  2136  0275  00D3               	movwf	(??_printf+0)+0
  2137  0276  0853               	movf	(??_printf+0)+0,w
  2138  0277  07DD               	addwf	(printf@c),f
  2139                           	
  2140  0278                     l5871:	
  2141  0278  085D               	movf	(printf@c),w
  2142  0279  3A04               	xorlw	04h&0ffh
  2143  027A  1D03               	skipz
  2144  027B  2A7D               	goto	u4651
  2145  027C  2A7E               	goto	u4650
  2146  027D                     u4651:
  2147  027D  2A5B               	goto	l5865
  2148  027E                     u4650:
  2149  027E  2A7F               	goto	l5873
  2150                           	
  2151  027F                     l3338:	
  2152                           	line	1467
  2153                           	
  2154  027F                     l5873:	
  2155  027F  085D               	movf	(printf@c),w
  2156  0280  00D3               	movwf	(??_printf+0)+0
  2157  0281  0853               	movf	(??_printf+0)+0,w
  2158  0282  00DC               	movwf	(printf@prec)
  2159                           	line	1469
  2160  0283  2AA9               	goto	l5879
  2161                           	
  2162  0284                     l3341:	
  2163                           	line	1499
  2164                           	
  2165  0284                     l5875:	
  2166  0284  3001               	movlw	low(_hexpowers|8000h)
  2167  0285  0084               	movwf	fsr0l
  2168  0286  3087               	movlw	high(_hexpowers|8000h)
  2169  0287  0085               	movwf	fsr0h
  2170  0288  085C               	movf	(printf@prec),w
  2171  0289  0709               	addwf	wreg,w
  2172  028A  0784               	addwf	fsr0l,f
  2173  028B  1803               	skipnc
  2174  028C  0A85               	incf	fsr0h,f
  2175  028D  3F00               	moviw	[0]fsr0
  2176  028E  00F3               	movwf	(?___lwdiv)
  2177  028F  3F01               	moviw	[1]fsr0
  2178  0290  00F4               	movwf	(?___lwdiv+1)
  2179  0291  0858               	movf	(printf@_val+1),w
  2180  0292  01F6               	clrf	1+(?___lwdiv)+02h
  2181  0293  07F6               	addwf	1+(?___lwdiv)+02h
  2182  0294  0857               	movf	(printf@_val),w
  2183  0295  01F5               	clrf	0+(?___lwdiv)+02h
  2184  0296  07F5               	addwf	0+(?___lwdiv)+02h
  2185                           
  2186  0297  3185  25CC  3182   	fcall	___lwdiv
  2187  029A  0873               	movf	(0+(?___lwdiv)),w
  2188  029B  390F               	andlw	0Fh
  2189  029C  3E09               	addlw	low(STR_5|8000h)
  2190  029D  3187               	movlp	high __stringtab
  2191  029E  000A               	callw
  2192  029F  3182               	pagesel	$
  2193  02A0  0020               	movlb 0	; select bank0
  2194  02A1  00D3               	movwf	(??_printf+0)+0
  2195  02A2  0853               	movf	(??_printf+0)+0,w
  2196  02A3  00DD               	movwf	(printf@c)
  2197                           	line	1516
  2198                           	
  2199  02A4                     l5877:	
  2200  02A4  085D               	movf	(printf@c),w
  2201  02A5  318F  279D  3182   	fcall	_putch
  2202  02A8  2AA9               	goto	l5879
  2203                           	line	1517
  2204                           	
  2205  02A9                     l3340:	
  2206                           	line	1469
  2207                           	
  2208  02A9                     l5879:	
  2209  02A9  30FF               	movlw	(-1)
  2210  02AA  0020               	movlb 0	; select bank0
  2211  02AB  00D3               	movwf	(??_printf+0)+0
  2212  02AC  0853               	movf	(??_printf+0)+0,w
  2213  02AD  07DC               	addwf	(printf@prec),f
  2214  02AE  085C               	movf	((printf@prec)),w
  2215  02AF  3AFF               	xorlw	-1&0ffh
  2216  02B0  1D03               	skipz
  2217  02B1  2AB3               	goto	u4661
  2218  02B2  2AB4               	goto	u4660
  2219  02B3                     u4661:
  2220  02B3  2A84               	goto	l5875
  2221  02B4                     u4660:
  2222  02B4  2AB6               	goto	l5881
  2223                           	
  2224  02B5                     l3342:	
  2225  02B5  2AB6               	goto	l5881
  2226                           	line	1525
  2227                           	
  2228  02B6                     l3328:	
  2229                           	line	540
  2230                           	
  2231  02B6                     l5881:	
  2232  02B6  3001               	movlw	01h
  2233  02B7  0020               	movlb 0	; select bank0
  2234  02B8  07DB               	addwf	(printf@f),f
  2235  02B9  30FF               	movlw	-01h
  2236  02BA  075B               	addwf	(printf@f),w
  2237  02BB  3187               	movlp	high __stringtab
  2238  02BC  000A               	callw
  2239  02BD  3182               	pagesel	$
  2240  02BE  00D3               	movwf	(??_printf+0)+0
  2241  02BF  0853               	movf	(??_printf+0)+0,w
  2242  02C0  00DD               	movwf	(printf@c)
  2243  02C1  08DD               	movf	((printf@c)),f
  2244  02C2  1D03               	skipz
  2245  02C3  2AC5               	goto	u4671
  2246  02C4  2AC6               	goto	u4670
  2247  02C5                     u4671:
  2248  02C5  2A25               	goto	l5847
  2249  02C6                     u4670:
  2250  02C6  2AC8               	goto	l3344
  2251                           	
  2252  02C7                     l3343:	
  2253  02C7  2AC8               	goto	l3344
  2254                           	line	1527
  2255                           	
  2256  02C8                     l3333:	
  2257                           	line	1533
  2258                           ;	Return value of _printf is never used
  2259                           	
  2260  02C8                     l3344:	
  2261  02C8  0008               	return
  2262                           	opt stack 0
  2263                           GLOBAL	__end_of_printf
  2264  02C9                     	__end_of_printf:
  2265 ;; =============== function _printf ends ============
  2266                           
  2267                           	signat	_printf,602
  2268                           	global	_setSegmentDisplayNumber
  2269                           psect	text916,local,class=CODE,delta=2
  2270                           global __ptext916
  2271  001B                     __ptext916:
  2272                           
  2273 ;; *************** function _setSegmentDisplayNumber *****************
  2274 ;; Defined at:
  2275 ;;		line 21 in file "I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  number          2    4[BANK0 ] int 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  i               1    9[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;		None               void
  2282 ;; Registers used:
  2283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2289 ;;      Params:         0       2       0       0       0       0       0       0
  2290 ;;      Locals:         0       1       0       0       0       0       0       0
  2291 ;;      Temps:          0       3       0       0       0       0       0       0
  2292 ;;      Totals:         0       6       0       0       0       0       0       0
  2293 ;;Total ram usage:        6 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    3
  2296 ;; This function calls:
  2297 ;;		___awdiv
  2298 ;;		___awmod
  2299 ;; This function is called by:
  2300 ;;		_MainT
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           psect	text916
  2304                           	file	"I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  2305                           	line	21
  2306                           	global	__size_of_setSegmentDisplayNumber
  2307  0153                     	__size_of_setSegmentDisplayNumber	equ	__end_of_setSegmentDisplayNumber-_setSegmentDispl
                                 ayNumber
  2308                           	
  2309  001B                     _setSegmentDisplayNumber:	
  2310                           	opt	stack 11
  2311                           ; Regs used in _setSegmentDisplayNumber: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  2312                           	line	23
  2313                           	
  2314  001B                     l5793:	
  2315                           ;SegmentDisplay_A2.c: 22: char i;
  2316                           ;SegmentDisplay_A2.c: 23: if(Segment->Enable)
  2317  001B  0020               	movlb 0	; select bank0
  2318  001C  083B               	movf	(_Segment),w
  2319  001D  3E15               	addlw	015h
  2320  001E  0086               	movwf	fsr1l
  2321  001F  0187               	clrf fsr1h	
  2322                           	
  2323  0020  1C01               	btfss	indf1,0
  2324  0021  2823               	goto	u4511
  2325  0022  2824               	goto	u4510
  2326  0023                     u4511:
  2327  0023  296D               	goto	l2080
  2328  0024                     u4510:
  2329                           	line	25
  2330                           	
  2331  0024                     l5795:	
  2332                           ;SegmentDisplay_A2.c: 24: {
  2333                           ;SegmentDisplay_A2.c: 25: Segment->GO=1;
  2334  0024  083B               	movf	(_Segment),w
  2335  0025  3E15               	addlw	015h
  2336  0026  0086               	movwf	fsr1l
  2337  0027  0187               	clrf fsr1h	
  2338                           	
  2339  0028  1481               	bsf	indf1,1
  2340                           	line	26
  2341                           ;SegmentDisplay_A2.c: 26: if(Segment->Hex)
  2342  0029  083B               	movf	(_Segment),w
  2343  002A  3E15               	addlw	015h
  2344  002B  0086               	movwf	fsr1l
  2345  002C  0187               	clrf fsr1h	
  2346                           	
  2347  002D  1D01               	btfss	indf1,2
  2348  002E  2830               	goto	u4521
  2349  002F  2831               	goto	u4520
  2350  0030                     u4521:
  2351  0030  286C               	goto	l5803
  2352  0031                     u4520:
  2353                           	line	28
  2354                           	
  2355  0031                     l5797:	
  2356                           ;SegmentDisplay_A2.c: 27: {
  2357                           ;SegmentDisplay_A2.c: 28: Segment->Num[0]=(number & 0x000f);
  2358  0031  0852               	movf	(setSegmentDisplayNumber@number),w
  2359  0032  390F               	andlw	0Fh
  2360  0033  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2361  0034  083B               	movf	(_Segment),w
  2362  0035  3E11               	addlw	011h
  2363  0036  0086               	movwf	fsr1l
  2364  0037  0187               	clrf fsr1h	
  2365                           	
  2366  0038  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2367  0039  0081               	movwf	indf1
  2368                           	line	29
  2369                           	
  2370  003A                     l5799:	
  2371                           ;SegmentDisplay_A2.c: 29: Segment->Num[1]=((number>>4)&0x000f);
  2372  003A  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2373  003B  00D5               	movwf	(??_setSegmentDisplayNumber+0)+0+1
  2374  003C  0852               	movf	(setSegmentDisplayNumber@number),w
  2375  003D  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2376  003E  3004               	movlw	04h
  2377  003F  00FF               	movwf	btemp+1
  2378  0040                     u4535:
  2379  0040  0D55               	rlf	(??_setSegmentDisplayNumber+0)+1,w
  2380  0041  0CD5               	rrf	(??_setSegmentDisplayNumber+0)+1,f
  2381  0042  0CD4               	rrf	(??_setSegmentDisplayNumber+0)+0,f
  2382  0043  0BFF               	decfsz	btemp+1,f
  2383  0044  2840               	goto	u4535
  2384  0045  0854               	movf	0+(??_setSegmentDisplayNumber+0)+0,w
  2385  0046  390F               	andlw	0Fh
  2386  0047  00D6               	movwf	(??_setSegmentDisplayNumber+2)+0
  2387  0048  083B               	movf	(_Segment),w
  2388  0049  3E12               	addlw	012h
  2389  004A  0086               	movwf	fsr1l
  2390  004B  0187               	clrf fsr1h	
  2391                           	
  2392  004C  0856               	movf	(??_setSegmentDisplayNumber+2)+0,w
  2393  004D  0081               	movwf	indf1
  2394                           	line	30
  2395                           	
  2396  004E                     l5801:	
  2397                           ;SegmentDisplay_A2.c: 30: Segment->Num[2]=((number>>8)&0x000f);
  2398  004E  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2399  004F  390F               	andlw	0Fh
  2400  0050  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2401  0051  083B               	movf	(_Segment),w
  2402  0052  3E13               	addlw	013h
  2403  0053  0086               	movwf	fsr1l
  2404  0054  0187               	clrf fsr1h	
  2405                           	
  2406  0055  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2407  0056  0081               	movwf	indf1
  2408                           	line	31
  2409                           ;SegmentDisplay_A2.c: 31: Segment->Num[3]=((number>>12)&0x000f);
  2410  0057  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2411  0058  00D5               	movwf	(??_setSegmentDisplayNumber+0)+0+1
  2412  0059  0852               	movf	(setSegmentDisplayNumber@number),w
  2413  005A  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2414  005B  300C               	movlw	0Ch
  2415  005C  00FF               	movwf	btemp+1
  2416  005D                     u4545:
  2417  005D  0D55               	rlf	(??_setSegmentDisplayNumber+0)+1,w
  2418  005E  0CD5               	rrf	(??_setSegmentDisplayNumber+0)+1,f
  2419  005F  0CD4               	rrf	(??_setSegmentDisplayNumber+0)+0,f
  2420  0060  0BFF               	decfsz	btemp+1,f
  2421  0061  285D               	goto	u4545
  2422  0062  0854               	movf	0+(??_setSegmentDisplayNumber+0)+0,w
  2423  0063  390F               	andlw	0Fh
  2424  0064  00D6               	movwf	(??_setSegmentDisplayNumber+2)+0
  2425  0065  083B               	movf	(_Segment),w
  2426  0066  3E14               	addlw	014h
  2427  0067  0086               	movwf	fsr1l
  2428  0068  0187               	clrf fsr1h	
  2429                           	
  2430  0069  0856               	movf	(??_setSegmentDisplayNumber+2)+0,w
  2431  006A  0081               	movwf	indf1
  2432                           	line	32
  2433                           ;SegmentDisplay_A2.c: 32: }
  2434  006B  292C               	goto	l5831
  2435                           	line	33
  2436                           	
  2437  006C                     l2067:	
  2438                           	
  2439  006C                     l5803:	
  2440                           ;SegmentDisplay_A2.c: 33: else if(Segment->Dec)
  2441  006C  083B               	movf	(_Segment),w
  2442  006D  3E15               	addlw	015h
  2443  006E  0086               	movwf	fsr1l
  2444  006F  0187               	clrf fsr1h	
  2445                           	
  2446  0070  1D81               	btfss	indf1,3
  2447  0071  2873               	goto	u4551
  2448  0072  2874               	goto	u4550
  2449  0073                     u4551:
  2450  0073  292C               	goto	l5831
  2451  0074                     u4550:
  2452                           	line	35
  2453                           	
  2454  0074                     l5805:	
  2455                           ;SegmentDisplay_A2.c: 34: {
  2456                           ;SegmentDisplay_A2.c: 35: if(number > 0x270f)
  2457  0074  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2458  0075  3A80               	xorlw	80h
  2459  0076  00FF               	movwf	btemp+1
  2460  0077  30A7               	movlw	(high(02710h))^80h
  2461  0078  027F               	subwf	btemp+1,w
  2462  0079  1D03               	skipz
  2463  007A  287D               	goto	u4565
  2464  007B  3010               	movlw	low(02710h)
  2465  007C  0252               	subwf	(setSegmentDisplayNumber@number),w
  2466  007D                     u4565:
  2467                           
  2468  007D  1C03               	skipc
  2469  007E  2880               	goto	u4561
  2470  007F  2881               	goto	u4560
  2471  0080                     u4561:
  2472  0080  28A2               	goto	l5819
  2473  0081                     u4560:
  2474                           	line	37
  2475                           	
  2476  0081                     l5807:	
  2477                           ;SegmentDisplay_A2.c: 36: {
  2478                           ;SegmentDisplay_A2.c: 37: for(i=0 ; i<4; i++)
  2479  0081  0020               	movlb 0	; select bank0
  2480  0082  01D7               	clrf	(setSegmentDisplayNumber@i)
  2481                           	
  2482  0083                     l5809:	
  2483  0083  3004               	movlw	(04h)
  2484  0084  0257               	subwf	(setSegmentDisplayNumber@i),w
  2485  0085  1C03               	skipc
  2486  0086  2888               	goto	u4571
  2487  0087  2889               	goto	u4570
  2488  0088                     u4571:
  2489  0088  288B               	goto	l5813
  2490  0089                     u4570:
  2491  0089  292C               	goto	l5831
  2492                           	
  2493  008A                     l5811:	
  2494  008A  292C               	goto	l5831
  2495                           	line	38
  2496                           	
  2497  008B                     l2071:	
  2498                           	line	39
  2499                           	
  2500  008B                     l5813:	
  2501                           ;SegmentDisplay_A2.c: 38: {
  2502                           ;SegmentDisplay_A2.c: 39: Segment->Num[i]=16;
  2503  008B  3010               	movlw	(010h)
  2504  008C  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2505  008D  0857               	movf	(setSegmentDisplayNumber@i),w
  2506  008E  3E11               	addlw	011h
  2507  008F  073B               	addwf	(_Segment),w
  2508  0090  00D5               	movwf	(??_setSegmentDisplayNumber+1)+0
  2509  0091  0855               	movf	0+(??_setSegmentDisplayNumber+1)+0,w
  2510  0092  0086               	movwf	fsr1l
  2511  0093  0187               	clrf fsr1h	
  2512                           	
  2513  0094  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2514  0095  0081               	movwf	indf1
  2515                           	line	37
  2516                           	
  2517  0096                     l5815:	
  2518  0096  3001               	movlw	(01h)
  2519  0097  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2520  0098  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2521  0099  07D7               	addwf	(setSegmentDisplayNumber@i),f
  2522                           	
  2523  009A                     l5817:	
  2524  009A  3004               	movlw	(04h)
  2525  009B  0257               	subwf	(setSegmentDisplayNumber@i),w
  2526  009C  1C03               	skipc
  2527  009D  289F               	goto	u4581
  2528  009E  28A0               	goto	u4580
  2529  009F                     u4581:
  2530  009F  288B               	goto	l5813
  2531  00A0                     u4580:
  2532  00A0  292C               	goto	l5831
  2533                           	
  2534  00A1                     l2072:	
  2535                           	line	41
  2536                           ;SegmentDisplay_A2.c: 40: }
  2537                           ;SegmentDisplay_A2.c: 41: }
  2538  00A1  292C               	goto	l5831
  2539                           	line	42
  2540                           	
  2541  00A2                     l2070:	
  2542                           	line	44
  2543                           	
  2544  00A2                     l5819:	
  2545                           ;SegmentDisplay_A2.c: 42: else
  2546                           ;SegmentDisplay_A2.c: 43: {
  2547                           ;SegmentDisplay_A2.c: 44: Segment->Num[3]=(number/1000);
  2548  00A2  30E8               	movlw	low(03E8h)
  2549  00A3  00F3               	movwf	(?___awdiv)
  2550  00A4  3003               	movlw	high(03E8h)
  2551  00A5  00F4               	movwf	((?___awdiv))+1
  2552  00A6  0020               	movlb 0	; select bank0
  2553  00A7  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2554  00A8  01F6               	clrf	1+(?___awdiv)+02h
  2555  00A9  07F6               	addwf	1+(?___awdiv)+02h
  2556  00AA  0852               	movf	(setSegmentDisplayNumber@number),w
  2557  00AB  01F5               	clrf	0+(?___awdiv)+02h
  2558  00AC  07F5               	addwf	0+(?___awdiv)+02h
  2559                           
  2560  00AD  3184  2456  3180   	fcall	___awdiv
  2561  00B0  0873               	movf	(0+(?___awdiv)),w
  2562  00B1  0020               	movlb 0	; select bank0
  2563  00B2  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2564  00B3  083B               	movf	(_Segment),w
  2565  00B4  3E14               	addlw	014h
  2566  00B5  0086               	movwf	fsr1l
  2567  00B6  0187               	clrf fsr1h	
  2568                           	
  2569  00B7  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2570  00B8  0081               	movwf	indf1
  2571                           	line	45
  2572                           	
  2573  00B9                     l5821:	
  2574                           ;SegmentDisplay_A2.c: 45: number%=1000;
  2575  00B9  30E8               	movlw	low(03E8h)
  2576  00BA  00F3               	movwf	(?___awmod)
  2577  00BB  3003               	movlw	high(03E8h)
  2578  00BC  00F4               	movwf	((?___awmod))+1
  2579  00BD  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2580  00BE  01F6               	clrf	1+(?___awmod)+02h
  2581  00BF  07F6               	addwf	1+(?___awmod)+02h
  2582  00C0  0852               	movf	(setSegmentDisplayNumber@number),w
  2583  00C1  01F5               	clrf	0+(?___awmod)+02h
  2584  00C2  07F5               	addwf	0+(?___awmod)+02h
  2585                           
  2586  00C3  3184  24C3  3180   	fcall	___awmod
  2587  00C6  0874               	movf	(1+(?___awmod)),w
  2588  00C7  0020               	movlb 0	; select bank0
  2589  00C8  01D3               	clrf	(setSegmentDisplayNumber@number+1)
  2590  00C9  07D3               	addwf	(setSegmentDisplayNumber@number+1)
  2591  00CA  0873               	movf	(0+(?___awmod)),w
  2592  00CB  01D2               	clrf	(setSegmentDisplayNumber@number)
  2593  00CC  07D2               	addwf	(setSegmentDisplayNumber@number)
  2594                           
  2595                           	line	46
  2596                           	
  2597  00CD                     l5823:	
  2598                           ;SegmentDisplay_A2.c: 46: Segment->Num[2]=(number/100);
  2599  00CD  3064               	movlw	low(064h)
  2600  00CE  00F3               	movwf	(?___awdiv)
  2601  00CF  3000               	movlw	high(064h)
  2602  00D0  00F4               	movwf	((?___awdiv))+1
  2603  00D1  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2604  00D2  01F6               	clrf	1+(?___awdiv)+02h
  2605  00D3  07F6               	addwf	1+(?___awdiv)+02h
  2606  00D4  0852               	movf	(setSegmentDisplayNumber@number),w
  2607  00D5  01F5               	clrf	0+(?___awdiv)+02h
  2608  00D6  07F5               	addwf	0+(?___awdiv)+02h
  2609                           
  2610  00D7  3184  2456  3180   	fcall	___awdiv
  2611  00DA  0873               	movf	(0+(?___awdiv)),w
  2612  00DB  0020               	movlb 0	; select bank0
  2613  00DC  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2614  00DD  083B               	movf	(_Segment),w
  2615  00DE  3E13               	addlw	013h
  2616  00DF  0086               	movwf	fsr1l
  2617  00E0  0187               	clrf fsr1h	
  2618                           	
  2619  00E1  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2620  00E2  0081               	movwf	indf1
  2621                           	line	47
  2622                           ;SegmentDisplay_A2.c: 47: number%=100;
  2623  00E3  3064               	movlw	low(064h)
  2624  00E4  00F3               	movwf	(?___awmod)
  2625  00E5  3000               	movlw	high(064h)
  2626  00E6  00F4               	movwf	((?___awmod))+1
  2627  00E7  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2628  00E8  01F6               	clrf	1+(?___awmod)+02h
  2629  00E9  07F6               	addwf	1+(?___awmod)+02h
  2630  00EA  0852               	movf	(setSegmentDisplayNumber@number),w
  2631  00EB  01F5               	clrf	0+(?___awmod)+02h
  2632  00EC  07F5               	addwf	0+(?___awmod)+02h
  2633                           
  2634  00ED  3184  24C3  3180   	fcall	___awmod
  2635  00F0  0874               	movf	(1+(?___awmod)),w
  2636  00F1  0020               	movlb 0	; select bank0
  2637  00F2  01D3               	clrf	(setSegmentDisplayNumber@number+1)
  2638  00F3  07D3               	addwf	(setSegmentDisplayNumber@number+1)
  2639  00F4  0873               	movf	(0+(?___awmod)),w
  2640  00F5  01D2               	clrf	(setSegmentDisplayNumber@number)
  2641  00F6  07D2               	addwf	(setSegmentDisplayNumber@number)
  2642                           
  2643                           	line	48
  2644                           	
  2645  00F7                     l5825:	
  2646                           ;SegmentDisplay_A2.c: 48: Segment->Num[1]=(number/10);
  2647  00F7  300A               	movlw	low(0Ah)
  2648  00F8  00F3               	movwf	(?___awdiv)
  2649  00F9  3000               	movlw	high(0Ah)
  2650  00FA  00F4               	movwf	((?___awdiv))+1
  2651  00FB  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2652  00FC  01F6               	clrf	1+(?___awdiv)+02h
  2653  00FD  07F6               	addwf	1+(?___awdiv)+02h
  2654  00FE  0852               	movf	(setSegmentDisplayNumber@number),w
  2655  00FF  01F5               	clrf	0+(?___awdiv)+02h
  2656  0100  07F5               	addwf	0+(?___awdiv)+02h
  2657                           
  2658  0101  3184  2456  3180   	fcall	___awdiv
  2659  0104  0873               	movf	(0+(?___awdiv)),w
  2660  0105  0020               	movlb 0	; select bank0
  2661  0106  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2662  0107  083B               	movf	(_Segment),w
  2663  0108  3E12               	addlw	012h
  2664  0109  0086               	movwf	fsr1l
  2665  010A  0187               	clrf fsr1h	
  2666                           	
  2667  010B  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2668  010C  0081               	movwf	indf1
  2669                           	line	49
  2670                           	
  2671  010D                     l5827:	
  2672                           ;SegmentDisplay_A2.c: 49: number%=10;
  2673  010D  300A               	movlw	low(0Ah)
  2674  010E  00F3               	movwf	(?___awmod)
  2675  010F  3000               	movlw	high(0Ah)
  2676  0110  00F4               	movwf	((?___awmod))+1
  2677  0111  0853               	movf	(setSegmentDisplayNumber@number+1),w
  2678  0112  01F6               	clrf	1+(?___awmod)+02h
  2679  0113  07F6               	addwf	1+(?___awmod)+02h
  2680  0114  0852               	movf	(setSegmentDisplayNumber@number),w
  2681  0115  01F5               	clrf	0+(?___awmod)+02h
  2682  0116  07F5               	addwf	0+(?___awmod)+02h
  2683                           
  2684  0117  3184  24C3  3180   	fcall	___awmod
  2685  011A  0874               	movf	(1+(?___awmod)),w
  2686  011B  0020               	movlb 0	; select bank0
  2687  011C  01D3               	clrf	(setSegmentDisplayNumber@number+1)
  2688  011D  07D3               	addwf	(setSegmentDisplayNumber@number+1)
  2689  011E  0873               	movf	(0+(?___awmod)),w
  2690  011F  01D2               	clrf	(setSegmentDisplayNumber@number)
  2691  0120  07D2               	addwf	(setSegmentDisplayNumber@number)
  2692                           
  2693                           	line	50
  2694                           	
  2695  0121                     l5829:	
  2696                           ;SegmentDisplay_A2.c: 50: Segment->Num[0]=number;
  2697  0121  0852               	movf	(setSegmentDisplayNumber@number),w
  2698  0122  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2699  0123  083B               	movf	(_Segment),w
  2700  0124  3E11               	addlw	011h
  2701  0125  0086               	movwf	fsr1l
  2702  0126  0187               	clrf fsr1h	
  2703                           	
  2704  0127  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2705  0128  0081               	movwf	indf1
  2706  0129  292C               	goto	l5831
  2707                           	line	51
  2708                           	
  2709  012A                     l2073:	
  2710  012A  292C               	goto	l5831
  2711                           	line	52
  2712                           	
  2713  012B                     l2069:	
  2714  012B  292C               	goto	l5831
  2715                           	line	53
  2716                           	
  2717  012C                     l2068:	
  2718                           	
  2719  012C                     l5831:	
  2720                           ;SegmentDisplay_A2.c: 51: }
  2721                           ;SegmentDisplay_A2.c: 52: }
  2722                           ;SegmentDisplay_A2.c: 53: if(Segment->Num[3] > 0)
  2723  012C  083B               	movf	(_Segment),w
  2724  012D  3E14               	addlw	014h
  2725  012E  0086               	movwf	fsr1l
  2726  012F  0187               	clrf fsr1h	
  2727                           	
  2728  0130  0801               	movf	indf1,w
  2729  0131  3A00               	xorlw	0&0ffh
  2730  0132  1903               	skipnz
  2731  0133  2935               	goto	u4591
  2732  0134  2936               	goto	u4590
  2733  0135                     u4591:
  2734  0135  293F               	goto	l5835
  2735  0136                     u4590:
  2736                           	line	55
  2737                           	
  2738  0136                     l5833:	
  2739                           ;SegmentDisplay_A2.c: 54: {
  2740                           ;SegmentDisplay_A2.c: 55: Segment->DisplayCount=3;
  2741  0136  3003               	movlw	(03h)
  2742  0137  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2743  0138  083B               	movf	(_Segment),w
  2744  0139  3E17               	addlw	017h
  2745  013A  0086               	movwf	fsr1l
  2746  013B  0187               	clrf fsr1h	
  2747                           	
  2748  013C  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2749  013D  0081               	movwf	indf1
  2750                           	line	56
  2751                           ;SegmentDisplay_A2.c: 56: }
  2752  013E  296D               	goto	l2080
  2753                           	line	57
  2754                           	
  2755  013F                     l2074:	
  2756                           	
  2757  013F                     l5835:	
  2758                           ;SegmentDisplay_A2.c: 57: else if(Segment->Num[2] > 0)
  2759  013F  083B               	movf	(_Segment),w
  2760  0140  3E13               	addlw	013h
  2761  0141  0086               	movwf	fsr1l
  2762  0142  0187               	clrf fsr1h	
  2763                           	
  2764  0143  0801               	movf	indf1,w
  2765  0144  3A00               	xorlw	0&0ffh
  2766  0145  1903               	skipnz
  2767  0146  2948               	goto	u4601
  2768  0147  2949               	goto	u4600
  2769  0148                     u4601:
  2770  0148  2952               	goto	l5839
  2771  0149                     u4600:
  2772                           	line	59
  2773                           	
  2774  0149                     l5837:	
  2775                           ;SegmentDisplay_A2.c: 58: {
  2776                           ;SegmentDisplay_A2.c: 59: Segment->DisplayCount=2;
  2777  0149  3002               	movlw	(02h)
  2778  014A  00D4               	movwf	(??_setSegmentDisplayNumber+0)+0
  2779  014B  083B               	movf	(_Segment),w
  2780  014C  3E17               	addlw	017h
  2781  014D  0086               	movwf	fsr1l
  2782  014E  0187               	clrf fsr1h	
  2783                           	
  2784  014F  0854               	movf	(??_setSegmentDisplayNumber+0)+0,w
  2785  0150  0081               	movwf	indf1
  2786                           	line	60
  2787                           ;SegmentDisplay_A2.c: 60: }
  2788  0151  296D               	goto	l2080
  2789                           	line	61
  2790                           	
  2791  0152                     l2076:	
  2792                           	
  2793  0152                     l5839:	
  2794                           ;SegmentDisplay_A2.c: 61: else if(Segment->Num[1] > 0)
  2795  0152  083B               	movf	(_Segment),w
  2796  0153  3E12               	addlw	012h
  2797  0154  0086               	movwf	fsr1l
  2798  0155  0187               	clrf fsr1h	
  2799                           	
  2800  0156  0801               	movf	indf1,w
  2801  0157  3A00               	xorlw	0&0ffh
  2802  0158  1903               	skipnz
  2803  0159  295B               	goto	u4611
  2804  015A  295C               	goto	u4610
  2805  015B                     u4611:
  2806  015B  2964               	goto	l5843
  2807  015C                     u4610:
  2808                           	line	63
  2809                           	
  2810  015C                     l5841:	
  2811                           ;SegmentDisplay_A2.c: 62: {
  2812                           ;SegmentDisplay_A2.c: 63: Segment->DisplayCount=1;
  2813  015C  083B               	movf	(_Segment),w
  2814  015D  3E17               	addlw	017h
  2815  015E  0086               	movwf	fsr1l
  2816  015F  0187               	clrf fsr1h	
  2817                           	
  2818  0160  0181               	clrf	indf1
  2819  0161  1403               	bsf	status,0
  2820  0162  0D81               	rlf	indf1,f
  2821                           	line	64
  2822                           ;SegmentDisplay_A2.c: 64: }
  2823  0163  296D               	goto	l2080
  2824                           	line	65
  2825                           	
  2826  0164                     l2078:	
  2827                           	line	67
  2828                           	
  2829  0164                     l5843:	
  2830                           ;SegmentDisplay_A2.c: 65: else
  2831                           ;SegmentDisplay_A2.c: 66: {
  2832                           ;SegmentDisplay_A2.c: 67: Segment->DisplayCount=0;
  2833  0164  083B               	movf	(_Segment),w
  2834  0165  3E17               	addlw	017h
  2835  0166  0086               	movwf	fsr1l
  2836  0167  0187               	clrf fsr1h	
  2837                           	
  2838  0168  0181               	clrf	indf1
  2839  0169  296D               	goto	l2080
  2840                           	line	68
  2841                           	
  2842  016A                     l2079:	
  2843  016A  296D               	goto	l2080
  2844                           	
  2845  016B                     l2077:	
  2846  016B  296D               	goto	l2080
  2847                           	
  2848  016C                     l2075:	
  2849  016C  296D               	goto	l2080
  2850                           	line	69
  2851                           	
  2852  016D                     l2066:	
  2853                           	line	70
  2854                           	
  2855  016D                     l2080:	
  2856  016D  0008               	return
  2857                           	opt stack 0
  2858                           GLOBAL	__end_of_setSegmentDisplayNumber
  2859  016E                     	__end_of_setSegmentDisplayNumber:
  2860 ;; =============== function _setSegmentDisplayNumber ends ============
  2861                           
  2862                           	signat	_setSegmentDisplayNumber,4216
  2863                           	global	_I2C_Main
  2864                           psect	text917,local,class=CODE,delta=2
  2865                           global __ptext917
  2866  02C9                     __ptext917:
  2867                           
  2868 ;; *************** function _I2C_Main *****************
  2869 ;; Defined at:
  2870 ;;		line 276 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  i               1    6[COMMON] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;		None               void
  2877 ;; Registers used:
  2878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2884 ;;      Params:         0       0       0       0       0       0       0       0
  2885 ;;      Locals:         1       0       0       0       0       0       0       0
  2886 ;;      Temps:          0       3       0       0       0       0       0       0
  2887 ;;      Totals:         1       3       0       0       0       0       0       0
  2888 ;;Total ram usage:        4 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    3
  2891 ;; This function calls:
  2892 ;;		_I2C_Master_Reception
  2893 ;;		_I2C_Master_Transmission
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           psect	text917
  2899                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  2900                           	line	276
  2901                           	global	__size_of_I2C_Main
  2902  008A                     	__size_of_I2C_Main	equ	__end_of_I2C_Main-_I2C_Main
  2903                           	
  2904  02C9                     _I2C_Main:	
  2905                           	opt	stack 12
  2906                           ; Regs used in _I2C_Main: [wreg+fsr1l-status,0+pclath+cstack]
  2907                           	line	302
  2908                           	
  2909  02C9                     l5757:	
  2910                           ;MCU_16f1516_B1.c: 277: char i;
  2911                           ;MCU_16f1516_B1.c: 302: if(I2C->MasterRxGO)
  2912  02C9  0020               	movlb 0	; select bank0
  2913  02CA  083A               	movf	(_I2C),w
  2914  02CB  3E42               	addlw	042h
  2915  02CC  0086               	movwf	fsr1l
  2916  02CD  3001               	movlw 1	; select bank2/3
  2917  02CE  0087               	movwf fsr1h	
  2918                           	
  2919  02CF  1E01               	btfss	indf1,4
  2920  02D0  2AD2               	goto	u4441
  2921  02D1  2AD3               	goto	u4440
  2922  02D2                     u4441:
  2923  02D2  2B13               	goto	l3157
  2924  02D3                     u4440:
  2925                           	line	304
  2926                           	
  2927  02D3                     l5759:	
  2928                           ;MCU_16f1516_B1.c: 303: {
  2929                           ;MCU_16f1516_B1.c: 304: I2C->MasterRxGO=0;
  2930  02D3  083A               	movf	(_I2C),w
  2931  02D4  3E42               	addlw	042h
  2932  02D5  0086               	movwf	fsr1l
  2933  02D6  3001               	movlw 1	; select bank2/3
  2934  02D7  0087               	movwf fsr1h	
  2935                           	
  2936  02D8  1201               	bcf	indf1,4
  2937                           	line	305
  2938                           	
  2939  02D9                     l5761:	
  2940                           ;MCU_16f1516_B1.c: 305: I2C_Master_Reception();
  2941  02D9  3183  23DC  3182   	fcall	_I2C_Master_Reception
  2942                           	line	306
  2943                           	
  2944  02DC                     l5763:	
  2945                           ;MCU_16f1516_B1.c: 306: TMain->Test=1;
  2946  02DC  0020               	movlb 0	; select bank0
  2947  02DD  0862               	movf	(_TMain),w
  2948  02DE  3E0C               	addlw	0Ch
  2949  02DF  0086               	movwf	fsr1l
  2950  02E0  0187               	clrf fsr1h	
  2951                           	
  2952  02E1  0181               	clrf	indf1
  2953  02E2  1403               	bsf	status,0
  2954  02E3  0D81               	rlf	indf1,f
  2955                           	line	307
  2956                           	
  2957  02E4                     l5765:	
  2958                           ;MCU_16f1516_B1.c: 307: RA1=~RA1;
  2959  02E4  3002               	movlw	1<<((97)&7)
  2960  02E5  068C               	xorwf	((97)/8),f
  2961                           	line	309
  2962                           	
  2963  02E6                     l5767:	
  2964                           ;MCU_16f1516_B1.c: 309: for(i=0;i<32;i++)
  2965  02E6  01F6               	clrf	(I2C_Main@i)
  2966                           	
  2967  02E7                     l5769:	
  2968  02E7  3020               	movlw	(020h)
  2969  02E8  0276               	subwf	(I2C_Main@i),w
  2970  02E9  1C03               	skipc
  2971  02EA  2AEC               	goto	u4451
  2972  02EB  2AED               	goto	u4450
  2973  02EC                     u4451:
  2974  02EC  2AEF               	goto	l5773
  2975  02ED                     u4450:
  2976  02ED  2B0C               	goto	l5779
  2977                           	
  2978  02EE                     l5771:	
  2979  02EE  2B0C               	goto	l5779
  2980                           	line	310
  2981                           	
  2982  02EF                     l3158:	
  2983                           	line	311
  2984                           	
  2985  02EF                     l5773:	
  2986                           ;MCU_16f1516_B1.c: 310: {
  2987                           ;MCU_16f1516_B1.c: 311: UART->TxData[i]=I2C->BufferReader[i];
  2988  02EF  0876               	movf	(I2C_Main@i),w
  2989  02F0  073A               	addwf	(_I2C),w
  2990  02F1  00CE               	movwf	(??_I2C_Main+0)+0
  2991  02F2  084E               	movf	0+(??_I2C_Main+0)+0,w
  2992  02F3  0086               	movwf	fsr1l
  2993  02F4  3001               	movlw 1	; select bank2/3
  2994  02F5  0087               	movwf fsr1h	
  2995                           	
  2996  02F6  0801               	movf	indf1,w
  2997  02F7  00CF               	movwf	(??_I2C_Main+1)+0
  2998  02F8  0876               	movf	(I2C_Main@i),w
  2999  02F9  0779               	addwf	(_UART),w
  3000  02FA  00D0               	movwf	(??_I2C_Main+2)+0
  3001  02FB  0850               	movf	0+(??_I2C_Main+2)+0,w
  3002  02FC  0086               	movwf	fsr1l
  3003  02FD  3001               	movlw 1	; select bank2/3
  3004  02FE  0087               	movwf fsr1h	
  3005                           	
  3006  02FF  084F               	movf	(??_I2C_Main+1)+0,w
  3007  0300  0081               	movwf	indf1
  3008                           	line	309
  3009                           	
  3010  0301                     l5775:	
  3011  0301  3001               	movlw	(01h)
  3012  0302  00CE               	movwf	(??_I2C_Main+0)+0
  3013  0303  084E               	movf	(??_I2C_Main+0)+0,w
  3014  0304  07F6               	addwf	(I2C_Main@i),f
  3015                           	
  3016  0305                     l5777:	
  3017  0305  3020               	movlw	(020h)
  3018  0306  0276               	subwf	(I2C_Main@i),w
  3019  0307  1C03               	skipc
  3020  0308  2B0A               	goto	u4461
  3021  0309  2B0B               	goto	u4460
  3022  030A                     u4461:
  3023  030A  2AEF               	goto	l5773
  3024  030B                     u4460:
  3025  030B  2B0C               	goto	l5779
  3026                           	
  3027  030C                     l3159:	
  3028                           	line	313
  3029                           	
  3030  030C                     l5779:	
  3031                           ;MCU_16f1516_B1.c: 312: }
  3032                           ;MCU_16f1516_B1.c: 313: UART->TxGO=1;
  3033  030C  0879               	movf	(_UART),w
  3034  030D  3E43               	addlw	043h
  3035  030E  0086               	movwf	fsr1l
  3036  030F  3001               	movlw 1	; select bank2/3
  3037  0310  0087               	movwf fsr1h	
  3038                           	
  3039  0311  1401               	bsf	indf1,0
  3040                           	line	315
  3041                           ;MCU_16f1516_B1.c: 315: }
  3042  0312  2B52               	goto	l3166
  3043                           	line	316
  3044                           	
  3045  0313                     l3157:	
  3046                           	line	318
  3047                           ;MCU_16f1516_B1.c: 316: else
  3048                           ;MCU_16f1516_B1.c: 317: {
  3049                           ;MCU_16f1516_B1.c: 318: if(RC0)
  3050  0313  1C0E               	btfss	(112/8),(112)&7
  3051  0314  2B16               	goto	u4471
  3052  0315  2B17               	goto	u4470
  3053  0316                     u4471:
  3054  0316  2B2E               	goto	l5785
  3055  0317                     u4470:
  3056                           	line	320
  3057                           	
  3058  0317                     l5781:	
  3059                           ;MCU_16f1516_B1.c: 319: {
  3060                           ;MCU_16f1516_B1.c: 320: if(!I2C->SS)
  3061  0317  083A               	movf	(_I2C),w
  3062  0318  3E42               	addlw	042h
  3063  0319  0086               	movwf	fsr1l
  3064  031A  3001               	movlw 1	; select bank2/3
  3065  031B  0087               	movwf fsr1h	
  3066                           	
  3067  031C  1A81               	btfsc	indf1,5
  3068  031D  2B1F               	goto	u4481
  3069  031E  2B20               	goto	u4480
  3070  031F                     u4481:
  3071  031F  2B52               	goto	l3166
  3072  0320                     u4480:
  3073                           	line	322
  3074                           	
  3075  0320                     l5783:	
  3076                           ;MCU_16f1516_B1.c: 321: {
  3077                           ;MCU_16f1516_B1.c: 322: I2C->SS=1;
  3078  0320  083A               	movf	(_I2C),w
  3079  0321  3E42               	addlw	042h
  3080  0322  0086               	movwf	fsr1l
  3081  0323  3001               	movlw 1	; select bank2/3
  3082  0324  0087               	movwf fsr1h	
  3083                           	
  3084  0325  1681               	bsf	indf1,5
  3085                           	line	323
  3086                           ;MCU_16f1516_B1.c: 323: I2C->MasterRxGO=1;
  3087  0326  083A               	movf	(_I2C),w
  3088  0327  3E42               	addlw	042h
  3089  0328  0086               	movwf	fsr1l
  3090  0329  3001               	movlw 1	; select bank2/3
  3091  032A  0087               	movwf fsr1h	
  3092                           	
  3093  032B  1601               	bsf	indf1,4
  3094  032C  2B52               	goto	l3166
  3095                           	line	324
  3096                           	
  3097  032D                     l3162:	
  3098                           	line	325
  3099                           ;MCU_16f1516_B1.c: 324: }
  3100                           ;MCU_16f1516_B1.c: 325: }
  3101  032D  2B52               	goto	l3166
  3102                           	line	326
  3103                           	
  3104  032E                     l3161:	
  3105                           	line	328
  3106                           	
  3107  032E                     l5785:	
  3108                           ;MCU_16f1516_B1.c: 326: else
  3109                           ;MCU_16f1516_B1.c: 327: {
  3110                           ;MCU_16f1516_B1.c: 328: if(I2C->SS)
  3111  032E  083A               	movf	(_I2C),w
  3112  032F  3E42               	addlw	042h
  3113  0330  0086               	movwf	fsr1l
  3114  0331  3001               	movlw 1	; select bank2/3
  3115  0332  0087               	movwf fsr1h	
  3116                           	
  3117  0333  1E81               	btfss	indf1,5
  3118  0334  2B36               	goto	u4491
  3119  0335  2B37               	goto	u4490
  3120  0336                     u4491:
  3121  0336  2B3D               	goto	l3164
  3122  0337                     u4490:
  3123                           	line	330
  3124                           	
  3125  0337                     l5787:	
  3126                           ;MCU_16f1516_B1.c: 329: {
  3127                           ;MCU_16f1516_B1.c: 330: I2C->SS=0;
  3128  0337  083A               	movf	(_I2C),w
  3129  0338  3E42               	addlw	042h
  3130  0339  0086               	movwf	fsr1l
  3131  033A  3001               	movlw 1	; select bank2/3
  3132  033B  0087               	movwf fsr1h	
  3133                           	
  3134  033C  1281               	bcf	indf1,5
  3135                           	line	331
  3136                           	
  3137  033D                     l3164:	
  3138                           	line	332
  3139                           ;MCU_16f1516_B1.c: 331: }
  3140                           ;MCU_16f1516_B1.c: 332: if(I2C->MasterTxGO)
  3141  033D  083A               	movf	(_I2C),w
  3142  033E  3E42               	addlw	042h
  3143  033F  0086               	movwf	fsr1l
  3144  0340  3001               	movlw 1	; select bank2/3
  3145  0341  0087               	movwf fsr1h	
  3146                           	
  3147  0342  1D81               	btfss	indf1,3
  3148  0343  2B45               	goto	u4501
  3149  0344  2B46               	goto	u4500
  3150  0345                     u4501:
  3151  0345  2B52               	goto	l3166
  3152  0346                     u4500:
  3153                           	line	334
  3154                           	
  3155  0346                     l5789:	
  3156                           ;MCU_16f1516_B1.c: 333: {
  3157                           ;MCU_16f1516_B1.c: 334: I2C->MasterTxGO=0;
  3158  0346  083A               	movf	(_I2C),w
  3159  0347  3E42               	addlw	042h
  3160  0348  0086               	movwf	fsr1l
  3161  0349  3001               	movlw 1	; select bank2/3
  3162  034A  0087               	movwf fsr1h	
  3163                           	
  3164  034B  1181               	bcf	indf1,3
  3165                           	line	335
  3166                           	
  3167  034C                     l5791:	
  3168                           ;MCU_16f1516_B1.c: 335: I2C_Master_Transmission();
  3169  034C  3185  2524  3182   	fcall	_I2C_Master_Transmission
  3170  034F  2B52               	goto	l3166
  3171                           	line	336
  3172                           	
  3173  0350                     l3165:	
  3174  0350  2B52               	goto	l3166
  3175                           	line	337
  3176                           	
  3177  0351                     l3163:	
  3178  0351  2B52               	goto	l3166
  3179                           	line	338
  3180                           	
  3181  0352                     l3160:	
  3182                           	line	341
  3183                           	
  3184  0352                     l3166:	
  3185  0352  0008               	return
  3186                           	opt stack 0
  3187                           GLOBAL	__end_of_I2C_Main
  3188  0353                     	__end_of_I2C_Main:
  3189 ;; =============== function _I2C_Main ends ============
  3190                           
  3191                           	signat	_I2C_Main,88
  3192                           	global	_Mcu_Initial
  3193                           psect	text918,local,class=CODE,delta=2
  3194                           global __ptext918
  3195  0FD7                     __ptext918:
  3196                           
  3197 ;; *************** function _Mcu_Initial *****************
  3198 ;; Defined at:
  3199 ;;		line 12 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;		None               void
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3213 ;;      Params:         0       0       0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    3
  3220 ;; This function calls:
  3221 ;;		_IO_Set
  3222 ;;		_TMR1_Set
  3223 ;;		_I2C_Set
  3224 ;;		_UART_Set
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           psect	text918
  3230                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  3231                           	line	12
  3232                           	global	__size_of_Mcu_Initial
  3233  0014                     	__size_of_Mcu_Initial	equ	__end_of_Mcu_Initial-_Mcu_Initial
  3234                           	
  3235  0FD7                     _Mcu_Initial:	
  3236                           	opt	stack 12
  3237                           ; Regs used in _Mcu_Initial: [wreg+status,2+status,0+pclath+cstack]
  3238                           	line	14
  3239                           	
  3240  0FD7                     l5413:	
  3241                           ;MCU_16f1516_B1.c: 14: OSCCON=0x78; ;;
  3242  0FD7  3078               	movlw	(078h)
  3243  0FD8  0021               	movlb 1	; select bank1
  3244  0FD9  0099               	movwf	(153)^080h	;volatile
  3245                           	line	16
  3246                           	
  3247  0FDA                     l5415:	
  3248                           ;MCU_16f1516_B1.c: 16: IO_Set();
  3249  0FDA  3187  27E0  318F   	fcall	_IO_Set
  3250                           	line	18
  3251                           	
  3252  0FDD                     l5417:	
  3253                           ;MCU_16f1516_B1.c: 18: _nop();
  3254  0FDD  0000               	nop
  3255                           	line	20
  3256                           	
  3257  0FDE                     l5419:	
  3258                           ;MCU_16f1516_B1.c: 20: TMR1_Set();
  3259  0FDE  318F  27C7  318F   	fcall	_TMR1_Set
  3260                           	line	22
  3261                           	
  3262  0FE1                     l5421:	
  3263                           ;MCU_16f1516_B1.c: 22: _nop();
  3264  0FE1  0000               	nop
  3265                           	line	26
  3266                           	
  3267  0FE2                     l5423:	
  3268                           ;MCU_16f1516_B1.c: 26: _nop();
  3269  0FE2  0000               	nop
  3270                           	line	28
  3271                           	
  3272  0FE3                     l5425:	
  3273                           ;MCU_16f1516_B1.c: 28: _nop();
  3274  0FE3  0000               	nop
  3275                           	line	30
  3276                           	
  3277  0FE4                     l5427:	
  3278                           ;MCU_16f1516_B1.c: 30: I2C_Set();
  3279  0FE4  318F  27A9  318F   	fcall	_I2C_Set
  3280                           	line	32
  3281                           	
  3282  0FE7                     l5429:	
  3283                           ;MCU_16f1516_B1.c: 32: UART_Set();
  3284  0FE7  3187  27C8  318F   	fcall	_UART_Set
  3285                           	line	35
  3286                           	
  3287  0FEA                     l3133:	
  3288  0FEA  0008               	return
  3289                           	opt stack 0
  3290                           GLOBAL	__end_of_Mcu_Initial
  3291  0FEB                     	__end_of_Mcu_Initial:
  3292 ;; =============== function _Mcu_Initial ends ============
  3293                           
  3294                           	signat	_Mcu_Initial,88
  3295                           	global	___awmod
  3296                           psect	text919,local,class=CODE,delta=2
  3297                           global __ptext919
  3298  04C3                     __ptext919:
  3299                           
  3300 ;; *************** function ___awmod *****************
  3301 ;; Defined at:
  3302 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  divisor         2    3[COMMON] int 
  3305 ;;  dividend        2    5[COMMON] int 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  sign            1    1[BANK0 ] unsigned char 
  3308 ;;  counter         1    0[BANK0 ] unsigned char 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  2    3[COMMON] int 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3318 ;;      Params:         4       0       0       0       0       0       0       0
  3319 ;;      Locals:         0       2       0       0       0       0       0       0
  3320 ;;      Temps:          1       0       0       0       0       0       0       0
  3321 ;;      Totals:         5       2       0       0       0       0       0       0
  3322 ;;Total ram usage:        7 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    2
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_setSegmentDisplayNumber
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           psect	text919
  3332                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  3333                           	line	5
  3334                           	global	__size_of___awmod
  3335  0061                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  3336                           	
  3337  04C3                     ___awmod:	
  3338                           	opt	stack 11
  3339                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3340                           	line	8
  3341                           	
  3342  04C3                     l5723:	
  3343  04C3  0020               	movlb 0	; select bank0
  3344  04C4  01CF               	clrf	(___awmod@sign)
  3345                           	line	9
  3346  04C5  1FF6               	btfss	(___awmod@dividend+1),7
  3347  04C6  2CC8               	goto	u4351
  3348  04C7  2CC9               	goto	u4350
  3349  04C8                     u4351:
  3350  04C8  2CD2               	goto	l5727
  3351  04C9                     u4350:
  3352                           	line	10
  3353                           	
  3354  04C9                     l5725:	
  3355  04C9  09F5               	comf	(___awmod@dividend),f
  3356  04CA  09F6               	comf	(___awmod@dividend+1),f
  3357  04CB  0AF5               	incf	(___awmod@dividend),f
  3358  04CC  1903               	skipnz
  3359  04CD  0AF6               	incf	(___awmod@dividend+1),f
  3360                           	line	11
  3361  04CE  01CF               	clrf	(___awmod@sign)
  3362  04CF  1403               	bsf	status,0
  3363  04D0  0DCF               	rlf	(___awmod@sign),f
  3364  04D1  2CD2               	goto	l5727
  3365                           	line	12
  3366                           	
  3367  04D2                     l3561:	
  3368                           	line	13
  3369                           	
  3370  04D2                     l5727:	
  3371  04D2  1FF4               	btfss	(___awmod@divisor+1),7
  3372  04D3  2CD5               	goto	u4361
  3373  04D4  2CD6               	goto	u4360
  3374  04D5                     u4361:
  3375  04D5  2CDC               	goto	l5731
  3376  04D6                     u4360:
  3377                           	line	14
  3378                           	
  3379  04D6                     l5729:	
  3380  04D6  09F3               	comf	(___awmod@divisor),f
  3381  04D7  09F4               	comf	(___awmod@divisor+1),f
  3382  04D8  0AF3               	incf	(___awmod@divisor),f
  3383  04D9  1903               	skipnz
  3384  04DA  0AF4               	incf	(___awmod@divisor+1),f
  3385  04DB  2CDC               	goto	l5731
  3386                           	
  3387  04DC                     l3562:	
  3388                           	line	15
  3389                           	
  3390  04DC                     l5731:	
  3391  04DC  0874               	movf	(___awmod@divisor+1),w
  3392  04DD  0473               	iorwf	(___awmod@divisor),w
  3393  04DE  1903               	skipnz
  3394  04DF  2CE1               	goto	u4371
  3395  04E0  2CE2               	goto	u4370
  3396  04E1                     u4371:
  3397  04E1  2D12               	goto	l5749
  3398  04E2                     u4370:
  3399                           	line	16
  3400                           	
  3401  04E2                     l5733:	
  3402  04E2  01CE               	clrf	(___awmod@counter)
  3403  04E3  1403               	bsf	status,0
  3404  04E4  0DCE               	rlf	(___awmod@counter),f
  3405                           	line	17
  3406  04E5  2CF0               	goto	l5739
  3407                           	
  3408  04E6                     l3565:	
  3409                           	line	18
  3410                           	
  3411  04E6                     l5735:	
  3412  04E6  3001               	movlw	01h
  3413                           	
  3414  04E7                     u4385:
  3415  04E7  35F3               	lslf	(___awmod@divisor),f
  3416  04E8  0DF4               	rlf	(___awmod@divisor+1),f
  3417  04E9  0B89               	decfsz	wreg,f
  3418  04EA  2CE7               	goto	u4385
  3419                           	line	19
  3420                           	
  3421  04EB                     l5737:	
  3422  04EB  3001               	movlw	(01h)
  3423  04EC  00F7               	movwf	(??___awmod+0)+0
  3424  04ED  0877               	movf	(??___awmod+0)+0,w
  3425  04EE  07CE               	addwf	(___awmod@counter),f
  3426  04EF  2CF0               	goto	l5739
  3427                           	line	20
  3428                           	
  3429  04F0                     l3564:	
  3430                           	line	17
  3431                           	
  3432  04F0                     l5739:	
  3433  04F0  1FF4               	btfss	(___awmod@divisor+1),(15)&7
  3434  04F1  2CF3               	goto	u4391
  3435  04F2  2CF4               	goto	u4390
  3436  04F3                     u4391:
  3437  04F3  2CE6               	goto	l5735
  3438  04F4                     u4390:
  3439  04F4  2CF6               	goto	l5741
  3440                           	
  3441  04F5                     l3566:	
  3442  04F5  2CF6               	goto	l5741
  3443                           	line	21
  3444                           	
  3445  04F6                     l3567:	
  3446                           	line	22
  3447                           	
  3448  04F6                     l5741:	
  3449  04F6  0874               	movf	(___awmod@divisor+1),w
  3450  04F7  0276               	subwf	(___awmod@dividend+1),w
  3451  04F8  1D03               	skipz
  3452  04F9  2CFC               	goto	u4405
  3453  04FA  0873               	movf	(___awmod@divisor),w
  3454  04FB  0275               	subwf	(___awmod@dividend),w
  3455  04FC                     u4405:
  3456  04FC  1C03               	skipc
  3457  04FD  2CFF               	goto	u4401
  3458  04FE  2D00               	goto	u4400
  3459  04FF                     u4401:
  3460  04FF  2D05               	goto	l5745
  3461  0500                     u4400:
  3462                           	line	23
  3463                           	
  3464  0500                     l5743:	
  3465  0500  0873               	movf	(___awmod@divisor),w
  3466  0501  02F5               	subwf	(___awmod@dividend),f
  3467  0502  0874               	movf	(___awmod@divisor+1),w
  3468  0503  3BF6               	subwfb	(___awmod@dividend+1),f
  3469  0504  2D05               	goto	l5745
  3470                           	
  3471  0505                     l3568:	
  3472                           	line	24
  3473                           	
  3474  0505                     l5745:	
  3475  0505  3001               	movlw	01h
  3476                           	
  3477  0506                     u4415:
  3478  0506  36F4               	lsrf	(___awmod@divisor+1),f
  3479  0507  0CF3               	rrf	(___awmod@divisor),f
  3480  0508  0B89               	decfsz	wreg,f
  3481  0509  2D06               	goto	u4415
  3482                           	line	25
  3483                           	
  3484  050A                     l5747:	
  3485  050A  3001               	movlw	low(01h)
  3486  050B  02CE               	subwf	(___awmod@counter),f
  3487  050C  1D03               	btfss	status,2
  3488  050D  2D0F               	goto	u4421
  3489  050E  2D10               	goto	u4420
  3490  050F                     u4421:
  3491  050F  2CF6               	goto	l5741
  3492  0510                     u4420:
  3493  0510  2D12               	goto	l5749
  3494                           	
  3495  0511                     l3569:	
  3496  0511  2D12               	goto	l5749
  3497                           	line	26
  3498                           	
  3499  0512                     l3563:	
  3500                           	line	27
  3501                           	
  3502  0512                     l5749:	
  3503  0512  084F               	movf	(___awmod@sign),w
  3504  0513  1D03               	skipz
  3505  0514  2D16               	goto	u4430
  3506  0515  2D1C               	goto	l5753
  3507  0516                     u4430:
  3508                           	line	28
  3509                           	
  3510  0516                     l5751:	
  3511  0516  09F5               	comf	(___awmod@dividend),f
  3512  0517  09F6               	comf	(___awmod@dividend+1),f
  3513  0518  0AF5               	incf	(___awmod@dividend),f
  3514  0519  1903               	skipnz
  3515  051A  0AF6               	incf	(___awmod@dividend+1),f
  3516  051B  2D1C               	goto	l5753
  3517                           	
  3518  051C                     l3570:	
  3519                           	line	29
  3520                           	
  3521  051C                     l5753:	
  3522  051C  0876               	movf	(___awmod@dividend+1),w
  3523  051D  01F4               	clrf	(?___awmod+1)
  3524  051E  07F4               	addwf	(?___awmod+1)
  3525  051F  0875               	movf	(___awmod@dividend),w
  3526  0520  01F3               	clrf	(?___awmod)
  3527  0521  07F3               	addwf	(?___awmod)
  3528                           
  3529  0522  2D23               	goto	l3571
  3530                           	
  3531  0523                     l5755:	
  3532                           	line	30
  3533                           	
  3534  0523                     l3571:	
  3535  0523  0008               	return
  3536                           	opt stack 0
  3537                           GLOBAL	__end_of___awmod
  3538  0524                     	__end_of___awmod:
  3539 ;; =============== function ___awmod ends ============
  3540                           
  3541                           	signat	___awmod,8314
  3542                           	global	___awdiv
  3543                           psect	text920,local,class=CODE,delta=2
  3544                           global __ptext920
  3545  0456                     __ptext920:
  3546                           
  3547 ;; *************** function ___awdiv *****************
  3548 ;; Defined at:
  3549 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  divisor         2    3[COMMON] int 
  3552 ;;  dividend        2    5[COMMON] int 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  quotient        2    2[BANK0 ] int 
  3555 ;;  sign            1    1[BANK0 ] unsigned char 
  3556 ;;  counter         1    0[BANK0 ] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  2    3[COMMON] int 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3566 ;;      Params:         4       0       0       0       0       0       0       0
  3567 ;;      Locals:         0       4       0       0       0       0       0       0
  3568 ;;      Temps:          1       0       0       0       0       0       0       0
  3569 ;;      Totals:         5       4       0       0       0       0       0       0
  3570 ;;Total ram usage:        9 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    2
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_setSegmentDisplayNumber
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           psect	text920
  3580                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3581                           	line	5
  3582                           	global	__size_of___awdiv
  3583  006D                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3584                           	
  3585  0456                     ___awdiv:	
  3586                           	opt	stack 11
  3587                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3588                           	line	9
  3589                           	
  3590  0456                     l5683:	
  3591  0456  0020               	movlb 0	; select bank0
  3592  0457  01CF               	clrf	(___awdiv@sign)
  3593                           	line	10
  3594  0458  1FF4               	btfss	(___awdiv@divisor+1),7
  3595  0459  2C5B               	goto	u4251
  3596  045A  2C5C               	goto	u4250
  3597  045B                     u4251:
  3598  045B  2C65               	goto	l5687
  3599  045C                     u4250:
  3600                           	line	11
  3601                           	
  3602  045C                     l5685:	
  3603  045C  09F3               	comf	(___awdiv@divisor),f
  3604  045D  09F4               	comf	(___awdiv@divisor+1),f
  3605  045E  0AF3               	incf	(___awdiv@divisor),f
  3606  045F  1903               	skipnz
  3607  0460  0AF4               	incf	(___awdiv@divisor+1),f
  3608                           	line	12
  3609  0461  01CF               	clrf	(___awdiv@sign)
  3610  0462  1403               	bsf	status,0
  3611  0463  0DCF               	rlf	(___awdiv@sign),f
  3612  0464  2C65               	goto	l5687
  3613                           	line	13
  3614                           	
  3615  0465                     l3493:	
  3616                           	line	14
  3617                           	
  3618  0465                     l5687:	
  3619  0465  1FF6               	btfss	(___awdiv@dividend+1),7
  3620  0466  2C68               	goto	u4261
  3621  0467  2C69               	goto	u4260
  3622  0468                     u4261:
  3623  0468  2C73               	goto	l5693
  3624  0469                     u4260:
  3625                           	line	15
  3626                           	
  3627  0469                     l5689:	
  3628  0469  09F5               	comf	(___awdiv@dividend),f
  3629  046A  09F6               	comf	(___awdiv@dividend+1),f
  3630  046B  0AF5               	incf	(___awdiv@dividend),f
  3631  046C  1903               	skipnz
  3632  046D  0AF6               	incf	(___awdiv@dividend+1),f
  3633                           	line	16
  3634                           	
  3635  046E                     l5691:	
  3636  046E  3001               	movlw	(01h)
  3637  046F  00F7               	movwf	(??___awdiv+0)+0
  3638  0470  0877               	movf	(??___awdiv+0)+0,w
  3639  0471  06CF               	xorwf	(___awdiv@sign),f
  3640  0472  2C73               	goto	l5693
  3641                           	line	17
  3642                           	
  3643  0473                     l3494:	
  3644                           	line	18
  3645                           	
  3646  0473                     l5693:	
  3647  0473  01D0               	clrf	(___awdiv@quotient)
  3648  0474  01D1               	clrf	(___awdiv@quotient+1)
  3649                           	line	19
  3650                           	
  3651  0475                     l5695:	
  3652  0475  0874               	movf	(___awdiv@divisor+1),w
  3653  0476  0473               	iorwf	(___awdiv@divisor),w
  3654  0477  1903               	skipnz
  3655  0478  2C7A               	goto	u4271
  3656  0479  2C7B               	goto	u4270
  3657  047A                     u4271:
  3658  047A  2CB1               	goto	l5715
  3659  047B                     u4270:
  3660                           	line	20
  3661                           	
  3662  047B                     l5697:	
  3663  047B  01CE               	clrf	(___awdiv@counter)
  3664  047C  1403               	bsf	status,0
  3665  047D  0DCE               	rlf	(___awdiv@counter),f
  3666                           	line	21
  3667  047E  2C89               	goto	l5703
  3668                           	
  3669  047F                     l3497:	
  3670                           	line	22
  3671                           	
  3672  047F                     l5699:	
  3673  047F  3001               	movlw	01h
  3674                           	
  3675  0480                     u4285:
  3676  0480  35F3               	lslf	(___awdiv@divisor),f
  3677  0481  0DF4               	rlf	(___awdiv@divisor+1),f
  3678  0482  0B89               	decfsz	wreg,f
  3679  0483  2C80               	goto	u4285
  3680                           	line	23
  3681                           	
  3682  0484                     l5701:	
  3683  0484  3001               	movlw	(01h)
  3684  0485  00F7               	movwf	(??___awdiv+0)+0
  3685  0486  0877               	movf	(??___awdiv+0)+0,w
  3686  0487  07CE               	addwf	(___awdiv@counter),f
  3687  0488  2C89               	goto	l5703
  3688                           	line	24
  3689                           	
  3690  0489                     l3496:	
  3691                           	line	21
  3692                           	
  3693  0489                     l5703:	
  3694  0489  1FF4               	btfss	(___awdiv@divisor+1),(15)&7
  3695  048A  2C8C               	goto	u4291
  3696  048B  2C8D               	goto	u4290
  3697  048C                     u4291:
  3698  048C  2C7F               	goto	l5699
  3699  048D                     u4290:
  3700  048D  2C8F               	goto	l5705
  3701                           	
  3702  048E                     l3498:	
  3703  048E  2C8F               	goto	l5705
  3704                           	line	25
  3705                           	
  3706  048F                     l3499:	
  3707                           	line	26
  3708                           	
  3709  048F                     l5705:	
  3710  048F  3001               	movlw	01h
  3711                           	
  3712  0490                     u4305:
  3713  0490  35D0               	lslf	(___awdiv@quotient),f
  3714  0491  0DD1               	rlf	(___awdiv@quotient+1),f
  3715  0492  0B89               	decfsz	wreg,f
  3716  0493  2C90               	goto	u4305
  3717                           	line	27
  3718  0494  0874               	movf	(___awdiv@divisor+1),w
  3719  0495  0276               	subwf	(___awdiv@dividend+1),w
  3720  0496  1D03               	skipz
  3721  0497  2C9A               	goto	u4315
  3722  0498  0873               	movf	(___awdiv@divisor),w
  3723  0499  0275               	subwf	(___awdiv@dividend),w
  3724  049A                     u4315:
  3725  049A  1C03               	skipc
  3726  049B  2C9D               	goto	u4311
  3727  049C  2C9E               	goto	u4310
  3728  049D                     u4311:
  3729  049D  2CA4               	goto	l5711
  3730  049E                     u4310:
  3731                           	line	28
  3732                           	
  3733  049E                     l5707:	
  3734  049E  0873               	movf	(___awdiv@divisor),w
  3735  049F  02F5               	subwf	(___awdiv@dividend),f
  3736  04A0  0874               	movf	(___awdiv@divisor+1),w
  3737  04A1  3BF6               	subwfb	(___awdiv@dividend+1),f
  3738                           	line	29
  3739                           	
  3740  04A2                     l5709:	
  3741  04A2  1450               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3742  04A3  2CA4               	goto	l5711
  3743                           	line	30
  3744                           	
  3745  04A4                     l3500:	
  3746                           	line	31
  3747                           	
  3748  04A4                     l5711:	
  3749  04A4  3001               	movlw	01h
  3750                           	
  3751  04A5                     u4325:
  3752  04A5  36F4               	lsrf	(___awdiv@divisor+1),f
  3753  04A6  0CF3               	rrf	(___awdiv@divisor),f
  3754  04A7  0B89               	decfsz	wreg,f
  3755  04A8  2CA5               	goto	u4325
  3756                           	line	32
  3757                           	
  3758  04A9                     l5713:	
  3759  04A9  3001               	movlw	low(01h)
  3760  04AA  02CE               	subwf	(___awdiv@counter),f
  3761  04AB  1D03               	btfss	status,2
  3762  04AC  2CAE               	goto	u4331
  3763  04AD  2CAF               	goto	u4330
  3764  04AE                     u4331:
  3765  04AE  2C8F               	goto	l5705
  3766  04AF                     u4330:
  3767  04AF  2CB1               	goto	l5715
  3768                           	
  3769  04B0                     l3501:	
  3770  04B0  2CB1               	goto	l5715
  3771                           	line	33
  3772                           	
  3773  04B1                     l3495:	
  3774                           	line	34
  3775                           	
  3776  04B1                     l5715:	
  3777  04B1  084F               	movf	(___awdiv@sign),w
  3778  04B2  1D03               	skipz
  3779  04B3  2CB5               	goto	u4340
  3780  04B4  2CBB               	goto	l5719
  3781  04B5                     u4340:
  3782                           	line	35
  3783                           	
  3784  04B5                     l5717:	
  3785  04B5  09D0               	comf	(___awdiv@quotient),f
  3786  04B6  09D1               	comf	(___awdiv@quotient+1),f
  3787  04B7  0AD0               	incf	(___awdiv@quotient),f
  3788  04B8  1903               	skipnz
  3789  04B9  0AD1               	incf	(___awdiv@quotient+1),f
  3790  04BA  2CBB               	goto	l5719
  3791                           	
  3792  04BB                     l3502:	
  3793                           	line	36
  3794                           	
  3795  04BB                     l5719:	
  3796  04BB  0851               	movf	(___awdiv@quotient+1),w
  3797  04BC  01F4               	clrf	(?___awdiv+1)
  3798  04BD  07F4               	addwf	(?___awdiv+1)
  3799  04BE  0850               	movf	(___awdiv@quotient),w
  3800  04BF  01F3               	clrf	(?___awdiv)
  3801  04C0  07F3               	addwf	(?___awdiv)
  3802                           
  3803  04C1  2CC2               	goto	l3503
  3804                           	
  3805  04C2                     l5721:	
  3806                           	line	37
  3807                           	
  3808  04C2                     l3503:	
  3809  04C2  0008               	return
  3810                           	opt stack 0
  3811                           GLOBAL	__end_of___awdiv
  3812  04C3                     	__end_of___awdiv:
  3813 ;; =============== function ___awdiv ends ============
  3814                           
  3815                           	signat	___awdiv,8314
  3816                           	global	___lwdiv
  3817                           psect	text921,local,class=CODE,delta=2
  3818                           global __ptext921
  3819  05CC                     __ptext921:
  3820                           
  3821 ;; *************** function ___lwdiv *****************
  3822 ;; Defined at:
  3823 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  divisor         2    3[COMMON] unsigned int 
  3826 ;;  dividend        2    5[COMMON] unsigned int 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  quotient        2    1[BANK0 ] unsigned int 
  3829 ;;  counter         1    0[BANK0 ] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  2    3[COMMON] unsigned int 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3839 ;;      Params:         4       0       0       0       0       0       0       0
  3840 ;;      Locals:         0       3       0       0       0       0       0       0
  3841 ;;      Temps:          1       0       0       0       0       0       0       0
  3842 ;;      Totals:         5       3       0       0       0       0       0       0
  3843 ;;Total ram usage:        8 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    2
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_printf
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           psect	text921
  3853                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  3854                           	line	5
  3855                           	global	__size_of___lwdiv
  3856  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3857                           	
  3858  05CC                     ___lwdiv:	
  3859                           	opt	stack 10
  3860                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3861                           	line	9
  3862                           	
  3863  05CC                     l5657:	
  3864  05CC  0020               	movlb 0	; select bank0
  3865  05CD  01CF               	clrf	(___lwdiv@quotient)
  3866  05CE  01D0               	clrf	(___lwdiv@quotient+1)
  3867                           	line	10
  3868                           	
  3869  05CF                     l5659:	
  3870  05CF  0874               	movf	(___lwdiv@divisor+1),w
  3871  05D0  0473               	iorwf	(___lwdiv@divisor),w
  3872  05D1  1903               	skipnz
  3873  05D2  2DD4               	goto	u4181
  3874  05D3  2DD5               	goto	u4180
  3875  05D4                     u4181:
  3876  05D4  2E0B               	goto	l5679
  3877  05D5                     u4180:
  3878                           	line	11
  3879                           	
  3880  05D5                     l5661:	
  3881  05D5  01CE               	clrf	(___lwdiv@counter)
  3882  05D6  1403               	bsf	status,0
  3883  05D7  0DCE               	rlf	(___lwdiv@counter),f
  3884                           	line	12
  3885  05D8  2DE3               	goto	l5667
  3886                           	
  3887  05D9                     l3361:	
  3888                           	line	13
  3889                           	
  3890  05D9                     l5663:	
  3891  05D9  3001               	movlw	01h
  3892                           	
  3893  05DA                     u4195:
  3894  05DA  35F3               	lslf	(___lwdiv@divisor),f
  3895  05DB  0DF4               	rlf	(___lwdiv@divisor+1),f
  3896  05DC  0B89               	decfsz	wreg,f
  3897  05DD  2DDA               	goto	u4195
  3898                           	line	14
  3899                           	
  3900  05DE                     l5665:	
  3901  05DE  3001               	movlw	(01h)
  3902  05DF  00F7               	movwf	(??___lwdiv+0)+0
  3903  05E0  0877               	movf	(??___lwdiv+0)+0,w
  3904  05E1  07CE               	addwf	(___lwdiv@counter),f
  3905  05E2  2DE3               	goto	l5667
  3906                           	line	15
  3907                           	
  3908  05E3                     l3360:	
  3909                           	line	12
  3910                           	
  3911  05E3                     l5667:	
  3912  05E3  1FF4               	btfss	(___lwdiv@divisor+1),(15)&7
  3913  05E4  2DE6               	goto	u4201
  3914  05E5  2DE7               	goto	u4200
  3915  05E6                     u4201:
  3916  05E6  2DD9               	goto	l5663
  3917  05E7                     u4200:
  3918  05E7  2DE9               	goto	l5669
  3919                           	
  3920  05E8                     l3362:	
  3921  05E8  2DE9               	goto	l5669
  3922                           	line	16
  3923                           	
  3924  05E9                     l3363:	
  3925                           	line	17
  3926                           	
  3927  05E9                     l5669:	
  3928  05E9  3001               	movlw	01h
  3929                           	
  3930  05EA                     u4215:
  3931  05EA  35CF               	lslf	(___lwdiv@quotient),f
  3932  05EB  0DD0               	rlf	(___lwdiv@quotient+1),f
  3933  05EC  0B89               	decfsz	wreg,f
  3934  05ED  2DEA               	goto	u4215
  3935                           	line	18
  3936  05EE  0874               	movf	(___lwdiv@divisor+1),w
  3937  05EF  0276               	subwf	(___lwdiv@dividend+1),w
  3938  05F0  1D03               	skipz
  3939  05F1  2DF4               	goto	u4225
  3940  05F2  0873               	movf	(___lwdiv@divisor),w
  3941  05F3  0275               	subwf	(___lwdiv@dividend),w
  3942  05F4                     u4225:
  3943  05F4  1C03               	skipc
  3944  05F5  2DF7               	goto	u4221
  3945  05F6  2DF8               	goto	u4220
  3946  05F7                     u4221:
  3947  05F7  2DFE               	goto	l5675
  3948  05F8                     u4220:
  3949                           	line	19
  3950                           	
  3951  05F8                     l5671:	
  3952  05F8  0873               	movf	(___lwdiv@divisor),w
  3953  05F9  02F5               	subwf	(___lwdiv@dividend),f
  3954  05FA  0874               	movf	(___lwdiv@divisor+1),w
  3955  05FB  3BF6               	subwfb	(___lwdiv@dividend+1),f
  3956                           	line	20
  3957                           	
  3958  05FC                     l5673:	
  3959  05FC  144F               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3960  05FD  2DFE               	goto	l5675
  3961                           	line	21
  3962                           	
  3963  05FE                     l3364:	
  3964                           	line	22
  3965                           	
  3966  05FE                     l5675:	
  3967  05FE  3001               	movlw	01h
  3968                           	
  3969  05FF                     u4235:
  3970  05FF  36F4               	lsrf	(___lwdiv@divisor+1),f
  3971  0600  0CF3               	rrf	(___lwdiv@divisor),f
  3972  0601  0B89               	decfsz	wreg,f
  3973  0602  2DFF               	goto	u4235
  3974                           	line	23
  3975                           	
  3976  0603                     l5677:	
  3977  0603  3001               	movlw	low(01h)
  3978  0604  02CE               	subwf	(___lwdiv@counter),f
  3979  0605  1D03               	btfss	status,2
  3980  0606  2E08               	goto	u4241
  3981  0607  2E09               	goto	u4240
  3982  0608                     u4241:
  3983  0608  2DE9               	goto	l5669
  3984  0609                     u4240:
  3985  0609  2E0B               	goto	l5679
  3986                           	
  3987  060A                     l3365:	
  3988  060A  2E0B               	goto	l5679
  3989                           	line	24
  3990                           	
  3991  060B                     l3359:	
  3992                           	line	25
  3993                           	
  3994  060B                     l5679:	
  3995  060B  0850               	movf	(___lwdiv@quotient+1),w
  3996  060C  01F4               	clrf	(?___lwdiv+1)
  3997  060D  07F4               	addwf	(?___lwdiv+1)
  3998  060E  084F               	movf	(___lwdiv@quotient),w
  3999  060F  01F3               	clrf	(?___lwdiv)
  4000  0610  07F3               	addwf	(?___lwdiv)
  4001                           
  4002  0611  2E12               	goto	l3366
  4003                           	
  4004  0612                     l5681:	
  4005                           	line	26
  4006                           	
  4007  0612                     l3366:	
  4008  0612  0008               	return
  4009                           	opt stack 0
  4010                           GLOBAL	__end_of___lwdiv
  4011  0613                     	__end_of___lwdiv:
  4012 ;; =============== function ___lwdiv ends ============
  4013                           
  4014                           	signat	___lwdiv,8314
  4015                           	global	_putch
  4016                           psect	text922,local,class=CODE,delta=2
  4017                           global __ptext922
  4018  0F9D                     __ptext922:
  4019                           
  4020 ;; *************** function _putch *****************
  4021 ;; Defined at:
  4022 ;;		line 594 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  byte            1    wreg     unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  byte            1    3[COMMON] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;		None               void
  4029 ;; Registers used:
  4030 ;;		wreg
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4036 ;;      Params:         0       0       0       0       0       0       0       0
  4037 ;;      Locals:         1       0       0       0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0
  4039 ;;      Totals:         1       0       0       0       0       0       0       0
  4040 ;;Total ram usage:        1 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    2
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_printf
  4047 ;;		_getche
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           psect	text922
  4051                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4052                           	line	594
  4053                           	global	__size_of_putch
  4054  000C                     	__size_of_putch	equ	__end_of_putch-_putch
  4055                           	
  4056  0F9D                     _putch:	
  4057                           	opt	stack 10
  4058                           ; Regs used in _putch: [wreg]
  4059                           ;putch@byte stored from wreg
  4060  0F9D  00F3               	movwf	(putch@byte)
  4061                           	line	596
  4062                           	
  4063  0F9E                     l5305:	
  4064                           ;MCU_16f1516_B1.c: 596: while(!TXIF)
  4065  0F9E  2F9F               	goto	l3305
  4066                           	
  4067  0F9F                     l3306:	
  4068                           	line	597
  4069                           ;MCU_16f1516_B1.c: 597: continue;
  4070                           	
  4071  0F9F                     l3305:	
  4072                           	line	596
  4073  0F9F  0020               	movlb 0	; select bank0
  4074  0FA0  1E11               	btfss	(140/8),(140)&7
  4075  0FA1  2FA3               	goto	u3541
  4076  0FA2  2FA4               	goto	u3540
  4077  0FA3                     u3541:
  4078  0FA3  2F9F               	goto	l3305
  4079  0FA4                     u3540:
  4080  0FA4  2FA5               	goto	l5307
  4081                           	
  4082  0FA5                     l3307:	
  4083                           	line	598
  4084                           	
  4085  0FA5                     l5307:	
  4086                           ;MCU_16f1516_B1.c: 598: TXREG = byte;
  4087  0FA5  0873               	movf	(putch@byte),w
  4088  0FA6  0023               	movlb 3	; select bank3
  4089  0FA7  009A               	movwf	(410)^0180h	;volatile
  4090                           	line	599
  4091                           	
  4092  0FA8                     l3308:	
  4093  0FA8  0008               	return
  4094                           	opt stack 0
  4095                           GLOBAL	__end_of_putch
  4096  0FA9                     	__end_of_putch:
  4097 ;; =============== function _putch ends ============
  4098                           
  4099                           	signat	_putch,4216
  4100                           	global	_UART_Receive
  4101                           psect	text923,local,class=CODE,delta=2
  4102                           global __ptext923
  4103  0650                     __ptext923:
  4104                           
  4105 ;; *************** function _UART_Receive *****************
  4106 ;; Defined at:
  4107 ;;		line 556 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  i               1    6[COMMON] unsigned char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;		None               void
  4114 ;; Registers used:
  4115 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4121 ;;      Params:         0       0       0       0       0       0       0       0
  4122 ;;      Locals:         1       0       0       0       0       0       0       0
  4123 ;;      Temps:          3       0       0       0       0       0       0       0
  4124 ;;      Totals:         4       0       0       0       0       0       0       0
  4125 ;;Total ram usage:        4 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    2
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_UART_Main
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           psect	text923
  4135                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4136                           	line	556
  4137                           	global	__size_of_UART_Receive
  4138  0037                     	__size_of_UART_Receive	equ	__end_of_UART_Receive-_UART_Receive
  4139                           	
  4140  0650                     _UART_Receive:	
  4141                           	opt	stack 12
  4142                           ; Regs used in _UART_Receive: [wreg+fsr1l-status,0]
  4143                           	line	559
  4144                           	
  4145  0650                     l5289:	
  4146                           ;MCU_16f1516_B1.c: 557: char i;
  4147                           ;MCU_16f1516_B1.c: 559: TMain->Test=1;
  4148  0650  0020               	movlb 0	; select bank0
  4149  0651  0862               	movf	(_TMain),w
  4150  0652  3E0C               	addlw	0Ch
  4151  0653  0086               	movwf	fsr1l
  4152  0654  0187               	clrf fsr1h	
  4153                           	
  4154  0655  0181               	clrf	indf1
  4155  0656  1403               	bsf	status,0
  4156  0657  0D81               	rlf	indf1,f
  4157                           	line	561
  4158                           	
  4159  0658                     l5291:	
  4160                           ;MCU_16f1516_B1.c: 561: for(i=0;i<32;i++)
  4161  0658  01F6               	clrf	(UART_Receive@i)
  4162                           	
  4163  0659                     l5293:	
  4164  0659  3020               	movlw	(020h)
  4165  065A  0276               	subwf	(UART_Receive@i),w
  4166  065B  1C03               	skipc
  4167  065C  2E5E               	goto	u3521
  4168  065D  2E5F               	goto	u3520
  4169  065E                     u3521:
  4170  065E  2E61               	goto	l5297
  4171  065F                     u3520:
  4172  065F  2E80               	goto	l5303
  4173                           	
  4174  0660                     l5295:	
  4175  0660  2E80               	goto	l5303
  4176                           	line	562
  4177                           	
  4178  0661                     l3297:	
  4179                           	line	563
  4180                           	
  4181  0661                     l5297:	
  4182                           ;MCU_16f1516_B1.c: 562: {
  4183                           ;MCU_16f1516_B1.c: 563: I2C->BufferWriter[i]=UART->RxData[i];
  4184  0661  0876               	movf	(UART_Receive@i),w
  4185  0662  3E20               	addlw	020h
  4186  0663  0779               	addwf	(_UART),w
  4187  0664  00F3               	movwf	(??_UART_Receive+0)+0
  4188  0665  0873               	movf	0+(??_UART_Receive+0)+0,w
  4189  0666  0086               	movwf	fsr1l
  4190  0667  3001               	movlw 1	; select bank2/3
  4191  0668  0087               	movwf fsr1h	
  4192                           	
  4193  0669  0801               	movf	indf1,w
  4194  066A  00F4               	movwf	(??_UART_Receive+1)+0
  4195  066B  0876               	movf	(UART_Receive@i),w
  4196  066C  3E20               	addlw	020h
  4197  066D  073A               	addwf	(_I2C),w
  4198  066E  00F5               	movwf	(??_UART_Receive+2)+0
  4199  066F  0875               	movf	0+(??_UART_Receive+2)+0,w
  4200  0670  0086               	movwf	fsr1l
  4201  0671  3001               	movlw 1	; select bank2/3
  4202  0672  0087               	movwf fsr1h	
  4203                           	
  4204  0673  0874               	movf	(??_UART_Receive+1)+0,w
  4205  0674  0081               	movwf	indf1
  4206                           	line	561
  4207                           	
  4208  0675                     l5299:	
  4209  0675  3001               	movlw	(01h)
  4210  0676  00F3               	movwf	(??_UART_Receive+0)+0
  4211  0677  0873               	movf	(??_UART_Receive+0)+0,w
  4212  0678  07F6               	addwf	(UART_Receive@i),f
  4213                           	
  4214  0679                     l5301:	
  4215  0679  3020               	movlw	(020h)
  4216  067A  0276               	subwf	(UART_Receive@i),w
  4217  067B  1C03               	skipc
  4218  067C  2E7E               	goto	u3531
  4219  067D  2E7F               	goto	u3530
  4220  067E                     u3531:
  4221  067E  2E61               	goto	l5297
  4222  067F                     u3530:
  4223  067F  2E80               	goto	l5303
  4224                           	
  4225  0680                     l3298:	
  4226                           	line	565
  4227                           	
  4228  0680                     l5303:	
  4229                           ;MCU_16f1516_B1.c: 564: }
  4230                           ;MCU_16f1516_B1.c: 565: I2C->MasterTxGO=1;
  4231  0680  083A               	movf	(_I2C),w
  4232  0681  3E42               	addlw	042h
  4233  0682  0086               	movwf	fsr1l
  4234  0683  3001               	movlw 1	; select bank2/3
  4235  0684  0087               	movwf fsr1h	
  4236                           	
  4237  0685  1581               	bsf	indf1,3
  4238                           	line	579
  4239                           	
  4240  0686                     l3299:	
  4241  0686  0008               	return
  4242                           	opt stack 0
  4243                           GLOBAL	__end_of_UART_Receive
  4244  0687                     	__end_of_UART_Receive:
  4245 ;; =============== function _UART_Receive ends ============
  4246                           
  4247                           	signat	_UART_Receive,88
  4248                           	global	_I2C_Master_Transmission
  4249                           psect	text924,local,class=CODE,delta=2
  4250                           global __ptext924
  4251  0524                     __ptext924:
  4252                           
  4253 ;; *************** function _I2C_Master_Transmission *****************
  4254 ;; Defined at:
  4255 ;;		line 376 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  i               1    4[COMMON] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;		None               void
  4262 ;; Registers used:
  4263 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4269 ;;      Params:         0       0       0       0       0       0       0       0
  4270 ;;      Locals:         1       0       0       0       0       0       0       0
  4271 ;;      Temps:          1       0       0       0       0       0       0       0
  4272 ;;      Totals:         2       0       0       0       0       0       0       0
  4273 ;;Total ram usage:        2 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    2
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_I2C_Main
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           psect	text924
  4283                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4284                           	line	376
  4285                           	global	__size_of_I2C_Master_Transmission
  4286  0060                     	__size_of_I2C_Master_Transmission	equ	__end_of_I2C_Master_Transmission-_I2C_Master_Tran
                                 smission
  4287                           	
  4288  0524                     _I2C_Master_Transmission:	
  4289                           	opt	stack 12
  4290                           ; Regs used in _I2C_Master_Transmission: [wreg+fsr1l-status,0]
  4291                           	line	378
  4292                           	
  4293  0524                     l5239:	
  4294                           ;MCU_16f1516_B1.c: 377: char i;
  4295                           ;MCU_16f1516_B1.c: 378: while(SEN);
  4296  0524  2D25               	goto	l3172
  4297                           	
  4298  0525                     l3173:	
  4299                           	
  4300  0525                     l3172:	
  4301  0525  0024               	movlb 4	; select bank4
  4302  0526  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4303  0527  2D29               	goto	u3321
  4304  0528  2D2A               	goto	u3320
  4305  0529                     u3321:
  4306  0529  2D25               	goto	l3172
  4307  052A                     u3320:
  4308                           	
  4309  052A                     l3174:	
  4310                           	line	379
  4311                           ;MCU_16f1516_B1.c: 379: SEN=1;
  4312  052A  1416               	bsf	(4272/8)^0200h,(4272)&7
  4313                           	line	381
  4314                           ;MCU_16f1516_B1.c: 381: while(SEN);
  4315  052B  2D2C               	goto	l3175
  4316                           	
  4317  052C                     l3176:	
  4318                           	
  4319  052C                     l3175:	
  4320  052C  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4321  052D  2D2F               	goto	u3331
  4322  052E  2D30               	goto	u3330
  4323  052F                     u3331:
  4324  052F  2D2C               	goto	l3175
  4325  0530                     u3330:
  4326  0530  2D31               	goto	l5241
  4327                           	
  4328  0531                     l3177:	
  4329                           	line	384
  4330                           	
  4331  0531                     l5241:	
  4332                           ;MCU_16f1516_B1.c: 384: SSPBUF=0x10;
  4333  0531  3010               	movlw	(010h)
  4334  0532  0091               	movwf	(529)^0200h	;volatile
  4335                           	line	385
  4336                           ;MCU_16f1516_B1.c: 385: while(BF);
  4337  0533  2D34               	goto	l3178
  4338                           	
  4339  0534                     l3179:	
  4340                           	
  4341  0534                     l3178:	
  4342  0534  1814               	btfsc	(4256/8)^0200h,(4256)&7
  4343  0535  2D37               	goto	u3341
  4344  0536  2D38               	goto	u3340
  4345  0537                     u3341:
  4346  0537  2D34               	goto	l3178
  4347  0538                     u3340:
  4348  0538  2D3A               	goto	l3181
  4349                           	
  4350  0539                     l3180:	
  4351                           	line	388
  4352                           ;MCU_16f1516_B1.c: 388: while(ACKSTAT);
  4353  0539  2D3A               	goto	l3181
  4354                           	
  4355  053A                     l3182:	
  4356                           	
  4357  053A                     l3181:	
  4358  053A  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  4359  053B  2D3D               	goto	u3351
  4360  053C  2D3E               	goto	u3350
  4361  053D                     u3351:
  4362  053D  2D3A               	goto	l3181
  4363  053E                     u3350:
  4364                           	
  4365  053E                     l3183:	
  4366                           	line	390
  4367                           ;MCU_16f1516_B1.c: 390: for(i=0;i<32;i++)
  4368  053E  01F4               	clrf	(I2C_Master_Transmission@i)
  4369                           	
  4370  053F                     l5243:	
  4371  053F  3020               	movlw	(020h)
  4372  0540  0274               	subwf	(I2C_Master_Transmission@i),w
  4373  0541  1C03               	skipc
  4374  0542  2D44               	goto	u3361
  4375  0543  2D45               	goto	u3360
  4376  0544                     u3361:
  4377  0544  2D48               	goto	l3186
  4378  0545                     u3360:
  4379  0545  2D71               	goto	l3195
  4380                           	
  4381  0546                     l5245:	
  4382  0546  2D71               	goto	l3195
  4383                           	line	391
  4384                           	
  4385  0547                     l3184:	
  4386                           	line	392
  4387                           ;MCU_16f1516_B1.c: 391: {
  4388                           ;MCU_16f1516_B1.c: 392: while(SEN);
  4389  0547  2D48               	goto	l3186
  4390                           	
  4391  0548                     l3187:	
  4392                           	
  4393  0548                     l3186:	
  4394  0548  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4395  0549  2D4B               	goto	u3371
  4396  054A  2D4C               	goto	u3370
  4397  054B                     u3371:
  4398  054B  2D48               	goto	l3186
  4399  054C                     u3370:
  4400  054C  2D4D               	goto	l5247
  4401                           	
  4402  054D                     l3188:	
  4403                           	line	393
  4404                           	
  4405  054D                     l5247:	
  4406                           ;MCU_16f1516_B1.c: 393: SSPBUF=I2C->BufferWriter[i];
  4407  054D  0874               	movf	(I2C_Master_Transmission@i),w
  4408  054E  3E20               	addlw	020h
  4409  054F  0020               	movlb 0	; select bank0
  4410  0550  073A               	addwf	(_I2C),w
  4411  0551  00F3               	movwf	(??_I2C_Master_Transmission+0)+0
  4412  0552  0873               	movf	0+(??_I2C_Master_Transmission+0)+0,w
  4413  0553  0086               	movwf	fsr1l
  4414  0554  3001               	movlw 1	; select bank2/3
  4415  0555  0087               	movwf fsr1h	
  4416                           	
  4417  0556  0801               	movf	indf1,w
  4418  0557  0024               	movlb 4	; select bank4
  4419  0558  0091               	movwf	(529)^0200h	;volatile
  4420                           	line	394
  4421                           ;MCU_16f1516_B1.c: 394: while(BF);
  4422  0559  2D5A               	goto	l3189
  4423                           	
  4424  055A                     l3190:	
  4425                           	
  4426  055A                     l3189:	
  4427  055A  1814               	btfsc	(4256/8)^0200h,(4256)&7
  4428  055B  2D5D               	goto	u3381
  4429  055C  2D5E               	goto	u3380
  4430  055D                     u3381:
  4431  055D  2D5A               	goto	l3189
  4432  055E                     u3380:
  4433  055E  2D60               	goto	l3192
  4434                           	
  4435  055F                     l3191:	
  4436                           	line	397
  4437                           ;MCU_16f1516_B1.c: 397: while(ACKSTAT);
  4438  055F  2D60               	goto	l3192
  4439                           	
  4440  0560                     l3193:	
  4441                           	
  4442  0560                     l3192:	
  4443  0560  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  4444  0561  2D63               	goto	u3391
  4445  0562  2D64               	goto	u3390
  4446  0563                     u3391:
  4447  0563  2D60               	goto	l3192
  4448  0564                     u3390:
  4449  0564  2D65               	goto	l5249
  4450                           	
  4451  0565                     l3194:	
  4452                           	line	390
  4453                           	
  4454  0565                     l5249:	
  4455  0565  3001               	movlw	(01h)
  4456  0566  00F3               	movwf	(??_I2C_Master_Transmission+0)+0
  4457  0567  0873               	movf	(??_I2C_Master_Transmission+0)+0,w
  4458  0568  07F4               	addwf	(I2C_Master_Transmission@i),f
  4459                           	
  4460  0569                     l5251:	
  4461  0569  3020               	movlw	(020h)
  4462  056A  0274               	subwf	(I2C_Master_Transmission@i),w
  4463  056B  1C03               	skipc
  4464  056C  2D6E               	goto	u3401
  4465  056D  2D6F               	goto	u3400
  4466  056E                     u3401:
  4467  056E  2D48               	goto	l3186
  4468  056F                     u3400:
  4469  056F  2D71               	goto	l3195
  4470                           	
  4471  0570                     l3185:	
  4472                           	line	400
  4473                           ;MCU_16f1516_B1.c: 398: }
  4474                           ;MCU_16f1516_B1.c: 400: while(SEN);
  4475  0570  2D71               	goto	l3195
  4476                           	
  4477  0571                     l3196:	
  4478                           	
  4479  0571                     l3195:	
  4480  0571  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4481  0572  2D74               	goto	u3411
  4482  0573  2D75               	goto	u3410
  4483  0574                     u3411:
  4484  0574  2D71               	goto	l3195
  4485  0575                     u3410:
  4486  0575  2D78               	goto	l3198
  4487                           	
  4488  0576                     l3197:	
  4489                           	line	401
  4490                           ;MCU_16f1516_B1.c: 401: while(!PEN)
  4491  0576  2D78               	goto	l3198
  4492                           	
  4493  0577                     l3199:	
  4494                           	line	402
  4495                           ;MCU_16f1516_B1.c: 402: PEN=1;
  4496  0577  1516               	bsf	(4274/8)^0200h,(4274)&7
  4497                           	
  4498  0578                     l3198:	
  4499                           	line	401
  4500  0578  1D16               	btfss	(4274/8)^0200h,(4274)&7
  4501  0579  2D7B               	goto	u3421
  4502  057A  2D7C               	goto	u3420
  4503  057B                     u3421:
  4504  057B  2D77               	goto	l3199
  4505  057C                     u3420:
  4506  057C  2D7E               	goto	l3201
  4507                           	
  4508  057D                     l3200:	
  4509                           	line	403
  4510                           ;MCU_16f1516_B1.c: 403: while(PEN);
  4511  057D  2D7E               	goto	l3201
  4512                           	
  4513  057E                     l3202:	
  4514                           	
  4515  057E                     l3201:	
  4516  057E  1916               	btfsc	(4274/8)^0200h,(4274)&7
  4517  057F  2D81               	goto	u3431
  4518  0580  2D82               	goto	u3430
  4519  0581                     u3431:
  4520  0581  2D7E               	goto	l3201
  4521  0582                     u3430:
  4522  0582  2D83               	goto	l3204
  4523                           	
  4524  0583                     l3203:	
  4525                           	line	406
  4526                           	
  4527  0583                     l3204:	
  4528  0583  0008               	return
  4529                           	opt stack 0
  4530                           GLOBAL	__end_of_I2C_Master_Transmission
  4531  0584                     	__end_of_I2C_Master_Transmission:
  4532 ;; =============== function _I2C_Master_Transmission ends ============
  4533                           
  4534                           	signat	_I2C_Master_Transmission,88
  4535                           	global	_I2C_Master_Reception
  4536                           psect	text925,local,class=CODE,delta=2
  4537                           global __ptext925
  4538  03DC                     __ptext925:
  4539                           
  4540 ;; *************** function _I2C_Master_Reception *****************
  4541 ;; Defined at:
  4542 ;;		line 409 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  i               1    5[COMMON] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;		None               void
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4556 ;;      Params:         0       0       0       0       0       0       0       0
  4557 ;;      Locals:         1       0       0       0       0       0       0       0
  4558 ;;      Temps:          2       0       0       0       0       0       0       0
  4559 ;;      Totals:         3       0       0       0       0       0       0       0
  4560 ;;Total ram usage:        3 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    2
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_I2C_Main
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           psect	text925
  4570                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4571                           	line	409
  4572                           	global	__size_of_I2C_Master_Reception
  4573  007A                     	__size_of_I2C_Master_Reception	equ	__end_of_I2C_Master_Reception-_I2C_Master_Reception
  4574                           	
  4575  03DC                     _I2C_Master_Reception:	
  4576                           	opt	stack 12
  4577                           ; Regs used in _I2C_Master_Reception: [wreg+fsr1l-status,0]
  4578                           	line	411
  4579                           	
  4580  03DC                     l5225:	
  4581                           ;MCU_16f1516_B1.c: 410: char i;
  4582                           ;MCU_16f1516_B1.c: 411: while(SEN);
  4583  03DC  2BDD               	goto	l3207
  4584                           	
  4585  03DD                     l3208:	
  4586                           	
  4587  03DD                     l3207:	
  4588  03DD  0024               	movlb 4	; select bank4
  4589  03DE  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4590  03DF  2BE1               	goto	u3161
  4591  03E0  2BE2               	goto	u3160
  4592  03E1                     u3161:
  4593  03E1  2BDD               	goto	l3207
  4594  03E2                     u3160:
  4595                           	
  4596  03E2                     l3209:	
  4597                           	line	412
  4598                           ;MCU_16f1516_B1.c: 412: SEN=1;
  4599  03E2  1416               	bsf	(4272/8)^0200h,(4272)&7
  4600                           	line	413
  4601                           ;MCU_16f1516_B1.c: 413: while(SEN);
  4602  03E3  2BE4               	goto	l3210
  4603                           	
  4604  03E4                     l3211:	
  4605                           	
  4606  03E4                     l3210:	
  4607  03E4  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4608  03E5  2BE7               	goto	u3171
  4609  03E6  2BE8               	goto	u3170
  4610  03E7                     u3171:
  4611  03E7  2BE4               	goto	l3210
  4612  03E8                     u3170:
  4613  03E8  2BE9               	goto	l5227
  4614                           	
  4615  03E9                     l3212:	
  4616                           	line	416
  4617                           	
  4618  03E9                     l5227:	
  4619                           ;MCU_16f1516_B1.c: 416: SSPBUF=0x11;
  4620  03E9  3011               	movlw	(011h)
  4621  03EA  0091               	movwf	(529)^0200h	;volatile
  4622                           	line	419
  4623                           ;MCU_16f1516_B1.c: 419: while(BF);
  4624  03EB  2BEC               	goto	l3213
  4625                           	
  4626  03EC                     l3214:	
  4627                           	
  4628  03EC                     l3213:	
  4629  03EC  1814               	btfsc	(4256/8)^0200h,(4256)&7
  4630  03ED  2BEF               	goto	u3181
  4631  03EE  2BF0               	goto	u3180
  4632  03EF                     u3181:
  4633  03EF  2BEC               	goto	l3213
  4634  03F0                     u3180:
  4635  03F0  2BF2               	goto	l3216
  4636                           	
  4637  03F1                     l3215:	
  4638                           	line	420
  4639                           ;MCU_16f1516_B1.c: 420: while(ACKSTAT);
  4640  03F1  2BF2               	goto	l3216
  4641                           	
  4642  03F2                     l3217:	
  4643                           	
  4644  03F2                     l3216:	
  4645  03F2  1B16               	btfsc	(4278/8)^0200h,(4278)&7
  4646  03F3  2BF5               	goto	u3191
  4647  03F4  2BF6               	goto	u3190
  4648  03F5                     u3191:
  4649  03F5  2BF2               	goto	l3216
  4650  03F6                     u3190:
  4651                           	
  4652  03F6                     l3218:	
  4653                           	line	423
  4654                           ;MCU_16f1516_B1.c: 423: for(i=0;i<32;i++)
  4655  03F6  01F5               	clrf	(I2C_Master_Reception@i)
  4656                           	
  4657  03F7                     l5229:	
  4658  03F7  3020               	movlw	(020h)
  4659  03F8  0275               	subwf	(I2C_Master_Reception@i),w
  4660  03F9  1C03               	skipc
  4661  03FA  2BFC               	goto	u3201
  4662  03FB  2BFD               	goto	u3200
  4663  03FC                     u3201:
  4664  03FC  2C00               	goto	l3221
  4665  03FD                     u3200:
  4666  03FD  2C37               	goto	l3236
  4667                           	
  4668  03FE                     l5231:	
  4669  03FE  2C37               	goto	l3236
  4670                           	line	424
  4671                           	
  4672  03FF                     l3219:	
  4673                           	line	425
  4674                           ;MCU_16f1516_B1.c: 424: {
  4675                           ;MCU_16f1516_B1.c: 425: while(SEN);
  4676  03FF  2C00               	goto	l3221
  4677                           	
  4678  0400                     l3222:	
  4679                           	
  4680  0400                     l3221:	
  4681  0400  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4682  0401  2C03               	goto	u3211
  4683  0402  2C04               	goto	u3210
  4684  0403                     u3211:
  4685  0403  2C00               	goto	l3221
  4686  0404                     u3210:
  4687  0404  2C06               	goto	l3224
  4688                           	
  4689  0405                     l3223:	
  4690                           	line	426
  4691                           ;MCU_16f1516_B1.c: 426: while(RCEN);
  4692  0405  2C06               	goto	l3224
  4693                           	
  4694  0406                     l3225:	
  4695                           	
  4696  0406                     l3224:	
  4697  0406  1996               	btfsc	(4275/8)^0200h,(4275)&7
  4698  0407  2C09               	goto	u3221
  4699  0408  2C0A               	goto	u3220
  4700  0409                     u3221:
  4701  0409  2C06               	goto	l3224
  4702  040A                     u3220:
  4703                           	
  4704  040A                     l3226:	
  4705                           	line	427
  4706                           ;MCU_16f1516_B1.c: 427: RCEN=1;
  4707  040A  1596               	bsf	(4275/8)^0200h,(4275)&7
  4708                           	line	428
  4709                           ;MCU_16f1516_B1.c: 428: while(RCEN);
  4710  040B  2C0C               	goto	l3227
  4711                           	
  4712  040C                     l3228:	
  4713                           	
  4714  040C                     l3227:	
  4715  040C  1996               	btfsc	(4275/8)^0200h,(4275)&7
  4716  040D  2C0F               	goto	u3231
  4717  040E  2C10               	goto	u3230
  4718  040F                     u3231:
  4719  040F  2C0C               	goto	l3227
  4720  0410                     u3230:
  4721  0410  2C11               	goto	l5233
  4722                           	
  4723  0411                     l3229:	
  4724                           	line	429
  4725                           	
  4726  0411                     l5233:	
  4727                           ;MCU_16f1516_B1.c: 429: I2C->BufferReader[i]=SSPBUF;
  4728  0411  0811               	movf	(529)^0200h,w	;volatile
  4729  0412  00F3               	movwf	(??_I2C_Master_Reception+0)+0
  4730  0413  0875               	movf	(I2C_Master_Reception@i),w
  4731  0414  0020               	movlb 0	; select bank0
  4732  0415  073A               	addwf	(_I2C),w
  4733  0416  00F4               	movwf	(??_I2C_Master_Reception+1)+0
  4734  0417  0874               	movf	0+(??_I2C_Master_Reception+1)+0,w
  4735  0418  0086               	movwf	fsr1l
  4736  0419  3001               	movlw 1	; select bank2/3
  4737  041A  0087               	movwf fsr1h	
  4738                           	
  4739  041B  0873               	movf	(??_I2C_Master_Reception+0)+0,w
  4740  041C  0081               	movwf	indf1
  4741                           	line	430
  4742                           ;MCU_16f1516_B1.c: 430: while(!ACKEN)
  4743  041D  2C1F               	goto	l3230
  4744                           	
  4745  041E                     l3231:	
  4746                           	line	431
  4747                           ;MCU_16f1516_B1.c: 431: ACKEN=1;
  4748  041E  1616               	bsf	(4276/8)^0200h,(4276)&7
  4749                           	
  4750  041F                     l3230:	
  4751                           	line	430
  4752  041F  0024               	movlb 4	; select bank4
  4753  0420  1E16               	btfss	(4276/8)^0200h,(4276)&7
  4754  0421  2C23               	goto	u3241
  4755  0422  2C24               	goto	u3240
  4756  0423                     u3241:
  4757  0423  2C1E               	goto	l3231
  4758  0424                     u3240:
  4759  0424  2C26               	goto	l3233
  4760                           	
  4761  0425                     l3232:	
  4762                           	line	432
  4763                           ;MCU_16f1516_B1.c: 432: while(ACKEN);
  4764  0425  2C26               	goto	l3233
  4765                           	
  4766  0426                     l3234:	
  4767                           	
  4768  0426                     l3233:	
  4769  0426  1A16               	btfsc	(4276/8)^0200h,(4276)&7
  4770  0427  2C29               	goto	u3251
  4771  0428  2C2A               	goto	u3250
  4772  0429                     u3251:
  4773  0429  2C26               	goto	l3233
  4774  042A                     u3250:
  4775  042A  2C2B               	goto	l5235
  4776                           	
  4777  042B                     l3235:	
  4778                           	line	423
  4779                           	
  4780  042B                     l5235:	
  4781  042B  3001               	movlw	(01h)
  4782  042C  00F3               	movwf	(??_I2C_Master_Reception+0)+0
  4783  042D  0873               	movf	(??_I2C_Master_Reception+0)+0,w
  4784  042E  07F5               	addwf	(I2C_Master_Reception@i),f
  4785                           	
  4786  042F                     l5237:	
  4787  042F  3020               	movlw	(020h)
  4788  0430  0275               	subwf	(I2C_Master_Reception@i),w
  4789  0431  1C03               	skipc
  4790  0432  2C34               	goto	u3261
  4791  0433  2C35               	goto	u3260
  4792  0434                     u3261:
  4793  0434  2C00               	goto	l3221
  4794  0435                     u3260:
  4795  0435  2C37               	goto	l3236
  4796                           	
  4797  0436                     l3220:	
  4798                           	line	434
  4799                           ;MCU_16f1516_B1.c: 433: }
  4800                           ;MCU_16f1516_B1.c: 434: while(RCEN);
  4801  0436  2C37               	goto	l3236
  4802                           	
  4803  0437                     l3237:	
  4804                           	
  4805  0437                     l3236:	
  4806  0437  1996               	btfsc	(4275/8)^0200h,(4275)&7
  4807  0438  2C3A               	goto	u3271
  4808  0439  2C3B               	goto	u3270
  4809  043A                     u3271:
  4810  043A  2C37               	goto	l3236
  4811  043B                     u3270:
  4812                           	
  4813  043B                     l3238:	
  4814                           	line	435
  4815                           ;MCU_16f1516_B1.c: 435: RCEN=1;
  4816  043B  1596               	bsf	(4275/8)^0200h,(4275)&7
  4817                           	line	436
  4818                           ;MCU_16f1516_B1.c: 436: while(RCEN);
  4819  043C  2C3D               	goto	l3239
  4820                           	
  4821  043D                     l3240:	
  4822                           	
  4823  043D                     l3239:	
  4824  043D  1996               	btfsc	(4275/8)^0200h,(4275)&7
  4825  043E  2C40               	goto	u3281
  4826  043F  2C41               	goto	u3280
  4827  0440                     u3281:
  4828  0440  2C3D               	goto	l3239
  4829  0441                     u3280:
  4830  0441  2C43               	goto	l3242
  4831                           	
  4832  0442                     l3241:	
  4833                           	line	438
  4834                           ;MCU_16f1516_B1.c: 438: while(SEN);
  4835  0442  2C43               	goto	l3242
  4836                           	
  4837  0443                     l3243:	
  4838                           	
  4839  0443                     l3242:	
  4840  0443  1816               	btfsc	(4272/8)^0200h,(4272)&7
  4841  0444  2C46               	goto	u3291
  4842  0445  2C47               	goto	u3290
  4843  0446                     u3291:
  4844  0446  2C43               	goto	l3242
  4845  0447                     u3290:
  4846  0447  2C4A               	goto	l3245
  4847                           	
  4848  0448                     l3244:	
  4849                           	line	439
  4850                           ;MCU_16f1516_B1.c: 439: while(!PEN)
  4851  0448  2C4A               	goto	l3245
  4852                           	
  4853  0449                     l3246:	
  4854                           	line	440
  4855                           ;MCU_16f1516_B1.c: 440: PEN=1;
  4856  0449  1516               	bsf	(4274/8)^0200h,(4274)&7
  4857                           	
  4858  044A                     l3245:	
  4859                           	line	439
  4860  044A  1D16               	btfss	(4274/8)^0200h,(4274)&7
  4861  044B  2C4D               	goto	u3301
  4862  044C  2C4E               	goto	u3300
  4863  044D                     u3301:
  4864  044D  2C49               	goto	l3246
  4865  044E                     u3300:
  4866  044E  2C50               	goto	l3248
  4867                           	
  4868  044F                     l3247:	
  4869                           	line	441
  4870                           ;MCU_16f1516_B1.c: 441: while(PEN);
  4871  044F  2C50               	goto	l3248
  4872                           	
  4873  0450                     l3249:	
  4874                           	
  4875  0450                     l3248:	
  4876  0450  1916               	btfsc	(4274/8)^0200h,(4274)&7
  4877  0451  2C53               	goto	u3311
  4878  0452  2C54               	goto	u3310
  4879  0453                     u3311:
  4880  0453  2C50               	goto	l3248
  4881  0454                     u3310:
  4882  0454  2C55               	goto	l3251
  4883                           	
  4884  0455                     l3250:	
  4885                           	line	444
  4886                           	
  4887  0455                     l3251:	
  4888  0455  0008               	return
  4889                           	opt stack 0
  4890                           GLOBAL	__end_of_I2C_Master_Reception
  4891  0456                     	__end_of_I2C_Master_Reception:
  4892 ;; =============== function _I2C_Master_Reception ends ============
  4893                           
  4894                           	signat	_I2C_Master_Reception,88
  4895                           	global	_UART_Set
  4896                           psect	text926,local,class=CODE,delta=2
  4897                           global __ptext926
  4898  07C8                     __ptext926:
  4899                           
  4900 ;; *************** function _UART_Set *****************
  4901 ;; Defined at:
  4902 ;;		line 490 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;		None               void
  4909 ;; Registers used:
  4910 ;;		wreg, status,2
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4916 ;;      Params:         0       0       0       0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0
  4918 ;;      Temps:          1       0       0       0       0       0       0       0
  4919 ;;      Totals:         1       0       0       0       0       0       0       0
  4920 ;;Total ram usage:        1 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    2
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_Mcu_Initial
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           psect	text926
  4930                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  4931                           	line	490
  4932                           	global	__size_of_UART_Set
  4933  0018                     	__size_of_UART_Set	equ	__end_of_UART_Set-_UART_Set
  4934                           	
  4935  07C8                     _UART_Set:	
  4936                           	opt	stack 12
  4937                           ; Regs used in _UART_Set: [wreg+status,2]
  4938                           	line	491
  4939                           	
  4940  07C8                     l5157:	
  4941                           ;MCU_16f1516_B1.c: 491: UART=&VarUart;
  4942  07C8  3020               	movlw	(_VarUart)&0ffh
  4943  07C9  00F3               	movwf	(??_UART_Set+0)+0
  4944  07CA  0873               	movf	(??_UART_Set+0)+0,w
  4945  07CB  00F9               	movwf	(_UART)
  4946                           	line	492
  4947                           	
  4948  07CC                     l5159:	
  4949                           ;MCU_16f1516_B1.c: 492: TRISC7 = 1;
  4950  07CC  0021               	movlb 1	; select bank1
  4951  07CD  178E               	bsf	(1143/8)^080h,(1143)&7
  4952                           	line	493
  4953                           	
  4954  07CE                     l5161:	
  4955                           ;MCU_16f1516_B1.c: 493: TRISC6 = 1;
  4956  07CE  170E               	bsf	(1142/8)^080h,(1142)&7
  4957                           	line	494
  4958                           ;MCU_16f1516_B1.c: 494: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  4959  07CF  3033               	movlw	(033h)
  4960  07D0  0023               	movlb 3	; select bank3
  4961  07D1  009B               	movwf	(411)^0180h	;volatile
  4962                           	line	495
  4963                           	
  4964  07D2                     l5163:	
  4965                           ;MCU_16f1516_B1.c: 495: SPBRGH = 0;
  4966  07D2  019C               	clrf	(412)^0180h	;volatile
  4967                           	line	496
  4968                           	
  4969  07D3                     l5165:	
  4970                           ;MCU_16f1516_B1.c: 496: BRG16 = 0;
  4971  07D3  119F               	bcf	(3323/8)^0180h,(3323)&7
  4972                           	line	497
  4973                           	
  4974  07D4                     l5167:	
  4975                           ;MCU_16f1516_B1.c: 497: RCSTA = (0|0x90);
  4976  07D4  3090               	movlw	(090h)
  4977  07D5  009D               	movwf	(413)^0180h	;volatile
  4978                           	line	498
  4979                           	
  4980  07D6                     l5169:	
  4981                           ;MCU_16f1516_B1.c: 498: TXSTA = (0x4|0|0x20);
  4982  07D6  3024               	movlw	(024h)
  4983  07D7  009E               	movwf	(414)^0180h	;volatile
  4984                           	line	499
  4985                           	
  4986  07D8                     l5171:	
  4987                           ;MCU_16f1516_B1.c: 499: TX9=0;
  4988  07D8  131E               	bcf	(3318/8)^0180h,(3318)&7
  4989                           	line	500
  4990                           	
  4991  07D9                     l5173:	
  4992                           ;MCU_16f1516_B1.c: 500: RX9=0;
  4993  07D9  131D               	bcf	(3310/8)^0180h,(3310)&7
  4994                           	line	501
  4995                           	
  4996  07DA                     l5175:	
  4997                           ;MCU_16f1516_B1.c: 501: TXIE=0;
  4998  07DA  0021               	movlb 1	; select bank1
  4999  07DB  1211               	bcf	(1164/8)^080h,(1164)&7
  5000                           	line	502
  5001                           	
  5002  07DC                     l5177:	
  5003                           ;MCU_16f1516_B1.c: 502: RCIE=1;
  5004  07DC  1691               	bsf	(1165/8)^080h,(1165)&7
  5005                           	line	503
  5006                           	
  5007  07DD                     l5179:	
  5008                           ;MCU_16f1516_B1.c: 503: PEIE=1;
  5009  07DD  170B               	bsf	(94/8),(94)&7
  5010                           	line	504
  5011                           	
  5012  07DE                     l5181:	
  5013                           ;MCU_16f1516_B1.c: 504: GIE=1;
  5014  07DE  178B               	bsf	(95/8),(95)&7
  5015                           	line	505
  5016                           	
  5017  07DF                     l3272:	
  5018  07DF  0008               	return
  5019                           	opt stack 0
  5020                           GLOBAL	__end_of_UART_Set
  5021  07E0                     	__end_of_UART_Set:
  5022 ;; =============== function _UART_Set ends ============
  5023                           
  5024                           	signat	_UART_Set,88
  5025                           	global	_I2C_Set
  5026                           psect	text927,local,class=CODE,delta=2
  5027                           global __ptext927
  5028  0FA9                     __ptext927:
  5029                           
  5030 ;; *************** function _I2C_Set *****************
  5031 ;; Defined at:
  5032 ;;		line 234 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		wreg, status,2
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5046 ;;      Params:         0       0       0       0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0
  5048 ;;      Temps:          1       0       0       0       0       0       0       0
  5049 ;;      Totals:         1       0       0       0       0       0       0       0
  5050 ;;Total ram usage:        1 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    2
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_Mcu_Initial
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           psect	text927
  5060                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5061                           	line	234
  5062                           	global	__size_of_I2C_Set
  5063  000E                     	__size_of_I2C_Set	equ	__end_of_I2C_Set-_I2C_Set
  5064                           	
  5065  0FA9                     _I2C_Set:	
  5066                           	opt	stack 12
  5067                           ; Regs used in _I2C_Set: [wreg+status,2]
  5068                           	line	235
  5069                           	
  5070  0FA9                     l5151:	
  5071                           ;MCU_16f1516_B1.c: 235: I2C=&VarI2C;
  5072  0FA9  30A0               	movlw	(_VarI2C)&0ffh
  5073  0FAA  00F3               	movwf	(??_I2C_Set+0)+0
  5074  0FAB  0873               	movf	(??_I2C_Set+0)+0,w
  5075  0FAC  0020               	movlb 0	; select bank0
  5076  0FAD  00BA               	movwf	(_I2C)
  5077                           	line	237
  5078                           ;MCU_16f1516_B1.c: 237: SSPADD = 0x09;
  5079  0FAE  3009               	movlw	(09h)
  5080  0FAF  0024               	movlb 4	; select bank4
  5081  0FB0  0092               	movwf	(530)^0200h	;volatile
  5082                           	line	238
  5083                           ;MCU_16f1516_B1.c: 238: SSPSTAT = 0x80;
  5084  0FB1  3080               	movlw	(080h)
  5085  0FB2  0094               	movwf	(532)^0200h	;volatile
  5086                           	line	239
  5087                           	
  5088  0FB3                     l5153:	
  5089                           ;MCU_16f1516_B1.c: 239: SSPCON2 = 0;
  5090  0FB3  0196               	clrf	(534)^0200h	;volatile
  5091                           	line	241
  5092                           	
  5093  0FB4                     l5155:	
  5094                           ;MCU_16f1516_B1.c: 241: SSPCON1=0b101000;
  5095  0FB4  3028               	movlw	(028h)
  5096  0FB5  0095               	movwf	(533)^0200h	;volatile
  5097                           	line	258
  5098                           	
  5099  0FB6                     l3150:	
  5100  0FB6  0008               	return
  5101                           	opt stack 0
  5102                           GLOBAL	__end_of_I2C_Set
  5103  0FB7                     	__end_of_I2C_Set:
  5104 ;; =============== function _I2C_Set ends ============
  5105                           
  5106                           	signat	_I2C_Set,88
  5107                           	global	_TMR1_Set
  5108                           psect	text928,local,class=CODE,delta=2
  5109                           global __ptext928
  5110  0FC7                     __ptext928:
  5111                           
  5112 ;; *************** function _TMR1_Set *****************
  5113 ;; Defined at:
  5114 ;;		line 115 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;		None               void
  5121 ;; Registers used:
  5122 ;;		wreg
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5128 ;;      Params:         0       0       0       0       0       0       0       0
  5129 ;;      Locals:         0       0       0       0       0       0       0       0
  5130 ;;      Temps:          1       0       0       0       0       0       0       0
  5131 ;;      Totals:         1       0       0       0       0       0       0       0
  5132 ;;Total ram usage:        1 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    2
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_Mcu_Initial
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           psect	text928
  5142                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5143                           	line	115
  5144                           	global	__size_of_TMR1_Set
  5145  0010                     	__size_of_TMR1_Set	equ	__end_of_TMR1_Set-_TMR1_Set
  5146                           	
  5147  0FC7                     _TMR1_Set:	
  5148                           	opt	stack 12
  5149                           ; Regs used in _TMR1_Set: [wreg]
  5150                           	line	116
  5151                           	
  5152  0FC7                     l5143:	
  5153                           ;MCU_16f1516_B1.c: 116: Timer1=&VarTimer1;
  5154  0FC7  304B               	movlw	(_VarTimer1)&0ffh
  5155  0FC8  00F3               	movwf	(??_TMR1_Set+0)+0
  5156  0FC9  0873               	movf	(??_TMR1_Set+0)+0,w
  5157  0FCA  00F8               	movwf	(_Timer1)
  5158                           	line	117
  5159                           ;MCU_16f1516_B1.c: 117: T1CON=(0x40 | 0x00 | 0x01);
  5160  0FCB  3041               	movlw	(041h)
  5161  0FCC  0020               	movlb 0	; select bank0
  5162  0FCD  0098               	movwf	(24)	;volatile
  5163                           	line	118
  5164                           ;MCU_16f1516_B1.c: 118: TMR1H=((65536-700)/256);
  5165  0FCE  30FD               	movlw	(0FDh)
  5166  0FCF  0097               	movwf	(23)	;volatile
  5167                           	line	119
  5168                           ;MCU_16f1516_B1.c: 119: TMR1L=((65536-700)%256);
  5169  0FD0  3044               	movlw	(044h)
  5170  0FD1  0096               	movwf	(22)	;volatile
  5171                           	line	120
  5172                           	
  5173  0FD2                     l5145:	
  5174                           ;MCU_16f1516_B1.c: 120: TMR1IE=1;
  5175  0FD2  0021               	movlb 1	; select bank1
  5176  0FD3  1411               	bsf	(1160/8)^080h,(1160)&7
  5177                           	line	121
  5178                           	
  5179  0FD4                     l5147:	
  5180                           ;MCU_16f1516_B1.c: 121: PEIE=1;
  5181  0FD4  170B               	bsf	(94/8),(94)&7
  5182                           	line	122
  5183                           	
  5184  0FD5                     l5149:	
  5185                           ;MCU_16f1516_B1.c: 122: GIE=1;
  5186  0FD5  178B               	bsf	(95/8),(95)&7
  5187                           	line	123
  5188                           	
  5189  0FD6                     l3142:	
  5190  0FD6  0008               	return
  5191                           	opt stack 0
  5192                           GLOBAL	__end_of_TMR1_Set
  5193  0FD7                     	__end_of_TMR1_Set:
  5194 ;; =============== function _TMR1_Set ends ============
  5195                           
  5196                           	signat	_TMR1_Set,88
  5197                           	global	_IO_Set
  5198                           psect	text929,local,class=CODE,delta=2
  5199                           global __ptext929
  5200  07E0                     __ptext929:
  5201                           
  5202 ;; *************** function _IO_Set *****************
  5203 ;; Defined at:
  5204 ;;		line 38 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;		None               void
  5211 ;; Registers used:
  5212 ;;		wreg, status,2
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5218 ;;      Params:         0       0       0       0       0       0       0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0
  5221 ;;      Totals:         0       0       0       0       0       0       0       0
  5222 ;;Total ram usage:        0 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    2
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_Mcu_Initial
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           psect	text929
  5232                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5233                           	line	38
  5234                           	global	__size_of_IO_Set
  5235  0016                     	__size_of_IO_Set	equ	__end_of_IO_Set-_IO_Set
  5236                           	
  5237  07E0                     _IO_Set:	
  5238                           	opt	stack 12
  5239                           ; Regs used in _IO_Set: [wreg+status,2]
  5240                           	line	39
  5241                           	
  5242  07E0                     l5127:	
  5243                           ;MCU_16f1516_B1.c: 39: TRISA=0b00001001;;
  5244  07E0  3009               	movlw	(09h)
  5245  07E1  0021               	movlb 1	; select bank1
  5246  07E2  008C               	movwf	(140)^080h	;volatile
  5247                           	line	40
  5248                           	
  5249  07E3                     l5129:	
  5250                           ;MCU_16f1516_B1.c: 40: TRISB=0b00000000;;
  5251  07E3  018D               	clrf	(141)^080h	;volatile
  5252                           	line	41
  5253                           	
  5254  07E4                     l5131:	
  5255                           ;MCU_16f1516_B1.c: 41: TRISC=0b00011001;;
  5256  07E4  3019               	movlw	(019h)
  5257  07E5  008E               	movwf	(142)^080h	;volatile
  5258                           	line	42
  5259                           ;MCU_16f1516_B1.c: 42: LATA=0b00000000;;
  5260  07E6  0022               	movlb 2	; select bank2
  5261  07E7  018C               	clrf	(268)^0100h	;volatile
  5262                           	line	43
  5263                           ;MCU_16f1516_B1.c: 43: LATB=0b00000000;;
  5264  07E8  018D               	clrf	(269)^0100h	;volatile
  5265                           	line	44
  5266                           ;MCU_16f1516_B1.c: 44: LATC=0b00000000;;
  5267  07E9  018E               	clrf	(270)^0100h	;volatile
  5268                           	line	45
  5269                           	
  5270  07EA                     l5133:	
  5271                           ;MCU_16f1516_B1.c: 45: ANSELA=0b00000001;;
  5272  07EA  3001               	movlw	(01h)
  5273  07EB  0023               	movlb 3	; select bank3
  5274  07EC  008C               	movwf	(396)^0180h	;volatile
  5275                           	line	46
  5276                           	
  5277  07ED                     l5135:	
  5278                           ;MCU_16f1516_B1.c: 46: ANSELB=0b00000000;;
  5279  07ED  018D               	clrf	(397)^0180h	;volatile
  5280                           	line	47
  5281                           	
  5282  07EE                     l5137:	
  5283                           ;MCU_16f1516_B1.c: 47: ANSELC=0b00000000;;
  5284  07EE  018E               	clrf	(398)^0180h	;volatile
  5285                           	line	48
  5286                           	
  5287  07EF                     l5139:	
  5288                           ;MCU_16f1516_B1.c: 48: PORTA=0b00001001;;
  5289  07EF  3009               	movlw	(09h)
  5290  07F0  0020               	movlb 0	; select bank0
  5291  07F1  008C               	movwf	(12)	;volatile
  5292                           	line	49
  5293                           ;MCU_16f1516_B1.c: 49: PORTB=0b00000000;;
  5294  07F2  018D               	clrf	(13)	;volatile
  5295                           	line	50
  5296                           	
  5297  07F3                     l5141:	
  5298                           ;MCU_16f1516_B1.c: 50: PORTC=0b00011001;;
  5299  07F3  3019               	movlw	(019h)
  5300  07F4  008E               	movwf	(14)	;volatile
  5301                           	line	51
  5302                           	
  5303  07F5                     l3136:	
  5304  07F5  0008               	return
  5305                           	opt stack 0
  5306                           GLOBAL	__end_of_IO_Set
  5307  07F6                     	__end_of_IO_Set:
  5308 ;; =============== function _IO_Set ends ============
  5309                           
  5310                           	signat	_IO_Set,88
  5311                           	global	_SegmentDisplay_Main
  5312                           psect	text930,local,class=CODE,delta=2
  5313                           global __ptext930
  5314  0353                     __ptext930:
  5315                           
  5316 ;; *************** function _SegmentDisplay_Main *****************
  5317 ;; Defined at:
  5318 ;;		line 73 in file "I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;		None               void
  5325 ;; Registers used:
  5326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5332 ;;      Params:         0       0       0       0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0
  5334 ;;      Temps:          2       0       0       0       0       0       0       0
  5335 ;;      Totals:         2       0       0       0       0       0       0       0
  5336 ;;Total ram usage:        2 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    2
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_main
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           psect	text930
  5346                           	file	"I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  5347                           	line	73
  5348                           	global	__size_of_SegmentDisplay_Main
  5349  0089                     	__size_of_SegmentDisplay_Main	equ	__end_of_SegmentDisplay_Main-_SegmentDisplay_Main
  5350                           	
  5351  0353                     _SegmentDisplay_Main:	
  5352                           	opt	stack 13
  5353                           ; Regs used in _SegmentDisplay_Main: [wreg-status,0]
  5354                           	line	74
  5355                           	
  5356  0353                     l5093:	
  5357                           ;SegmentDisplay_A2.c: 74: if(Segment->GO)
  5358  0353  0020               	movlb 0	; select bank0
  5359  0354  083B               	movf	(_Segment),w
  5360  0355  3E15               	addlw	015h
  5361  0356  0086               	movwf	fsr1l
  5362  0357  0187               	clrf fsr1h	
  5363                           	
  5364  0358  1C81               	btfss	indf1,1
  5365  0359  2B5B               	goto	u3001
  5366  035A  2B5C               	goto	u3000
  5367  035B                     u3001:
  5368  035B  2BDB               	goto	l2094
  5369  035C                     u3000:
  5370                           	line	76
  5371                           	
  5372  035C                     l5095:	
  5373                           ;SegmentDisplay_A2.c: 75: {
  5374                           ;SegmentDisplay_A2.c: 76: Segment->Time++;
  5375  035C  3001               	movlw	(01h)
  5376  035D  00F3               	movwf	(??_SegmentDisplay_Main+0)+0
  5377  035E  083B               	movf	(_Segment),w
  5378  035F  3E19               	addlw	019h
  5379  0360  0086               	movwf	fsr1l
  5380  0361  0187               	clrf fsr1h	
  5381                           	
  5382  0362  0873               	movf	(??_SegmentDisplay_Main+0)+0,w
  5383  0363  0781               	addwf	indf1,f
  5384                           	line	77
  5385                           	
  5386  0364                     l5097:	
  5387                           ;SegmentDisplay_A2.c: 77: if(Segment->Time == 5)
  5388  0364  083B               	movf	(_Segment),w
  5389  0365  3E19               	addlw	019h
  5390  0366  0086               	movwf	fsr1l
  5391  0367  0187               	clrf fsr1h	
  5392                           	
  5393  0368  0801               	movf	indf1,w
  5394  0369  3A05               	xorlw	05h&0ffh
  5395  036A  1D03               	skipz
  5396  036B  2B6D               	goto	u3011
  5397  036C  2B6E               	goto	u3010
  5398  036D                     u3011:
  5399  036D  2BDB               	goto	l2094
  5400  036E                     u3010:
  5401                           	line	79
  5402                           	
  5403  036E                     l5099:	
  5404                           ;SegmentDisplay_A2.c: 78: {
  5405                           ;SegmentDisplay_A2.c: 79: Segment->Time=0;
  5406  036E  083B               	movf	(_Segment),w
  5407  036F  3E19               	addlw	019h
  5408  0370  0086               	movwf	fsr1l
  5409  0371  0187               	clrf fsr1h	
  5410                           	
  5411  0372  0181               	clrf	indf1
  5412                           	line	80
  5413                           	
  5414  0373                     l5101:	
  5415                           ;SegmentDisplay_A2.c: 80: PORTA&=0x0f;
  5416  0373  300F               	movlw	(0Fh)
  5417  0374  00F3               	movwf	(??_SegmentDisplay_Main+0)+0
  5418  0375  0873               	movf	(??_SegmentDisplay_Main+0)+0,w
  5419  0376  058C               	andwf	(12),f	;volatile
  5420                           	line	81
  5421                           	
  5422  0377                     l5103:	
  5423                           ;SegmentDisplay_A2.c: 81: if(Segment->ComCount == 0)
  5424  0377  083B               	movf	(_Segment),w
  5425  0378  3E16               	addlw	016h
  5426  0379  0086               	movwf	fsr1l
  5427  037A  0187               	clrf fsr1h	
  5428                           	
  5429  037B  0881               	movf	indf1,f
  5430  037C  1D03               	skipz
  5431  037D  2B7F               	goto	u3021
  5432  037E  2B80               	goto	u3020
  5433  037F                     u3021:
  5434  037F  2B82               	goto	l5107
  5435  0380                     u3020:
  5436                           	line	83
  5437                           	
  5438  0380                     l5105:	
  5439                           ;SegmentDisplay_A2.c: 82: {
  5440                           ;SegmentDisplay_A2.c: 83: RA4=1;
  5441  0380  160C               	bsf	(100/8),(100)&7
  5442                           	line	84
  5443                           ;SegmentDisplay_A2.c: 84: }
  5444  0381  2BA9               	goto	l5119
  5445                           	line	85
  5446                           	
  5447  0382                     l2085:	
  5448                           	
  5449  0382                     l5107:	
  5450                           ;SegmentDisplay_A2.c: 85: else if(Segment->ComCount == 1)
  5451  0382  083B               	movf	(_Segment),w
  5452  0383  3E16               	addlw	016h
  5453  0384  0086               	movwf	fsr1l
  5454  0385  0187               	clrf fsr1h	
  5455                           	
  5456  0386  0801               	movf	indf1,w
  5457  0387  3A01               	xorlw	01h&0ffh
  5458  0388  1D03               	skipz
  5459  0389  2B8B               	goto	u3031
  5460  038A  2B8C               	goto	u3030
  5461  038B                     u3031:
  5462  038B  2B8E               	goto	l5111
  5463  038C                     u3030:
  5464                           	line	87
  5465                           	
  5466  038C                     l5109:	
  5467                           ;SegmentDisplay_A2.c: 86: {
  5468                           ;SegmentDisplay_A2.c: 87: RA5=1;
  5469  038C  168C               	bsf	(101/8),(101)&7
  5470                           	line	88
  5471                           ;SegmentDisplay_A2.c: 88: }
  5472  038D  2BA9               	goto	l5119
  5473                           	line	89
  5474                           	
  5475  038E                     l2087:	
  5476                           	
  5477  038E                     l5111:	
  5478                           ;SegmentDisplay_A2.c: 89: else if(Segment->ComCount == 2)
  5479  038E  083B               	movf	(_Segment),w
  5480  038F  3E16               	addlw	016h
  5481  0390  0086               	movwf	fsr1l
  5482  0391  0187               	clrf fsr1h	
  5483                           	
  5484  0392  0801               	movf	indf1,w
  5485  0393  3A02               	xorlw	02h&0ffh
  5486  0394  1D03               	skipz
  5487  0395  2B97               	goto	u3041
  5488  0396  2B98               	goto	u3040
  5489  0397                     u3041:
  5490  0397  2B9A               	goto	l5115
  5491  0398                     u3040:
  5492                           	line	91
  5493                           	
  5494  0398                     l5113:	
  5495                           ;SegmentDisplay_A2.c: 90: {
  5496                           ;SegmentDisplay_A2.c: 91: RA6=1;
  5497  0398  170C               	bsf	(102/8),(102)&7
  5498                           	line	92
  5499                           ;SegmentDisplay_A2.c: 92: }
  5500  0399  2BA9               	goto	l5119
  5501                           	line	93
  5502                           	
  5503  039A                     l2089:	
  5504                           	
  5505  039A                     l5115:	
  5506                           ;SegmentDisplay_A2.c: 93: else if(Segment->ComCount == 3)
  5507  039A  083B               	movf	(_Segment),w
  5508  039B  3E16               	addlw	016h
  5509  039C  0086               	movwf	fsr1l
  5510  039D  0187               	clrf fsr1h	
  5511                           	
  5512  039E  0801               	movf	indf1,w
  5513  039F  3A03               	xorlw	03h&0ffh
  5514  03A0  1D03               	skipz
  5515  03A1  2BA3               	goto	u3051
  5516  03A2  2BA4               	goto	u3050
  5517  03A3                     u3051:
  5518  03A3  2BA9               	goto	l5119
  5519  03A4                     u3050:
  5520                           	line	95
  5521                           	
  5522  03A4                     l5117:	
  5523                           ;SegmentDisplay_A2.c: 94: {
  5524                           ;SegmentDisplay_A2.c: 95: RA7=1;
  5525  03A4  178C               	bsf	(103/8),(103)&7
  5526  03A5  2BA9               	goto	l5119
  5527                           	line	96
  5528                           	
  5529  03A6                     l2091:	
  5530  03A6  2BA9               	goto	l5119
  5531                           	line	97
  5532                           	
  5533  03A7                     l2090:	
  5534  03A7  2BA9               	goto	l5119
  5535                           	
  5536  03A8                     l2088:	
  5537  03A8  2BA9               	goto	l5119
  5538                           	
  5539  03A9                     l2086:	
  5540                           	
  5541  03A9                     l5119:	
  5542                           ;SegmentDisplay_A2.c: 96: }
  5543                           ;SegmentDisplay_A2.c: 97: PORTB=Segment->Display[Segment->Num[Segment->ComCount]];
  5544  03A9  083B               	movf	(_Segment),w
  5545  03AA  3E16               	addlw	016h
  5546  03AB  0086               	movwf	fsr1l
  5547  03AC  0187               	clrf fsr1h	
  5548                           	
  5549  03AD  0801               	movf	indf1,w
  5550  03AE  3E11               	addlw	011h
  5551  03AF  073B               	addwf	(_Segment),w
  5552  03B0  00F3               	movwf	(??_SegmentDisplay_Main+0)+0
  5553  03B1  0873               	movf	0+(??_SegmentDisplay_Main+0)+0,w
  5554  03B2  0086               	movwf	fsr1l
  5555  03B3  0187               	clrf fsr1h	
  5556                           	
  5557  03B4  0801               	movf	indf1,w
  5558  03B5  073B               	addwf	(_Segment),w
  5559  03B6  00F4               	movwf	(??_SegmentDisplay_Main+1)+0
  5560  03B7  0874               	movf	0+(??_SegmentDisplay_Main+1)+0,w
  5561  03B8  0086               	movwf	fsr1l
  5562  03B9  0187               	clrf fsr1h	
  5563                           	
  5564  03BA  0801               	movf	indf1,w
  5565  03BB  008D               	movwf	(13)	;volatile
  5566                           	line	98
  5567                           	
  5568  03BC                     l5121:	
  5569                           ;SegmentDisplay_A2.c: 98: if(Segment->ComCount < Segment->DisplayCount)
  5570  03BC  083B               	movf	(_Segment),w
  5571  03BD  3E16               	addlw	016h
  5572  03BE  0086               	movwf	fsr1l
  5573  03BF  0187               	clrf fsr1h	
  5574                           	
  5575  03C0  083B               	movf	(_Segment),w
  5576  03C1  3E17               	addlw	017h
  5577  03C2  0084               	movwf	fsr0l
  5578  03C3  0185               	clrf fsr0h	
  5579                           	
  5580  03C4  0800               	movf	indf0,w
  5581  03C5  0201               	subwf	indf1,w
  5582  03C6  1803               	skipnc
  5583  03C7  2BC9               	goto	u3061
  5584  03C8  2BCA               	goto	u3060
  5585  03C9                     u3061:
  5586  03C9  2BD3               	goto	l5125
  5587  03CA                     u3060:
  5588                           	line	100
  5589                           	
  5590  03CA                     l5123:	
  5591                           ;SegmentDisplay_A2.c: 99: {
  5592                           ;SegmentDisplay_A2.c: 100: Segment->ComCount++;
  5593  03CA  3001               	movlw	(01h)
  5594  03CB  00F3               	movwf	(??_SegmentDisplay_Main+0)+0
  5595  03CC  083B               	movf	(_Segment),w
  5596  03CD  3E16               	addlw	016h
  5597  03CE  0086               	movwf	fsr1l
  5598  03CF  0187               	clrf fsr1h	
  5599                           	
  5600  03D0  0873               	movf	(??_SegmentDisplay_Main+0)+0,w
  5601  03D1  0781               	addwf	indf1,f
  5602                           	line	101
  5603                           ;SegmentDisplay_A2.c: 101: }
  5604  03D2  2BDB               	goto	l2094
  5605                           	line	102
  5606                           	
  5607  03D3                     l2092:	
  5608                           	line	104
  5609                           	
  5610  03D3                     l5125:	
  5611                           ;SegmentDisplay_A2.c: 102: else
  5612                           ;SegmentDisplay_A2.c: 103: {
  5613                           ;SegmentDisplay_A2.c: 104: Segment->ComCount=0;
  5614  03D3  083B               	movf	(_Segment),w
  5615  03D4  3E16               	addlw	016h
  5616  03D5  0086               	movwf	fsr1l
  5617  03D6  0187               	clrf fsr1h	
  5618                           	
  5619  03D7  0181               	clrf	indf1
  5620  03D8  2BDB               	goto	l2094
  5621                           	line	105
  5622                           	
  5623  03D9                     l2093:	
  5624  03D9  2BDB               	goto	l2094
  5625                           	line	106
  5626                           	
  5627  03DA                     l2084:	
  5628  03DA  2BDB               	goto	l2094
  5629                           	line	107
  5630                           	
  5631  03DB                     l2083:	
  5632                           	line	108
  5633                           	
  5634  03DB                     l2094:	
  5635  03DB  0008               	return
  5636                           	opt stack 0
  5637                           GLOBAL	__end_of_SegmentDisplay_Main
  5638  03DC                     	__end_of_SegmentDisplay_Main:
  5639 ;; =============== function _SegmentDisplay_Main ends ============
  5640                           
  5641                           	signat	_SegmentDisplay_Main,88
  5642                           	global	_SegmentDisplay_Initial
  5643                           psect	text931,local,class=CODE,delta=2
  5644                           global __ptext931
  5645  0FB7                     __ptext931:
  5646                           
  5647 ;; *************** function _SegmentDisplay_Initial *****************
  5648 ;; Defined at:
  5649 ;;		line 9 in file "I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;		None               void
  5656 ;; Registers used:
  5657 ;;		wreg, fsr1l, fsr1h
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5663 ;;      Params:         0       0       0       0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0       0
  5665 ;;      Temps:          1       0       0       0       0       0       0       0
  5666 ;;      Totals:         1       0       0       0       0       0       0       0
  5667 ;;Total ram usage:        1 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    2
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_main
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           psect	text931
  5677                           	file	"I:\Program\PIC\Source_File\SegmentDisplay_A2.c"
  5678                           	line	9
  5679                           	global	__size_of_SegmentDisplay_Initial
  5680  0010                     	__size_of_SegmentDisplay_Initial	equ	__end_of_SegmentDisplay_Initial-_SegmentDisplay_In
                                 itial
  5681                           	
  5682  0FB7                     _SegmentDisplay_Initial:	
  5683                           	opt	stack 13
  5684                           ; Regs used in _SegmentDisplay_Initial: [wregfsr1]
  5685                           	line	10
  5686                           	
  5687  0FB7                     l5087:	
  5688                           ;SegmentDisplay_A2.c: 10: Segment=&VarSegment;
  5689  0FB7  3020               	movlw	(_VarSegment)&0ffh
  5690  0FB8  00F3               	movwf	(??_SegmentDisplay_Initial+0)+0
  5691  0FB9  0873               	movf	(??_SegmentDisplay_Initial+0)+0,w
  5692  0FBA  0020               	movlb 0	; select bank0
  5693  0FBB  00BB               	movwf	(_Segment)
  5694                           	line	11
  5695                           	
  5696  0FBC                     l5089:	
  5697                           ;SegmentDisplay_A2.c: 11: Segment->Enable=1;
  5698  0FBC  083B               	movf	(_Segment),w
  5699  0FBD  3E15               	addlw	015h
  5700  0FBE  0086               	movwf	fsr1l
  5701  0FBF  0187               	clrf fsr1h	
  5702                           	
  5703  0FC0  1401               	bsf	indf1,0
  5704                           	line	13
  5705                           	
  5706  0FC1                     l5091:	
  5707                           ;SegmentDisplay_A2.c: 13: Segment->Dec=1;
  5708  0FC1  083B               	movf	(_Segment),w
  5709  0FC2  3E15               	addlw	015h
  5710  0FC3  0086               	movwf	fsr1l
  5711  0FC4  0187               	clrf fsr1h	
  5712                           	
  5713  0FC5  1581               	bsf	indf1,3
  5714                           	line	18
  5715                           	
  5716  0FC6                     l2063:	
  5717  0FC6  0008               	return
  5718                           	opt stack 0
  5719                           GLOBAL	__end_of_SegmentDisplay_Initial
  5720  0FC7                     	__end_of_SegmentDisplay_Initial:
  5721 ;; =============== function _SegmentDisplay_Initial ends ============
  5722                           
  5723                           	signat	_SegmentDisplay_Initial,88
  5724                           	global	_MainT_Initial
  5725                           psect	text932,local,class=CODE,delta=2
  5726                           global __ptext932
  5727  06F1                     __ptext932:
  5728                           
  5729 ;; *************** function _MainT_Initial *****************
  5730 ;; Defined at:
  5731 ;;		line 34 in file "I:\Program\PIC\Source_File\myMain.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;		None               void
  5738 ;; Registers used:
  5739 ;;		wreg, fsr1l, fsr1h
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5745 ;;      Params:         0       0       0       0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0       0       0       0
  5747 ;;      Temps:          1       0       0       0       0       0       0       0
  5748 ;;      Totals:         1       0       0       0       0       0       0       0
  5749 ;;Total ram usage:        1 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    2
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_main
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           psect	text932
  5759                           	file	"I:\Program\PIC\Source_File\myMain.c"
  5760                           	line	34
  5761                           	global	__size_of_MainT_Initial
  5762  000F                     	__size_of_MainT_Initial	equ	__end_of_MainT_Initial-_MainT_Initial
  5763                           	
  5764  06F1                     _MainT_Initial:	
  5765                           	opt	stack 13
  5766                           ; Regs used in _MainT_Initial: [wregfsr1]
  5767                           	line	35
  5768                           	
  5769  06F1                     l5081:	
  5770                           ;myMain.c: 35: TMain=&VarTMain;
  5771  06F1  303C               	movlw	(_VarTMain)&0ffh
  5772  06F2  00F3               	movwf	(??_MainT_Initial+0)+0
  5773  06F3  0873               	movf	(??_MainT_Initial+0)+0,w
  5774  06F4  0020               	movlb 0	; select bank0
  5775  06F5  00E2               	movwf	(_TMain)
  5776                           	line	36
  5777                           	
  5778  06F6                     l5083:	
  5779                           ;myMain.c: 36: TMain->FirstOpen=1;
  5780  06F6  0862               	movf	(_TMain),w
  5781  06F7  3E0D               	addlw	0Dh
  5782  06F8  0086               	movwf	fsr1l
  5783  06F9  0187               	clrf fsr1h	
  5784                           	
  5785  06FA  1401               	bsf	indf1,0
  5786                           	line	37
  5787                           	
  5788  06FB                     l5085:	
  5789                           ;myMain.c: 37: Product=&VarProduct;
  5790  06FB  30A0               	movlw	(_VarProduct)&0ffh
  5791  06FC  00F3               	movwf	(??_MainT_Initial+0)+0
  5792  06FD  0873               	movf	(??_MainT_Initial+0)+0,w
  5793  06FE  00FA               	movwf	(_Product)
  5794                           	line	38
  5795                           	
  5796  06FF                     l1039:	
  5797  06FF  0008               	return
  5798                           	opt stack 0
  5799                           GLOBAL	__end_of_MainT_Initial
  5800  0700                     	__end_of_MainT_Initial:
  5801 ;; =============== function _MainT_Initial ends ============
  5802                           
  5803                           	signat	_MainT_Initial,88
  5804                           	global	_ISR
  5805                           psect	intentry,class=CODE,delta=2
  5806                           global __pintentry
  5807  0004                     __pintentry:
  5808                           
  5809 ;; *************** function _ISR *****************
  5810 ;; Defined at:
  5811 ;;		line 57 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;		None               void
  5818 ;; Registers used:
  5819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5825 ;;      Params:         0       0       0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0       0       0
  5827 ;;      Temps:          1       0       0       0       0       0       0       0
  5828 ;;      Totals:         1       0       0       0       0       0       0       0
  5829 ;;Total ram usage:        1 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    1
  5832 ;; This function calls:
  5833 ;;		_TMR1_ISR
  5834 ;;		_UART_ISR
  5835 ;;		_I2C_ISR
  5836 ;; This function is called by:
  5837 ;;		Interrupt level 1
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           psect	intentry
  5841                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5842                           	line	57
  5843                           	global	__size_of_ISR
  5844  0014                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  5845                           	
  5846  0004                     _ISR:	
  5847                           	opt	stack 10
  5848                           ; Regs used in _ISR: [wreg+fsr1l-status,0+pclath+cstack]
  5849                           psect	intentry
  5850  0004  3180               	pagesel	$
  5851  0005  0020               	movlb 0	; select bank0
  5852  0006  087F               	movf	btemp+1,w
  5853  0007  00F2               	movwf	(??_ISR+0)
  5854                           	line	58
  5855                           	
  5856  0008                     i1l5183:	
  5857                           ;MCU_16f1516_B1.c: 58: _nop();
  5858  0008  0000               	nop
  5859                           	line	60
  5860                           ;MCU_16f1516_B1.c: 60: _nop();
  5861  0009  0000               	nop
  5862                           	line	62
  5863                           	
  5864  000A                     i1l5185:	
  5865                           ;MCU_16f1516_B1.c: 62: TMR1_ISR();
  5866  000A  3186  26BC  3180   	fcall	_TMR1_ISR
  5867                           	line	66
  5868                           	
  5869  000D                     i1l5187:	
  5870                           ;MCU_16f1516_B1.c: 66: _nop();
  5871  000D  0000               	nop
  5872                           	line	68
  5873                           ;MCU_16f1516_B1.c: 68: UART_ISR();
  5874  000E  3185  2584  3180   	fcall	_UART_ISR
  5875                           	line	70
  5876                           ;MCU_16f1516_B1.c: 70: I2C_ISR();
  5877  0011  318F  27EB  3180   	fcall	_I2C_ISR
  5878                           	line	71
  5879                           	
  5880  0014                     i1l3139:	
  5881  0014  0872               	movf	(??_ISR+0),w
  5882  0015  0020               	movlb 0	; select bank0
  5883  0016  00FF               	movwf	btemp+1
  5884  0017  0009               	retfie
  5885                           	opt stack 0
  5886                           GLOBAL	__end_of_ISR
  5887  0018                     	__end_of_ISR:
  5888 ;; =============== function _ISR ends ============
  5889                           
  5890                           	signat	_ISR,88
  5891                           	global	_I2C_ISR
  5892                           psect	text934,local,class=CODE,delta=2
  5893                           global __ptext934
  5894  0FEB                     __ptext934:
  5895                           
  5896 ;; *************** function _I2C_ISR *****************
  5897 ;; Defined at:
  5898 ;;		line 261 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;		None               void
  5905 ;; Registers used:
  5906 ;;		wreg, fsr1l, fsr1h
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5912 ;;      Params:         0       0       0       0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; This function calls:
  5919 ;;		Nothing
  5920 ;; This function is called by:
  5921 ;;		_ISR
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           psect	text934
  5925                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5926                           	line	261
  5927                           	global	__size_of_I2C_ISR
  5928  0015                     	__size_of_I2C_ISR	equ	__end_of_I2C_ISR-_I2C_ISR
  5929                           	
  5930  0FEB                     _I2C_ISR:	
  5931                           	opt	stack 10
  5932                           ; Regs used in _I2C_ISR: [wregfsr1]
  5933                           	line	262
  5934                           	
  5935  0FEB                     i1l5217:	
  5936                           ;MCU_16f1516_B1.c: 262: if(SSPIE && SSPIF)
  5937  0FEB  0021               	movlb 1	; select bank1
  5938  0FEC  1D91               	btfss	(1163/8)^080h,(1163)&7
  5939  0FED  2FEF               	goto	u314_21
  5940  0FEE  2FF0               	goto	u314_20
  5941  0FEF                     u314_21:
  5942  0FEF  2FFF               	goto	i1l3154
  5943  0FF0                     u314_20:
  5944                           	
  5945  0FF0                     i1l5219:	
  5946  0FF0  0020               	movlb 0	; select bank0
  5947  0FF1  1D91               	btfss	(139/8),(139)&7
  5948  0FF2  2FF4               	goto	u315_21
  5949  0FF3  2FF5               	goto	u315_20
  5950  0FF4                     u315_21:
  5951  0FF4  2FFF               	goto	i1l3154
  5952  0FF5                     u315_20:
  5953                           	line	264
  5954                           	
  5955  0FF5                     i1l5221:	
  5956                           ;MCU_16f1516_B1.c: 263: {
  5957                           ;MCU_16f1516_B1.c: 264: SSPIE=0;
  5958  0FF5  0021               	movlb 1	; select bank1
  5959  0FF6  1191               	bcf	(1163/8)^080h,(1163)&7
  5960                           	line	265
  5961                           	
  5962  0FF7                     i1l5223:	
  5963                           ;MCU_16f1516_B1.c: 265: I2C->SlaveGO=1;
  5964  0FF7  0020               	movlb 0	; select bank0
  5965  0FF8  083A               	movf	(_I2C),w
  5966  0FF9  3E42               	addlw	042h
  5967  0FFA  0086               	movwf	fsr1l
  5968  0FFB  3001               	movlw 1	; select bank2/3
  5969  0FFC  0087               	movwf fsr1h	
  5970                           	
  5971  0FFD  1401               	bsf	indf1,0
  5972  0FFE  2FFF               	goto	i1l3154
  5973                           	line	272
  5974                           	
  5975  0FFF                     i1l3153:	
  5976                           	line	273
  5977                           	
  5978  0FFF                     i1l3154:	
  5979  0FFF  0008               	return
  5980                           	opt stack 0
  5981                           GLOBAL	__end_of_I2C_ISR
  5982  1000                     	__end_of_I2C_ISR:
  5983 ;; =============== function _I2C_ISR ends ============
  5984                           
  5985                           	signat	_I2C_ISR,88
  5986                           	global	_UART_ISR
  5987                           psect	text935,local,class=CODE,delta=2
  5988                           global __ptext935
  5989  0584                     __ptext935:
  5990                           
  5991 ;; *************** function _UART_ISR *****************
  5992 ;; Defined at:
  5993 ;;		line 508 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  i               1    0        unsigned char 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;		None               void
  6000 ;; Registers used:
  6001 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6007 ;;      Params:         0       0       0       0       0       0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0
  6009 ;;      Temps:          2       0       0       0       0       0       0       0
  6010 ;;      Totals:         2       0       0       0       0       0       0       0
  6011 ;;Total ram usage:        2 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_ISR
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           psect	text935
  6020                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6021                           	line	508
  6022                           	global	__size_of_UART_ISR
  6023  0048                     	__size_of_UART_ISR	equ	__end_of_UART_ISR-_UART_ISR
  6024                           	
  6025  0584                     _UART_ISR:	
  6026                           	opt	stack 10
  6027                           ; Regs used in _UART_ISR: [wreg+fsr1l-status,0]
  6028                           	line	510
  6029                           	
  6030  0584                     i1l5203:	
  6031                           ;MCU_16f1516_B1.c: 509: char i;
  6032                           ;MCU_16f1516_B1.c: 510: if(RCIE && RCIF)
  6033  0584  0021               	movlb 1	; select bank1
  6034  0585  1E91               	btfss	(1165/8)^080h,(1165)&7
  6035  0586  2D88               	goto	u310_21
  6036  0587  2D89               	goto	u310_20
  6037  0588                     u310_21:
  6038  0588  2DCB               	goto	i1l3280
  6039  0589                     u310_20:
  6040                           	
  6041  0589                     i1l5205:	
  6042  0589  0020               	movlb 0	; select bank0
  6043  058A  1E91               	btfss	(141/8),(141)&7
  6044  058B  2D8D               	goto	u311_21
  6045  058C  2D8E               	goto	u311_20
  6046  058D                     u311_21:
  6047  058D  2DCB               	goto	i1l3280
  6048  058E                     u311_20:
  6049  058E  2D90               	goto	i1l3276
  6050                           	line	512
  6051                           	
  6052  058F                     i1l5207:	
  6053                           ;MCU_16f1516_B1.c: 511: {
  6054                           ;MCU_16f1516_B1.c: 512: while(!RCIDL);
  6055  058F  2D90               	goto	i1l3276
  6056                           	
  6057  0590                     i1l3277:	
  6058                           	
  6059  0590                     i1l3276:	
  6060  0590  0023               	movlb 3	; select bank3
  6061  0591  1F1F               	btfss	(3326/8)^0180h,(3326)&7
  6062  0592  2D94               	goto	u312_21
  6063  0593  2D95               	goto	u312_20
  6064  0594                     u312_21:
  6065  0594  2D90               	goto	i1l3276
  6066  0595                     u312_20:
  6067  0595  2D96               	goto	i1l5209
  6068                           	
  6069  0596                     i1l3278:	
  6070                           	line	513
  6071                           	
  6072  0596                     i1l5209:	
  6073                           ;MCU_16f1516_B1.c: 513: UART->RxData[UART->RxLength]=RCREG;
  6074  0596  0819               	movf	(409)^0180h,w	;volatile
  6075  0597  00F0               	movwf	(??_UART_ISR+0)+0
  6076  0598  0879               	movf	(_UART),w
  6077  0599  3E42               	addlw	042h
  6078  059A  0086               	movwf	fsr1l
  6079  059B  3001               	movlw 1	; select bank2/3
  6080  059C  0087               	movwf fsr1h	
  6081                           	
  6082  059D  0801               	movf	indf1,w
  6083  059E  3E20               	addlw	020h
  6084  059F  0779               	addwf	(_UART),w
  6085  05A0  00F1               	movwf	(??_UART_ISR+1)+0
  6086  05A1  0871               	movf	0+(??_UART_ISR+1)+0,w
  6087  05A2  0086               	movwf	fsr1l
  6088  05A3  3001               	movlw 1	; select bank2/3
  6089  05A4  0087               	movwf fsr1h	
  6090                           	
  6091  05A5  0870               	movf	(??_UART_ISR+0)+0,w
  6092  05A6  0081               	movwf	indf1
  6093                           	line	515
  6094                           ;MCU_16f1516_B1.c: 515: UART->RxLength++;
  6095  05A7  3001               	movlw	(01h)
  6096  05A8  00F0               	movwf	(??_UART_ISR+0)+0
  6097  05A9  0879               	movf	(_UART),w
  6098  05AA  3E42               	addlw	042h
  6099  05AB  0086               	movwf	fsr1l
  6100  05AC  3001               	movlw 1	; select bank2/3
  6101  05AD  0087               	movwf fsr1h	
  6102                           	
  6103  05AE  0870               	movf	(??_UART_ISR+0)+0,w
  6104  05AF  0781               	addwf	indf1,f
  6105                           	line	516
  6106                           	
  6107  05B0                     i1l5211:	
  6108                           ;MCU_16f1516_B1.c: 516: if(UART->RxLength == 32)
  6109  05B0  0879               	movf	(_UART),w
  6110  05B1  3E42               	addlw	042h
  6111  05B2  0086               	movwf	fsr1l
  6112  05B3  3001               	movlw 1	; select bank2/3
  6113  05B4  0087               	movwf fsr1h	
  6114                           	
  6115  05B5  0801               	movf	indf1,w
  6116  05B6  3A20               	xorlw	020h&0ffh
  6117  05B7  1D03               	skipz
  6118  05B8  2DBA               	goto	u313_21
  6119  05B9  2DBB               	goto	u313_20
  6120  05BA                     u313_21:
  6121  05BA  2DCB               	goto	i1l3280
  6122  05BB                     u313_20:
  6123                           	line	518
  6124                           	
  6125  05BB                     i1l5213:	
  6126                           ;MCU_16f1516_B1.c: 517: {
  6127                           ;MCU_16f1516_B1.c: 518: UART->RxLength=0;
  6128  05BB  0879               	movf	(_UART),w
  6129  05BC  3E42               	addlw	042h
  6130  05BD  0086               	movwf	fsr1l
  6131  05BE  3001               	movlw 1	; select bank2/3
  6132  05BF  0087               	movwf fsr1h	
  6133                           	
  6134  05C0  0181               	clrf	indf1
  6135                           	line	519
  6136                           ;MCU_16f1516_B1.c: 519: UART->RxGO=1;
  6137  05C1  0879               	movf	(_UART),w
  6138  05C2  3E43               	addlw	043h
  6139  05C3  0086               	movwf	fsr1l
  6140  05C4  3001               	movlw 1	; select bank2/3
  6141  05C5  0087               	movwf fsr1h	
  6142                           	
  6143  05C6  1481               	bsf	indf1,1
  6144                           	line	520
  6145                           	
  6146  05C7                     i1l5215:	
  6147                           ;MCU_16f1516_B1.c: 520: RCIE=0;
  6148  05C7  0021               	movlb 1	; select bank1
  6149  05C8  1291               	bcf	(1165/8)^080h,(1165)&7
  6150  05C9  2DCB               	goto	i1l3280
  6151                           	line	521
  6152                           	
  6153  05CA                     i1l3279:	
  6154  05CA  2DCB               	goto	i1l3280
  6155                           	line	522
  6156                           	
  6157  05CB                     i1l3275:	
  6158                           	line	523
  6159                           	
  6160  05CB                     i1l3280:	
  6161  05CB  0008               	return
  6162                           	opt stack 0
  6163                           GLOBAL	__end_of_UART_ISR
  6164  05CC                     	__end_of_UART_ISR:
  6165 ;; =============== function _UART_ISR ends ============
  6166                           
  6167                           	signat	_UART_ISR,88
  6168                           	global	_TMR1_ISR
  6169                           psect	text936,local,class=CODE,delta=2
  6170                           global __ptext936
  6171  06BC                     __ptext936:
  6172                           
  6173 ;; *************** function _TMR1_ISR *****************
  6174 ;; Defined at:
  6175 ;;		line 126 in file "I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;		None
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;		None               void
  6182 ;; Registers used:
  6183 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6189 ;;      Params:         0       0       0       0       0       0       0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0
  6192 ;;      Totals:         0       0       0       0       0       0       0       0
  6193 ;;Total ram usage:        0 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_ISR
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           psect	text936
  6202                           	file	"I:\Program\PIC\Source_File\MCU_16f1516_B1.c"
  6203                           	line	126
  6204                           	global	__size_of_TMR1_ISR
  6205  0035                     	__size_of_TMR1_ISR	equ	__end_of_TMR1_ISR-_TMR1_ISR
  6206                           	
  6207  06BC                     _TMR1_ISR:	
  6208                           	opt	stack 10
  6209                           ; Regs used in _TMR1_ISR: [wreg+fsr1l-status,0]
  6210                           	line	127
  6211                           	
  6212  06BC                     i1l5189:	
  6213                           ;MCU_16f1516_B1.c: 127: if(TMR1IE && TMR1IF)
  6214  06BC  0021               	movlb 1	; select bank1
  6215  06BD  1C11               	btfss	(1160/8)^080h,(1160)&7
  6216  06BE  2EC0               	goto	u307_21
  6217  06BF  2EC1               	goto	u307_20
  6218  06C0                     u307_21:
  6219  06C0  2EF0               	goto	i1l3147
  6220  06C1                     u307_20:
  6221                           	
  6222  06C1                     i1l5191:	
  6223  06C1  0020               	movlb 0	; select bank0
  6224  06C2  1C11               	btfss	(136/8),(136)&7
  6225  06C3  2EC5               	goto	u308_21
  6226  06C4  2EC6               	goto	u308_20
  6227  06C5                     u308_21:
  6228  06C5  2EF0               	goto	i1l3147
  6229  06C6                     u308_20:
  6230                           	line	129
  6231                           	
  6232  06C6                     i1l5193:	
  6233                           ;MCU_16f1516_B1.c: 128: {
  6234                           ;MCU_16f1516_B1.c: 129: TMR1H=((65536-700)/256);
  6235  06C6  30FD               	movlw	(0FDh)
  6236  06C7  0097               	movwf	(23)	;volatile
  6237                           	line	130
  6238                           ;MCU_16f1516_B1.c: 130: TMR1L=((65536-700)%256);
  6239  06C8  3044               	movlw	(044h)
  6240  06C9  0096               	movwf	(22)	;volatile
  6241                           	line	131
  6242                           	
  6243  06CA                     i1l5195:	
  6244                           ;MCU_16f1516_B1.c: 131: TMR1IF=0;
  6245  06CA  1011               	bcf	(136/8),(136)&7
  6246                           	line	132
  6247                           	
  6248  06CB                     i1l5197:	
  6249                           ;MCU_16f1516_B1.c: 132: Timer1->Count++;
  6250  06CB  0878               	movf	(_Timer1),w
  6251  06CC  3E01               	addlw	01h
  6252  06CD  0086               	movwf	fsr1l
  6253  06CE  0187               	clrf fsr1h	
  6254                           	
  6255  06CF  3001               	movlw	01h
  6256  06D0  0781               	addwf	indf1,f
  6257  06D1  3141               	addfsr	fsr1,1
  6258  06D2  1803               	skipnc
  6259  06D3  0A81               	incf	indf1,f
  6260                           	line	133
  6261                           	
  6262  06D4                     i1l5199:	
  6263                           ;MCU_16f1516_B1.c: 133: if(Timer1->Count == 20)
  6264  06D4  0878               	movf	(_Timer1),w
  6265  06D5  3E01               	addlw	01h
  6266  06D6  0086               	movwf	fsr1l
  6267  06D7  0187               	clrf fsr1h	
  6268                           	
  6269  06D8  3F40               	moviw	[0]fsr1
  6270  06D9  3A14               	xorlw	low(014h)
  6271  06DA  1D03               	skipz
  6272  06DB  2EDE               	goto	u309_25
  6273  06DC  3F41               	moviw	[1]fsr1
  6274  06DD  3A00               	xorlw	high(014h)
  6275  06DE                     u309_25:
  6276  06DE  1D03               	skipz
  6277  06DF  2EE1               	goto	u309_21
  6278  06E0  2EE2               	goto	u309_20
  6279  06E1                     u309_21:
  6280  06E1  2EF0               	goto	i1l3147
  6281  06E2                     u309_20:
  6282                           	line	135
  6283                           	
  6284  06E2                     i1l5201:	
  6285                           ;MCU_16f1516_B1.c: 134: {
  6286                           ;MCU_16f1516_B1.c: 135: Timer1->Count=0;
  6287  06E2  0878               	movf	(_Timer1),w
  6288  06E3  3E01               	addlw	01h
  6289  06E4  0086               	movwf	fsr1l
  6290  06E5  0187               	clrf fsr1h	
  6291                           	
  6292  06E6  3000               	movlw	low(0)
  6293  06E7  3FC0               	movwi	[0]fsr1
  6294  06E8  3000               	movlw	high(0)
  6295  06E9  3FC1               	movwi	[1]fsr1
  6296                           	line	136
  6297                           ;MCU_16f1516_B1.c: 136: TMain->T1_Timerout=1;
  6298  06EA  0862               	movf	(_TMain),w
  6299  06EB  0086               	movwf	fsr1l
  6300  06EC  0187               	clrf fsr1h	
  6301                           	
  6302  06ED  1501               	bsf	indf1,2
  6303  06EE  2EF0               	goto	i1l3147
  6304                           	line	137
  6305                           	
  6306  06EF                     i1l3146:	
  6307  06EF  2EF0               	goto	i1l3147
  6308                           	line	138
  6309                           	
  6310  06F0                     i1l3145:	
  6311                           	line	139
  6312                           	
  6313  06F0                     i1l3147:	
  6314  06F0  0008               	return
  6315                           	opt stack 0
  6316                           GLOBAL	__end_of_TMR1_ISR
  6317  06F1                     	__end_of_TMR1_ISR:
  6318 ;; =============== function _TMR1_ISR ends ============
  6319                           
  6320                           	signat	_TMR1_ISR,88
  6321                           psect	text937,local,class=CODE,delta=2
  6322                           global __ptext937
  6323  0000                     __ptext937:
  6324                           	global	btemp
  6325  007E                     	btemp set 07Eh
  6326                           
  6327                           	DABS	1,126,2	;btemp
  6328                           	global	wtemp0
  6329  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Aug 29 22:33:09 2014

                 ??_MainT_Initial 0073                                _BF 10A0                      ___awdiv@sign 004F  
       ??_setSegmentDisplayNumber 0054                               _I2C 003A                               _CKP 10AC  
                             _GIE 005F                               _RA1 0061                               _RA2 0062  
                             _RC0 0070                               _RA4 0064                               _RA5 0065  
                             _RA6 0066                               _RA7 0067                               _PEN 10B2  
                             _ISR 0004                               _SEN 10B0                               _RX9 0CEE  
                             _TX9 0CF6                   __end_of_I2C_ISR 1000                   __end_of_I2C_Set 0FB7  
                    ___awmod@sign 004F                               wreg 0009     __size_of_I2C_Master_Reception 007A  
                            ?_ISR 0070                              l1031 073E                              l1032 0760  
                            l1033 075F                              l1042 019B                              l1050 021D  
                            l1034 0761                              l1043 019A                              l1035 0762  
                            l1044 021D                              l1036 0762                              l1045 01FC  
                            l1046 01BE                              l1039 06FF                              l1047 01FB  
                            l1048 01FA                              l1049 021C                              l2070 00A2  
                            l2063 0FC6                              l2071 008B                              l3200 057D  
                            l2072 00A1                              l2080 016D                              l3201 057E  
                            l2073 012A                              l2090 03A7                              l3210 03E4  
                            l3202 057E                              l2066 016D                              l2074 013F  
                            l2083 03DB                              l2091 03A6                              l3211 03E4  
                            l3203 0583                              l2075 016C                              l2067 006C  
                            l2084 03DA                              l2092 03D3                              l3220 0436  
                            l3212 03E9                              l3204 0583                              l2076 0152  
                            l2068 012C                              l2093 03D9                              l2085 0382  
                            l3221 0400                              l3213 03EC                              l3133 0FEA  
                            l2077 016B                              l2069 012B                              l2086 03A9  
                            l2094 03DB                              l3142 0FD6                              l3150 0FB6  
                            l3230 041F                              l3222 0400                              l3214 03EC  
                            l2078 0164                              l2087 038E                              l3231 041E  
                            l3223 0405                              l3215 03F1                              l3207 03DD  
                            l2079 016A                              l2088 03A8                              l3136 07F5  
                            l3240 043D                              l3232 0425                              l3224 0406  
                            l3216 03F2                              l3208 03DD                              l3160 0352  
                            l2089 039A                              l3241 0442                              l3233 0426  
                            l3225 0406                              l3217 03F2                              l3209 03E2  
                            l3305 0F9F                              l3161 032E                              l3250 0455  
                            l3242 0443                              l3234 0426                              l3226 040A  
                            l3218 03F6                              l3306 0F9F                              l3162 032D  
                            l3330 0230                              l3251 0455                              l3243 0443  
                            l3235 042B                              l3227 040C                              l3219 03FF  
                            l3307 0FA5                              l3163 0351                              l3331 0236  
                            l3244 0448                              l3228 040C                              l3236 0437  
                            l3180 0539                              l3172 0525                              l3308 0FA8  
                            l3500 04A4                              l3164 033D                              l3340 02A9  
                            l3332 0232                              l5101 0373                              l3245 044A  
                            l3237 0437                              l3229 0411                              l3181 053A  
                            l3173 0525                              l3501 04B0                              l3165 0350  
                            l3157 0313                              l3333 02C8                              l3341 0284  
                            l3246 0449                              l3238 043B                              l3190 055A  
                            l3182 053A                              l3174 052A                              l3502 04BB  
                            l3166 0352                              l3158 02EF                              l3342 02B5  
                            l3334 0233                              l5111 038E                              l5103 0377  
                            l3247 044F                              l3239 043D                              l3191 055F  
                            l3183 053E                              l3175 052C                              l3503 04C2  
                            l3159 030C                              l3343 02C7                              l3335 0245  
                            l3272 07DF                              l3248 0450                              l3192 0560  
                            l3184 0547                              l3176 052C                              l3360 05E3  
                            l3328 02B6                              l3336 0234                              l3344 02C8  
                            l5121 03BC                              l5113 0398                              l5105 0380  
                            l3249 0450                              l3185 0570                              l3193 0560  
                            l3177 0531                              l3361 05D9                              l3337 025B  
                            l3329 0225                              l3194 0565                              l3186 0548  
                            l3178 0534                              l3362 05E8                              l3338 027F  
                            l3290 064B                              l5123 03CA                              l5115 039A  
                            l5107 0382                              l5131 07E4                              l3187 0548  
                            l3195 0571                              l3179 0534                              l3363 05E9  
                            l3339 0274                              l3291 0626                              l3283 0779  
                            l3196 0571                              l3188 054D                              l3364 05FE  
                            l3292 0626                              l3284 078D                              l5125 03D3  
                            l5117 03A4                              l5109 038C                              l5141 07F3  
                            l5133 07EA                              l3197 0576                              l3189 055A  
                            l5301 0679                              l3365 060A                              l3293 062C  
                            l3285 078C                              l3198 0578                              l3366 0612  
                            l3294 064F                              l3286 078D                              l5119 03A9  
                            l5135 07ED                              l5127 07E0                              l5143 0FC7  
                            l5151 0FA9                              l5231 03FE                              l3199 0577  
                            l5303 0680                              l3359 060B                              l5081 06F1  
                            l5137 07EE                              l5129 07E3                              l5145 0FD2  
                            l5153 0FB3                              l5161 07CE                              l5233 0411  
                            l5225 03DC                              l5241 0531                              l3297 0661  
                            l5305 0F9E                              l3561 04D2                              l3289 0625  
                            l3298 0680                              l3570 051C                              l3562 04DC  
                            l5083 06F6                              l5091 0FC1                              l5139 07EF  
                            l5147 0FD4                              l5155 0FB4                              l5171 07D8  
                            l5163 07D2                              l5235 042B                              l5227 03E9  
                            l5251 0569                              l5243 053F                              l3299 0686  
                            l5307 0FA5                              l3571 0523                              l3563 0512  
                   ??_Mcu_Initial 0074                              l3564 04F0                              l5085 06FB  
                            l5093 0353                              l5149 0FD5                              l5181 07DE  
                            l5173 07D9                              l5165 07D3                              l5157 07C8  
                            l5237 042F                              l5229 03F7                              l5245 0546  
                            l3493 0465                              l3565 04E6                              l5421 0FE1  
                            l5413 0FD7                              l3494 0473                              l3566 04F5  
                            l5087 0FB7                              l5095 035C                              l5175 07DA  
                            l5167 07D4                              l5159 07CC                              l5247 054D  
                            l5239 0524                              l3495 04B1                              l3567 04F6  
                            l5423 0FE2                              l5415 0FDA                              l3496 0489  
                            l3568 0505                              l5089 0FBC                              l5097 0364  
                            l5177 07DC                              l5169 07D6                              l5249 0565  
                            l3497 047F                              l3569 0511                              l5425 0FE3  
                            l5417 0FDD                              l3498 048E                              l5099 036E  
                            l5179 07DD                              l5291 0658                              l3499 048F  
                            l5427 0FE4                              l5419 0FDE                              l5293 0659  
                            l5701 0484                              l5429 0FE7                              l5295 0660  
                            l5711 04A4                              l5703 0489                              l5297 0661  
                            l5289 0650                              l5721 04C2                              l5713 04A9  
                            l5705 048F                              l5801 004E                              l5299 0675  
                            l5707 049E                              l5715 04B1                              l5731 04DC  
                            l5723 04C3                              l5811 008A                              l5803 006C  
                            l5661 05D5                              l5717 04B5                              l5709 04A2  
                            l5741 04F6                              l5733 04E2                              l5725 04C9  
                            l5821 00B9                              l5813 008B                              l5805 0074  
                            l5901 01BE                              l5671 05F8                              l5663 05D9  
                            l5719 04BB                              l5751 0516                              l5743 0500  
                            l5735 04E6                              l5727 04D2                              l5823 00CD  
                            l5815 0096                              l5807 0081                              l5831 012C  
                            l5903 01C8                              l5911 01FC                              l5681 0612  
                            l5673 05FC                              l5665 05DE                              l5657 05CC  
                            l5753 051C                              l5745 0505                              l5737 04EB  
                            l5729 04D6                              l5761 02D9                              l5841 015C  
                            l5833 0136                              l5825 00F7                              l5817 009A  
                            l5809 0083                              l5913 0205                              l5905 01DE  
                            l5921 061D                              l5675 05FE                              l5667 05E3  
                            l5659 05CF                              l5691 046E                              l5683 0456  
                            l5755 0523                              l5747 050A                              l5739 04F0  
                            l5771 02EE                              l5763 02DC                              l5843 0164  
                            l5835 013F                              l5827 010D                              l5819 00A2  
                            l5851 0235                              l5915 0213                              l5907 01E8  
                            l5923 0624                              l5931 064B                              l5677 0603  
                            l5669 05E9                              l5693 0473                              l5685 045C  
                            l5749 0512                              l5781 0317                              l5773 02EF  
                            l5765 02E4                              l5757 02C9                              l5837 0149  
                            l5829 0121                              l5861 0253                              l5853 0236  
                            l5845 0220                              l5909 01F3                              l5925 062C  
                            l5917 0613                              l5941 0779                              l5933 0764  
                            l5679 060B                              l5695 0475                              l5687 0465  
                            l5791 034C                              l5783 0320                              l5775 0301  
                            l5767 02E6                              l5759 02D3                              l5839 0152  
                            l5871 0278                              l5863 025A                              l5855 0245  
                            l5847 0225                              l5927 063F                              l5919 061B  
                            l5943 0782                              l5935 076D                              l5951 0739  
                            l5697 047B                              l5689 0469                              l5785 032E  
                            l5777 0305                              l5769 02E7                              l5793 001B  
                            l5873 027F                              l5865 025B                              l5857 024C  
                            l5849 022B                              l5881 02B6                              l5929 0644  
                            l5945 0788                              l5937 0773                              l5961 074D  
                            l5953 073C                              l5699 047F                              l5787 0337  
                            l5779 030C                              l5795 0024                              l5875 0284  
                            l5867 0273                              l5859 0250                              l5891 019B  
                            l5883 016E                              l5939 0776                              l5963 0755  
                            l5955 073E                              l5947 0733                              l5789 0346  
                            l5797 0031                              l5877 02A4                              l5869 0274  
                            l5893 01A4                              l5885 0176                              l5965 0758  
                            l5957 0746                              l5949 0736                              l5799 003A  
                            l5879 02A9                              l5895 01B2                              l5887 017F  
                            l5967 075B                              l5959 074A                              l5897 01BA  
                            l5889 018D                              l5899 01BD                              STR_1 071A  
                            STR_2 0731                              STR_3 0728                              STR_4 072E  
                            STR_5 0709                              u3000 035C                              u3001 035B  
                            u3010 036E                              u3011 036D                              u3020 0380  
                            u3021 037F                              _LATA 010C                              u3030 038C  
                            _LATB 010D                              u3031 038B                              _LATC 010E  
                            u3040 0398                              u3200 03FD                              u3041 0397  
                            u3201 03FC                              u3050 03A4                              u3210 0404  
                            u3051 03A3                              u3211 0403                              u3060 03CA  
                            u3300 044E                              u3220 040A                              u3061 03C9  
                            u3301 044D                              u3221 0409                              u3310 0454  
                            u3230 0410                              u3311 0453                              u3231 040F  
                            u3240 0424                              u3160 03E2                              u3400 056F  
                            u3320 052A                              u4200 05E7                              u3241 0423  
                            u3161 03E1                              u3401 056E                              u3321 0529  
                            u4201 05E6                              u3250 042A                              u3170 03E8  
                            u3410 0575                              u3330 0530                              u3251 0429  
                            u3171 03E7                              u3411 0574                              u3331 052F  
                            u3260 0435                              u3180 03F0                              u3420 057C  
                            u3340 0538                              u4220 05F8                              u3261 0434  
                            u3181 03EF                              u3421 057B                              u3341 0537  
                            u4221 05F7                              u3270 043B                              u3190 03F6  
                            u3430 0582                              u3350 053E                              u4310 049E  
                            u3271 043A                              u3191 03F5                              u3431 0581  
                            u3351 053D                              u4215 05EA                              u4311 049D  
                            u3280 0441                              u3360 0545                              u3520 065F  
                            u4240 0609                              u4400 0500                              u3281 0440  
                            u3361 0544                              u3521 065E                              u4241 0608  
                            u4225 05F4                              u4305 0490                              u4401 04FF  
                            u3290 0447                              u3370 054C                              u3530 067F  
                            u4330 04AF                              u4250 045C                              u3291 0446  
                            u3371 054B                              u3531 067E                              u4235 05FF  
                            u4331 04AE                              u4315 049A                              u4251 045B  
                            u3380 055E                              u3540 0FA4                              u4180 05D5  
                            u4340 04B5                              u4260 0469                              u4420 0510  
                            u4500 0346                              u3381 055D                              u3541 0FA3  
                            u4181 05D4                              u4325 04A5                              u4261 0468  
                            u4421 050F                              u4405 04FC                              u4501 0345  
                            u3390 0564                              u4270 047B                              u4430 0516  
                            u4350 04C9                              u4510 0024                              u3391 0563  
                            u4271 047A                              u4415 0506                              u4351 04C8  
                            u4511 0023                              u4360 04D6                              u4440 02D3  
                            u4600 0149                              u4520 0031                              u4361 04D5  
                            u4441 02D2                              u4601 0148                              u4521 0030  
                            u4290 048D                              u4370 04E2                              u4450 02ED  
                            u4610 015C                              u4195 05DA                              u4291 048C  
                            u4371 04E1                              u4451 02EC                              u4611 015B  
                            _PEIE 005E                              u4460 030B                              u4620 022B  
                            u4700 01B2                              u4285 0480                              u4461 030A  
                            u4621 022A                              u4701 01B1                              u4390 04F4  
                            u4470 0317                              u4550 0074                              u4630 0259  
                            u4710 01C8                              u4391 04F3                              u4471 0316  
                            u4551 0073                              u4535 0040                              u4631 0258  
                            u4711 01C7                              u4480 0320                              u4560 0081  
                            u4640 0272                              u4720 01F3                              u4800 0755  
                            u4385 04E7                              u4481 031F                              u4561 0080  
                            u4545 005D                              u4641 0271                              u4721 01F2  
                            u4705 01AE                              u4801 0754                              u4490 0337  
                            u4570 0089                              u4650 027E                              u4730 0213  
                            u4491 0336                              u4571 0088                              u4651 027D  
                            u4731 0212                              _RCIE 048D                              u4580 00A0  
                            u4660 02B4                              u4740 0623                              _RCEN 10B3  
                            _RCIF 008D                              u4581 009F                              u4565 007D  
                            u4661 02B3                              u4645 026E                              u4741 0622  
                            u4590 0136                              u4670 02C6                              u4750 062B  
                            u4591 0135                              u4671 02C5                              u4735 020F  
                            u4751 062A                              u4680 0176                              u4760 064A  
                            u4681 0175                              u4761 0649                              u4690 018D  
                            u4770 076D                              u4691 018C                              u4771 076C  
                            u4780 0782                              u4781 0781                              u4790 0746  
                            u4695 0189                              u4791 0745                              _UART 0079  
                            _TRMT 0CF1                              _TXIE 048C                              _TXIF 008C  
                            _R_nW 10A2                              _main 0733                  __end_of_I2C_Main 0353  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              start 0018                             ??_ISR 0072  
                           ?_main 0070                             _ACKEN 10B4                   __end_of___awdiv 04C3  
                           _BRG16 0CFB                   __end_of___awmod 0524                   ___awdiv@divisor 0073  
                           _T1CON 0018                   __end_of___lwdiv 0613                             _RCIDL 0CFE  
                 ___awdiv@counter 004E                             _RCREG 0199                             _RCSTA 019D  
                           _TMR1H 0017                             _TMR1L 0016                             _SPBRG 019B  
                           _PORTA 000C                             _PORTB 000D                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _SSPIE 048B                             _SSPIF 008B                             _SSPOV 10AE  
                           _TXREG 019A                             _TXSTA 019E                             _TMain 0062  
                           _MainT 016E                  __end_of_UART_ISR 05CC                __size_of_UART_Main 002A  
                __end_of_TMR1_ISR 06F1                  __end_of_UART_Set 07E0                  __end_of_TMR1_Set 0FD7  
                           _putch 0F9D   __end_of_setSegmentDisplayNumber 016E                             status 0003  
                           wtemp0 007E               __end_of_Mcu_Initial 0FEB                      __end_of_main 0764  
__size_of_I2C_Master_Transmission 0060                         ??_I2C_ISR 0070                         ??_I2C_Set 0073  
                          ??_main 0078             I2C_Master_Reception@i 0075                            ?_MainT 0070  
                       I2C_Main@i 0076                  ___awdiv@dividend 0075                            _ANSELA 018C  
                          ?_putch 0070                            _ANSELB 018D                            _ANSELC 018E  
                          i1l3145 06F0                            i1l3153 0FFF                            i1l3146 06EF  
                          i1l3154 0FFF                            i1l3147 06F0                            i1l3139 0014  
                          i1l3280 05CB                            i1l5201 06E2                            i1l3275 05CB  
                          i1l5211 05B0                            i1l5203 0584                            i1l3276 0590  
                          i1l5213 05BB                            i1l3277 0590                            i1l5205 0589  
                          i1l5221 0FF5                            i1l3278 0596                            i1l3279 05CA  
                          i1l5215 05C7                            i1l5207 058F                            i1l5223 0FF7  
                          i1l5209 0596                            i1l5217 0FEB                            i1l5219 0FF0  
                          i1l5191 06C1                            i1l5183 0008                            i1l5193 06C6  
                          i1l5185 000A                            i1l5195 06CA                            i1l5187 000D  
                          i1l5197 06CB                            i1l5189 06BC                            i1l5199 06D4  
                          u310_20 0589                            u310_21 0588                            u311_20 058E  
                          u311_21 058D                            u312_20 0595                            u312_21 0594  
                          u313_20 05BB                            u313_21 05BA                            u314_20 0FF0  
                          u314_21 0FEF                            u307_20 06C1                            u315_20 0FF5  
                          u307_21 06C0                            u315_21 0FF4                            u308_20 06C6  
                          u308_21 06C5                            u309_20 06E2                            u309_21 06E1  
                          u309_25 06DE                            _OSCCON 0099                        _VarSegment 0020  
                          _TMR1IE 0488                            _TMR1IF 0088                            _SPBRGH 019C  
                          _IO_Set 07E0                            _SSPADD 0212                            _TRISC6 0476  
                          _TRISC7 0477                            _SSPBUF 0211                        _VarProduct 00A0  
                          _VarI2C 01A0                            _Timer1 0078                 __end_of_UART_Main 078E  
                       ??___awdiv 0077                         ??___awmod 0077                         ??___lwdiv 0077  
                ___awdiv@quotient 0050                   ___awmod@divisor 0073                   ___awmod@counter 004E  
                          _printf 021E                            clrloop 07F7                         ?_I2C_Main 0070  
                     _Mcu_Initial 0FD7             __end_of_UART_Transmit 0650                     __end_of_MainT 021E  
                  __pcstackCOMMON 0070                      __pidataBANK0 07AE                      __pidataBANK1 078E  
                       ?_UART_ISR 0070                         ?_TMR1_ISR 0070                         ?_UART_Set 0070  
                       ?_TMR1_Set 0070                     __end_of_putch 0FA9                        ??_I2C_Main 004E  
                         ??_MainT 0058                           ??_putch 0073                        __pbssBANK0 003A  
                      __pbssBANK2 0120                        __pbssBANK3 01A0                           ?_IO_Set 0070  
                      __pnvCOMMON 007A      __end_of_I2C_Master_Reception 0456                        __pmaintext 0733  
                      ??_UART_ISR 0070           _I2C_Master_Transmission 0524                        ??_TMR1_ISR 0070  
                      ??_UART_Set 0073                        ??_TMR1_Set 0073                        __pintentry 0004  
                         _I2C_ISR 0FEB                           _ACKSTAT 10B6      __size_of_SegmentDisplay_Main 0089  
                         _I2C_Set 0FA9             __end_of_MainT_Initial 0700                           ?_printf 0051  
                         _SSPCON1 0215                           _SSPCON2 0216                           _SSPSTAT 0214  
                      __stringtab 0700                     ?_UART_Receive 0070                   __size_of_IO_Set 0016  
                         _Segment 003B                           _VarUart 0120                           _Product 007A  
        ?_setSegmentDisplayNumber 0052                           ___awdiv 0456                           ___awmod 04C3  
                         ___lwdiv 05CC          ??_SegmentDisplay_Initial 0073                   __size_of_printf 00AB  
                    __size_of_ISR 0014                  ___awmod@dividend 0075              end_of_initialization 06B9  
                  ??_UART_Receive 0073                           init_ram 0F97                           initloop 0F98  
                  UART_Transmit@i 0061         ??_I2C_Master_Transmission 0073                           printf@c 005D  
                         printf@f 005B                         _UART_Main 0764          I2C_Master_Transmission@i 0074  
               __size_of_I2C_Main 008A              _I2C_Master_Reception 03DC                      ?_Mcu_Initial 0070  
                  __end_of_IO_Set 07F6     setSegmentDisplayNumber@number 0052                        ?_UART_Main 0070  
               __size_of_UART_ISR 0048                 __size_of_TMR1_ISR 0035                 __size_of_UART_Set 0018  
 __size_of_SegmentDisplay_Initial 0010                 __size_of_TMR1_Set 0010                    __end_of_printf 02C9  
             start_initialization 0687                       __end_of_ISR 0018             ?_I2C_Master_Reception 0070  
             _SegmentDisplay_Main 0353                          ??_IO_Set 0073                         _VarTimer1 004B  
                     __pdataBANK0 0020                       __pdataBANK1 00A0                          ?_I2C_ISR 0070  
            ?_SegmentDisplay_Main 0070                          ?_I2C_Set 0070                          ??_printf 0053  
            __end_of_UART_Receive 0687                       __pbssCOMMON 0078            __size_of_UART_Transmit 003D  
                   __pcstackBANK0 004E            _SegmentDisplay_Initial 0FB7                         __pnvBANK0 0062  
                ___lwdiv@dividend 0075                          ?___awdiv 0073                          ?___awmod 0073  
                       __ptext920 0456                         __ptext912 0764                         __ptext921 05CC  
                       __ptext913 0613                         __ptext930 0353                         __ptext922 0F9D  
                       __ptext914 016E                         __ptext931 0FB7                         __ptext923 0650  
                       __ptext915 021E                         __ptext932 06F1                         __ptext924 0524  
                       __ptext916 001B                         __ptext925 03DC                         __ptext917 02C9  
                       __ptext934 0FEB                         __ptext926 07C8                         __ptext918 0FD7  
                       __ptext935 0584                         __ptext927 0FA9                         __ptext919 04C3  
                       __ptext936 06BC                         __ptext928 0FC7                         __ptext937 0000  
                       __ptext929 07E0                          ?___lwdiv 0073             ??_SegmentDisplay_Main 0073  
                     ??_UART_Main 0078                         __pstrings 0700                     UART_Receive@i 0076  
                        _I2C_Main 02C9            ??_I2C_Master_Reception 0073                    __size_of_MainT 00B0  
__size_of_setSegmentDisplayNumber 0153                         _hexpowers 0701                  ___lwdiv@quotient 004F  
        setSegmentDisplayNumber@i 0057                    __size_of_putch 000C            __size_of_MainT_Initial 000F  
            __size_of_Mcu_Initial 0014                     _UART_Transmit 0613                          _UART_ISR 0584  
                        _TMR1_ISR 06BC                          _UART_Set 07C8                          _TMR1_Set 0FC7  
                __size_of_I2C_ISR 0015                  __size_of_I2C_Set 000E                        printf@_val 0057  
                      printf@flag 0055                        printf@prec 005C                          _VarTMain 003C  
                  ?_UART_Transmit 0070             __size_of_UART_Receive 0037                  __size_of___awdiv 006D  
                __size_of___awmod 0061                  __size_of___lwdiv 0047                     _MainT_Initial 06F1  
                 ___lwdiv@divisor 0073                   ___lwdiv@counter 004E          ?_I2C_Master_Transmission 0070  
                   __size_of_main 0031                      _UART_Receive 0650                          clear_ram 07F6  
                  ?_MainT_Initial 0070                         putch@byte 0073           _setSegmentDisplayNumber 001B  
         ?_SegmentDisplay_Initial 0070                          intlevel1 0000                   ??_UART_Transmit 005E  
                        printf@ap 0056    __end_of_SegmentDisplay_Initial 0FC7   __end_of_I2C_Master_Transmission 0584  
     __end_of_SegmentDisplay_Main 03DC  
