

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Sep 15 16:41:09 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,delta=2
   141                           	psect	text119,local,class=CODE,merge=1,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,delta=2
   145                           	psect	text123,local,class=CODE,merge=1,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	text125,local,class=CODE,merge=1,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	psect	text127,local,class=CODE,merge=1,delta=2
   150                           	psect	text128,local,class=CODE,merge=1,delta=2
   151                           	psect	text129,local,class=CODE,merge=1,delta=2
   152                           	psect	text130,local,class=CODE,merge=1,delta=2
   153                           	psect	text131,local,class=CODE,merge=1,delta=2
   154                           	psect	text132,local,class=CODE,merge=1,delta=2
   155                           	psect	text133,local,class=CODE,merge=1,delta=2
   156                           	psect	text134,local,class=CODE,merge=1,delta=2
   157                           	psect	intentry,global,class=CODE,delta=2
   158                           	psect	text136,local,class=CODE,merge=1,delta=2
   159                           	psect	text137,local,class=CODE,merge=1,delta=2
   160                           	psect	text138,local,class=CODE,merge=1,delta=2
   161                           	psect	text139,local,class=CODE,merge=1,delta=2
   162                           	psect	text140,local,class=CODE,merge=1,delta=2
   163                           	psect	text141,local,class=CODE,merge=1,delta=2
   164                           	psect	text142,local,class=CODE,merge=1,delta=2
   165                           	dabs	1,0x7E,2
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  0116                     	;# 
   213  0117                     	;# 
   214  011D                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  018E                     	;# 
   218  0191                     	;# 
   219  0191                     	;# 
   220  0192                     	;# 
   221  0193                     	;# 
   222  0193                     	;# 
   223  0194                     	;# 
   224  0195                     	;# 
   225  0196                     	;# 
   226  0197                     	;# 
   227  0199                     	;# 
   228  019A                     	;# 
   229  019B                     	;# 
   230  019B                     	;# 
   231  019B                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  019C                     	;# 
   235  019D                     	;# 
   236  019E                     	;# 
   237  019F                     	;# 
   238  020D                     	;# 
   239  0210                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0291                     	;# 
   256  0291                     	;# 
   257  0292                     	;# 
   258  0293                     	;# 
   259  0298                     	;# 
   260  0298                     	;# 
   261  0299                     	;# 
   262  029A                     	;# 
   263  0394                     	;# 
   264  0395                     	;# 
   265  0396                     	;# 
   266  0FE4                     	;# 
   267  0FE5                     	;# 
   268  0FE6                     	;# 
   269  0FE7                     	;# 
   270  0FE8                     	;# 
   271  0FE9                     	;# 
   272  0FEA                     	;# 
   273  0FEB                     	;# 
   274  0FED                     	;# 
   275  0FEE                     	;# 
   276  0FEF                     	;# 
   277  0000                     	;# 
   278  0001                     	;# 
   279  0002                     	;# 
   280  0003                     	;# 
   281  0004                     	;# 
   282  0005                     	;# 
   283  0006                     	;# 
   284  0007                     	;# 
   285  0008                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  0010                     	;# 
   293  0011                     	;# 
   294  0012                     	;# 
   295  0015                     	;# 
   296  0016                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001C                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  0090                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0095                     	;# 
   311  0096                     	;# 
   312  0097                     	;# 
   313  0099                     	;# 
   314  009A                     	;# 
   315  009B                     	;# 
   316  009B                     	;# 
   317  009C                     	;# 
   318  009D                     	;# 
   319  009E                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  011D                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  018E                     	;# 
   329  0191                     	;# 
   330  0191                     	;# 
   331  0192                     	;# 
   332  0193                     	;# 
   333  0193                     	;# 
   334  0194                     	;# 
   335  0195                     	;# 
   336  0196                     	;# 
   337  0197                     	;# 
   338  0199                     	;# 
   339  019A                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019C                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020D                     	;# 
   350  0210                     	;# 
   351  0211                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0212                     	;# 
   355  0213                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0216                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0217                     	;# 
   366  0291                     	;# 
   367  0291                     	;# 
   368  0292                     	;# 
   369  0293                     	;# 
   370  0298                     	;# 
   371  0298                     	;# 
   372  0299                     	;# 
   373  029A                     	;# 
   374  0394                     	;# 
   375  0395                     	;# 
   376  0396                     	;# 
   377  0FE4                     	;# 
   378  0FE5                     	;# 
   379  0FE6                     	;# 
   380  0FE7                     	;# 
   381  0FE8                     	;# 
   382  0FE9                     	;# 
   383  0FEA                     	;# 
   384  0FEB                     	;# 
   385  0FED                     	;# 
   386  0FEE                     	;# 
   387  0FEF                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  010C                     	;# 
   432  010D                     	;# 
   433  010E                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  011D                     	;# 
   437  018C                     	;# 
   438  018D                     	;# 
   439  018E                     	;# 
   440  0191                     	;# 
   441  0191                     	;# 
   442  0192                     	;# 
   443  0193                     	;# 
   444  0193                     	;# 
   445  0194                     	;# 
   446  0195                     	;# 
   447  0196                     	;# 
   448  0197                     	;# 
   449  0199                     	;# 
   450  019A                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019C                     	;# 
   456  019C                     	;# 
   457  019D                     	;# 
   458  019E                     	;# 
   459  019F                     	;# 
   460  020D                     	;# 
   461  0210                     	;# 
   462  0211                     	;# 
   463  0211                     	;# 
   464  0212                     	;# 
   465  0212                     	;# 
   466  0213                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0214                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0216                     	;# 
   474  0216                     	;# 
   475  0217                     	;# 
   476  0217                     	;# 
   477  0291                     	;# 
   478  0291                     	;# 
   479  0292                     	;# 
   480  0293                     	;# 
   481  0298                     	;# 
   482  0298                     	;# 
   483  0299                     	;# 
   484  029A                     	;# 
   485  0394                     	;# 
   486  0395                     	;# 
   487  0396                     	;# 
   488  0FE4                     	;# 
   489  0FE5                     	;# 
   490  0FE6                     	;# 
   491  0FE7                     	;# 
   492  0FE8                     	;# 
   493  0FE9                     	;# 
   494  0FEA                     	;# 
   495  0FEB                     	;# 
   496  0FED                     	;# 
   497  0FEE                     	;# 
   498  0FEF                     	;# 
   499  0000                     	;# 
   500  0001                     	;# 
   501  0002                     	;# 
   502  0003                     	;# 
   503  0004                     	;# 
   504  0005                     	;# 
   505  0006                     	;# 
   506  0007                     	;# 
   507  0008                     	;# 
   508  0009                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000D                     	;# 
   513  000E                     	;# 
   514  0010                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0016                     	;# 
   520  0017                     	;# 
   521  0018                     	;# 
   522  0019                     	;# 
   523  001A                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  0090                     	;# 
   530  0091                     	;# 
   531  0092                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  0116                     	;# 
   546  0117                     	;# 
   547  011D                     	;# 
   548  018C                     	;# 
   549  018D                     	;# 
   550  018E                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0194                     	;# 
   557  0195                     	;# 
   558  0196                     	;# 
   559  0197                     	;# 
   560  0199                     	;# 
   561  019A                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019C                     	;# 
   567  019C                     	;# 
   568  019D                     	;# 
   569  019E                     	;# 
   570  019F                     	;# 
   571  020D                     	;# 
   572  0210                     	;# 
   573  0211                     	;# 
   574  0211                     	;# 
   575  0212                     	;# 
   576  0212                     	;# 
   577  0213                     	;# 
   578  0213                     	;# 
   579  0214                     	;# 
   580  0214                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0216                     	;# 
   585  0216                     	;# 
   586  0217                     	;# 
   587  0217                     	;# 
   588  0291                     	;# 
   589  0291                     	;# 
   590  0292                     	;# 
   591  0293                     	;# 
   592  0298                     	;# 
   593  0298                     	;# 
   594  0299                     	;# 
   595  029A                     	;# 
   596  0394                     	;# 
   597  0395                     	;# 
   598  0396                     	;# 
   599  0FE4                     	;# 
   600  0FE5                     	;# 
   601  0FE6                     	;# 
   602  0FE7                     	;# 
   603  0FE8                     	;# 
   604  0FE9                     	;# 
   605  0FEA                     	;# 
   606  0FEB                     	;# 
   607  0FED                     	;# 
   608  0FEE                     	;# 
   609  0FEF                     	;# 
   610  0000                     	;# 
   611  0001                     	;# 
   612  0002                     	;# 
   613  0003                     	;# 
   614  0004                     	;# 
   615  0005                     	;# 
   616  0006                     	;# 
   617  0007                     	;# 
   618  0008                     	;# 
   619  0009                     	;# 
   620  000A                     	;# 
   621  000B                     	;# 
   622  000C                     	;# 
   623  000D                     	;# 
   624  000E                     	;# 
   625  0010                     	;# 
   626  0011                     	;# 
   627  0012                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0016                     	;# 
   631  0017                     	;# 
   632  0018                     	;# 
   633  0019                     	;# 
   634  001A                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  008C                     	;# 
   638  008D                     	;# 
   639  008E                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0095                     	;# 
   644  0096                     	;# 
   645  0097                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009E                     	;# 
   653  010C                     	;# 
   654  010D                     	;# 
   655  010E                     	;# 
   656  0116                     	;# 
   657  0117                     	;# 
   658  011D                     	;# 
   659  018C                     	;# 
   660  018D                     	;# 
   661  018E                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0194                     	;# 
   668  0195                     	;# 
   669  0196                     	;# 
   670  0197                     	;# 
   671  0199                     	;# 
   672  019A                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  019C                     	;# 
   679  019D                     	;# 
   680  019E                     	;# 
   681  019F                     	;# 
   682  020D                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  0291                     	;# 
   700  0291                     	;# 
   701  0292                     	;# 
   702  0293                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  0394                     	;# 
   708  0395                     	;# 
   709  0396                     	;# 
   710  0FE4                     	;# 
   711  0FE5                     	;# 
   712  0FE6                     	;# 
   713  0FE7                     	;# 
   714  0FE8                     	;# 
   715  0FE9                     	;# 
   716  0FEA                     	;# 
   717  0FEB                     	;# 
   718  0FED                     	;# 
   719  0FEE                     	;# 
   720  0FEF                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0008                     	;# 
   730  0009                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  000E                     	;# 
   736  0010                     	;# 
   737  0011                     	;# 
   738  0012                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  008E                     	;# 
   751  0090                     	;# 
   752  0091                     	;# 
   753  0092                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0099                     	;# 
   758  009A                     	;# 
   759  009B                     	;# 
   760  009B                     	;# 
   761  009C                     	;# 
   762  009D                     	;# 
   763  009E                     	;# 
   764  010C                     	;# 
   765  010D                     	;# 
   766  010E                     	;# 
   767  0116                     	;# 
   768  0117                     	;# 
   769  011D                     	;# 
   770  018C                     	;# 
   771  018D                     	;# 
   772  018E                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0197                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020D                     	;# 
   794  0210                     	;# 
   795  0211                     	;# 
   796  0211                     	;# 
   797  0212                     	;# 
   798  0212                     	;# 
   799  0213                     	;# 
   800  0213                     	;# 
   801  0214                     	;# 
   802  0214                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0216                     	;# 
   807  0216                     	;# 
   808  0217                     	;# 
   809  0217                     	;# 
   810  0291                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0298                     	;# 
   815  0298                     	;# 
   816  0299                     	;# 
   817  029A                     	;# 
   818  0394                     	;# 
   819  0395                     	;# 
   820  0396                     	;# 
   821  0FE4                     	;# 
   822  0FE5                     	;# 
   823  0FE6                     	;# 
   824  0FE7                     	;# 
   825  0FE8                     	;# 
   826  0FE9                     	;# 
   827  0FEA                     	;# 
   828  0FEB                     	;# 
   829  0FED                     	;# 
   830  0FEE                     	;# 
   831  0FEF                     	;# 
   832  0000                     	;# 
   833  0001                     	;# 
   834  0002                     	;# 
   835  0003                     	;# 
   836  0004                     	;# 
   837  0005                     	;# 
   838  0006                     	;# 
   839  0007                     	;# 
   840  0008                     	;# 
   841  0009                     	;# 
   842  000A                     	;# 
   843  000B                     	;# 
   844  000C                     	;# 
   845  000D                     	;# 
   846  000E                     	;# 
   847  0010                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0015                     	;# 
   851  0016                     	;# 
   852  0016                     	;# 
   853  0017                     	;# 
   854  0018                     	;# 
   855  0019                     	;# 
   856  001A                     	;# 
   857  001B                     	;# 
   858  001C                     	;# 
   859  008C                     	;# 
   860  008D                     	;# 
   861  008E                     	;# 
   862  0090                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0095                     	;# 
   866  0096                     	;# 
   867  0097                     	;# 
   868  0099                     	;# 
   869  009A                     	;# 
   870  009B                     	;# 
   871  009B                     	;# 
   872  009C                     	;# 
   873  009D                     	;# 
   874  009E                     	;# 
   875  010C                     	;# 
   876  010D                     	;# 
   877  010E                     	;# 
   878  0116                     	;# 
   879  0117                     	;# 
   880  011D                     	;# 
   881  018C                     	;# 
   882  018D                     	;# 
   883  018E                     	;# 
   884  0191                     	;# 
   885  0191                     	;# 
   886  0192                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0194                     	;# 
   890  0195                     	;# 
   891  0196                     	;# 
   892  0197                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020D                     	;# 
   905  0210                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0291                     	;# 
   922  0291                     	;# 
   923  0292                     	;# 
   924  0293                     	;# 
   925  0298                     	;# 
   926  0298                     	;# 
   927  0299                     	;# 
   928  029A                     	;# 
   929  0394                     	;# 
   930  0395                     	;# 
   931  0396                     	;# 
   932  0FE4                     	;# 
   933  0FE5                     	;# 
   934  0FE6                     	;# 
   935  0FE7                     	;# 
   936  0FE8                     	;# 
   937  0FE9                     	;# 
   938  0FEA                     	;# 
   939  0FEB                     	;# 
   940  0FED                     	;# 
   941  0FEE                     	;# 
   942  0FEF                     	;# 
   943  0000                     	;# 
   944  0001                     	;# 
   945  0002                     	;# 
   946  0003                     	;# 
   947  0004                     	;# 
   948  0005                     	;# 
   949  0006                     	;# 
   950  0007                     	;# 
   951  0008                     	;# 
   952  0009                     	;# 
   953  000A                     	;# 
   954  000B                     	;# 
   955  000C                     	;# 
   956  000D                     	;# 
   957  000E                     	;# 
   958  0010                     	;# 
   959  0011                     	;# 
   960  0012                     	;# 
   961  0015                     	;# 
   962  0016                     	;# 
   963  0016                     	;# 
   964  0017                     	;# 
   965  0018                     	;# 
   966  0019                     	;# 
   967  001A                     	;# 
   968  001B                     	;# 
   969  001C                     	;# 
   970  008C                     	;# 
   971  008D                     	;# 
   972  008E                     	;# 
   973  0090                     	;# 
   974  0091                     	;# 
   975  0092                     	;# 
   976  0095                     	;# 
   977  0096                     	;# 
   978  0097                     	;# 
   979  0099                     	;# 
   980  009A                     	;# 
   981  009B                     	;# 
   982  009B                     	;# 
   983  009C                     	;# 
   984  009D                     	;# 
   985  009E                     	;# 
   986  010C                     	;# 
   987  010D                     	;# 
   988  010E                     	;# 
   989  0116                     	;# 
   990  0117                     	;# 
   991  011D                     	;# 
   992  018C                     	;# 
   993  018D                     	;# 
   994  018E                     	;# 
   995  0191                     	;# 
   996  0191                     	;# 
   997  0192                     	;# 
   998  0193                     	;# 
   999  0193                     	;# 
  1000  0194                     	;# 
  1001  0195                     	;# 
  1002  0196                     	;# 
  1003  0197                     	;# 
  1004  0199                     	;# 
  1005  019A                     	;# 
  1006  019B                     	;# 
  1007  019B                     	;# 
  1008  019B                     	;# 
  1009  019B                     	;# 
  1010  019C                     	;# 
  1011  019C                     	;# 
  1012  019D                     	;# 
  1013  019E                     	;# 
  1014  019F                     	;# 
  1015  020D                     	;# 
  1016  0210                     	;# 
  1017  0211                     	;# 
  1018  0211                     	;# 
  1019  0212                     	;# 
  1020  0212                     	;# 
  1021  0213                     	;# 
  1022  0213                     	;# 
  1023  0214                     	;# 
  1024  0214                     	;# 
  1025  0215                     	;# 
  1026  0215                     	;# 
  1027  0215                     	;# 
  1028  0216                     	;# 
  1029  0216                     	;# 
  1030  0217                     	;# 
  1031  0217                     	;# 
  1032  0291                     	;# 
  1033  0291                     	;# 
  1034  0292                     	;# 
  1035  0293                     	;# 
  1036  0298                     	;# 
  1037  0298                     	;# 
  1038  0299                     	;# 
  1039  029A                     	;# 
  1040  0394                     	;# 
  1041  0395                     	;# 
  1042  0396                     	;# 
  1043  0FE4                     	;# 
  1044  0FE5                     	;# 
  1045  0FE6                     	;# 
  1046  0FE7                     	;# 
  1047  0FE8                     	;# 
  1048  0FE9                     	;# 
  1049  0FEA                     	;# 
  1050  0FEB                     	;# 
  1051  0FED                     	;# 
  1052  0FEE                     	;# 
  1053  0FEF                     	;# 
  1054  0000                     	;# 
  1055  0001                     	;# 
  1056  0002                     	;# 
  1057  0003                     	;# 
  1058  0004                     	;# 
  1059  0005                     	;# 
  1060  0006                     	;# 
  1061  0007                     	;# 
  1062  0008                     	;# 
  1063  0009                     	;# 
  1064  000A                     	;# 
  1065  000B                     	;# 
  1066  000C                     	;# 
  1067  000D                     	;# 
  1068  000E                     	;# 
  1069  0010                     	;# 
  1070  0011                     	;# 
  1071  0012                     	;# 
  1072  0015                     	;# 
  1073  0016                     	;# 
  1074  0016                     	;# 
  1075  0017                     	;# 
  1076  0018                     	;# 
  1077  0019                     	;# 
  1078  001A                     	;# 
  1079  001B                     	;# 
  1080  001C                     	;# 
  1081  008C                     	;# 
  1082  008D                     	;# 
  1083  008E                     	;# 
  1084  0090                     	;# 
  1085  0091                     	;# 
  1086  0092                     	;# 
  1087  0095                     	;# 
  1088  0096                     	;# 
  1089  0097                     	;# 
  1090  0099                     	;# 
  1091  009A                     	;# 
  1092  009B                     	;# 
  1093  009B                     	;# 
  1094  009C                     	;# 
  1095  009D                     	;# 
  1096  009E                     	;# 
  1097  010C                     	;# 
  1098  010D                     	;# 
  1099  010E                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  011D                     	;# 
  1103  018C                     	;# 
  1104  018D                     	;# 
  1105  018E                     	;# 
  1106  0191                     	;# 
  1107  0191                     	;# 
  1108  0192                     	;# 
  1109  0193                     	;# 
  1110  0193                     	;# 
  1111  0194                     	;# 
  1112  0195                     	;# 
  1113  0196                     	;# 
  1114  0197                     	;# 
  1115  0199                     	;# 
  1116  019A                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019B                     	;# 
  1120  019B                     	;# 
  1121  019C                     	;# 
  1122  019C                     	;# 
  1123  019D                     	;# 
  1124  019E                     	;# 
  1125  019F                     	;# 
  1126  020D                     	;# 
  1127  0210                     	;# 
  1128  0211                     	;# 
  1129  0211                     	;# 
  1130  0212                     	;# 
  1131  0212                     	;# 
  1132  0213                     	;# 
  1133  0213                     	;# 
  1134  0214                     	;# 
  1135  0214                     	;# 
  1136  0215                     	;# 
  1137  0215                     	;# 
  1138  0215                     	;# 
  1139  0216                     	;# 
  1140  0216                     	;# 
  1141  0217                     	;# 
  1142  0217                     	;# 
  1143  0291                     	;# 
  1144  0291                     	;# 
  1145  0292                     	;# 
  1146  0293                     	;# 
  1147  0298                     	;# 
  1148  0298                     	;# 
  1149  0299                     	;# 
  1150  029A                     	;# 
  1151  0394                     	;# 
  1152  0395                     	;# 
  1153  0396                     	;# 
  1154  0FE4                     	;# 
  1155  0FE5                     	;# 
  1156  0FE6                     	;# 
  1157  0FE7                     	;# 
  1158  0FE8                     	;# 
  1159  0FE9                     	;# 
  1160  0FEA                     	;# 
  1161  0FEB                     	;# 
  1162  0FED                     	;# 
  1163  0FEE                     	;# 
  1164  0FEF                     	;# 
  1165  0000                     	;# 
  1166  0001                     	;# 
  1167  0002                     	;# 
  1168  0003                     	;# 
  1169  0004                     	;# 
  1170  0005                     	;# 
  1171  0006                     	;# 
  1172  0007                     	;# 
  1173  0008                     	;# 
  1174  0009                     	;# 
  1175  000A                     	;# 
  1176  000B                     	;# 
  1177  000C                     	;# 
  1178  000D                     	;# 
  1179  000E                     	;# 
  1180  0010                     	;# 
  1181  0011                     	;# 
  1182  0012                     	;# 
  1183  0015                     	;# 
  1184  0016                     	;# 
  1185  0016                     	;# 
  1186  0017                     	;# 
  1187  0018                     	;# 
  1188  0019                     	;# 
  1189  001A                     	;# 
  1190  001B                     	;# 
  1191  001C                     	;# 
  1192  008C                     	;# 
  1193  008D                     	;# 
  1194  008E                     	;# 
  1195  0090                     	;# 
  1196  0091                     	;# 
  1197  0092                     	;# 
  1198  0095                     	;# 
  1199  0096                     	;# 
  1200  0097                     	;# 
  1201  0099                     	;# 
  1202  009A                     	;# 
  1203  009B                     	;# 
  1204  009B                     	;# 
  1205  009C                     	;# 
  1206  009D                     	;# 
  1207  009E                     	;# 
  1208  010C                     	;# 
  1209  010D                     	;# 
  1210  010E                     	;# 
  1211  0116                     	;# 
  1212  0117                     	;# 
  1213  011D                     	;# 
  1214  018C                     	;# 
  1215  018D                     	;# 
  1216  018E                     	;# 
  1217  0191                     	;# 
  1218  0191                     	;# 
  1219  0192                     	;# 
  1220  0193                     	;# 
  1221  0193                     	;# 
  1222  0194                     	;# 
  1223  0195                     	;# 
  1224  0196                     	;# 
  1225  0197                     	;# 
  1226  0199                     	;# 
  1227  019A                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019B                     	;# 
  1231  019B                     	;# 
  1232  019C                     	;# 
  1233  019C                     	;# 
  1234  019D                     	;# 
  1235  019E                     	;# 
  1236  019F                     	;# 
  1237  020D                     	;# 
  1238  0210                     	;# 
  1239  0211                     	;# 
  1240  0211                     	;# 
  1241  0212                     	;# 
  1242  0212                     	;# 
  1243  0213                     	;# 
  1244  0213                     	;# 
  1245  0214                     	;# 
  1246  0214                     	;# 
  1247  0215                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0216                     	;# 
  1251  0216                     	;# 
  1252  0217                     	;# 
  1253  0217                     	;# 
  1254  0291                     	;# 
  1255  0291                     	;# 
  1256  0292                     	;# 
  1257  0293                     	;# 
  1258  0298                     	;# 
  1259  0298                     	;# 
  1260  0299                     	;# 
  1261  029A                     	;# 
  1262  0394                     	;# 
  1263  0395                     	;# 
  1264  0396                     	;# 
  1265  0FE4                     	;# 
  1266  0FE5                     	;# 
  1267  0FE6                     	;# 
  1268  0FE7                     	;# 
  1269  0FE8                     	;# 
  1270  0FE9                     	;# 
  1271  0FEA                     	;# 
  1272  0FEB                     	;# 
  1273  0FED                     	;# 
  1274  0FEE                     	;# 
  1275  0FEF                     	;# 
  1276  0000                     	;# 
  1277  0001                     	;# 
  1278  0002                     	;# 
  1279  0003                     	;# 
  1280  0004                     	;# 
  1281  0005                     	;# 
  1282  0006                     	;# 
  1283  0007                     	;# 
  1284  0008                     	;# 
  1285  0009                     	;# 
  1286  000A                     	;# 
  1287  000B                     	;# 
  1288  000C                     	;# 
  1289  000D                     	;# 
  1290  000E                     	;# 
  1291  0010                     	;# 
  1292  0011                     	;# 
  1293  0012                     	;# 
  1294  0015                     	;# 
  1295  0016                     	;# 
  1296  0016                     	;# 
  1297  0017                     	;# 
  1298  0018                     	;# 
  1299  0019                     	;# 
  1300  001A                     	;# 
  1301  001B                     	;# 
  1302  001C                     	;# 
  1303  008C                     	;# 
  1304  008D                     	;# 
  1305  008E                     	;# 
  1306  0090                     	;# 
  1307  0091                     	;# 
  1308  0092                     	;# 
  1309  0095                     	;# 
  1310  0096                     	;# 
  1311  0097                     	;# 
  1312  0099                     	;# 
  1313  009A                     	;# 
  1314  009B                     	;# 
  1315  009B                     	;# 
  1316  009C                     	;# 
  1317  009D                     	;# 
  1318  009E                     	;# 
  1319  010C                     	;# 
  1320  010D                     	;# 
  1321  010E                     	;# 
  1322  0116                     	;# 
  1323  0117                     	;# 
  1324  011D                     	;# 
  1325  018C                     	;# 
  1326  018D                     	;# 
  1327  018E                     	;# 
  1328  0191                     	;# 
  1329  0191                     	;# 
  1330  0192                     	;# 
  1331  0193                     	;# 
  1332  0193                     	;# 
  1333  0194                     	;# 
  1334  0195                     	;# 
  1335  0196                     	;# 
  1336  0197                     	;# 
  1337  0199                     	;# 
  1338  019A                     	;# 
  1339  019B                     	;# 
  1340  019B                     	;# 
  1341  019B                     	;# 
  1342  019B                     	;# 
  1343  019C                     	;# 
  1344  019C                     	;# 
  1345  019D                     	;# 
  1346  019E                     	;# 
  1347  019F                     	;# 
  1348  020D                     	;# 
  1349  0210                     	;# 
  1350  0211                     	;# 
  1351  0211                     	;# 
  1352  0212                     	;# 
  1353  0212                     	;# 
  1354  0213                     	;# 
  1355  0213                     	;# 
  1356  0214                     	;# 
  1357  0214                     	;# 
  1358  0215                     	;# 
  1359  0215                     	;# 
  1360  0215                     	;# 
  1361  0216                     	;# 
  1362  0216                     	;# 
  1363  0217                     	;# 
  1364  0217                     	;# 
  1365  0291                     	;# 
  1366  0291                     	;# 
  1367  0292                     	;# 
  1368  0293                     	;# 
  1369  0298                     	;# 
  1370  0298                     	;# 
  1371  0299                     	;# 
  1372  029A                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  0FE4                     	;# 
  1377  0FE5                     	;# 
  1378  0FE6                     	;# 
  1379  0FE7                     	;# 
  1380  0FE8                     	;# 
  1381  0FE9                     	;# 
  1382  0FEA                     	;# 
  1383  0FEB                     	;# 
  1384  0FED                     	;# 
  1385  0FEE                     	;# 
  1386  0FEF                     	;# 
  1387  0000                     	;# 
  1388  0001                     	;# 
  1389  0002                     	;# 
  1390  0003                     	;# 
  1391  0004                     	;# 
  1392  0005                     	;# 
  1393  0006                     	;# 
  1394  0007                     	;# 
  1395  0008                     	;# 
  1396  0009                     	;# 
  1397  000A                     	;# 
  1398  000B                     	;# 
  1399  000C                     	;# 
  1400  000D                     	;# 
  1401  000E                     	;# 
  1402  0010                     	;# 
  1403  0011                     	;# 
  1404  0012                     	;# 
  1405  0015                     	;# 
  1406  0016                     	;# 
  1407  0016                     	;# 
  1408  0017                     	;# 
  1409  0018                     	;# 
  1410  0019                     	;# 
  1411  001A                     	;# 
  1412  001B                     	;# 
  1413  001C                     	;# 
  1414  008C                     	;# 
  1415  008D                     	;# 
  1416  008E                     	;# 
  1417  0090                     	;# 
  1418  0091                     	;# 
  1419  0092                     	;# 
  1420  0095                     	;# 
  1421  0096                     	;# 
  1422  0097                     	;# 
  1423  0099                     	;# 
  1424  009A                     	;# 
  1425  009B                     	;# 
  1426  009B                     	;# 
  1427  009C                     	;# 
  1428  009D                     	;# 
  1429  009E                     	;# 
  1430  010C                     	;# 
  1431  010D                     	;# 
  1432  010E                     	;# 
  1433  0116                     	;# 
  1434  0117                     	;# 
  1435  011D                     	;# 
  1436  018C                     	;# 
  1437  018D                     	;# 
  1438  018E                     	;# 
  1439  0191                     	;# 
  1440  0191                     	;# 
  1441  0192                     	;# 
  1442  0193                     	;# 
  1443  0193                     	;# 
  1444  0194                     	;# 
  1445  0195                     	;# 
  1446  0196                     	;# 
  1447  0197                     	;# 
  1448  0199                     	;# 
  1449  019A                     	;# 
  1450  019B                     	;# 
  1451  019B                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019C                     	;# 
  1455  019C                     	;# 
  1456  019D                     	;# 
  1457  019E                     	;# 
  1458  019F                     	;# 
  1459  020D                     	;# 
  1460  0210                     	;# 
  1461  0211                     	;# 
  1462  0211                     	;# 
  1463  0212                     	;# 
  1464  0212                     	;# 
  1465  0213                     	;# 
  1466  0213                     	;# 
  1467  0214                     	;# 
  1468  0214                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0215                     	;# 
  1472  0216                     	;# 
  1473  0216                     	;# 
  1474  0217                     	;# 
  1475  0217                     	;# 
  1476  0291                     	;# 
  1477  0291                     	;# 
  1478  0292                     	;# 
  1479  0293                     	;# 
  1480  0298                     	;# 
  1481  0298                     	;# 
  1482  0299                     	;# 
  1483  029A                     	;# 
  1484  0394                     	;# 
  1485  0395                     	;# 
  1486  0396                     	;# 
  1487  0FE4                     	;# 
  1488  0FE5                     	;# 
  1489  0FE6                     	;# 
  1490  0FE7                     	;# 
  1491  0FE8                     	;# 
  1492  0FE9                     	;# 
  1493  0FEA                     	;# 
  1494  0FEB                     	;# 
  1495  0FED                     	;# 
  1496  0FEE                     	;# 
  1497  0FEF                     	;# 
  1498  0000                     	;# 
  1499  0001                     	;# 
  1500  0002                     	;# 
  1501  0003                     	;# 
  1502  0004                     	;# 
  1503  0005                     	;# 
  1504  0006                     	;# 
  1505  0007                     	;# 
  1506  0008                     	;# 
  1507  0009                     	;# 
  1508  000A                     	;# 
  1509  000B                     	;# 
  1510  000C                     	;# 
  1511  000D                     	;# 
  1512  000E                     	;# 
  1513  0010                     	;# 
  1514  0011                     	;# 
  1515  0012                     	;# 
  1516  0015                     	;# 
  1517  0016                     	;# 
  1518  0016                     	;# 
  1519  0017                     	;# 
  1520  0018                     	;# 
  1521  0019                     	;# 
  1522  001A                     	;# 
  1523  001B                     	;# 
  1524  001C                     	;# 
  1525  008C                     	;# 
  1526  008D                     	;# 
  1527  008E                     	;# 
  1528  0090                     	;# 
  1529  0091                     	;# 
  1530  0092                     	;# 
  1531  0095                     	;# 
  1532  0096                     	;# 
  1533  0097                     	;# 
  1534  0099                     	;# 
  1535  009A                     	;# 
  1536  009B                     	;# 
  1537  009B                     	;# 
  1538  009C                     	;# 
  1539  009D                     	;# 
  1540  009E                     	;# 
  1541  010C                     	;# 
  1542  010D                     	;# 
  1543  010E                     	;# 
  1544  0116                     	;# 
  1545  0117                     	;# 
  1546  011D                     	;# 
  1547  018C                     	;# 
  1548  018D                     	;# 
  1549  018E                     	;# 
  1550  0191                     	;# 
  1551  0191                     	;# 
  1552  0192                     	;# 
  1553  0193                     	;# 
  1554  0193                     	;# 
  1555  0194                     	;# 
  1556  0195                     	;# 
  1557  0196                     	;# 
  1558  0197                     	;# 
  1559  0199                     	;# 
  1560  019A                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019B                     	;# 
  1565  019C                     	;# 
  1566  019C                     	;# 
  1567  019D                     	;# 
  1568  019E                     	;# 
  1569  019F                     	;# 
  1570  020D                     	;# 
  1571  0210                     	;# 
  1572  0211                     	;# 
  1573  0211                     	;# 
  1574  0212                     	;# 
  1575  0212                     	;# 
  1576  0213                     	;# 
  1577  0213                     	;# 
  1578  0214                     	;# 
  1579  0214                     	;# 
  1580  0215                     	;# 
  1581  0215                     	;# 
  1582  0215                     	;# 
  1583  0216                     	;# 
  1584  0216                     	;# 
  1585  0217                     	;# 
  1586  0217                     	;# 
  1587  0291                     	;# 
  1588  0291                     	;# 
  1589  0292                     	;# 
  1590  0293                     	;# 
  1591  0298                     	;# 
  1592  0298                     	;# 
  1593  0299                     	;# 
  1594  029A                     	;# 
  1595  0394                     	;# 
  1596  0395                     	;# 
  1597  0396                     	;# 
  1598  0FE4                     	;# 
  1599  0FE5                     	;# 
  1600  0FE6                     	;# 
  1601  0FE7                     	;# 
  1602  0FE8                     	;# 
  1603  0FE9                     	;# 
  1604  0FEA                     	;# 
  1605  0FEB                     	;# 
  1606  0FED                     	;# 
  1607  0FEE                     	;# 
  1608  0FEF                     	;# 
  1609  0000                     	;# 
  1610  0001                     	;# 
  1611  0002                     	;# 
  1612  0003                     	;# 
  1613  0004                     	;# 
  1614  0005                     	;# 
  1615  0006                     	;# 
  1616  0007                     	;# 
  1617  0008                     	;# 
  1618  0009                     	;# 
  1619  000A                     	;# 
  1620  000B                     	;# 
  1621  000C                     	;# 
  1622  000D                     	;# 
  1623  000E                     	;# 
  1624  0010                     	;# 
  1625  0011                     	;# 
  1626  0012                     	;# 
  1627  0015                     	;# 
  1628  0016                     	;# 
  1629  0016                     	;# 
  1630  0017                     	;# 
  1631  0018                     	;# 
  1632  0019                     	;# 
  1633  001A                     	;# 
  1634  001B                     	;# 
  1635  001C                     	;# 
  1636  008C                     	;# 
  1637  008D                     	;# 
  1638  008E                     	;# 
  1639  0090                     	;# 
  1640  0091                     	;# 
  1641  0092                     	;# 
  1642  0095                     	;# 
  1643  0096                     	;# 
  1644  0097                     	;# 
  1645  0099                     	;# 
  1646  009A                     	;# 
  1647  009B                     	;# 
  1648  009B                     	;# 
  1649  009C                     	;# 
  1650  009D                     	;# 
  1651  009E                     	;# 
  1652  010C                     	;# 
  1653  010D                     	;# 
  1654  010E                     	;# 
  1655  0116                     	;# 
  1656  0117                     	;# 
  1657  011D                     	;# 
  1658  018C                     	;# 
  1659  018D                     	;# 
  1660  018E                     	;# 
  1661  0191                     	;# 
  1662  0191                     	;# 
  1663  0192                     	;# 
  1664  0193                     	;# 
  1665  0193                     	;# 
  1666  0194                     	;# 
  1667  0195                     	;# 
  1668  0196                     	;# 
  1669  0197                     	;# 
  1670  0199                     	;# 
  1671  019A                     	;# 
  1672  019B                     	;# 
  1673  019B                     	;# 
  1674  019B                     	;# 
  1675  019B                     	;# 
  1676  019C                     	;# 
  1677  019C                     	;# 
  1678  019D                     	;# 
  1679  019E                     	;# 
  1680  019F                     	;# 
  1681  020D                     	;# 
  1682  0210                     	;# 
  1683  0211                     	;# 
  1684  0211                     	;# 
  1685  0212                     	;# 
  1686  0212                     	;# 
  1687  0213                     	;# 
  1688  0213                     	;# 
  1689  0214                     	;# 
  1690  0214                     	;# 
  1691  0215                     	;# 
  1692  0215                     	;# 
  1693  0215                     	;# 
  1694  0216                     	;# 
  1695  0216                     	;# 
  1696  0217                     	;# 
  1697  0217                     	;# 
  1698  0291                     	;# 
  1699  0291                     	;# 
  1700  0292                     	;# 
  1701  0293                     	;# 
  1702  0298                     	;# 
  1703  0298                     	;# 
  1704  0299                     	;# 
  1705  029A                     	;# 
  1706  0394                     	;# 
  1707  0395                     	;# 
  1708  0396                     	;# 
  1709  0FE4                     	;# 
  1710  0FE5                     	;# 
  1711  0FE6                     	;# 
  1712  0FE7                     	;# 
  1713  0FE8                     	;# 
  1714  0FE9                     	;# 
  1715  0FEA                     	;# 
  1716  0FEB                     	;# 
  1717  0FED                     	;# 
  1718  0FEE                     	;# 
  1719  0FEF                     	;# 
  1720  0000                     	;# 
  1721  0001                     	;# 
  1722  0002                     	;# 
  1723  0003                     	;# 
  1724  0004                     	;# 
  1725  0005                     	;# 
  1726  0006                     	;# 
  1727  0007                     	;# 
  1728  0008                     	;# 
  1729  0009                     	;# 
  1730  000A                     	;# 
  1731  000B                     	;# 
  1732  000C                     	;# 
  1733  000D                     	;# 
  1734  000E                     	;# 
  1735  0010                     	;# 
  1736  0011                     	;# 
  1737  0012                     	;# 
  1738  0015                     	;# 
  1739  0016                     	;# 
  1740  0016                     	;# 
  1741  0017                     	;# 
  1742  0018                     	;# 
  1743  0019                     	;# 
  1744  001A                     	;# 
  1745  001B                     	;# 
  1746  001C                     	;# 
  1747  008C                     	;# 
  1748  008D                     	;# 
  1749  008E                     	;# 
  1750  0090                     	;# 
  1751  0091                     	;# 
  1752  0092                     	;# 
  1753  0095                     	;# 
  1754  0096                     	;# 
  1755  0097                     	;# 
  1756  0099                     	;# 
  1757  009A                     	;# 
  1758  009B                     	;# 
  1759  009B                     	;# 
  1760  009C                     	;# 
  1761  009D                     	;# 
  1762  009E                     	;# 
  1763  010C                     	;# 
  1764  010D                     	;# 
  1765  010E                     	;# 
  1766  0116                     	;# 
  1767  0117                     	;# 
  1768  011D                     	;# 
  1769  018C                     	;# 
  1770  018D                     	;# 
  1771  018E                     	;# 
  1772  0191                     	;# 
  1773  0191                     	;# 
  1774  0192                     	;# 
  1775  0193                     	;# 
  1776  0193                     	;# 
  1777  0194                     	;# 
  1778  0195                     	;# 
  1779  0196                     	;# 
  1780  0197                     	;# 
  1781  0199                     	;# 
  1782  019A                     	;# 
  1783  019B                     	;# 
  1784  019B                     	;# 
  1785  019B                     	;# 
  1786  019B                     	;# 
  1787  019C                     	;# 
  1788  019C                     	;# 
  1789  019D                     	;# 
  1790  019E                     	;# 
  1791  019F                     	;# 
  1792  020D                     	;# 
  1793  0210                     	;# 
  1794  0211                     	;# 
  1795  0211                     	;# 
  1796  0212                     	;# 
  1797  0212                     	;# 
  1798  0213                     	;# 
  1799  0213                     	;# 
  1800  0214                     	;# 
  1801  0214                     	;# 
  1802  0215                     	;# 
  1803  0215                     	;# 
  1804  0215                     	;# 
  1805  0216                     	;# 
  1806  0216                     	;# 
  1807  0217                     	;# 
  1808  0217                     	;# 
  1809  0291                     	;# 
  1810  0291                     	;# 
  1811  0292                     	;# 
  1812  0293                     	;# 
  1813  0298                     	;# 
  1814  0298                     	;# 
  1815  0299                     	;# 
  1816  029A                     	;# 
  1817  0394                     	;# 
  1818  0395                     	;# 
  1819  0396                     	;# 
  1820  0FE4                     	;# 
  1821  0FE5                     	;# 
  1822  0FE6                     	;# 
  1823  0FE7                     	;# 
  1824  0FE8                     	;# 
  1825  0FE9                     	;# 
  1826  0FEA                     	;# 
  1827  0FEB                     	;# 
  1828  0FED                     	;# 
  1829  0FEE                     	;# 
  1830  0FEF                     	;# 
  1831  0000                     	;# 
  1832  0001                     	;# 
  1833  0002                     	;# 
  1834  0003                     	;# 
  1835  0004                     	;# 
  1836  0005                     	;# 
  1837  0006                     	;# 
  1838  0007                     	;# 
  1839  0008                     	;# 
  1840  0009                     	;# 
  1841  000A                     	;# 
  1842  000B                     	;# 
  1843  000C                     	;# 
  1844  000D                     	;# 
  1845  000E                     	;# 
  1846  0010                     	;# 
  1847  0011                     	;# 
  1848  0012                     	;# 
  1849  0015                     	;# 
  1850  0016                     	;# 
  1851  0016                     	;# 
  1852  0017                     	;# 
  1853  0018                     	;# 
  1854  0019                     	;# 
  1855  001A                     	;# 
  1856  001B                     	;# 
  1857  001C                     	;# 
  1858  008C                     	;# 
  1859  008D                     	;# 
  1860  008E                     	;# 
  1861  0090                     	;# 
  1862  0091                     	;# 
  1863  0092                     	;# 
  1864  0095                     	;# 
  1865  0096                     	;# 
  1866  0097                     	;# 
  1867  0099                     	;# 
  1868  009A                     	;# 
  1869  009B                     	;# 
  1870  009B                     	;# 
  1871  009C                     	;# 
  1872  009D                     	;# 
  1873  009E                     	;# 
  1874  010C                     	;# 
  1875  010D                     	;# 
  1876  010E                     	;# 
  1877  0116                     	;# 
  1878  0117                     	;# 
  1879  011D                     	;# 
  1880  018C                     	;# 
  1881  018D                     	;# 
  1882  018E                     	;# 
  1883  0191                     	;# 
  1884  0191                     	;# 
  1885  0192                     	;# 
  1886  0193                     	;# 
  1887  0193                     	;# 
  1888  0194                     	;# 
  1889  0195                     	;# 
  1890  0196                     	;# 
  1891  0197                     	;# 
  1892  0199                     	;# 
  1893  019A                     	;# 
  1894  019B                     	;# 
  1895  019B                     	;# 
  1896  019B                     	;# 
  1897  019B                     	;# 
  1898  019C                     	;# 
  1899  019C                     	;# 
  1900  019D                     	;# 
  1901  019E                     	;# 
  1902  019F                     	;# 
  1903  020D                     	;# 
  1904  0210                     	;# 
  1905  0211                     	;# 
  1906  0211                     	;# 
  1907  0212                     	;# 
  1908  0212                     	;# 
  1909  0213                     	;# 
  1910  0213                     	;# 
  1911  0214                     	;# 
  1912  0214                     	;# 
  1913  0215                     	;# 
  1914  0215                     	;# 
  1915  0215                     	;# 
  1916  0216                     	;# 
  1917  0216                     	;# 
  1918  0217                     	;# 
  1919  0217                     	;# 
  1920  0291                     	;# 
  1921  0291                     	;# 
  1922  0292                     	;# 
  1923  0293                     	;# 
  1924  0298                     	;# 
  1925  0298                     	;# 
  1926  0299                     	;# 
  1927  029A                     	;# 
  1928  0394                     	;# 
  1929  0395                     	;# 
  1930  0396                     	;# 
  1931  0FE4                     	;# 
  1932  0FE5                     	;# 
  1933  0FE6                     	;# 
  1934  0FE7                     	;# 
  1935  0FE8                     	;# 
  1936  0FE9                     	;# 
  1937  0FEA                     	;# 
  1938  0FEB                     	;# 
  1939  0FED                     	;# 
  1940  0FEE                     	;# 
  1941  0FEF                     	;# 
  1942                           
  1943                           	psect	idataBANK3
  1944  27BE                     __pidataBANK3:	
  1945                           
  1946                           ;initializer for _VarProduct
  1947  27BE  3463               	retlw	99
  1948  27BF  3402               	retlw	2
  1949  27C0  3400               	retlw	0
  1950  27C1  3400               	retlw	0
  1951  27C2  3400               	retlw	0
  1952  27C3  3400               	retlw	0
  1953  27C4  3400               	retlw	0
  1954  27C5  3400               	retlw	0
  1955  27C6  3400               	retlw	0
  1956  27C7  3400               	retlw	0
  1957  27C8  3400               	retlw	0
  1958  27C9  3400               	retlw	0
  1959  27CA  34FF               	retlw	255
  1960  27CB  34FF               	retlw	255
  1961  27CC  34FF               	retlw	255
  1962  27CD  3400               	retlw	0
  1963  27CE  3400               	retlw	0
  1964  27CF  3400               	retlw	0
  1965  27D0  3400               	retlw	0
  1966  27D1  3400               	retlw	0
  1967  27D2  3402               	retlw	2
  1968  27D3  3400               	retlw	0
  1969  27D4  3400               	retlw	0
  1970  27D5  3400               	retlw	0
  1971  27D6  3400               	retlw	0
  1972  27D7  3400               	retlw	0
  1973  27D8  3400               	retlw	0
  1974  27D9  3400               	retlw	0
  1975  27DA  3400               	retlw	0
  1976  27DB  3400               	retlw	0
  1977  27DC  3400               	retlw	0
  1978  27DD  3400               	retlw	0
  1979                           
  1980                           	psect	stringtext
  1981  1800                     __pstringtext:	
  1982  1800                     _CC2500_registers_address:	
  1983  1800  3403               	retlw	3
  1984  1801  3416               	retlw	22
  1985  1802  3417               	retlw	23
  1986  1803  341E               	retlw	30
  1987  1804  341F               	retlw	31
  1988  1805  3420               	retlw	32
  1989  1806  342A               	retlw	42
  1990  1807  342B               	retlw	43
  1991  1808  340B               	retlw	11
  1992  1809  340C               	retlw	12
  1993  180A  340D               	retlw	13
  1994  180B  340E               	retlw	14
  1995  180C  340F               	retlw	15
  1996  180D  3410               	retlw	16
  1997  180E  3411               	retlw	17
  1998  180F  3412               	retlw	18
  1999  1810  3413               	retlw	19
  2000  1811  3414               	retlw	20
  2001  1812  340A               	retlw	10
  2002  1813  3415               	retlw	21
  2003  1814  3421               	retlw	33
  2004  1815  3422               	retlw	34
  2005  1816  3418               	retlw	24
  2006  1817  3419               	retlw	25
  2007  1818  341A               	retlw	26
  2008  1819  341B               	retlw	27
  2009  181A  341C               	retlw	28
  2010  181B  341D               	retlw	29
  2011  181C  3423               	retlw	35
  2012  181D  3424               	retlw	36
  2013  181E  3425               	retlw	37
  2014  181F  3426               	retlw	38
  2015  1820  3429               	retlw	41
  2016  1821  342C               	retlw	44
  2017  1822  342D               	retlw	45
  2018  1823  342E               	retlw	46
  2019  1824  3400               	retlw	0
  2020  1825  3401               	retlw	1
  2021  1826  3402               	retlw	2
  2022  1827  3407               	retlw	7
  2023  1828  3408               	retlw	8
  2024  1829  3409               	retlw	9
  2025  182A  3406               	retlw	6
  2026  182B  3404               	retlw	4
  2027  182C  3405               	retlw	5
  2028  182D  3427               	retlw	39
  2029  182E  3428               	retlw	40
  2030  182F                     __end_of_CC2500_registers_address:	
  2031  182F                     _CC2500_rfSettings:	
  2032  182F  3407               	retlw	7
  2033  1830  3407               	retlw	7
  2034  1831  3430               	retlw	48
  2035  1832  3487               	retlw	135
  2036  1833  346B               	retlw	107
  2037  1834  34F8               	retlw	248
  2038  1835  347F               	retlw	127
  2039  1836  343F               	retlw	63
  2040  1837  3409               	retlw	9
  2041  1838  3400               	retlw	0
  2042  1839  345C               	retlw	92
  2043  183A  34A7               	retlw	167
  2044  183B  3462               	retlw	98
  2045  183C  3486               	retlw	134
  2046  183D  3483               	retlw	131
  2047  183E  3403               	retlw	3
  2048  183F  3422               	retlw	34
  2049  1840  34F8               	retlw	248
  2050  1841  3400               	retlw	0
  2051  1842  3444               	retlw	68
  2052  1843  34B6               	retlw	182
  2053  1844  3410               	retlw	16
  2054  1845  3418               	retlw	24
  2055  1846  341D               	retlw	29
  2056  1847  341C               	retlw	28
  2057  1848  34C7               	retlw	199
  2058  1849  3400               	retlw	0
  2059  184A  34B2               	retlw	178
  2060  184B  34EA               	retlw	234
  2061  184C  340A               	retlw	10
  2062  184D  3400               	retlw	0
  2063  184E  3411               	retlw	17
  2064  184F  3459               	retlw	89
  2065  1850  3488               	retlw	136
  2066  1851  3431               	retlw	49
  2067  1852  340B               	retlw	11
  2068  1853  342F               	retlw	47
  2069  1854  342E               	retlw	46
  2070  1855  3406               	retlw	6
  2071  1856  3404               	retlw	4
  2072  1857  3405               	retlw	5
  2073  1858  3400               	retlw	0
  2074  1859  3430               	retlw	48
  2075  185A  34D3               	retlw	211
  2076  185B  3491               	retlw	145
  2077  185C  3441               	retlw	65
  2078  185D  3400               	retlw	0
  2079  185E                     __end_of_CC2500_rfSettings:	
  2080  185E                     _CC2500_patable_vaule:	
  2081  185E  34FE               	retlw	254
  2082  185F  34FE               	retlw	254
  2083  1860  34FE               	retlw	254
  2084  1861  34FE               	retlw	254
  2085  1862  34FE               	retlw	254
  2086  1863  34FE               	retlw	254
  2087  1864  34FE               	retlw	254
  2088  1865  34FE               	retlw	254
  2089  1866                     __end_of_CC2500_patable_vaule:	
  2090                           
  2091                           	psect	nvBANK0
  2092  006F                     __pnvBANK0:	
  2093  006F                     _Product:	
  2094  006F                     	ds	1
  2095                           
  2096                           	psect	nvBANK1
  2097  00E8                     __pnvBANK1:	
  2098  00E8                     _Memory:	
  2099  00E8                     	ds	1
  2100  00E9                     _TMain:	
  2101  00E9                     	ds	1
  2102  00EA                     _Timer0:	
  2103  00EA                     	ds	1
  2104  000C                     _PORTA	set	12
  2105  000D                     _PORTB	set	13
  2106  000E                     _PORTC	set	14
  2107  0015                     _TMR0	set	21
  2108  005F                     _GIE	set	95
  2109  005C                     _INTE	set	92
  2110  0059                     _INTF	set	89
  2111  005B                     _IOCIE	set	91
  2112  0058                     _IOCIF	set	88
  2113  005E                     _PEIE	set	94
  2114  0060                     _RA0	set	96
  2115  0063                     _RA3	set	99
  2116  0064                     _RA4	set	100
  2117  0066                     _RA6	set	102
  2118  0067                     _RA7	set	103
  2119  0068                     _RB0	set	104
  2120  0069                     _RB1	set	105
  2121  006A                     _RB2	set	106
  2122  006B                     _RB3	set	107
  2123  006C                     _RB4	set	108
  2124  006D                     _RB5	set	109
  2125  0070                     _RC0	set	112
  2126  0071                     _RC1	set	113
  2127  0072                     _RC2	set	114
  2128  0074                     _RC4	set	116
  2129  0075                     _RC5	set	117
  2130  0077                     _RC7	set	119
  2131  005D                     _TMR0IE	set	93
  2132  005A                     _TMR0IF	set	90
  2133  009D                     _ADCON0	set	157
  2134  009E                     _ADCON1	set	158
  2135  009C                     _ADRESH	set	156
  2136  009B                     _ADRESL	set	155
  2137  0095                     _OPTION_REG	set	149
  2138  0099                     _OSCCON	set	153
  2139  008C                     _TRISA	set	140
  2140  008D                     _TRISB	set	141
  2141  008E                     _TRISC	set	142
  2142  04E9                     _GO_nDONE	set	1257
  2143  0117                     _FVRCON	set	279
  2144  010C                     _LATA	set	268
  2145  010D                     _LATB	set	269
  2146  010E                     _LATC	set	270
  2147  018C                     _ANSELA	set	396
  2148  018D                     _ANSELB	set	397
  2149  018E                     _ANSELC	set	398
  2150  0192                     _PMADRH	set	402
  2151  0191                     _PMADRL	set	401
  2152  0196                     _PMCON2	set	406
  2153  0194                     _PMDATH	set	404
  2154  0193                     _PMDATL	set	403
  2155  0CAE                     _CFGS	set	3246
  2156  0CAC                     _FREE	set	3244
  2157  0CAD                     _LWLO	set	3245
  2158  0CA8                     _RD	set	3240
  2159  0CA9                     _WR	set	3241
  2160  0CAA                     _WREN	set	3242
  2161  1068                     _WPUB0	set	4200
  2162  1069                     _WPUB1	set	4201
  2163  106A                     _WPUB2	set	4202
  2164  0396                     _IOCBF	set	918
  2165  0395                     _IOCBN	set	917
  2166  0394                     _IOCBP	set	916
  2167  1CB2                     _IOCBF2	set	7346
  2168                           
  2169                           ; #config settings
  2170  0000                     
  2171                           	psect	cinit
  2172  0018                     start_initialization:	
  2173  0018                     __initialization:	
  2174                           
  2175                           ; Clear objects allocated to BITCOMMON
  2176  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2177                           
  2178                           ; Clear objects allocated to COMMON
  2179  0019  01F8               	clrf	__pbssCOMMON& (0+127)
  2180  001A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2181  001B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2182  001C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2183  001D  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2184  001E  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  2185                           
  2186                           ; Clear objects allocated to BANK0
  2187  001F  01EC               	clrf	__pbssBANK0& (0+127)
  2188  0020  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2189  0021  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2190                           
  2191                           ; Clear objects allocated to BANK1
  2192  0022  30A0               	movlw	low __pbssBANK1
  2193  0023  0084               	movwf	4
  2194  0024  3000               	movlw	high __pbssBANK1
  2195  0025  0085               	movwf	5
  2196  0026  3048               	movlw	72
  2197  0027  31A3  23CF  3180   	fcall	clear_ram0
  2198                           
  2199                           ; Clear objects allocated to BANK2
  2200  002A  3020               	movlw	low __pbssBANK2
  2201  002B  0084               	movwf	4
  2202  002C  3001               	movlw	high __pbssBANK2
  2203  002D  0085               	movwf	5
  2204  002E  304E               	movlw	78
  2205  002F  31A3  23CF  3180   	fcall	clear_ram0
  2206                           
  2207                           ; Clear objects allocated to BANK3
  2208  0032  30C0               	movlw	low __pbssBANK3
  2209  0033  0084               	movwf	4
  2210  0034  3001               	movlw	high __pbssBANK3
  2211  0035  0085               	movwf	5
  2212  0036  3010               	movlw	16
  2213  0037  31A3  23CF  3180   	fcall	clear_ram0
  2214                           
  2215                           ; Clear objects allocated to BANK4
  2216  003A  3020               	movlw	low __pbssBANK4
  2217  003B  0084               	movwf	4
  2218  003C  3002               	movlw	high __pbssBANK4
  2219  003D  0085               	movwf	5
  2220  003E  3025               	movlw	37
  2221  003F  31A3  23CF  3180   	fcall	clear_ram0
  2222                           
  2223                           ; Clear objects allocated to BANK5
  2224  0042  30A0               	movlw	low __pbssBANK5
  2225  0043  0084               	movwf	4
  2226  0044  3002               	movlw	high __pbssBANK5
  2227  0045  0085               	movwf	5
  2228  0046  3047               	movlw	71
  2229  0047  31A3  23CF  3180   	fcall	clear_ram0
  2230                           
  2231                           ; Initialize objects allocated to BANK3
  2232  004A  30BE               	movlw	low __pidataBANK3
  2233  004B  0084               	movwf	4
  2234  004C  30A7               	movlw	(high __pidataBANK3)| (0+128)
  2235  004D  0085               	movwf	5
  2236  004E  30A0               	movlw	low __pdataBANK3
  2237  004F  0086               	movwf	6
  2238  0050  3001               	movlw	high __pdataBANK3
  2239  0051  0087               	movwf	7
  2240  0052  3020               	movlw	32
  2241  0053  31A3  23C9         	fcall	init_ram
  2242  0055                     end_of_initialization:	
  2243                           ;End of C runtime variable initialization code
  2244                           
  2245  0055                     __end_of__initialization:	
  2246  0055  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2247  0056  0020               	movlb	0
  2248  0057  3192  2AE7         	ljmp	_main	;jump to C main() function
  2249                           
  2250                           	psect	bitbssCOMMON
  2251  0380                     __pbitbssCOMMON:	
  2252  0380                     _CC2500_Enable:	
  2253  0380                     	ds	1
  2254  0381                     _Receive_GO:	
  2255  0381                     	ds	1
  2256  0382                     _Receive_OK:	
  2257  0382                     	ds	1
  2258  0383                     _RxStatus:	
  2259  0383                     	ds	1
  2260  0384                     _Transceive_GO:	
  2261  0384                     	ds	1
  2262  0385                     _Transceive_OK:	
  2263  0385                     	ds	1
  2264  0386                     _TxStatus:	
  2265  0386                     	ds	1
  2266                           
  2267                           	psect	bssCOMMON
  2268  0078                     __pbssCOMMON:	
  2269  0078                     _Buz:	
  2270  0078                     	ds	1
  2271  0079                     _DimmerLights11:	
  2272  0079                     	ds	1
  2273  007A                     _DimmerLights22:	
  2274  007A                     	ds	1
  2275  007B                     _PF:	
  2276  007B                     	ds	1
  2277  007C                     _RF:	
  2278  007C                     	ds	1
  2279  007D                     _Temp:	
  2280  007D                     	ds	1
  2281                           
  2282                           	psect	bssBANK0
  2283  006C                     __pbssBANK0:	
  2284  006C                     _DimmerLights:	
  2285  006C                     	ds	1
  2286  006D                     _Sw:	
  2287  006D                     	ds	1
  2288  006E                     _Load:	
  2289  006E                     	ds	1
  2290                           
  2291                           	psect	bssBANK1
  2292  00A0                     __pbssBANK1:	
  2293  00A0                     _RF_Data:	
  2294  00A0                     	ds	21
  2295  00B5                     _RF_Count:	
  2296  00B5                     	ds	2
  2297  00B7                     _CRC:	
  2298  00B7                     	ds	1
  2299  00B8                     _DelayOff:	
  2300  00B8                     	ds	1
  2301  00B9                     _Dimmer:	
  2302  00B9                     	ds	1
  2303  00BA                     _DimmerLightsIntr:	
  2304  00BA                     	ds	1
  2305  00BB                     _LED:	
  2306  00BB                     	ds	1
  2307  00BC                     _RFSW:	
  2308  00BC                     	ds	1
  2309  00BD                     _RSSI:	
  2310  00BD                     	ds	1
  2311  00BE                     _Rx_Length:	
  2312  00BE                     	ds	1
  2313  00BF                     _SPI0Buffer:	
  2314  00BF                     	ds	1
  2315  00C0                     _Tx_Length:	
  2316  00C0                     	ds	1
  2317  00C1                     _r_address:	
  2318  00C1                     	ds	1
  2319  00C2                     _r_data:	
  2320  00C2                     	ds	1
  2321  00C3                     _s_data:	
  2322  00C3                     	ds	1
  2323  00C4                     _VarTimer0:	
  2324  00C4                     	ds	7
  2325  00CB                     _DlySw1:	
  2326  00CB                     	ds	5
  2327  00D0                     _DlySw2:	
  2328  00D0                     	ds	5
  2329  00D5                     _VarErrLED:	
  2330  00D5                     	ds	4
  2331  00D9                     _VarLED1:	
  2332  00D9                     	ds	4
  2333  00DD                     _VarLED2:	
  2334  00DD                     	ds	4
  2335  00E1                     _Dimmer1:	
  2336  00E1                     	ds	3
  2337  00E4                     _RF1:	
  2338  00E4                     	ds	2
  2339  00E6                     _RFSW1:	
  2340  00E6                     	ds	1
  2341  00E7                     _RFSW2:	
  2342  00E7                     	ds	1
  2343                           
  2344                           	psect	bssBANK2
  2345  0120                     __pbssBANK2:	
  2346  0120                     _Temp1:	
  2347  0120                     	ds	14
  2348  012E                     _DimmerLights1:	
  2349  012E                     	ds	13
  2350  013B                     _DimmerLights2:	
  2351  013B                     	ds	13
  2352  0148                     _Buz1:	
  2353  0148                     	ds	12
  2354  0154                     _Sw1:	
  2355  0154                     	ds	9
  2356  015D                     _Sw2:	
  2357  015D                     	ds	9
  2358  0166                     _PF1:	
  2359  0166                     	ds	8
  2360                           
  2361                           	psect	bssBANK3
  2362  01C0                     __pbssBANK3:	
  2363  01C0                     _VarTMain:	
  2364  01C0                     	ds	16
  2365                           
  2366                           	psect	dataBANK3
  2367  01A0                     __pdataBANK3:	
  2368  01A0                     _VarProduct:	
  2369  01A0                     	ds	32
  2370                           
  2371                           	psect	bssBANK4
  2372  0220                     __pbssBANK4:	
  2373  0220                     _VarMemory:	
  2374  0220                     	ds	37
  2375                           
  2376                           	psect	bssBANK5
  2377  02A0                     __pbssBANK5:	
  2378  02A0                     _Load1:	
  2379  02A0                     	ds	71
  2380                           
  2381                           	psect	clrtext
  2382  23CF                     clear_ram0:	
  2383                           ;	Called with FSR0 containing the base address, and
  2384                           ;	WREG with the size to clear
  2385                           
  2386  23CF  0064               	clrwdt	;clear the watchdog before getting into this loop
  2387  23D0                     clrloop0:	
  2388  23D0  0180               	clrf	0	;clear RAM location pointed to by FSR
  2389  23D1  3101               	addfsr 0,1
  2390  23D2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2391  23D3  2BD0               	goto	clrloop0	;have we reached the end yet?
  2392  23D4  3400               	retlw	0	;all done for this memory range, return
  2393                           
  2394                           	psect	inittext
  2395  23C9                     init_ram:	
  2396  23C9  00FE               	movwf	126
  2397  23CA                     initloop:	
  2398  23CA  0012               	moviw fsr0++
  2399  23CB  001E               	movwi fsr1++
  2400  23CC  0BFE               	decfsz	126,f
  2401  23CD  2BCA               	goto	initloop
  2402  23CE  3400               	retlw	0
  2403                           
  2404                           	psect	cstackCOMMON
  2405  0071                     __pcstackCOMMON:	
  2406  0071                     ?_CC2500_WriteByte:	
  2407  0071                     ?_CC2500_WriteCommand:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0071                     ?_CC2500_ReadStatus:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0071                     ?_CC2500_ReadByte:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0071                     ?_CC2500_PowerRST:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0071                     ?_CC2500_InitSetREG:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0071                     ?_CC2500_InitPATable:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0071                     ?_CC2500_ClearTXFIFO:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0071                     ?_CC2500_ClearRXFIFO:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0071                     ?_CC2500_FrequencyCabr:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0071                     ?_CC2500_SIDLEMode:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0071                     ?_DlyOff_Initialization:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0071                     ?_DlyOff_Main:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0071                     ?_setTxData:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0071                     ?_setDimmerLights_Initialization:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0071                     ?_Dimmer_Initialization:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0071                     ?_setLoad_GO:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0071                     ?_setDimmerLights_Main:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0071                     ?_setDimmerLights_ERROR:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0071                     ?_setLoad_Count:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0071                     ?_setLED_Initialization:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0071                     ?_setLED_Main:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0071                     ?_MainT_Initialization:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0071                     ?_Mcu_Initialization:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0071                     ?_Flash_Memory_Initialization:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0071                     ?_Temp_Initialization:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0071                     ?_Load_Initialization:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0071                     ?_PowerFault_Initialization:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0071                     ?_Switch_Initialization:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0071                     ?_RF_Initialization:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0071                     ?_getLoad_AD:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0071                     ?_getTemp_AD:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0071                     ?_getPowerFault_AD:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0071                     ?_MainT:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0071                     ?_Flash_Memory_Main:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0071                     ?_Temp_Main:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0071                     ?_Load_Main:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0071                     ?_PowerFault_Main:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0071                     ?_Switch_Main:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0071                     ?_RF_Main:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0071                     ?_setTemp_Enable:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0071                     ?_setLoad_Enable:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0071                     ?_setSw_Enable:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0071                     ?_IO_Set:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0071                     ?_TMR0_Set:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0071                     ?_ADC_Set:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0071                     ?_INT_Set:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0071                     ?_IOC_Set:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0071                     ?_IOC_ISR:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0071                     ??_IOC_ISR:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0071                     ?_TMR0_ISR:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0071                     ?_INT_ISR:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0071                     ?_Flash_Memory_Write:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0071                     ?_Flash_Memory_Modify:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0071                     ?_setLoad_AH_AL_Restore:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0071                     ?_setLoad_Exceptions:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0071                     ?_setTemp_Initialization:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0071                     ?_setTemp_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0071                     ?_setOverTemp_Exceptions:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0071                     ?_setPowerFault_Initialization:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0071                     ?_setPowerFault_Main:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0071                     ?_setPowerFault_Exceptions:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0071                     ?_setRF_Initialization:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0071                     ?_setRF_Main:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0071                     ?_getRxData:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0071                     ?_RF_RxDisable:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0071                     ?_setLog_Code:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0071                     ?_setControl_Lights_Table:	
  2606                           ; 0 bytes @ 0x0
  2607                           
  2608  0071                     ?_setRFSW_Control:	
  2609                           ; 0 bytes @ 0x0
  2610                           
  2611  0071                     ?_setRFSW_AdjControl:	
  2612                           ; 0 bytes @ 0x0
  2613                           
  2614  0071                     ?_setRF_DimmerValue:	
  2615                           ; 0 bytes @ 0x0
  2616                           
  2617  0071                     ?_setSw_Initialization:	
  2618                           ; 0 bytes @ 0x0
  2619                           
  2620  0071                     ?_setSw_Main:	
  2621                           ; 0 bytes @ 0x0
  2622                           
  2623  0071                     ?_Sw_DimmerOnFunc:	
  2624                           ; 0 bytes @ 0x0
  2625                           
  2626  0071                     ?_Sw_DimmerAdjFunc:	
  2627                           ; 0 bytes @ 0x0
  2628                           
  2629  0071                     ?_Sw_DimmerOffFunc:	
  2630                           ; 0 bytes @ 0x0
  2631                           
  2632  0071                     ?_Buzzer_Initialization:	
  2633                           ; 0 bytes @ 0x0
  2634                           
  2635  0071                     ?_Buzzer_Main:	
  2636                           ; 0 bytes @ 0x0
  2637                           
  2638  0071                     ?_CC2500_TxData:	
  2639                           ; 0 bytes @ 0x0
  2640                           
  2641  0071                     ?_CC2500_RxData:	
  2642                           ; 0 bytes @ 0x0
  2643                           
  2644  0071                     ?_CC2500_PowerOnInitial:	
  2645                           ; 0 bytes @ 0x0
  2646                           
  2647  0071                     ?_DelayOffPointSelect:	
  2648                           ; 0 bytes @ 0x0
  2649                           
  2650  0071                     ?_DelayOff_Initialization:	
  2651                           ; 0 bytes @ 0x0
  2652                           
  2653  0071                     ?_DelayOff_Main:	
  2654                           ; 0 bytes @ 0x0
  2655                           
  2656  0071                     ?_DimmerLightsPointSelect:	
  2657                           ; 0 bytes @ 0x0
  2658                           
  2659  0071                     ?_DimmerLights_Initialization:	
  2660                           ; 0 bytes @ 0x0
  2661                           
  2662  0071                     ?_DimmerLights_Close:	
  2663                           ; 0 bytes @ 0x0
  2664                           
  2665  0071                     ?_DimmerLights_Main:	
  2666                           ; 0 bytes @ 0x0
  2667                           
  2668  0071                     ?_DimmerLights_Exceptions:	
  2669                           ; 0 bytes @ 0x0
  2670                           
  2671  0071                     ?_setDimmerLights_AdjRF:	
  2672                           ; 0 bytes @ 0x0
  2673                           
  2674  0071                     ?_LedPointSelect:	
  2675                           ; 0 bytes @ 0x0
  2676                           
  2677  0071                     ?_LED_Initialization:	
  2678                           ; 0 bytes @ 0x0
  2679                           
  2680  0071                     ?_LED_Main:	
  2681                           ; 0 bytes @ 0x0
  2682                           
  2683  0071                     ?_main:	
  2684                           ; 0 bytes @ 0x0
  2685                           
  2686  0071                     ?_ISR:	
  2687                           ; 0 bytes @ 0x0
  2688                           
  2689  0071                     ?_setDimmerReClock:	
  2690                           ; 0 bytes @ 0x0
  2691                           
  2692  0071                     ??_setDimmerReClock:	
  2693                           ; 0 bytes @ 0x0
  2694                           
  2695  0071                     ?_setINT_GO:	
  2696                           ; 0 bytes @ 0x0
  2697                           
  2698  0071                     ?_Flash_Memory_Unlock:	
  2699                           ; 0 bytes @ 0x0
  2700                           
  2701  0071                     ?_Flash_Memory_Erasing:	
  2702                           ; 0 bytes @ 0x0
  2703                           
  2704  0071                     ?_RfPointSelect:	
  2705                           ; 0 bytes @ 0x0
  2706                           
  2707  0071                     ?_RfSWPointSelect:	
  2708                           ; 0 bytes @ 0x0
  2709                           
  2710  0071                     ?_TouchPower:	
  2711                           ; 0 bytes @ 0x0
  2712                           
  2713  0071                     ?_SwPointSelect:	
  2714                           ; 0 bytes @ 0x0
  2715                           
  2716  0071                     ?i1_setLoad_StatusOff:	
  2717                           ; 0 bytes @ 0x0
  2718                           
  2719  0071                     ?i1_RfPointSelect:	
  2720                           ; 0 bytes @ 0x0
  2721                           
  2722  0071                     ??i1_RfPointSelect:	
  2723                           ; 0 bytes @ 0x0
  2724                           
  2725  0071                     ?_DelayTimejudge:	
  2726                           ; 0 bytes @ 0x0
  2727                           
  2728  0071                     ?_getDimmerLights_StatusFlag:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0071                     ?_getPercentValue:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0071                     ?_Flash_Memory_Read:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0071                     ?_getTemp_Safe:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0071                     ?_getPF_Safe:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0071                     ?_setPercentValue:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0071                     ?_getLoad_Safe:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0071                     setRF_Initialization@rf:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0071                     i1setLoad_StatusOff@command:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755                           
  2756                           ; 1 bytes @ 0x0
  2757  0071                     	ds	1
  2758  0072                     ??i1_setLoad_StatusOff:	
  2759  0072                     i1setLoad_StatusOff@lights:	
  2760                           ; 0 bytes @ 0x1
  2761                           
  2762  0072                     i1RfPointSelect@rf:	
  2763                           ; 1 bytes @ 0x1
  2764                           
  2765                           
  2766                           ; 1 bytes @ 0x1
  2767  0072                     	ds	1
  2768  0073                     ??_TMR0_ISR:	
  2769  0073                     ?_setRF_ReceiveGO:	
  2770                           ; 0 bytes @ 0x2
  2771                           
  2772  0073                     setRF_ReceiveGO@command:	
  2773                           ; 0 bytes @ 0x2
  2774                           
  2775                           
  2776                           ; 1 bytes @ 0x2
  2777  0073                     	ds	1
  2778  0074                     ??_setRF_ReceiveGO:	
  2779  0074                     setRF_ReceiveGO@rf:	
  2780                           ; 0 bytes @ 0x3
  2781                           
  2782                           
  2783                           ; 1 bytes @ 0x3
  2784  0074                     	ds	1
  2785  0075                     ??_INT_ISR:	
  2786                           
  2787                           ; 0 bytes @ 0x4
  2788  0075                     	ds	2
  2789  0077                     ??_ISR:	
  2790                           
  2791                           ; 0 bytes @ 0x6
  2792  0077                     	ds	1
  2793                           
  2794                           	psect	cstackBANK0
  2795  0020                     __pcstackBANK0:	
  2796  0020                     ??_CC2500_WriteByte:	
  2797  0020                     ??_CC2500_ReadByte:	
  2798                           ; 0 bytes @ 0x0
  2799                           
  2800  0020                     ?_DelayTime_1us:	
  2801                           ; 0 bytes @ 0x0
  2802                           
  2803  0020                     ??_DelayTimejudge:	
  2804                           ; 0 bytes @ 0x0
  2805                           
  2806  0020                     ??_Dimmer_Initialization:	
  2807                           ; 0 bytes @ 0x0
  2808                           
  2809  0020                     ??_getDimmerLights_StatusFlag:	
  2810                           ; 0 bytes @ 0x0
  2811                           
  2812  0020                     ??_setLoad_GO:	
  2813                           ; 0 bytes @ 0x0
  2814                           
  2815  0020                     ?_setLoad_StatusOff:	
  2816                           ; 0 bytes @ 0x0
  2817                           
  2818  0020                     ??_setLoad_Count:	
  2819                           ; 0 bytes @ 0x0
  2820                           
  2821  0020                     ?_setLoad_StatusOn:	
  2822                           ; 0 bytes @ 0x0
  2823                           
  2824  0020                     ??_MainT_Initialization:	
  2825                           ; 0 bytes @ 0x0
  2826                           
  2827  0020                     ??_setTemp_Enable:	
  2828                           ; 0 bytes @ 0x0
  2829                           
  2830  0020                     ??_setLoad_Enable:	
  2831                           ; 0 bytes @ 0x0
  2832                           
  2833  0020                     ??_IO_Set:	
  2834                           ; 0 bytes @ 0x0
  2835                           
  2836  0020                     ??_TMR0_Set:	
  2837                           ; 0 bytes @ 0x0
  2838                           
  2839  0020                     ??_ADC_Set:	
  2840                           ; 0 bytes @ 0x0
  2841                           
  2842  0020                     ??_INT_Set:	
  2843                           ; 0 bytes @ 0x0
  2844                           
  2845  0020                     ??_IOC_Set:	
  2846                           ; 0 bytes @ 0x0
  2847                           
  2848  0020                     ??_Flash_Memory_Read:	
  2849                           ; 0 bytes @ 0x0
  2850                           
  2851  0020                     ??_Flash_Memory_Write:	
  2852                           ; 0 bytes @ 0x0
  2853                           
  2854  0020                     ??_setLoad_AH_AL_Restore:	
  2855                           ; 0 bytes @ 0x0
  2856                           
  2857  0020                     ??_getTemp_Safe:	
  2858                           ; 0 bytes @ 0x0
  2859                           
  2860  0020                     ??_getPF_Safe:	
  2861                           ; 0 bytes @ 0x0
  2862                           
  2863  0020                     ??_setTemp_Initialization:	
  2864                           ; 0 bytes @ 0x0
  2865                           
  2866  0020                     ??_setPowerFault_Initialization:	
  2867                           ; 0 bytes @ 0x0
  2868                           
  2869  0020                     ??_setRF_Initialization:	
  2870                           ; 0 bytes @ 0x0
  2871                           
  2872  0020                     ??_Buzzer_Initialization:	
  2873                           ; 0 bytes @ 0x0
  2874                           
  2875  0020                     ??_Buzzer_Main:	
  2876                           ; 0 bytes @ 0x0
  2877                           
  2878  0020                     ??_DelayOffPointSelect:	
  2879                           ; 0 bytes @ 0x0
  2880                           
  2881  0020                     ??_DimmerLightsPointSelect:	
  2882                           ; 0 bytes @ 0x0
  2883                           
  2884  0020                     ??_LedPointSelect:	
  2885                           ; 0 bytes @ 0x0
  2886                           
  2887  0020                     ??_setINT_GO:	
  2888                           ; 0 bytes @ 0x0
  2889                           
  2890  0020                     ??_Flash_Memory_Unlock:	
  2891                           ; 0 bytes @ 0x0
  2892                           
  2893  0020                     ??_Flash_Memory_Erasing:	
  2894                           ; 0 bytes @ 0x0
  2895                           
  2896  0020                     ??_getLoad_Safe:	
  2897                           ; 0 bytes @ 0x0
  2898                           
  2899  0020                     ??_RfPointSelect:	
  2900                           ; 0 bytes @ 0x0
  2901                           
  2902  0020                     ??_RfSWPointSelect:	
  2903                           ; 0 bytes @ 0x0
  2904                           
  2905  0020                     ??_TouchPower:	
  2906                           ; 0 bytes @ 0x0
  2907                           
  2908  0020                     ??_SwPointSelect:	
  2909                           ; 0 bytes @ 0x0
  2910                           
  2911  0020                     ?_getAD:	
  2912                           ; 0 bytes @ 0x0
  2913                           
  2914  0020                     ?___wmul:	
  2915                           ; 2 bytes @ 0x0
  2916                           
  2917  0020                     ?___lwdiv:	
  2918                           ; 2 bytes @ 0x0
  2919                           
  2920  0020                     ?___ftpack:	
  2921                           ; 2 bytes @ 0x0
  2922                           
  2923  0020                     setINT_GO@command:	
  2924                           ; 3 bytes @ 0x0
  2925                           
  2926  0020                     getAD@adcon1:	
  2927                           ; 1 bytes @ 0x0
  2928                           
  2929  0020                     setLoad_Enable@command:	
  2930                           ; 1 bytes @ 0x0
  2931                           
  2932  0020                     setLoad_GO@command:	
  2933                           ; 1 bytes @ 0x0
  2934                           
  2935  0020                     setLoad_StatusOn@command:	
  2936                           ; 1 bytes @ 0x0
  2937                           
  2938  0020                     setLoad_StatusOff@command:	
  2939                           ; 1 bytes @ 0x0
  2940                           
  2941  0020                     setTemp_Enable@command:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  0020                     DelayTime_1us@count:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  0020                     ___wmul@multiplier:	
  2948                           ; 2 bytes @ 0x0
  2949                           
  2950  0020                     ___lwdiv@divisor:	
  2951                           ; 2 bytes @ 0x0
  2952                           
  2953  0020                     ___ftpack@arg:	
  2954                           ; 2 bytes @ 0x0
  2955                           
  2956                           
  2957                           ; 3 bytes @ 0x0
  2958  0020                     	ds	1
  2959  0021                     ??_setLoad_StatusOff:	
  2960  0021                     ??_setLoad_StatusOn:	
  2961                           ; 0 bytes @ 0x1
  2962                           
  2963  0021                     ??_Mcu_Initialization:	
  2964                           ; 0 bytes @ 0x1
  2965                           
  2966  0021                     ??_Temp_Initialization:	
  2967                           ; 0 bytes @ 0x1
  2968                           
  2969  0021                     ??_PowerFault_Initialization:	
  2970                           ; 0 bytes @ 0x1
  2971                           
  2972  0021                     ??_RF_Initialization:	
  2973                           ; 0 bytes @ 0x1
  2974                           
  2975  0021                     CC2500_WriteByte@loop_a:	
  2976                           ; 0 bytes @ 0x1
  2977                           
  2978  0021                     CC2500_ReadByte@loop_b:	
  2979                           ; 1 bytes @ 0x1
  2980                           
  2981  0021                     DelayOffPointSelect@sw:	
  2982                           ; 1 bytes @ 0x1
  2983                           
  2984  0021                     DelayTimejudge@i:	
  2985                           ; 1 bytes @ 0x1
  2986                           
  2987  0021                     DimmerLightsPointSelect@lights:	
  2988                           ; 1 bytes @ 0x1
  2989                           
  2990  0021                     getDimmerLights_StatusFlag@Status:	
  2991                           ; 1 bytes @ 0x1
  2992                           
  2993  0021                     LedPointSelect@led:	
  2994                           ; 1 bytes @ 0x1
  2995                           
  2996  0021                     Flash_Memory_Read@i:	
  2997                           ; 1 bytes @ 0x1
  2998                           
  2999  0021                     Flash_Memory_Write@i:	
  3000                           ; 1 bytes @ 0x1
  3001                           
  3002  0021                     setLoad_Count@command:	
  3003                           ; 1 bytes @ 0x1
  3004                           
  3005  0021                     setLoad_StatusOn@lights:	
  3006                           ; 1 bytes @ 0x1
  3007                           
  3008  0021                     setLoad_StatusOff@lights:	
  3009                           ; 1 bytes @ 0x1
  3010                           
  3011  0021                     setLoad_AH_AL_Restore@i:	
  3012                           ; 1 bytes @ 0x1
  3013                           
  3014  0021                     RfPointSelect@rf:	
  3015                           ; 1 bytes @ 0x1
  3016                           
  3017  0021                     RfSWPointSelect@sw:	
  3018                           ; 1 bytes @ 0x1
  3019                           
  3020  0021                     SwPointSelect@sw:	
  3021                           ; 1 bytes @ 0x1
  3022                           
  3023                           
  3024                           ; 1 bytes @ 0x1
  3025  0021                     	ds	1
  3026  0022                     ??_CC2500_WriteCommand:	
  3027  0022                     ??_CC2500_ReadStatus:	
  3028                           ; 0 bytes @ 0x2
  3029                           
  3030  0022                     ?_setRF_RxStatus:	
  3031                           ; 0 bytes @ 0x2
  3032                           
  3033  0022                     ??_DelayTime_1us:	
  3034                           ; 0 bytes @ 0x2
  3035                           
  3036  0022                     ?_CC2500_WriteREG:	
  3037                           ; 0 bytes @ 0x2
  3038                           
  3039  0022                     ??_DlyOff_Initialization:	
  3040                           ; 0 bytes @ 0x2
  3041                           
  3042  0022                     ?_setSw_Status:	
  3043                           ; 0 bytes @ 0x2
  3044                           
  3045  0022                     ?_setRFSW_Status:	
  3046                           ; 0 bytes @ 0x2
  3047                           
  3048  0022                     ?_setDimmerLights_Trigger:	
  3049                           ; 0 bytes @ 0x2
  3050                           
  3051  0022                     ?_setDimmerLights_Switch:	
  3052                           ; 0 bytes @ 0x2
  3053                           
  3054  0022                     ??_setTxData:	
  3055                           ; 0 bytes @ 0x2
  3056                           
  3057  0022                     ??_setDimmerLights_Initialization:	
  3058                           ; 0 bytes @ 0x2
  3059                           
  3060  0022                     ?_setDimmerLights_TriggerERROR:	
  3061                           ; 0 bytes @ 0x2
  3062                           
  3063  0022                     ?_setLED:	
  3064                           ; 0 bytes @ 0x2
  3065                           
  3066  0022                     ??_setLED_Main:	
  3067                           ; 0 bytes @ 0x2
  3068                           
  3069  0022                     ??_Load_Initialization:	
  3070                           ; 0 bytes @ 0x2
  3071                           
  3072  0022                     ??_setSw_Enable:	
  3073                           ; 0 bytes @ 0x2
  3074                           
  3075  0022                     ?_setRF_Enable:	
  3076                           ; 0 bytes @ 0x2
  3077                           
  3078  0022                     ?_setDimmerLights_AdjGo:	
  3079                           ; 0 bytes @ 0x2
  3080                           
  3081  0022                     ?_setDimmerLights_TriggerAdj:	
  3082                           ; 0 bytes @ 0x2
  3083                           
  3084  0022                     ?_setDimmerLights_Clear:	
  3085                           ; 0 bytes @ 0x2
  3086                           
  3087  0022                     ?_setRF_Learn:	
  3088                           ; 0 bytes @ 0x2
  3089                           
  3090  0022                     CC2500_WriteREG@value:	
  3091                           ; 0 bytes @ 0x2
  3092                           
  3093  0022                     DlyOff_Initialization@sw:	
  3094                           ; 1 bytes @ 0x2
  3095                           
  3096  0022                     DelayTimejudge@value:	
  3097                           ; 1 bytes @ 0x2
  3098                           
  3099  0022                     _getDimmerLights_StatusFlag$1814:	
  3100                           ; 1 bytes @ 0x2
  3101                           
  3102  0022                     setDimmerLights_TriggerERROR@command:	
  3103                           ; 1 bytes @ 0x2
  3104                           
  3105  0022                     setDimmerLights_Switch@command:	
  3106                           ; 1 bytes @ 0x2
  3107                           
  3108  0022                     setDimmerLights_AdjGo@command:	
  3109                           ; 1 bytes @ 0x2
  3110                           
  3111  0022                     setDimmerLights_Trigger@command:	
  3112                           ; 1 bytes @ 0x2
  3113                           
  3114  0022                     setDimmerLights_TriggerAdj@command:	
  3115                           ; 1 bytes @ 0x2
  3116                           
  3117  0022                     setDimmerLights_Clear@command:	
  3118                           ; 1 bytes @ 0x2
  3119                           
  3120  0022                     setLED@command:	
  3121                           ; 1 bytes @ 0x2
  3122                           
  3123  0022                     Flash_Memory_Read@address:	
  3124                           ; 1 bytes @ 0x2
  3125                           
  3126  0022                     setRF_Learn@command:	
  3127                           ; 1 bytes @ 0x2
  3128                           
  3129  0022                     setRF_RxStatus@command:	
  3130                           ; 1 bytes @ 0x2
  3131                           
  3132  0022                     setRF_Enable@command:	
  3133                           ; 1 bytes @ 0x2
  3134                           
  3135  0022                     setRFSW_Status@command:	
  3136                           ; 1 bytes @ 0x2
  3137                           
  3138  0022                     setSw_Enable@command:	
  3139                           ; 1 bytes @ 0x2
  3140                           
  3141  0022                     setSw_Status@command:	
  3142                           ; 1 bytes @ 0x2
  3143                           
  3144  0022                     DelayTime_1us@i:	
  3145                           ; 1 bytes @ 0x2
  3146                           
  3147  0022                     ___wmul@multiplicand:	
  3148                           ; 2 bytes @ 0x2
  3149                           
  3150  0022                     ___lwdiv@dividend:	
  3151                           ; 2 bytes @ 0x2
  3152                           
  3153                           
  3154                           ; 2 bytes @ 0x2
  3155  0022                     	ds	1
  3156  0023                     ??_setRF_RxStatus:	
  3157  0023                     ??_CC2500_WriteREG:	
  3158                           ; 0 bytes @ 0x3
  3159                           
  3160  0023                     ??_setSw_Status:	
  3161                           ; 0 bytes @ 0x3
  3162                           
  3163  0023                     ??_setRFSW_Status:	
  3164                           ; 0 bytes @ 0x3
  3165                           
  3166  0023                     ??_setDimmerLights_Trigger:	
  3167                           ; 0 bytes @ 0x3
  3168                           
  3169  0023                     ??_setDimmerLights_Switch:	
  3170                           ; 0 bytes @ 0x3
  3171                           
  3172  0023                     ??_setDimmerLights_TriggerERROR:	
  3173                           ; 0 bytes @ 0x3
  3174                           
  3175  0023                     ??_setLED:	
  3176                           ; 0 bytes @ 0x3
  3177                           
  3178  0023                     ??_setRF_Enable:	
  3179                           ; 0 bytes @ 0x3
  3180                           
  3181  0023                     ??_DelayOff_Initialization:	
  3182                           ; 0 bytes @ 0x3
  3183                           
  3184  0023                     ?_setDelayOff_GO:	
  3185                           ; 0 bytes @ 0x3
  3186                           
  3187  0023                     ??_DimmerLights_Close:	
  3188                           ; 0 bytes @ 0x3
  3189                           
  3190  0023                     ??_setDimmerLights_AdjGo:	
  3191                           ; 0 bytes @ 0x3
  3192                           
  3193  0023                     ??_setDimmerLights_TriggerAdj:	
  3194                           ; 0 bytes @ 0x3
  3195                           
  3196  0023                     ??_setDimmerLights_Clear:	
  3197                           ; 0 bytes @ 0x3
  3198                           
  3199  0023                     ??_getAD:	
  3200                           ; 0 bytes @ 0x3
  3201                           
  3202  0023                     ??_setRF_Learn:	
  3203                           ; 0 bytes @ 0x3
  3204                           
  3205  0023                     CC2500_WriteCommand@command:	
  3206                           ; 0 bytes @ 0x3
  3207                           
  3208  0023                     CC2500_ReadStatus@status_addr:	
  3209                           ; 1 bytes @ 0x3
  3210                           
  3211  0023                     setDelayOff_GO@command:	
  3212                           ; 1 bytes @ 0x3
  3213                           
  3214  0023                     setDimmerLights_Initialization@lights:	
  3215                           ; 1 bytes @ 0x3
  3216                           
  3217  0023                     setDimmerLights_TriggerERROR@lights:	
  3218                           ; 1 bytes @ 0x3
  3219                           
  3220  0023                     setDimmerLights_Switch@lights:	
  3221                           ; 1 bytes @ 0x3
  3222                           
  3223  0023                     setDimmerLights_AdjGo@lights:	
  3224                           ; 1 bytes @ 0x3
  3225                           
  3226  0023                     setDimmerLights_Trigger@lights:	
  3227                           ; 1 bytes @ 0x3
  3228                           
  3229  0023                     setDimmerLights_TriggerAdj@lights:	
  3230                           ; 1 bytes @ 0x3
  3231                           
  3232  0023                     setDimmerLights_Clear@lights:	
  3233                           ; 1 bytes @ 0x3
  3234                           
  3235  0023                     setLED@led:	
  3236                           ; 1 bytes @ 0x3
  3237                           
  3238  0023                     getAD@adcon0:	
  3239                           ; 1 bytes @ 0x3
  3240                           
  3241  0023                     Flash_Memory_Read@ret:	
  3242                           ; 1 bytes @ 0x3
  3243                           
  3244  0023                     setRF_Learn@rf:	
  3245                           ; 1 bytes @ 0x3
  3246                           
  3247  0023                     setRF_RxStatus@rf:	
  3248                           ; 1 bytes @ 0x3
  3249                           
  3250  0023                     setTxData@rf:	
  3251                           ; 1 bytes @ 0x3
  3252                           
  3253  0023                     setRF_Enable@rf:	
  3254                           ; 1 bytes @ 0x3
  3255                           
  3256  0023                     setRFSW_Status@sw:	
  3257                           ; 1 bytes @ 0x3
  3258                           
  3259  0023                     setSw_Status@sw:	
  3260                           ; 1 bytes @ 0x3
  3261                           
  3262  0023                     ___ftpack@exp:	
  3263                           ; 1 bytes @ 0x3
  3264                           
  3265                           
  3266                           ; 1 bytes @ 0x3
  3267  0023                     	ds	1
  3268  0024                     ??_CC2500_ClearTXFIFO:	
  3269  0024                     ??_CC2500_ClearRXFIFO:	
  3270                           ; 0 bytes @ 0x4
  3271                           
  3272  0024                     ??_CC2500_SIDLEMode:	
  3273                           ; 0 bytes @ 0x4
  3274                           
  3275  0024                     ?_setDimmerLights:	
  3276                           ; 0 bytes @ 0x4
  3277                           
  3278  0024                     ??_setDimmerLights_ERROR:	
  3279                           ; 0 bytes @ 0x4
  3280                           
  3281  0024                     ??_setLED_Initialization:	
  3282                           ; 0 bytes @ 0x4
  3283                           
  3284  0024                     ??_getLoad_AD:	
  3285                           ; 0 bytes @ 0x4
  3286                           
  3287  0024                     ??_getTemp_AD:	
  3288                           ; 0 bytes @ 0x4
  3289                           
  3290  0024                     ??_getPowerFault_AD:	
  3291                           ; 0 bytes @ 0x4
  3292                           
  3293  0024                     ??_Flash_Memory_Modify:	
  3294                           ; 0 bytes @ 0x4
  3295                           
  3296  0024                     ??_RF_RxDisable:	
  3297                           ; 0 bytes @ 0x4
  3298                           
  3299  0024                     ??_setSw_Initialization:	
  3300                           ; 0 bytes @ 0x4
  3301                           
  3302  0024                     ??_Sw_DimmerAdjFunc:	
  3303                           ; 0 bytes @ 0x4
  3304                           
  3305  0024                     ??_CC2500_TxData:	
  3306                           ; 0 bytes @ 0x4
  3307                           
  3308  0024                     ??_CC2500_RxData:	
  3309                           ; 0 bytes @ 0x4
  3310                           
  3311  0024                     ??_DimmerLights_Initialization:	
  3312                           ; 0 bytes @ 0x4
  3313                           
  3314  0024                     ??___wmul:	
  3315                           ; 0 bytes @ 0x4
  3316                           
  3317  0024                     ??___lwdiv:	
  3318                           ; 0 bytes @ 0x4
  3319                           
  3320  0024                     CC2500_WriteREG@w_addr:	
  3321                           ; 0 bytes @ 0x4
  3322                           
  3323  0024                     setDelayOff_GO@value:	
  3324                           ; 1 bytes @ 0x4
  3325                           
  3326  0024                     setDimmerLights@status:	
  3327                           ; 1 bytes @ 0x4
  3328                           
  3329  0024                     setLED_Initialization@led:	
  3330                           ; 1 bytes @ 0x4
  3331                           
  3332  0024                     setLED_Main@led:	
  3333                           ; 1 bytes @ 0x4
  3334                           
  3335  0024                     RF_RxDisable@rf:	
  3336                           ; 1 bytes @ 0x4
  3337                           
  3338  0024                     setSw_Initialization@sw:	
  3339                           ; 1 bytes @ 0x4
  3340                           
  3341  0024                     Sw_DimmerAdjFunc@sw:	
  3342                           ; 1 bytes @ 0x4
  3343                           
  3344  0024                     ___ftpack@sign:	
  3345                           ; 1 bytes @ 0x4
  3346                           
  3347  0024                     DelayTime_1us@j:	
  3348                           ; 1 bytes @ 0x4
  3349                           
  3350  0024                     ___wmul@product:	
  3351                           ; 2 bytes @ 0x4
  3352                           
  3353                           
  3354                           ; 2 bytes @ 0x4
  3355  0024                     	ds	1
  3356  0025                     ??_CC2500_InitSetREG:	
  3357  0025                     ??_CC2500_InitPATable:	
  3358                           ; 0 bytes @ 0x5
  3359                           
  3360  0025                     ??_setDimmerLights:	
  3361                           ; 0 bytes @ 0x5
  3362                           
  3363  0025                     ??_Switch_Initialization:	
  3364                           ; 0 bytes @ 0x5
  3365                           
  3366  0025                     ??___ftpack:	
  3367                           ; 0 bytes @ 0x5
  3368                           
  3369  0025                     ??_setDelayOff_GO:	
  3370                           ; 0 bytes @ 0x5
  3371                           
  3372  0025                     ??_LED_Initialization:	
  3373                           ; 0 bytes @ 0x5
  3374                           
  3375  0025                     ??_LED_Main:	
  3376                           ; 0 bytes @ 0x5
  3377                           
  3378  0025                     CC2500_TxData@loop_e:	
  3379                           ; 0 bytes @ 0x5
  3380                           
  3381  0025                     CC2500_RxData@loop_f:	
  3382                           ; 1 bytes @ 0x5
  3383                           
  3384  0025                     setDimmerLights_ERROR@lights:	
  3385                           ; 1 bytes @ 0x5
  3386                           
  3387  0025                     ___lwdiv@quotient:	
  3388                           ; 1 bytes @ 0x5
  3389                           
  3390                           
  3391                           ; 2 bytes @ 0x5
  3392  0025                     	ds	1
  3393  0026                     ??_CC2500_PowerRST:	
  3394  0026                     ??_CC2500_FrequencyCabr:	
  3395                           ; 0 bytes @ 0x6
  3396                           
  3397  0026                     ?_setBuz:	
  3398                           ; 0 bytes @ 0x6
  3399                           
  3400  0026                     CC2500_InitSetREG@temp1:	
  3401                           ; 0 bytes @ 0x6
  3402                           
  3403  0026                     CC2500_InitPATable@temp:	
  3404                           ; 1 bytes @ 0x6
  3405                           
  3406  0026                     setDimmerLights@lights:	
  3407                           ; 1 bytes @ 0x6
  3408                           
  3409  0026                     Flash_Memory_Modify@i:	
  3410                           ; 1 bytes @ 0x6
  3411                           
  3412  0026                     setBuz@time:	
  3413                           ; 1 bytes @ 0x6
  3414                           
  3415                           
  3416                           ; 2 bytes @ 0x6
  3417  0026                     	ds	1
  3418  0027                     ??_Flash_Memory_Main:	
  3419  0027                     CC2500_InitSetREG@temp2:	
  3420                           ; 0 bytes @ 0x7
  3421                           
  3422  0027                     CC2500_InitPATable@loop_d:	
  3423                           ; 1 bytes @ 0x7
  3424                           
  3425  0027                     setDelayOff_GO@sw:	
  3426                           ; 1 bytes @ 0x7
  3427                           
  3428  0027                     ___lwdiv@counter:	
  3429                           ; 1 bytes @ 0x7
  3430                           
  3431                           
  3432                           ; 1 bytes @ 0x7
  3433  0027                     	ds	1
  3434  0028                     ??_setBuz:	
  3435  0028                     ?___awtoft:	
  3436                           ; 0 bytes @ 0x8
  3437                           
  3438  0028                     CC2500_InitSetREG@loop_c:	
  3439                           ; 3 bytes @ 0x8
  3440                           
  3441  0028                     getTemp_AD@channel:	
  3442                           ; 1 bytes @ 0x8
  3443                           
  3444  0028                     getPowerFault_AD@channel:	
  3445                           ; 1 bytes @ 0x8
  3446                           
  3447  0028                     ___awtoft@c:	
  3448                           ; 1 bytes @ 0x8
  3449                           
  3450                           
  3451                           ; 2 bytes @ 0x8
  3452  0028                     	ds	1
  3453  0029                     ??_CC2500_PowerOnInitial:	
  3454  0029                     setBuz@count:	
  3455                           ; 0 bytes @ 0x9
  3456                           
  3457  0029                     getLoad_AD@channel:	
  3458                           ; 1 bytes @ 0x9
  3459                           
  3460                           
  3461                           ; 1 bytes @ 0x9
  3462  0029                     	ds	1
  3463  002A                     ??_MainT:	
  3464  002A                     ??_setLog_Code:	
  3465                           ; 0 bytes @ 0xA
  3466                           
  3467  002A                     ??_DimmerLights_Exceptions:	
  3468                           ; 0 bytes @ 0xA
  3469                           
  3470  002A                     DimmerLights_Exceptions@status:	
  3471                           ; 0 bytes @ 0xA
  3472                           
  3473  002A                     getLoad_AD@j:	
  3474                           ; 1 bytes @ 0xA
  3475                           
  3476                           
  3477                           ; 1 bytes @ 0xA
  3478  002A                     	ds	1
  3479  002B                     ??_setLoad_Exceptions:	
  3480  002B                     ??_setOverTemp_Exceptions:	
  3481                           ; 0 bytes @ 0xB
  3482                           
  3483  002B                     ??_setPowerFault_Exceptions:	
  3484                           ; 0 bytes @ 0xB
  3485                           
  3486  002B                     ??___awtoft:	
  3487                           ; 0 bytes @ 0xB
  3488                           
  3489  002B                     getLoad_AD@i:	
  3490                           ; 0 bytes @ 0xB
  3491                           
  3492  002B                     setLog_Code@rf:	
  3493                           ; 1 bytes @ 0xB
  3494                           
  3495                           
  3496                           ; 1 bytes @ 0xB
  3497  002B                     	ds	1
  3498  002C                     setLoad_Exceptions@command:	
  3499  002C                     setOverTemp_Exceptions@command:	
  3500                           ; 1 bytes @ 0xC
  3501                           
  3502  002C                     setPowerFault_Exceptions@command:	
  3503                           ; 1 bytes @ 0xC
  3504                           
  3505                           
  3506                           ; 1 bytes @ 0xC
  3507  002C                     	ds	1
  3508  002D                     ??_Load_Main:	
  3509  002D                     ??_setTemp_Main:	
  3510                           ; 0 bytes @ 0xD
  3511                           
  3512  002D                     ??_setPowerFault_Main:	
  3513                           ; 0 bytes @ 0xD
  3514                           
  3515  002D                     ___awtoft@sign:	
  3516                           ; 0 bytes @ 0xD
  3517                           
  3518                           
  3519                           ; 1 bytes @ 0xD
  3520  002D                     	ds	1
  3521  002E                     ?___ftdiv:	
  3522  002E                     ?___ftmul:	
  3523                           ; 3 bytes @ 0xE
  3524                           
  3525  002E                     ___ftdiv@f2:	
  3526                           ; 3 bytes @ 0xE
  3527                           
  3528  002E                     ___ftmul@f1:	
  3529                           ; 3 bytes @ 0xE
  3530                           
  3531                           
  3532                           ; 3 bytes @ 0xE
  3533  002E                     	ds	1
  3534  002F                     ??_PowerFault_Main:	
  3535                           
  3536                           ; 0 bytes @ 0xF
  3537  002F                     	ds	1
  3538  0030                     ??_Temp_Main:	
  3539                           
  3540                           ; 0 bytes @ 0x10
  3541  0030                     	ds	1
  3542  0031                     Load_Main@i:	
  3543  0031                     ___ftdiv@f1:	
  3544                           ; 1 bytes @ 0x11
  3545                           
  3546  0031                     ___ftmul@f2:	
  3547                           ; 3 bytes @ 0x11
  3548                           
  3549                           
  3550                           ; 3 bytes @ 0x11
  3551  0031                     	ds	3
  3552  0034                     ??___ftdiv:	
  3553  0034                     ??___ftmul:	
  3554                           ; 0 bytes @ 0x14
  3555                           
  3556                           
  3557                           ; 0 bytes @ 0x14
  3558  0034                     	ds	4
  3559  0038                     ___ftdiv@cntr:	
  3560  0038                     ___ftmul@exp:	
  3561                           ; 1 bytes @ 0x18
  3562                           
  3563                           
  3564                           ; 1 bytes @ 0x18
  3565  0038                     	ds	1
  3566  0039                     ___ftdiv@f3:	
  3567  0039                     ___ftmul@f3_as_product:	
  3568                           ; 3 bytes @ 0x19
  3569                           
  3570                           
  3571                           ; 3 bytes @ 0x19
  3572  0039                     	ds	3
  3573  003C                     ___ftdiv@exp:	
  3574  003C                     ___ftmul@cntr:	
  3575                           ; 1 bytes @ 0x1C
  3576                           
  3577                           
  3578                           ; 1 bytes @ 0x1C
  3579  003C                     	ds	1
  3580  003D                     ___ftdiv@sign:	
  3581  003D                     ___ftmul@sign:	
  3582                           ; 1 bytes @ 0x1D
  3583                           
  3584                           
  3585                           ; 1 bytes @ 0x1D
  3586  003D                     	ds	1
  3587  003E                     ?___ftadd:	
  3588  003E                     ___ftadd@f1:	
  3589                           ; 3 bytes @ 0x1E
  3590                           
  3591                           
  3592                           ; 3 bytes @ 0x1E
  3593  003E                     	ds	3
  3594  0041                     ___ftadd@f2:	
  3595                           
  3596                           ; 3 bytes @ 0x21
  3597  0041                     	ds	3
  3598  0044                     ??___ftadd:	
  3599                           
  3600                           ; 0 bytes @ 0x24
  3601  0044                     	ds	4
  3602  0048                     ___ftadd@sign:	
  3603                           
  3604                           ; 1 bytes @ 0x28
  3605  0048                     	ds	1
  3606  0049                     ___ftadd@exp2:	
  3607                           
  3608                           ; 1 bytes @ 0x29
  3609  0049                     	ds	1
  3610  004A                     ___ftadd@exp1:	
  3611                           
  3612                           ; 1 bytes @ 0x2A
  3613  004A                     	ds	1
  3614  004B                     ?___fttol:	
  3615  004B                     ___fttol@f1:	
  3616                           ; 4 bytes @ 0x2B
  3617                           
  3618                           
  3619                           ; 3 bytes @ 0x2B
  3620  004B                     	ds	4
  3621  004F                     ??___fttol:	
  3622                           
  3623                           ; 0 bytes @ 0x2F
  3624  004F                     	ds	4
  3625  0053                     ___fttol@sign1:	
  3626                           
  3627                           ; 1 bytes @ 0x33
  3628  0053                     	ds	1
  3629  0054                     ___fttol@lval:	
  3630                           
  3631                           ; 4 bytes @ 0x34
  3632  0054                     	ds	4
  3633  0058                     ___fttol@exp1:	
  3634                           
  3635                           ; 1 bytes @ 0x38
  3636  0058                     	ds	1
  3637  0059                     ??_getPercentValue:	
  3638  0059                     ??_setPercentValue:	
  3639                           ; 0 bytes @ 0x39
  3640                           
  3641  0059                     setPercentValue@value:	
  3642                           ; 0 bytes @ 0x39
  3643                           
  3644                           
  3645                           ; 1 bytes @ 0x39
  3646  0059                     	ds	1
  3647  005A                     setPercentValue@i:	
  3648                           
  3649                           ; 3 bytes @ 0x3A
  3650  005A                     	ds	1
  3651  005B                     getPercentValue@value:	
  3652                           
  3653                           ; 1 bytes @ 0x3B
  3654  005B                     	ds	1
  3655  005C                     getPercentValue@i:	
  3656                           
  3657                           ; 3 bytes @ 0x3C
  3658  005C                     	ds	1
  3659  005D                     ?_setRF_DimmerLights:	
  3660  005D                     ??_Flash_Memory_Initialization:	
  3661                           ; 0 bytes @ 0x3D
  3662                           
  3663  005D                     setRF_DimmerLights@on:	
  3664                           ; 0 bytes @ 0x3D
  3665                           
  3666                           
  3667                           ; 1 bytes @ 0x3D
  3668  005D                     	ds	1
  3669  005E                     ??_setRF_DimmerLights:	
  3670  005E                     Flash_Memory_Initialization@i:	
  3671                           ; 0 bytes @ 0x3E
  3672                           
  3673                           
  3674                           ; 1 bytes @ 0x3E
  3675  005E                     	ds	1
  3676  005F                     ??_setDimmerLights_AdjRF:	
  3677                           
  3678                           ; 0 bytes @ 0x3F
  3679  005F                     	ds	1
  3680  0060                     setDimmerLights_AdjRF@lights:	
  3681  0060                     setRF_DimmerLights@status:	
  3682                           ; 1 bytes @ 0x40
  3683                           
  3684                           
  3685                           ; 1 bytes @ 0x40
  3686  0060                     	ds	1
  3687  0061                     ??_setRF_DimmerValue:	
  3688  0061                     setRF_DimmerLights@lights:	
  3689                           ; 0 bytes @ 0x41
  3690                           
  3691                           
  3692                           ; 1 bytes @ 0x41
  3693  0061                     	ds	1
  3694  0062                     ??_DlyOff_Main:	
  3695  0062                     ?_setDimmerLights_Adj:	
  3696                           ; 0 bytes @ 0x42
  3697                           
  3698  0062                     ??_setRFSW_Control:	
  3699                           ; 0 bytes @ 0x42
  3700                           
  3701  0062                     ??_Sw_DimmerOnFunc:	
  3702                           ; 0 bytes @ 0x42
  3703                           
  3704  0062                     ??_Sw_DimmerOffFunc:	
  3705                           ; 0 bytes @ 0x42
  3706                           
  3707  0062                     setDimmerLights_Adj@status:	
  3708                           ; 0 bytes @ 0x42
  3709                           
  3710  0062                     Sw_DimmerOnFunc@Idle:	
  3711                           ; 1 bytes @ 0x42
  3712                           
  3713                           
  3714                           ; 1 bytes @ 0x42
  3715  0062                     	ds	1
  3716  0063                     ??_setDimmerLights_Adj:	
  3717  0063                     setRFSW_Control@sw:	
  3718                           ; 0 bytes @ 0x43
  3719                           
  3720  0063                     setRF_DimmerValue@lights:	
  3721                           ; 1 bytes @ 0x43
  3722                           
  3723  0063                     Sw_DimmerOnFunc@sw:	
  3724                           ; 1 bytes @ 0x43
  3725                           
  3726                           
  3727                           ; 1 bytes @ 0x43
  3728  0063                     	ds	1
  3729  0064                     ??_setRFSW_AdjControl:	
  3730  0064                     DlyOff_Main@sw:	
  3731                           ; 0 bytes @ 0x44
  3732                           
  3733  0064                     setDimmerLights_Adj@lights:	
  3734                           ; 1 bytes @ 0x44
  3735                           
  3736  0064                     Sw_DimmerOffFunc@sw:	
  3737                           ; 1 bytes @ 0x44
  3738                           
  3739                           
  3740                           ; 1 bytes @ 0x44
  3741  0064                     	ds	1
  3742  0065                     ??_setDimmerLights_Main:	
  3743  0065                     ??_setSw_Main:	
  3744                           ; 0 bytes @ 0x45
  3745                           
  3746  0065                     ??_DelayOff_Main:	
  3747                           ; 0 bytes @ 0x45
  3748                           
  3749  0065                     setDimmerLights_Main@clear:	
  3750                           ; 0 bytes @ 0x45
  3751                           
  3752                           
  3753                           ; 1 bytes @ 0x45
  3754  0065                     	ds	1
  3755  0066                     setDimmerLights_Main@lights:	
  3756  0066                     setRFSW_AdjControl@sw:	
  3757                           ; 1 bytes @ 0x46
  3758                           
  3759                           
  3760                           ; 1 bytes @ 0x46
  3761  0066                     	ds	1
  3762  0067                     ??_setControl_Lights_Table:	
  3763  0067                     ??_DimmerLights_Main:	
  3764                           ; 0 bytes @ 0x47
  3765                           
  3766  0067                     setControl_Lights_Table@rf:	
  3767                           ; 0 bytes @ 0x47
  3768                           
  3769  0067                     _setSw_Main$4704:	
  3770                           ; 1 bytes @ 0x47
  3771                           
  3772                           
  3773                           ; 1 bytes @ 0x47
  3774  0067                     	ds	1
  3775  0068                     ??_getRxData:	
  3776  0068                     getRxData@rf:	
  3777                           ; 0 bytes @ 0x48
  3778                           
  3779  0068                     _setSw_Main$4705:	
  3780                           ; 1 bytes @ 0x48
  3781                           
  3782                           
  3783                           ; 1 bytes @ 0x48
  3784  0068                     	ds	1
  3785  0069                     ??_setRF_Main:	
  3786  0069                     setSw_Main@sw:	
  3787                           ; 0 bytes @ 0x49
  3788                           
  3789                           
  3790                           ; 1 bytes @ 0x49
  3791  0069                     	ds	1
  3792  006A                     ??_Switch_Main:	
  3793  006A                     setRF_Main@rf:	
  3794                           ; 0 bytes @ 0x4A
  3795                           
  3796                           
  3797                           ; 1 bytes @ 0x4A
  3798  006A                     	ds	1
  3799  006B                     _setRF_Main$4353:	
  3800                           
  3801                           ; 1 bytes @ 0x4B
  3802  006B                     	ds	1
  3803  006C                     ??_RF_Main:	
  3804  006C                     ??_main:	
  3805                           ; 0 bytes @ 0x4C
  3806                           
  3807                           
  3808                           	psect	maintext
  3809  12E7                     __pmaintext:	
  3810                           ; 0 bytes @ 0x4C
  3811 ;;
  3812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3813 ;;
  3814 ;; *************** function _main *****************
  3815 ;; Defined at:
  3816 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1.
      +2.1\Release\main.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;		None               void
  3823 ;; Registers used:
  3824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 17F/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels required when called:   14
  3836 ;; This function calls:
  3837 ;;		_Buzzer_Initialization
  3838 ;;		_Buzzer_Main
  3839 ;;		_CC2500_PowerOnInitial
  3840 ;;		_DelayOff_Initialization
  3841 ;;		_DelayOff_Main
  3842 ;;		_DimmerLights_Initialization
  3843 ;;		_DimmerLights_Main
  3844 ;;		_Flash_Memory_Initialization
  3845 ;;		_Flash_Memory_Main
  3846 ;;		_LED_Initialization
  3847 ;;		_LED_Main
  3848 ;;		_Load_Initialization
  3849 ;;		_Load_Main
  3850 ;;		_MainT
  3851 ;;		_MainT_Initialization
  3852 ;;		_Mcu_Initialization
  3853 ;;		_PowerFault_Initialization
  3854 ;;		_PowerFault_Main
  3855 ;;		_RF_Initialization
  3856 ;;		_RF_Main
  3857 ;;		_Switch_Initialization
  3858 ;;		_Switch_Main
  3859 ;;		_Temp_Initialization
  3860 ;;		_Temp_Main
  3861 ;;		_getLoad_AD
  3862 ;;		_getPowerFault_AD
  3863 ;;		_getTemp_AD
  3864 ;; This function is called by:
  3865 ;;		Startup code after reset
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           
  3870                           ;psect for function _main
  3871  12E7                     _main:	
  3872                           
  3873                           ;main.c: 9: MainT_Initialization();
  3874                           
  3875                           ;incstack = 0
  3876                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3877  12E7  31A4  246E  3192   	fcall	_MainT_Initialization
  3878                           
  3879                           ;main.c: 10: Mcu_Initialization();
  3880  12EA  31A6  2695  3192   	fcall	_Mcu_Initialization
  3881                           
  3882                           ;main.c: 11: Flash_Memory_Initialization();
  3883  12ED  318C  24D7  3192   	fcall	_Flash_Memory_Initialization
  3884                           
  3885                           ;main.c: 12: LED_Initialization();
  3886  12F0  31A4  24BF  3192   	fcall	_LED_Initialization
  3887                           
  3888                           ;main.c: 13: Buzzer_Initialization();
  3889  12F3  31A4  242C  3192   	fcall	_Buzzer_Initialization
  3890                           
  3891                           ;main.c: 15: ;;
  3892                           ;main.c: 16: Temp_Initialization();
  3893  12F6  31A3  23AB  3192   	fcall	_Temp_Initialization
  3894                           
  3895                           ;main.c: 17: Load_Initialization();
  3896  12F9  31A4  24D7  3192   	fcall	_Load_Initialization
  3897                           
  3898                           ;main.c: 18: PowerFault_Initialization();
  3899  12FC  31A3  23A5  3192   	fcall	_PowerFault_Initialization
  3900                           
  3901                           ;main.c: 19: DelayOff_Initialization();
  3902  12FF  31A3  23F1  3192   	fcall	_DelayOff_Initialization
  3903                           
  3904                           ;main.c: 21: DimmerLights_Initialization();
  3905  1302  31A6  2612  3192   	fcall	_DimmerLights_Initialization
  3906                           
  3907                           ;main.c: 22: ;;
  3908                           ;main.c: 23: ;;
  3909                           ;main.c: 24: ;;
  3910                           ;main.c: 26: Switch_Initialization();
  3911  1305  31A4  24FE  3192   	fcall	_Switch_Initialization
  3912                           
  3913                           ;main.c: 27: RF_Initialization();
  3914  1308  31A3  23BA  3192   	fcall	_RF_Initialization
  3915                           
  3916                           ;main.c: 28: CC2500_PowerOnInitial();
  3917  130B  31A5  25FD  3192   	fcall	_CC2500_PowerOnInitial
  3918  130E                     l10064:	
  3919                           ;main.c: 30: while(1)
  3920                           
  3921                           
  3922                           ;main.c: 31: {
  3923                           ;main.c: 32: if(TMain->PowerON)
  3924  130E  0021               	movlb	1	; select bank1
  3925  130F  0869               	movf	_TMain^(0+128),w
  3926  1310  0086               	movwf	6
  3927  1311  3001               	movlw	1	; select bank2/3
  3928  1312  0087               	movwf	7
  3929  1313  1C01               	btfss	1,0
  3930  1314  2B24               	goto	l10068
  3931                           
  3932                           ;main.c: 33: {
  3933                           ;main.c: 35: ;;
  3934                           ;main.c: 39: getLoad_AD(0x05);
  3935  1315  3005               	movlw	5
  3936  1316  3188  207D  3192   	fcall	_getLoad_AD
  3937                           
  3938                           ;main.c: 43: getTemp_AD(0x09);
  3939  1319  3009               	movlw	9
  3940  131A  3191  219E  3192   	fcall	_getTemp_AD
  3941                           
  3942                           ;main.c: 47: getPowerFault_AD(0x11);
  3943  131D  3011               	movlw	17
  3944  131E  319C  2473  3192   	fcall	_getPowerFault_AD
  3945                           
  3946                           ;main.c: 59: Buzzer_Main();
  3947  1321  3189  2113  3192   	fcall	_Buzzer_Main
  3948  1324                     l10068:	
  3949                           
  3950                           ;main.c: 61: }
  3951                           ;main.c: 63: if(TMain->T0_Timerout)
  3952  1324  0021               	movlb	1	; select bank1
  3953  1325  0869               	movf	_TMain^(0+128),w
  3954  1326  0086               	movwf	6
  3955  1327  3001               	movlw	1	; select bank2/3
  3956  1328  0087               	movwf	7
  3957  1329  1C81               	btfss	1,1
  3958  132A  2B0E               	goto	l10064
  3959                           
  3960                           ;main.c: 64: {
  3961                           ;main.c: 65: TMain->T0_Timerout = 0;
  3962  132B  0869               	movf	_TMain^(0+128),w
  3963  132C  0086               	movwf	6
  3964  132D  3001               	movlw	1	; select bank2/3
  3965  132E  0087               	movwf	7
  3966  132F  1081               	bcf	1,1
  3967                           
  3968                           ;main.c: 66: MainT();
  3969  1330  3194  243E  3192   	fcall	_MainT
  3970                           
  3971                           ;main.c: 67: if(TMain->PowerON)
  3972  1333  0021               	movlb	1	; select bank1
  3973  1334  0869               	movf	_TMain^(0+128),w
  3974  1335  0086               	movwf	6
  3975  1336  3001               	movlw	1	; select bank2/3
  3976  1337  0087               	movwf	7
  3977  1338  1C01               	btfss	1,0
  3978  1339  2B0E               	goto	l10064
  3979                           
  3980                           ;main.c: 68: {
  3981                           ;main.c: 69: Flash_Memory_Main();
  3982  133A  319D  25C1  3192   	fcall	_Flash_Memory_Main
  3983                           
  3984                           ;main.c: 71: LED_Main();
  3985  133D  31A4  24CB  3192   	fcall	_LED_Main
  3986                           
  3987                           ;main.c: 73: ;;
  3988                           ;main.c: 74: Temp_Main();
  3989  1340  3187  27FD  3192   	fcall	_Temp_Main
  3990                           
  3991                           ;main.c: 75: Load_Main();
  3992  1343  3183  23A4  3192   	fcall	_Load_Main
  3993                           
  3994                           ;main.c: 76: PowerFault_Main();
  3995  1346  31A3  23A8  3192   	fcall	_PowerFault_Main
  3996                           
  3997                           ;main.c: 78: ;;
  3998                           ;main.c: 79: DimmerLights_Main();
  3999  1349  31A4  2458  3192   	fcall	_DimmerLights_Main
  4000                           
  4001                           ;main.c: 80: Switch_Main();
  4002  134C  31A4  2411  3192   	fcall	_Switch_Main
  4003                           
  4004                           ;main.c: 81: ;;
  4005                           ;main.c: 82: ;;
  4006                           ;main.c: 84: RF_Main();
  4007  134F  3188  2000  3192   	fcall	_RF_Main
  4008                           
  4009                           ;main.c: 85: DelayOff_Main();
  4010  1352  31A3  23F9  3192   	fcall	_DelayOff_Main
  4011  1355  2B0E               	goto	l10064
  4012  1356                     __end_of_main:	
  4013                           
  4014                           	psect	text1
  4015  119E                     __ptext1:	
  4016 ;; *************** function _getTemp_AD *****************
  4017 ;; Defined at:
  4018 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverTemperature_B1.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  channel         1    wreg     unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  channel         1    8[BANK0 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;		None               void
  4025 ;; Registers used:
  4026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;Total ram usage:        5 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    5
  4039 ;; This function calls:
  4040 ;;		_getAD
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _getTemp_AD
  4048  119E                     _getTemp_AD:	
  4049                           
  4050                           ;incstack = 0
  4051                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4052                           ;getTemp_AD@channel stored from wreg
  4053  119E  0020               	movlb	0	; select bank0
  4054  119F  00A8               	movwf	getTemp_AD@channel
  4055                           
  4056                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  4057  11A0  087D               	movf	_Temp,w
  4058  11A1  0086               	movwf	6
  4059  11A2  3001               	movlw	1	; select bank2/3
  4060  11A3  0087               	movwf	7
  4061  11A4  1D01               	btfss	1,2
  4062  11A5  0008               	return
  4063                           
  4064                           ;OverTemperature_B1.c: 38: {
  4065                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  4066  11A6  30F0               	movlw	240
  4067  11A7  00A4               	movwf	??_getTemp_AD
  4068  11A8  0824               	movf	??_getTemp_AD,w
  4069  11A9  00A0               	movwf	getAD@adcon1
  4070  11AA  0828               	movf	getTemp_AD@channel,w
  4071  11AB  31A6  2668  3191   	fcall	_getAD
  4072  11AE  087D               	movf	_Temp,w
  4073  11AF  3E0A               	addlw	10
  4074  11B0  0086               	movwf	6
  4075  11B1  3001               	movlw	1	; select bank2/3
  4076  11B2  0087               	movwf	7
  4077  11B3  0020               	movlb	0	; select bank0
  4078  11B4  0820               	movf	?_getAD,w
  4079  11B5  3FC0               	movwi [0]fsr1
  4080  11B6  0821               	movf	?_getAD+1,w
  4081  11B7  3FC1               	movwi [1]fsr1
  4082                           
  4083                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  4084  11B8  087D               	movf	_Temp,w
  4085  11B9  3E0A               	addlw	10
  4086  11BA  0086               	movwf	6
  4087  11BB  3001               	movlw	1	; select bank2/3
  4088  11BC  0087               	movwf	7
  4089  11BD  3F40               	moviw [0]fsr1
  4090  11BE  00A4               	movwf	??_getTemp_AD
  4091  11BF  3F41               	moviw [1]fsr1
  4092  11C0  00A5               	movwf	??_getTemp_AD+1
  4093  11C1  087D               	movf	_Temp,w
  4094  11C2  3E06               	addlw	6
  4095  11C3  0086               	movwf	6
  4096  11C4  3001               	movlw	1	; select bank2/3
  4097  11C5  0087               	movwf	7
  4098  11C6  3F40               	moviw [0]fsr1
  4099  11C7  00A6               	movwf	??_getTemp_AD+2
  4100  11C8  3F41               	moviw [1]fsr1
  4101  11C9  00A7               	movwf	??_getTemp_AD+3
  4102  11CA  0825               	movf	??_getTemp_AD+1,w
  4103  11CB  0227               	subwf	??_getTemp_AD+3,w
  4104  11CC  1D03               	skipz
  4105  11CD  29D0               	goto	u9935
  4106  11CE  0824               	movf	??_getTemp_AD,w
  4107  11CF  0226               	subwf	??_getTemp_AD+2,w
  4108  11D0                     u9935:	
  4109  11D0  1803               	skipnc
  4110  11D1  29E1               	goto	l9854
  4111                           
  4112                           ;OverTemperature_B1.c: 41: {
  4113                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  4114  11D2  087D               	movf	_Temp,w
  4115  11D3  3E0A               	addlw	10
  4116  11D4  0086               	movwf	6
  4117  11D5  3001               	movlw	1	; select bank2/3
  4118  11D6  0087               	movwf	7
  4119  11D7  087D               	movf	_Temp,w
  4120  11D8  3E06               	addlw	6
  4121  11D9  0084               	movwf	4
  4122  11DA  3001               	movlw	1	; select bank2/3
  4123  11DB  0085               	movwf	5
  4124  11DC  3F40               	moviw [0]fsr1
  4125  11DD  3F80               	movwi [0]fsr0
  4126  11DE  3F41               	moviw [1]fsr1
  4127  11DF  3F81               	movwi [1]fsr0
  4128                           
  4129                           ;OverTemperature_B1.c: 43: }
  4130  11E0  0008               	return
  4131  11E1                     l9854:	
  4132                           
  4133                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  4134  11E1  087D               	movf	_Temp,w
  4135  11E2  3E0A               	addlw	10
  4136  11E3  0086               	movwf	6
  4137  11E4  3001               	movlw	1	; select bank2/3
  4138  11E5  0087               	movwf	7
  4139  11E6  3F40               	moviw [0]fsr1
  4140  11E7  00A4               	movwf	??_getTemp_AD
  4141  11E8  3F41               	moviw [1]fsr1
  4142  11E9  00A5               	movwf	??_getTemp_AD+1
  4143  11EA  087D               	movf	_Temp,w
  4144  11EB  3E08               	addlw	8
  4145  11EC  0086               	movwf	6
  4146  11ED  3001               	movlw	1	; select bank2/3
  4147  11EE  0087               	movwf	7
  4148  11EF  3F40               	moviw [0]fsr1
  4149  11F0  00A6               	movwf	??_getTemp_AD+2
  4150  11F1  3F41               	moviw [1]fsr1
  4151  11F2  00A7               	movwf	??_getTemp_AD+3
  4152  11F3  0825               	movf	??_getTemp_AD+1,w
  4153  11F4  0227               	subwf	??_getTemp_AD+3,w
  4154  11F5  1D03               	skipz
  4155  11F6  29F9               	goto	u9945
  4156  11F7  0824               	movf	??_getTemp_AD,w
  4157  11F8  0226               	subwf	??_getTemp_AD+2,w
  4158  11F9                     u9945:	
  4159  11F9  1803               	skipnc
  4160  11FA  0008               	return
  4161                           
  4162                           ;OverTemperature_B1.c: 45: {
  4163                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  4164  11FB  087D               	movf	_Temp,w
  4165  11FC  3E0A               	addlw	10
  4166  11FD  0086               	movwf	6
  4167  11FE  3001               	movlw	1	; select bank2/3
  4168  11FF  0087               	movwf	7
  4169  1200  087D               	movf	_Temp,w
  4170  1201  3E08               	addlw	8
  4171  1202  0084               	movwf	4
  4172  1203  3001               	movlw	1	; select bank2/3
  4173  1204  0085               	movwf	5
  4174  1205  3F40               	moviw [0]fsr1
  4175  1206  3F80               	movwi [0]fsr0
  4176  1207  3F41               	moviw [1]fsr1
  4177  1208  3F81               	movwi [1]fsr0
  4178  1209  0008               	return
  4179  120A                     __end_of_getTemp_AD:	
  4180                           
  4181                           	psect	text2
  4182  1C73                     __ptext2:	
  4183 ;; *************** function _getPowerFault_AD *****************
  4184 ;; Defined at:
  4185 ;;		line 49 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\PowerFault_B1.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  channel         1    wreg     unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  channel         1    8[BANK0 ] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;		None               void
  4192 ;; Registers used:
  4193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;Total ram usage:        5 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:    5
  4206 ;; This function calls:
  4207 ;;		_getAD
  4208 ;; This function is called by:
  4209 ;;		_main
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           
  4214                           ;psect for function _getPowerFault_AD
  4215  1C73                     _getPowerFault_AD:	
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4219                           ;getPowerFault_AD@channel stored from wreg
  4220  1C73  0020               	movlb	0	; select bank0
  4221  1C74  00A8               	movwf	getPowerFault_AD@channel
  4222                           
  4223                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
  4224  1C75  087B               	movf	_PF,w
  4225  1C76  0086               	movwf	6
  4226  1C77  3001               	movlw	1	; select bank2/3
  4227  1C78  0087               	movwf	7
  4228  1C79  1D81               	btfss	1,3
  4229  1C7A  0008               	return
  4230                           
  4231                           ;PowerFault_B1.c: 52: {
  4232                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
  4233  1C7B  30F0               	movlw	240
  4234  1C7C  00A4               	movwf	??_getPowerFault_AD
  4235  1C7D  0824               	movf	??_getPowerFault_AD,w
  4236  1C7E  00A0               	movwf	getAD@adcon1
  4237  1C7F  0828               	movf	getPowerFault_AD@channel,w
  4238  1C80  31A6  2668  319C   	fcall	_getAD
  4239  1C83  087B               	movf	_PF,w
  4240  1C84  3E03               	addlw	3
  4241  1C85  0086               	movwf	6
  4242  1C86  3001               	movlw	1	; select bank2/3
  4243  1C87  0087               	movwf	7
  4244  1C88  0020               	movlb	0	; select bank0
  4245  1C89  0820               	movf	?_getAD,w
  4246  1C8A  3FC0               	movwi [0]fsr1
  4247  1C8B  0821               	movf	?_getAD+1,w
  4248  1C8C  3FC1               	movwi [1]fsr1
  4249                           
  4250                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
  4251  1C8D  087B               	movf	_PF,w
  4252  1C8E  3E03               	addlw	3
  4253  1C8F  0086               	movwf	6
  4254  1C90  3001               	movlw	1	; select bank2/3
  4255  1C91  0087               	movwf	7
  4256  1C92  3F40               	moviw [0]fsr1
  4257  1C93  00A4               	movwf	??_getPowerFault_AD
  4258  1C94  3F41               	moviw [1]fsr1
  4259  1C95  00A5               	movwf	??_getPowerFault_AD+1
  4260  1C96  0A7B               	incf	_PF,w
  4261  1C97  0086               	movwf	6
  4262  1C98  3001               	movlw	1	; select bank2/3
  4263  1C99  0087               	movwf	7
  4264  1C9A  3F40               	moviw [0]fsr1
  4265  1C9B  00A6               	movwf	??_getPowerFault_AD+2
  4266  1C9C  3F41               	moviw [1]fsr1
  4267  1C9D  00A7               	movwf	??_getPowerFault_AD+3
  4268  1C9E  0825               	movf	??_getPowerFault_AD+1,w
  4269  1C9F  0227               	subwf	??_getPowerFault_AD+3,w
  4270  1CA0  1D03               	skipz
  4271  1CA1  2CA4               	goto	u9965
  4272  1CA2  0824               	movf	??_getPowerFault_AD,w
  4273  1CA3  0226               	subwf	??_getPowerFault_AD+2,w
  4274  1CA4                     u9965:	
  4275  1CA4  1803               	skipnc
  4276  1CA5  0008               	return
  4277                           
  4278                           ;PowerFault_B1.c: 55: {
  4279                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
  4280  1CA6  087B               	movf	_PF,w
  4281  1CA7  3E03               	addlw	3
  4282  1CA8  0086               	movwf	6
  4283  1CA9  3001               	movlw	1	; select bank2/3
  4284  1CAA  0087               	movwf	7
  4285  1CAB  0A7B               	incf	_PF,w
  4286  1CAC  0084               	movwf	4
  4287  1CAD  3001               	movlw	1	; select bank2/3
  4288  1CAE  0085               	movwf	5
  4289  1CAF  3F40               	moviw [0]fsr1
  4290  1CB0  3F80               	movwi [0]fsr0
  4291  1CB1  3F41               	moviw [1]fsr1
  4292  1CB2  3F81               	movwi [1]fsr0
  4293  1CB3  0008               	return
  4294  1CB4                     __end_of_getPowerFault_AD:	
  4295                           
  4296                           	psect	text3
  4297  087D                     __ptext3:	
  4298 ;; *************** function _getLoad_AD *****************
  4299 ;; Defined at:
  4300 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverLoad_B1.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  channel         1    wreg     unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  channel         1    9[BANK0 ] unsigned char 
  4305 ;;  i               1   11[BANK0 ] unsigned char 
  4306 ;;  j               1   10[BANK0 ] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;		None               void
  4309 ;; Registers used:
  4310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        8 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    5
  4323 ;; This function calls:
  4324 ;;		_getAD
  4325 ;; This function is called by:
  4326 ;;		_main
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           
  4331                           ;psect for function _getLoad_AD
  4332  087D                     _getLoad_AD:	
  4333                           
  4334                           ;incstack = 0
  4335                           ; Regs used in _getLoad_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4336                           ;getLoad_AD@channel stored from wreg
  4337  087D  0020               	movlb	0	; select bank0
  4338  087E  00A9               	movwf	getLoad_AD@channel
  4339                           
  4340                           ;OverLoad_B1.c: 17: char i=0,j=0;
  4341  087F  01AB               	clrf	getLoad_AD@i
  4342  0880  01AA               	clrf	getLoad_AD@j
  4343                           
  4344                           ;OverLoad_B1.c: 19: if(Load->ADtoGO)
  4345  0881  086E               	movf	_Load,w
  4346  0882  0086               	movwf	6
  4347  0883  3002               	movlw	2	; select bank4/5
  4348  0884  0087               	movwf	7
  4349  0885  1E01               	btfss	1,4
  4350  0886  0008               	return
  4351                           
  4352                           ;OverLoad_B1.c: 20: {
  4353                           ;OverLoad_B1.c: 21: Load->ADRES=getAD(channel,0xc0);
  4354  0887  30C0               	movlw	192
  4355  0888  00A4               	movwf	??_getLoad_AD
  4356  0889  0824               	movf	??_getLoad_AD,w
  4357  088A  00A0               	movwf	getAD@adcon1
  4358  088B  0829               	movf	getLoad_AD@channel,w
  4359  088C  31A6  2668  3188   	fcall	_getAD
  4360  088F  0020               	movlb	0	; select bank0
  4361  0890  086E               	movf	_Load,w
  4362  0891  3E32               	addlw	50
  4363  0892  0086               	movwf	6
  4364  0893  3002               	movlw	2	; select bank4/5
  4365  0894  0087               	movwf	7
  4366  0895  0820               	movf	?_getAD,w
  4367  0896  3FC0               	movwi [0]fsr1
  4368  0897  0821               	movf	?_getAD+1,w
  4369  0898  3FC1               	movwi [1]fsr1
  4370                           
  4371                           ;OverLoad_B1.c: 22: for(i=0 ; i<5 ;i++)
  4372  0899  01AB               	clrf	getLoad_AD@i
  4373  089A  3005               	movlw	5
  4374  089B  022B               	subwf	getLoad_AD@i,w
  4375  089C  1803               	btfsc	3,0
  4376  089D  28D7               	goto	l9830
  4377  089E                     l9820:	
  4378                           
  4379                           ;OverLoad_B1.c: 23: {
  4380                           ;OverLoad_B1.c: 24: if(Load->AH[i] < Load->ADRES)
  4381  089E  086E               	movf	_Load,w
  4382  089F  3E32               	addlw	50
  4383  08A0  0086               	movwf	6
  4384  08A1  3002               	movlw	2	; select bank4/5
  4385  08A2  0087               	movwf	7
  4386  08A3  3F40               	moviw [0]fsr1
  4387  08A4  00A4               	movwf	??_getLoad_AD
  4388  08A5  3F41               	moviw [1]fsr1
  4389  08A6  00A5               	movwf	??_getLoad_AD+1
  4390  08A7  352B               	lslf	getLoad_AD@i,w
  4391  08A8  3E08               	addlw	8
  4392  08A9  076E               	addwf	_Load,w
  4393  08AA  00A6               	movwf	??_getLoad_AD+2
  4394  08AB  0826               	movf	??_getLoad_AD+2,w
  4395  08AC  0086               	movwf	6
  4396  08AD  3002               	movlw	2	; select bank4/5
  4397  08AE  0087               	movwf	7
  4398  08AF  3F40               	moviw [0]fsr1
  4399  08B0  00A7               	movwf	??_getLoad_AD+3
  4400  08B1  3F41               	moviw [1]fsr1
  4401  08B2  00A8               	movwf	??_getLoad_AD+4
  4402  08B3  0825               	movf	??_getLoad_AD+1,w
  4403  08B4  0228               	subwf	??_getLoad_AD+4,w
  4404  08B5  1D03               	skipz
  4405  08B6  28B9               	goto	u9865
  4406  08B7  0824               	movf	??_getLoad_AD,w
  4407  08B8  0227               	subwf	??_getLoad_AD+3,w
  4408  08B9                     u9865:	
  4409  08B9  1803               	skipnc
  4410  08BA  28CF               	goto	l9826
  4411                           
  4412                           ;OverLoad_B1.c: 25: {
  4413                           ;OverLoad_B1.c: 26: Load->AH[i]=Load->ADRES;
  4414  08BB  086E               	movf	_Load,w
  4415  08BC  3E32               	addlw	50
  4416  08BD  0086               	movwf	6
  4417  08BE  3002               	movlw	2	; select bank4/5
  4418  08BF  0087               	movwf	7
  4419  08C0  352B               	lslf	getLoad_AD@i,w
  4420  08C1  3E08               	addlw	8
  4421  08C2  076E               	addwf	_Load,w
  4422  08C3  00A4               	movwf	??_getLoad_AD
  4423  08C4  0824               	movf	??_getLoad_AD,w
  4424  08C5  0084               	movwf	4
  4425  08C6  3002               	movlw	2	; select bank4/5
  4426  08C7  0085               	movwf	5
  4427  08C8  3F40               	moviw [0]fsr1
  4428  08C9  3F80               	movwi [0]fsr0
  4429  08CA  3F41               	moviw [1]fsr1
  4430  08CB  3F81               	movwi [1]fsr0
  4431                           
  4432                           ;OverLoad_B1.c: 27: j=1;
  4433  08CC  01AA               	clrf	getLoad_AD@j
  4434  08CD  0AAA               	incf	getLoad_AD@j,f
  4435                           
  4436                           ;OverLoad_B1.c: 28: break;
  4437  08CE  28D7               	goto	l9830
  4438  08CF                     l9826:	
  4439  08CF  3001               	movlw	1
  4440  08D0  00A4               	movwf	??_getLoad_AD
  4441  08D1  0824               	movf	??_getLoad_AD,w
  4442  08D2  07AB               	addwf	getLoad_AD@i,f
  4443  08D3  3005               	movlw	5
  4444  08D4  022B               	subwf	getLoad_AD@i,w
  4445  08D5  1C03               	skipc
  4446  08D6  289E               	goto	l9820
  4447  08D7                     l9830:	
  4448                           
  4449                           ;OverLoad_B1.c: 29: }
  4450                           ;OverLoad_B1.c: 30: }
  4451                           ;OverLoad_B1.c: 31: if(!j)
  4452  08D7  08AA               	movf	getLoad_AD@j,f
  4453  08D8  1D03               	skipz
  4454  08D9  0008               	return
  4455                           
  4456                           ;OverLoad_B1.c: 32: {
  4457                           ;OverLoad_B1.c: 33: for(i=0 ; i<5 ;i++)
  4458  08DA  01AB               	clrf	getLoad_AD@i
  4459  08DB                     L1:	
  4460  08DB  3005               	movlw	5
  4461  08DC  022B               	subwf	getLoad_AD@i,w
  4462  08DD  1803               	btfsc	3,0
  4463  08DE  0008               	return
  4464                           
  4465                           ;OverLoad_B1.c: 34: {
  4466                           ;OverLoad_B1.c: 35: if(Load->AL[i] > Load->ADRES)
  4467  08DF  352B               	lslf	getLoad_AD@i,w
  4468  08E0  3E1A               	addlw	26
  4469  08E1  076E               	addwf	_Load,w
  4470  08E2  00A4               	movwf	??_getLoad_AD
  4471  08E3  0824               	movf	??_getLoad_AD,w
  4472  08E4  0086               	movwf	6
  4473  08E5  3002               	movlw	2	; select bank4/5
  4474  08E6  0087               	movwf	7
  4475  08E7  3F40               	moviw [0]fsr1
  4476  08E8  00A5               	movwf	??_getLoad_AD+1
  4477  08E9  3F41               	moviw [1]fsr1
  4478  08EA  00A6               	movwf	??_getLoad_AD+2
  4479  08EB  086E               	movf	_Load,w
  4480  08EC  3E32               	addlw	50
  4481  08ED  0086               	movwf	6
  4482  08EE  3002               	movlw	2	; select bank4/5
  4483  08EF  0087               	movwf	7
  4484  08F0  3F40               	moviw [0]fsr1
  4485  08F1  00A7               	movwf	??_getLoad_AD+3
  4486  08F2  3F41               	moviw [1]fsr1
  4487  08F3  00A8               	movwf	??_getLoad_AD+4
  4488  08F4  0826               	movf	??_getLoad_AD+2,w
  4489  08F5  0228               	subwf	??_getLoad_AD+4,w
  4490  08F6  1D03               	skipz
  4491  08F7  28FA               	goto	u9905
  4492  08F8  0825               	movf	??_getLoad_AD+1,w
  4493  08F9  0227               	subwf	??_getLoad_AD+3,w
  4494  08FA                     u9905:	
  4495  08FA  1803               	skipnc
  4496  08FB  290E               	goto	l9842
  4497                           
  4498                           ;OverLoad_B1.c: 36: {
  4499                           ;OverLoad_B1.c: 37: Load->AL[i]=Load->ADRES;
  4500  08FC  086E               	movf	_Load,w
  4501  08FD  3E32               	addlw	50
  4502  08FE  0086               	movwf	6
  4503  08FF  3002               	movlw	2	; select bank4/5
  4504  0900  0087               	movwf	7
  4505  0901  352B               	lslf	getLoad_AD@i,w
  4506  0902  3E1A               	addlw	26
  4507  0903  076E               	addwf	_Load,w
  4508  0904  00A4               	movwf	??_getLoad_AD
  4509  0905  0824               	movf	??_getLoad_AD,w
  4510  0906  0084               	movwf	4
  4511  0907  3002               	movlw	2	; select bank4/5
  4512  0908  0085               	movwf	5
  4513  0909  3F40               	moviw [0]fsr1
  4514  090A  3F80               	movwi [0]fsr0
  4515  090B  3F41               	moviw [1]fsr1
  4516  090C  3F81               	movwi [1]fsr0
  4517                           
  4518                           ;OverLoad_B1.c: 38: break;
  4519  090D  0008               	return
  4520  090E                     l9842:	
  4521  090E  3001               	movlw	1
  4522  090F  00A4               	movwf	??_getLoad_AD
  4523  0910  0824               	movf	??_getLoad_AD,w
  4524  0911  07AB               	addwf	getLoad_AD@i,f
  4525  0912  28DB               	goto	L1
  4526  0913                     __end_of_getLoad_AD:	
  4527                           
  4528                           	psect	text4
  4529  2668                     __ptext4:	
  4530 ;; *************** function _getAD *****************
  4531 ;; Defined at:
  4532 ;;		line 309 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  adcon0          1    wreg     unsigned char 
  4535 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2    0[BANK0 ] int 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4547 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;Total ram usage:        4 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    4
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_getLoad_AD
  4558 ;;		_getTemp_AD
  4559 ;;		_getPowerFault_AD
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           
  4564                           ;psect for function _getAD
  4565  2668                     _getAD:	
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4569                           ;getAD@adcon0 stored from wreg
  4570  2668  0020               	movlb	0	; select bank0
  4571  2669  00A3               	movwf	getAD@adcon0
  4572                           
  4573                           ;MCU_16f1518_B1.c: 311: ADCON0=adcon0;
  4574  266A  0823               	movf	getAD@adcon0,w
  4575  266B  0021               	movlb	1	; select bank1
  4576  266C  009D               	movwf	29	;volatile
  4577                           
  4578                           ;MCU_16f1518_B1.c: 312: ADCON1=adcon1;
  4579  266D  0020               	movlb	0	; select bank0
  4580  266E  0820               	movf	getAD@adcon1,w
  4581  266F  0021               	movlb	1	; select bank1
  4582  2670  009E               	movwf	30	;volatile
  4583                           
  4584                           ;MCU_16f1518_B1.c: 313: GO_nDONE=1;
  4585  2671  149D               	bsf	29,1	;volatile
  4586  2672                     l1718:	
  4587                           ;MCU_16f1518_B1.c: 314: while(GO_nDONE);
  4588                           
  4589  2672  189D               	btfsc	29,1	;volatile
  4590  2673  2E72               	goto	l1718
  4591                           
  4592                           ;MCU_16f1518_B1.c: 315: return ((ADRESH*256)+ADRESL);
  4593  2674  081C               	movf	28,w	;volatile
  4594  2675  0020               	movlb	0	; select bank0
  4595  2676  01A1               	clrf	?_getAD+1
  4596  2677  07A1               	addwf	?_getAD+1,f
  4597  2678  0021               	movlb	1	; select bank1
  4598  2679  081B               	movf	27,w	;volatile
  4599  267A  0020               	movlb	0	; select bank0
  4600  267B  01A0               	clrf	?_getAD
  4601  267C  07A0               	addwf	?_getAD,f
  4602  267D  0008               	return
  4603  267E                     __end_of_getAD:	
  4604                           
  4605                           	psect	text5
  4606  07FD                     __ptext5:	
  4607 ;; *************** function _Temp_Main *****************
  4608 ;; Defined at:
  4609 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverTemperature_B1.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;		None               void
  4616 ;; Registers used:
  4617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:   10
  4630 ;; This function calls:
  4631 ;;		_setTemp_Main
  4632 ;; This function is called by:
  4633 ;;		_main
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           
  4638                           ;psect for function _Temp_Main
  4639  07FD                     _Temp_Main:	
  4640                           
  4641                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4645  07FD  318E  26DD         	fcall	_setTemp_Main
  4646  07FF  0008               	return
  4647  0800                     __end_of_Temp_Main:	
  4648                           
  4649                           	psect	text6
  4650  0EDD                     __ptext6:	
  4651 ;; *************** function _setTemp_Main *****************
  4652 ;; Defined at:
  4653 ;;		line 64 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverTemperature_B1.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;		None               void
  4660 ;; Registers used:
  4661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;Total ram usage:        3 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    9
  4674 ;; This function calls:
  4675 ;;		_getLoad_Safe
  4676 ;;		_getPF_Safe
  4677 ;;		_setOverTemp_Exceptions
  4678 ;; This function is called by:
  4679 ;;		_Temp_Main
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           
  4684                           ;psect for function _setTemp_Main
  4685  0EDD                     _setTemp_Main:	
  4686                           
  4687                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  4688                           
  4689                           ;incstack = 0
  4690                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4691  0EDD  087D               	movf	_Temp,w
  4692  0EDE  0086               	movwf	6
  4693  0EDF  3001               	movlw	1	; select bank2/3
  4694  0EE0  0087               	movwf	7
  4695  0EE1  1C01               	btfss	1,0
  4696  0EE2  0008               	return
  4697                           
  4698                           ;OverTemperature_B1.c: 67: {
  4699                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  4700  0EE3  087D               	movf	_Temp,w
  4701  0EE4  0086               	movwf	6
  4702  0EE5  3001               	movlw	1	; select bank2/3
  4703  0EE6  0087               	movwf	7
  4704  0EE7  1901               	btfsc	1,2
  4705  0EE8  2F29               	goto	l9454
  4706                           
  4707                           ;OverTemperature_B1.c: 69: {
  4708                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4709  0EE9  0A7D               	incf	_Temp,w
  4710  0EEA  0086               	movwf	6
  4711  0EEB  3001               	movlw	1	; select bank2/3
  4712  0EEC  0087               	movwf	7
  4713  0EED  3001               	movlw	1
  4714  0EEE  0781               	addwf	1,f
  4715  0EEF  3141               	addfsr 1,1
  4716  0EF0  1803               	skipnc
  4717  0EF1  0A81               	incf	1,f
  4718                           
  4719                           ;OverTemperature_B1.c: 71: if(Temp->Time >= 500)
  4720  0EF2  0A7D               	incf	_Temp,w
  4721  0EF3  0086               	movwf	6
  4722  0EF4  3001               	movlw	1	; select bank2/3
  4723  0EF5  0087               	movwf	7
  4724  0EF6  3F40               	moviw [0]fsr1
  4725  0EF7  0020               	movlb	0	; select bank0
  4726  0EF8  00AD               	movwf	??_setTemp_Main
  4727  0EF9  3F41               	moviw [1]fsr1
  4728  0EFA  00AE               	movwf	??_setTemp_Main+1
  4729  0EFB  3001               	movlw	1
  4730  0EFC  022E               	subwf	??_setTemp_Main+1,w
  4731  0EFD  30F4               	movlw	244
  4732  0EFE  1903               	skipnz
  4733  0EFF  022D               	subwf	??_setTemp_Main,w
  4734  0F00  1C03               	skipc
  4735  0F01  0008               	return
  4736                           
  4737                           ;OverTemperature_B1.c: 72: {
  4738                           ;OverTemperature_B1.c: 73: if(getLoad_Safe() && getPF_Safe())
  4739  0F02  31A4  2479  318E   	fcall	_getLoad_Safe
  4740  0F05  3A00               	xorlw	0
  4741  0F06  1903               	skipnz
  4742  0F07  2F20               	goto	l9452
  4743  0F08  31A4  2401  318E   	fcall	_getPF_Safe
  4744  0F0B  3A00               	xorlw	0
  4745  0F0C  1903               	skipnz
  4746  0F0D  2F20               	goto	l9452
  4747                           
  4748                           ;OverTemperature_B1.c: 74: {
  4749                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4750  0F0E  0A7D               	incf	_Temp,w
  4751  0F0F  0086               	movwf	6
  4752  0F10  3001               	movlw	1	; select bank2/3
  4753  0F11  0087               	movwf	7
  4754  0F12  3000               	movlw	0
  4755  0F13  3FC0               	movwi [0]fsr1
  4756  0F14  3FC1               	movwi [1]fsr1
  4757                           
  4758                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4759  0F15  087D               	movf	_Temp,w
  4760  0F16  0086               	movwf	6
  4761  0F17  3001               	movlw	1	; select bank2/3
  4762  0F18  0087               	movwf	7
  4763  0F19  1501               	bsf	1,2
  4764                           
  4765                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4766  0F1A  087D               	movf	_Temp,w
  4767  0F1B  0086               	movwf	6
  4768  0F1C  3001               	movlw	1	; select bank2/3
  4769  0F1D  0087               	movwf	7
  4770  0F1E  1201               	bcf	1,4
  4771                           
  4772                           ;OverTemperature_B1.c: 78: }
  4773  0F1F  0008               	return
  4774  0F20                     l9452:	
  4775                           
  4776                           ;OverTemperature_B1.c: 79: else
  4777                           ;OverTemperature_B1.c: 80: {
  4778                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4779  0F20  0A7D               	incf	_Temp,w
  4780  0F21  0086               	movwf	6
  4781  0F22  3001               	movlw	1	; select bank2/3
  4782  0F23  0087               	movwf	7
  4783  0F24  30E8               	movlw	232
  4784  0F25  3FC0               	movwi [0]fsr1
  4785  0F26  3003               	movlw	3
  4786  0F27  3FC1               	movwi [1]fsr1
  4787                           
  4788                           ;OverTemperature_B1.c: 82: }
  4789                           ;OverTemperature_B1.c: 83: }
  4790                           ;OverTemperature_B1.c: 84: }
  4791  0F28  0008               	return
  4792  0F29                     l9454:	
  4793                           
  4794                           ;OverTemperature_B1.c: 85: else
  4795                           ;OverTemperature_B1.c: 86: {
  4796                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4797  0F29  0A7D               	incf	_Temp,w
  4798  0F2A  0086               	movwf	6
  4799  0F2B  3001               	movlw	1	; select bank2/3
  4800  0F2C  0087               	movwf	7
  4801  0F2D  3001               	movlw	1
  4802  0F2E  0781               	addwf	1,f
  4803  0F2F  3141               	addfsr 1,1
  4804  0F30  1803               	skipnc
  4805  0F31  0A81               	incf	1,f
  4806                           
  4807                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4808  0F32  0A7D               	incf	_Temp,w
  4809  0F33  0086               	movwf	6
  4810  0F34  3001               	movlw	1	; select bank2/3
  4811  0F35  0087               	movwf	7
  4812  0F36  3F40               	moviw [0]fsr1
  4813  0F37  0020               	movlb	0	; select bank0
  4814  0F38  00AD               	movwf	??_setTemp_Main
  4815  0F39  3F41               	moviw [1]fsr1
  4816  0F3A  00AE               	movwf	??_setTemp_Main+1
  4817  0F3B  3000               	movlw	0
  4818  0F3C  022E               	subwf	??_setTemp_Main+1,w
  4819  0F3D  3004               	movlw	4
  4820  0F3E  1903               	skipnz
  4821  0F3F  022D               	subwf	??_setTemp_Main,w
  4822  0F40  1C03               	skipc
  4823  0F41  0008               	return
  4824                           
  4825                           ;OverTemperature_B1.c: 89: {
  4826                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4827  0F42  0A7D               	incf	_Temp,w
  4828  0F43  0086               	movwf	6
  4829  0F44  3001               	movlw	1	; select bank2/3
  4830  0F45  0087               	movwf	7
  4831  0F46  3000               	movlw	0
  4832  0F47  3FC0               	movwi [0]fsr1
  4833  0F48  3FC1               	movwi [1]fsr1
  4834                           
  4835                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4836  0F49  087D               	movf	_Temp,w
  4837  0F4A  0086               	movwf	6
  4838  0F4B  3001               	movlw	1	; select bank2/3
  4839  0F4C  0087               	movwf	7
  4840  0F4D  1101               	bcf	1,2
  4841                           
  4842                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4843  0F4E  087D               	movf	_Temp,w
  4844  0F4F  3E08               	addlw	8
  4845  0F50  0086               	movwf	6
  4846  0F51  3001               	movlw	1	; select bank2/3
  4847  0F52  0087               	movwf	7
  4848  0F53  087D               	movf	_Temp,w
  4849  0F54  3E04               	addlw	4
  4850  0F55  0084               	movwf	4
  4851  0F56  3001               	movlw	1	; select bank2/3
  4852  0F57  0085               	movwf	5
  4853  0F58  3F40               	moviw [0]fsr1
  4854  0F59  3F80               	movwi [0]fsr0
  4855  0F5A  3F41               	moviw [1]fsr1
  4856  0F5B  3F81               	movwi [1]fsr0
  4857                           
  4858                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4859  0F5C  087D               	movf	_Temp,w
  4860  0F5D  0086               	movwf	6
  4861  0F5E  3001               	movlw	1	; select bank2/3
  4862  0F5F  0087               	movwf	7
  4863  0F60  1C81               	btfss	1,1
  4864  0F61  2F8F               	goto	l9476
  4865                           
  4866                           ;OverTemperature_B1.c: 94: {
  4867                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 600)
  4868  0F62  087D               	movf	_Temp,w
  4869  0F63  3E04               	addlw	4
  4870  0F64  0086               	movwf	6
  4871  0F65  3001               	movlw	1	; select bank2/3
  4872  0F66  0087               	movwf	7
  4873  0F67  3F40               	moviw [0]fsr1
  4874  0F68  00AD               	movwf	??_setTemp_Main
  4875  0F69  3F41               	moviw [1]fsr1
  4876  0F6A  00AE               	movwf	??_setTemp_Main+1
  4877  0F6B  3002               	movlw	2
  4878  0F6C  022E               	subwf	??_setTemp_Main+1,w
  4879  0F6D  3058               	movlw	88
  4880  0F6E  1903               	skipnz
  4881  0F6F  022D               	subwf	??_setTemp_Main,w
  4882  0F70  1C03               	skipc
  4883  0F71  2FBD               	goto	l9486
  4884                           
  4885                           ;OverTemperature_B1.c: 96: {
  4886                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4887  0F72  3001               	movlw	1
  4888  0F73  00AD               	movwf	??_setTemp_Main
  4889  0F74  087D               	movf	_Temp,w
  4890  0F75  3E03               	addlw	3
  4891  0F76  0086               	movwf	6
  4892  0F77  3001               	movlw	1	; select bank2/3
  4893  0F78  0087               	movwf	7
  4894  0F79  082D               	movf	??_setTemp_Main,w
  4895  0F7A  0781               	addwf	1,f
  4896                           
  4897                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4898  0F7B  087D               	movf	_Temp,w
  4899  0F7C  3E03               	addlw	3
  4900  0F7D  0086               	movwf	6
  4901  0F7E  3001               	movlw	1	; select bank2/3
  4902  0F7F  0087               	movwf	7
  4903  0F80  3003               	movlw	3
  4904  0F81  0201               	subwf	1,w
  4905  0F82  1C03               	skipc
  4906  0F83  2FC3               	goto	l9488
  4907                           
  4908                           ;OverTemperature_B1.c: 99: {
  4909                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4910  0F84  087D               	movf	_Temp,w
  4911  0F85  3E03               	addlw	3
  4912  0F86  0086               	movwf	6
  4913  0F87  3001               	movlw	1	; select bank2/3
  4914  0F88  0087               	movwf	7
  4915  0F89  0181               	clrf	1
  4916                           
  4917                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4918  0F8A  3000               	movlw	0
  4919  0F8B  319C  24B4  318E   	fcall	_setOverTemp_Exceptions
  4920                           
  4921                           ;OverTemperature_B1.c: 102: }
  4922                           ;OverTemperature_B1.c: 103: }
  4923  0F8E  2FC3               	goto	l9488
  4924  0F8F                     l9476:	
  4925                           ;OverTemperature_B1.c: 107: }
  4926                           ;OverTemperature_B1.c: 108: }
  4927                           
  4928                           ;OverTemperature_B1.c: 104: else
  4929                           ;OverTemperature_B1.c: 105: {
  4930                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4931                           
  4932                           
  4933                           ;OverTemperature_B1.c: 109: else
  4934                           ;OverTemperature_B1.c: 110: {
  4935                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 550)
  4936  0F8F  087D               	movf	_Temp,w
  4937  0F90  3E04               	addlw	4
  4938  0F91  0086               	movwf	6
  4939  0F92  3001               	movlw	1	; select bank2/3
  4940  0F93  0087               	movwf	7
  4941  0F94  3F40               	moviw [0]fsr1
  4942  0F95  0020               	movlb	0	; select bank0
  4943  0F96  00AD               	movwf	??_setTemp_Main
  4944  0F97  3F41               	moviw [1]fsr1
  4945  0F98  00AE               	movwf	??_setTemp_Main+1
  4946  0F99  3002               	movlw	2
  4947  0F9A  022E               	subwf	??_setTemp_Main+1,w
  4948  0F9B  3027               	movlw	39
  4949  0F9C  1903               	skipnz
  4950  0F9D  022D               	subwf	??_setTemp_Main,w
  4951  0F9E  1803               	skipnc
  4952  0F9F  2FBD               	goto	l9486
  4953                           
  4954                           ;OverTemperature_B1.c: 112: {
  4955                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4956  0FA0  3001               	movlw	1
  4957  0FA1  00AD               	movwf	??_setTemp_Main
  4958  0FA2  087D               	movf	_Temp,w
  4959  0FA3  3E03               	addlw	3
  4960  0FA4  0086               	movwf	6
  4961  0FA5  3001               	movlw	1	; select bank2/3
  4962  0FA6  0087               	movwf	7
  4963  0FA7  082D               	movf	??_setTemp_Main,w
  4964  0FA8  0781               	addwf	1,f
  4965                           
  4966                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4967  0FA9  087D               	movf	_Temp,w
  4968  0FAA  3E03               	addlw	3
  4969  0FAB  0086               	movwf	6
  4970  0FAC  3001               	movlw	1	; select bank2/3
  4971  0FAD  0087               	movwf	7
  4972  0FAE  3003               	movlw	3
  4973  0FAF  0201               	subwf	1,w
  4974  0FB0  1C03               	skipc
  4975  0FB1  2FC3               	goto	l9488
  4976                           
  4977                           ;OverTemperature_B1.c: 115: {
  4978                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4979  0FB2  087D               	movf	_Temp,w
  4980  0FB3  3E03               	addlw	3
  4981  0FB4  0086               	movwf	6
  4982  0FB5  3001               	movlw	1	; select bank2/3
  4983  0FB6  0087               	movwf	7
  4984  0FB7  0181               	clrf	1
  4985                           
  4986                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4987  0FB8  3001               	movlw	1
  4988  0FB9  319C  24B4  318E   	fcall	_setOverTemp_Exceptions
  4989                           
  4990                           ;OverTemperature_B1.c: 118: }
  4991                           ;OverTemperature_B1.c: 119: }
  4992  0FBC  2FC3               	goto	l9488
  4993  0FBD                     l9486:	
  4994                           
  4995                           ;OverTemperature_B1.c: 120: else
  4996                           ;OverTemperature_B1.c: 121: {
  4997                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  4998  0FBD  087D               	movf	_Temp,w
  4999  0FBE  3E03               	addlw	3
  5000  0FBF  0086               	movwf	6
  5001  0FC0  3001               	movlw	1	; select bank2/3
  5002  0FC1  0087               	movwf	7
  5003  0FC2  0181               	clrf	1
  5004  0FC3                     l9488:	
  5005                           
  5006                           ;OverTemperature_B1.c: 123: }
  5007                           ;OverTemperature_B1.c: 124: }
  5008                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  5009  0FC3  087D               	movf	_Temp,w
  5010  0FC4  0086               	movwf	6
  5011  0FC5  3001               	movlw	1	; select bank2/3
  5012  0FC6  0087               	movwf	7
  5013  0FC7  1881               	btfsc	1,1
  5014  0FC8  2FCE               	goto	l9492
  5015                           
  5016                           ;OverTemperature_B1.c: 126: {
  5017                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  5018  0FC9  087D               	movf	_Temp,w
  5019  0FCA  0086               	movwf	6
  5020  0FCB  3001               	movlw	1	; select bank2/3
  5021  0FCC  0087               	movwf	7
  5022  0FCD  1601               	bsf	1,4
  5023  0FCE                     l9492:	
  5024                           
  5025                           ;OverTemperature_B1.c: 128: }
  5026                           ;OverTemperature_B1.c: 129: Product->Data[24]=Temp->AD >> 8;
  5027  0FCE  087D               	movf	_Temp,w
  5028  0FCF  3E04               	addlw	4
  5029  0FD0  0086               	movwf	6
  5030  0FD1  3001               	movlw	1	; select bank2/3
  5031  0FD2  0087               	movwf	7
  5032  0FD3  3F40               	moviw [0]fsr1
  5033  0FD4  0020               	movlb	0	; select bank0
  5034  0FD5  00AD               	movwf	??_setTemp_Main
  5035  0FD6  3F41               	moviw [1]fsr1
  5036  0FD7  00AE               	movwf	??_setTemp_Main+1
  5037  0FD8  082E               	movf	??_setTemp_Main+1,w
  5038  0FD9  00AF               	movwf	??_setTemp_Main+2
  5039  0FDA  086F               	movf	_Product,w
  5040  0FDB  3E18               	addlw	24
  5041  0FDC  0086               	movwf	6
  5042  0FDD  3001               	movlw	1	; select bank2/3
  5043  0FDE  0087               	movwf	7
  5044  0FDF  082F               	movf	??_setTemp_Main+2,w
  5045  0FE0  0081               	movwf	1
  5046                           
  5047                           ;OverTemperature_B1.c: 130: Product->Data[25]=Temp->AD;
  5048  0FE1  087D               	movf	_Temp,w
  5049  0FE2  3E04               	addlw	4
  5050  0FE3  0086               	movwf	6
  5051  0FE4  3001               	movlw	1	; select bank2/3
  5052  0FE5  0087               	movwf	7
  5053  0FE6  0801               	movf	1,w
  5054  0FE7  00AD               	movwf	??_setTemp_Main
  5055  0FE8  086F               	movf	_Product,w
  5056  0FE9  3E19               	addlw	25
  5057  0FEA  0086               	movwf	6
  5058  0FEB  3001               	movlw	1	; select bank2/3
  5059  0FEC  0087               	movwf	7
  5060  0FED  082D               	movf	??_setTemp_Main,w
  5061  0FEE  0081               	movwf	1
  5062                           
  5063                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  5064  0FEF  087D               	movf	_Temp,w
  5065  0FF0  3E06               	addlw	6
  5066  0FF1  0086               	movwf	6
  5067  0FF2  3001               	movlw	1	; select bank2/3
  5068  0FF3  0087               	movwf	7
  5069  0FF4  3000               	movlw	0
  5070  0FF5  3FC0               	movwi [0]fsr1
  5071  0FF6  3FC1               	movwi [1]fsr1
  5072                           
  5073                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  5074  0FF7  087D               	movf	_Temp,w
  5075  0FF8  3E08               	addlw	8
  5076  0FF9  0086               	movwf	6
  5077  0FFA  3001               	movlw	1	; select bank2/3
  5078  0FFB  0087               	movwf	7
  5079  0FFC  3000               	movlw	0
  5080  0FFD  3FC0               	movwi [0]fsr1
  5081  0FFE  3FC1               	movwi [1]fsr1
  5082  0FFF  0008               	return
  5083  1000                     __end_of_setTemp_Main:	
  5084                           
  5085                           	psect	text7
  5086  1CB4                     __ptext7:	
  5087 ;; *************** function _setOverTemp_Exceptions *****************
  5088 ;; Defined at:
  5089 ;;		line 138 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverTemperature_B1.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  command         1    wreg     unsigned char 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  command         1   12[BANK0 ] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;		None               void
  5096 ;; Registers used:
  5097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;Total ram usage:        2 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    8
  5110 ;; This function calls:
  5111 ;;		_DimmerLights_Exceptions
  5112 ;;		_setBuz
  5113 ;;		_setLED
  5114 ;;		_setRF_Enable
  5115 ;;		_setSw_Enable
  5116 ;; This function is called by:
  5117 ;;		_setTemp_Main
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           
  5122                           ;psect for function _setOverTemp_Exceptions
  5123  1CB4                     _setOverTemp_Exceptions:	
  5124                           
  5125                           ;incstack = 0
  5126                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5127                           ;setOverTemp_Exceptions@command stored from wreg
  5128  1CB4  0020               	movlb	0	; select bank0
  5129  1CB5  00AC               	movwf	setOverTemp_Exceptions@command
  5130                           
  5131                           ;OverTemperature_B1.c: 140: Temp->ERROR=command;
  5132  1CB6  087D               	movf	_Temp,w
  5133  1CB7  0086               	movwf	6
  5134  1CB8  3001               	movlw	1	; select bank2/3
  5135  1CB9  0087               	movwf	7
  5136  1CBA  082C               	movf	setOverTemp_Exceptions@command,w
  5137  1CBB  1081               	bcf	1,1
  5138  1CBC  1D03               	skipz
  5139  1CBD  1481               	bsf	1,1
  5140                           
  5141                           ;OverTemperature_B1.c: 141: Temp->Safe=(~command) & 0x01;
  5142  1CBE  092C               	comf	setOverTemp_Exceptions@command,w
  5143  1CBF  3901               	andlw	1
  5144  1CC0  00AB               	movwf	??_setOverTemp_Exceptions
  5145  1CC1  087D               	movf	_Temp,w
  5146  1CC2  0086               	movwf	6
  5147  1CC3  3001               	movlw	1	; select bank2/3
  5148  1CC4  0087               	movwf	7
  5149  1CC5  0EAB               	swapf	??_setOverTemp_Exceptions,f
  5150  1CC6  0801               	movf	1,w
  5151  1CC7  062B               	xorwf	??_setOverTemp_Exceptions,w
  5152  1CC8  39EF               	andlw	-17
  5153  1CC9  062B               	xorwf	??_setOverTemp_Exceptions,w
  5154  1CCA  0081               	movwf	1
  5155                           
  5156                           ;OverTemperature_B1.c: 142: if(command)
  5157  1CCB  082C               	movf	setOverTemp_Exceptions@command,w
  5158  1CCC  1903               	btfsc	3,2
  5159  1CCD  2CD3               	goto	l9098
  5160                           
  5161                           ;OverTemperature_B1.c: 143: {
  5162                           ;OverTemperature_B1.c: 144: DimmerLights_Exceptions(1);
  5163  1CCE  3001               	movlw	1
  5164  1CCF  3190  20CE  319C   	fcall	_DimmerLights_Exceptions
  5165                           
  5166                           ;OverTemperature_B1.c: 148: }
  5167  1CD2  2CDC               	goto	l2160
  5168  1CD3                     l9098:	
  5169                           
  5170                           ;OverTemperature_B1.c: 149: else
  5171                           ;OverTemperature_B1.c: 150: {
  5172                           ;OverTemperature_B1.c: 151: setBuz(2,100);
  5173  1CD3  3064               	movlw	100
  5174  1CD4  0020               	movlb	0	; select bank0
  5175  1CD5  00A6               	movwf	setBuz@time
  5176  1CD6  3000               	movlw	0
  5177  1CD7  00A7               	movwf	setBuz@time+1
  5178  1CD8  3002               	movlw	2
  5179  1CD9  3193  23C7  319C   	fcall	_setBuz
  5180  1CDC                     l2160:	
  5181                           
  5182                           ;OverTemperature_B1.c: 152: }
  5183                           ;OverTemperature_B1.c: 155: setLED(99,command+10);
  5184  1CDC  0020               	movlb	0	; select bank0
  5185  1CDD  082C               	movf	setOverTemp_Exceptions@command,w
  5186  1CDE  3E0A               	addlw	10
  5187  1CDF  00AB               	movwf	??_setOverTemp_Exceptions
  5188  1CE0  082B               	movf	??_setOverTemp_Exceptions,w
  5189  1CE1  00A2               	movwf	setLED@command
  5190  1CE2  3063               	movlw	99
  5191  1CE3  319F  27A2  319C   	fcall	_setLED
  5192                           
  5193                           ;OverTemperature_B1.c: 157: setSw_Enable((~command) & 0x01);
  5194  1CE6  0020               	movlb	0	; select bank0
  5195  1CE7  092C               	comf	setOverTemp_Exceptions@command,w
  5196  1CE8  3901               	andlw	1
  5197  1CE9  31A7  2748  319C   	fcall	_setSw_Enable
  5198                           
  5199                           ;OverTemperature_B1.c: 159: setRF_Enable(1,(~command) & 0x01);
  5200  1CEC  0020               	movlb	0	; select bank0
  5201  1CED  092C               	comf	setOverTemp_Exceptions@command,w
  5202  1CEE  3901               	andlw	1
  5203  1CEF  00AB               	movwf	??_setOverTemp_Exceptions
  5204  1CF0  082B               	movf	??_setOverTemp_Exceptions,w
  5205  1CF1  00A2               	movwf	setRF_Enable@command
  5206  1CF2  3001               	movlw	1
  5207  1CF3  3199  21A8         	fcall	_setRF_Enable
  5208  1CF5  0008               	return
  5209  1CF6                     __end_of_setOverTemp_Exceptions:	
  5210                           
  5211                           	psect	text8
  5212  23AB                     __ptext8:	
  5213 ;; *************** function _Temp_Initialization *****************
  5214 ;; Defined at:
  5215 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverTemperature_B1.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;		None               void
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;Total ram usage:        0 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    5
  5236 ;; This function calls:
  5237 ;;		_setTemp_Initialization
  5238 ;; This function is called by:
  5239 ;;		_main
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function _Temp_Initialization
  5245  23AB                     _Temp_Initialization:	
  5246                           
  5247                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5251  23AB  31A4  2484         	fcall	_setTemp_Initialization
  5252  23AD  0008               	return
  5253  23AE                     __end_of_Temp_Initialization:	
  5254                           
  5255                           	psect	text9
  5256  2484                     __ptext9:	
  5257 ;; *************** function _setTemp_Initialization *****************
  5258 ;; Defined at:
  5259 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverTemperature_B1.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;		None               void
  5266 ;; Registers used:
  5267 ;;		wreg, fsr1l, fsr1h
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;Total ram usage:        1 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    4
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_Temp_Initialization
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _setTemp_Initialization
  5289  2484                     _setTemp_Initialization:	
  5290                           
  5291                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  5292                           
  5293                           ;incstack = 0
  5294                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  5295  2484  3020               	movlw	_Temp1& (0+255)
  5296  2485  0020               	movlb	0	; select bank0
  5297  2486  00A0               	movwf	??_setTemp_Initialization
  5298  2487  0820               	movf	??_setTemp_Initialization,w
  5299  2488  00FD               	movwf	_Temp
  5300                           
  5301                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  5302  2489  087D               	movf	_Temp,w
  5303  248A  0086               	movwf	6
  5304  248B  3001               	movlw	1	; select bank2/3
  5305  248C  0087               	movwf	7
  5306  248D  1601               	bsf	1,4
  5307  248E  0008               	return
  5308  248F                     __end_of_setTemp_Initialization:	
  5309                           
  5310                           	psect	text10
  5311  2411                     __ptext10:	
  5312 ;; *************** function _Switch_Main *****************
  5313 ;; Defined at:
  5314 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Switch_B1.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;		None               void
  5321 ;; Registers used:
  5322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:   10
  5335 ;; This function calls:
  5336 ;;		_setSw_Main
  5337 ;; This function is called by:
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           
  5343                           ;psect for function _Switch_Main
  5344  2411                     _Switch_Main:	
  5345                           
  5346                           ;Switch_B1.c: 65: setSw_Main(1);
  5347                           
  5348                           ;incstack = 0
  5349                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5350  2411  3001               	movlw	1
  5351  2412  3186  2650  31A4   	fcall	_setSw_Main
  5352                           
  5353                           ;Switch_B1.c: 69: setSw_Main(2);
  5354  2415  3002               	movlw	2
  5355  2416  3186  2650         	fcall	_setSw_Main
  5356  2418  0008               	return
  5357  2419                     __end_of_Switch_Main:	
  5358                           
  5359                           	psect	text11
  5360  0650                     __ptext11:	
  5361 ;; *************** function _setSw_Main *****************
  5362 ;; Defined at:
  5363 ;;		line 112 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Switch_B1.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  sw              1    wreg     unsigned char 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  sw              1   73[BANK0 ] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;		None               void
  5370 ;; Registers used:
  5371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;Total ram usage:        5 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    9
  5384 ;; This function calls:
  5385 ;;		_SwPointSelect
  5386 ;;		_Sw_DimmerAdjFunc
  5387 ;;		_Sw_DimmerOffFunc
  5388 ;;		_Sw_DimmerOnFunc
  5389 ;;		_setBuz
  5390 ;;		_setRF_Learn
  5391 ;; This function is called by:
  5392 ;;		_Switch_Main
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _setSw_Main
  5398  0650                     _setSw_Main:	
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5402                           ;setSw_Main@sw stored from wreg
  5403  0650  0020               	movlb	0	; select bank0
  5404  0651  00E9               	movwf	setSw_Main@sw
  5405                           
  5406                           ;Switch_B1.c: 114: if(Sw->Enable)
  5407  0652  086D               	movf	_Sw,w
  5408  0653  0086               	movwf	6
  5409  0654  3001               	movlw	1	; select bank2/3
  5410  0655  0087               	movwf	7
  5411  0656  1C01               	btfss	1,0
  5412  0657  0008               	return
  5413                           
  5414                           ;Switch_B1.c: 115: {
  5415                           ;Switch_B1.c: 116: SwPointSelect(sw);
  5416  0658  0869               	movf	setSw_Main@sw,w
  5417  0659  31A5  25E9  3186   	fcall	_SwPointSelect
  5418                           
  5419                           ;Switch_B1.c: 133: if(sw == 1)
  5420  065C  0020               	movlb	0	; select bank0
  5421  065D  0869               	movf	setSw_Main@sw,w
  5422  065E  3A01               	xorlw	1
  5423  065F  1D03               	skipz
  5424  0660  2E6D               	goto	l9632
  5425                           
  5426                           ;Switch_B1.c: 134: {
  5427                           ;Switch_B1.c: 135: Sw->Touch=(RA6 || RA4)?1:0;
  5428  0661  01E7               	clrf	_setSw_Main$4704
  5429  0662  0AE7               	incf	_setSw_Main$4704,f
  5430  0663  1F0C               	btfss	12,6	;volatile
  5431  0664  1A0C               	btfsc	12,4	;volatile
  5432  0665  2E67               	goto	l9630
  5433  0666  01E7               	clrf	_setSw_Main$4704
  5434  0667                     l9630:	
  5435  0667  086D               	movf	_Sw,w
  5436  0668  0086               	movwf	6
  5437  0669  3001               	movlw	1	; select bank2/3
  5438  066A  0087               	movwf	7
  5439  066B  0867               	movf	_setSw_Main$4704,w
  5440  066C  2E7C               	goto	L2
  5441  066D                     l9632:	
  5442                           ;Switch_B1.c: 136: }
  5443                           
  5444                           
  5445                           ;Switch_B1.c: 137: else if(sw == 2)
  5446  066D  0869               	movf	setSw_Main@sw,w
  5447  066E  3A02               	xorlw	2
  5448  066F  1D03               	skipz
  5449  0670  2E7F               	goto	l9642
  5450                           
  5451                           ;Switch_B1.c: 138: {
  5452                           ;Switch_B1.c: 139: Sw->Touch=(RA0 || RB1)?1:0;
  5453  0671  01E8               	clrf	_setSw_Main$4705
  5454  0672  0AE8               	incf	_setSw_Main$4705,f
  5455  0673  1C0C               	btfss	12,0	;volatile
  5456  0674  188D               	btfsc	13,1	;volatile
  5457  0675  2E77               	goto	l9640
  5458  0676  01E8               	clrf	_setSw_Main$4705
  5459  0677                     l9640:	
  5460  0677  086D               	movf	_Sw,w
  5461  0678  0086               	movwf	6
  5462  0679  3001               	movlw	1	; select bank2/3
  5463  067A  0087               	movwf	7
  5464  067B  0868               	movf	_setSw_Main$4705,w
  5465  067C                     L2:	
  5466  067C  1081               	bcf	1,1
  5467  067D  1D03               	skipz
  5468  067E  1481               	bsf	1,1
  5469  067F                     l9642:	
  5470                           
  5471                           ;Switch_B1.c: 140: }
  5472                           ;Switch_B1.c: 148: if(Sw->Touch)
  5473  067F  086D               	movf	_Sw,w
  5474  0680  0086               	movwf	6
  5475  0681  3001               	movlw	1	; select bank2/3
  5476  0682  0087               	movwf	7
  5477  0683  1C81               	btfss	1,1
  5478  0684  2F56               	goto	l9690
  5479                           
  5480                           ;Switch_B1.c: 149: {
  5481                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  5482  0685  086D               	movf	_Sw,w
  5483  0686  0086               	movwf	6
  5484  0687  3001               	movlw	1	; select bank2/3
  5485  0688  0087               	movwf	7
  5486  0689  1901               	btfsc	1,2
  5487  068A  2EAC               	goto	l9656
  5488                           
  5489                           ;Switch_B1.c: 151: {
  5490                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  5491  068B  3001               	movlw	1
  5492  068C  00E5               	movwf	??_setSw_Main
  5493  068D  086D               	movf	_Sw,w
  5494  068E  3E02               	addlw	2
  5495  068F  0086               	movwf	6
  5496  0690  3001               	movlw	1	; select bank2/3
  5497  0691  0087               	movwf	7
  5498  0692  0865               	movf	??_setSw_Main,w
  5499  0693  0781               	addwf	1,f
  5500                           
  5501                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  5502  0694  086D               	movf	_Sw,w
  5503  0695  3E02               	addlw	2
  5504  0696  0086               	movwf	6
  5505  0697  3001               	movlw	1	; select bank2/3
  5506  0698  0087               	movwf	7
  5507  0699  3005               	movlw	5
  5508  069A  0201               	subwf	1,w
  5509  069B  1C03               	skipc
  5510  069C  0008               	return
  5511                           
  5512                           ;Switch_B1.c: 154: {
  5513                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  5514  069D  086D               	movf	_Sw,w
  5515  069E  3E02               	addlw	2
  5516  069F  0086               	movwf	6
  5517  06A0  3001               	movlw	1	; select bank2/3
  5518  06A1  0087               	movwf	7
  5519  06A2  0181               	clrf	1
  5520                           
  5521                           ;Switch_B1.c: 156: Sw->Debounce=1;
  5522  06A3  086D               	movf	_Sw,w
  5523  06A4  0086               	movwf	6
  5524  06A5  3001               	movlw	1	; select bank2/3
  5525  06A6  0087               	movwf	7
  5526  06A7  1501               	bsf	1,2
  5527                           
  5528                           ;Switch_B1.c: 159: Sw_DimmerOnFunc(sw);
  5529  06A8  0869               	movf	setSw_Main@sw,w
  5530  06A9  3192  2278         	fcall	_Sw_DimmerOnFunc
  5531                           
  5532                           ;Switch_B1.c: 162: }
  5533                           ;Switch_B1.c: 163: }
  5534  06AB  0008               	return
  5535  06AC                     l9656:	
  5536                           
  5537                           ;Switch_B1.c: 164: else
  5538                           ;Switch_B1.c: 165: {
  5539                           ;Switch_B1.c: 166: if(!Sw->Hold1)
  5540  06AC  0020               	movlb	0	; select bank0
  5541  06AD  086D               	movf	_Sw,w
  5542  06AE  0086               	movwf	6
  5543  06AF  3001               	movlw	1	; select bank2/3
  5544  06B0  0087               	movwf	7
  5545  06B1  1981               	btfsc	1,3
  5546  06B2  2EDE               	goto	l9666
  5547                           
  5548                           ;Switch_B1.c: 167: {
  5549                           ;Switch_B1.c: 168: Sw->Hold1Time++;
  5550  06B3  086D               	movf	_Sw,w
  5551  06B4  3E03               	addlw	3
  5552  06B5  0086               	movwf	6
  5553  06B6  3001               	movlw	1	; select bank2/3
  5554  06B7  0087               	movwf	7
  5555  06B8  3001               	movlw	1
  5556  06B9  0781               	addwf	1,f
  5557  06BA  3141               	addfsr 1,1
  5558  06BB  1803               	skipnc
  5559  06BC  0A81               	incf	1,f
  5560                           
  5561                           ;Switch_B1.c: 169: if(Sw->Hold1Time >= 150)
  5562  06BD  086D               	movf	_Sw,w
  5563  06BE  3E03               	addlw	3
  5564  06BF  0086               	movwf	6
  5565  06C0  3001               	movlw	1	; select bank2/3
  5566  06C1  0087               	movwf	7
  5567  06C2  3F40               	moviw [0]fsr1
  5568  06C3  00E5               	movwf	??_setSw_Main
  5569  06C4  3F41               	moviw [1]fsr1
  5570  06C5  00E6               	movwf	??_setSw_Main+1
  5571  06C6  3000               	movlw	0
  5572  06C7  0266               	subwf	??_setSw_Main+1,w
  5573  06C8  3096               	movlw	150
  5574  06C9  1903               	skipnz
  5575  06CA  0265               	subwf	??_setSw_Main,w
  5576  06CB  1C03               	skipc
  5577  06CC  0008               	return
  5578                           
  5579                           ;Switch_B1.c: 170: {
  5580                           ;Switch_B1.c: 171: Sw->Hold1Time=0;
  5581  06CD  086D               	movf	_Sw,w
  5582  06CE  3E03               	addlw	3
  5583  06CF  0086               	movwf	6
  5584  06D0  3001               	movlw	1	; select bank2/3
  5585  06D1  0087               	movwf	7
  5586  06D2  3000               	movlw	0
  5587  06D3  3FC0               	movwi [0]fsr1
  5588  06D4  3FC1               	movwi [1]fsr1
  5589                           
  5590                           ;Switch_B1.c: 172: Sw->Hold1=1;
  5591  06D5  086D               	movf	_Sw,w
  5592  06D6  0086               	movwf	6
  5593  06D7  3001               	movlw	1	; select bank2/3
  5594  06D8  0087               	movwf	7
  5595  06D9  1581               	bsf	1,3
  5596                           
  5597                           ;Switch_B1.c: 175: Sw_DimmerAdjFunc(sw);
  5598  06DA  0869               	movf	setSw_Main@sw,w
  5599  06DB  3199  2131         	fcall	_Sw_DimmerAdjFunc
  5600                           
  5601                           ;Switch_B1.c: 178: }
  5602                           ;Switch_B1.c: 179: }
  5603  06DD  0008               	return
  5604  06DE                     l9666:	
  5605                           
  5606                           ;Switch_B1.c: 180: else
  5607                           ;Switch_B1.c: 181: {
  5608                           ;Switch_B1.c: 182: if(!Sw->Hold2)
  5609  06DE  0020               	movlb	0	; select bank0
  5610  06DF  086D               	movf	_Sw,w
  5611  06E0  0086               	movwf	6
  5612  06E1  3001               	movlw	1	; select bank2/3
  5613  06E2  0087               	movwf	7
  5614  06E3  1A01               	btfsc	1,4
  5615  06E4  2F23               	goto	l9680
  5616                           
  5617                           ;Switch_B1.c: 183: {
  5618                           ;Switch_B1.c: 184: Sw->Hold2Time++;
  5619  06E5  086D               	movf	_Sw,w
  5620  06E6  3E05               	addlw	5
  5621  06E7  0086               	movwf	6
  5622  06E8  3001               	movlw	1	; select bank2/3
  5623  06E9  0087               	movwf	7
  5624  06EA  3001               	movlw	1
  5625  06EB  0781               	addwf	1,f
  5626  06EC  3141               	addfsr 1,1
  5627  06ED  1803               	skipnc
  5628  06EE  0A81               	incf	1,f
  5629                           
  5630                           ;Switch_B1.c: 185: if(Sw->Hold2Time >= 150)
  5631  06EF  086D               	movf	_Sw,w
  5632  06F0  3E05               	addlw	5
  5633  06F1  0086               	movwf	6
  5634  06F2  3001               	movlw	1	; select bank2/3
  5635  06F3  0087               	movwf	7
  5636  06F4  3F40               	moviw [0]fsr1
  5637  06F5  00E5               	movwf	??_setSw_Main
  5638  06F6  3F41               	moviw [1]fsr1
  5639  06F7  00E6               	movwf	??_setSw_Main+1
  5640  06F8  3000               	movlw	0
  5641  06F9  0266               	subwf	??_setSw_Main+1,w
  5642  06FA  3096               	movlw	150
  5643  06FB  1903               	skipnz
  5644  06FC  0265               	subwf	??_setSw_Main,w
  5645  06FD  1C03               	skipc
  5646  06FE  0008               	return
  5647                           
  5648                           ;Switch_B1.c: 186: {
  5649                           ;Switch_B1.c: 187: Sw->Hold2Time=0;
  5650  06FF  086D               	movf	_Sw,w
  5651  0700  3E05               	addlw	5
  5652  0701  0086               	movwf	6
  5653  0702  3001               	movlw	1	; select bank2/3
  5654  0703  0087               	movwf	7
  5655  0704  3000               	movlw	0
  5656  0705  3FC0               	movwi [0]fsr1
  5657  0706  3FC1               	movwi [1]fsr1
  5658                           
  5659                           ;Switch_B1.c: 188: Sw->Hold2=1;
  5660  0707  086D               	movf	_Sw,w
  5661  0708  0086               	movwf	6
  5662  0709  3001               	movlw	1	; select bank2/3
  5663  070A  0087               	movwf	7
  5664  070B  1601               	bsf	1,4
  5665                           
  5666                           ;Switch_B1.c: 192: setRF_Learn(1,1);
  5667  070C  01A2               	clrf	setRF_Learn@command
  5668  070D  0AA2               	incf	setRF_Learn@command,f
  5669  070E  3001               	movlw	1
  5670  070F  31A5  2519  3186   	fcall	_setRF_Learn
  5671                           
  5672                           ;Switch_B1.c: 194: if(TMain->First)
  5673  0712  0021               	movlb	1	; select bank1
  5674  0713  0869               	movf	_TMain^(0+128),w
  5675  0714  3E03               	addlw	3
  5676  0715  0086               	movwf	6
  5677  0716  3001               	movlw	1	; select bank2/3
  5678  0717  0087               	movwf	7
  5679  0718  1C81               	btfss	1,1
  5680  0719  0008               	return
  5681                           
  5682                           ;Switch_B1.c: 195: {
  5683                           ;Switch_B1.c: 196: setBuz(2,100);
  5684  071A  3064               	movlw	100
  5685  071B  0020               	movlb	0	; select bank0
  5686  071C  00A6               	movwf	setBuz@time
  5687  071D  3000               	movlw	0
  5688  071E  00A7               	movwf	setBuz@time+1
  5689  071F  3002               	movlw	2
  5690  0720  3193  23C7         	fcall	_setBuz
  5691                           
  5692                           ;Switch_B1.c: 197: }
  5693                           ;Switch_B1.c: 199: }
  5694                           ;Switch_B1.c: 200: }
  5695  0722  0008               	return
  5696  0723                     l9680:	
  5697                           
  5698                           ;Switch_B1.c: 201: else
  5699                           ;Switch_B1.c: 202: {
  5700                           ;Switch_B1.c: 203: if(!Sw->Hold3)
  5701  0723  0020               	movlb	0	; select bank0
  5702  0724  086D               	movf	_Sw,w
  5703  0725  0086               	movwf	6
  5704  0726  3001               	movlw	1	; select bank2/3
  5705  0727  0087               	movwf	7
  5706  0728  1A81               	btfsc	1,5
  5707  0729  0008               	return
  5708                           
  5709                           ;Switch_B1.c: 204: {
  5710                           ;Switch_B1.c: 205: Sw->Hold3Time++;
  5711  072A  086D               	movf	_Sw,w
  5712  072B  3E07               	addlw	7
  5713  072C  0086               	movwf	6
  5714  072D  3001               	movlw	1	; select bank2/3
  5715  072E  0087               	movwf	7
  5716  072F  3001               	movlw	1
  5717  0730  0781               	addwf	1,f
  5718  0731  3141               	addfsr 1,1
  5719  0732  1803               	skipnc
  5720  0733  0A81               	incf	1,f
  5721                           
  5722                           ;Switch_B1.c: 206: if(Sw->Hold3Time >= 300)
  5723  0734  086D               	movf	_Sw,w
  5724  0735  3E07               	addlw	7
  5725  0736  0086               	movwf	6
  5726  0737  3001               	movlw	1	; select bank2/3
  5727  0738  0087               	movwf	7
  5728  0739  3F40               	moviw [0]fsr1
  5729  073A  00E5               	movwf	??_setSw_Main
  5730  073B  3F41               	moviw [1]fsr1
  5731  073C  00E6               	movwf	??_setSw_Main+1
  5732  073D  3001               	movlw	1
  5733  073E  0266               	subwf	??_setSw_Main+1,w
  5734  073F  302C               	movlw	44
  5735  0740  1903               	skipnz
  5736  0741  0265               	subwf	??_setSw_Main,w
  5737  0742  1C03               	skipc
  5738  0743  0008               	return
  5739                           
  5740                           ;Switch_B1.c: 207: {
  5741                           ;Switch_B1.c: 208: Sw->Hold3Time=0;
  5742  0744  086D               	movf	_Sw,w
  5743  0745  3E07               	addlw	7
  5744  0746  0086               	movwf	6
  5745  0747  3001               	movlw	1	; select bank2/3
  5746  0748  0087               	movwf	7
  5747  0749  3000               	movlw	0
  5748  074A  3FC0               	movwi [0]fsr1
  5749  074B  3FC1               	movwi [1]fsr1
  5750                           
  5751                           ;Switch_B1.c: 209: Sw->Hold3=1;
  5752  074C  086D               	movf	_Sw,w
  5753  074D  0086               	movwf	6
  5754  074E  3001               	movlw	1	; select bank2/3
  5755  074F  0087               	movwf	7
  5756  0750  1681               	bsf	1,5
  5757                           
  5758                           ;Switch_B1.c: 212: setRF_Learn(1,0);
  5759  0751  01A2               	clrf	setRF_Learn@command
  5760  0752  3001               	movlw	1
  5761  0753  31A5  2519         	fcall	_setRF_Learn
  5762                           
  5763                           ;Switch_B1.c: 215: }
  5764                           ;Switch_B1.c: 216: }
  5765                           ;Switch_B1.c: 217: }
  5766                           ;Switch_B1.c: 218: }
  5767                           ;Switch_B1.c: 219: }
  5768                           ;Switch_B1.c: 220: }
  5769  0755  0008               	return
  5770  0756                     l9690:	
  5771                           
  5772                           ;Switch_B1.c: 221: else
  5773                           ;Switch_B1.c: 222: {
  5774                           ;Switch_B1.c: 223: if(Sw->Debounce)
  5775  0756  0020               	movlb	0	; select bank0
  5776  0757  086D               	movf	_Sw,w
  5777  0758  0086               	movwf	6
  5778  0759  3001               	movlw	1	; select bank2/3
  5779  075A  0087               	movwf	7
  5780  075B  1D01               	btfss	1,2
  5781  075C  0008               	return
  5782                           
  5783                           ;Switch_B1.c: 224: {
  5784                           ;Switch_B1.c: 225: Sw->DebounceTime++;
  5785  075D  3001               	movlw	1
  5786  075E  00E5               	movwf	??_setSw_Main
  5787  075F  086D               	movf	_Sw,w
  5788  0760  3E02               	addlw	2
  5789  0761  0086               	movwf	6
  5790  0762  3001               	movlw	1	; select bank2/3
  5791  0763  0087               	movwf	7
  5792  0764  0865               	movf	??_setSw_Main,w
  5793  0765  0781               	addwf	1,f
  5794                           
  5795                           ;Switch_B1.c: 226: if(Sw->DebounceTime >= 5)
  5796  0766  086D               	movf	_Sw,w
  5797  0767  3E02               	addlw	2
  5798  0768  0086               	movwf	6
  5799  0769  3001               	movlw	1	; select bank2/3
  5800  076A  0087               	movwf	7
  5801  076B  3005               	movlw	5
  5802  076C  0201               	subwf	1,w
  5803  076D  1C03               	skipc
  5804  076E  0008               	return
  5805                           
  5806                           ;Switch_B1.c: 227: {
  5807                           ;Switch_B1.c: 228: Sw->DebounceTime=0;
  5808  076F  086D               	movf	_Sw,w
  5809  0770  3E02               	addlw	2
  5810  0771  0086               	movwf	6
  5811  0772  3001               	movlw	1	; select bank2/3
  5812  0773  0087               	movwf	7
  5813  0774  0181               	clrf	1
  5814                           
  5815                           ;Switch_B1.c: 229: Sw->Debounce=0;
  5816  0775  086D               	movf	_Sw,w
  5817  0776  0086               	movwf	6
  5818  0777  3001               	movlw	1	; select bank2/3
  5819  0778  0087               	movwf	7
  5820  0779  1101               	bcf	1,2
  5821                           
  5822                           ;Switch_B1.c: 230: Sw->Hold1Time=0;
  5823  077A  086D               	movf	_Sw,w
  5824  077B  3E03               	addlw	3
  5825  077C  0086               	movwf	6
  5826  077D  3001               	movlw	1	; select bank2/3
  5827  077E  0087               	movwf	7
  5828  077F  3000               	movlw	0
  5829  0780  3FC0               	movwi [0]fsr1
  5830  0781  3FC1               	movwi [1]fsr1
  5831                           
  5832                           ;Switch_B1.c: 231: Sw->Hold1=0;
  5833  0782  086D               	movf	_Sw,w
  5834  0783  0086               	movwf	6
  5835  0784  3001               	movlw	1	; select bank2/3
  5836  0785  0087               	movwf	7
  5837  0786  1181               	bcf	1,3
  5838                           
  5839                           ;Switch_B1.c: 232: Sw->Hold2Time=0;
  5840  0787  086D               	movf	_Sw,w
  5841  0788  3E05               	addlw	5
  5842  0789  0086               	movwf	6
  5843  078A  3001               	movlw	1	; select bank2/3
  5844  078B  0087               	movwf	7
  5845  078C  3000               	movlw	0
  5846  078D  3FC0               	movwi [0]fsr1
  5847  078E  3FC1               	movwi [1]fsr1
  5848                           
  5849                           ;Switch_B1.c: 233: Sw->Hold2=0;
  5850  078F  086D               	movf	_Sw,w
  5851  0790  0086               	movwf	6
  5852  0791  3001               	movlw	1	; select bank2/3
  5853  0792  0087               	movwf	7
  5854  0793  1201               	bcf	1,4
  5855                           
  5856                           ;Switch_B1.c: 234: Sw->Hold3Time=0;
  5857  0794  086D               	movf	_Sw,w
  5858  0795  3E07               	addlw	7
  5859  0796  0086               	movwf	6
  5860  0797  3001               	movlw	1	; select bank2/3
  5861  0798  0087               	movwf	7
  5862  0799  3000               	movlw	0
  5863  079A  3FC0               	movwi [0]fsr1
  5864  079B  3FC1               	movwi [1]fsr1
  5865                           
  5866                           ;Switch_B1.c: 235: Sw->Hold3=0;
  5867  079C  086D               	movf	_Sw,w
  5868  079D  0086               	movwf	6
  5869  079E  3001               	movlw	1	; select bank2/3
  5870  079F  0087               	movwf	7
  5871  07A0  1281               	bcf	1,5
  5872                           
  5873                           ;Switch_B1.c: 238: Sw_DimmerOffFunc(sw);
  5874  07A1  0869               	movf	setSw_Main@sw,w
  5875  07A2  3193  2356  3186   	fcall	_Sw_DimmerOffFunc
  5876                           
  5877                           ;Switch_B1.c: 243: setRF_Learn(1,0);
  5878  07A5  0020               	movlb	0	; select bank0
  5879  07A6  01A2               	clrf	setRF_Learn@command
  5880  07A7  3001               	movlw	1
  5881  07A8  31A5  2519         	fcall	_setRF_Learn
  5882  07AA  0008               	return
  5883  07AB                     __end_of_setSw_Main:	
  5884                           
  5885                           	psect	text12
  5886  2519                     __ptext12:	
  5887 ;; *************** function _setRF_Learn *****************
  5888 ;; Defined at:
  5889 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\RF_Control_B1.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  rf              1    wreg     unsigned char 
  5892 ;;  command         1    2[BANK0 ] unsigned char 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  rf              1    3[BANK0 ] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;		None               void
  5897 ;; Registers used:
  5898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5904 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;Total ram usage:        2 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    5
  5911 ;; This function calls:
  5912 ;;		_RfPointSelect
  5913 ;; This function is called by:
  5914 ;;		_setSw_Main
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           
  5919                           ;psect for function _setRF_Learn
  5920  2519                     _setRF_Learn:	
  5921                           
  5922                           ;incstack = 0
  5923                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5924                           ;setRF_Learn@rf stored from wreg
  5925  2519  0020               	movlb	0	; select bank0
  5926  251A  00A3               	movwf	setRF_Learn@rf
  5927                           
  5928                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  5929  251B  0823               	movf	setRF_Learn@rf,w
  5930  251C  31A4  2442         	fcall	_RfPointSelect
  5931                           
  5932                           ;RF_Control_B1.c: 34: RF->Learn=command;
  5933  251E  087C               	movf	_RF,w
  5934  251F  0086               	movwf	6
  5935  2520  0187               	clrf	7
  5936  2521  0020               	movlb	0	; select bank0
  5937  2522  0822               	movf	setRF_Learn@command,w
  5938  2523  1301               	bcf	1,6
  5939  2524  1D03               	skipz
  5940  2525  1701               	bsf	1,6
  5941  2526  0008               	return
  5942  2527                     __end_of_setRF_Learn:	
  5943                           
  5944                           	psect	text13
  5945  1278                     __ptext13:	
  5946 ;; *************** function _Sw_DimmerOnFunc *****************
  5947 ;; Defined at:
  5948 ;;		line 251 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Switch_B1.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  sw              1    wreg     unsigned char 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  sw              1   67[BANK0 ] unsigned char 
  5953 ;;  Idle            1   66[BANK0 ] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;		None               void
  5956 ;; Registers used:
  5957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;Total ram usage:        2 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    8
  5970 ;; This function calls:
  5971 ;;		_setBuz
  5972 ;;		_setDimmerLights_Switch
  5973 ;;		_setDimmerLights_Trigger
  5974 ;;		_setRFSW_Status
  5975 ;;		_setRF_DimmerLights
  5976 ;;		_setTxData
  5977 ;; This function is called by:
  5978 ;;		_setSw_Main
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _Sw_DimmerOnFunc
  5984  1278                     _Sw_DimmerOnFunc:	
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5988                           ;Sw_DimmerOnFunc@sw stored from wreg
  5989  1278  0020               	movlb	0	; select bank0
  5990  1279  00E3               	movwf	Sw_DimmerOnFunc@sw
  5991                           
  5992                           ;Switch_B1.c: 253: char Idle=1;
  5993  127A  01E2               	clrf	Sw_DimmerOnFunc@Idle
  5994  127B  0AE2               	incf	Sw_DimmerOnFunc@Idle,f
  5995                           
  5996                           ;Switch_B1.c: 270: if(sw == 1)
  5997  127C  0863               	movf	Sw_DimmerOnFunc@sw,w
  5998  127D  3A01               	xorlw	1
  5999  127E  1D03               	skipz
  6000  127F  2A82               	goto	l9174
  6001                           
  6002                           ;Switch_B1.c: 271: {
  6003                           ;Switch_B1.c: 272: Idle=(DimmerLights22->AdjGo)?0:1;
  6004  1280  087A               	movf	_DimmerLights22,w
  6005  1281  2A87               	goto	L3
  6006  1282                     l9174:	
  6007                           ;Switch_B1.c: 273: }
  6008                           
  6009                           
  6010                           ;Switch_B1.c: 274: else if(sw == 2)
  6011  1282  0863               	movf	Sw_DimmerOnFunc@sw,w
  6012  1283  3A02               	xorlw	2
  6013  1284  1D03               	skipz
  6014  1285  2A92               	goto	l9178
  6015                           
  6016                           ;Switch_B1.c: 275: {
  6017                           ;Switch_B1.c: 276: Idle=(DimmerLights11->AdjGo)?0:1;
  6018  1286  0879               	movf	_DimmerLights11,w
  6019  1287                     L3:	
  6020  1287  3E09               	addlw	9
  6021  1288  0086               	movwf	6
  6022  1289  3001               	movlw	1	; select bank2/3
  6023  128A  0087               	movwf	7
  6024  128B  1003               	clrc
  6025  128C  1D01               	btfss	1,2
  6026  128D  1403               	setc
  6027  128E  3000               	movlw	0
  6028  128F  1803               	btfsc	3,0
  6029  1290  3001               	movlw	1
  6030  1291  00E2               	movwf	Sw_DimmerOnFunc@Idle
  6031  1292                     l9178:	
  6032                           
  6033                           ;Switch_B1.c: 277: }
  6034                           ;Switch_B1.c: 280: if(Idle)
  6035  1292  0862               	movf	Sw_DimmerOnFunc@Idle,w
  6036  1293  1903               	btfsc	3,2
  6037  1294  0008               	return
  6038                           
  6039                           ;Switch_B1.c: 281: {
  6040                           ;Switch_B1.c: 282: Sw->Flag=1;
  6041  1295  086D               	movf	_Sw,w
  6042  1296  0086               	movwf	6
  6043  1297  3001               	movlw	1	; select bank2/3
  6044  1298  0087               	movwf	7
  6045  1299  1781               	bsf	1,7
  6046                           
  6047                           ;Switch_B1.c: 283: setBuz(1,100);
  6048  129A  3064               	movlw	100
  6049  129B  00A6               	movwf	setBuz@time
  6050  129C  3000               	movlw	0
  6051  129D  00A7               	movwf	setBuz@time+1
  6052  129E  3001               	movlw	1
  6053  129F  3193  23C7  3192   	fcall	_setBuz
  6054                           
  6055                           ;Switch_B1.c: 284: if(!Sw->Status)
  6056  12A2  0020               	movlb	0	; select bank0
  6057  12A3  086D               	movf	_Sw,w
  6058  12A4  0086               	movwf	6
  6059  12A5  3001               	movlw	1	; select bank2/3
  6060  12A6  0087               	movwf	7
  6061  12A7  1B01               	btfsc	1,6
  6062  12A8  2AD4               	goto	l9198
  6063                           
  6064                           ;Switch_B1.c: 285: {
  6065                           ;Switch_B1.c: 286: Sw->Status=1;
  6066  12A9  086D               	movf	_Sw,w
  6067  12AA  0086               	movwf	6
  6068  12AB  3001               	movlw	1	; select bank2/3
  6069  12AC  0087               	movwf	7
  6070  12AD  1701               	bsf	1,6
  6071                           
  6072                           ;Switch_B1.c: 287: setRFSW_Status(sw,1);
  6073  12AE  01A2               	clrf	setRFSW_Status@command
  6074  12AF  0AA2               	incf	setRFSW_Status@command,f
  6075  12B0  0863               	movf	Sw_DimmerOnFunc@sw,w
  6076  12B1  31A5  2527  3192   	fcall	_setRFSW_Status
  6077                           
  6078                           ;Switch_B1.c: 289: setDimmerLights_Trigger(sw,1);
  6079  12B4  0020               	movlb	0	; select bank0
  6080  12B5  01A2               	clrf	setDimmerLights_Trigger@command
  6081  12B6  0AA2               	incf	setDimmerLights_Trigger@command,f
  6082  12B7  0863               	movf	Sw_DimmerOnFunc@sw,w
  6083  12B8  31A5  2565  3192   	fcall	_setDimmerLights_Trigger
  6084                           
  6085                           ;Switch_B1.c: 290: setDimmerLights_Switch(sw,1);
  6086  12BB  0020               	movlb	0	; select bank0
  6087  12BC  01A2               	clrf	setDimmerLights_Switch@command
  6088  12BD  0AA2               	incf	setDimmerLights_Switch@command,f
  6089  12BE  0863               	movf	Sw_DimmerOnFunc@sw,w
  6090  12BF  31A5  2555  3192   	fcall	_setDimmerLights_Switch
  6091                           
  6092                           ;Switch_B1.c: 292: setRF_DimmerLights(sw,Sw->Status);
  6093  12C2  0020               	movlb	0	; select bank0
  6094  12C3  086D               	movf	_Sw,w
  6095  12C4  0086               	movwf	6
  6096  12C5  3001               	movlw	1	; select bank2/3
  6097  12C6  0087               	movwf	7
  6098  12C7  3000               	movlw	0
  6099  12C8  1B01               	btfsc	1,6
  6100  12C9  3001               	movlw	1
  6101  12CA  00DD               	movwf	setRF_DimmerLights@on
  6102  12CB  0863               	movf	Sw_DimmerOnFunc@sw,w
  6103  12CC  3191  2133  3192   	fcall	_setRF_DimmerLights
  6104                           
  6105                           ;Switch_B1.c: 293: setTxData(1);
  6106  12CF  3001               	movlw	1
  6107  12D0  318B  2318         	fcall	_setTxData
  6108                           
  6109                           ;Switch_B1.c: 294: }
  6110  12D2  0020               	movlb	0	; select bank0
  6111  12D3  0008               	return
  6112  12D4                     l9198:	
  6113                           
  6114                           ;Switch_B1.c: 295: else
  6115                           ;Switch_B1.c: 296: {
  6116                           ;Switch_B1.c: 297: Sw->Status=0;
  6117  12D4  0020               	movlb	0	; select bank0
  6118  12D5  086D               	movf	_Sw,w
  6119  12D6  0086               	movwf	6
  6120  12D7  3001               	movlw	1	; select bank2/3
  6121  12D8  0087               	movwf	7
  6122  12D9  1301               	bcf	1,6
  6123                           
  6124                           ;Switch_B1.c: 298: setRFSW_Status(sw,Sw->Status);
  6125  12DA  086D               	movf	_Sw,w
  6126  12DB  0086               	movwf	6
  6127  12DC  3001               	movlw	1	; select bank2/3
  6128  12DD  0087               	movwf	7
  6129  12DE  3000               	movlw	0
  6130  12DF  1B01               	btfsc	1,6
  6131  12E0  3001               	movlw	1
  6132  12E1  00A2               	movwf	setRFSW_Status@command
  6133  12E2  0863               	movf	Sw_DimmerOnFunc@sw,w
  6134  12E3  31A5  2527         	fcall	_setRFSW_Status
  6135  12E5  0020               	movlb	0	; select bank0
  6136  12E6  0008               	return
  6137  12E7                     __end_of_Sw_DimmerOnFunc:	
  6138                           
  6139                           	psect	text14
  6140  1356                     __ptext14:	
  6141 ;; *************** function _Sw_DimmerOffFunc *****************
  6142 ;; Defined at:
  6143 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Switch_B1.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  sw              1    wreg     unsigned char 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  sw              1   68[BANK0 ] unsigned char 
  6148 ;; Return value:  Size  Location     Type
  6149 ;;		None               void
  6150 ;; Registers used:
  6151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;Total ram usage:        3 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:    8
  6164 ;; This function calls:
  6165 ;;		_setDelayOff_GO
  6166 ;;		_setDimmerLights_AdjGo
  6167 ;;		_setDimmerLights_Switch
  6168 ;;		_setDimmerLights_Trigger
  6169 ;;		_setDimmerLights_TriggerAdj
  6170 ;;		_setRF_DimmerLights
  6171 ;;		_setTxData
  6172 ;; This function is called by:
  6173 ;;		_setSw_Main
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           
  6178                           ;psect for function _Sw_DimmerOffFunc
  6179  1356                     _Sw_DimmerOffFunc:	
  6180                           
  6181                           ;incstack = 0
  6182                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6183                           ;Sw_DimmerOffFunc@sw stored from wreg
  6184  1356  0020               	movlb	0	; select bank0
  6185  1357  00E4               	movwf	Sw_DimmerOffFunc@sw
  6186                           
  6187                           ;Switch_B1.c: 305: if(Sw->Flag)
  6188  1358  086D               	movf	_Sw,w
  6189  1359  0086               	movwf	6
  6190  135A  3001               	movlw	1	; select bank2/3
  6191  135B  0087               	movwf	7
  6192  135C  1F81               	btfss	1,7
  6193  135D  0008               	return
  6194                           
  6195                           ;Switch_B1.c: 306: {
  6196                           ;Switch_B1.c: 307: Sw->Flag=0;
  6197  135E  086D               	movf	_Sw,w
  6198  135F  0086               	movwf	6
  6199  1360  3001               	movlw	1	; select bank2/3
  6200  1361  0087               	movwf	7
  6201  1362  1381               	bcf	1,7
  6202                           
  6203                           ;Switch_B1.c: 308: if(Sw->Status)
  6204  1363  086D               	movf	_Sw,w
  6205  1364  0086               	movwf	6
  6206  1365  3001               	movlw	1	; select bank2/3
  6207  1366  0087               	movwf	7
  6208  1367  1F01               	btfss	1,6
  6209  1368  2BA2               	goto	l9230
  6210                           
  6211                           ;Switch_B1.c: 309: {
  6212                           ;Switch_B1.c: 310: if(Sw->Adj)
  6213  1369  0A6D               	incf	_Sw,w
  6214  136A  0086               	movwf	6
  6215  136B  3001               	movlw	1	; select bank2/3
  6216  136C  0087               	movwf	7
  6217  136D  1C01               	btfss	1,0
  6218  136E  0008               	return
  6219                           
  6220                           ;Switch_B1.c: 311: {
  6221                           ;Switch_B1.c: 312: Sw->Adj=0;
  6222  136F  0A6D               	incf	_Sw,w
  6223  1370  0086               	movwf	6
  6224  1371  3001               	movlw	1	; select bank2/3
  6225  1372  0087               	movwf	7
  6226  1373  1001               	bcf	1,0
  6227                           
  6228                           ;Switch_B1.c: 313: setDimmerLights_TriggerAdj(sw,1);
  6229  1374  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6230  1375  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6231  1376  0864               	movf	Sw_DimmerOffFunc@sw,w
  6232  1377  31A5  25B5  3193   	fcall	_setDimmerLights_TriggerAdj
  6233                           
  6234                           ;Switch_B1.c: 314: setDimmerLights_AdjGo(sw,0);
  6235  137A  0020               	movlb	0	; select bank0
  6236  137B  01A2               	clrf	setDimmerLights_AdjGo@command
  6237  137C  0864               	movf	Sw_DimmerOffFunc@sw,w
  6238  137D  31A5  25A5  3193   	fcall	_setDimmerLights_AdjGo
  6239                           
  6240                           ;Switch_B1.c: 316: Product->Data[17]=Product->Data[26+sw];
  6241  1380  0020               	movlb	0	; select bank0
  6242  1381  0864               	movf	Sw_DimmerOffFunc@sw,w
  6243  1382  3E1A               	addlw	26
  6244  1383  076F               	addwf	_Product,w
  6245  1384  00E2               	movwf	??_Sw_DimmerOffFunc
  6246  1385  0862               	movf	??_Sw_DimmerOffFunc,w
  6247  1386  0086               	movwf	6
  6248  1387  3001               	movlw	1	; select bank2/3
  6249  1388  0087               	movwf	7
  6250  1389  0801               	movf	1,w
  6251  138A  00E3               	movwf	??_Sw_DimmerOffFunc+1
  6252  138B  086F               	movf	_Product,w
  6253  138C  3E11               	addlw	17
  6254  138D  0086               	movwf	6
  6255  138E  3001               	movlw	1	; select bank2/3
  6256  138F  0087               	movwf	7
  6257  1390  0863               	movf	??_Sw_DimmerOffFunc+1,w
  6258  1391  0081               	movwf	1
  6259                           
  6260                           ;Switch_B1.c: 317: setRF_DimmerLights(sw,Sw->Status);
  6261  1392  086D               	movf	_Sw,w
  6262  1393  0086               	movwf	6
  6263  1394  3001               	movlw	1	; select bank2/3
  6264  1395  0087               	movwf	7
  6265  1396  3000               	movlw	0
  6266  1397  1B01               	btfsc	1,6
  6267  1398  3001               	movlw	1
  6268  1399  00DD               	movwf	setRF_DimmerLights@on
  6269  139A  0864               	movf	Sw_DimmerOffFunc@sw,w
  6270  139B  3191  2133  3193   	fcall	_setRF_DimmerLights
  6271                           
  6272                           ;Switch_B1.c: 318: setTxData(1);
  6273  139E  3001               	movlw	1
  6274  139F  318B  2318         	fcall	_setTxData
  6275                           
  6276                           ;Switch_B1.c: 320: }
  6277                           ;Switch_B1.c: 321: }
  6278  13A1  0008               	return
  6279  13A2                     l9230:	
  6280                           
  6281                           ;Switch_B1.c: 322: else
  6282                           ;Switch_B1.c: 323: {
  6283                           ;Switch_B1.c: 324: setDimmerLights_Trigger(sw,1);
  6284  13A2  0020               	movlb	0	; select bank0
  6285  13A3  01A2               	clrf	setDimmerLights_Trigger@command
  6286  13A4  0AA2               	incf	setDimmerLights_Trigger@command,f
  6287  13A5  0864               	movf	Sw_DimmerOffFunc@sw,w
  6288  13A6  31A5  2565  3193   	fcall	_setDimmerLights_Trigger
  6289                           
  6290                           ;Switch_B1.c: 325: setDimmerLights_Switch(sw,0);
  6291  13A9  0020               	movlb	0	; select bank0
  6292  13AA  01A2               	clrf	setDimmerLights_Switch@command
  6293  13AB  0864               	movf	Sw_DimmerOffFunc@sw,w
  6294  13AC  31A5  2555  3193   	fcall	_setDimmerLights_Switch
  6295                           
  6296                           ;Switch_B1.c: 327: setDelayOff_GO(sw,0,0);
  6297  13AF  0020               	movlb	0	; select bank0
  6298  13B0  01A3               	clrf	setDelayOff_GO@command
  6299  13B1  01A4               	clrf	setDelayOff_GO@value
  6300  13B2  0864               	movf	Sw_DimmerOffFunc@sw,w
  6301  13B3  319F  2746  3193   	fcall	_setDelayOff_GO
  6302                           
  6303                           ;Switch_B1.c: 328: setRF_DimmerLights(sw,Sw->Status);
  6304  13B6  0020               	movlb	0	; select bank0
  6305  13B7  086D               	movf	_Sw,w
  6306  13B8  0086               	movwf	6
  6307  13B9  3001               	movlw	1	; select bank2/3
  6308  13BA  0087               	movwf	7
  6309  13BB  3000               	movlw	0
  6310  13BC  1B01               	btfsc	1,6
  6311  13BD  3001               	movlw	1
  6312  13BE  00DD               	movwf	setRF_DimmerLights@on
  6313  13BF  0864               	movf	Sw_DimmerOffFunc@sw,w
  6314  13C0  3191  2133  3193   	fcall	_setRF_DimmerLights
  6315                           
  6316                           ;Switch_B1.c: 329: setTxData(1);
  6317  13C3  3001               	movlw	1
  6318  13C4  318B  2318         	fcall	_setTxData
  6319  13C6  0008               	return
  6320  13C7                     __end_of_Sw_DimmerOffFunc:	
  6321                           
  6322                           	psect	text15
  6323  1931                     __ptext15:	
  6324 ;; *************** function _Sw_DimmerAdjFunc *****************
  6325 ;; Defined at:
  6326 ;;		line 334 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Switch_B1.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  sw              1    wreg     unsigned char 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  sw              1    4[BANK0 ] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;		None               void
  6333 ;; Registers used:
  6334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;Total ram usage:        1 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    6
  6347 ;; This function calls:
  6348 ;;		_setDimmerLights_AdjGo
  6349 ;;		_setDimmerLights_TriggerAdj
  6350 ;;		_setRFSW_Status
  6351 ;; This function is called by:
  6352 ;;		_setSw_Main
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           
  6357                           ;psect for function _Sw_DimmerAdjFunc
  6358  1931                     _Sw_DimmerAdjFunc:	
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6362                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6363  1931  0020               	movlb	0	; select bank0
  6364  1932  00A4               	movwf	Sw_DimmerAdjFunc@sw
  6365                           
  6366                           ;Switch_B1.c: 336: if(Sw->Flag)
  6367  1933  086D               	movf	_Sw,w
  6368  1934  0086               	movwf	6
  6369  1935  3001               	movlw	1	; select bank2/3
  6370  1936  0087               	movwf	7
  6371  1937  1F81               	btfss	1,7
  6372  1938  0008               	return
  6373                           
  6374                           ;Switch_B1.c: 337: {
  6375                           ;Switch_B1.c: 338: Sw->Adj=1;
  6376  1939  0A6D               	incf	_Sw,w
  6377  193A  0086               	movwf	6
  6378  193B  3001               	movlw	1	; select bank2/3
  6379  193C  0087               	movwf	7
  6380  193D  1401               	bsf	1,0
  6381                           
  6382                           ;Switch_B1.c: 339: Sw->Status=1;
  6383  193E  086D               	movf	_Sw,w
  6384  193F  0086               	movwf	6
  6385  1940  3001               	movlw	1	; select bank2/3
  6386  1941  0087               	movwf	7
  6387  1942  1701               	bsf	1,6
  6388                           
  6389                           ;Switch_B1.c: 340: setRFSW_Status(sw,1);
  6390  1943  01A2               	clrf	setRFSW_Status@command
  6391  1944  0AA2               	incf	setRFSW_Status@command,f
  6392  1945  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6393  1946  31A5  2527  3199   	fcall	_setRFSW_Status
  6394                           
  6395                           ;Switch_B1.c: 342: setDimmerLights_TriggerAdj(sw,1);
  6396  1949  0020               	movlb	0	; select bank0
  6397  194A  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6398  194B  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6399  194C  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6400  194D  31A5  25B5  3199   	fcall	_setDimmerLights_TriggerAdj
  6401                           
  6402                           ;Switch_B1.c: 343: setDimmerLights_AdjGo(sw,1);
  6403  1950  0020               	movlb	0	; select bank0
  6404  1951  01A2               	clrf	setDimmerLights_AdjGo@command
  6405  1952  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6406  1953  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6407  1954  31A5  25A5         	fcall	_setDimmerLights_AdjGo
  6408  1956  0008               	return
  6409  1957                     __end_of_Sw_DimmerAdjFunc:	
  6410                           
  6411                           	psect	text16
  6412  25B5                     __ptext16:	
  6413 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6414 ;; Defined at:
  6415 ;;		line 441 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  lights          1    wreg     unsigned char 
  6418 ;;  command         1    2[BANK0 ] unsigned char 
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  lights          1    3[BANK0 ] unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;		None               void
  6423 ;; Registers used:
  6424 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6430 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;Total ram usage:        2 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    5
  6437 ;; This function calls:
  6438 ;;		_DimmerLightsPointSelect
  6439 ;; This function is called by:
  6440 ;;		_Sw_DimmerOffFunc
  6441 ;;		_Sw_DimmerAdjFunc
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           
  6446                           ;psect for function _setDimmerLights_TriggerAdj
  6447  25B5                     _setDimmerLights_TriggerAdj:	
  6448                           
  6449                           ;incstack = 0
  6450                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6451                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6452  25B5  0020               	movlb	0	; select bank0
  6453  25B6  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6454                           
  6455                           ;Dimmer_B1.c: 443: DimmerLightsPointSelect(lights);
  6456  25B7  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6457  25B8  31A5  25D6         	fcall	_DimmerLightsPointSelect
  6458                           
  6459                           ;Dimmer_B1.c: 444: DimmerLights->TriggerAdj=command;
  6460  25BA  0020               	movlb	0	; select bank0
  6461  25BB  086C               	movf	_DimmerLights,w
  6462  25BC  3E09               	addlw	9
  6463  25BD  0086               	movwf	6
  6464  25BE  3001               	movlw	1	; select bank2/3
  6465  25BF  0087               	movwf	7
  6466  25C0  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6467  25C1  1181               	bcf	1,3
  6468  25C2  1D03               	skipz
  6469  25C3  1581               	bsf	1,3
  6470  25C4  0008               	return
  6471  25C5                     __end_of_setDimmerLights_TriggerAdj:	
  6472                           
  6473                           	psect	text17
  6474  25A5                     __ptext17:	
  6475 ;; *************** function _setDimmerLights_AdjGo *****************
  6476 ;; Defined at:
  6477 ;;		line 431 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  lights          1    wreg     unsigned char 
  6480 ;;  command         1    2[BANK0 ] unsigned char 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  lights          1    3[BANK0 ] unsigned char 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;		None               void
  6485 ;; Registers used:
  6486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6492 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;Total ram usage:        2 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    5
  6499 ;; This function calls:
  6500 ;;		_DimmerLightsPointSelect
  6501 ;; This function is called by:
  6502 ;;		_Sw_DimmerOffFunc
  6503 ;;		_Sw_DimmerAdjFunc
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           
  6508                           ;psect for function _setDimmerLights_AdjGo
  6509  25A5                     _setDimmerLights_AdjGo:	
  6510                           
  6511                           ;incstack = 0
  6512                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6513                           ;setDimmerLights_AdjGo@lights stored from wreg
  6514  25A5  0020               	movlb	0	; select bank0
  6515  25A6  00A3               	movwf	setDimmerLights_AdjGo@lights
  6516                           
  6517                           ;Dimmer_B1.c: 433: DimmerLightsPointSelect(lights);
  6518  25A7  0823               	movf	setDimmerLights_AdjGo@lights,w
  6519  25A8  31A5  25D6         	fcall	_DimmerLightsPointSelect
  6520                           
  6521                           ;Dimmer_B1.c: 434: DimmerLights->AdjGo=command;
  6522  25AA  0020               	movlb	0	; select bank0
  6523  25AB  086C               	movf	_DimmerLights,w
  6524  25AC  3E09               	addlw	9
  6525  25AD  0086               	movwf	6
  6526  25AE  3001               	movlw	1	; select bank2/3
  6527  25AF  0087               	movwf	7
  6528  25B0  0822               	movf	setDimmerLights_AdjGo@command,w
  6529  25B1  1101               	bcf	1,2
  6530  25B2  1D03               	skipz
  6531  25B3  1501               	bsf	1,2
  6532  25B4  0008               	return
  6533  25B5                     __end_of_setDimmerLights_AdjGo:	
  6534                           
  6535                           	psect	text18
  6536  24FE                     __ptext18:	
  6537 ;; *************** function _Switch_Initialization *****************
  6538 ;; Defined at:
  6539 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Switch_B1.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;		None
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;		None               void
  6546 ;; Registers used:
  6547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;Total ram usage:        0 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    7
  6560 ;; This function calls:
  6561 ;;		_TouchPower
  6562 ;;		_setSw_Initialization
  6563 ;; This function is called by:
  6564 ;;		_main
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           
  6569                           ;psect for function _Switch_Initialization
  6570  24FE                     _Switch_Initialization:	
  6571                           
  6572                           ;Switch_B1.c: 40: TouchPower();
  6573                           
  6574                           ;incstack = 0
  6575                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6576  24FE  31A3  23BE  31A4   	fcall	_TouchPower
  6577                           
  6578                           ;Switch_B1.c: 42: WPUB1=0;
  6579  2501  0024               	movlb	4	; select bank4
  6580  2502  108D               	bcf	13,1	;volatile
  6581                           
  6582                           ;Switch_B1.c: 51: setSw_Initialization(1);
  6583  2503  3001               	movlw	1
  6584  2504  31A4  2409  31A4   	fcall	_setSw_Initialization
  6585                           
  6586                           ;Switch_B1.c: 54: setSw_Initialization(2);
  6587  2507  3002               	movlw	2
  6588  2508  31A4  2409         	fcall	_setSw_Initialization
  6589  250A  0008               	return
  6590  250B                     __end_of_Switch_Initialization:	
  6591                           
  6592                           	psect	text19
  6593  2409                     __ptext19:	
  6594 ;; *************** function _setSw_Initialization *****************
  6595 ;; Defined at:
  6596 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Switch_B1.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  sw              1    wreg     unsigned char 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  sw              1    4[BANK0 ] unsigned char 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;		None               void
  6603 ;; Registers used:
  6604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;Total ram usage:        1 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; Hardware stack levels required when called:    6
  6617 ;; This function calls:
  6618 ;;		_setLED
  6619 ;; This function is called by:
  6620 ;;		_Switch_Initialization
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           
  6625                           ;psect for function _setSw_Initialization
  6626  2409                     _setSw_Initialization:	
  6627                           
  6628                           ;incstack = 0
  6629                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6630                           ;setSw_Initialization@sw stored from wreg
  6631  2409  0020               	movlb	0	; select bank0
  6632  240A  00A4               	movwf	setSw_Initialization@sw
  6633                           
  6634                           ;Switch_B1.c: 80: setLED(sw,1);
  6635  240B  01A2               	clrf	setLED@command
  6636  240C  0AA2               	incf	setLED@command,f
  6637  240D  0824               	movf	setSw_Initialization@sw,w
  6638  240E  319F  27A2         	fcall	_setLED
  6639  2410  0008               	return
  6640  2411                     __end_of_setSw_Initialization:	
  6641                           
  6642                           	psect	text20
  6643  23BE                     __ptext20:	
  6644 ;; *************** function _TouchPower *****************
  6645 ;; Defined at:
  6646 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1.
      +2.1\Release\Switch_B1.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;		None
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;		None               void
  6653 ;; Registers used:
  6654 ;;		None
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;Total ram usage:        0 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    4
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_Switch_Initialization
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           
  6675                           ;psect for function _TouchPower
  6676  23BE                     _TouchPower:	
  6677  23BE                     l2922:	
  6678                           ;Switch_B1.c: 11: while(!RC5)
  6679                           
  6680                           ;incstack = 0
  6681                           ; Regs used in _TouchPower: []
  6682                           
  6683  23BE  0020               	movlb	0	; select bank0
  6684  23BF  1A8E               	btfsc	14,5	;volatile
  6685  23C0  0008               	return
  6686                           
  6687                           ;Switch_B1.c: 12: RC5=1;
  6688  23C1  168E               	bsf	14,5	;volatile
  6689  23C2  2BBE               	goto	l2922
  6690  23C3                     __end_of_TouchPower:	
  6691                           
  6692                           	psect	text21
  6693  0800                     __ptext21:	
  6694 ;; *************** function _RF_Main *****************
  6695 ;; Defined at:
  6696 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\RF_Control_B1.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;		None               void
  6703 ;; Registers used:
  6704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:   13
  6717 ;; This function calls:
  6718 ;;		_setRF_Main
  6719 ;; This function is called by:
  6720 ;;		_main
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function _RF_Main
  6726  0800                     _RF_Main:	
  6727                           
  6728                           ;RF_Control_B1.c: 27: setRF_Main(1);
  6729                           
  6730                           ;incstack = 0
  6731                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6732  0800  3001               	movlw	1
  6733  0801  3195  25C1         	fcall	_setRF_Main
  6734  0803  0008               	return
  6735  0804                     __end_of_RF_Main:	
  6736                           
  6737                           	psect	text22
  6738  15C1                     __ptext22:	
  6739 ;; *************** function _setRF_Main *****************
  6740 ;; Defined at:
  6741 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\RF_Control_B1.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  rf              1    wreg     unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  rf              1   74[BANK0 ] unsigned char 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;		None               void
  6748 ;; Registers used:
  6749 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;Total ram usage:        3 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:   12
  6762 ;; This function calls:
  6763 ;;		_CC2500_RxData
  6764 ;;		_CC2500_TxData
  6765 ;;		_CC2500_WriteCommand
  6766 ;;		_RF_RxDisable
  6767 ;;		_RfPointSelect
  6768 ;;		_getRxData
  6769 ;;		_setINT_GO
  6770 ;; This function is called by:
  6771 ;;		_RF_Main
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           
  6776                           ;psect for function _setRF_Main
  6777  15C1                     _setRF_Main:	
  6778                           
  6779                           ;incstack = 0
  6780                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6781                           ;setRF_Main@rf stored from wreg
  6782  15C1  0020               	movlb	0	; select bank0
  6783  15C2  00EA               	movwf	setRF_Main@rf
  6784                           
  6785                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  6786  15C3  086A               	movf	setRF_Main@rf,w
  6787  15C4  31A4  2442  3195   	fcall	_RfPointSelect
  6788                           
  6789                           ;RF_Control_B1.c: 61: if(RF->Enable)
  6790  15C7  087C               	movf	_RF,w
  6791  15C8  0086               	movwf	6
  6792  15C9  0187               	clrf	7
  6793  15CA  1C01               	btfss	1,0
  6794  15CB  0008               	return
  6795                           
  6796                           ;RF_Control_B1.c: 62: {
  6797                           ;RF_Control_B1.c: 68: RF->Key=((RA6 || RA4 || RA0 || RB1 ) && !RF->Learn)?1:0;
  6798  15CC  0020               	movlb	0	; select bank0
  6799  15CD  01EB               	clrf	_setRF_Main$4353
  6800  15CE  1F0C               	btfss	12,6	;volatile
  6801  15CF  1A0C               	btfsc	12,4	;volatile
  6802  15D0  2DD5               	goto	l9568
  6803  15D1  180C               	btfsc	12,0	;volatile
  6804  15D2  2DD5               	goto	l9568
  6805  15D3  1C8D               	btfss	13,1	;volatile
  6806  15D4  2DDC               	goto	l9572
  6807  15D5                     l9568:	
  6808  15D5  087C               	movf	_RF,w
  6809  15D6  0086               	movwf	6
  6810  15D7  0187               	clrf	7
  6811  15D8  1B01               	btfsc	1,6
  6812  15D9  2DDC               	goto	l9572
  6813  15DA  01EB               	clrf	_setRF_Main$4353
  6814  15DB  0AEB               	incf	_setRF_Main$4353,f
  6815  15DC                     l9572:	
  6816  15DC  087C               	movf	_RF,w
  6817  15DD  0086               	movwf	6
  6818  15DE  0187               	clrf	7
  6819  15DF  086B               	movf	_setRF_Main$4353,w
  6820  15E0  1381               	bcf	1,7
  6821  15E1  1D03               	skipz
  6822  15E2  1781               	bsf	1,7
  6823                           
  6824                           ;RF_Control_B1.c: 76: if(!RF->Key)
  6825  15E3  087C               	movf	_RF,w
  6826  15E4  0086               	movwf	6
  6827  15E5  0187               	clrf	7
  6828  15E6  1B81               	btfsc	1,7
  6829  15E7  2E14               	goto	l9594
  6830                           
  6831                           ;RF_Control_B1.c: 77: {
  6832                           ;RF_Control_B1.c: 78: if(RF->ReceiveGO)
  6833  15E8  087C               	movf	_RF,w
  6834  15E9  0086               	movwf	6
  6835  15EA  0187               	clrf	7
  6836  15EB  1C81               	btfss	1,1
  6837  15EC  2DF9               	goto	l9582
  6838                           
  6839                           ;RF_Control_B1.c: 79: {
  6840                           ;RF_Control_B1.c: 80: RF->ReceiveGO=0;
  6841  15ED  087C               	movf	_RF,w
  6842  15EE  0086               	movwf	6
  6843  15EF  0187               	clrf	7
  6844  15F0  1081               	bcf	1,1
  6845                           
  6846                           ;RF_Control_B1.c: 81: CC2500_RxData();
  6847  15F1  3190  206A  3195   	fcall	_CC2500_RxData
  6848                           
  6849                           ;RF_Control_B1.c: 87: getRxData(1);
  6850  15F4  3001               	movlw	1
  6851  15F5  3187  27AB  3195   	fcall	_getRxData
  6852                           
  6853                           ;RF_Control_B1.c: 90: }
  6854  15F8  2E18               	goto	l9596
  6855  15F9                     l9582:	
  6856                           
  6857                           ;RF_Control_B1.c: 91: else
  6858                           ;RF_Control_B1.c: 92: {
  6859                           ;RF_Control_B1.c: 93: if(!RF->TransceiveGO)
  6860  15F9  087C               	movf	_RF,w
  6861  15FA  0086               	movwf	6
  6862  15FB  0187               	clrf	7
  6863  15FC  1901               	btfsc	1,2
  6864  15FD  2E18               	goto	l9596
  6865                           
  6866                           ;RF_Control_B1.c: 94: {
  6867                           ;RF_Control_B1.c: 96: if(!RF->RxStatus)
  6868  15FE  087C               	movf	_RF,w
  6869  15FF  0086               	movwf	6
  6870  1600  0187               	clrf	7
  6871  1601  1981               	btfsc	1,3
  6872  1602  2E18               	goto	l9596
  6873                           
  6874                           ;RF_Control_B1.c: 97: {
  6875                           ;RF_Control_B1.c: 98: RF->RxStatus=1;
  6876  1603  087C               	movf	_RF,w
  6877  1604  0086               	movwf	6
  6878  1605  0187               	clrf	7
  6879  1606  1581               	bsf	1,3
  6880                           
  6881                           ;RF_Control_B1.c: 99: CC2500_WriteCommand(0x36);
  6882  1607  3036               	movlw	54
  6883  1608  31A5  2545  3195   	fcall	_CC2500_WriteCommand
  6884                           
  6885                           ;RF_Control_B1.c: 100: CC2500_WriteCommand(0x34);
  6886  160B  3034               	movlw	52
  6887  160C  31A5  2545  3195   	fcall	_CC2500_WriteCommand
  6888                           
  6889                           ;RF_Control_B1.c: 101: setINT_GO(1);
  6890  160F  3001               	movlw	1
  6891  1610  3190  2000  3195   	fcall	_setINT_GO
  6892                           
  6893                           ;RF_Control_B1.c: 102: }
  6894                           ;RF_Control_B1.c: 104: }
  6895                           ;RF_Control_B1.c: 105: }
  6896                           ;RF_Control_B1.c: 106: }
  6897  1613  2E18               	goto	l9596
  6898  1614                     l9594:	
  6899                           
  6900                           ;RF_Control_B1.c: 107: else
  6901                           ;RF_Control_B1.c: 108: {
  6902                           ;RF_Control_B1.c: 109: RF_RxDisable(1);
  6903  1614  3001               	movlw	1
  6904  1615  3199  2157  3195   	fcall	_RF_RxDisable
  6905  1618                     l9596:	
  6906                           
  6907                           ;RF_Control_B1.c: 110: }
  6908                           ;RF_Control_B1.c: 111: if(RF->TransceiveGO)
  6909  1618  087C               	movf	_RF,w
  6910  1619  0086               	movwf	6
  6911  161A  0187               	clrf	7
  6912  161B  1D01               	btfss	1,2
  6913  161C  0008               	return
  6914                           
  6915                           ;RF_Control_B1.c: 112: {
  6916                           ;RF_Control_B1.c: 113: RF_RxDisable(1);
  6917  161D  3001               	movlw	1
  6918  161E  3199  2157  3195   	fcall	_RF_RxDisable
  6919                           
  6920                           ;RF_Control_B1.c: 114: if(!RF->Debounce)
  6921  1621  087C               	movf	_RF,w
  6922  1622  0086               	movwf	6
  6923  1623  0187               	clrf	7
  6924  1624  1A81               	btfsc	1,5
  6925  1625  2E3E               	goto	l9610
  6926                           
  6927                           ;RF_Control_B1.c: 115: {
  6928                           ;RF_Control_B1.c: 116: RF->DebounceTime++;
  6929  1626  3001               	movlw	1
  6930  1627  0020               	movlb	0	; select bank0
  6931  1628  00E9               	movwf	??_setRF_Main
  6932  1629  0A7C               	incf	_RF,w
  6933  162A  0086               	movwf	6
  6934  162B  0187               	clrf	7
  6935  162C  0869               	movf	??_setRF_Main,w
  6936  162D  0781               	addwf	1,f
  6937                           
  6938                           ;RF_Control_B1.c: 117: if(RF->DebounceTime == 25)
  6939  162E  0A7C               	incf	_RF,w
  6940  162F  0086               	movwf	6
  6941  1630  0187               	clrf	7
  6942  1631  0801               	movf	1,w
  6943  1632  3A19               	xorlw	25
  6944  1633  1D03               	skipz
  6945  1634  0008               	return
  6946                           
  6947                           ;RF_Control_B1.c: 118: {
  6948                           ;RF_Control_B1.c: 119: RF->DebounceTime=0;
  6949  1635  0A7C               	incf	_RF,w
  6950  1636  0086               	movwf	6
  6951  1637  0187               	clrf	7
  6952  1638  0181               	clrf	1
  6953                           
  6954                           ;RF_Control_B1.c: 120: RF->Debounce=1;
  6955  1639  087C               	movf	_RF,w
  6956  163A  0086               	movwf	6
  6957  163B  0187               	clrf	7
  6958  163C  1681               	bsf	1,5
  6959                           
  6960                           ;RF_Control_B1.c: 121: }
  6961                           ;RF_Control_B1.c: 122: }
  6962  163D  0008               	return
  6963  163E                     l9610:	
  6964                           
  6965                           ;RF_Control_B1.c: 123: else
  6966                           ;RF_Control_B1.c: 124: {
  6967                           ;RF_Control_B1.c: 125: RF->Debounce=0;
  6968  163E  087C               	movf	_RF,w
  6969  163F  0086               	movwf	6
  6970  1640  0187               	clrf	7
  6971  1641  1281               	bcf	1,5
  6972                           
  6973                           ;RF_Control_B1.c: 126: RF->TransceiveGO=0;
  6974  1642  087C               	movf	_RF,w
  6975  1643  0086               	movwf	6
  6976  1644  0187               	clrf	7
  6977  1645  1101               	bcf	1,2
  6978                           
  6979                           ;RF_Control_B1.c: 127: CC2500_TxData();
  6980  1646  319D  257D         	fcall	_CC2500_TxData
  6981  1648  0008               	return
  6982  1649                     __end_of_setRF_Main:	
  6983                           
  6984                           	psect	text23
  6985  07AB                     __ptext23:	
  6986 ;; *************** function _getRxData *****************
  6987 ;; Defined at:
  6988 ;;		line 207 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  rf              1    wreg     unsigned char 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  rf              1   72[BANK0 ] unsigned char 
  6993 ;;  i               1    0        unsigned char 
  6994 ;; Return value:  Size  Location     Type
  6995 ;;		None               void
  6996 ;; Registers used:
  6997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;Total ram usage:        1 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:   11
  7010 ;; This function calls:
  7011 ;;		_RfPointSelect
  7012 ;;		_setControl_Lights_Table
  7013 ;;		_setLog_Code
  7014 ;; This function is called by:
  7015 ;;		_setRF_Main
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           
  7020                           ;psect for function _getRxData
  7021  07AB                     _getRxData:	
  7022                           
  7023                           ;incstack = 0
  7024                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7025                           ;getRxData@rf stored from wreg
  7026  07AB  0020               	movlb	0	; select bank0
  7027  07AC  00E8               	movwf	getRxData@rf
  7028                           
  7029                           ;RF_Control_B1.c: 209: unsigned char i;
  7030                           ;RF_Control_B1.c: 210: RfPointSelect(rf);
  7031  07AD  0868               	movf	getRxData@rf,w
  7032  07AE  31A4  2442  3187   	fcall	_RfPointSelect
  7033                           
  7034                           ;RF_Control_B1.c: 211: if(RF->Learn)
  7035  07B1  087C               	movf	_RF,w
  7036  07B2  0086               	movwf	6
  7037  07B3  0187               	clrf	7
  7038  07B4  1F01               	btfss	1,6
  7039  07B5  2FC2               	goto	l9122
  7040                           
  7041                           ;RF_Control_B1.c: 212: {
  7042                           ;RF_Control_B1.c: 213: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  7043  07B6  0021               	movlb	1	; select bank1
  7044  07B7  08A0               	movf	_RF_Data^(0+128),f
  7045  07B8  1D03               	skipz
  7046  07B9  0008               	return
  7047  07BA  0821               	movf	(_RF_Data^(0+128)+1),w
  7048  07BB  3A64               	xorlw	100
  7049  07BC  1D03               	skipz
  7050  07BD  0008               	return
  7051                           
  7052                           ;RF_Control_B1.c: 214: {
  7053                           ;RF_Control_B1.c: 215: setLog_Code(1);
  7054  07BE  3001               	movlw	1
  7055  07BF  319E  264C         	fcall	_setLog_Code
  7056                           
  7057                           ;RF_Control_B1.c: 216: }
  7058                           ;RF_Control_B1.c: 217: }
  7059  07C1  0008               	return
  7060  07C2                     l9122:	
  7061                           
  7062                           ;RF_Control_B1.c: 218: else
  7063                           ;RF_Control_B1.c: 219: {
  7064                           ;RF_Control_B1.c: 220: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  7065  07C2  0021               	movlb	1	; select bank1
  7066  07C3  08A0               	movf	_RF_Data^(0+128),f
  7067  07C4  1D03               	skipz
  7068  07C5  0008               	return
  7069  07C6  0821               	movf	(_RF_Data^(0+128)+1),w
  7070  07C7  3A02               	xorlw	2
  7071  07C8  1D03               	skipz
  7072  07C9  0008               	return
  7073                           
  7074                           ;RF_Control_B1.c: 221: {
  7075                           ;RF_Control_B1.c: 222: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  7076  07CA  082C               	movf	(_RF_Data^(0+128)+12),w
  7077  07CB  3AFF               	xorlw	255
  7078  07CC  1D03               	skipz
  7079  07CD  2FD8               	goto	l9134
  7080  07CE  082D               	movf	(_RF_Data^(0+128)+13),w
  7081  07CF  3AFF               	xorlw	255
  7082  07D0  1D03               	skipz
  7083  07D1  2FD8               	goto	l9134
  7084  07D2  082E               	movf	(_RF_Data^(0+128)+14),w
  7085  07D3  3AFF               	xorlw	255
  7086  07D4  1D03               	skipz
  7087  07D5  2FD8               	goto	l9134
  7088                           
  7089                           ;RF_Control_B1.c: 223: {
  7090                           ;RF_Control_B1.c: 224: __nop();
  7091  07D6  0000               	nop
  7092                           
  7093                           ;RF_Control_B1.c: 225: }
  7094  07D7  0008               	return
  7095  07D8                     l9134:	
  7096                           
  7097                           ;RF_Control_B1.c: 226: else
  7098                           ;RF_Control_B1.c: 227: {
  7099                           ;RF_Control_B1.c: 228: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  7100  07D8  0020               	movlb	0	; select bank0
  7101  07D9  086F               	movf	_Product,w
  7102  07DA  3E0C               	addlw	12
  7103  07DB  0086               	movwf	6
  7104  07DC  3001               	movlw	1	; select bank2/3
  7105  07DD  0087               	movwf	7
  7106  07DE  0021               	movlb	1	; select bank1
  7107  07DF  082C               	movf	(_RF_Data^(0+128)+12),w
  7108  07E0  0601               	xorwf	1,w
  7109  07E1  1D03               	skipz
  7110  07E2  0008               	return
  7111  07E3  0020               	movlb	0	; select bank0
  7112  07E4  086F               	movf	_Product,w
  7113  07E5  3E0D               	addlw	13
  7114  07E6  0086               	movwf	6
  7115  07E7  3001               	movlw	1	; select bank2/3
  7116  07E8  0087               	movwf	7
  7117  07E9  0021               	movlb	1	; select bank1
  7118  07EA  082D               	movf	(_RF_Data^(0+128)+13),w
  7119  07EB  0601               	xorwf	1,w
  7120  07EC  1D03               	skipz
  7121  07ED  0008               	return
  7122  07EE  0020               	movlb	0	; select bank0
  7123  07EF  086F               	movf	_Product,w
  7124  07F0  3E0E               	addlw	14
  7125  07F1  0086               	movwf	6
  7126  07F2  3001               	movlw	1	; select bank2/3
  7127  07F3  0087               	movwf	7
  7128  07F4  0021               	movlb	1	; select bank1
  7129  07F5  082E               	movf	(_RF_Data^(0+128)+14),w
  7130  07F6  0601               	xorwf	1,w
  7131  07F7  1D03               	skipz
  7132  07F8  0008               	return
  7133                           
  7134                           ;RF_Control_B1.c: 229: {
  7135                           ;RF_Control_B1.c: 230: setControl_Lights_Table(1);
  7136  07F9  3001               	movlw	1
  7137  07FA  3196  26D9         	fcall	_setControl_Lights_Table
  7138                           
  7139                           ;RF_Control_B1.c: 239: {
  7140                           ;RF_Control_B1.c: 240: ;
  7141                           
  7142                           ;RF_Control_B1.c: 235: {
  7143                           ;RF_Control_B1.c: 236: ;
  7144                           ;RF_Control_B1.c: 237: }
  7145                           
  7146                           ;RF_Control_B1.c: 231: }
  7147                           ;RF_Control_B1.c: 232: }
  7148                           ;RF_Control_B1.c: 233: }
  7149  07FC  0008               	return
  7150  07FD                     __end_of_getRxData:	
  7151                           
  7152                           	psect	text24
  7153  1E4C                     __ptext24:	
  7154 ;; *************** function _setLog_Code *****************
  7155 ;; Defined at:
  7156 ;;		line 249 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  rf              1    wreg     unsigned char 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  rf              1   11[BANK0 ] unsigned char 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;		None               void
  7163 ;; Registers used:
  7164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;Total ram usage:        2 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    6
  7177 ;; This function calls:
  7178 ;;		_RfPointSelect
  7179 ;;		_setBuz
  7180 ;; This function is called by:
  7181 ;;		_getRxData
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           
  7186                           ;psect for function _setLog_Code
  7187  1E4C                     _setLog_Code:	
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7191                           ;setLog_Code@rf stored from wreg
  7192  1E4C  0020               	movlb	0	; select bank0
  7193  1E4D  00AB               	movwf	setLog_Code@rf
  7194                           
  7195                           ;RF_Control_B1.c: 251: RfPointSelect(rf);
  7196  1E4E  082B               	movf	setLog_Code@rf,w
  7197  1E4F  31A4  2442  319E   	fcall	_RfPointSelect
  7198                           
  7199                           ;RF_Control_B1.c: 252: Product->Data[12]=RF_Data[12];
  7200  1E52  0021               	movlb	1	; select bank1
  7201  1E53  082C               	movf	(_RF_Data^(0+128)+12),w
  7202  1E54  0020               	movlb	0	; select bank0
  7203  1E55  00AA               	movwf	??_setLog_Code
  7204  1E56  086F               	movf	_Product,w
  7205  1E57  3E0C               	addlw	12
  7206  1E58  0086               	movwf	6
  7207  1E59  3001               	movlw	1	; select bank2/3
  7208  1E5A  0087               	movwf	7
  7209  1E5B  082A               	movf	??_setLog_Code,w
  7210  1E5C  0081               	movwf	1
  7211                           
  7212                           ;RF_Control_B1.c: 253: Product->Data[13]=RF_Data[13];
  7213  1E5D  0021               	movlb	1	; select bank1
  7214  1E5E  082D               	movf	(_RF_Data^(0+128)+13),w
  7215  1E5F  0020               	movlb	0	; select bank0
  7216  1E60  00AA               	movwf	??_setLog_Code
  7217  1E61  086F               	movf	_Product,w
  7218  1E62  3E0D               	addlw	13
  7219  1E63  0086               	movwf	6
  7220  1E64  3001               	movlw	1	; select bank2/3
  7221  1E65  0087               	movwf	7
  7222  1E66  082A               	movf	??_setLog_Code,w
  7223  1E67  0081               	movwf	1
  7224                           
  7225                           ;RF_Control_B1.c: 254: Product->Data[14]=RF_Data[14];
  7226  1E68  0021               	movlb	1	; select bank1
  7227  1E69  082E               	movf	(_RF_Data^(0+128)+14),w
  7228  1E6A  0020               	movlb	0	; select bank0
  7229  1E6B  00AA               	movwf	??_setLog_Code
  7230  1E6C  086F               	movf	_Product,w
  7231  1E6D  3E0E               	addlw	14
  7232  1E6E  0086               	movwf	6
  7233  1E6F  3001               	movlw	1	; select bank2/3
  7234  1E70  0087               	movwf	7
  7235  1E71  082A               	movf	??_setLog_Code,w
  7236  1E72  0081               	movwf	1
  7237                           
  7238                           ;RF_Control_B1.c: 255: setBuz(1,100);
  7239  1E73  3064               	movlw	100
  7240  1E74  00A6               	movwf	setBuz@time
  7241  1E75  3000               	movlw	0
  7242  1E76  00A7               	movwf	setBuz@time+1
  7243  1E77  3001               	movlw	1
  7244  1E78  3193  23C7  319E   	fcall	_setBuz
  7245                           
  7246                           ;RF_Control_B1.c: 256: RF->Learn=0;
  7247  1E7B  087C               	movf	_RF,w
  7248  1E7C  0086               	movwf	6
  7249  1E7D  0187               	clrf	7
  7250  1E7E  1301               	bcf	1,6
  7251                           
  7252                           ;RF_Control_B1.c: 257: if(TMain->First)
  7253  1E7F  0021               	movlb	1	; select bank1
  7254  1E80  0869               	movf	_TMain^(0+128),w
  7255  1E81  3E03               	addlw	3
  7256  1E82  0086               	movwf	6
  7257  1E83  3001               	movlw	1	; select bank2/3
  7258  1E84  0087               	movwf	7
  7259  1E85  1C81               	btfss	1,1
  7260  1E86  2E8D               	goto	l2706
  7261                           
  7262                           ;RF_Control_B1.c: 258: {
  7263                           ;RF_Control_B1.c: 259: Memory->LoopSave=1;
  7264  1E87  0868               	movf	_Memory^(0+128),w
  7265  1E88  3E22               	addlw	34
  7266  1E89  0086               	movwf	6
  7267  1E8A  3002               	movlw	2	; select bank4/5
  7268  1E8B  0087               	movwf	7
  7269  1E8C  1501               	bsf	1,2
  7270  1E8D                     l2706:	
  7271                           
  7272                           ;RF_Control_B1.c: 260: }
  7273                           ;RF_Control_B1.c: 261: Memory->Modify=1;
  7274  1E8D  0868               	movf	_Memory^(0+128),w
  7275  1E8E  3E22               	addlw	34
  7276  1E8F  0086               	movwf	6
  7277  1E90  3002               	movlw	2	; select bank4/5
  7278  1E91  0087               	movwf	7
  7279  1E92  1401               	bsf	1,0
  7280  1E93  0008               	return
  7281  1E94                     __end_of_setLog_Code:	
  7282                           
  7283                           	psect	text25
  7284  16D9                     __ptext25:	
  7285 ;; *************** function _setControl_Lights_Table *****************
  7286 ;; Defined at:
  7287 ;;		line 264 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  rf              1    wreg     unsigned char 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  rf              1   71[BANK0 ] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;		None               void
  7294 ;; Registers used:
  7295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;Total ram usage:        1 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:   10
  7308 ;; This function calls:
  7309 ;;		_RfPointSelect
  7310 ;;		_setBuz
  7311 ;;		_setDimmerLights
  7312 ;;		_setRFSW_AdjControl
  7313 ;;		_setRFSW_Control
  7314 ;;		_setRFSW_Status
  7315 ;;		_setSw_Status
  7316 ;;		_setTxData
  7317 ;; This function is called by:
  7318 ;;		_getRxData
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _setControl_Lights_Table
  7324  16D9                     _setControl_Lights_Table:	
  7325                           
  7326                           ;incstack = 0
  7327                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7328                           ;setControl_Lights_Table@rf stored from wreg
  7329  16D9  0020               	movlb	0	; select bank0
  7330  16DA  00E7               	movwf	setControl_Lights_Table@rf
  7331                           
  7332                           ;RF_Control_B1.c: 266: RfPointSelect(rf);
  7333  16DB  0867               	movf	setControl_Lights_Table@rf,w
  7334  16DC  31A4  2442  3196   	fcall	_RfPointSelect
  7335                           
  7336                           ;RF_Control_B1.c: 267: if(RF_Data[15] == 0x00)
  7337  16DF  0021               	movlb	1	; select bank1
  7338  16E0  08AF               	movf	(_RF_Data^(0+128)+15),f
  7339  16E1  1D03               	skipz
  7340  16E2  2F2C               	goto	l8946
  7341                           
  7342                           ;RF_Control_B1.c: 268: {
  7343                           ;RF_Control_B1.c: 270: setDimmerLights(1,0);
  7344  16E3  0020               	movlb	0	; select bank0
  7345  16E4  01A4               	clrf	setDimmerLights@status
  7346  16E5  3001               	movlw	1
  7347  16E6  3197  276C  3196   	fcall	_setDimmerLights
  7348                           
  7349                           ;RF_Control_B1.c: 271: setRFSW_Status(1,0);
  7350  16E9  0020               	movlb	0	; select bank0
  7351  16EA  01A2               	clrf	setRFSW_Status@command
  7352  16EB  3001               	movlw	1
  7353  16EC  31A5  2527  3196   	fcall	_setRFSW_Status
  7354                           
  7355                           ;RF_Control_B1.c: 272: setSw_Status(1,0);
  7356  16EF  0020               	movlb	0	; select bank0
  7357  16F0  01A2               	clrf	setSw_Status@command
  7358  16F1  3001               	movlw	1
  7359  16F2  31A5  2536  3196   	fcall	_setSw_Status
  7360                           
  7361                           ;RF_Control_B1.c: 275: setDimmerLights(2,0);
  7362  16F5  0020               	movlb	0	; select bank0
  7363  16F6  01A4               	clrf	setDimmerLights@status
  7364  16F7  3002               	movlw	2
  7365  16F8  3197  276C  3196   	fcall	_setDimmerLights
  7366                           
  7367                           ;RF_Control_B1.c: 276: setRFSW_Status(2,0);
  7368  16FB  0020               	movlb	0	; select bank0
  7369  16FC  01A2               	clrf	setRFSW_Status@command
  7370  16FD  3002               	movlw	2
  7371  16FE  31A5  2527  3196   	fcall	_setRFSW_Status
  7372                           
  7373                           ;RF_Control_B1.c: 277: setSw_Status(2,0);
  7374  1701  0020               	movlb	0	; select bank0
  7375  1702  01A2               	clrf	setSw_Status@command
  7376  1703  3002               	movlw	2
  7377  1704  31A5  2536  3196   	fcall	_setSw_Status
  7378                           
  7379                           ;RF_Control_B1.c: 285: Product->Data[9]=0;
  7380  1707  0020               	movlb	0	; select bank0
  7381  1708  086F               	movf	_Product,w
  7382  1709  3E09               	addlw	9
  7383  170A  0086               	movwf	6
  7384  170B  3001               	movlw	1	; select bank2/3
  7385  170C  0087               	movwf	7
  7386  170D  0181               	clrf	1
  7387                           
  7388                           ;RF_Control_B1.c: 286: Product->Data[11]=0;
  7389  170E  086F               	movf	_Product,w
  7390  170F  3E0B               	addlw	11
  7391  1710  0086               	movwf	6
  7392  1711  3001               	movlw	1	; select bank2/3
  7393  1712  0087               	movwf	7
  7394  1713  0181               	clrf	1
  7395                           
  7396                           ;RF_Control_B1.c: 287: Product->Data[15]=0;
  7397  1714  086F               	movf	_Product,w
  7398  1715  3E0F               	addlw	15
  7399  1716  0086               	movwf	6
  7400  1717  3001               	movlw	1	; select bank2/3
  7401  1718  0087               	movwf	7
  7402  1719  0181               	clrf	1
  7403                           
  7404                           ;RF_Control_B1.c: 288: Product->Data[17]=0;
  7405  171A  086F               	movf	_Product,w
  7406  171B  3E11               	addlw	17
  7407  171C  0086               	movwf	6
  7408  171D  3001               	movlw	1	; select bank2/3
  7409  171E  0087               	movwf	7
  7410  171F  0181               	clrf	1
  7411                           
  7412                           ;RF_Control_B1.c: 289: setBuz(1,100);
  7413  1720  3064               	movlw	100
  7414  1721  00A6               	movwf	setBuz@time
  7415  1722  3000               	movlw	0
  7416  1723  00A7               	movwf	setBuz@time+1
  7417  1724  3001               	movlw	1
  7418  1725  3193  23C7  3196   	fcall	_setBuz
  7419                           
  7420                           ;RF_Control_B1.c: 290: setTxData(1);
  7421  1728  3001               	movlw	1
  7422  1729  318B  2318         	fcall	_setTxData
  7423                           
  7424                           ;RF_Control_B1.c: 291: }
  7425  172B  0008               	return
  7426  172C                     l8946:	
  7427                           
  7428                           ;RF_Control_B1.c: 292: else if(RF_Data[15] == 0x20)
  7429  172C  0021               	movlb	1	; select bank1
  7430  172D  082F               	movf	(_RF_Data^(0+128)+15),w
  7431  172E  3A20               	xorlw	32
  7432  172F  1D03               	skipz
  7433  1730  2F48               	goto	l8952
  7434                           
  7435                           ;RF_Control_B1.c: 293: {
  7436                           ;RF_Control_B1.c: 294: Product->Data[9]=0;
  7437  1731  0020               	movlb	0	; select bank0
  7438  1732  086F               	movf	_Product,w
  7439  1733  3E09               	addlw	9
  7440  1734  0086               	movwf	6
  7441  1735  3001               	movlw	1	; select bank2/3
  7442  1736  0087               	movwf	7
  7443  1737  0181               	clrf	1
  7444                           
  7445                           ;RF_Control_B1.c: 295: Product->Data[11]=0;
  7446  1738  086F               	movf	_Product,w
  7447  1739  3E0B               	addlw	11
  7448  173A  0086               	movwf	6
  7449  173B  3001               	movlw	1	; select bank2/3
  7450  173C  0087               	movwf	7
  7451  173D  0181               	clrf	1
  7452                           
  7453                           ;RF_Control_B1.c: 296: Product->Data[17]=0;
  7454  173E  086F               	movf	_Product,w
  7455  173F  3E11               	addlw	17
  7456  1740  0086               	movwf	6
  7457  1741  3001               	movlw	1	; select bank2/3
  7458  1742  0087               	movwf	7
  7459  1743  0181               	clrf	1
  7460                           
  7461                           ;RF_Control_B1.c: 297: setTxData(1);
  7462  1744  3001               	movlw	1
  7463  1745  318B  2318         	fcall	_setTxData
  7464                           
  7465                           ;RF_Control_B1.c: 298: }
  7466  1747  0008               	return
  7467  1748                     l8952:	
  7468                           
  7469                           ;RF_Control_B1.c: 300: else if(RF_Data[15] == 0x01)
  7470  1748  0021               	movlb	1	; select bank1
  7471  1749  082F               	movf	(_RF_Data^(0+128)+15),w
  7472  174A  3A01               	xorlw	1
  7473  174B  1D03               	skipz
  7474  174C  2F51               	goto	l8956
  7475                           
  7476                           ;RF_Control_B1.c: 301: {
  7477                           ;RF_Control_B1.c: 302: setRFSW_Control(1);
  7478  174D  3001               	movlw	1
  7479  174E  3196  2649         	fcall	_setRFSW_Control
  7480                           
  7481                           ;RF_Control_B1.c: 303: }
  7482  1750  0008               	return
  7483  1751                     l8956:	
  7484                           
  7485                           ;RF_Control_B1.c: 305: else if(RF_Data[15] == 0x11)
  7486  1751  0021               	movlb	1	; select bank1
  7487  1752  082F               	movf	(_RF_Data^(0+128)+15),w
  7488  1753  3A11               	xorlw	17
  7489  1754  1D03               	skipz
  7490  1755  2F5A               	goto	l8960
  7491                           
  7492                           ;RF_Control_B1.c: 306: {
  7493                           ;RF_Control_B1.c: 307: setRFSW_AdjControl(1);
  7494  1756  3001               	movlw	1
  7495  1757  319C  2433         	fcall	_setRFSW_AdjControl
  7496                           
  7497                           ;RF_Control_B1.c: 308: }
  7498  1759  0008               	return
  7499  175A                     l8960:	
  7500                           
  7501                           ;RF_Control_B1.c: 313: else if(RF_Data[15] == 0x02)
  7502  175A  0021               	movlb	1	; select bank1
  7503  175B  082F               	movf	(_RF_Data^(0+128)+15),w
  7504  175C  3A02               	xorlw	2
  7505  175D  1D03               	skipz
  7506  175E  2F63               	goto	l8964
  7507                           
  7508                           ;RF_Control_B1.c: 314: {
  7509                           ;RF_Control_B1.c: 315: setRFSW_Control(2);
  7510  175F  3002               	movlw	2
  7511  1760  3196  2649         	fcall	_setRFSW_Control
  7512                           
  7513                           ;RF_Control_B1.c: 316: }
  7514  1762  0008               	return
  7515  1763                     l8964:	
  7516                           
  7517                           ;RF_Control_B1.c: 318: else if(RF_Data[15] == 0x21)
  7518  1763  0021               	movlb	1	; select bank1
  7519  1764  082F               	movf	(_RF_Data^(0+128)+15),w
  7520  1765  3A21               	xorlw	33
  7521  1766  1D03               	skipz
  7522  1767  0008               	return
  7523                           
  7524                           ;RF_Control_B1.c: 319: {
  7525                           ;RF_Control_B1.c: 320: setRFSW_AdjControl(2);
  7526  1768  3002               	movlw	2
  7527  1769  319C  2433         	fcall	_setRFSW_AdjControl
  7528  176B  0008               	return
  7529  176C                     __end_of_setControl_Lights_Table:	
  7530                           
  7531                           	psect	text26
  7532  1649                     __ptext26:	
  7533 ;; *************** function _setRFSW_Control *****************
  7534 ;; Defined at:
  7535 ;;		line 361 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  sw              1    wreg     unsigned char 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  sw              1   67[BANK0 ] unsigned char 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;		None               void
  7542 ;; Registers used:
  7543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;Total ram usage:        2 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    8
  7556 ;; This function calls:
  7557 ;;		_RfSWPointSelect
  7558 ;;		_setBuz
  7559 ;;		_setDelayOff_GO
  7560 ;;		_setDimmerLights_Switch
  7561 ;;		_setDimmerLights_Trigger
  7562 ;;		_setRF_DimmerLights
  7563 ;;		_setSw_Status
  7564 ;;		_setTxData
  7565 ;; This function is called by:
  7566 ;;		_setControl_Lights_Table
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           
  7571                           ;psect for function _setRFSW_Control
  7572  1649                     _setRFSW_Control:	
  7573                           
  7574                           ;incstack = 0
  7575                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7576                           ;setRFSW_Control@sw stored from wreg
  7577  1649  0020               	movlb	0	; select bank0
  7578  164A  00E3               	movwf	setRFSW_Control@sw
  7579                           
  7580                           ;RF_Control_B1.c: 363: RfSWPointSelect(sw);
  7581  164B  0863               	movf	setRFSW_Control@sw,w
  7582  164C  31A6  263C  3196   	fcall	_RfSWPointSelect
  7583                           
  7584                           ;RF_Control_B1.c: 364: if(!RFSW->Status)
  7585  164F  0021               	movlb	1	; select bank1
  7586  1650  083C               	movf	_RFSW^(0+128),w
  7587  1651  0086               	movwf	6
  7588  1652  0187               	clrf	7
  7589  1653  1801               	btfsc	1,0
  7590  1654  2E8A               	goto	l8834
  7591                           
  7592                           ;RF_Control_B1.c: 365: {
  7593                           ;RF_Control_B1.c: 366: if(RF_Data[16] == 0x80)
  7594  1655  0830               	movf	(_RF_Data^(0+128)+16),w
  7595  1656  3A80               	xorlw	128
  7596  1657  1D03               	skipz
  7597  1658  2E66               	goto	l8824
  7598                           
  7599                           ;RF_Control_B1.c: 367: {
  7600                           ;RF_Control_B1.c: 368: setDelayOff_GO(sw,1,RF_Data[17]);
  7601  1659  0020               	movlb	0	; select bank0
  7602  165A  01A3               	clrf	setDelayOff_GO@command
  7603  165B  0AA3               	incf	setDelayOff_GO@command,f
  7604  165C  0021               	movlb	1	; select bank1
  7605  165D  0831               	movf	(_RF_Data^(0+128)+17),w
  7606  165E  0020               	movlb	0	; select bank0
  7607  165F  00E2               	movwf	??_setRFSW_Control
  7608  1660  0862               	movf	??_setRFSW_Control,w
  7609  1661  00A4               	movwf	setDelayOff_GO@value
  7610  1662  0863               	movf	setRFSW_Control@sw,w
  7611  1663  319F  2746  3196   	fcall	_setDelayOff_GO
  7612  1666                     l8824:	
  7613                           
  7614                           ;RF_Control_B1.c: 369: }
  7615                           ;RF_Control_B1.c: 370: RFSW->Status=1;
  7616  1666  0021               	movlb	1	; select bank1
  7617  1667  083C               	movf	_RFSW^(0+128),w
  7618  1668  0086               	movwf	6
  7619  1669  0187               	clrf	7
  7620  166A  1401               	bsf	1,0
  7621                           
  7622                           ;RF_Control_B1.c: 371: setSw_Status(sw,1);
  7623  166B  0020               	movlb	0	; select bank0
  7624  166C  01A2               	clrf	setSw_Status@command
  7625  166D  0AA2               	incf	setSw_Status@command,f
  7626  166E  0863               	movf	setRFSW_Control@sw,w
  7627  166F  31A5  2536  3196   	fcall	_setSw_Status
  7628                           
  7629                           ;RF_Control_B1.c: 373: setDimmerLights_Trigger(sw,1);
  7630  1672  0020               	movlb	0	; select bank0
  7631  1673  01A2               	clrf	setDimmerLights_Trigger@command
  7632  1674  0AA2               	incf	setDimmerLights_Trigger@command,f
  7633  1675  0863               	movf	setRFSW_Control@sw,w
  7634  1676  31A5  2565  3196   	fcall	_setDimmerLights_Trigger
  7635                           
  7636                           ;RF_Control_B1.c: 374: setDimmerLights_Switch(sw,1);
  7637  1679  0020               	movlb	0	; select bank0
  7638  167A  01A2               	clrf	setDimmerLights_Switch@command
  7639  167B  0AA2               	incf	setDimmerLights_Switch@command,f
  7640  167C  0863               	movf	setRFSW_Control@sw,w
  7641  167D  31A5  2555  3196   	fcall	_setDimmerLights_Switch
  7642                           
  7643                           ;RF_Control_B1.c: 376: setRF_DimmerLights(sw,RFSW->Status);
  7644  1680  0021               	movlb	1	; select bank1
  7645  1681  083C               	movf	_RFSW^(0+128),w
  7646  1682  0086               	movwf	6
  7647  1683  0187               	clrf	7
  7648  1684  3000               	movlw	0
  7649  1685  1801               	btfsc	1,0
  7650  1686  3001               	movlw	1
  7651  1687  0020               	movlb	0	; select bank0
  7652  1688  00DD               	movwf	setRF_DimmerLights@on
  7653  1689  2EC8               	goto	L4
  7654  168A                     l8834:	
  7655                           ;RF_Control_B1.c: 377: }
  7656                           
  7657                           
  7658                           ;RF_Control_B1.c: 378: else
  7659                           ;RF_Control_B1.c: 379: {
  7660                           ;RF_Control_B1.c: 380: if(RF_Data[16] == 0x80)
  7661  168A  0021               	movlb	1	; select bank1
  7662  168B  0830               	movf	(_RF_Data^(0+128)+16),w
  7663  168C  3A80               	xorlw	128
  7664  168D  1D03               	skipz
  7665  168E  2EA0               	goto	l8838
  7666                           
  7667                           ;RF_Control_B1.c: 381: {
  7668                           ;RF_Control_B1.c: 382: setDelayOff_GO(sw,1,RF_Data[17]);
  7669  168F  0020               	movlb	0	; select bank0
  7670  1690  01A3               	clrf	setDelayOff_GO@command
  7671  1691  0AA3               	incf	setDelayOff_GO@command,f
  7672  1692  0021               	movlb	1	; select bank1
  7673  1693  0831               	movf	(_RF_Data^(0+128)+17),w
  7674  1694  0020               	movlb	0	; select bank0
  7675  1695  00E2               	movwf	??_setRFSW_Control
  7676  1696  0862               	movf	??_setRFSW_Control,w
  7677  1697  00A4               	movwf	setDelayOff_GO@value
  7678  1698  0863               	movf	setRFSW_Control@sw,w
  7679  1699  319F  2746  3196   	fcall	_setDelayOff_GO
  7680                           
  7681                           ;RF_Control_B1.c: 383: setRF_DimmerLights(sw,1);
  7682  169C  0020               	movlb	0	; select bank0
  7683  169D  01DD               	clrf	setRF_DimmerLights@on
  7684  169E  0ADD               	incf	setRF_DimmerLights@on,f
  7685  169F  2EC8               	goto	L4
  7686  16A0                     l8838:	
  7687                           ;RF_Control_B1.c: 384: }
  7688                           
  7689                           
  7690                           ;RF_Control_B1.c: 385: else
  7691                           ;RF_Control_B1.c: 386: {
  7692                           ;RF_Control_B1.c: 387: RFSW->Status=0;
  7693  16A0  0021               	movlb	1	; select bank1
  7694  16A1  083C               	movf	_RFSW^(0+128),w
  7695  16A2  0086               	movwf	6
  7696  16A3  0187               	clrf	7
  7697  16A4  1001               	bcf	1,0
  7698                           
  7699                           ;RF_Control_B1.c: 388: setSw_Status(sw,0);
  7700  16A5  0020               	movlb	0	; select bank0
  7701  16A6  01A2               	clrf	setSw_Status@command
  7702  16A7  0863               	movf	setRFSW_Control@sw,w
  7703  16A8  31A5  2536  3196   	fcall	_setSw_Status
  7704                           
  7705                           ;RF_Control_B1.c: 390: setDimmerLights_Trigger(sw,1);
  7706  16AB  0020               	movlb	0	; select bank0
  7707  16AC  01A2               	clrf	setDimmerLights_Trigger@command
  7708  16AD  0AA2               	incf	setDimmerLights_Trigger@command,f
  7709  16AE  0863               	movf	setRFSW_Control@sw,w
  7710  16AF  31A5  2565  3196   	fcall	_setDimmerLights_Trigger
  7711                           
  7712                           ;RF_Control_B1.c: 391: setDimmerLights_Switch(sw,RFSW->Status);
  7713  16B2  0021               	movlb	1	; select bank1
  7714  16B3  083C               	movf	_RFSW^(0+128),w
  7715  16B4  0086               	movwf	6
  7716  16B5  0187               	clrf	7
  7717  16B6  3000               	movlw	0
  7718  16B7  1801               	btfsc	1,0
  7719  16B8  3001               	movlw	1
  7720  16B9  0020               	movlb	0	; select bank0
  7721  16BA  00A2               	movwf	setDimmerLights_Switch@command
  7722  16BB  0863               	movf	setRFSW_Control@sw,w
  7723  16BC  31A5  2555  3196   	fcall	_setDimmerLights_Switch
  7724                           
  7725                           ;RF_Control_B1.c: 393: setDelayOff_GO(sw,0,0);
  7726  16BF  0020               	movlb	0	; select bank0
  7727  16C0  01A3               	clrf	setDelayOff_GO@command
  7728  16C1  01A4               	clrf	setDelayOff_GO@value
  7729  16C2  0863               	movf	setRFSW_Control@sw,w
  7730  16C3  319F  2746  3196   	fcall	_setDelayOff_GO
  7731                           
  7732                           ;RF_Control_B1.c: 394: setRF_DimmerLights(sw,0);
  7733  16C6  0020               	movlb	0	; select bank0
  7734  16C7  01DD               	clrf	setRF_DimmerLights@on
  7735  16C8                     L4:	
  7736  16C8  0863               	movf	setRFSW_Control@sw,w
  7737  16C9  3191  2133  3196   	fcall	_setRF_DimmerLights
  7738                           
  7739                           ;RF_Control_B1.c: 395: }
  7740                           ;RF_Control_B1.c: 396: }
  7741                           ;RF_Control_B1.c: 397: setBuz(1,100);
  7742  16CC  3064               	movlw	100
  7743  16CD  0020               	movlb	0	; select bank0
  7744  16CE  00A6               	movwf	setBuz@time
  7745  16CF  3000               	movlw	0
  7746  16D0  00A7               	movwf	setBuz@time+1
  7747  16D1  3001               	movlw	1
  7748  16D2  3193  23C7  3196   	fcall	_setBuz
  7749                           
  7750                           ;RF_Control_B1.c: 398: setTxData(1);
  7751  16D5  3001               	movlw	1
  7752  16D6  318B  2318         	fcall	_setTxData
  7753  16D8  0008               	return
  7754  16D9                     __end_of_setRFSW_Control:	
  7755                           
  7756                           	psect	text27
  7757  1F46                     __ptext27:	
  7758 ;; *************** function _setDelayOff_GO *****************
  7759 ;; Defined at:
  7760 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\DelayOff_B1.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  sw              1    wreg     unsigned char 
  7763 ;;  command         1    3[BANK0 ] unsigned char 
  7764 ;;  value           1    4[BANK0 ] unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  sw              1    7[BANK0 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;		None               void
  7769 ;; Registers used:
  7770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;Total ram usage:        5 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    5
  7783 ;; This function calls:
  7784 ;;		_DelayOffPointSelect
  7785 ;;		_DelayTimejudge
  7786 ;; This function is called by:
  7787 ;;		_setRFSW_Control
  7788 ;;		_Sw_DimmerOffFunc
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function _setDelayOff_GO
  7794  1F46                     _setDelayOff_GO:	
  7795                           
  7796                           ;incstack = 0
  7797                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7798                           ;setDelayOff_GO@sw stored from wreg
  7799  1F46  0020               	movlb	0	; select bank0
  7800  1F47  00A7               	movwf	setDelayOff_GO@sw
  7801                           
  7802                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  7803  1F48  0827               	movf	setDelayOff_GO@sw,w
  7804  1F49  31A6  267E  319F   	fcall	_DelayOffPointSelect
  7805                           
  7806                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  7807  1F4C  0021               	movlb	1	; select bank1
  7808  1F4D  0838               	movf	_DelayOff^(0+128),w
  7809  1F4E  0086               	movwf	6
  7810  1F4F  0187               	clrf	7
  7811  1F50  1C01               	btfss	1,0
  7812  1F51  0008               	return
  7813                           
  7814                           ;DelayOff_B1.c: 96: {
  7815                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  7816  1F52  0838               	movf	_DelayOff^(0+128),w
  7817  1F53  0086               	movwf	6
  7818  1F54  0187               	clrf	7
  7819  1F55  0020               	movlb	0	; select bank0
  7820  1F56  0823               	movf	setDelayOff_GO@command,w
  7821  1F57  1081               	bcf	1,1
  7822  1F58  1D03               	skipz
  7823  1F59  1481               	bsf	1,1
  7824                           
  7825                           ;DelayOff_B1.c: 98: if(command)
  7826  1F5A  0823               	movf	setDelayOff_GO@command,w
  7827  1F5B  1903               	btfsc	3,2
  7828  1F5C  2F88               	goto	l6564
  7829                           
  7830                           ;DelayOff_B1.c: 99: {
  7831                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  7832  1F5D  0824               	movf	setDelayOff_GO@value,w
  7833  1F5E  319A  222A  319F   	fcall	_DelayTimejudge
  7834  1F61  0020               	movlb	0	; select bank0
  7835  1F62  00A5               	movwf	??_setDelayOff_GO
  7836  1F63  0021               	movlb	1	; select bank1
  7837  1F64  0A38               	incf	_DelayOff^(0+128),w
  7838  1F65  0086               	movwf	6
  7839  1F66  0187               	clrf	7
  7840  1F67  0020               	movlb	0	; select bank0
  7841  1F68  0825               	movf	??_setDelayOff_GO,w
  7842  1F69  0081               	movwf	1
  7843                           
  7844                           ;DelayOff_B1.c: 101: if(((value%16)==5 || !(value%16)) && value <= 0x25)
  7845  1F6A  300F               	movlw	15
  7846  1F6B  0524               	andwf	setDelayOff_GO@value,w
  7847  1F6C  00A5               	movwf	??_setDelayOff_GO
  7848  1F6D  0825               	movf	??_setDelayOff_GO,w
  7849  1F6E  3A05               	xorlw	5
  7850  1F6F  1903               	skipnz
  7851  1F70  2F75               	goto	l6558
  7852  1F71  0824               	movf	setDelayOff_GO@value,w
  7853  1F72  390F               	andlw	15
  7854  1F73  1D03               	btfss	3,2
  7855  1F74  2F7B               	goto	l6562
  7856  1F75                     l6558:	
  7857  1F75  3026               	movlw	38
  7858  1F76  0224               	subwf	setDelayOff_GO@value,w
  7859  1F77  1803               	skipnc
  7860  1F78  2F7B               	goto	l6562
  7861                           
  7862                           ;DelayOff_B1.c: 102: {
  7863                           ;DelayOff_B1.c: 103: Product->Data[26+sw]=value;
  7864  1F79  0824               	movf	setDelayOff_GO@value,w
  7865  1F7A  2F7C               	goto	L5
  7866  1F7B                     l6562:	
  7867                           ;DelayOff_B1.c: 104: }
  7868                           
  7869                           
  7870                           ;DelayOff_B1.c: 105: else
  7871                           ;DelayOff_B1.c: 106: {
  7872                           ;DelayOff_B1.c: 107: Product->Data[26+sw]=0x05;
  7873  1F7B  3005               	movlw	5
  7874  1F7C                     L5:	
  7875  1F7C  00A5               	movwf	??_setDelayOff_GO
  7876  1F7D  0827               	movf	setDelayOff_GO@sw,w
  7877  1F7E  3E1A               	addlw	26
  7878  1F7F  076F               	addwf	_Product,w
  7879  1F80  00A6               	movwf	??_setDelayOff_GO+1
  7880  1F81  0826               	movf	??_setDelayOff_GO+1,w
  7881  1F82  0086               	movwf	6
  7882  1F83  3001               	movlw	1	; select bank2/3
  7883  1F84  0087               	movwf	7
  7884  1F85  0825               	movf	??_setDelayOff_GO,w
  7885  1F86  0081               	movwf	1
  7886                           
  7887                           ;DelayOff_B1.c: 108: }
  7888                           ;DelayOff_B1.c: 109: }
  7889  1F87  2F94               	goto	l6568
  7890  1F88                     l6564:	
  7891                           
  7892                           ;DelayOff_B1.c: 110: else if(!command)
  7893  1F88  08A3               	movf	setDelayOff_GO@command,f
  7894  1F89  1D03               	skipz
  7895  1F8A  2F94               	goto	l6568
  7896                           
  7897                           ;DelayOff_B1.c: 111: {
  7898                           ;DelayOff_B1.c: 112: Product->Data[sw+26]=0;
  7899  1F8B  0827               	movf	setDelayOff_GO@sw,w
  7900  1F8C  3E1A               	addlw	26
  7901  1F8D  076F               	addwf	_Product,w
  7902  1F8E  00A5               	movwf	??_setDelayOff_GO
  7903  1F8F  0825               	movf	??_setDelayOff_GO,w
  7904  1F90  0086               	movwf	6
  7905  1F91  3001               	movlw	1	; select bank2/3
  7906  1F92  0087               	movwf	7
  7907  1F93  0181               	clrf	1
  7908  1F94                     l6568:	
  7909                           
  7910                           ;DelayOff_B1.c: 113: }
  7911                           ;DelayOff_B1.c: 114: DelayOff->SecondTime=0;
  7912  1F94  0021               	movlb	1	; select bank1
  7913  1F95  0838               	movf	_DelayOff^(0+128),w
  7914  1F96  3E02               	addlw	2
  7915  1F97  0086               	movwf	6
  7916  1F98  0187               	clrf	7
  7917  1F99  3000               	movlw	0
  7918  1F9A  3FC0               	movwi [0]fsr1
  7919  1F9B  3FC1               	movwi [1]fsr1
  7920                           
  7921                           ;DelayOff_B1.c: 115: DelayOff->MinuteTime=0;
  7922  1F9C  0838               	movf	_DelayOff^(0+128),w
  7923  1F9D  3E04               	addlw	4
  7924  1F9E  0086               	movwf	6
  7925  1F9F  0187               	clrf	7
  7926  1FA0  0181               	clrf	1
  7927  1FA1  0008               	return
  7928  1FA2                     __end_of_setDelayOff_GO:	
  7929                           
  7930                           	psect	text28
  7931  1A2A                     __ptext28:	
  7932 ;; *************** function _DelayTimejudge *****************
  7933 ;; Defined at:
  7934 ;;		line 119 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\DelayOff_B1.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  value           1    wreg     unsigned char 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  value           1    2[BANK0 ] unsigned char 
  7939 ;;  i               1    1[BANK0 ] unsigned char 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      unsigned char 
  7942 ;; Registers used:
  7943 ;;		wreg
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;Total ram usage:        3 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:    4
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_setDelayOff_GO
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           
  7964                           ;psect for function _DelayTimejudge
  7965  1A2A                     _DelayTimejudge:	
  7966                           
  7967                           ;incstack = 0
  7968                           ; Regs used in _DelayTimejudge: [wreg]
  7969                           ;DelayTimejudge@value stored from wreg
  7970  1A2A  0020               	movlb	0	; select bank0
  7971  1A2B  00A2               	movwf	DelayTimejudge@value
  7972                           
  7973                           ;DelayOff_B1.c: 121: char i=5;
  7974  1A2C  3005               	movlw	5
  7975  1A2D  00A0               	movwf	??_DelayTimejudge
  7976  1A2E  0820               	movf	??_DelayTimejudge,w
  7977  1A2F  00A1               	movwf	DelayTimejudge@i
  7978                           
  7979                           ;DelayOff_B1.c: 122: if(value == 0x05)
  7980  1A30  0822               	movf	DelayTimejudge@value,w
  7981  1A31  3A05               	xorlw	5
  7982  1A32  1D03               	skipz
  7983  1A33  2A36               	goto	l6398
  7984                           
  7985                           ;DelayOff_B1.c: 123: {
  7986                           ;DelayOff_B1.c: 124: i=5;
  7987  1A34  3005               	movlw	5
  7988  1A35  2A53               	goto	L10
  7989  1A36                     l6398:	
  7990                           ;DelayOff_B1.c: 125: }
  7991                           
  7992                           
  7993                           ;DelayOff_B1.c: 126: else if(value == 0x10)
  7994  1A36  0822               	movf	DelayTimejudge@value,w
  7995  1A37  3A10               	xorlw	16
  7996  1A38  1D03               	skipz
  7997  1A39  2A3C               	goto	l6402
  7998                           
  7999                           ;DelayOff_B1.c: 127: {
  8000                           ;DelayOff_B1.c: 128: i=10;
  8001  1A3A  300A               	movlw	10
  8002  1A3B  2A53               	goto	L10
  8003  1A3C                     l6402:	
  8004                           ;DelayOff_B1.c: 129: }
  8005                           
  8006                           
  8007                           ;DelayOff_B1.c: 130: else if(value == 0x15)
  8008  1A3C  0822               	movf	DelayTimejudge@value,w
  8009  1A3D  3A15               	xorlw	21
  8010  1A3E  1D03               	skipz
  8011  1A3F  2A42               	goto	l6406
  8012                           
  8013                           ;DelayOff_B1.c: 131: {
  8014                           ;DelayOff_B1.c: 132: i=15;
  8015  1A40  300F               	movlw	15
  8016  1A41  2A53               	goto	L10
  8017  1A42                     l6406:	
  8018                           ;DelayOff_B1.c: 133: }
  8019                           
  8020                           
  8021                           ;DelayOff_B1.c: 134: else if(value == 0x20)
  8022  1A42  0822               	movf	DelayTimejudge@value,w
  8023  1A43  3A20               	xorlw	32
  8024  1A44  1D03               	skipz
  8025  1A45  2A48               	goto	l6410
  8026                           
  8027                           ;DelayOff_B1.c: 135: {
  8028                           ;DelayOff_B1.c: 136: i=20;
  8029  1A46  3014               	movlw	20
  8030  1A47  2A53               	goto	L10
  8031  1A48                     l6410:	
  8032                           ;DelayOff_B1.c: 137: }
  8033                           
  8034                           
  8035                           ;DelayOff_B1.c: 138: else if(value == 0x25)
  8036  1A48  0822               	movf	DelayTimejudge@value,w
  8037  1A49  3A25               	xorlw	37
  8038  1A4A  1D03               	skipz
  8039  1A4B  2A4E               	goto	l6414
  8040                           
  8041                           ;DelayOff_B1.c: 139: {
  8042                           ;DelayOff_B1.c: 140: i=25;
  8043  1A4C  3019               	movlw	25
  8044  1A4D  2A53               	goto	L10
  8045  1A4E                     l6414:	
  8046                           ;DelayOff_B1.c: 141: }
  8047                           
  8048                           
  8049                           ;DelayOff_B1.c: 142: else if(value == 0x30)
  8050  1A4E  0822               	movf	DelayTimejudge@value,w
  8051  1A4F  3A30               	xorlw	48
  8052  1A50  1D03               	skipz
  8053  1A51  2A56               	goto	l706
  8054                           
  8055                           ;DelayOff_B1.c: 143: {
  8056                           ;DelayOff_B1.c: 144: i=30;
  8057  1A52  301E               	movlw	30
  8058  1A53                     L10:	
  8059  1A53  00A0               	movwf	??_DelayTimejudge
  8060  1A54  0820               	movf	??_DelayTimejudge,w
  8061  1A55  00A1               	movwf	DelayTimejudge@i
  8062  1A56                     l706:	
  8063                           
  8064                           ;DelayOff_B1.c: 145: }
  8065                           ;DelayOff_B1.c: 146: return i;
  8066  1A56  0821               	movf	DelayTimejudge@i,w
  8067  1A57  0008               	return
  8068  1A58                     __end_of_DelayTimejudge:	
  8069                           
  8070                           	psect	text29
  8071  1C33                     __ptext29:	
  8072 ;; *************** function _setRFSW_AdjControl *****************
  8073 ;; Defined at:
  8074 ;;		line 401 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  sw              1    wreg     unsigned char 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  sw              1   70[BANK0 ] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;		None               void
  8081 ;; Registers used:
  8082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;Total ram usage:        3 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    9
  8095 ;; This function calls:
  8096 ;;		_RfSWPointSelect
  8097 ;;		_setRF_DimmerValue
  8098 ;;		_setTxData
  8099 ;; This function is called by:
  8100 ;;		_setControl_Lights_Table
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           
  8105                           ;psect for function _setRFSW_AdjControl
  8106  1C33                     _setRFSW_AdjControl:	
  8107                           
  8108                           ;incstack = 0
  8109                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8110                           ;setRFSW_AdjControl@sw stored from wreg
  8111  1C33  0020               	movlb	0	; select bank0
  8112  1C34  00E6               	movwf	setRFSW_AdjControl@sw
  8113                           
  8114                           ;RF_Control_B1.c: 403: RfSWPointSelect(sw);
  8115  1C35  0866               	movf	setRFSW_AdjControl@sw,w
  8116  1C36  31A6  263C  319C   	fcall	_RfSWPointSelect
  8117                           
  8118                           ;RF_Control_B1.c: 404: if(RFSW->Status)
  8119  1C39  0021               	movlb	1	; select bank1
  8120  1C3A  083C               	movf	_RFSW^(0+128),w
  8121  1C3B  0086               	movwf	6
  8122  1C3C  0187               	clrf	7
  8123  1C3D  1C01               	btfss	1,0
  8124  1C3E  2C4B               	goto	l6816
  8125                           
  8126                           ;RF_Control_B1.c: 405: {
  8127                           ;RF_Control_B1.c: 406: Memory->Modify=1;
  8128  1C3F  0868               	movf	_Memory^(0+128),w
  8129  1C40  3E22               	addlw	34
  8130  1C41  0086               	movwf	6
  8131  1C42  3002               	movlw	2	; select bank4/5
  8132  1C43  0087               	movwf	7
  8133  1C44  1401               	bsf	1,0
  8134                           
  8135                           ;RF_Control_B1.c: 407: setRF_DimmerValue(sw);
  8136  1C45  0020               	movlb	0	; select bank0
  8137  1C46  0866               	movf	setRFSW_AdjControl@sw,w
  8138  1C47  319B  234D  319C   	fcall	_setRF_DimmerValue
  8139                           
  8140                           ;RF_Control_B1.c: 408: }
  8141  1C4A  2C5D               	goto	l2738
  8142  1C4B                     l6816:	
  8143                           
  8144                           ;RF_Control_B1.c: 409: else
  8145                           ;RF_Control_B1.c: 410: {
  8146                           ;RF_Control_B1.c: 411: Product->Data[9]=Product->Data[20+sw];
  8147  1C4B  0020               	movlb	0	; select bank0
  8148  1C4C  0866               	movf	setRFSW_AdjControl@sw,w
  8149  1C4D  3E14               	addlw	20
  8150  1C4E  076F               	addwf	_Product,w
  8151  1C4F  00E4               	movwf	??_setRFSW_AdjControl
  8152  1C50  0864               	movf	??_setRFSW_AdjControl,w
  8153  1C51  0086               	movwf	6
  8154  1C52  3001               	movlw	1	; select bank2/3
  8155  1C53  0087               	movwf	7
  8156  1C54  0801               	movf	1,w
  8157  1C55  00E5               	movwf	??_setRFSW_AdjControl+1
  8158  1C56  086F               	movf	_Product,w
  8159  1C57  3E09               	addlw	9
  8160  1C58  0086               	movwf	6
  8161  1C59  3001               	movlw	1	; select bank2/3
  8162  1C5A  0087               	movwf	7
  8163  1C5B  0865               	movf	??_setRFSW_AdjControl+1,w
  8164  1C5C  0081               	movwf	1
  8165  1C5D                     l2738:	
  8166                           
  8167                           ;RF_Control_B1.c: 412: }
  8168                           ;RF_Control_B1.c: 413: Product->Data[17]=Product->Data[26+sw];
  8169  1C5D  0020               	movlb	0	; select bank0
  8170  1C5E  0866               	movf	setRFSW_AdjControl@sw,w
  8171  1C5F  3E1A               	addlw	26
  8172  1C60  076F               	addwf	_Product,w
  8173  1C61  00E4               	movwf	??_setRFSW_AdjControl
  8174  1C62  0864               	movf	??_setRFSW_AdjControl,w
  8175  1C63  0086               	movwf	6
  8176  1C64  3001               	movlw	1	; select bank2/3
  8177  1C65  0087               	movwf	7
  8178  1C66  0801               	movf	1,w
  8179  1C67  00E5               	movwf	??_setRFSW_AdjControl+1
  8180  1C68  086F               	movf	_Product,w
  8181  1C69  3E11               	addlw	17
  8182  1C6A  0086               	movwf	6
  8183  1C6B  3001               	movlw	1	; select bank2/3
  8184  1C6C  0087               	movwf	7
  8185  1C6D  0865               	movf	??_setRFSW_AdjControl+1,w
  8186  1C6E  0081               	movwf	1
  8187                           
  8188                           ;RF_Control_B1.c: 414: setTxData(1);
  8189  1C6F  3001               	movlw	1
  8190  1C70  318B  2318         	fcall	_setTxData
  8191  1C72  0008               	return
  8192  1C73                     __end_of_setRFSW_AdjControl:	
  8193                           
  8194                           	psect	text30
  8195  1B4D                     __ptext30:	
  8196 ;; *************** function _setRF_DimmerValue *****************
  8197 ;; Defined at:
  8198 ;;		line 425 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  lights          1    wreg     unsigned char 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  lights          1   67[BANK0 ] unsigned char 
  8203 ;; Return value:  Size  Location     Type
  8204 ;;		None               void
  8205 ;; Registers used:
  8206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;Total ram usage:        3 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    8
  8219 ;; This function calls:
  8220 ;;		_setDimmerLights_AdjRF
  8221 ;; This function is called by:
  8222 ;;		_setRFSW_AdjControl
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           
  8227                           ;psect for function _setRF_DimmerValue
  8228  1B4D                     _setRF_DimmerValue:	
  8229                           
  8230                           ;incstack = 0
  8231                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8232                           ;setRF_DimmerValue@lights stored from wreg
  8233  1B4D  0020               	movlb	0	; select bank0
  8234  1B4E  00E3               	movwf	setRF_DimmerValue@lights
  8235                           
  8236                           ;RF_Control_B1.c: 427: if(RF_Data[9] > 0x64)
  8237  1B4F  3065               	movlw	101
  8238  1B50  0021               	movlb	1	; select bank1
  8239  1B51  0229               	subwf	(_RF_Data^(0+128)+9),w
  8240  1B52  1C03               	skipc
  8241  1B53  2B5A               	goto	l6658
  8242                           
  8243                           ;RF_Control_B1.c: 428: {
  8244                           ;RF_Control_B1.c: 429: RF_Data[9]=0x64;
  8245  1B54  3064               	movlw	100
  8246  1B55  0020               	movlb	0	; select bank0
  8247  1B56  00E1               	movwf	??_setRF_DimmerValue
  8248  1B57  0861               	movf	??_setRF_DimmerValue,w
  8249  1B58  0021               	movlb	1	; select bank1
  8250  1B59  00A9               	movwf	(_RF_Data^(0+128)+9)
  8251  1B5A                     l6658:	
  8252                           
  8253                           ;RF_Control_B1.c: 430: }
  8254                           ;RF_Control_B1.c: 431: Product->Data[9]=RF_Data[9];
  8255  1B5A  0829               	movf	(_RF_Data^(0+128)+9),w
  8256  1B5B  0020               	movlb	0	; select bank0
  8257  1B5C  00E1               	movwf	??_setRF_DimmerValue
  8258  1B5D  086F               	movf	_Product,w
  8259  1B5E  3E09               	addlw	9
  8260  1B5F  0086               	movwf	6
  8261  1B60  3001               	movlw	1	; select bank2/3
  8262  1B61  0087               	movwf	7
  8263  1B62  0861               	movf	??_setRF_DimmerValue,w
  8264  1B63  0081               	movwf	1
  8265                           
  8266                           ;RF_Control_B1.c: 432: Product->Data[11]=lights;
  8267  1B64  0863               	movf	setRF_DimmerValue@lights,w
  8268  1B65  00E1               	movwf	??_setRF_DimmerValue
  8269  1B66  086F               	movf	_Product,w
  8270  1B67  3E0B               	addlw	11
  8271  1B68  0086               	movwf	6
  8272  1B69  3001               	movlw	1	; select bank2/3
  8273  1B6A  0087               	movwf	7
  8274  1B6B  0861               	movf	??_setRF_DimmerValue,w
  8275  1B6C  0081               	movwf	1
  8276                           
  8277                           ;RF_Control_B1.c: 433: Product->Data[(20+lights)]=Product->Data[9];
  8278  1B6D  086F               	movf	_Product,w
  8279  1B6E  3E09               	addlw	9
  8280  1B6F  0086               	movwf	6
  8281  1B70  3001               	movlw	1	; select bank2/3
  8282  1B71  0087               	movwf	7
  8283  1B72  0801               	movf	1,w
  8284  1B73  00E1               	movwf	??_setRF_DimmerValue
  8285  1B74  0863               	movf	setRF_DimmerValue@lights,w
  8286  1B75  3E14               	addlw	20
  8287  1B76  076F               	addwf	_Product,w
  8288  1B77  00E2               	movwf	??_setRF_DimmerValue+1
  8289  1B78  0862               	movf	??_setRF_DimmerValue+1,w
  8290  1B79  0086               	movwf	6
  8291  1B7A  3001               	movlw	1	; select bank2/3
  8292  1B7B  0087               	movwf	7
  8293  1B7C  0861               	movf	??_setRF_DimmerValue,w
  8294  1B7D  0081               	movwf	1
  8295                           
  8296                           ;RF_Control_B1.c: 434: setDimmerLights_AdjRF(lights);
  8297  1B7E  0863               	movf	setRF_DimmerValue@lights,w
  8298  1B7F  3198  20C3         	fcall	_setDimmerLights_AdjRF
  8299  1B81  0008               	return
  8300  1B82                     __end_of_setRF_DimmerValue:	
  8301                           
  8302                           	psect	text31
  8303  18C3                     __ptext31:	
  8304 ;; *************** function _setDimmerLights_AdjRF *****************
  8305 ;; Defined at:
  8306 ;;		line 414 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;  lights          1    wreg     unsigned char 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  lights          1   64[BANK0 ] unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;		None               void
  8313 ;; Registers used:
  8314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;Total ram usage:        2 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    7
  8327 ;; This function calls:
  8328 ;;		_DimmerLightsPointSelect
  8329 ;;		_getPercentValue
  8330 ;; This function is called by:
  8331 ;;		_setRF_DimmerValue
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           
  8336                           ;psect for function _setDimmerLights_AdjRF
  8337  18C3                     _setDimmerLights_AdjRF:	
  8338                           
  8339                           ;incstack = 0
  8340                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8341                           ;setDimmerLights_AdjRF@lights stored from wreg
  8342  18C3  0020               	movlb	0	; select bank0
  8343  18C4  00E0               	movwf	setDimmerLights_AdjRF@lights
  8344                           
  8345                           ;Dimmer_B1.c: 416: DimmerLightsPointSelect(lights);
  8346  18C5  0860               	movf	setDimmerLights_AdjRF@lights,w
  8347  18C6  31A5  25D6  3198   	fcall	_DimmerLightsPointSelect
  8348                           
  8349                           ;Dimmer_B1.c: 417: DimmerLights->AdjRF=1;
  8350  18C9  0020               	movlb	0	; select bank0
  8351  18CA  086C               	movf	_DimmerLights,w
  8352  18CB  0086               	movwf	6
  8353  18CC  3001               	movlw	1	; select bank2/3
  8354  18CD  0087               	movwf	7
  8355  18CE  1501               	bsf	1,2
  8356                           
  8357                           ;Dimmer_B1.c: 418: DimmerLights->Signal=1;
  8358  18CF  086C               	movf	_DimmerLights,w
  8359  18D0  0086               	movwf	6
  8360  18D1  3001               	movlw	1	; select bank2/3
  8361  18D2  0087               	movwf	7
  8362  18D3  1481               	bsf	1,1
  8363                           
  8364                           ;Dimmer_B1.c: 419: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  8365  18D4  086F               	movf	_Product,w
  8366  18D5  3E09               	addlw	9
  8367  18D6  0086               	movwf	6
  8368  18D7  3001               	movlw	1	; select bank2/3
  8369  18D8  0087               	movwf	7
  8370  18D9  0801               	movf	1,w
  8371  18DA  319E  26EB         	fcall	_getPercentValue
  8372  18DC  0020               	movlb	0	; select bank0
  8373  18DD  00DF               	movwf	??_setDimmerLights_AdjRF
  8374  18DE  086C               	movf	_DimmerLights,w
  8375  18DF  3E05               	addlw	5
  8376  18E0  0086               	movwf	6
  8377  18E1  3001               	movlw	1	; select bank2/3
  8378  18E2  0087               	movwf	7
  8379  18E3  085F               	movf	??_setDimmerLights_AdjRF,w
  8380  18E4  0081               	movwf	1
  8381  18E5  0008               	return
  8382  18E6                     __end_of_setDimmerLights_AdjRF:	
  8383                           
  8384                           	psect	text32
  8385  1EEB                     __ptext32:	
  8386 ;; *************** function _getPercentValue *****************
  8387 ;; Defined at:
  8388 ;;		line 481 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  value           1    wreg     unsigned char 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  value           1   59[BANK0 ] unsigned char 
  8393 ;;  i               3   60[BANK0 ] float 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      unsigned char 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0, pclath, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;Total ram usage:        6 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    6
  8410 ;; This function calls:
  8411 ;;		___awtoft
  8412 ;;		___ftadd
  8413 ;;		___ftdiv
  8414 ;;		___ftmul
  8415 ;;		___fttol
  8416 ;; This function is called by:
  8417 ;;		_setDimmerLights_AdjRF
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           
  8422                           ;psect for function _getPercentValue
  8423  1EEB                     _getPercentValue:	
  8424                           
  8425                           ;incstack = 0
  8426                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
  8427                           ;getPercentValue@value stored from wreg
  8428  1EEB  0020               	movlb	0	; select bank0
  8429  1EEC  00DB               	movwf	getPercentValue@value
  8430                           
  8431                           ;Dimmer_B1.c: 484: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
  8432  1EED  3000               	movlw	0
  8433  1EEE  00DC               	movwf	getPercentValue@i
  8434  1EEF  3054               	movlw	84
  8435  1EF0  00DD               	movwf	getPercentValue@i+1
  8436  1EF1  3042               	movlw	66
  8437  1EF2  00DE               	movwf	getPercentValue@i+2
  8438                           
  8439                           ;Dimmer_B1.c: 485: i/=100;
  8440  1EF3  3000               	movlw	0
  8441  1EF4  00AE               	movwf	___ftdiv@f2
  8442  1EF5  30C8               	movlw	200
  8443  1EF6  00AF               	movwf	___ftdiv@f2+1
  8444  1EF7  3042               	movlw	66
  8445  1EF8  00B0               	movwf	___ftdiv@f2+2
  8446  1EF9  085C               	movf	getPercentValue@i,w
  8447  1EFA  00B1               	movwf	___ftdiv@f1
  8448  1EFB  085D               	movf	getPercentValue@i+1,w
  8449  1EFC  00B2               	movwf	___ftdiv@f1+1
  8450  1EFD  085E               	movf	getPercentValue@i+2,w
  8451  1EFE  00B3               	movwf	___ftdiv@f1+2
  8452  1EFF  3189  21BB  319E   	fcall	___ftdiv
  8453  1F02  0020               	movlb	0	; select bank0
  8454  1F03  082E               	movf	?___ftdiv,w
  8455  1F04  00DC               	movwf	getPercentValue@i
  8456  1F05  082F               	movf	?___ftdiv+1,w
  8457  1F06  00DD               	movwf	getPercentValue@i+1
  8458  1F07  0830               	movf	?___ftdiv+2,w
  8459  1F08  00DE               	movwf	getPercentValue@i+2
  8460                           
  8461                           ;Dimmer_B1.c: 486: return (char)(((100-value)*i)+((char)((100-55)*1.5)));
  8462  1F09  085B               	movf	getPercentValue@value,w
  8463  1F0A  00D9               	movwf	??_getPercentValue
  8464  1F0B  01DA               	clrf	??_getPercentValue+1
  8465  1F0C  09D9               	comf	??_getPercentValue,f
  8466  1F0D  09DA               	comf	??_getPercentValue+1,f
  8467  1F0E  0AD9               	incf	??_getPercentValue,f
  8468  1F0F  1903               	skipnz
  8469  1F10  0ADA               	incf	??_getPercentValue+1,f
  8470  1F11  0859               	movf	??_getPercentValue,w
  8471  1F12  3E64               	addlw	100
  8472  1F13  00A8               	movwf	___awtoft@c
  8473  1F14  3000               	movlw	0
  8474  1F15  3D5A               	addwfc	??_getPercentValue+1,w
  8475  1F16  00A9               	movwf	___awtoft@c+1
  8476  1F17  31A7  27DE  319E   	fcall	___awtoft
  8477  1F1A  0020               	movlb	0	; select bank0
  8478  1F1B  0828               	movf	?___awtoft,w
  8479  1F1C  00B1               	movwf	___ftmul@f2
  8480  1F1D  0829               	movf	?___awtoft+1,w
  8481  1F1E  00B2               	movwf	___ftmul@f2+1
  8482  1F1F  082A               	movf	?___awtoft+2,w
  8483  1F20  00B3               	movwf	___ftmul@f2+2
  8484  1F21  085C               	movf	getPercentValue@i,w
  8485  1F22  00AE               	movwf	___ftmul@f1
  8486  1F23  085D               	movf	getPercentValue@i+1,w
  8487  1F24  00AF               	movwf	___ftmul@f1+1
  8488  1F25  085E               	movf	getPercentValue@i+2,w
  8489  1F26  00B0               	movwf	___ftmul@f1+2
  8490  1F27  318A  2264  319E   	fcall	___ftmul
  8491  1F2A  0020               	movlb	0	; select bank0
  8492  1F2B  082E               	movf	?___ftmul,w
  8493  1F2C  00C1               	movwf	___ftadd@f2
  8494  1F2D  082F               	movf	?___ftmul+1,w
  8495  1F2E  00C2               	movwf	___ftadd@f2+1
  8496  1F2F  0830               	movf	?___ftmul+2,w
  8497  1F30  00C3               	movwf	___ftadd@f2+2
  8498  1F31  3000               	movlw	0
  8499  1F32  00BE               	movwf	___ftadd@f1
  8500  1F33  3086               	movlw	134
  8501  1F34  00BF               	movwf	___ftadd@f1+1
  8502  1F35  3042               	movlw	66
  8503  1F36  00C0               	movwf	___ftadd@f1+2
  8504  1F37  318B  23E1  319E   	fcall	___ftadd
  8505  1F3A  0020               	movlb	0	; select bank0
  8506  1F3B  083E               	movf	?___ftadd,w
  8507  1F3C  00CB               	movwf	___fttol@f1
  8508  1F3D  083F               	movf	?___ftadd+1,w
  8509  1F3E  00CC               	movwf	___fttol@f1+1
  8510  1F3F  0840               	movf	?___ftadd+2,w
  8511  1F40  00CD               	movwf	___fttol@f1+2
  8512  1F41  3195  253A         	fcall	___fttol
  8513  1F43  0020               	movlb	0	; select bank0
  8514  1F44  084B               	movf	?___fttol,w
  8515  1F45  0008               	return
  8516  1F46                     __end_of_getPercentValue:	
  8517                           
  8518                           	psect	text33
  8519  0A64                     __ptext33:	
  8520 ;; *************** function ___ftmul *****************
  8521 ;; Defined at:
  8522 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  f1              3   14[BANK0 ] float 
  8525 ;;  f2              3   17[BANK0 ] float 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  8528 ;;  sign            1   29[BANK0 ] unsigned char 
  8529 ;;  cntr            1   28[BANK0 ] unsigned char 
  8530 ;;  exp             1   24[BANK0 ] unsigned char 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  3   14[BANK0 ] float 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2, status,0, pclath, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8540 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8543 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8544 ;;Total ram usage:       16 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:    5
  8547 ;; This function calls:
  8548 ;;		___ftpack
  8549 ;; This function is called by:
  8550 ;;		_getPercentValue
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           
  8555                           ;psect for function ___ftmul
  8556  0A64                     ___ftmul:	
  8557                           
  8558                           ;incstack = 0
  8559                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8560  0A64  0020               	movlb	0	; select bank0
  8561  0A65  082E               	movf	___ftmul@f1,w
  8562  0A66  00B4               	movwf	??___ftmul
  8563  0A67  082F               	movf	___ftmul@f1+1,w
  8564  0A68  00B5               	movwf	??___ftmul+1
  8565  0A69  0830               	movf	___ftmul@f1+2,w
  8566  0A6A  00B6               	movwf	??___ftmul+2
  8567  0A6B  1003               	clrc
  8568  0A6C  0D35               	rlf	??___ftmul+1,w
  8569  0A6D  0D36               	rlf	??___ftmul+2,w
  8570  0A6E  00B7               	movwf	??___ftmul+3
  8571  0A6F  0837               	movf	??___ftmul+3,w
  8572  0A70  00B8               	movwf	___ftmul@exp
  8573  0A71  08B8               	movf	___ftmul@exp,f
  8574  0A72  1D03               	skipz
  8575  0A73  2A7B               	goto	l6284
  8576  0A74  3000               	movlw	0
  8577  0A75  00AE               	movwf	?___ftmul
  8578  0A76  3000               	movlw	0
  8579  0A77  00AF               	movwf	?___ftmul+1
  8580  0A78  3000               	movlw	0
  8581  0A79  00B0               	movwf	?___ftmul+2
  8582  0A7A  0008               	return
  8583  0A7B                     l6284:	
  8584  0A7B  0831               	movf	___ftmul@f2,w
  8585  0A7C  00B4               	movwf	??___ftmul
  8586  0A7D  0832               	movf	___ftmul@f2+1,w
  8587  0A7E  00B5               	movwf	??___ftmul+1
  8588  0A7F  0833               	movf	___ftmul@f2+2,w
  8589  0A80  00B6               	movwf	??___ftmul+2
  8590  0A81  1003               	clrc
  8591  0A82  0D35               	rlf	??___ftmul+1,w
  8592  0A83  0D36               	rlf	??___ftmul+2,w
  8593  0A84  00B7               	movwf	??___ftmul+3
  8594  0A85  0837               	movf	??___ftmul+3,w
  8595  0A86  00BD               	movwf	___ftmul@sign
  8596  0A87  08BD               	movf	___ftmul@sign,f
  8597  0A88  1D03               	skipz
  8598  0A89  2A91               	goto	l6290
  8599  0A8A  3000               	movlw	0
  8600  0A8B  00AE               	movwf	?___ftmul
  8601  0A8C  3000               	movlw	0
  8602  0A8D  00AF               	movwf	?___ftmul+1
  8603  0A8E  3000               	movlw	0
  8604  0A8F  00B0               	movwf	?___ftmul+2
  8605  0A90  0008               	return
  8606  0A91                     l6290:	
  8607  0A91  083D               	movf	___ftmul@sign,w
  8608  0A92  3E7B               	addlw	123
  8609  0A93  00B4               	movwf	??___ftmul
  8610  0A94  0834               	movf	??___ftmul,w
  8611  0A95  07B8               	addwf	___ftmul@exp,f
  8612  0A96  082E               	movf	___ftmul@f1,w
  8613  0A97  00B4               	movwf	??___ftmul
  8614  0A98  082F               	movf	___ftmul@f1+1,w
  8615  0A99  00B5               	movwf	??___ftmul+1
  8616  0A9A  0830               	movf	___ftmul@f1+2,w
  8617  0A9B  00B6               	movwf	??___ftmul+2
  8618  0A9C  3010               	movlw	16
  8619  0A9D                     u4545:	
  8620  0A9D  36B6               	lsrf	??___ftmul+2,f
  8621  0A9E  0CB5               	rrf	??___ftmul+1,f
  8622  0A9F  0CB4               	rrf	??___ftmul,f
  8623  0AA0  0B89               	decfsz	9,f
  8624  0AA1  2A9D               	goto	u4545
  8625  0AA2  0834               	movf	??___ftmul,w
  8626  0AA3  00B7               	movwf	??___ftmul+3
  8627  0AA4  0837               	movf	??___ftmul+3,w
  8628  0AA5  00BD               	movwf	___ftmul@sign
  8629  0AA6  0831               	movf	___ftmul@f2,w
  8630  0AA7  00B4               	movwf	??___ftmul
  8631  0AA8  0832               	movf	___ftmul@f2+1,w
  8632  0AA9  00B5               	movwf	??___ftmul+1
  8633  0AAA  0833               	movf	___ftmul@f2+2,w
  8634  0AAB  00B6               	movwf	??___ftmul+2
  8635  0AAC  3010               	movlw	16
  8636  0AAD                     u4555:	
  8637  0AAD  36B6               	lsrf	??___ftmul+2,f
  8638  0AAE  0CB5               	rrf	??___ftmul+1,f
  8639  0AAF  0CB4               	rrf	??___ftmul,f
  8640  0AB0  0B89               	decfsz	9,f
  8641  0AB1  2AAD               	goto	u4555
  8642  0AB2  0834               	movf	??___ftmul,w
  8643  0AB3  00B7               	movwf	??___ftmul+3
  8644  0AB4  0837               	movf	??___ftmul+3,w
  8645  0AB5  06BD               	xorwf	___ftmul@sign,f
  8646  0AB6  3080               	movlw	128
  8647  0AB7  00B4               	movwf	??___ftmul
  8648  0AB8  0834               	movf	??___ftmul,w
  8649  0AB9  05BD               	andwf	___ftmul@sign,f
  8650  0ABA  17AF               	bsf	___ftmul@f1+1,7
  8651  0ABB  17B2               	bsf	___ftmul@f2+1,7
  8652  0ABC  30FF               	movlw	255
  8653  0ABD  05B1               	andwf	___ftmul@f2,f
  8654  0ABE  30FF               	movlw	255
  8655  0ABF  05B2               	andwf	___ftmul@f2+1,f
  8656  0AC0  3000               	movlw	0
  8657  0AC1  05B3               	andwf	___ftmul@f2+2,f
  8658  0AC2  3000               	movlw	0
  8659  0AC3  00B9               	movwf	___ftmul@f3_as_product
  8660  0AC4  3000               	movlw	0
  8661  0AC5  00BA               	movwf	___ftmul@f3_as_product+1
  8662  0AC6  3000               	movlw	0
  8663  0AC7  00BB               	movwf	___ftmul@f3_as_product+2
  8664  0AC8  3007               	movlw	7
  8665  0AC9  00B4               	movwf	??___ftmul
  8666  0ACA  0834               	movf	??___ftmul,w
  8667  0ACB  00BC               	movwf	___ftmul@cntr
  8668  0ACC                     l6302:	
  8669  0ACC  1C2E               	btfss	___ftmul@f1,0
  8670  0ACD  2AD4               	goto	l6306
  8671  0ACE  0831               	movf	___ftmul@f2,w
  8672  0ACF  07B9               	addwf	___ftmul@f3_as_product,f
  8673  0AD0  0832               	movf	___ftmul@f2+1,w
  8674  0AD1  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8675  0AD2  0833               	movf	___ftmul@f2+2,w
  8676  0AD3  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8677  0AD4                     l6306:	
  8678  0AD4  3001               	movlw	1
  8679  0AD5                     u4575:	
  8680  0AD5  36B0               	lsrf	___ftmul@f1+2,f
  8681  0AD6  0CAF               	rrf	___ftmul@f1+1,f
  8682  0AD7  0CAE               	rrf	___ftmul@f1,f
  8683  0AD8  0B89               	decfsz	9,f
  8684  0AD9  2AD5               	goto	u4575
  8685  0ADA  3001               	movlw	1
  8686  0ADB                     u4585:	
  8687  0ADB  35B1               	lslf	___ftmul@f2,f
  8688  0ADC  0DB2               	rlf	___ftmul@f2+1,f
  8689  0ADD  0DB3               	rlf	___ftmul@f2+2,f
  8690  0ADE  0B89               	decfsz	9,f
  8691  0ADF  2ADB               	goto	u4585
  8692  0AE0  3001               	movlw	1
  8693  0AE1  02BC               	subwf	___ftmul@cntr,f
  8694  0AE2  1D03               	btfss	3,2
  8695  0AE3  2ACC               	goto	l6302
  8696  0AE4  3009               	movlw	9
  8697  0AE5  00B4               	movwf	??___ftmul
  8698  0AE6  0834               	movf	??___ftmul,w
  8699  0AE7  00BC               	movwf	___ftmul@cntr
  8700  0AE8                     l6314:	
  8701  0AE8  1C2E               	btfss	___ftmul@f1,0
  8702  0AE9  2AF0               	goto	l6318
  8703  0AEA  0831               	movf	___ftmul@f2,w
  8704  0AEB  07B9               	addwf	___ftmul@f3_as_product,f
  8705  0AEC  0832               	movf	___ftmul@f2+1,w
  8706  0AED  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8707  0AEE  0833               	movf	___ftmul@f2+2,w
  8708  0AEF  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8709  0AF0                     l6318:	
  8710  0AF0  3001               	movlw	1
  8711  0AF1                     u4615:	
  8712  0AF1  36B0               	lsrf	___ftmul@f1+2,f
  8713  0AF2  0CAF               	rrf	___ftmul@f1+1,f
  8714  0AF3  0CAE               	rrf	___ftmul@f1,f
  8715  0AF4  0B89               	decfsz	9,f
  8716  0AF5  2AF1               	goto	u4615
  8717  0AF6  3001               	movlw	1
  8718  0AF7                     u4625:	
  8719  0AF7  36BB               	lsrf	___ftmul@f3_as_product+2,f
  8720  0AF8  0CBA               	rrf	___ftmul@f3_as_product+1,f
  8721  0AF9  0CB9               	rrf	___ftmul@f3_as_product,f
  8722  0AFA  0B89               	decfsz	9,f
  8723  0AFB  2AF7               	goto	u4625
  8724  0AFC  3001               	movlw	1
  8725  0AFD  02BC               	subwf	___ftmul@cntr,f
  8726  0AFE  1D03               	btfss	3,2
  8727  0AFF  2AE8               	goto	l6314
  8728  0B00  0839               	movf	___ftmul@f3_as_product,w
  8729  0B01  00A0               	movwf	___ftpack@arg
  8730  0B02  083A               	movf	___ftmul@f3_as_product+1,w
  8731  0B03  00A1               	movwf	___ftpack@arg+1
  8732  0B04  083B               	movf	___ftmul@f3_as_product+2,w
  8733  0B05  00A2               	movwf	___ftpack@arg+2
  8734  0B06  0838               	movf	___ftmul@exp,w
  8735  0B07  00B4               	movwf	??___ftmul
  8736  0B08  0834               	movf	??___ftmul,w
  8737  0B09  00A3               	movwf	___ftpack@exp
  8738  0B0A  083D               	movf	___ftmul@sign,w
  8739  0B0B  00B5               	movwf	??___ftmul+1
  8740  0B0C  0835               	movf	??___ftmul+1,w
  8741  0B0D  00A4               	movwf	___ftpack@sign
  8742  0B0E  3190  2009         	fcall	___ftpack
  8743  0B10  0020               	movlb	0	; select bank0
  8744  0B11  0820               	movf	?___ftpack,w
  8745  0B12  00AE               	movwf	?___ftmul
  8746  0B13  0821               	movf	?___ftpack+1,w
  8747  0B14  00AF               	movwf	?___ftmul+1
  8748  0B15  0822               	movf	?___ftpack+2,w
  8749  0B16  00B0               	movwf	?___ftmul+2
  8750  0B17  0008               	return
  8751  0B18                     __end_of___ftmul:	
  8752                           
  8753                           	psect	text34
  8754  0BE1                     __ptext34:	
  8755 ;; *************** function ___ftadd *****************
  8756 ;; Defined at:
  8757 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  f1              3   30[BANK0 ] float 
  8760 ;;  f2              3   33[BANK0 ] float 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  exp1            1   42[BANK0 ] unsigned char 
  8763 ;;  exp2            1   41[BANK0 ] unsigned char 
  8764 ;;  sign            1   40[BANK0 ] unsigned char 
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  3   30[BANK0 ] float 
  8767 ;; Registers used:
  8768 ;;		wreg, status,2, status,0, pclath, cstack
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8774 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8778 ;;Total ram usage:       13 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; Hardware stack levels required when called:    5
  8781 ;; This function calls:
  8782 ;;		___ftpack
  8783 ;; This function is called by:
  8784 ;;		_getPercentValue
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           
  8789                           ;psect for function ___ftadd
  8790  0BE1                     ___ftadd:	
  8791                           
  8792                           ;incstack = 0
  8793                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8794  0BE1  0020               	movlb	0	; select bank0
  8795  0BE2  083E               	movf	___ftadd@f1,w
  8796  0BE3  00C4               	movwf	??___ftadd
  8797  0BE4  083F               	movf	___ftadd@f1+1,w
  8798  0BE5  00C5               	movwf	??___ftadd+1
  8799  0BE6  0840               	movf	___ftadd@f1+2,w
  8800  0BE7  00C6               	movwf	??___ftadd+2
  8801  0BE8  1003               	clrc
  8802  0BE9  0D45               	rlf	??___ftadd+1,w
  8803  0BEA  0D46               	rlf	??___ftadd+2,w
  8804  0BEB  00C7               	movwf	??___ftadd+3
  8805  0BEC  0847               	movf	??___ftadd+3,w
  8806  0BED  00CA               	movwf	___ftadd@exp1
  8807  0BEE  0841               	movf	___ftadd@f2,w
  8808  0BEF  00C4               	movwf	??___ftadd
  8809  0BF0  0842               	movf	___ftadd@f2+1,w
  8810  0BF1  00C5               	movwf	??___ftadd+1
  8811  0BF2  0843               	movf	___ftadd@f2+2,w
  8812  0BF3  00C6               	movwf	??___ftadd+2
  8813  0BF4  1003               	clrc
  8814  0BF5  0D45               	rlf	??___ftadd+1,w
  8815  0BF6  0D46               	rlf	??___ftadd+2,w
  8816  0BF7  00C7               	movwf	??___ftadd+3
  8817  0BF8  0847               	movf	??___ftadd+3,w
  8818  0BF9  00C9               	movwf	___ftadd@exp2
  8819  0BFA  084A               	movf	___ftadd@exp1,w
  8820  0BFB  1903               	btfsc	3,2
  8821  0BFC  2C09               	goto	l6172
  8822  0BFD  0849               	movf	___ftadd@exp2,w
  8823  0BFE  024A               	subwf	___ftadd@exp1,w
  8824  0BFF  1803               	skipnc
  8825  0C00  2C10               	goto	l6176
  8826  0C01  034A               	decf	___ftadd@exp1,w
  8827  0C02  3AFF               	xorlw	255
  8828  0C03  0749               	addwf	___ftadd@exp2,w
  8829  0C04  00C4               	movwf	??___ftadd
  8830  0C05  3019               	movlw	25
  8831  0C06  0244               	subwf	??___ftadd,w
  8832  0C07  1C03               	skipc
  8833  0C08  2C10               	goto	l6176
  8834  0C09                     l6172:	
  8835  0C09  0841               	movf	___ftadd@f2,w
  8836  0C0A  00BE               	movwf	?___ftadd
  8837  0C0B  0842               	movf	___ftadd@f2+1,w
  8838  0C0C  00BF               	movwf	?___ftadd+1
  8839  0C0D  0843               	movf	___ftadd@f2+2,w
  8840  0C0E  00C0               	movwf	?___ftadd+2
  8841  0C0F  0008               	return
  8842  0C10                     l6176:	
  8843  0C10  0849               	movf	___ftadd@exp2,w
  8844  0C11  1903               	btfsc	3,2
  8845  0C12  0008               	return
  8846  0C13  084A               	movf	___ftadd@exp1,w
  8847  0C14  0249               	subwf	___ftadd@exp2,w
  8848  0C15  1803               	skipnc
  8849  0C16  2C1F               	goto	l6182
  8850  0C17  0349               	decf	___ftadd@exp2,w
  8851  0C18  3AFF               	xorlw	255
  8852  0C19  074A               	addwf	___ftadd@exp1,w
  8853  0C1A  00C4               	movwf	??___ftadd
  8854  0C1B  3019               	movlw	25
  8855  0C1C  0244               	subwf	??___ftadd,w
  8856  0C1D  1803               	btfsc	3,0
  8857  0C1E  0008               	return
  8858  0C1F                     l6182:	
  8859  0C1F  3006               	movlw	6
  8860  0C20  00C4               	movwf	??___ftadd
  8861  0C21  0844               	movf	??___ftadd,w
  8862  0C22  00C8               	movwf	___ftadd@sign
  8863  0C23  1BC0               	btfsc	___ftadd@f1+2,7
  8864  0C24  17C8               	bsf	___ftadd@sign,7
  8865  0C25  1BC3               	btfsc	___ftadd@f2+2,7
  8866  0C26  1748               	bsf	___ftadd@sign,6
  8867  0C27  17BF               	bsf	___ftadd@f1+1,7
  8868  0C28  30FF               	movlw	255
  8869  0C29  05BE               	andwf	___ftadd@f1,f
  8870  0C2A  30FF               	movlw	255
  8871  0C2B  05BF               	andwf	___ftadd@f1+1,f
  8872  0C2C  3000               	movlw	0
  8873  0C2D  05C0               	andwf	___ftadd@f1+2,f
  8874  0C2E  17C2               	bsf	___ftadd@f2+1,7
  8875  0C2F  30FF               	movlw	255
  8876  0C30  05C1               	andwf	___ftadd@f2,f
  8877  0C31  30FF               	movlw	255
  8878  0C32  05C2               	andwf	___ftadd@f2+1,f
  8879  0C33  3000               	movlw	0
  8880  0C34  05C3               	andwf	___ftadd@f2+2,f
  8881  0C35  0849               	movf	___ftadd@exp2,w
  8882  0C36  024A               	subwf	___ftadd@exp1,w
  8883  0C37  1803               	skipnc
  8884  0C38  2C5B               	goto	l6204
  8885  0C39                     l6194:	
  8886  0C39  3001               	movlw	1
  8887  0C3A                     u4305:	
  8888  0C3A  35C1               	lslf	___ftadd@f2,f
  8889  0C3B  0DC2               	rlf	___ftadd@f2+1,f
  8890  0C3C  0DC3               	rlf	___ftadd@f2+2,f
  8891  0C3D  0B89               	decfsz	9,f
  8892  0C3E  2C3A               	goto	u4305
  8893  0C3F  3001               	movlw	1
  8894  0C40  02C9               	subwf	___ftadd@exp2,f
  8895  0C41  0849               	movf	___ftadd@exp2,w
  8896  0C42  064A               	xorwf	___ftadd@exp1,w
  8897  0C43  1903               	skipnz
  8898  0C44  2C56               	goto	l6202
  8899  0C45  3001               	movlw	1
  8900  0C46  02C8               	subwf	___ftadd@sign,f
  8901  0C47  0848               	movf	___ftadd@sign,w
  8902  0C48  3907               	andlw	7
  8903  0C49  1903               	btfsc	3,2
  8904  0C4A  2C56               	goto	l6202
  8905  0C4B  2C39               	goto	l6194
  8906  0C4C                     l6200:	
  8907  0C4C  3001               	movlw	1
  8908  0C4D                     u4335:	
  8909  0C4D  36C0               	lsrf	___ftadd@f1+2,f
  8910  0C4E  0CBF               	rrf	___ftadd@f1+1,f
  8911  0C4F  0CBE               	rrf	___ftadd@f1,f
  8912  0C50  0B89               	decfsz	9,f
  8913  0C51  2C4D               	goto	u4335
  8914  0C52  3001               	movlw	1
  8915  0C53  00C4               	movwf	??___ftadd
  8916  0C54  0844               	movf	??___ftadd,w
  8917  0C55  07CA               	addwf	___ftadd@exp1,f
  8918  0C56                     l6202:	
  8919  0C56  084A               	movf	___ftadd@exp1,w
  8920  0C57  0649               	xorwf	___ftadd@exp2,w
  8921  0C58  1903               	btfsc	3,2
  8922  0C59  2C80               	goto	l3429
  8923  0C5A  2C4C               	goto	l6200
  8924  0C5B                     l6204:	
  8925  0C5B  084A               	movf	___ftadd@exp1,w
  8926  0C5C  0249               	subwf	___ftadd@exp2,w
  8927  0C5D  1803               	skipnc
  8928  0C5E  2C80               	goto	l3429
  8929  0C5F                     l6206:	
  8930  0C5F  3001               	movlw	1
  8931  0C60                     u4365:	
  8932  0C60  35BE               	lslf	___ftadd@f1,f
  8933  0C61  0DBF               	rlf	___ftadd@f1+1,f
  8934  0C62  0DC0               	rlf	___ftadd@f1+2,f
  8935  0C63  0B89               	decfsz	9,f
  8936  0C64  2C60               	goto	u4365
  8937  0C65  3001               	movlw	1
  8938  0C66  02CA               	subwf	___ftadd@exp1,f
  8939  0C67  0849               	movf	___ftadd@exp2,w
  8940  0C68  064A               	xorwf	___ftadd@exp1,w
  8941  0C69  1903               	skipnz
  8942  0C6A  2C7C               	goto	l6214
  8943  0C6B  3001               	movlw	1
  8944  0C6C  02C8               	subwf	___ftadd@sign,f
  8945  0C6D  0848               	movf	___ftadd@sign,w
  8946  0C6E  3907               	andlw	7
  8947  0C6F  1903               	btfsc	3,2
  8948  0C70  2C7C               	goto	l6214
  8949  0C71  2C5F               	goto	l6206
  8950  0C72                     l6212:	
  8951  0C72  3001               	movlw	1
  8952  0C73                     u4395:	
  8953  0C73  36C3               	lsrf	___ftadd@f2+2,f
  8954  0C74  0CC2               	rrf	___ftadd@f2+1,f
  8955  0C75  0CC1               	rrf	___ftadd@f2,f
  8956  0C76  0B89               	decfsz	9,f
  8957  0C77  2C73               	goto	u4395
  8958  0C78  3001               	movlw	1
  8959  0C79  00C4               	movwf	??___ftadd
  8960  0C7A  0844               	movf	??___ftadd,w
  8961  0C7B  07C9               	addwf	___ftadd@exp2,f
  8962  0C7C                     l6214:	
  8963  0C7C  084A               	movf	___ftadd@exp1,w
  8964  0C7D  0649               	xorwf	___ftadd@exp2,w
  8965  0C7E  1D03               	skipz
  8966  0C7F  2C72               	goto	l6212
  8967  0C80                     l3429:	
  8968  0C80  1FC8               	btfss	___ftadd@sign,7
  8969  0C81  2C92               	goto	l6218
  8970  0C82  30FF               	movlw	255
  8971  0C83  06BE               	xorwf	___ftadd@f1,f
  8972  0C84  30FF               	movlw	255
  8973  0C85  06BF               	xorwf	___ftadd@f1+1,f
  8974  0C86  30FF               	movlw	255
  8975  0C87  06C0               	xorwf	___ftadd@f1+2,f
  8976  0C88  3001               	movlw	1
  8977  0C89  07BE               	addwf	___ftadd@f1,f
  8978  0C8A  3000               	movlw	0
  8979  0C8B  1803               	skipnc
  8980  0C8C  3001               	movlw	1
  8981  0C8D  07BF               	addwf	___ftadd@f1+1,f
  8982  0C8E  3000               	movlw	0
  8983  0C8F  1803               	skipnc
  8984  0C90  3001               	movlw	1
  8985  0C91  07C0               	addwf	___ftadd@f1+2,f
  8986  0C92                     l6218:	
  8987  0C92  1F48               	btfss	___ftadd@sign,6
  8988  0C93  2CA4               	goto	l6222
  8989  0C94  30FF               	movlw	255
  8990  0C95  06C1               	xorwf	___ftadd@f2,f
  8991  0C96  30FF               	movlw	255
  8992  0C97  06C2               	xorwf	___ftadd@f2+1,f
  8993  0C98  30FF               	movlw	255
  8994  0C99  06C3               	xorwf	___ftadd@f2+2,f
  8995  0C9A  3001               	movlw	1
  8996  0C9B  07C1               	addwf	___ftadd@f2,f
  8997  0C9C  3000               	movlw	0
  8998  0C9D  1803               	skipnc
  8999  0C9E  3001               	movlw	1
  9000  0C9F  07C2               	addwf	___ftadd@f2+1,f
  9001  0CA0  3000               	movlw	0
  9002  0CA1  1803               	skipnc
  9003  0CA2  3001               	movlw	1
  9004  0CA3  07C3               	addwf	___ftadd@f2+2,f
  9005  0CA4                     l6222:	
  9006  0CA4  01C8               	clrf	___ftadd@sign
  9007  0CA5  083E               	movf	___ftadd@f1,w
  9008  0CA6  07C1               	addwf	___ftadd@f2,f
  9009  0CA7  083F               	movf	___ftadd@f1+1,w
  9010  0CA8  3DC2               	addwfc	___ftadd@f2+1,f
  9011  0CA9  0840               	movf	___ftadd@f1+2,w
  9012  0CAA  3DC3               	addwfc	___ftadd@f2+2,f
  9013  0CAB  1FC3               	btfss	___ftadd@f2+2,7
  9014  0CAC  2CBF               	goto	l6232
  9015  0CAD  30FF               	movlw	255
  9016  0CAE  06C1               	xorwf	___ftadd@f2,f
  9017  0CAF  30FF               	movlw	255
  9018  0CB0  06C2               	xorwf	___ftadd@f2+1,f
  9019  0CB1  30FF               	movlw	255
  9020  0CB2  06C3               	xorwf	___ftadd@f2+2,f
  9021  0CB3  3001               	movlw	1
  9022  0CB4  07C1               	addwf	___ftadd@f2,f
  9023  0CB5  3000               	movlw	0
  9024  0CB6  1803               	skipnc
  9025  0CB7  3001               	movlw	1
  9026  0CB8  07C2               	addwf	___ftadd@f2+1,f
  9027  0CB9  3000               	movlw	0
  9028  0CBA  1803               	skipnc
  9029  0CBB  3001               	movlw	1
  9030  0CBC  07C3               	addwf	___ftadd@f2+2,f
  9031  0CBD  01C8               	clrf	___ftadd@sign
  9032  0CBE  0AC8               	incf	___ftadd@sign,f
  9033  0CBF                     l6232:	
  9034  0CBF  0841               	movf	___ftadd@f2,w
  9035  0CC0  00A0               	movwf	___ftpack@arg
  9036  0CC1  0842               	movf	___ftadd@f2+1,w
  9037  0CC2  00A1               	movwf	___ftpack@arg+1
  9038  0CC3  0843               	movf	___ftadd@f2+2,w
  9039  0CC4  00A2               	movwf	___ftpack@arg+2
  9040  0CC5  084A               	movf	___ftadd@exp1,w
  9041  0CC6  00C4               	movwf	??___ftadd
  9042  0CC7  0844               	movf	??___ftadd,w
  9043  0CC8  00A3               	movwf	___ftpack@exp
  9044  0CC9  0848               	movf	___ftadd@sign,w
  9045  0CCA  00C5               	movwf	??___ftadd+1
  9046  0CCB  0845               	movf	??___ftadd+1,w
  9047  0CCC  00A4               	movwf	___ftpack@sign
  9048  0CCD  3190  2009         	fcall	___ftpack
  9049  0CCF  0020               	movlb	0	; select bank0
  9050  0CD0  0820               	movf	?___ftpack,w
  9051  0CD1  00BE               	movwf	?___ftadd
  9052  0CD2  0821               	movf	?___ftpack+1,w
  9053  0CD3  00BF               	movwf	?___ftadd+1
  9054  0CD4  0822               	movf	?___ftpack+2,w
  9055  0CD5  00C0               	movwf	?___ftadd+2
  9056  0CD6  0008               	return
  9057  0CD7                     __end_of___ftadd:	
  9058                           
  9059                           	psect	text35
  9060  1957                     __ptext35:	
  9061 ;; *************** function _RF_RxDisable *****************
  9062 ;; Defined at:
  9063 ;;		line 191 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  rf              1    wreg     unsigned char 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  rf              1    4[BANK0 ] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;		None               void
  9070 ;; Registers used:
  9071 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;Total ram usage:        1 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    6
  9084 ;; This function calls:
  9085 ;;		_CC2500_WriteCommand
  9086 ;;		_RfPointSelect
  9087 ;;		_setINT_GO
  9088 ;; This function is called by:
  9089 ;;		_setRF_Main
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           
  9094                           ;psect for function _RF_RxDisable
  9095  1957                     _RF_RxDisable:	
  9096                           
  9097                           ;incstack = 0
  9098                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9099                           ;RF_RxDisable@rf stored from wreg
  9100  1957  0020               	movlb	0	; select bank0
  9101  1958  00A4               	movwf	RF_RxDisable@rf
  9102                           
  9103                           ;RF_Control_B1.c: 193: RfPointSelect(rf);
  9104  1959  0824               	movf	RF_RxDisable@rf,w
  9105  195A  31A4  2442  3199   	fcall	_RfPointSelect
  9106                           
  9107                           ;RF_Control_B1.c: 195: if(RF->RxStatus)
  9108  195D  087C               	movf	_RF,w
  9109  195E  0086               	movwf	6
  9110  195F  0187               	clrf	7
  9111  1960  1D81               	btfss	1,3
  9112  1961  0008               	return
  9113                           
  9114                           ;RF_Control_B1.c: 196: {
  9115                           ;RF_Control_B1.c: 197: RF->RxStatus=0;
  9116  1962  087C               	movf	_RF,w
  9117  1963  0086               	movwf	6
  9118  1964  0187               	clrf	7
  9119  1965  1181               	bcf	1,3
  9120                           
  9121                           ;RF_Control_B1.c: 198: RF->ReceiveGO=0;
  9122  1966  087C               	movf	_RF,w
  9123  1967  0086               	movwf	6
  9124  1968  0187               	clrf	7
  9125  1969  1081               	bcf	1,1
  9126                           
  9127                           ;RF_Control_B1.c: 199: RF->DebounceTime=0;
  9128  196A  0A7C               	incf	_RF,w
  9129  196B  0086               	movwf	6
  9130  196C  0187               	clrf	7
  9131  196D  0181               	clrf	1
  9132                           
  9133                           ;RF_Control_B1.c: 200: RF->Debounce=0;
  9134  196E  087C               	movf	_RF,w
  9135  196F  0086               	movwf	6
  9136  1970  0187               	clrf	7
  9137  1971  1281               	bcf	1,5
  9138                           
  9139                           ;RF_Control_B1.c: 201: CC2500_WriteCommand(0x36);
  9140  1972  3036               	movlw	54
  9141  1973  31A5  2545  3199   	fcall	_CC2500_WriteCommand
  9142                           
  9143                           ;RF_Control_B1.c: 202: CC2500_WriteCommand(0x3A);
  9144  1976  303A               	movlw	58
  9145  1977  31A5  2545  3199   	fcall	_CC2500_WriteCommand
  9146                           
  9147                           ;RF_Control_B1.c: 203: setINT_GO(0);
  9148  197A  3000               	movlw	0
  9149  197B  3190  2000         	fcall	_setINT_GO
  9150  197D  0008               	return
  9151  197E                     __end_of_RF_RxDisable:	
  9152                           
  9153                           	psect	text36
  9154  1D7D                     __ptext36:	
  9155 ;; *************** function _CC2500_TxData *****************
  9156 ;; Defined at:
  9157 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\CC2500_B1.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;  loop_e          1    5[BANK0 ] unsigned char 
  9162 ;; Return value:  Size  Location     Type
  9163 ;;		None               void
  9164 ;; Registers used:
  9165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;Total ram usage:        2 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; Hardware stack levels required when called:    6
  9178 ;; This function calls:
  9179 ;;		_CC2500_WriteByte
  9180 ;;		_CC2500_WriteCommand
  9181 ;; This function is called by:
  9182 ;;		_setRF_Main
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           
  9187                           ;psect for function _CC2500_TxData
  9188  1D7D                     _CC2500_TxData:	
  9189                           
  9190                           ;CC2500_B1.c: 32: unsigned char loop_e;
  9191                           ;CC2500_B1.c: 34: RC4=0;
  9192                           
  9193                           ;incstack = 0
  9194                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9195  1D7D  0020               	movlb	0	; select bank0
  9196  1D7E  120E               	bcf	14,4	;volatile
  9197                           
  9198                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  9199  1D7F  307F               	movlw	127
  9200  1D80  00A4               	movwf	??_CC2500_TxData
  9201  1D81  0824               	movf	??_CC2500_TxData,w
  9202  1D82  0021               	movlb	1	; select bank1
  9203  1D83  00BF               	movwf	_SPI0Buffer^(0+128)
  9204  1D84                     l307:	
  9205                           ;CC2500_B1.c: 36: while(RC2==1);
  9206                           
  9207  1D84  0020               	movlb	0	; select bank0
  9208  1D85  190E               	btfsc	14,2	;volatile
  9209  1D86  2D84               	goto	l307
  9210                           
  9211                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  9212  1D87  31A6  26AD  319D   	fcall	_CC2500_WriteByte
  9213                           
  9214                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  9215  1D8A  0021               	movlb	1	; select bank1
  9216  1D8B  0840               	movf	_Tx_Length^(0+128),w
  9217  1D8C  0020               	movlb	0	; select bank0
  9218  1D8D  00A4               	movwf	??_CC2500_TxData
  9219  1D8E  0824               	movf	??_CC2500_TxData,w
  9220  1D8F  0021               	movlb	1	; select bank1
  9221  1D90  00BF               	movwf	_SPI0Buffer^(0+128)
  9222                           
  9223                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  9224  1D91  31A6  26AD  319D   	fcall	_CC2500_WriteByte
  9225                           
  9226                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  9227  1D94  0020               	movlb	0	; select bank0
  9228  1D95  01A5               	clrf	CC2500_TxData@loop_e
  9229  1D96                     l6970:	
  9230  1D96  0021               	movlb	1	; select bank1
  9231  1D97  0840               	movf	_Tx_Length^(0+128),w
  9232  1D98  0020               	movlb	0	; select bank0
  9233  1D99  0225               	subwf	CC2500_TxData@loop_e,w
  9234  1D9A  1803               	btfsc	3,0
  9235  1D9B  2DAE               	goto	l312
  9236                           
  9237                           ;CC2500_B1.c: 41: {
  9238                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  9239  1D9C  0825               	movf	CC2500_TxData@loop_e,w
  9240  1D9D  3EA0               	addlw	_RF_Data& (0+255)
  9241  1D9E  0086               	movwf	6
  9242  1D9F  0187               	clrf	7
  9243  1DA0  0801               	movf	1,w
  9244  1DA1  00A4               	movwf	??_CC2500_TxData
  9245  1DA2  0824               	movf	??_CC2500_TxData,w
  9246  1DA3  0021               	movlb	1	; select bank1
  9247  1DA4  00BF               	movwf	_SPI0Buffer^(0+128)
  9248                           
  9249                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  9250  1DA5  31A6  26AD  319D   	fcall	_CC2500_WriteByte
  9251  1DA8  3001               	movlw	1
  9252  1DA9  0020               	movlb	0	; select bank0
  9253  1DAA  00A4               	movwf	??_CC2500_TxData
  9254  1DAB  0824               	movf	??_CC2500_TxData,w
  9255  1DAC  07A5               	addwf	CC2500_TxData@loop_e,f
  9256  1DAD  2D96               	goto	l6970
  9257  1DAE                     l312:	
  9258                           
  9259                           ;CC2500_B1.c: 44: }
  9260                           ;CC2500_B1.c: 45: RC4=1;
  9261  1DAE  160E               	bsf	14,4	;volatile
  9262                           
  9263                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  9264  1DAF  3035               	movlw	53
  9265  1DB0  31A5  2545  319D   	fcall	_CC2500_WriteCommand
  9266  1DB3                     l313:	
  9267                           ;CC2500_B1.c: 47: while(RB0==0);
  9268                           
  9269  1DB3  0020               	movlb	0	; select bank0
  9270  1DB4  1C0D               	btfss	13,0	;volatile
  9271  1DB5  2DB3               	goto	l313
  9272  1DB6                     l316:	
  9273                           ;CC2500_B1.c: 48: while(RB0==1);
  9274                           
  9275  1DB6  180D               	btfsc	13,0	;volatile
  9276  1DB7  2DB6               	goto	l316
  9277                           
  9278                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  9279  1DB8  3036               	movlw	54
  9280  1DB9  31A5  2545  319D   	fcall	_CC2500_WriteCommand
  9281                           
  9282                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  9283  1DBC  303B               	movlw	59
  9284  1DBD  31A5  2545         	fcall	_CC2500_WriteCommand
  9285                           
  9286                           ;CC2500_B1.c: 51: Transceive_OK=1;
  9287  1DBF  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  9288  1DC0  0008               	return
  9289  1DC1                     __end_of_CC2500_TxData:	
  9290                           
  9291                           	psect	text37
  9292  106A                     __ptext37:	
  9293 ;; *************** function _CC2500_RxData *****************
  9294 ;; Defined at:
  9295 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\CC2500_B1.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;		None
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  loop_f          1    5[BANK0 ] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;		None               void
  9302 ;; Registers used:
  9303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;Total ram usage:        2 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    6
  9316 ;; This function calls:
  9317 ;;		_CC2500_ReadByte
  9318 ;;		_CC2500_ReadStatus
  9319 ;;		_CC2500_WriteByte
  9320 ;;		_CC2500_WriteCommand
  9321 ;;		_setRF_RxStatus
  9322 ;; This function is called by:
  9323 ;;		_setRF_Main
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           
  9328                           ;psect for function _CC2500_RxData
  9329  106A                     _CC2500_RxData:	
  9330                           
  9331                           ;CC2500_B1.c: 58: unsigned char loop_f;
  9332                           ;CC2500_B1.c: 62: if(RB0 == 1)
  9333                           
  9334                           ;incstack = 0
  9335                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9336  106A  0020               	movlb	0	; select bank0
  9337  106B  180D               	btfsc	13,0	;volatile
  9338  106C                     l323:	
  9339                           ;CC2500_B1.c: 63: {
  9340                           ;CC2500_B1.c: 64: while(RB0 == 1);
  9341                           
  9342  106C  180D               	btfsc	13,0	;volatile
  9343  106D  286C               	goto	l323
  9344                           
  9345                           ;CC2500_B1.c: 65: }
  9346                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  9347  106E  303B               	movlw	59
  9348  106F  31A7  272D  3190   	fcall	_CC2500_ReadStatus
  9349                           
  9350                           ;CC2500_B1.c: 67: if(s_data != 0)
  9351  1072  0021               	movlb	1	; select bank1
  9352  1073  0843               	movf	_s_data^(0+128),w
  9353  1074  1903               	btfsc	3,2
  9354  1075  28C0               	goto	l9006
  9355                           
  9356                           ;CC2500_B1.c: 69: {
  9357                           ;CC2500_B1.c: 70: RC4=0;
  9358  1076  0020               	movlb	0	; select bank0
  9359  1077  120E               	bcf	14,4	;volatile
  9360                           
  9361                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  9362  1078  30FF               	movlw	255
  9363  1079  00A4               	movwf	??_CC2500_RxData
  9364  107A  0824               	movf	??_CC2500_RxData,w
  9365  107B  0021               	movlb	1	; select bank1
  9366  107C  00BF               	movwf	_SPI0Buffer^(0+128)
  9367  107D                     l327:	
  9368                           ;CC2500_B1.c: 72: while(RC2==1);
  9369                           
  9370  107D  0020               	movlb	0	; select bank0
  9371  107E  190E               	btfsc	14,2	;volatile
  9372  107F  287D               	goto	l327
  9373                           
  9374                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  9375  1080  31A6  26AD  3190   	fcall	_CC2500_WriteByte
  9376                           
  9377                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  9378  1083  31A7  2764  3190   	fcall	_CC2500_ReadByte
  9379                           
  9380                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  9381  1086  0021               	movlb	1	; select bank1
  9382  1087  083F               	movf	_SPI0Buffer^(0+128),w
  9383  1088  0020               	movlb	0	; select bank0
  9384  1089  00A4               	movwf	??_CC2500_RxData
  9385  108A  0824               	movf	??_CC2500_RxData,w
  9386  108B  0021               	movlb	1	; select bank1
  9387  108C  00BE               	movwf	_Rx_Length^(0+128)
  9388                           
  9389                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  9390  108D  0020               	movlb	0	; select bank0
  9391  108E  01A5               	clrf	CC2500_RxData@loop_f
  9392  108F                     l8992:	
  9393  108F  0021               	movlb	1	; select bank1
  9394  1090  083E               	movf	_Rx_Length^(0+128),w
  9395  1091  0020               	movlb	0	; select bank0
  9396  1092  0225               	subwf	CC2500_RxData@loop_f,w
  9397  1093  1803               	btfsc	3,0
  9398  1094  28A7               	goto	l8994
  9399                           
  9400                           ;CC2500_B1.c: 78: {
  9401                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  9402  1095  31A7  2764  3190   	fcall	_CC2500_ReadByte
  9403                           
  9404                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  9405  1098  0021               	movlb	1	; select bank1
  9406  1099  083F               	movf	_SPI0Buffer^(0+128),w
  9407  109A  0020               	movlb	0	; select bank0
  9408  109B  00A4               	movwf	??_CC2500_RxData
  9409  109C  0825               	movf	CC2500_RxData@loop_f,w
  9410  109D  3EA0               	addlw	_RF_Data& (0+255)
  9411  109E  0086               	movwf	6
  9412  109F  0187               	clrf	7
  9413  10A0  0824               	movf	??_CC2500_RxData,w
  9414  10A1  0081               	movwf	1
  9415  10A2  3001               	movlw	1
  9416  10A3  00A4               	movwf	??_CC2500_RxData
  9417  10A4  0824               	movf	??_CC2500_RxData,w
  9418  10A5  07A5               	addwf	CC2500_RxData@loop_f,f
  9419  10A6  288F               	goto	l8992
  9420  10A7                     l8994:	
  9421                           
  9422                           ;CC2500_B1.c: 81: }
  9423                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  9424  10A7  31A7  2764  3190   	fcall	_CC2500_ReadByte
  9425                           
  9426                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  9427  10AA  0021               	movlb	1	; select bank1
  9428  10AB  083F               	movf	_SPI0Buffer^(0+128),w
  9429  10AC  0020               	movlb	0	; select bank0
  9430  10AD  00A4               	movwf	??_CC2500_RxData
  9431  10AE  0824               	movf	??_CC2500_RxData,w
  9432  10AF  0021               	movlb	1	; select bank1
  9433  10B0  00BD               	movwf	_RSSI^(0+128)
  9434                           
  9435                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  9436  10B1  31A7  2764  3190   	fcall	_CC2500_ReadByte
  9437                           
  9438                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  9439  10B4  0021               	movlb	1	; select bank1
  9440  10B5  083F               	movf	_SPI0Buffer^(0+128),w
  9441  10B6  0020               	movlb	0	; select bank0
  9442  10B7  00A4               	movwf	??_CC2500_RxData
  9443  10B8  0824               	movf	??_CC2500_RxData,w
  9444  10B9  0021               	movlb	1	; select bank1
  9445  10BA  00B7               	movwf	_CRC^(0+128)
  9446                           
  9447                           ;CC2500_B1.c: 86: RC4=1;
  9448  10BB  0020               	movlb	0	; select bank0
  9449  10BC  160E               	bsf	14,4	;volatile
  9450                           
  9451                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  9452  10BD  0021               	movlb	1	; select bank1
  9453  10BE  1BB7               	btfsc	_CRC^(0+128),7
  9454                           
  9455                           ;CC2500_B1.c: 88: Receive_OK=1;
  9456  10BF  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  9457  10C0                     l9006:	
  9458                           
  9459                           ;CC2500_B1.c: 89: }
  9460                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  9461  10C0  3036               	movlw	54
  9462  10C1  31A5  2545  3190   	fcall	_CC2500_WriteCommand
  9463                           
  9464                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  9465  10C4  303A               	movlw	58
  9466  10C5  31A5  2545  3190   	fcall	_CC2500_WriteCommand
  9467                           
  9468                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  9469  10C8  0020               	movlb	0	; select bank0
  9470  10C9  01A2               	clrf	setRF_RxStatus@command
  9471  10CA  3001               	movlw	1
  9472  10CB  31A5  250B         	fcall	_setRF_RxStatus
  9473  10CD  0008               	return
  9474  10CE                     __end_of_CC2500_RxData:	
  9475                           
  9476                           	psect	text38
  9477  250B                     __ptext38:	
  9478 ;; *************** function _setRF_RxStatus *****************
  9479 ;; Defined at:
  9480 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\RF_Control_B1.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  rf              1    wreg     unsigned char 
  9483 ;;  command         1    2[BANK0 ] unsigned char 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  rf              1    3[BANK0 ] unsigned char 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;		None               void
  9488 ;; Registers used:
  9489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9495 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;Total ram usage:        2 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    5
  9502 ;; This function calls:
  9503 ;;		_RfPointSelect
  9504 ;; This function is called by:
  9505 ;;		_CC2500_RxData
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           
  9510                           ;psect for function _setRF_RxStatus
  9511  250B                     _setRF_RxStatus:	
  9512                           
  9513                           ;incstack = 0
  9514                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9515                           ;setRF_RxStatus@rf stored from wreg
  9516  250B  0020               	movlb	0	; select bank0
  9517  250C  00A3               	movwf	setRF_RxStatus@rf
  9518                           
  9519                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  9520  250D  0823               	movf	setRF_RxStatus@rf,w
  9521  250E  31A4  2442         	fcall	_RfPointSelect
  9522                           
  9523                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  9524  2510  087C               	movf	_RF,w
  9525  2511  0086               	movwf	6
  9526  2512  0187               	clrf	7
  9527  2513  0020               	movlb	0	; select bank0
  9528  2514  0822               	movf	setRF_RxStatus@command,w
  9529  2515  1181               	bcf	1,3
  9530  2516  1D03               	skipz
  9531  2517  1581               	bsf	1,3
  9532  2518  0008               	return
  9533  2519                     __end_of_setRF_RxStatus:	
  9534                           
  9535                           	psect	text39
  9536  272D                     __ptext39:	
  9537 ;; *************** function _CC2500_ReadStatus *****************
  9538 ;; Defined at:
  9539 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  status_addr     1    wreg     unsigned char 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  status_addr     1    3[BANK0 ] unsigned char 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;		None               void
  9546 ;; Registers used:
  9547 ;;		wreg, status,2, status,0, pclath, cstack
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;Total ram usage:        2 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; Hardware stack levels required when called:    5
  9560 ;; This function calls:
  9561 ;;		_CC2500_ReadByte
  9562 ;;		_CC2500_WriteByte
  9563 ;; This function is called by:
  9564 ;;		_CC2500_RxData
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function _CC2500_ReadStatus
  9570  272D                     _CC2500_ReadStatus:	
  9571                           
  9572                           ;incstack = 0
  9573                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  9574                           ;CC2500_ReadStatus@status_addr stored from wreg
  9575  272D  0020               	movlb	0	; select bank0
  9576  272E  00A3               	movwf	CC2500_ReadStatus@status_addr
  9577                           
  9578                           ;CC2500_B1.c: 269: RC4=0;
  9579  272F  120E               	bcf	14,4	;volatile
  9580                           
  9581                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  9582  2730  0823               	movf	CC2500_ReadStatus@status_addr,w
  9583  2731  3EC0               	addlw	192
  9584  2732  00A2               	movwf	??_CC2500_ReadStatus
  9585  2733  0822               	movf	??_CC2500_ReadStatus,w
  9586  2734  0021               	movlb	1	; select bank1
  9587  2735  00BF               	movwf	_SPI0Buffer^(0+128)
  9588  2736                     l403:	
  9589                           ;CC2500_B1.c: 272: while(RC2==1);
  9590                           
  9591  2736  0020               	movlb	0	; select bank0
  9592  2737  190E               	btfsc	14,2	;volatile
  9593  2738  2F36               	goto	l403
  9594                           
  9595                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  9596  2739  31A6  26AD  31A7   	fcall	_CC2500_WriteByte
  9597                           
  9598                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  9599  273C  31A7  2764         	fcall	_CC2500_ReadByte
  9600                           
  9601                           ;CC2500_B1.c: 276: RC4=1;
  9602  273E  0020               	movlb	0	; select bank0
  9603  273F  160E               	bsf	14,4	;volatile
  9604                           
  9605                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  9606  2740  0021               	movlb	1	; select bank1
  9607  2741  083F               	movf	_SPI0Buffer^(0+128),w
  9608  2742  0020               	movlb	0	; select bank0
  9609  2743  00A2               	movwf	??_CC2500_ReadStatus
  9610  2744  0822               	movf	??_CC2500_ReadStatus,w
  9611  2745  0021               	movlb	1	; select bank1
  9612  2746  00C3               	movwf	_s_data^(0+128)
  9613  2747  0008               	return
  9614  2748                     __end_of_CC2500_ReadStatus:	
  9615                           
  9616                           	psect	text40
  9617  2764                     __ptext40:	
  9618 ;; *************** function _CC2500_ReadByte *****************
  9619 ;; Defined at:
  9620 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;		None
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;  loop_b          1    1[BANK0 ] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;		None               void
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;Total ram usage:        2 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:    4
  9641 ;; This function calls:
  9642 ;;		Nothing
  9643 ;; This function is called by:
  9644 ;;		_CC2500_RxData
  9645 ;;		_CC2500_ReadStatus
  9646 ;;		_CC2500_ReadREG
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           
  9651                           ;psect for function _CC2500_ReadByte
  9652  2764                     _CC2500_ReadByte:	
  9653                           
  9654                           ;CC2500_B1.c: 212: unsigned char loop_b;
  9655                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  9656                           
  9657                           ;incstack = 0
  9658                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  9659  2764  0020               	movlb	0	; select bank0
  9660  2765  01A1               	clrf	CC2500_ReadByte@loop_b
  9661  2766                     L11:	
  9662  2766  3008               	movlw	8
  9663  2767  0221               	subwf	CC2500_ReadByte@loop_b,w
  9664  2768  1803               	btfsc	3,0
  9665  2769  0008               	return
  9666                           
  9667                           ;CC2500_B1.c: 214: {
  9668                           ;CC2500_B1.c: 215: RC1=1;
  9669  276A  148E               	bsf	14,1	;volatile
  9670                           
  9671                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  9672  276B  1003               	clrc
  9673  276C  0021               	movlb	1	; select bank1
  9674  276D  0DBF               	rlf	_SPI0Buffer^(0+128),f
  9675                           
  9676                           ;CC2500_B1.c: 217: if(RC2 == 1)
  9677  276E  0020               	movlb	0	; select bank0
  9678  276F  1D0E               	btfss	14,2	;volatile
  9679  2770  2F74               	goto	l6694
  9680                           
  9681                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  9682  2771  0021               	movlb	1	; select bank1
  9683  2772  143F               	bsf	_SPI0Buffer^(0+128),0
  9684  2773  2F7A               	goto	l6696
  9685  2774                     l6694:	
  9686                           
  9687                           ;CC2500_B1.c: 219: else
  9688                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  9689  2774  30FE               	movlw	254
  9690  2775  0020               	movlb	0	; select bank0
  9691  2776  00A0               	movwf	??_CC2500_ReadByte
  9692  2777  0820               	movf	??_CC2500_ReadByte,w
  9693  2778  0021               	movlb	1	; select bank1
  9694  2779  05BF               	andwf	_SPI0Buffer^(0+128),f
  9695  277A                     l6696:	
  9696                           
  9697                           ;CC2500_B1.c: 221: RC1=0;
  9698  277A  0020               	movlb	0	; select bank0
  9699  277B  108E               	bcf	14,1	;volatile
  9700  277C  3001               	movlw	1
  9701  277D  00A0               	movwf	??_CC2500_ReadByte
  9702  277E  0820               	movf	??_CC2500_ReadByte,w
  9703  277F  07A1               	addwf	CC2500_ReadByte@loop_b,f
  9704  2780  2F66               	goto	L11
  9705  2781                     __end_of_CC2500_ReadByte:	
  9706                           
  9707                           	psect	text41
  9708  23BA                     __ptext41:	
  9709 ;; *************** function _RF_Initialization *****************
  9710 ;; Defined at:
  9711 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\RF_Control_B1.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;		None
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;		None
  9716 ;; Return value:  Size  Location     Type
  9717 ;;		None               void
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0, pclath, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;Total ram usage:        0 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    5
  9732 ;; This function calls:
  9733 ;;		_setRF_Initialization
  9734 ;; This function is called by:
  9735 ;;		_main
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           
  9740                           ;psect for function _RF_Initialization
  9741  23BA                     _RF_Initialization:	
  9742                           
  9743                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  9744                           
  9745                           ;incstack = 0
  9746                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9747  23BA  3001               	movlw	1
  9748  23BB  31A3  23EA         	fcall	_setRF_Initialization
  9749  23BD  0008               	return
  9750  23BE                     __end_of_RF_Initialization:	
  9751                           
  9752                           	psect	text42
  9753  23EA                     __ptext42:	
  9754 ;; *************** function _setRF_Initialization *****************
  9755 ;; Defined at:
  9756 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\RF_Control_B1.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;  rf              1    wreg     unsigned char 
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;  rf              1    0[COMMON] unsigned char 
  9761 ;; Return value:  Size  Location     Type
  9762 ;;		None               void
  9763 ;; Registers used:
  9764 ;;		wreg
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;Total ram usage:        1 bytes
  9775 ;; Hardware stack levels used:    1
  9776 ;; Hardware stack levels required when called:    4
  9777 ;; This function calls:
  9778 ;;		Nothing
  9779 ;; This function is called by:
  9780 ;;		_RF_Initialization
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           
  9785                           ;psect for function _setRF_Initialization
  9786  23EA                     _setRF_Initialization:	
  9787                           
  9788                           ;RF_Control_B1.c: 54: Tx_Length=21;
  9789                           
  9790                           ;incstack = 0
  9791                           ; Regs used in _setRF_Initialization: [wreg]
  9792  23EA  3015               	movlw	21
  9793  23EB  0020               	movlb	0	; select bank0
  9794  23EC  00A0               	movwf	??_setRF_Initialization
  9795  23ED  0820               	movf	??_setRF_Initialization,w
  9796  23EE  0021               	movlb	1	; select bank1
  9797  23EF  00C0               	movwf	_Tx_Length^(0+128)
  9798  23F0  0008               	return
  9799  23F1                     __end_of_setRF_Initialization:	
  9800                           
  9801                           	psect	text43
  9802  23A8                     __ptext43:	
  9803 ;; *************** function _PowerFault_Main *****************
  9804 ;; Defined at:
  9805 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\PowerFault_B1.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;		None               void
  9812 ;; Registers used:
  9813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:   10
  9826 ;; This function calls:
  9827 ;;		_setPowerFault_Main
  9828 ;; This function is called by:
  9829 ;;		_main
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           
  9834                           ;psect for function _PowerFault_Main
  9835  23A8                     _PowerFault_Main:	
  9836                           
  9837                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  9838                           
  9839                           ;incstack = 0
  9840                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9841  23A8  318D  25CF         	fcall	_setPowerFault_Main
  9842  23AA  0008               	return
  9843  23AB                     __end_of_PowerFault_Main:	
  9844                           
  9845                           	psect	text44
  9846  0DCF                     __ptext44:	
  9847 ;; *************** function _setPowerFault_Main *****************
  9848 ;; Defined at:
  9849 ;;		line 61 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\PowerFault_B1.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;		None
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;		None               void
  9856 ;; Registers used:
  9857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;Total ram usage:        2 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; Hardware stack levels required when called:    9
  9870 ;; This function calls:
  9871 ;;		_getLoad_Safe
  9872 ;;		_getTemp_Safe
  9873 ;;		_setPowerFault_Exceptions
  9874 ;; This function is called by:
  9875 ;;		_PowerFault_Main
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           
  9880                           ;psect for function _setPowerFault_Main
  9881  0DCF                     _setPowerFault_Main:	
  9882                           
  9883                           ;PowerFault_B1.c: 63: if(PF->Enable)
  9884                           
  9885                           ;incstack = 0
  9886                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9887  0DCF  087B               	movf	_PF,w
  9888  0DD0  0086               	movwf	6
  9889  0DD1  3001               	movlw	1	; select bank2/3
  9890  0DD2  0087               	movwf	7
  9891  0DD3  1C01               	btfss	1,0
  9892  0DD4  0008               	return
  9893                           
  9894                           ;PowerFault_B1.c: 64: {
  9895                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  9896  0DD5  087B               	movf	_PF,w
  9897  0DD6  0086               	movwf	6
  9898  0DD7  3001               	movlw	1	; select bank2/3
  9899  0DD8  0087               	movwf	7
  9900  0DD9  1981               	btfsc	1,3
  9901  0DDA  2E1F               	goto	l9516
  9902                           
  9903                           ;PowerFault_B1.c: 66: {
  9904                           ;PowerFault_B1.c: 67: PF->Time++;
  9905  0DDB  087B               	movf	_PF,w
  9906  0DDC  3E06               	addlw	6
  9907  0DDD  0086               	movwf	6
  9908  0DDE  3001               	movlw	1	; select bank2/3
  9909  0DDF  0087               	movwf	7
  9910  0DE0  3001               	movlw	1
  9911  0DE1  0781               	addwf	1,f
  9912  0DE2  3141               	addfsr 1,1
  9913  0DE3  1803               	skipnc
  9914  0DE4  0A81               	incf	1,f
  9915                           
  9916                           ;PowerFault_B1.c: 68: if(PF->Time >= 700)
  9917  0DE5  087B               	movf	_PF,w
  9918  0DE6  3E06               	addlw	6
  9919  0DE7  0086               	movwf	6
  9920  0DE8  3001               	movlw	1	; select bank2/3
  9921  0DE9  0087               	movwf	7
  9922  0DEA  3F40               	moviw [0]fsr1
  9923  0DEB  0020               	movlb	0	; select bank0
  9924  0DEC  00AD               	movwf	??_setPowerFault_Main
  9925  0DED  3F41               	moviw [1]fsr1
  9926  0DEE  00AE               	movwf	??_setPowerFault_Main+1
  9927  0DEF  3002               	movlw	2
  9928  0DF0  022E               	subwf	??_setPowerFault_Main+1,w
  9929  0DF1  30BC               	movlw	188
  9930  0DF2  1903               	skipnz
  9931  0DF3  022D               	subwf	??_setPowerFault_Main,w
  9932  0DF4  1C03               	skipc
  9933  0DF5  0008               	return
  9934                           
  9935                           ;PowerFault_B1.c: 69: {
  9936                           ;PowerFault_B1.c: 70: if(getLoad_Safe() && getTemp_Safe())
  9937  0DF6  31A4  2479  318D   	fcall	_getLoad_Safe
  9938  0DF9  3A00               	xorlw	0
  9939  0DFA  1903               	skipnz
  9940  0DFB  2E15               	goto	l9514
  9941  0DFC  31A3  23DC  318D   	fcall	_getTemp_Safe
  9942  0DFF  3A00               	xorlw	0
  9943  0E00  1903               	skipnz
  9944  0E01  2E15               	goto	l9514
  9945                           
  9946                           ;PowerFault_B1.c: 71: {
  9947                           ;PowerFault_B1.c: 72: PF->Time=0;
  9948  0E02  087B               	movf	_PF,w
  9949  0E03  3E06               	addlw	6
  9950  0E04  0086               	movwf	6
  9951  0E05  3001               	movlw	1	; select bank2/3
  9952  0E06  0087               	movwf	7
  9953  0E07  3000               	movlw	0
  9954  0E08  3FC0               	movwi [0]fsr1
  9955  0E09  3FC1               	movwi [1]fsr1
  9956                           
  9957                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  9958  0E0A  087B               	movf	_PF,w
  9959  0E0B  0086               	movwf	6
  9960  0E0C  3001               	movlw	1	; select bank2/3
  9961  0E0D  0087               	movwf	7
  9962  0E0E  1581               	bsf	1,3
  9963                           
  9964                           ;PowerFault_B1.c: 74: PF->Safe=0;
  9965  0E0F  087B               	movf	_PF,w
  9966  0E10  0086               	movwf	6
  9967  0E11  3001               	movlw	1	; select bank2/3
  9968  0E12  0087               	movwf	7
  9969  0E13  1101               	bcf	1,2
  9970                           
  9971                           ;PowerFault_B1.c: 75: }
  9972  0E14  0008               	return
  9973  0E15                     l9514:	
  9974                           
  9975                           ;PowerFault_B1.c: 76: else
  9976                           ;PowerFault_B1.c: 77: {
  9977                           ;PowerFault_B1.c: 78: PF->Time=700;
  9978  0E15  087B               	movf	_PF,w
  9979  0E16  3E06               	addlw	6
  9980  0E17  0086               	movwf	6
  9981  0E18  3001               	movlw	1	; select bank2/3
  9982  0E19  0087               	movwf	7
  9983  0E1A  30BC               	movlw	188
  9984  0E1B  3FC0               	movwi [0]fsr1
  9985  0E1C  3002               	movlw	2
  9986  0E1D  3FC1               	movwi [1]fsr1
  9987                           
  9988                           ;PowerFault_B1.c: 79: }
  9989                           ;PowerFault_B1.c: 80: }
  9990                           ;PowerFault_B1.c: 81: }
  9991  0E1E  0008               	return
  9992  0E1F                     l9516:	
  9993                           
  9994                           ;PowerFault_B1.c: 82: else
  9995                           ;PowerFault_B1.c: 83: {
  9996                           ;PowerFault_B1.c: 84: PF->Time++;
  9997  0E1F  087B               	movf	_PF,w
  9998  0E20  3E06               	addlw	6
  9999  0E21  0086               	movwf	6
 10000  0E22  3001               	movlw	1	; select bank2/3
 10001  0E23  0087               	movwf	7
 10002  0E24  3001               	movlw	1
 10003  0E25  0781               	addwf	1,f
 10004  0E26  3141               	addfsr 1,1
 10005  0E27  1803               	skipnc
 10006  0E28  0A81               	incf	1,f
 10007                           
 10008                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
 10009  0E29  087B               	movf	_PF,w
 10010  0E2A  3E06               	addlw	6
 10011  0E2B  0086               	movwf	6
 10012  0E2C  3001               	movlw	1	; select bank2/3
 10013  0E2D  0087               	movwf	7
 10014  0E2E  3F40               	moviw [0]fsr1
 10015  0E2F  0020               	movlb	0	; select bank0
 10016  0E30  00AD               	movwf	??_setPowerFault_Main
 10017  0E31  3F41               	moviw [1]fsr1
 10018  0E32  00AE               	movwf	??_setPowerFault_Main+1
 10019  0E33  3000               	movlw	0
 10020  0E34  022E               	subwf	??_setPowerFault_Main+1,w
 10021  0E35  3002               	movlw	2
 10022  0E36  1903               	skipnz
 10023  0E37  022D               	subwf	??_setPowerFault_Main,w
 10024  0E38  1C03               	skipc
 10025  0E39  0008               	return
 10026                           
 10027                           ;PowerFault_B1.c: 86: {
 10028                           ;PowerFault_B1.c: 87: PF->Time=0;
 10029  0E3A  087B               	movf	_PF,w
 10030  0E3B  3E06               	addlw	6
 10031  0E3C  0086               	movwf	6
 10032  0E3D  3001               	movlw	1	; select bank2/3
 10033  0E3E  0087               	movwf	7
 10034  0E3F  3000               	movlw	0
 10035  0E40  3FC0               	movwi [0]fsr1
 10036  0E41  3FC1               	movwi [1]fsr1
 10037                           
 10038                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
 10039  0E42  087B               	movf	_PF,w
 10040  0E43  0086               	movwf	6
 10041  0E44  3001               	movlw	1	; select bank2/3
 10042  0E45  0087               	movwf	7
 10043  0E46  1181               	bcf	1,3
 10044                           
 10045                           ;PowerFault_B1.c: 90: if(PF->ERROR)
 10046  0E47  087B               	movf	_PF,w
 10047  0E48  0086               	movwf	6
 10048  0E49  3001               	movlw	1	; select bank2/3
 10049  0E4A  0087               	movwf	7
 10050  0E4B  1C81               	btfss	1,1
 10051  0E4C  2E88               	goto	l9536
 10052                           
 10053                           ;PowerFault_B1.c: 91: {
 10054                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
 10055  0E4D  0A7B               	incf	_PF,w
 10056  0E4E  0086               	movwf	6
 10057  0E4F  3001               	movlw	1	; select bank2/3
 10058  0E50  0087               	movwf	7
 10059  0E51  3F40               	moviw [0]fsr1
 10060  0E52  00AD               	movwf	??_setPowerFault_Main
 10061  0E53  3F41               	moviw [1]fsr1
 10062  0E54  00AE               	movwf	??_setPowerFault_Main+1
 10063  0E55  3001               	movlw	1
 10064  0E56  022E               	subwf	??_setPowerFault_Main+1,w
 10065  0E57  3091               	movlw	145
 10066  0E58  1903               	skipnz
 10067  0E59  022D               	subwf	??_setPowerFault_Main,w
 10068  0E5A  1803               	skipnc
 10069  0E5B  2EC4               	goto	l9548
 10070  0E5C  0A7B               	incf	_PF,w
 10071  0E5D  0086               	movwf	6
 10072  0E5E  3001               	movlw	1	; select bank2/3
 10073  0E5F  0087               	movwf	7
 10074  0E60  3F40               	moviw [0]fsr1
 10075  0E61  00AD               	movwf	??_setPowerFault_Main
 10076  0E62  3F41               	moviw [1]fsr1
 10077  0E63  00AE               	movwf	??_setPowerFault_Main+1
 10078  0E64  3000               	movlw	0
 10079  0E65  022E               	subwf	??_setPowerFault_Main+1,w
 10080  0E66  30C8               	movlw	200
 10081  0E67  1903               	skipnz
 10082  0E68  022D               	subwf	??_setPowerFault_Main,w
 10083  0E69  1C03               	skipc
 10084  0E6A  2EC4               	goto	l9548
 10085                           
 10086                           ;PowerFault_B1.c: 93: {
 10087                           ;PowerFault_B1.c: 94: PF->Count++;
 10088  0E6B  3001               	movlw	1
 10089  0E6C  00AD               	movwf	??_setPowerFault_Main
 10090  0E6D  087B               	movf	_PF,w
 10091  0E6E  3E05               	addlw	5
 10092  0E6F  0086               	movwf	6
 10093  0E70  3001               	movlw	1	; select bank2/3
 10094  0E71  0087               	movwf	7
 10095  0E72  082D               	movf	??_setPowerFault_Main,w
 10096  0E73  0781               	addwf	1,f
 10097                           
 10098                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
 10099  0E74  087B               	movf	_PF,w
 10100  0E75  3E05               	addlw	5
 10101  0E76  0086               	movwf	6
 10102  0E77  3001               	movlw	1	; select bank2/3
 10103  0E78  0087               	movwf	7
 10104  0E79  3002               	movlw	2
 10105  0E7A  0201               	subwf	1,w
 10106  0E7B  1C03               	skipc
 10107  0E7C  2ECA               	goto	l9550
 10108                           
 10109                           ;PowerFault_B1.c: 96: {
 10110                           ;PowerFault_B1.c: 97: PF->Count=0;
 10111  0E7D  087B               	movf	_PF,w
 10112  0E7E  3E05               	addlw	5
 10113  0E7F  0086               	movwf	6
 10114  0E80  3001               	movlw	1	; select bank2/3
 10115  0E81  0087               	movwf	7
 10116  0E82  0181               	clrf	1
 10117                           
 10118                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
 10119  0E83  3000               	movlw	0
 10120  0E84  319B  23B9  318D   	fcall	_setPowerFault_Exceptions
 10121                           
 10122                           ;PowerFault_B1.c: 99: }
 10123                           ;PowerFault_B1.c: 100: }
 10124  0E87  2ECA               	goto	l9550
 10125  0E88                     l9536:	
 10126                           ;PowerFault_B1.c: 104: }
 10127                           ;PowerFault_B1.c: 105: }
 10128                           
 10129                           ;PowerFault_B1.c: 101: else
 10130                           ;PowerFault_B1.c: 102: {
 10131                           ;PowerFault_B1.c: 103: PF->Count=0;
 10132                           
 10133                           
 10134                           ;PowerFault_B1.c: 106: else
 10135                           ;PowerFault_B1.c: 107: {
 10136                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
 10137  0E88  0A7B               	incf	_PF,w
 10138  0E89  0086               	movwf	6
 10139  0E8A  3001               	movlw	1	; select bank2/3
 10140  0E8B  0087               	movwf	7
 10141  0E8C  3F40               	moviw [0]fsr1
 10142  0E8D  0020               	movlb	0	; select bank0
 10143  0E8E  00AD               	movwf	??_setPowerFault_Main
 10144  0E8F  3F41               	moviw [1]fsr1
 10145  0E90  00AE               	movwf	??_setPowerFault_Main+1
 10146  0E91  3001               	movlw	1
 10147  0E92  022E               	subwf	??_setPowerFault_Main+1,w
 10148  0E93  3090               	movlw	144
 10149  0E94  1903               	skipnz
 10150  0E95  022D               	subwf	??_setPowerFault_Main,w
 10151  0E96  1803               	skipnc
 10152  0E97  2EA7               	goto	l9540
 10153  0E98  0A7B               	incf	_PF,w
 10154  0E99  0086               	movwf	6
 10155  0E9A  3001               	movlw	1	; select bank2/3
 10156  0E9B  0087               	movwf	7
 10157  0E9C  3F40               	moviw [0]fsr1
 10158  0E9D  00AD               	movwf	??_setPowerFault_Main
 10159  0E9E  3F41               	moviw [1]fsr1
 10160  0E9F  00AE               	movwf	??_setPowerFault_Main+1
 10161  0EA0  3000               	movlw	0
 10162  0EA1  022E               	subwf	??_setPowerFault_Main+1,w
 10163  0EA2  30D3               	movlw	211
 10164  0EA3  1903               	skipnz
 10165  0EA4  022D               	subwf	??_setPowerFault_Main,w
 10166  0EA5  1803               	skipnc
 10167  0EA6  2EC4               	goto	l9548
 10168  0EA7                     l9540:	
 10169                           
 10170                           ;PowerFault_B1.c: 109: {
 10171                           ;PowerFault_B1.c: 110: PF->Count++;
 10172  0EA7  3001               	movlw	1
 10173  0EA8  00AD               	movwf	??_setPowerFault_Main
 10174  0EA9  087B               	movf	_PF,w
 10175  0EAA  3E05               	addlw	5
 10176  0EAB  0086               	movwf	6
 10177  0EAC  3001               	movlw	1	; select bank2/3
 10178  0EAD  0087               	movwf	7
 10179  0EAE  082D               	movf	??_setPowerFault_Main,w
 10180  0EAF  0781               	addwf	1,f
 10181                           
 10182                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
 10183  0EB0  087B               	movf	_PF,w
 10184  0EB1  3E05               	addlw	5
 10185  0EB2  0086               	movwf	6
 10186  0EB3  3001               	movlw	1	; select bank2/3
 10187  0EB4  0087               	movwf	7
 10188  0EB5  3002               	movlw	2
 10189  0EB6  0201               	subwf	1,w
 10190  0EB7  1C03               	skipc
 10191  0EB8  2ECA               	goto	l9550
 10192                           
 10193                           ;PowerFault_B1.c: 112: {
 10194                           ;PowerFault_B1.c: 113: PF->Count=0;
 10195  0EB9  087B               	movf	_PF,w
 10196  0EBA  3E05               	addlw	5
 10197  0EBB  0086               	movwf	6
 10198  0EBC  3001               	movlw	1	; select bank2/3
 10199  0EBD  0087               	movwf	7
 10200  0EBE  0181               	clrf	1
 10201                           
 10202                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
 10203  0EBF  3001               	movlw	1
 10204  0EC0  319B  23B9  318D   	fcall	_setPowerFault_Exceptions
 10205                           
 10206                           ;PowerFault_B1.c: 115: }
 10207                           ;PowerFault_B1.c: 116: }
 10208  0EC3  2ECA               	goto	l9550
 10209  0EC4                     l9548:	
 10210                           
 10211                           ;PowerFault_B1.c: 117: else
 10212                           ;PowerFault_B1.c: 118: {
 10213                           ;PowerFault_B1.c: 119: PF->Count=0;
 10214  0EC4  087B               	movf	_PF,w
 10215  0EC5  3E05               	addlw	5
 10216  0EC6  0086               	movwf	6
 10217  0EC7  3001               	movlw	1	; select bank2/3
 10218  0EC8  0087               	movwf	7
 10219  0EC9  0181               	clrf	1
 10220  0ECA                     l9550:	
 10221                           
 10222                           ;PowerFault_B1.c: 120: }
 10223                           ;PowerFault_B1.c: 122: }
 10224                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
 10225  0ECA  087B               	movf	_PF,w
 10226  0ECB  0086               	movwf	6
 10227  0ECC  3001               	movlw	1	; select bank2/3
 10228  0ECD  0087               	movwf	7
 10229  0ECE  1881               	btfsc	1,1
 10230  0ECF  2ED5               	goto	l2460
 10231                           
 10232                           ;PowerFault_B1.c: 124: {
 10233                           ;PowerFault_B1.c: 125: PF->Safe=1;
 10234  0ED0  087B               	movf	_PF,w
 10235  0ED1  0086               	movwf	6
 10236  0ED2  3001               	movlw	1	; select bank2/3
 10237  0ED3  0087               	movwf	7
 10238  0ED4  1501               	bsf	1,2
 10239  0ED5                     l2460:	
 10240                           
 10241                           ;PowerFault_B1.c: 126: }
 10242                           ;PowerFault_B1.c: 127: PF->AD=0;
 10243  0ED5  0A7B               	incf	_PF,w
 10244  0ED6  0086               	movwf	6
 10245  0ED7  3001               	movlw	1	; select bank2/3
 10246  0ED8  0087               	movwf	7
 10247  0ED9  3000               	movlw	0
 10248  0EDA  3FC0               	movwi [0]fsr1
 10249  0EDB  3FC1               	movwi [1]fsr1
 10250  0EDC  0008               	return
 10251  0EDD                     __end_of_setPowerFault_Main:	
 10252                           
 10253                           	psect	text45
 10254  1BB9                     __ptext45:	
 10255 ;; *************** function _setPowerFault_Exceptions *****************
 10256 ;; Defined at:
 10257 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\PowerFault_B1.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  command         1    wreg     unsigned char 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  command         1   12[BANK0 ] unsigned char 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;		None               void
 10264 ;; Registers used:
 10265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;Total ram usage:        2 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    8
 10278 ;; This function calls:
 10279 ;;		_DimmerLights_Exceptions
 10280 ;;		_setLED
 10281 ;;		_setRF_Enable
 10282 ;;		_setSw_Enable
 10283 ;; This function is called by:
 10284 ;;		_setPowerFault_Main
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           
 10289                           ;psect for function _setPowerFault_Exceptions
 10290  1BB9                     _setPowerFault_Exceptions:	
 10291                           
 10292                           ;incstack = 0
 10293                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 10294                           ;setPowerFault_Exceptions@command stored from wreg
 10295  1BB9  0020               	movlb	0	; select bank0
 10296  1BBA  00AC               	movwf	setPowerFault_Exceptions@command
 10297                           
 10298                           ;PowerFault_B1.c: 135: PF->ERROR=command;
 10299  1BBB  087B               	movf	_PF,w
 10300  1BBC  0086               	movwf	6
 10301  1BBD  3001               	movlw	1	; select bank2/3
 10302  1BBE  0087               	movwf	7
 10303  1BBF  082C               	movf	setPowerFault_Exceptions@command,w
 10304  1BC0  1081               	bcf	1,1
 10305  1BC1  1D03               	skipz
 10306  1BC2  1481               	bsf	1,1
 10307                           
 10308                           ;PowerFault_B1.c: 136: PF->Safe=(~command) & 0x01;
 10309  1BC3  092C               	comf	setPowerFault_Exceptions@command,w
 10310  1BC4  3901               	andlw	1
 10311  1BC5  00AB               	movwf	??_setPowerFault_Exceptions
 10312  1BC6  087B               	movf	_PF,w
 10313  1BC7  0086               	movwf	6
 10314  1BC8  3001               	movlw	1	; select bank2/3
 10315  1BC9  0087               	movwf	7
 10316  1BCA  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10317  1BCB  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10318  1BCC  0801               	movf	1,w
 10319  1BCD  062B               	xorwf	??_setPowerFault_Exceptions,w
 10320  1BCE  39FB               	andlw	-5
 10321  1BCF  062B               	xorwf	??_setPowerFault_Exceptions,w
 10322  1BD0  0081               	movwf	1
 10323                           
 10324                           ;PowerFault_B1.c: 137: if(command == 1)
 10325  1BD1  082C               	movf	setPowerFault_Exceptions@command,w
 10326  1BD2  3A01               	xorlw	1
 10327  1BD3  1D03               	skipz
 10328  1BD4  2BD9               	goto	l2464
 10329                           
 10330                           ;PowerFault_B1.c: 138: {
 10331                           ;PowerFault_B1.c: 139: DimmerLights_Exceptions(3);
 10332  1BD5  3003               	movlw	3
 10333  1BD6  3190  20CE  319B   	fcall	_DimmerLights_Exceptions
 10334  1BD9                     l2464:	
 10335                           
 10336                           ;PowerFault_B1.c: 143: }
 10337                           ;PowerFault_B1.c: 144: setLED(99,command+10);
 10338  1BD9  0020               	movlb	0	; select bank0
 10339  1BDA  082C               	movf	setPowerFault_Exceptions@command,w
 10340  1BDB  3E0A               	addlw	10
 10341  1BDC  00AB               	movwf	??_setPowerFault_Exceptions
 10342  1BDD  082B               	movf	??_setPowerFault_Exceptions,w
 10343  1BDE  00A2               	movwf	setLED@command
 10344  1BDF  3063               	movlw	99
 10345  1BE0  319F  27A2  319B   	fcall	_setLED
 10346                           
 10347                           ;PowerFault_B1.c: 146: setSw_Enable((~command) & 0x01);
 10348  1BE3  0020               	movlb	0	; select bank0
 10349  1BE4  092C               	comf	setPowerFault_Exceptions@command,w
 10350  1BE5  3901               	andlw	1
 10351  1BE6  31A7  2748  319B   	fcall	_setSw_Enable
 10352                           
 10353                           ;PowerFault_B1.c: 148: setRF_Enable(1,(~command) & 0x01);
 10354  1BE9  0020               	movlb	0	; select bank0
 10355  1BEA  092C               	comf	setPowerFault_Exceptions@command,w
 10356  1BEB  3901               	andlw	1
 10357  1BEC  00AB               	movwf	??_setPowerFault_Exceptions
 10358  1BED  082B               	movf	??_setPowerFault_Exceptions,w
 10359  1BEE  00A2               	movwf	setRF_Enable@command
 10360  1BEF  3001               	movlw	1
 10361  1BF0  3199  21A8         	fcall	_setRF_Enable
 10362  1BF2  0008               	return
 10363  1BF3                     __end_of_setPowerFault_Exceptions:	
 10364                           
 10365                           	psect	text46
 10366  2479                     __ptext46:	
 10367 ;; *************** function _getLoad_Safe *****************
 10368 ;; Defined at:
 10369 ;;		line 301 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  1    wreg      unsigned char 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;Total ram usage:        1 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    4
 10390 ;; This function calls:
 10391 ;;		Nothing
 10392 ;; This function is called by:
 10393 ;;		_setTemp_Main
 10394 ;;		_setPowerFault_Main
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           
 10399                           ;psect for function _getLoad_Safe
 10400  2479                     _getLoad_Safe:	
 10401                           
 10402                           ;OverLoad_B1.c: 303: return Load->Safe;
 10403                           
 10404                           ;incstack = 0
 10405                           ; Regs used in _getLoad_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 10406  2479  0020               	movlb	0	; select bank0
 10407  247A  086E               	movf	_Load,w
 10408  247B  0086               	movwf	6
 10409  247C  3002               	movlw	2	; select bank4/5
 10410  247D  0087               	movwf	7
 10411  247E  0C01               	rrf	1,w
 10412  247F  00A0               	movwf	??_getLoad_Safe
 10413  2480  0CA0               	rrf	??_getLoad_Safe,f
 10414  2481  0C20               	rrf	??_getLoad_Safe,w
 10415  2482  3901               	andlw	1
 10416  2483  0008               	return
 10417  2484                     __end_of_getLoad_Safe:	
 10418                           
 10419                           	psect	text47
 10420  23A5                     __ptext47:	
 10421 ;; *************** function _PowerFault_Initialization *****************
 10422 ;; Defined at:
 10423 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\PowerFault_B1.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;		None
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;		None
 10428 ;; Return value:  Size  Location     Type
 10429 ;;		None               void
 10430 ;; Registers used:
 10431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;Total ram usage:        0 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:    5
 10444 ;; This function calls:
 10445 ;;		_setPowerFault_Initialization
 10446 ;; This function is called by:
 10447 ;;		_main
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           
 10452                           ;psect for function _PowerFault_Initialization
 10453  23A5                     _PowerFault_Initialization:	
 10454                           
 10455                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
 10456                           
 10457                           ;incstack = 0
 10458                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 10459  23A5  31A5  2595         	fcall	_setPowerFault_Initialization
 10460  23A7  0008               	return
 10461  23A8                     __end_of_PowerFault_Initialization:	
 10462                           
 10463                           	psect	text48
 10464  2595                     __ptext48:	
 10465 ;; *************** function _setPowerFault_Initialization *****************
 10466 ;; Defined at:
 10467 ;;		line 29 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\PowerFault_B1.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;		None
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;		None
 10472 ;; Return value:  Size  Location     Type
 10473 ;;		None               void
 10474 ;; Registers used:
 10475 ;;		wreg, fsr1l, fsr1h
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;Total ram usage:        1 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; Hardware stack levels required when called:    4
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_PowerFault_Initialization
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           
 10496                           ;psect for function _setPowerFault_Initialization
 10497  2595                     _setPowerFault_Initialization:	
 10498                           
 10499                           ;PowerFault_B1.c: 31: PF=&PF1;
 10500                           
 10501                           ;incstack = 0
 10502                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
 10503  2595  3066               	movlw	_PF1& (0+255)
 10504  2596  0020               	movlb	0	; select bank0
 10505  2597  00A0               	movwf	??_setPowerFault_Initialization
 10506  2598  0820               	movf	??_setPowerFault_Initialization,w
 10507  2599  00FB               	movwf	_PF
 10508                           
 10509                           ;PowerFault_B1.c: 32: PF->Enable=1;
 10510  259A  087B               	movf	_PF,w
 10511  259B  0086               	movwf	6
 10512  259C  3001               	movlw	1	; select bank2/3
 10513  259D  0087               	movwf	7
 10514  259E  1401               	bsf	1,0
 10515                           
 10516                           ;PowerFault_B1.c: 33: PF->Safe=1;
 10517  259F  087B               	movf	_PF,w
 10518  25A0  0086               	movwf	6
 10519  25A1  3001               	movlw	1	; select bank2/3
 10520  25A2  0087               	movwf	7
 10521  25A3  1501               	bsf	1,2
 10522  25A4  0008               	return
 10523  25A5                     __end_of_setPowerFault_Initialization:	
 10524                           
 10525                           	psect	text49
 10526  2695                     __ptext49:	
 10527 ;; *************** function _Mcu_Initialization *****************
 10528 ;; Defined at:
 10529 ;;		line 11 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\MCU_16f1518_B1.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;		None
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;		None
 10534 ;; Return value:  Size  Location     Type
 10535 ;;		None               void
 10536 ;; Registers used:
 10537 ;;		wreg, status,2, status,0, pclath, cstack
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10545 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10546 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;Total ram usage:        1 bytes
 10548 ;; Hardware stack levels used:    1
 10549 ;; Hardware stack levels required when called:    5
 10550 ;; This function calls:
 10551 ;;		_ADC_Set
 10552 ;;		_INT_Set
 10553 ;;		_IOC_Set
 10554 ;;		_IO_Set
 10555 ;;		_TMR0_Set
 10556 ;; This function is called by:
 10557 ;;		_main
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           
 10562                           ;psect for function _Mcu_Initialization
 10563  2695                     _Mcu_Initialization:	
 10564                           
 10565                           ;MCU_16f1518_B1.c: 14: OSCCON=0x78; ;;
 10566                           
 10567                           ;incstack = 0
 10568                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
 10569  2695  3078               	movlw	120
 10570  2696  0021               	movlb	1	; select bank1
 10571  2697  0099               	movwf	25	;volatile
 10572                           
 10573                           ;MCU_16f1518_B1.c: 16: IO_Set();
 10574  2698  3198  2066  31A6   	fcall	_IO_Set
 10575                           
 10576                           ;MCU_16f1518_B1.c: 18: TMR0_Set();
 10577  269B  31A4  24F1  31A6   	fcall	_TMR0_Set
 10578                           
 10579                           ;MCU_16f1518_B1.c: 20: ;;
 10580                           ;MCU_16f1518_B1.c: 22: ADC_Set();
 10581  269E  31A3  23E3  31A6   	fcall	_ADC_Set
 10582                           
 10583                           ;MCU_16f1518_B1.c: 26: INT_Set();
 10584  26A1  31A3  23C3  31A6   	fcall	_INT_Set
 10585                           
 10586                           ;MCU_16f1518_B1.c: 28: IOC_Set();
 10587  26A4  31A4  24E4         	fcall	_IOC_Set
 10588                           
 10589                           ;MCU_16f1518_B1.c: 30: ;;
 10590                           ;MCU_16f1518_B1.c: 32: ;;
 10591                           ;MCU_16f1518_B1.c: 34: Memory=&VarMemory;
 10592  26A6  3020               	movlw	_VarMemory& (0+255)
 10593  26A7  0020               	movlb	0	; select bank0
 10594  26A8  00A1               	movwf	??_Mcu_Initialization
 10595  26A9  0821               	movf	??_Mcu_Initialization,w
 10596  26AA  0021               	movlb	1	; select bank1
 10597  26AB  00E8               	movwf	_Memory^(0+128)
 10598  26AC  0008               	return
 10599  26AD                     __end_of_Mcu_Initialization:	
 10600                           
 10601                           	psect	text50
 10602  24F1                     __ptext50:	
 10603 ;; *************** function _TMR0_Set *****************
 10604 ;; Defined at:
 10605 ;;		line 73 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\MCU_16f1518_B1.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;		None               void
 10612 ;; Registers used:
 10613 ;;		wreg, status,2
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;Total ram usage:        1 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    4
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		_Mcu_Initialization
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           
 10634                           ;psect for function _TMR0_Set
 10635  24F1                     _TMR0_Set:	
 10636                           
 10637                           ;MCU_16f1518_B1.c: 75: Timer0=&VarTimer0;
 10638                           
 10639                           ;incstack = 0
 10640                           ; Regs used in _TMR0_Set: [wreg+status,2]
 10641  24F1  30C4               	movlw	_VarTimer0& (0+255)
 10642  24F2  0020               	movlb	0	; select bank0
 10643  24F3  00A0               	movwf	??_TMR0_Set
 10644  24F4  0820               	movf	??_TMR0_Set,w
 10645  24F5  0021               	movlb	1	; select bank1
 10646  24F6  00EA               	movwf	_Timer0^(0+128)
 10647                           
 10648                           ;MCU_16f1518_B1.c: 76: OPTION_REG=0x00;
 10649  24F7  0195               	clrf	21	;volatile
 10650                           
 10651                           ;MCU_16f1518_B1.c: 77: TMR0=(256-90);
 10652  24F8  30A6               	movlw	166
 10653  24F9  0020               	movlb	0	; select bank0
 10654  24FA  0095               	movwf	21	;volatile
 10655                           
 10656                           ;MCU_16f1518_B1.c: 78: TMR0IE=1;
 10657  24FB  168B               	bsf	11,5	;volatile
 10658                           
 10659                           ;MCU_16f1518_B1.c: 79: GIE=1;
 10660  24FC  178B               	bsf	11,7	;volatile
 10661  24FD  0008               	return
 10662  24FE                     __end_of_TMR0_Set:	
 10663                           
 10664                           	psect	text51
 10665  1866                     __ptext51:	
 10666 ;; *************** function _IO_Set *****************
 10667 ;; Defined at:
 10668 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\MCU_16f1518_B1.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;		None
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;		None
 10673 ;; Return value:  Size  Location     Type
 10674 ;;		None               void
 10675 ;; Registers used:
 10676 ;;		wreg, status,2
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;Total ram usage:        0 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; Hardware stack levels required when called:    4
 10689 ;; This function calls:
 10690 ;;		Nothing
 10691 ;; This function is called by:
 10692 ;;		_Mcu_Initialization
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           
 10697                           ;psect for function _IO_Set
 10698  1866                     _IO_Set:	
 10699                           
 10700                           ;MCU_16f1518_B1.c: 39: TRISA=0b01110111;;
 10701                           
 10702                           ;incstack = 0
 10703                           ; Regs used in _IO_Set: [wreg+status,2]
 10704  1866  3077               	movlw	119
 10705  1867  0021               	movlb	1	; select bank1
 10706  1868  008C               	movwf	12	;volatile
 10707                           
 10708                           ;MCU_16f1518_B1.c: 40: TRISB=0b00000111;;
 10709  1869  3007               	movlw	7
 10710  186A  008D               	movwf	13	;volatile
 10711                           
 10712                           ;MCU_16f1518_B1.c: 41: TRISC=0b00001100;;
 10713  186B  300C               	movlw	12
 10714  186C  008E               	movwf	14	;volatile
 10715                           
 10716                           ;MCU_16f1518_B1.c: 42: LATA=0b00000000;;
 10717  186D  0022               	movlb	2	; select bank2
 10718  186E  018C               	clrf	12	;volatile
 10719                           
 10720                           ;MCU_16f1518_B1.c: 43: LATB=0b00000010;;
 10721  186F  3002               	movlw	2
 10722  1870  008D               	movwf	13	;volatile
 10723                           
 10724                           ;MCU_16f1518_B1.c: 44: LATC=0b00000000;;
 10725  1871  018E               	clrf	14	;volatile
 10726                           
 10727                           ;MCU_16f1518_B1.c: 45: ANSELA=0b00100010;;
 10728  1872  3022               	movlw	34
 10729  1873  0023               	movlb	3	; select bank3
 10730  1874  008C               	movwf	12	;volatile
 10731                           
 10732                           ;MCU_16f1518_B1.c: 46: ANSELB=0b00000000;;
 10733  1875  018D               	clrf	13	;volatile
 10734                           
 10735                           ;MCU_16f1518_B1.c: 47: ANSELC=0b00000000;;
 10736  1876  018E               	clrf	14	;volatile
 10737                           
 10738                           ;MCU_16f1518_B1.c: 48: PORTA=0b01110111;;
 10739  1877  3077               	movlw	119
 10740  1878  0020               	movlb	0	; select bank0
 10741  1879  008C               	movwf	12	;volatile
 10742                           
 10743                           ;MCU_16f1518_B1.c: 49: PORTB=0b00000111;;
 10744  187A  3007               	movlw	7
 10745  187B  008D               	movwf	13	;volatile
 10746                           
 10747                           ;MCU_16f1518_B1.c: 50: PORTC=0b00001100;;
 10748  187C  300C               	movlw	12
 10749  187D  008E               	movwf	14	;volatile
 10750  187E  0008               	return
 10751  187F                     __end_of_IO_Set:	
 10752                           
 10753                           	psect	text52
 10754  24E4                     __ptext52:	
 10755 ;; *************** function _IOC_Set *****************
 10756 ;; Defined at:
 10757 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;		None
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;		None
 10762 ;; Return value:  Size  Location     Type
 10763 ;;		None               void
 10764 ;; Registers used:
 10765 ;;		wreg, status,2
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;Total ram usage:        0 bytes
 10776 ;; Hardware stack levels used:    1
 10777 ;; Hardware stack levels required when called:    4
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		_Mcu_Initialization
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           
 10786                           ;psect for function _IOC_Set
 10787  24E4                     _IOC_Set:	
 10788                           
 10789                           ;MCU_16f1518_B1.c: 248: WPUB2=0;
 10790                           
 10791                           ;incstack = 0
 10792                           ; Regs used in _IOC_Set: [wreg+status,2]
 10793  24E4  0024               	movlb	4	; select bank4
 10794  24E5  110D               	bcf	13,2	;volatile
 10795                           
 10796                           ;MCU_16f1518_B1.c: 250: IOCBP=0b00000100;
 10797  24E6  3004               	movlw	4
 10798  24E7  0027               	movlb	7	; select bank7
 10799  24E8  0094               	movwf	20	;volatile
 10800                           
 10801                           ;MCU_16f1518_B1.c: 251: IOCBN=0b00000100;
 10802  24E9  3004               	movlw	4
 10803  24EA  0095               	movwf	21	;volatile
 10804                           
 10805                           ;MCU_16f1518_B1.c: 259: IOCBF=0b00000000;
 10806  24EB  0196               	clrf	22	;volatile
 10807                           
 10808                           ;MCU_16f1518_B1.c: 261: IOCIE=1;
 10809  24EC  158B               	bsf	11,3	;volatile
 10810                           
 10811                           ;MCU_16f1518_B1.c: 262: IOCIF=0;
 10812  24ED  100B               	bcf	11,0	;volatile
 10813                           
 10814                           ;MCU_16f1518_B1.c: 263: PEIE=1;
 10815  24EE  170B               	bsf	11,6	;volatile
 10816                           
 10817                           ;MCU_16f1518_B1.c: 264: GIE=1;
 10818  24EF  178B               	bsf	11,7	;volatile
 10819  24F0  0008               	return
 10820  24F1                     __end_of_IOC_Set:	
 10821                           
 10822                           	psect	text53
 10823  23C3                     __ptext53:	
 10824 ;; *************** function _INT_Set *****************
 10825 ;; Defined at:
 10826 ;;		line 217 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;		None               void
 10833 ;; Registers used:
 10834 ;;		None
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    4
 10847 ;; This function calls:
 10848 ;;		Nothing
 10849 ;; This function is called by:
 10850 ;;		_Mcu_Initialization
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           
 10855                           ;psect for function _INT_Set
 10856  23C3                     _INT_Set:	
 10857                           
 10858                           ;MCU_16f1518_B1.c: 219: WPUB0=0;
 10859                           
 10860                           ;incstack = 0
 10861                           ; Regs used in _INT_Set: []
 10862  23C3  0024               	movlb	4	; select bank4
 10863  23C4  100D               	bcf	13,0	;volatile
 10864                           
 10865                           ;MCU_16f1518_B1.c: 220: INTE=1;
 10866  23C5  160B               	bsf	11,4	;volatile
 10867                           
 10868                           ;MCU_16f1518_B1.c: 221: PEIE=1;
 10869  23C6  170B               	bsf	11,6	;volatile
 10870                           
 10871                           ;MCU_16f1518_B1.c: 222: GIE=1;
 10872  23C7  178B               	bsf	11,7	;volatile
 10873  23C8  0008               	return
 10874  23C9                     __end_of_INT_Set:	
 10875                           
 10876                           	psect	text54
 10877  23E3                     __ptext54:	
 10878 ;; *************** function _ADC_Set *****************
 10879 ;; Defined at:
 10880 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;		None
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;		None
 10885 ;; Return value:  Size  Location     Type
 10886 ;;		None               void
 10887 ;; Registers used:
 10888 ;;		wreg
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;Total ram usage:        0 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    4
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_Mcu_Initialization
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           
 10909                           ;psect for function _ADC_Set
 10910  23E3                     _ADC_Set:	
 10911                           
 10912                           ;MCU_16f1518_B1.c: 305: ADCON1=0xf2;
 10913                           
 10914                           ;incstack = 0
 10915                           ; Regs used in _ADC_Set: [wreg]
 10916  23E3  30F2               	movlw	242
 10917  23E4  0021               	movlb	1	; select bank1
 10918  23E5  009E               	movwf	30	;volatile
 10919                           
 10920                           ;MCU_16f1518_B1.c: 306: FVRCON=0xc0;
 10921  23E6  30C0               	movlw	192
 10922  23E7  0022               	movlb	2	; select bank2
 10923  23E8  0097               	movwf	23	;volatile
 10924  23E9  0008               	return
 10925  23EA                     __end_of_ADC_Set:	
 10926                           
 10927                           	psect	text55
 10928  246E                     __ptext55:	
 10929 ;; *************** function _MainT_Initialization *****************
 10930 ;; Defined at:
 10931 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\main.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;		None
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;		None
 10936 ;; Return value:  Size  Location     Type
 10937 ;;		None               void
 10938 ;; Registers used:
 10939 ;;		wreg
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;Total ram usage:        1 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:    4
 10952 ;; This function calls:
 10953 ;;		Nothing
 10954 ;; This function is called by:
 10955 ;;		_main
 10956 ;; This function uses a non-reentrant model
 10957 ;;
 10958                           
 10959                           
 10960                           ;psect for function _MainT_Initialization
 10961  246E                     _MainT_Initialization:	
 10962                           
 10963                           ;main.c: 95: Product=&VarProduct;
 10964                           
 10965                           ;incstack = 0
 10966                           ; Regs used in _MainT_Initialization: [wreg]
 10967  246E  30A0               	movlw	_VarProduct& (0+255)
 10968  246F  0020               	movlb	0	; select bank0
 10969  2470  00A0               	movwf	??_MainT_Initialization
 10970  2471  0820               	movf	??_MainT_Initialization,w
 10971  2472  00EF               	movwf	_Product
 10972                           
 10973                           ;main.c: 98: TMain=&VarTMain;
 10974  2473  30C0               	movlw	_VarTMain& (0+255)
 10975  2474  00A0               	movwf	??_MainT_Initialization
 10976  2475  0820               	movf	??_MainT_Initialization,w
 10977  2476  0021               	movlb	1	; select bank1
 10978  2477  00E9               	movwf	_TMain^(0+128)
 10979  2478  0008               	return
 10980  2479                     __end_of_MainT_Initialization:	
 10981                           
 10982                           	psect	text56
 10983  143E                     __ptext56:	
 10984 ;; *************** function _MainT *****************
 10985 ;; Defined at:
 10986 ;;		line 103 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\main.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;		None
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;		None               void
 10993 ;; Registers used:
 10994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;Total ram usage:        0 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    6
 11007 ;; This function calls:
 11008 ;;		_setBuz
 11009 ;;		_setLoad_Enable
 11010 ;;		_setRF_Enable
 11011 ;;		_setSw_Enable
 11012 ;;		_setTemp_Enable
 11013 ;; This function is called by:
 11014 ;;		_main
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           
 11019                           ;psect for function _MainT
 11020  143E                     _MainT:	
 11021                           
 11022                           ;main.c: 106: if(!TMain->PowerON)
 11023                           
 11024                           ;incstack = 0
 11025                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11026  143E  0021               	movlb	1	; select bank1
 11027  143F  0869               	movf	_TMain^(0+128),w
 11028  1440  0086               	movwf	6
 11029  1441  3001               	movlw	1	; select bank2/3
 11030  1442  0087               	movwf	7
 11031  1443  1801               	btfsc	1,0
 11032  1444  2C89               	goto	l9882
 11033                           
 11034                           ;main.c: 107: {
 11035                           ;main.c: 108: TMain->PowerCount++;
 11036  1445  0A69               	incf	_TMain^(0+128),w
 11037  1446  0086               	movwf	6
 11038  1447  3001               	movlw	1	; select bank2/3
 11039  1448  0087               	movwf	7
 11040  1449  3001               	movlw	1
 11041  144A  0781               	addwf	1,f
 11042  144B  3141               	addfsr 1,1
 11043  144C  1803               	skipnc
 11044  144D  0A81               	incf	1,f
 11045                           
 11046                           ;main.c: 109: if(TMain->PowerCount == 150)
 11047  144E  0A69               	incf	_TMain^(0+128),w
 11048  144F  0086               	movwf	6
 11049  1450  3001               	movlw	1	; select bank2/3
 11050  1451  0087               	movwf	7
 11051  1452  3F40               	moviw [0]fsr1
 11052  1453  3A96               	xorlw	150
 11053  1454  1D03               	skipz
 11054  1455  2C58               	goto	u9985
 11055  1456  3F41               	moviw [1]fsr1
 11056  1457  3A00               	xorlw	0
 11057  1458                     u9985:	
 11058  1458  1D03               	skipz
 11059  1459  0008               	return
 11060                           
 11061                           ;main.c: 110: {
 11062                           ;main.c: 111: TMain->PowerCount=0;
 11063  145A  0A69               	incf	_TMain^(0+128),w
 11064  145B  0086               	movwf	6
 11065  145C  3001               	movlw	1	; select bank2/3
 11066  145D  0087               	movwf	7
 11067  145E  3000               	movlw	0
 11068  145F  3FC0               	movwi [0]fsr1
 11069  1460  3FC1               	movwi [1]fsr1
 11070                           
 11071                           ;main.c: 112: TMain->PowerON=1;
 11072  1461  0869               	movf	_TMain^(0+128),w
 11073  1462  0086               	movwf	6
 11074  1463  3001               	movlw	1	; select bank2/3
 11075  1464  0087               	movwf	7
 11076  1465  1401               	bsf	1,0
 11077                           
 11078                           ;main.c: 115: setTemp_Enable(1);
 11079  1466  3001               	movlw	1
 11080  1467  31A4  2463  3194   	fcall	_setTemp_Enable
 11081                           
 11082                           ;main.c: 119: setLoad_Enable(1);
 11083  146A  3001               	movlw	1
 11084  146B  31A5  2585  3194   	fcall	_setLoad_Enable
 11085                           
 11086                           ;main.c: 125: setBuz(3,50);
 11087  146E  3032               	movlw	50
 11088  146F  0020               	movlb	0	; select bank0
 11089  1470  00A6               	movwf	setBuz@time
 11090  1471  3000               	movlw	0
 11091  1472  00A7               	movwf	setBuz@time+1
 11092  1473  3003               	movlw	3
 11093  1474  3193  23C7  3194   	fcall	_setBuz
 11094                           
 11095                           ;main.c: 126: TMain->SelfTest=1;
 11096  1477  0021               	movlb	1	; select bank1
 11097  1478  0869               	movf	_TMain^(0+128),w
 11098  1479  3E03               	addlw	3
 11099  147A  0086               	movwf	6
 11100  147B  3001               	movlw	1	; select bank2/3
 11101  147C  0087               	movwf	7
 11102  147D  1401               	bsf	1,0
 11103                           
 11104                           ;main.c: 128: setSw_Enable(1);
 11105  147E  3001               	movlw	1
 11106  147F  31A7  2748  3194   	fcall	_setSw_Enable
 11107                           
 11108                           ;main.c: 131: setRF_Enable(1,1);
 11109  1482  0020               	movlb	0	; select bank0
 11110  1483  01A2               	clrf	setRF_Enable@command
 11111  1484  0AA2               	incf	setRF_Enable@command,f
 11112  1485  3001               	movlw	1
 11113  1486  3199  21A8         	fcall	_setRF_Enable
 11114                           
 11115                           ;main.c: 135: }
 11116                           ;main.c: 136: }
 11117  1488  0008               	return
 11118  1489                     l9882:	
 11119                           
 11120                           ;main.c: 137: else
 11121                           ;main.c: 138: {
 11122                           ;main.c: 146: TMain->Count1++;
 11123  1489  0021               	movlb	1	; select bank1
 11124  148A  0869               	movf	_TMain^(0+128),w
 11125  148B  3E06               	addlw	6
 11126  148C  0086               	movwf	6
 11127  148D  3001               	movlw	1	; select bank2/3
 11128  148E  0087               	movwf	7
 11129  148F  3001               	movlw	1
 11130  1490  0781               	addwf	1,f
 11131  1491  3141               	addfsr 1,1
 11132  1492  1803               	skipnc
 11133  1493  0A81               	incf	1,f
 11134                           
 11135                           ;main.c: 147: if(TMain->Count1 == 100)
 11136  1494  0869               	movf	_TMain^(0+128),w
 11137  1495  3E06               	addlw	6
 11138  1496  0086               	movwf	6
 11139  1497  3001               	movlw	1	; select bank2/3
 11140  1498  0087               	movwf	7
 11141  1499  3F40               	moviw [0]fsr1
 11142  149A  3A64               	xorlw	100
 11143  149B  1D03               	skipz
 11144  149C  2C9F               	goto	u9995
 11145  149D  3F41               	moviw [1]fsr1
 11146  149E  3A00               	xorlw	0
 11147  149F                     u9995:	
 11148  149F  1D03               	skipz
 11149  14A0  0008               	return
 11150                           
 11151                           ;main.c: 148: {
 11152                           ;main.c: 149: TMain->Count1=0;
 11153  14A1  0869               	movf	_TMain^(0+128),w
 11154  14A2  3E06               	addlw	6
 11155  14A3  0086               	movwf	6
 11156  14A4  3001               	movlw	1	; select bank2/3
 11157  14A5  0087               	movwf	7
 11158  14A6  3000               	movlw	0
 11159  14A7  3FC0               	movwi [0]fsr1
 11160  14A8  3FC1               	movwi [1]fsr1
 11161                           
 11162                           ;main.c: 160: if(TMain->Flag)
 11163  14A9  0869               	movf	_TMain^(0+128),w
 11164  14AA  0086               	movwf	6
 11165  14AB  3001               	movlw	1	; select bank2/3
 11166  14AC  0087               	movwf	7
 11167  14AD  1981               	btfsc	1,3
 11168  14AE  0008               	return
 11169                           
 11170                           ;main.c: 170: else
 11171                           ;main.c: 171: {
 11172                           ;main.c: 172: TMain->Flag=1;
 11173                           
 11174                           ;main.c: 161: {
 11175                           ;main.c: 169: }
 11176  14AF  0869               	movf	_TMain^(0+128),w
 11177  14B0  0086               	movwf	6
 11178  14B1  3001               	movlw	1	; select bank2/3
 11179  14B2  0087               	movwf	7
 11180  14B3  1581               	bsf	1,3
 11181  14B4  0008               	return
 11182  14B5                     __end_of_MainT:	
 11183                           
 11184                           	psect	text57
 11185  2463                     __ptext57:	
 11186 ;; *************** function _setTemp_Enable *****************
 11187 ;; Defined at:
 11188 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverTemperature_B1.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  command         1    wreg     unsigned char 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  command         1    0[BANK0 ] unsigned char 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;		None               void
 11195 ;; Registers used:
 11196 ;;		wreg, fsr1l, fsr1h
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;Total ram usage:        1 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:    4
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_MainT
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           
 11217                           ;psect for function _setTemp_Enable
 11218  2463                     _setTemp_Enable:	
 11219                           
 11220                           ;incstack = 0
 11221                           ; Regs used in _setTemp_Enable: [wregfsr1]
 11222                           ;setTemp_Enable@command stored from wreg
 11223  2463  0020               	movlb	0	; select bank0
 11224  2464  00A0               	movwf	setTemp_Enable@command
 11225                           
 11226                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
 11227  2465  087D               	movf	_Temp,w
 11228  2466  0086               	movwf	6
 11229  2467  3001               	movlw	1	; select bank2/3
 11230  2468  0087               	movwf	7
 11231  2469  0820               	movf	setTemp_Enable@command,w
 11232  246A  1001               	bcf	1,0
 11233  246B  1D03               	skipz
 11234  246C  1401               	bsf	1,0
 11235  246D  0008               	return
 11236  246E                     __end_of_setTemp_Enable:	
 11237                           
 11238                           	psect	text58
 11239  2585                     __ptext58:	
 11240 ;; *************** function _setLoad_Enable *****************
 11241 ;; Defined at:
 11242 ;;		line 257 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;  command         1    wreg     unsigned char 
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;  command         1    0[BANK0 ] unsigned char 
 11247 ;; Return value:  Size  Location     Type
 11248 ;;		None               void
 11249 ;; Registers used:
 11250 ;;		wreg, fsr1l, fsr1h
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;Total ram usage:        1 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; Hardware stack levels required when called:    4
 11263 ;; This function calls:
 11264 ;;		Nothing
 11265 ;; This function is called by:
 11266 ;;		_MainT
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           
 11271                           ;psect for function _setLoad_Enable
 11272  2585                     _setLoad_Enable:	
 11273                           
 11274                           ;incstack = 0
 11275                           ; Regs used in _setLoad_Enable: [wregfsr1]
 11276                           ;setLoad_Enable@command stored from wreg
 11277  2585  0020               	movlb	0	; select bank0
 11278  2586  00A0               	movwf	setLoad_Enable@command
 11279                           
 11280                           ;OverLoad_B1.c: 259: Load->Enable=command;
 11281  2587  086E               	movf	_Load,w
 11282  2588  0086               	movwf	6
 11283  2589  3002               	movlw	2	; select bank4/5
 11284  258A  0087               	movwf	7
 11285  258B  0820               	movf	setLoad_Enable@command,w
 11286  258C  1001               	bcf	1,0
 11287  258D  1D03               	skipz
 11288  258E  1401               	bsf	1,0
 11289                           
 11290                           ;OverLoad_B1.c: 260: Load->GO=0;
 11291  258F  086E               	movf	_Load,w
 11292  2590  0086               	movwf	6
 11293  2591  3002               	movlw	2	; select bank4/5
 11294  2592  0087               	movwf	7
 11295  2593  1081               	bcf	1,1
 11296  2594  0008               	return
 11297  2595                     __end_of_setLoad_Enable:	
 11298                           
 11299                           	psect	text59
 11300  03A4                     __ptext59:	
 11301 ;; *************** function _Load_Main *****************
 11302 ;; Defined at:
 11303 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverLoad_B1.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;		None
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;  i               1   17[BANK0 ] unsigned char 
 11308 ;; Return value:  Size  Location     Type
 11309 ;;		None               void
 11310 ;; Registers used:
 11311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11319 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;Total ram usage:        5 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:    9
 11324 ;; This function calls:
 11325 ;;		___lwdiv
 11326 ;;		___wmul
 11327 ;;		_getPF_Safe
 11328 ;;		_getTemp_Safe
 11329 ;;		_setDimmerLights_Clear
 11330 ;;		_setLoad_AH_AL_Restore
 11331 ;;		_setLoad_Exceptions
 11332 ;; This function is called by:
 11333 ;;		_main
 11334 ;; This function uses a non-reentrant model
 11335 ;;
 11336                           
 11337                           
 11338                           ;psect for function _Load_Main
 11339  03A4                     _Load_Main:	
 11340                           
 11341                           ;OverLoad_B1.c: 47: char i;
 11342                           ;OverLoad_B1.c: 48: if(Load->ERROR)
 11343                           
 11344                           ;incstack = 0
 11345                           ; Regs used in _Load_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11346  03A4  0020               	movlb	0	; select bank0
 11347  03A5  086E               	movf	_Load,w
 11348  03A6  0086               	movwf	6
 11349  03A7  3002               	movlw	2	; select bank4/5
 11350  03A8  0087               	movwf	7
 11351  03A9  1E81               	btfss	1,5
 11352  03AA  2BD1               	goto	l9918
 11353                           
 11354                           ;OverLoad_B1.c: 49: {
 11355                           ;OverLoad_B1.c: 50: Load->ErrorTime++;
 11356  03AB  086E               	movf	_Load,w
 11357  03AC  3E03               	addlw	3
 11358  03AD  0086               	movwf	6
 11359  03AE  3002               	movlw	2	; select bank4/5
 11360  03AF  0087               	movwf	7
 11361  03B0  3001               	movlw	1
 11362  03B1  0781               	addwf	1,f
 11363  03B2  3141               	addfsr 1,1
 11364  03B3  1803               	skipnc
 11365  03B4  0A81               	incf	1,f
 11366                           
 11367                           ;OverLoad_B1.c: 51: if(Load->ErrorTime >= 1000)
 11368  03B5  086E               	movf	_Load,w
 11369  03B6  3E03               	addlw	3
 11370  03B7  0086               	movwf	6
 11371  03B8  3002               	movlw	2	; select bank4/5
 11372  03B9  0087               	movwf	7
 11373  03BA  3F40               	moviw [0]fsr1
 11374  03BB  00AD               	movwf	??_Load_Main
 11375  03BC  3F41               	moviw [1]fsr1
 11376  03BD  00AE               	movwf	??_Load_Main+1
 11377  03BE  3003               	movlw	3
 11378  03BF  022E               	subwf	??_Load_Main+1,w
 11379  03C0  30E8               	movlw	232
 11380  03C1  1903               	skipnz
 11381  03C2  022D               	subwf	??_Load_Main,w
 11382  03C3  1C03               	skipc
 11383  03C4  0008               	return
 11384                           
 11385                           ;OverLoad_B1.c: 52: {
 11386                           ;OverLoad_B1.c: 53: Load->ErrorTime=0;
 11387  03C5  086E               	movf	_Load,w
 11388  03C6  3E03               	addlw	3
 11389  03C7  0086               	movwf	6
 11390  03C8  3002               	movlw	2	; select bank4/5
 11391  03C9  0087               	movwf	7
 11392  03CA  3000               	movlw	0
 11393  03CB  3FC0               	movwi [0]fsr1
 11394  03CC  3FC1               	movwi [1]fsr1
 11395                           
 11396                           ;OverLoad_B1.c: 54: setLoad_Exceptions(0);
 11397  03CD  3000               	movlw	0
 11398  03CE  319C  24F6         	fcall	_setLoad_Exceptions
 11399                           
 11400                           ;OverLoad_B1.c: 55: }
 11401                           ;OverLoad_B1.c: 56: }
 11402  03D0  0008               	return
 11403  03D1                     l9918:	
 11404                           
 11405                           ;OverLoad_B1.c: 57: else
 11406                           ;OverLoad_B1.c: 58: {
 11407                           ;OverLoad_B1.c: 59: if(Load->ADtoGO)
 11408  03D1  0020               	movlb	0	; select bank0
 11409  03D2  086E               	movf	_Load,w
 11410  03D3  0086               	movwf	6
 11411  03D4  3002               	movlw	2	; select bank4/5
 11412  03D5  0087               	movwf	7
 11413  03D6  1E01               	btfss	1,4
 11414  03D7  2DD7               	goto	l10000
 11415                           
 11416                           ;OverLoad_B1.c: 60: {
 11417                           ;OverLoad_B1.c: 61: Load->Time++;
 11418  03D8  0A6E               	incf	_Load,w
 11419  03D9  0086               	movwf	6
 11420  03DA  3002               	movlw	2	; select bank4/5
 11421  03DB  0087               	movwf	7
 11422  03DC  3001               	movlw	1
 11423  03DD  0781               	addwf	1,f
 11424  03DE  3141               	addfsr 1,1
 11425  03DF  1803               	skipnc
 11426  03E0  0A81               	incf	1,f
 11427                           
 11428                           ;OverLoad_B1.c: 62: if(Load->Time >= 5)
 11429  03E1  0A6E               	incf	_Load,w
 11430  03E2  0086               	movwf	6
 11431  03E3  3002               	movlw	2	; select bank4/5
 11432  03E4  0087               	movwf	7
 11433  03E5  3F40               	moviw [0]fsr1
 11434  03E6  00AD               	movwf	??_Load_Main
 11435  03E7  3F41               	moviw [1]fsr1
 11436  03E8  00AE               	movwf	??_Load_Main+1
 11437  03E9  3000               	movlw	0
 11438  03EA  022E               	subwf	??_Load_Main+1,w
 11439  03EB  3005               	movlw	5
 11440  03EC  1903               	skipnz
 11441  03ED  022D               	subwf	??_Load_Main,w
 11442  03EE  1C03               	skipc
 11443  03EF  0008               	return
 11444                           
 11445                           ;OverLoad_B1.c: 63: {
 11446                           ;OverLoad_B1.c: 64: Load->Time=0;
 11447  03F0  0A6E               	incf	_Load,w
 11448  03F1  0086               	movwf	6
 11449  03F2  3002               	movlw	2	; select bank4/5
 11450  03F3  0087               	movwf	7
 11451  03F4  3000               	movlw	0
 11452  03F5  3FC0               	movwi [0]fsr1
 11453  03F6  3FC1               	movwi [1]fsr1
 11454                           
 11455                           ;OverLoad_B1.c: 65: Load->ADtoGO=0;
 11456  03F7  086E               	movf	_Load,w
 11457  03F8  0086               	movwf	6
 11458  03F9  3002               	movlw	2	; select bank4/5
 11459  03FA  0087               	movwf	7
 11460  03FB  1201               	bcf	1,4
 11461                           
 11462                           ;OverLoad_B1.c: 66: Load->LightsCount=Load->Lights1Status+Load->Lights2Status+Load->Ligh
      +                          ts3Status;
 11463  03FC  086E               	movf	_Load,w
 11464  03FD  3E45               	addlw	69
 11465  03FE  0086               	movwf	6
 11466  03FF  3002               	movlw	2	; select bank4/5
 11467  0400  0087               	movwf	7
 11468  0401  086E               	movf	_Load,w
 11469  0402  3E44               	addlw	68
 11470  0403  0084               	movwf	4
 11471  0404  3002               	movlw	2	; select bank4/5
 11472  0405  0085               	movwf	5
 11473  0406  0800               	movf	0,w
 11474  0407  00AD               	movwf	??_Load_Main
 11475  0408  086E               	movf	_Load,w
 11476  0409  3E43               	addlw	67
 11477  040A  0084               	movwf	4
 11478  040B  3002               	movlw	2	; select bank4/5
 11479  040C  0085               	movwf	5
 11480  040D  0800               	movf	0,w
 11481  040E  072D               	addwf	??_Load_Main,w
 11482  040F  0701               	addwf	1,w
 11483  0410  00AE               	movwf	??_Load_Main+1
 11484  0411  086E               	movf	_Load,w
 11485  0412  3E3E               	addlw	62
 11486  0413  0086               	movwf	6
 11487  0414  3002               	movlw	2	; select bank4/5
 11488  0415  0087               	movwf	7
 11489  0416  082E               	movf	??_Load_Main+1,w
 11490  0417  0081               	movwf	1
 11491                           
 11492                           ;OverLoad_B1.c: 67: for(i=1 ; i<4 ; i++)
 11493  0418  01B1               	clrf	Load_Main@i
 11494  0419  0AB1               	incf	Load_Main@i,f
 11495  041A  3004               	movlw	4
 11496  041B  0231               	subwf	Load_Main@i,w
 11497  041C  1803               	btfsc	3,0
 11498  041D  2C4C               	goto	l9940
 11499  041E                     l9934:	
 11500                           
 11501                           ;OverLoad_B1.c: 68: {
 11502                           ;OverLoad_B1.c: 69: Load->ADH+=Load->AH[i];
 11503  041E  3531               	lslf	Load_Main@i,w
 11504  041F  3E08               	addlw	8
 11505  0420  076E               	addwf	_Load,w
 11506  0421  00AD               	movwf	??_Load_Main
 11507  0422  082D               	movf	??_Load_Main,w
 11508  0423  0086               	movwf	6
 11509  0424  3002               	movlw	2	; select bank4/5
 11510  0425  0087               	movwf	7
 11511  0426  086E               	movf	_Load,w
 11512  0427  3E2E               	addlw	46
 11513  0428  0084               	movwf	4
 11514  0429  3002               	movlw	2	; select bank4/5
 11515  042A  0085               	movwf	5
 11516  042B  3F40               	moviw [0]fsr1
 11517  042C  0780               	addwf	0,f
 11518  042D  3101               	addfsr 0,1
 11519  042E  3F41               	moviw [1]fsr1
 11520  042F  3D80               	addwfc	0,f
 11521  0430  313F               	addfsr 0,-1
 11522                           
 11523                           ;OverLoad_B1.c: 70: Load->ADL+=Load->AL[i];
 11524  0431  3531               	lslf	Load_Main@i,w
 11525  0432  3E1A               	addlw	26
 11526  0433  076E               	addwf	_Load,w
 11527  0434  00AD               	movwf	??_Load_Main
 11528  0435  082D               	movf	??_Load_Main,w
 11529  0436  0086               	movwf	6
 11530  0437  3002               	movlw	2	; select bank4/5
 11531  0438  0087               	movwf	7
 11532  0439  086E               	movf	_Load,w
 11533  043A  3E30               	addlw	48
 11534  043B  0084               	movwf	4
 11535  043C  3002               	movlw	2	; select bank4/5
 11536  043D  0085               	movwf	5
 11537  043E  3F40               	moviw [0]fsr1
 11538  043F  0780               	addwf	0,f
 11539  0440  3101               	addfsr 0,1
 11540  0441  3F41               	moviw [1]fsr1
 11541  0442  3D80               	addwfc	0,f
 11542  0443  313F               	addfsr 0,-1
 11543  0444  3001               	movlw	1
 11544  0445  00AD               	movwf	??_Load_Main
 11545  0446  082D               	movf	??_Load_Main,w
 11546  0447  07B1               	addwf	Load_Main@i,f
 11547  0448  3004               	movlw	4
 11548  0449  0231               	subwf	Load_Main@i,w
 11549  044A  1C03               	skipc
 11550  044B  2C1E               	goto	l9934
 11551  044C                     l9940:	
 11552                           
 11553                           ;OverLoad_B1.c: 71: }
 11554                           ;OverLoad_B1.c: 72: Load->ADH/=3;
 11555  044C  3003               	movlw	3
 11556  044D  00A0               	movwf	___lwdiv@divisor
 11557  044E  3000               	movlw	0
 11558  044F  00A1               	movwf	___lwdiv@divisor+1
 11559  0450  086E               	movf	_Load,w
 11560  0451  3E2E               	addlw	46
 11561  0452  0086               	movwf	6
 11562  0453  3002               	movlw	2	; select bank4/5
 11563  0454  0087               	movwf	7
 11564  0455  3F40               	moviw [0]fsr1
 11565  0456  00A2               	movwf	___lwdiv@dividend
 11566  0457  3F41               	moviw [1]fsr1
 11567  0458  00A3               	movwf	___lwdiv@dividend+1
 11568  0459  319B  2382  3183   	fcall	___lwdiv
 11569  045C  0020               	movlb	0	; select bank0
 11570  045D  086E               	movf	_Load,w
 11571  045E  3E2E               	addlw	46
 11572  045F  0086               	movwf	6
 11573  0460  3002               	movlw	2	; select bank4/5
 11574  0461  0087               	movwf	7
 11575  0462  0820               	movf	?___lwdiv,w
 11576  0463  3FC0               	movwi [0]fsr1
 11577  0464  0821               	movf	?___lwdiv+1,w
 11578  0465  3FC1               	movwi [1]fsr1
 11579                           
 11580                           ;OverLoad_B1.c: 73: Load->ADL/=3;
 11581  0466  3003               	movlw	3
 11582  0467  00A0               	movwf	___lwdiv@divisor
 11583  0468  3000               	movlw	0
 11584  0469  00A1               	movwf	___lwdiv@divisor+1
 11585  046A  086E               	movf	_Load,w
 11586  046B  3E30               	addlw	48
 11587  046C  0086               	movwf	6
 11588  046D  3002               	movlw	2	; select bank4/5
 11589  046E  0087               	movwf	7
 11590  046F  3F40               	moviw [0]fsr1
 11591  0470  00A2               	movwf	___lwdiv@dividend
 11592  0471  3F41               	moviw [1]fsr1
 11593  0472  00A3               	movwf	___lwdiv@dividend+1
 11594  0473  319B  2382  3183   	fcall	___lwdiv
 11595  0476  0020               	movlb	0	; select bank0
 11596  0477  086E               	movf	_Load,w
 11597  0478  3E30               	addlw	48
 11598  0479  0086               	movwf	6
 11599  047A  3002               	movlw	2	; select bank4/5
 11600  047B  0087               	movwf	7
 11601  047C  0820               	movf	?___lwdiv,w
 11602  047D  3FC0               	movwi [0]fsr1
 11603  047E  0821               	movf	?___lwdiv+1,w
 11604  047F  3FC1               	movwi [1]fsr1
 11605                           
 11606                           ;OverLoad_B1.c: 74: if(Load->ADH > Load->ADL)
 11607  0480  086E               	movf	_Load,w
 11608  0481  3E2E               	addlw	46
 11609  0482  0086               	movwf	6
 11610  0483  3002               	movlw	2	; select bank4/5
 11611  0484  0087               	movwf	7
 11612  0485  3F40               	moviw [0]fsr1
 11613  0486  00AD               	movwf	??_Load_Main
 11614  0487  3F41               	moviw [1]fsr1
 11615  0488  00AE               	movwf	??_Load_Main+1
 11616  0489  086E               	movf	_Load,w
 11617  048A  3E30               	addlw	48
 11618  048B  0086               	movwf	6
 11619  048C  3002               	movlw	2	; select bank4/5
 11620  048D  0087               	movwf	7
 11621  048E  3F40               	moviw [0]fsr1
 11622  048F  00AF               	movwf	??_Load_Main+2
 11623  0490  3F41               	moviw [1]fsr1
 11624  0491  00B0               	movwf	??_Load_Main+3
 11625  0492  082E               	movf	??_Load_Main+1,w
 11626  0493  0230               	subwf	??_Load_Main+3,w
 11627  0494  1D03               	skipz
 11628  0495  2C98               	goto	u10105
 11629  0496  082D               	movf	??_Load_Main,w
 11630  0497  022F               	subwf	??_Load_Main+2,w
 11631  0498                     u10105:	
 11632  0498  1803               	skipnc
 11633  0499  2DD4               	goto	l9998
 11634                           
 11635                           ;OverLoad_B1.c: 75: {
 11636                           ;OverLoad_B1.c: 76: Load->AD=(Load->ADH-Load->ADL);
 11637  049A  086E               	movf	_Load,w
 11638  049B  3E2E               	addlw	46
 11639  049C  0086               	movwf	6
 11640  049D  3002               	movlw	2	; select bank4/5
 11641  049E  0087               	movwf	7
 11642  049F  086E               	movf	_Load,w
 11643  04A0  3E30               	addlw	48
 11644  04A1  0084               	movwf	4
 11645  04A2  3002               	movlw	2	; select bank4/5
 11646  04A3  0085               	movwf	5
 11647  04A4  3F00               	moviw [0]fsr0
 11648  04A5  00AD               	movwf	??_Load_Main
 11649  04A6  3F01               	moviw [1]fsr0
 11650  04A7  00AE               	movwf	??_Load_Main+1
 11651  04A8  09AD               	comf	??_Load_Main,f
 11652  04A9  09AE               	comf	??_Load_Main+1,f
 11653  04AA  0AAD               	incf	??_Load_Main,f
 11654  04AB  1903               	skipnz
 11655  04AC  0AAE               	incf	??_Load_Main+1,f
 11656  04AD  3F40               	moviw [0]fsr1
 11657  04AE  072D               	addwf	??_Load_Main,w
 11658  04AF  00AF               	movwf	??_Load_Main+2
 11659  04B0  3F41               	moviw [1]fsr1
 11660  04B1  3D2E               	addwfc	??_Load_Main+1,w
 11661  04B2  00B0               	movwf	??_Load_Main+3
 11662  04B3  086E               	movf	_Load,w
 11663  04B4  3E2C               	addlw	44
 11664  04B5  0086               	movwf	6
 11665  04B6  3002               	movlw	2	; select bank4/5
 11666  04B7  0087               	movwf	7
 11667  04B8  082F               	movf	??_Load_Main+2,w
 11668  04B9  3FC0               	movwi [0]fsr1
 11669  04BA  0830               	movf	??_Load_Main+3,w
 11670  04BB  3FC1               	movwi [1]fsr1
 11671                           
 11672                           ;OverLoad_B1.c: 78: if(Load->Count < 2)
 11673  04BC  086E               	movf	_Load,w
 11674  04BD  3E3A               	addlw	58
 11675  04BE  0086               	movwf	6
 11676  04BF  3002               	movlw	2	; select bank4/5
 11677  04C0  0087               	movwf	7
 11678  04C1  3002               	movlw	2
 11679  04C2  0201               	subwf	1,w
 11680  04C3  1803               	skipnc
 11681  04C4  2D15               	goto	l9962
 11682                           
 11683                           ;OverLoad_B1.c: 79: {
 11684                           ;OverLoad_B1.c: 80: Load->Count++;
 11685  04C5  3001               	movlw	1
 11686  04C6  00AD               	movwf	??_Load_Main
 11687  04C7  086E               	movf	_Load,w
 11688  04C8  3E3A               	addlw	58
 11689  04C9  0086               	movwf	6
 11690  04CA  3002               	movlw	2	; select bank4/5
 11691  04CB  0087               	movwf	7
 11692  04CC  082D               	movf	??_Load_Main,w
 11693  04CD  0781               	addwf	1,f
 11694                           
 11695                           ;OverLoad_B1.c: 81: if(Load->Count == 1)
 11696  04CE  086E               	movf	_Load,w
 11697  04CF  3E3A               	addlw	58
 11698  04D0  0086               	movwf	6
 11699  04D1  3002               	movlw	2	; select bank4/5
 11700  04D2  0087               	movwf	7
 11701  04D3  0801               	movf	1,w
 11702  04D4  3A01               	xorlw	1
 11703  04D5  1D03               	skipz
 11704  04D6  2CE1               	goto	l9954
 11705                           
 11706                           ;OverLoad_B1.c: 82: {
 11707                           ;OverLoad_B1.c: 83: Load->JudgeValue=500;
 11708  04D7  086E               	movf	_Load,w
 11709  04D8  3E36               	addlw	54
 11710  04D9  0086               	movwf	6
 11711  04DA  3002               	movlw	2	; select bank4/5
 11712  04DB  0087               	movwf	7
 11713  04DC  30F4               	movlw	244
 11714  04DD  3FC0               	movwi [0]fsr1
 11715  04DE  3001               	movlw	1
 11716  04DF  3FC1               	movwi [1]fsr1
 11717                           
 11718                           ;OverLoad_B1.c: 84: }
 11719  04E0  2D15               	goto	l9962
 11720  04E1                     l9954:	
 11721                           
 11722                           ;OverLoad_B1.c: 85: else if(Load->Count == 2)
 11723  04E1  086E               	movf	_Load,w
 11724  04E2  3E3A               	addlw	58
 11725  04E3  0086               	movwf	6
 11726  04E4  3002               	movlw	2	; select bank4/5
 11727  04E5  0087               	movwf	7
 11728  04E6  0801               	movf	1,w
 11729  04E7  3A02               	xorlw	2
 11730  04E8  1D03               	skipz
 11731  04E9  2D15               	goto	l9962
 11732                           
 11733                           ;OverLoad_B1.c: 86: {
 11734                           ;OverLoad_B1.c: 87: if(Load->LightsCount == 1)
 11735  04EA  086E               	movf	_Load,w
 11736  04EB  3E3E               	addlw	62
 11737  04EC  0086               	movwf	6
 11738  04ED  3002               	movlw	2	; select bank4/5
 11739  04EE  0087               	movwf	7
 11740  04EF  0801               	movf	1,w
 11741  04F0  3A01               	xorlw	1
 11742  04F1  1D03               	skipz
 11743  04F2  2CFD               	goto	l9960
 11744                           
 11745                           ;OverLoad_B1.c: 88: {
 11746                           ;OverLoad_B1.c: 89: Load->JudgeValue=0x32;
 11747  04F3  086E               	movf	_Load,w
 11748  04F4  3E36               	addlw	54
 11749  04F5  0086               	movwf	6
 11750  04F6  3002               	movlw	2	; select bank4/5
 11751  04F7  0087               	movwf	7
 11752  04F8  3032               	movlw	50
 11753  04F9  3FC0               	movwi [0]fsr1
 11754  04FA  3000               	movlw	0
 11755  04FB  3FC1               	movwi [1]fsr1
 11756                           
 11757                           ;OverLoad_B1.c: 90: }
 11758  04FC  2D15               	goto	l9962
 11759  04FD                     l9960:	
 11760                           
 11761                           ;OverLoad_B1.c: 91: else
 11762                           ;OverLoad_B1.c: 92: {
 11763                           ;OverLoad_B1.c: 93: Load->JudgeValue=(0x32+Load->TotalLoad)-0x08;
 11764  04FD  086E               	movf	_Load,w
 11765  04FE  3E06               	addlw	6
 11766  04FF  0086               	movwf	6
 11767  0500  3002               	movlw	2	; select bank4/5
 11768  0501  0087               	movwf	7
 11769  0502  3F40               	moviw [0]fsr1
 11770  0503  00AD               	movwf	??_Load_Main
 11771  0504  3F41               	moviw [1]fsr1
 11772  0505  00AE               	movwf	??_Load_Main+1
 11773  0506  082D               	movf	??_Load_Main,w
 11774  0507  3E2A               	addlw	42
 11775  0508  00AF               	movwf	??_Load_Main+2
 11776  0509  3000               	movlw	0
 11777  050A  3D2E               	addwfc	??_Load_Main+1,w
 11778  050B  00B0               	movwf	??_Load_Main+3
 11779  050C  086E               	movf	_Load,w
 11780  050D  3E36               	addlw	54
 11781  050E  0086               	movwf	6
 11782  050F  3002               	movlw	2	; select bank4/5
 11783  0510  0087               	movwf	7
 11784  0511  082F               	movf	??_Load_Main+2,w
 11785  0512  3FC0               	movwi [0]fsr1
 11786  0513  0830               	movf	??_Load_Main+3,w
 11787  0514  3FC1               	movwi [1]fsr1
 11788  0515                     l9962:	
 11789                           
 11790                           ;OverLoad_B1.c: 94: }
 11791                           ;OverLoad_B1.c: 95: }
 11792                           ;OverLoad_B1.c: 96: }
 11793                           ;OverLoad_B1.c: 98: if(Load->AD >= Load->JudgeValue)
 11794  0515  086E               	movf	_Load,w
 11795  0516  3E36               	addlw	54
 11796  0517  0086               	movwf	6
 11797  0518  3002               	movlw	2	; select bank4/5
 11798  0519  0087               	movwf	7
 11799  051A  3F40               	moviw [0]fsr1
 11800  051B  00AD               	movwf	??_Load_Main
 11801  051C  3F41               	moviw [1]fsr1
 11802  051D  00AE               	movwf	??_Load_Main+1
 11803  051E  086E               	movf	_Load,w
 11804  051F  3E2C               	addlw	44
 11805  0520  0086               	movwf	6
 11806  0521  3002               	movlw	2	; select bank4/5
 11807  0522  0087               	movwf	7
 11808  0523  3F40               	moviw [0]fsr1
 11809  0524  00AF               	movwf	??_Load_Main+2
 11810  0525  3F41               	moviw [1]fsr1
 11811  0526  00B0               	movwf	??_Load_Main+3
 11812  0527  082E               	movf	??_Load_Main+1,w
 11813  0528  0230               	subwf	??_Load_Main+3,w
 11814  0529  1D03               	skipz
 11815  052A  2D2D               	goto	u10155
 11816  052B  082D               	movf	??_Load_Main,w
 11817  052C  022F               	subwf	??_Load_Main+2,w
 11818  052D                     u10155:	
 11819  052D  1C03               	skipc
 11820  052E  2D4C               	goto	l9972
 11821                           
 11822                           ;OverLoad_B1.c: 99: {
 11823                           ;OverLoad_B1.c: 100: Load->ErrorCount++;
 11824  052F  3001               	movlw	1
 11825  0530  00AD               	movwf	??_Load_Main
 11826  0531  086E               	movf	_Load,w
 11827  0532  3E3C               	addlw	60
 11828  0533  0086               	movwf	6
 11829  0534  3002               	movlw	2	; select bank4/5
 11830  0535  0087               	movwf	7
 11831  0536  082D               	movf	??_Load_Main,w
 11832  0537  0781               	addwf	1,f
 11833                           
 11834                           ;OverLoad_B1.c: 101: if(Load->ErrorCount >2)
 11835  0538  086E               	movf	_Load,w
 11836  0539  3E3C               	addlw	60
 11837  053A  0086               	movwf	6
 11838  053B  3002               	movlw	2	; select bank4/5
 11839  053C  0087               	movwf	7
 11840  053D  3003               	movlw	3
 11841  053E  0201               	subwf	1,w
 11842  053F  1C03               	skipc
 11843  0540  2DD4               	goto	l9998
 11844                           
 11845                           ;OverLoad_B1.c: 102: {
 11846                           ;OverLoad_B1.c: 103: Load->ErrorCount=0;
 11847  0541  086E               	movf	_Load,w
 11848  0542  3E3C               	addlw	60
 11849  0543  0086               	movwf	6
 11850  0544  3002               	movlw	2	; select bank4/5
 11851  0545  0087               	movwf	7
 11852  0546  0181               	clrf	1
 11853                           
 11854                           ;OverLoad_B1.c: 104: setLoad_Exceptions(1);
 11855  0547  3001               	movlw	1
 11856  0548  319C  24F6  3183   	fcall	_setLoad_Exceptions
 11857                           
 11858                           ;OverLoad_B1.c: 113: }
 11859                           ;OverLoad_B1.c: 114: }
 11860  054B  2DD4               	goto	l9998
 11861  054C                     l9972:	
 11862                           
 11863                           ;OverLoad_B1.c: 115: else
 11864                           ;OverLoad_B1.c: 116: {
 11865                           ;OverLoad_B1.c: 117: Load->ErrorCount=0;
 11866  054C  0020               	movlb	0	; select bank0
 11867  054D  086E               	movf	_Load,w
 11868  054E  3E3C               	addlw	60
 11869  054F  0086               	movwf	6
 11870  0550  3002               	movlw	2	; select bank4/5
 11871  0551  0087               	movwf	7
 11872  0552  0181               	clrf	1
 11873                           
 11874                           ;OverLoad_B1.c: 118: if(Load->SafeCount < 10)
 11875  0553  086E               	movf	_Load,w
 11876  0554  3E42               	addlw	66
 11877  0555  0086               	movwf	6
 11878  0556  3002               	movlw	2	; select bank4/5
 11879  0557  0087               	movwf	7
 11880  0558  300A               	movlw	10
 11881  0559  0201               	subwf	1,w
 11882  055A  1803               	skipnc
 11883  055B  2D65               	goto	l9978
 11884                           
 11885                           ;OverLoad_B1.c: 119: {
 11886                           ;OverLoad_B1.c: 120: Load->SafeCount++;
 11887  055C  3001               	movlw	1
 11888  055D  00AD               	movwf	??_Load_Main
 11889  055E  086E               	movf	_Load,w
 11890  055F  3E42               	addlw	66
 11891  0560  0086               	movwf	6
 11892  0561  3002               	movlw	2	; select bank4/5
 11893  0562  0087               	movwf	7
 11894  0563  082D               	movf	??_Load_Main,w
 11895  0564  0781               	addwf	1,f
 11896  0565                     l9978:	
 11897                           
 11898                           ;OverLoad_B1.c: 121: }
 11899                           ;OverLoad_B1.c: 122: if(Load->SafeCount >= 10)
 11900  0565  086E               	movf	_Load,w
 11901  0566  3E42               	addlw	66
 11902  0567  0086               	movwf	6
 11903  0568  3002               	movlw	2	; select bank4/5
 11904  0569  0087               	movwf	7
 11905  056A  300A               	movlw	10
 11906  056B  0201               	subwf	1,w
 11907  056C  1C03               	skipc
 11908  056D  2DD4               	goto	l9998
 11909                           
 11910                           ;OverLoad_B1.c: 123: {
 11911                           ;OverLoad_B1.c: 124: Load->Safe=1;
 11912  056E  086E               	movf	_Load,w
 11913  056F  0086               	movwf	6
 11914  0570  3002               	movlw	2	; select bank4/5
 11915  0571  0087               	movwf	7
 11916  0572  1581               	bsf	1,3
 11917                           
 11918                           ;OverLoad_B1.c: 127: setDimmerLights_Clear(1,1);
 11919  0573  01A2               	clrf	setDimmerLights_Clear@command
 11920  0574  0AA2               	incf	setDimmerLights_Clear@command,f
 11921  0575  3001               	movlw	1
 11922  0576  31A5  2575  3183   	fcall	_setDimmerLights_Clear
 11923                           
 11924                           ;OverLoad_B1.c: 131: setDimmerLights_Clear(2,1);
 11925  0579  0020               	movlb	0	; select bank0
 11926  057A  01A2               	clrf	setDimmerLights_Clear@command
 11927  057B  0AA2               	incf	setDimmerLights_Clear@command,f
 11928  057C  3002               	movlw	2
 11929  057D  31A5  2575  3183   	fcall	_setDimmerLights_Clear
 11930                           
 11931                           ;OverLoad_B1.c: 138: if(Load->StatusOn)
 11932  0580  0020               	movlb	0	; select bank0
 11933  0581  086E               	movf	_Load,w
 11934  0582  3E46               	addlw	70
 11935  0583  0086               	movwf	6
 11936  0584  3002               	movlw	2	; select bank4/5
 11937  0585  0087               	movwf	7
 11938  0586  1C01               	btfss	1,0
 11939  0587  2D9C               	goto	l9990
 11940                           
 11941                           ;OverLoad_B1.c: 139: {
 11942                           ;OverLoad_B1.c: 140: Load->StatusOn=0;
 11943  0588  086E               	movf	_Load,w
 11944  0589  3E46               	addlw	70
 11945  058A  0086               	movwf	6
 11946  058B  3002               	movlw	2	; select bank4/5
 11947  058C  0087               	movwf	7
 11948  058D  1001               	bcf	1,0
 11949                           
 11950                           ;OverLoad_B1.c: 141: Load->TotalLoad=Load->AD;
 11951  058E  086E               	movf	_Load,w
 11952  058F  3E2C               	addlw	44
 11953  0590  0086               	movwf	6
 11954  0591  3002               	movlw	2	; select bank4/5
 11955  0592  0087               	movwf	7
 11956  0593  086E               	movf	_Load,w
 11957  0594  3E06               	addlw	6
 11958  0595  0084               	movwf	4
 11959  0596  3002               	movlw	2	; select bank4/5
 11960  0597  0085               	movwf	5
 11961  0598  3F40               	moviw [0]fsr1
 11962  0599  3F80               	movwi [0]fsr0
 11963  059A  3F41               	moviw [1]fsr1
 11964  059B  3F81               	movwi [1]fsr0
 11965  059C                     l9990:	
 11966                           
 11967                           ;OverLoad_B1.c: 143: }
 11968                           ;OverLoad_B1.c: 145: if(Load->StatusOff)
 11969  059C  086E               	movf	_Load,w
 11970  059D  3E46               	addlw	70
 11971  059E  0086               	movwf	6
 11972  059F  3002               	movlw	2	; select bank4/5
 11973  05A0  0087               	movwf	7
 11974  05A1  1C81               	btfss	1,1
 11975  05A2  2DD4               	goto	l9998
 11976                           
 11977                           ;OverLoad_B1.c: 146: {
 11978                           ;OverLoad_B1.c: 147: Load->StatusOff=0;
 11979  05A3  086E               	movf	_Load,w
 11980  05A4  3E46               	addlw	70
 11981  05A5  0086               	movwf	6
 11982  05A6  3002               	movlw	2	; select bank4/5
 11983  05A7  0087               	movwf	7
 11984  05A8  1081               	bcf	1,1
 11985                           
 11986                           ;OverLoad_B1.c: 148: Load->TotalLoad=Load->AD;
 11987  05A9  086E               	movf	_Load,w
 11988  05AA  3E2C               	addlw	44
 11989  05AB  0086               	movwf	6
 11990  05AC  3002               	movlw	2	; select bank4/5
 11991  05AD  0087               	movwf	7
 11992  05AE  086E               	movf	_Load,w
 11993  05AF  3E06               	addlw	6
 11994  05B0  0084               	movwf	4
 11995  05B1  3002               	movlw	2	; select bank4/5
 11996  05B2  0085               	movwf	5
 11997  05B3  3F40               	moviw [0]fsr1
 11998  05B4  3F80               	movwi [0]fsr0
 11999  05B5  3F41               	moviw [1]fsr1
 12000  05B6  3F81               	movwi [1]fsr0
 12001                           
 12002                           ;OverLoad_B1.c: 149: Load->JudgeValue=0x32*Load->LightsCount;
 12003  05B7  086E               	movf	_Load,w
 12004  05B8  3E3E               	addlw	62
 12005  05B9  0086               	movwf	6
 12006  05BA  3002               	movlw	2	; select bank4/5
 12007  05BB  0087               	movwf	7
 12008  05BC  0801               	movf	1,w
 12009  05BD  00AD               	movwf	??_Load_Main
 12010  05BE  01AE               	clrf	??_Load_Main+1
 12011  05BF  082D               	movf	??_Load_Main,w
 12012  05C0  00A0               	movwf	___wmul@multiplier
 12013  05C1  082E               	movf	??_Load_Main+1,w
 12014  05C2  00A1               	movwf	___wmul@multiplier+1
 12015  05C3  3032               	movlw	50
 12016  05C4  00A2               	movwf	___wmul@multiplicand
 12017  05C5  3000               	movlw	0
 12018  05C6  00A3               	movwf	___wmul@multiplicand+1
 12019  05C7  31A7  2781  3183   	fcall	___wmul
 12020  05CA  0020               	movlb	0	; select bank0
 12021  05CB  086E               	movf	_Load,w
 12022  05CC  3E36               	addlw	54
 12023  05CD  0086               	movwf	6
 12024  05CE  3002               	movlw	2	; select bank4/5
 12025  05CF  0087               	movwf	7
 12026  05D0  0820               	movf	?___wmul,w
 12027  05D1  3FC0               	movwi [0]fsr1
 12028  05D2  0821               	movf	?___wmul+1,w
 12029  05D3  3FC1               	movwi [1]fsr1
 12030  05D4                     l9998:	
 12031                           
 12032                           ;OverLoad_B1.c: 150: }
 12033                           ;OverLoad_B1.c: 151: }
 12034                           ;OverLoad_B1.c: 152: }
 12035                           ;OverLoad_B1.c: 153: }
 12036                           ;OverLoad_B1.c: 154: setLoad_AH_AL_Restore();
 12037  05D4  3198  20A1         	fcall	_setLoad_AH_AL_Restore
 12038                           
 12039                           ;OverLoad_B1.c: 166: }
 12040                           ;OverLoad_B1.c: 167: }
 12041  05D6  0008               	return
 12042  05D7                     l10000:	
 12043                           
 12044                           ;OverLoad_B1.c: 168: else
 12045                           ;OverLoad_B1.c: 169: {
 12046                           ;OverLoad_B1.c: 170: if(Load->GO)
 12047  05D7  0020               	movlb	0	; select bank0
 12048  05D8  086E               	movf	_Load,w
 12049  05D9  0086               	movwf	6
 12050  05DA  3002               	movlw	2	; select bank4/5
 12051  05DB  0087               	movwf	7
 12052  05DC  1C81               	btfss	1,1
 12053  05DD  2E01               	goto	l10012
 12054                           
 12055                           ;OverLoad_B1.c: 171: {
 12056                           ;OverLoad_B1.c: 172: if(!Load->LightsON)
 12057  05DE  086E               	movf	_Load,w
 12058  05DF  0086               	movwf	6
 12059  05E0  3002               	movlw	2	; select bank4/5
 12060  05E1  0087               	movwf	7
 12061  05E2  1901               	btfsc	1,2
 12062  05E3  2DEE               	goto	l10006
 12063                           
 12064                           ;OverLoad_B1.c: 173: {
 12065                           ;OverLoad_B1.c: 174: Load->LightsON=1;
 12066  05E4  086E               	movf	_Load,w
 12067  05E5  0086               	movwf	6
 12068  05E6  3002               	movlw	2	; select bank4/5
 12069  05E7  0087               	movwf	7
 12070  05E8  1501               	bsf	1,2
 12071                           
 12072                           ;OverLoad_B1.c: 175: Load->Safe=0;
 12073  05E9  086E               	movf	_Load,w
 12074  05EA  0086               	movwf	6
 12075  05EB  3002               	movlw	2	; select bank4/5
 12076  05EC  0087               	movwf	7
 12077  05ED  1181               	bcf	1,3
 12078  05EE                     l10006:	
 12079                           
 12080                           ;OverLoad_B1.c: 176: }
 12081                           ;OverLoad_B1.c: 177: if(getTemp_Safe() && getPF_Safe())
 12082  05EE  31A3  23DC  3183   	fcall	_getTemp_Safe
 12083  05F1  3A00               	xorlw	0
 12084  05F2  1903               	skipnz
 12085  05F3  0008               	return
 12086  05F4  31A4  2401  3183   	fcall	_getPF_Safe
 12087  05F7  3A00               	xorlw	0
 12088  05F8  1903               	skipnz
 12089  05F9  0008               	return
 12090                           
 12091                           ;OverLoad_B1.c: 178: {
 12092                           ;OverLoad_B1.c: 179: Load->ADtoGO=1;
 12093  05FA  0020               	movlb	0	; select bank0
 12094  05FB  086E               	movf	_Load,w
 12095  05FC  0086               	movwf	6
 12096  05FD  3002               	movlw	2	; select bank4/5
 12097  05FE  0087               	movwf	7
 12098  05FF  1601               	bsf	1,4
 12099                           
 12100                           ;OverLoad_B1.c: 180: }
 12101                           ;OverLoad_B1.c: 181: }
 12102  0600  0008               	return
 12103  0601                     l10012:	
 12104                           
 12105                           ;OverLoad_B1.c: 182: else
 12106                           ;OverLoad_B1.c: 183: {
 12107                           ;OverLoad_B1.c: 184: if(Load->LightsON)
 12108  0601  086E               	movf	_Load,w
 12109  0602  0086               	movwf	6
 12110  0603  3002               	movlw	2	; select bank4/5
 12111  0604  0087               	movwf	7
 12112  0605  1D01               	btfss	1,2
 12113  0606  0008               	return
 12114                           
 12115                           ;OverLoad_B1.c: 185: {
 12116                           ;OverLoad_B1.c: 186: Load->LightsON=0;
 12117  0607  086E               	movf	_Load,w
 12118  0608  0086               	movwf	6
 12119  0609  3002               	movlw	2	; select bank4/5
 12120  060A  0087               	movwf	7
 12121  060B  1101               	bcf	1,2
 12122                           
 12123                           ;OverLoad_B1.c: 187: Load->Safe=1;
 12124  060C  086E               	movf	_Load,w
 12125  060D  0086               	movwf	6
 12126  060E  3002               	movlw	2	; select bank4/5
 12127  060F  0087               	movwf	7
 12128  0610  1581               	bsf	1,3
 12129                           
 12130                           ;OverLoad_B1.c: 188: Load->ErrorCount=0;
 12131  0611  086E               	movf	_Load,w
 12132  0612  3E3C               	addlw	60
 12133  0613  0086               	movwf	6
 12134  0614  3002               	movlw	2	; select bank4/5
 12135  0615  0087               	movwf	7
 12136  0616  0181               	clrf	1
 12137                           
 12138                           ;OverLoad_B1.c: 189: Load->Count=0;
 12139  0617  086E               	movf	_Load,w
 12140  0618  3E3A               	addlw	58
 12141  0619  0086               	movwf	6
 12142  061A  3002               	movlw	2	; select bank4/5
 12143  061B  0087               	movwf	7
 12144  061C  0181               	clrf	1
 12145                           
 12146                           ;OverLoad_B1.c: 190: Load->TotalLoad=0;
 12147  061D  086E               	movf	_Load,w
 12148  061E  3E06               	addlw	6
 12149  061F  0086               	movwf	6
 12150  0620  3002               	movlw	2	; select bank4/5
 12151  0621  0087               	movwf	7
 12152  0622  3000               	movlw	0
 12153  0623  3FC0               	movwi [0]fsr1
 12154  0624  3FC1               	movwi [1]fsr1
 12155                           
 12156                           ;OverLoad_B1.c: 191: Load->NumberCount=0;
 12157  0625  086E               	movf	_Load,w
 12158  0626  3E3F               	addlw	63
 12159  0627  0086               	movwf	6
 12160  0628  3002               	movlw	2	; select bank4/5
 12161  0629  0087               	movwf	7
 12162  062A  0181               	clrf	1
 12163                           
 12164                           ;OverLoad_B1.c: 192: Load->StatusOn=0;
 12165  062B  086E               	movf	_Load,w
 12166  062C  3E46               	addlw	70
 12167  062D  0086               	movwf	6
 12168  062E  3002               	movlw	2	; select bank4/5
 12169  062F  0087               	movwf	7
 12170  0630  1001               	bcf	1,0
 12171                           
 12172                           ;OverLoad_B1.c: 193: Load->StatusOff=0;
 12173  0631  086E               	movf	_Load,w
 12174  0632  3E46               	addlw	70
 12175  0633  0086               	movwf	6
 12176  0634  3002               	movlw	2	; select bank4/5
 12177  0635  0087               	movwf	7
 12178  0636  1081               	bcf	1,1
 12179                           
 12180                           ;OverLoad_B1.c: 194: Load->AD=0;
 12181  0637  086E               	movf	_Load,w
 12182  0638  3E2C               	addlw	44
 12183  0639  0086               	movwf	6
 12184  063A  3002               	movlw	2	; select bank4/5
 12185  063B  0087               	movwf	7
 12186  063C  3000               	movlw	0
 12187  063D  3FC0               	movwi [0]fsr1
 12188  063E  3FC1               	movwi [1]fsr1
 12189                           
 12190                           ;OverLoad_B1.c: 195: setLoad_AH_AL_Restore();
 12191  063F  3198  20A1  3183   	fcall	_setLoad_AH_AL_Restore
 12192                           
 12193                           ;OverLoad_B1.c: 198: setDimmerLights_Clear(1,1);
 12194  0642  0020               	movlb	0	; select bank0
 12195  0643  01A2               	clrf	setDimmerLights_Clear@command
 12196  0644  0AA2               	incf	setDimmerLights_Clear@command,f
 12197  0645  3001               	movlw	1
 12198  0646  31A5  2575  3183   	fcall	_setDimmerLights_Clear
 12199                           
 12200                           ;OverLoad_B1.c: 202: setDimmerLights_Clear(2,1);
 12201  0649  0020               	movlb	0	; select bank0
 12202  064A  01A2               	clrf	setDimmerLights_Clear@command
 12203  064B  0AA2               	incf	setDimmerLights_Clear@command,f
 12204  064C  3002               	movlw	2
 12205  064D  31A5  2575         	fcall	_setDimmerLights_Clear
 12206  064F  0008               	return
 12207  0650                     __end_of_Load_Main:	
 12208                           
 12209                           	psect	text60
 12210  1CF6                     __ptext60:	
 12211 ;; *************** function _setLoad_Exceptions *****************
 12212 ;; Defined at:
 12213 ;;		line 228 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 12214 ;; Parameters:    Size  Location     Type
 12215 ;;  command         1    wreg     unsigned char 
 12216 ;; Auto vars:     Size  Location     Type
 12217 ;;  command         1   12[BANK0 ] unsigned char 
 12218 ;; Return value:  Size  Location     Type
 12219 ;;		None               void
 12220 ;; Registers used:
 12221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12230 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12231 ;;Total ram usage:        2 bytes
 12232 ;; Hardware stack levels used:    1
 12233 ;; Hardware stack levels required when called:    8
 12234 ;; This function calls:
 12235 ;;		_DimmerLights_Exceptions
 12236 ;;		_setLED
 12237 ;;		_setRF_Enable
 12238 ;;		_setSw_Enable
 12239 ;; This function is called by:
 12240 ;;		_Load_Main
 12241 ;; This function uses a non-reentrant model
 12242 ;;
 12243                           
 12244                           
 12245                           ;psect for function _setLoad_Exceptions
 12246  1CF6                     _setLoad_Exceptions:	
 12247                           
 12248                           ;incstack = 0
 12249                           ; Regs used in _setLoad_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12250                           ;setLoad_Exceptions@command stored from wreg
 12251  1CF6  0020               	movlb	0	; select bank0
 12252  1CF7  00AC               	movwf	setLoad_Exceptions@command
 12253                           
 12254                           ;OverLoad_B1.c: 230: Load->ERROR=command;
 12255  1CF8  086E               	movf	_Load,w
 12256  1CF9  0086               	movwf	6
 12257  1CFA  3002               	movlw	2	; select bank4/5
 12258  1CFB  0087               	movwf	7
 12259  1CFC  082C               	movf	setLoad_Exceptions@command,w
 12260  1CFD  1281               	bcf	1,5
 12261  1CFE  1D03               	skipz
 12262  1CFF  1681               	bsf	1,5
 12263                           
 12264                           ;OverLoad_B1.c: 231: Load->Safe=(~command) & 0x01;
 12265  1D00  092C               	comf	setLoad_Exceptions@command,w
 12266  1D01  3901               	andlw	1
 12267  1D02  00AB               	movwf	??_setLoad_Exceptions
 12268  1D03  086E               	movf	_Load,w
 12269  1D04  0086               	movwf	6
 12270  1D05  3002               	movlw	2	; select bank4/5
 12271  1D06  0087               	movwf	7
 12272  1D07  0DAB               	rlf	??_setLoad_Exceptions,f
 12273  1D08  0DAB               	rlf	??_setLoad_Exceptions,f
 12274  1D09  0DAB               	rlf	??_setLoad_Exceptions,f
 12275  1D0A  0801               	movf	1,w
 12276  1D0B  062B               	xorwf	??_setLoad_Exceptions,w
 12277  1D0C  39F7               	andlw	-9
 12278  1D0D  062B               	xorwf	??_setLoad_Exceptions,w
 12279  1D0E  0081               	movwf	1
 12280                           
 12281                           ;OverLoad_B1.c: 232: Load->ErrorStatus=command;
 12282  1D0F  082C               	movf	setLoad_Exceptions@command,w
 12283  1D10  00AB               	movwf	??_setLoad_Exceptions
 12284  1D11  086E               	movf	_Load,w
 12285  1D12  3E05               	addlw	5
 12286  1D13  0086               	movwf	6
 12287  1D14  3002               	movlw	2	; select bank4/5
 12288  1D15  0087               	movwf	7
 12289  1D16  082B               	movf	??_setLoad_Exceptions,w
 12290  1D17  0081               	movwf	1
 12291                           
 12292                           ;OverLoad_B1.c: 234: if(command)
 12293  1D18  082C               	movf	setLoad_Exceptions@command,w
 12294  1D19  1903               	btfsc	3,2
 12295  1D1A  2D1F               	goto	l1939
 12296                           
 12297                           ;OverLoad_B1.c: 235: {
 12298                           ;OverLoad_B1.c: 236: DimmerLights_Exceptions(2);
 12299  1D1B  3002               	movlw	2
 12300  1D1C  3190  20CE  319C   	fcall	_DimmerLights_Exceptions
 12301  1D1F                     l1939:	
 12302                           
 12303                           ;OverLoad_B1.c: 240: }
 12304                           ;OverLoad_B1.c: 241: setLED(99,command+10);
 12305  1D1F  0020               	movlb	0	; select bank0
 12306  1D20  082C               	movf	setLoad_Exceptions@command,w
 12307  1D21  3E0A               	addlw	10
 12308  1D22  00AB               	movwf	??_setLoad_Exceptions
 12309  1D23  082B               	movf	??_setLoad_Exceptions,w
 12310  1D24  00A2               	movwf	setLED@command
 12311  1D25  3063               	movlw	99
 12312  1D26  319F  27A2  319C   	fcall	_setLED
 12313                           
 12314                           ;OverLoad_B1.c: 243: setSw_Enable((~command) & 0x01);
 12315  1D29  0020               	movlb	0	; select bank0
 12316  1D2A  092C               	comf	setLoad_Exceptions@command,w
 12317  1D2B  3901               	andlw	1
 12318  1D2C  31A7  2748  319C   	fcall	_setSw_Enable
 12319                           
 12320                           ;OverLoad_B1.c: 245: setRF_Enable(1,(~command) & 0x01);
 12321  1D2F  0020               	movlb	0	; select bank0
 12322  1D30  092C               	comf	setLoad_Exceptions@command,w
 12323  1D31  3901               	andlw	1
 12324  1D32  00AB               	movwf	??_setLoad_Exceptions
 12325  1D33  082B               	movf	??_setLoad_Exceptions,w
 12326  1D34  00A2               	movwf	setRF_Enable@command
 12327  1D35  3001               	movlw	1
 12328  1D36  3199  21A8         	fcall	_setRF_Enable
 12329  1D38  0008               	return
 12330  1D39                     __end_of_setLoad_Exceptions:	
 12331                           
 12332                           	psect	text61
 12333  2748                     __ptext61:	
 12334 ;; *************** function _setSw_Enable *****************
 12335 ;; Defined at:
 12336 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Switch_B1.c"
 12337 ;; Parameters:    Size  Location     Type
 12338 ;;  command         1    wreg     unsigned char 
 12339 ;; Auto vars:     Size  Location     Type
 12340 ;;  command         1    2[BANK0 ] unsigned char 
 12341 ;; Return value:  Size  Location     Type
 12342 ;;		None               void
 12343 ;; Registers used:
 12344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12345 ;; Tracked objects:
 12346 ;;		On entry : 0/0
 12347 ;;		On exit  : 0/0
 12348 ;;		Unchanged: 0/0
 12349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12353 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12354 ;;Total ram usage:        1 bytes
 12355 ;; Hardware stack levels used:    1
 12356 ;; Hardware stack levels required when called:    5
 12357 ;; This function calls:
 12358 ;;		_SwPointSelect
 12359 ;; This function is called by:
 12360 ;;		_MainT
 12361 ;;		_setLoad_Exceptions
 12362 ;;		_setOverTemp_Exceptions
 12363 ;;		_setPowerFault_Exceptions
 12364 ;; This function uses a non-reentrant model
 12365 ;;
 12366                           
 12367                           
 12368                           ;psect for function _setSw_Enable
 12369  2748                     _setSw_Enable:	
 12370                           
 12371                           ;incstack = 0
 12372                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12373                           ;setSw_Enable@command stored from wreg
 12374  2748  0020               	movlb	0	; select bank0
 12375  2749  00A2               	movwf	setSw_Enable@command
 12376                           
 12377                           ;Switch_B1.c: 90: SwPointSelect(1);
 12378  274A  3001               	movlw	1
 12379  274B  31A5  25E9  31A7   	fcall	_SwPointSelect
 12380                           
 12381                           ;Switch_B1.c: 91: Sw->Enable=command;
 12382  274E  0020               	movlb	0	; select bank0
 12383  274F  086D               	movf	_Sw,w
 12384  2750  0086               	movwf	6
 12385  2751  3001               	movlw	1	; select bank2/3
 12386  2752  0087               	movwf	7
 12387  2753  0822               	movf	setSw_Enable@command,w
 12388  2754  1001               	bcf	1,0
 12389  2755  1D03               	skipz
 12390  2756  1401               	bsf	1,0
 12391                           
 12392                           ;Switch_B1.c: 95: SwPointSelect(2);
 12393  2757  3002               	movlw	2
 12394  2758  31A5  25E9         	fcall	_SwPointSelect
 12395                           
 12396                           ;Switch_B1.c: 96: Sw->Enable=command;
 12397  275A  0020               	movlb	0	; select bank0
 12398  275B  086D               	movf	_Sw,w
 12399  275C  0086               	movwf	6
 12400  275D  3001               	movlw	1	; select bank2/3
 12401  275E  0087               	movwf	7
 12402  275F  0822               	movf	setSw_Enable@command,w
 12403  2760  1001               	bcf	1,0
 12404  2761  1D03               	skipz
 12405  2762  1401               	bsf	1,0
 12406  2763  0008               	return
 12407  2764                     __end_of_setSw_Enable:	
 12408                           
 12409                           	psect	text62
 12410  19A8                     __ptext62:	
 12411 ;; *************** function _setRF_Enable *****************
 12412 ;; Defined at:
 12413 ;;		line 178 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  rf              1    wreg     unsigned char 
 12416 ;;  command         1    2[BANK0 ] unsigned char 
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;  rf              1    3[BANK0 ] unsigned char 
 12419 ;; Return value:  Size  Location     Type
 12420 ;;		None               void
 12421 ;; Registers used:
 12422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12423 ;; Tracked objects:
 12424 ;;		On entry : 0/0
 12425 ;;		On exit  : 0/0
 12426 ;;		Unchanged: 0/0
 12427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12428 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;Total ram usage:        2 bytes
 12433 ;; Hardware stack levels used:    1
 12434 ;; Hardware stack levels required when called:    5
 12435 ;; This function calls:
 12436 ;;		_RfPointSelect
 12437 ;;		_setINT_GO
 12438 ;; This function is called by:
 12439 ;;		_MainT
 12440 ;;		_setLoad_Exceptions
 12441 ;;		_setOverTemp_Exceptions
 12442 ;;		_setPowerFault_Exceptions
 12443 ;; This function uses a non-reentrant model
 12444 ;;
 12445                           
 12446                           
 12447                           ;psect for function _setRF_Enable
 12448  19A8                     _setRF_Enable:	
 12449                           
 12450                           ;incstack = 0
 12451                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12452                           ;setRF_Enable@rf stored from wreg
 12453  19A8  0020               	movlb	0	; select bank0
 12454  19A9  00A3               	movwf	setRF_Enable@rf
 12455                           
 12456                           ;RF_Control_B1.c: 180: RfPointSelect(rf);
 12457  19AA  0823               	movf	setRF_Enable@rf,w
 12458  19AB  31A4  2442  3199   	fcall	_RfPointSelect
 12459                           
 12460                           ;RF_Control_B1.c: 181: RF->Enable=command;
 12461  19AE  087C               	movf	_RF,w
 12462  19AF  0086               	movwf	6
 12463  19B0  0187               	clrf	7
 12464  19B1  0020               	movlb	0	; select bank0
 12465  19B2  0822               	movf	setRF_Enable@command,w
 12466  19B3  1001               	bcf	1,0
 12467  19B4  1D03               	skipz
 12468  19B5  1401               	bsf	1,0
 12469                           
 12470                           ;RF_Control_B1.c: 182: RF->Learn=0;
 12471  19B6  087C               	movf	_RF,w
 12472  19B7  0086               	movwf	6
 12473  19B8  0187               	clrf	7
 12474  19B9  1301               	bcf	1,6
 12475                           
 12476                           ;RF_Control_B1.c: 183: RF->TransceiveGO=0;
 12477  19BA  087C               	movf	_RF,w
 12478  19BB  0086               	movwf	6
 12479  19BC  0187               	clrf	7
 12480  19BD  1101               	bcf	1,2
 12481                           
 12482                           ;RF_Control_B1.c: 184: RF->RxStatus=0;
 12483  19BE  087C               	movf	_RF,w
 12484  19BF  0086               	movwf	6
 12485  19C0  0187               	clrf	7
 12486  19C1  1181               	bcf	1,3
 12487                           
 12488                           ;RF_Control_B1.c: 185: RF->ReceiveGO=0;
 12489  19C2  087C               	movf	_RF,w
 12490  19C3  0086               	movwf	6
 12491  19C4  0187               	clrf	7
 12492  19C5  1081               	bcf	1,1
 12493                           
 12494                           ;RF_Control_B1.c: 186: RF->DebounceTime=0;
 12495  19C6  0A7C               	incf	_RF,w
 12496  19C7  0086               	movwf	6
 12497  19C8  0187               	clrf	7
 12498  19C9  0181               	clrf	1
 12499                           
 12500                           ;RF_Control_B1.c: 187: RF->Debounce=0;
 12501  19CA  087C               	movf	_RF,w
 12502  19CB  0086               	movwf	6
 12503  19CC  0187               	clrf	7
 12504  19CD  1281               	bcf	1,5
 12505                           
 12506                           ;RF_Control_B1.c: 188: setINT_GO(0);
 12507  19CE  3000               	movlw	0
 12508  19CF  3190  2000         	fcall	_setINT_GO
 12509  19D1  0008               	return
 12510  19D2                     __end_of_setRF_Enable:	
 12511                           
 12512                           	psect	text63
 12513  1000                     __ptext63:	
 12514 ;; *************** function _setINT_GO *****************
 12515 ;; Defined at:
 12516 ;;		line 235 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 12517 ;; Parameters:    Size  Location     Type
 12518 ;;  command         1    wreg     unsigned char 
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;  command         1    0[BANK0 ] unsigned char 
 12521 ;; Return value:  Size  Location     Type
 12522 ;;		None               void
 12523 ;; Registers used:
 12524 ;;		wreg
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12533 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12534 ;;Total ram usage:        1 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    4
 12537 ;; This function calls:
 12538 ;;		Nothing
 12539 ;; This function is called by:
 12540 ;;		_setRF_Main
 12541 ;;		_setRF_Enable
 12542 ;;		_RF_RxDisable
 12543 ;; This function uses a non-reentrant model
 12544 ;;
 12545                           
 12546                           
 12547                           ;psect for function _setINT_GO
 12548  1000                     _setINT_GO:	
 12549                           
 12550                           ;incstack = 0
 12551                           ; Regs used in _setINT_GO: [wreg]
 12552                           ;setINT_GO@command stored from wreg
 12553  1000  0020               	movlb	0	; select bank0
 12554  1001  00A0               	movwf	setINT_GO@command
 12555                           
 12556                           ;MCU_16f1518_B1.c: 237: INTF=0;
 12557  1002  108B               	bcf	11,1	;volatile
 12558                           
 12559                           ;MCU_16f1518_B1.c: 238: INTE=command;
 12560  1003  1C20               	btfss	setINT_GO@command,0
 12561  1004  2807               	goto	u8490
 12562  1005  160B               	bsf	11,4	;volatile
 12563  1006  0008               	return
 12564  1007                     u8490:	
 12565  1007  120B               	bcf	11,4	;volatile
 12566  1008  0008               	return
 12567  1009                     __end_of_setINT_GO:	
 12568                           
 12569                           	psect	text64
 12570  10CE                     __ptext64:	
 12571 ;; *************** function _DimmerLights_Exceptions *****************
 12572 ;; Defined at:
 12573 ;;		line 237 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;  status          1    wreg     unsigned char 
 12576 ;; Auto vars:     Size  Location     Type
 12577 ;;  status          1   10[BANK0 ] unsigned char 
 12578 ;; Return value:  Size  Location     Type
 12579 ;;		None               void
 12580 ;; Registers used:
 12581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;Total ram usage:        1 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; Hardware stack levels required when called:    7
 12594 ;; This function calls:
 12595 ;;		_getDimmerLights_StatusFlag
 12596 ;;		_setBuz
 12597 ;;		_setDimmerLights_ERROR
 12598 ;;		_setDimmerLights_TriggerERROR
 12599 ;; This function is called by:
 12600 ;;		_setLoad_Exceptions
 12601 ;;		_setOverTemp_Exceptions
 12602 ;;		_setPowerFault_Exceptions
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           
 12607                           ;psect for function _DimmerLights_Exceptions
 12608  10CE                     _DimmerLights_Exceptions:	
 12609                           
 12610                           ;incstack = 0
 12611                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12612                           ;DimmerLights_Exceptions@status stored from wreg
 12613  10CE  0020               	movlb	0	; select bank0
 12614  10CF  00AA               	movwf	DimmerLights_Exceptions@status
 12615                           
 12616                           ;Dimmer_B1.c: 239: if(status == 1)
 12617  10D0  082A               	movf	DimmerLights_Exceptions@status,w
 12618  10D1  3A01               	xorlw	1
 12619  10D2  1D03               	skipz
 12620  10D3  28E4               	goto	l8864
 12621                           
 12622                           ;Dimmer_B1.c: 240: {
 12623                           ;Dimmer_B1.c: 241: if(getDimmerLights_StatusFlag())
 12624  10D4  31A6  2652  3190   	fcall	_getDimmerLights_StatusFlag
 12625  10D7  3A00               	xorlw	0
 12626  10D8  1903               	skipnz
 12627  10D9  28FC               	goto	l8870
 12628                           
 12629                           ;Dimmer_B1.c: 242: {
 12630                           ;Dimmer_B1.c: 243: setBuz(10,300);
 12631  10DA  302C               	movlw	44
 12632  10DB  0020               	movlb	0	; select bank0
 12633  10DC  00A6               	movwf	setBuz@time
 12634  10DD  3001               	movlw	1
 12635  10DE  00A7               	movwf	setBuz@time+1
 12636  10DF  300A               	movlw	10
 12637  10E0  3193  23C7  3190   	fcall	_setBuz
 12638  10E3  28FC               	goto	l8870
 12639  10E4                     l8864:	
 12640                           ;Dimmer_B1.c: 255: }
 12641                           
 12642                           ;Dimmer_B1.c: 250: setDimmerLights_ERROR(2);
 12643                           
 12644                           ;Dimmer_B1.c: 244: }
 12645                           ;Dimmer_B1.c: 247: setDimmerLights_ERROR(1);
 12646                           
 12647                           
 12648                           ;Dimmer_B1.c: 256: else if(status == 2)
 12649  10E4  0020               	movlb	0	; select bank0
 12650  10E5  082A               	movf	DimmerLights_Exceptions@status,w
 12651  10E6  3A02               	xorlw	2
 12652  10E7  1D03               	skipz
 12653  10E8  28F7               	goto	l8868
 12654                           
 12655                           ;Dimmer_B1.c: 257: {
 12656                           ;Dimmer_B1.c: 258: setBuz(5,300);
 12657  10E9  302C               	movlw	44
 12658  10EA  00A6               	movwf	setBuz@time
 12659  10EB  3001               	movlw	1
 12660  10EC  00A7               	movwf	setBuz@time+1
 12661  10ED  3005               	movlw	5
 12662  10EE  3193  23C7  3190   	fcall	_setBuz
 12663                           
 12664                           ;Dimmer_B1.c: 259: setDimmerLights_ERROR(Dimmer->Load);
 12665  10F1  0021               	movlb	1	; select bank1
 12666  10F2  0A39               	incf	_Dimmer^(0+128),w
 12667  10F3  0086               	movwf	6
 12668  10F4  0187               	clrf	7
 12669  10F5  0801               	movf	1,w
 12670  10F6  2901               	goto	L12
 12671  10F7                     l8868:	
 12672                           ;Dimmer_B1.c: 260: }
 12673                           
 12674                           
 12675                           ;Dimmer_B1.c: 261: else if(status == 3)
 12676  10F7  0020               	movlb	0	; select bank0
 12677  10F8  082A               	movf	DimmerLights_Exceptions@status,w
 12678  10F9  3A03               	xorlw	3
 12679  10FA  1D03               	skipz
 12680  10FB  2904               	goto	l922
 12681  10FC                     l8870:	
 12682                           
 12683                           ;Dimmer_B1.c: 262: {
 12684                           ;Dimmer_B1.c: 264: setDimmerLights_ERROR(1);
 12685  10FC  3001               	movlw	1
 12686  10FD  319E  2694  3190   	fcall	_setDimmerLights_ERROR
 12687                           
 12688                           ;Dimmer_B1.c: 267: setDimmerLights_ERROR(2);
 12689  1100  3002               	movlw	2
 12690  1101                     L12:	
 12691  1101  319E  2694  3190   	fcall	_setDimmerLights_ERROR
 12692  1104                     l922:	
 12693                           
 12694                           ;Dimmer_B1.c: 272: }
 12695                           ;Dimmer_B1.c: 275: setDimmerLights_TriggerERROR(1,0);
 12696  1104  0020               	movlb	0	; select bank0
 12697  1105  01A2               	clrf	setDimmerLights_TriggerERROR@command
 12698  1106  3001               	movlw	1
 12699  1107  3199  21D2  3190   	fcall	_setDimmerLights_TriggerERROR
 12700                           
 12701                           ;Dimmer_B1.c: 278: setDimmerLights_TriggerERROR(2,0);
 12702  110A  0020               	movlb	0	; select bank0
 12703  110B  01A2               	clrf	setDimmerLights_TriggerERROR@command
 12704  110C  3002               	movlw	2
 12705  110D  3199  21D2  3190   	fcall	_setDimmerLights_TriggerERROR
 12706                           
 12707                           ;Dimmer_B1.c: 284: if(TMain->SelfTest == 0)
 12708  1110  0021               	movlb	1	; select bank1
 12709  1111  0869               	movf	_TMain^(0+128),w
 12710  1112  3E03               	addlw	3
 12711  1113  0086               	movwf	6
 12712  1114  3001               	movlw	1	; select bank2/3
 12713  1115  0087               	movwf	7
 12714  1116  1801               	btfsc	1,0
 12715  1117  0008               	return
 12716                           
 12717                           ;Dimmer_B1.c: 285: {
 12718                           ;Dimmer_B1.c: 286: TMain->i=0;
 12719  1118  0869               	movf	_TMain^(0+128),w
 12720  1119  3E0E               	addlw	14
 12721  111A  0086               	movwf	6
 12722  111B  3001               	movlw	1	; select bank2/3
 12723  111C  0087               	movwf	7
 12724  111D  1001               	bcf	1,0
 12725                           
 12726                           ;Dimmer_B1.c: 287: TMain->j=0;
 12727  111E  0869               	movf	_TMain^(0+128),w
 12728  111F  3E0E               	addlw	14
 12729  1120  0086               	movwf	6
 12730  1121  3001               	movlw	1	; select bank2/3
 12731  1122  0087               	movwf	7
 12732  1123  1081               	bcf	1,1
 12733                           
 12734                           ;Dimmer_B1.c: 288: TMain->k=1;
 12735  1124  0869               	movf	_TMain^(0+128),w
 12736  1125  3E0E               	addlw	14
 12737  1126  0086               	movwf	6
 12738  1127  3001               	movlw	1	; select bank2/3
 12739  1128  0087               	movwf	7
 12740  1129  1501               	bsf	1,2
 12741                           
 12742                           ;Dimmer_B1.c: 289: TMain->Count2=0;
 12743  112A  0869               	movf	_TMain^(0+128),w
 12744  112B  3E08               	addlw	8
 12745  112C  0086               	movwf	6
 12746  112D  3001               	movlw	1	; select bank2/3
 12747  112E  0087               	movwf	7
 12748  112F  3000               	movlw	0
 12749  1130  3FC0               	movwi [0]fsr1
 12750  1131  3FC1               	movwi [1]fsr1
 12751  1132  0008               	return
 12752  1133                     __end_of_DimmerLights_Exceptions:	
 12753                           
 12754                           	psect	text65
 12755  19D2                     __ptext65:	
 12756 ;; *************** function _setDimmerLights_TriggerERROR *****************
 12757 ;; Defined at:
 12758 ;;		line 311 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;  lights          1    wreg     unsigned char 
 12761 ;;  command         1    2[BANK0 ] unsigned char 
 12762 ;; Auto vars:     Size  Location     Type
 12763 ;;  lights          1    3[BANK0 ] unsigned char 
 12764 ;; Return value:  Size  Location     Type
 12765 ;;		None               void
 12766 ;; Registers used:
 12767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12768 ;; Tracked objects:
 12769 ;;		On entry : 0/0
 12770 ;;		On exit  : 0/0
 12771 ;;		Unchanged: 0/0
 12772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12773 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12776 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12777 ;;Total ram usage:        2 bytes
 12778 ;; Hardware stack levels used:    1
 12779 ;; Hardware stack levels required when called:    5
 12780 ;; This function calls:
 12781 ;;		_DimmerLightsPointSelect
 12782 ;; This function is called by:
 12783 ;;		_DimmerLights_Exceptions
 12784 ;; This function uses a non-reentrant model
 12785 ;;
 12786                           
 12787                           
 12788                           ;psect for function _setDimmerLights_TriggerERROR
 12789  19D2                     _setDimmerLights_TriggerERROR:	
 12790                           
 12791                           ;incstack = 0
 12792                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 12793                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 12794  19D2  0020               	movlb	0	; select bank0
 12795  19D3  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 12796                           
 12797                           ;Dimmer_B1.c: 313: DimmerLightsPointSelect(lights);
 12798  19D4  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 12799  19D5  31A5  25D6         	fcall	_DimmerLightsPointSelect
 12800                           
 12801                           ;Dimmer_B1.c: 314: DimmerLights->Trigger=command;
 12802  19D7  0020               	movlb	0	; select bank0
 12803  19D8  086C               	movf	_DimmerLights,w
 12804  19D9  3E09               	addlw	9
 12805  19DA  0086               	movwf	6
 12806  19DB  3001               	movlw	1	; select bank2/3
 12807  19DC  0087               	movwf	7
 12808  19DD  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12809  19DE  1081               	bcf	1,1
 12810  19DF  1D03               	skipz
 12811  19E0  1481               	bsf	1,1
 12812                           
 12813                           ;Dimmer_B1.c: 315: DimmerLights->Switch=command;
 12814  19E1  086C               	movf	_DimmerLights,w
 12815  19E2  3E09               	addlw	9
 12816  19E3  0086               	movwf	6
 12817  19E4  3001               	movlw	1	; select bank2/3
 12818  19E5  0087               	movwf	7
 12819  19E6  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12820  19E7  1001               	bcf	1,0
 12821  19E8  1D03               	skipz
 12822  19E9  1401               	bsf	1,0
 12823                           
 12824                           ;Dimmer_B1.c: 316: DimmerLights->TriggerAdj=command;
 12825  19EA  086C               	movf	_DimmerLights,w
 12826  19EB  3E09               	addlw	9
 12827  19EC  0086               	movwf	6
 12828  19ED  3001               	movlw	1	; select bank2/3
 12829  19EE  0087               	movwf	7
 12830  19EF  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12831  19F0  1181               	bcf	1,3
 12832  19F1  1D03               	skipz
 12833  19F2  1581               	bsf	1,3
 12834                           
 12835                           ;Dimmer_B1.c: 317: DimmerLights->AdjGo=command;
 12836  19F3  086C               	movf	_DimmerLights,w
 12837  19F4  3E09               	addlw	9
 12838  19F5  0086               	movwf	6
 12839  19F6  3001               	movlw	1	; select bank2/3
 12840  19F7  0087               	movwf	7
 12841  19F8  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12842  19F9  1101               	bcf	1,2
 12843  19FA  1D03               	skipz
 12844  19FB  1501               	bsf	1,2
 12845  19FC  0008               	return
 12846  19FD                     __end_of_setDimmerLights_TriggerERROR:	
 12847                           
 12848                           	psect	text66
 12849  1E94                     __ptext66:	
 12850 ;; *************** function _setDimmerLights_ERROR *****************
 12851 ;; Defined at:
 12852 ;;		line 293 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;  lights          1    wreg     unsigned char 
 12855 ;; Auto vars:     Size  Location     Type
 12856 ;;  lights          1    5[BANK0 ] unsigned char 
 12857 ;; Return value:  Size  Location     Type
 12858 ;;		None               void
 12859 ;; Registers used:
 12860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;Total ram usage:        2 bytes
 12871 ;; Hardware stack levels used:    1
 12872 ;; Hardware stack levels required when called:    6
 12873 ;; This function calls:
 12874 ;;		_DimmerLightsPointSelect
 12875 ;;		_setLED
 12876 ;;		_setLoad_StatusOff
 12877 ;;		_setRFSW_Status
 12878 ;;		_setSw_Status
 12879 ;; This function is called by:
 12880 ;;		_DimmerLights_Exceptions
 12881 ;; This function uses a non-reentrant model
 12882 ;;
 12883                           
 12884                           
 12885                           ;psect for function _setDimmerLights_ERROR
 12886  1E94                     _setDimmerLights_ERROR:	
 12887                           
 12888                           ;incstack = 0
 12889                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12890                           ;setDimmerLights_ERROR@lights stored from wreg
 12891  1E94  0020               	movlb	0	; select bank0
 12892  1E95  00A5               	movwf	setDimmerLights_ERROR@lights
 12893                           
 12894                           ;Dimmer_B1.c: 295: DimmerLightsPointSelect(lights);
 12895  1E96  0825               	movf	setDimmerLights_ERROR@lights,w
 12896  1E97  31A5  25D6  319E   	fcall	_DimmerLightsPointSelect
 12897                           
 12898                           ;Dimmer_B1.c: 296: if(DimmerLights->Status)
 12899  1E9A  0020               	movlb	0	; select bank0
 12900  1E9B  086C               	movf	_DimmerLights,w
 12901  1E9C  0086               	movwf	6
 12902  1E9D  3001               	movlw	1	; select bank2/3
 12903  1E9E  0087               	movwf	7
 12904  1E9F  1E81               	btfss	1,5
 12905  1EA0  0008               	return
 12906                           
 12907                           ;Dimmer_B1.c: 297: {
 12908                           ;Dimmer_B1.c: 298: DimmerLights->Signal=0;
 12909  1EA1  086C               	movf	_DimmerLights,w
 12910  1EA2  0086               	movwf	6
 12911  1EA3  3001               	movlw	1	; select bank2/3
 12912  1EA4  0087               	movwf	7
 12913  1EA5  1081               	bcf	1,1
 12914                           
 12915                           ;Dimmer_B1.c: 299: DimmerLights->AdjFlag=0;
 12916  1EA6  086C               	movf	_DimmerLights,w
 12917  1EA7  0086               	movwf	6
 12918  1EA8  3001               	movlw	1	; select bank2/3
 12919  1EA9  0087               	movwf	7
 12920  1EAA  1181               	bcf	1,3
 12921                           
 12922                           ;Dimmer_B1.c: 300: DimmerLights->AdjStatus=0;
 12923  1EAB  086C               	movf	_DimmerLights,w
 12924  1EAC  0086               	movwf	6
 12925  1EAD  3001               	movlw	1	; select bank2/3
 12926  1EAE  0087               	movwf	7
 12927  1EAF  1201               	bcf	1,4
 12928                           
 12929                           ;Dimmer_B1.c: 301: DimmerLights->StatusFlag=0;
 12930  1EB0  086C               	movf	_DimmerLights,w
 12931  1EB1  0086               	movwf	6
 12932  1EB2  3001               	movlw	1	; select bank2/3
 12933  1EB3  0087               	movwf	7
 12934  1EB4  1301               	bcf	1,6
 12935                           
 12936                           ;Dimmer_B1.c: 302: DimmerLights->DimmingTimeValue=3;
 12937  1EB5  3003               	movlw	3
 12938  1EB6  00A4               	movwf	??_setDimmerLights_ERROR
 12939  1EB7  086C               	movf	_DimmerLights,w
 12940  1EB8  3E02               	addlw	2
 12941  1EB9  0086               	movwf	6
 12942  1EBA  3001               	movlw	1	; select bank2/3
 12943  1EBB  0087               	movwf	7
 12944  1EBC  0824               	movf	??_setDimmerLights_ERROR,w
 12945  1EBD  0081               	movwf	1
 12946                           
 12947                           ;Dimmer_B1.c: 303: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 12948  1EBE  086C               	movf	_DimmerLights,w
 12949  1EBF  3E06               	addlw	6
 12950  1EC0  0086               	movwf	6
 12951  1EC1  3001               	movlw	1	; select bank2/3
 12952  1EC2  0087               	movwf	7
 12953  1EC3  0801               	movf	1,w
 12954  1EC4  00A4               	movwf	??_setDimmerLights_ERROR
 12955  1EC5  086C               	movf	_DimmerLights,w
 12956  1EC6  3E04               	addlw	4
 12957  1EC7  0086               	movwf	6
 12958  1EC8  3001               	movlw	1	; select bank2/3
 12959  1EC9  0087               	movwf	7
 12960  1ECA  0824               	movf	??_setDimmerLights_ERROR,w
 12961  1ECB  0081               	movwf	1
 12962                           
 12963                           ;Dimmer_B1.c: 304: Dimmer->Detect=1;
 12964  1ECC  0021               	movlb	1	; select bank1
 12965  1ECD  0839               	movf	_Dimmer^(0+128),w
 12966  1ECE  0086               	movwf	6
 12967  1ECF  0187               	clrf	7
 12968  1ED0  1401               	bsf	1,0
 12969                           
 12970                           ;Dimmer_B1.c: 305: setLoad_StatusOff(lights,1);
 12971  1ED1  0020               	movlb	0	; select bank0
 12972  1ED2  01A0               	clrf	setLoad_StatusOff@command
 12973  1ED3  0AA0               	incf	setLoad_StatusOff@command,f
 12974  1ED4  0825               	movf	setDimmerLights_ERROR@lights,w
 12975  1ED5  319A  22B9  319E   	fcall	_setLoad_StatusOff
 12976                           
 12977                           ;Dimmer_B1.c: 306: setLED(lights,1);
 12978  1ED8  0020               	movlb	0	; select bank0
 12979  1ED9  01A2               	clrf	setLED@command
 12980  1EDA  0AA2               	incf	setLED@command,f
 12981  1EDB  0825               	movf	setDimmerLights_ERROR@lights,w
 12982  1EDC  319F  27A2  319E   	fcall	_setLED
 12983                           
 12984                           ;Dimmer_B1.c: 307: setSw_Status(lights,0);
 12985  1EDF  0020               	movlb	0	; select bank0
 12986  1EE0  01A2               	clrf	setSw_Status@command
 12987  1EE1  0825               	movf	setDimmerLights_ERROR@lights,w
 12988  1EE2  31A5  2536  319E   	fcall	_setSw_Status
 12989                           
 12990                           ;Dimmer_B1.c: 308: setRFSW_Status(lights,0);
 12991  1EE5  0020               	movlb	0	; select bank0
 12992  1EE6  01A2               	clrf	setRFSW_Status@command
 12993  1EE7  0825               	movf	setDimmerLights_ERROR@lights,w
 12994  1EE8  31A5  2527         	fcall	_setRFSW_Status
 12995  1EEA  0008               	return
 12996  1EEB                     __end_of_setDimmerLights_ERROR:	
 12997                           
 12998                           	psect	text67
 12999  2575                     __ptext67:	
 13000 ;; *************** function _setDimmerLights_Clear *****************
 13001 ;; Defined at:
 13002 ;;		line 447 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 13003 ;; Parameters:    Size  Location     Type
 13004 ;;  lights          1    wreg     unsigned char 
 13005 ;;  command         1    2[BANK0 ] unsigned char 
 13006 ;; Auto vars:     Size  Location     Type
 13007 ;;  lights          1    3[BANK0 ] unsigned char 
 13008 ;; Return value:  Size  Location     Type
 13009 ;;		None               void
 13010 ;; Registers used:
 13011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13017 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;Total ram usage:        2 bytes
 13022 ;; Hardware stack levels used:    1
 13023 ;; Hardware stack levels required when called:    5
 13024 ;; This function calls:
 13025 ;;		_DimmerLightsPointSelect
 13026 ;; This function is called by:
 13027 ;;		_Load_Main
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           
 13032                           ;psect for function _setDimmerLights_Clear
 13033  2575                     _setDimmerLights_Clear:	
 13034                           
 13035                           ;incstack = 0
 13036                           ; Regs used in _setDimmerLights_Clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13037                           ;setDimmerLights_Clear@lights stored from wreg
 13038  2575  0020               	movlb	0	; select bank0
 13039  2576  00A3               	movwf	setDimmerLights_Clear@lights
 13040                           
 13041                           ;Dimmer_B1.c: 449: DimmerLightsPointSelect(lights);
 13042  2577  0823               	movf	setDimmerLights_Clear@lights,w
 13043  2578  31A5  25D6         	fcall	_DimmerLightsPointSelect
 13044                           
 13045                           ;Dimmer_B1.c: 450: DimmerLights->Clear=command;
 13046  257A  0020               	movlb	0	; select bank0
 13047  257B  086C               	movf	_DimmerLights,w
 13048  257C  3E0C               	addlw	12
 13049  257D  0086               	movwf	6
 13050  257E  3001               	movlw	1	; select bank2/3
 13051  257F  0087               	movwf	7
 13052  2580  0822               	movf	setDimmerLights_Clear@command,w
 13053  2581  1001               	bcf	1,0
 13054  2582  1D03               	skipz
 13055  2583  1401               	bsf	1,0
 13056  2584  0008               	return
 13057  2585                     __end_of_setDimmerLights_Clear:	
 13058                           
 13059                           	psect	text68
 13060  23DC                     __ptext68:	
 13061 ;; *************** function _getTemp_Safe *****************
 13062 ;; Defined at:
 13063 ;;		line 26 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\OverTemperature_B1.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;		None
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;		None
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  1    wreg      unsigned char 
 13070 ;; Registers used:
 13071 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13072 ;; Tracked objects:
 13073 ;;		On entry : 0/0
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;Total ram usage:        0 bytes
 13082 ;; Hardware stack levels used:    1
 13083 ;; Hardware stack levels required when called:    4
 13084 ;; This function calls:
 13085 ;;		Nothing
 13086 ;; This function is called by:
 13087 ;;		_Load_Main
 13088 ;;		_setPowerFault_Main
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           
 13093                           ;psect for function _getTemp_Safe
 13094  23DC                     _getTemp_Safe:	
 13095                           
 13096                           ;OverTemperature_B1.c: 28: return Temp->Safe;
 13097                           
 13098                           ;incstack = 0
 13099                           ; Regs used in _getTemp_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 13100  23DC  087D               	movf	_Temp,w
 13101  23DD  0086               	movwf	6
 13102  23DE  3001               	movlw	1	; select bank2/3
 13103  23DF  0087               	movwf	7
 13104  23E0  0E01               	swapf	1,w
 13105  23E1  3901               	andlw	1
 13106  23E2  0008               	return
 13107  23E3                     __end_of_getTemp_Safe:	
 13108                           
 13109                           	psect	text69
 13110  2401                     __ptext69:	
 13111 ;; *************** function _getPF_Safe *****************
 13112 ;; Defined at:
 13113 ;;		line 40 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\PowerFault_B1.c"
 13114 ;; Parameters:    Size  Location     Type
 13115 ;;		None
 13116 ;; Auto vars:     Size  Location     Type
 13117 ;;		None
 13118 ;; Return value:  Size  Location     Type
 13119 ;;                  1    wreg      unsigned char 
 13120 ;; Registers used:
 13121 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13122 ;; Tracked objects:
 13123 ;;		On entry : 0/0
 13124 ;;		On exit  : 0/0
 13125 ;;		Unchanged: 0/0
 13126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;Total ram usage:        0 bytes
 13132 ;; Hardware stack levels used:    1
 13133 ;; Hardware stack levels required when called:    4
 13134 ;; This function calls:
 13135 ;;		Nothing
 13136 ;; This function is called by:
 13137 ;;		_Load_Main
 13138 ;;		_setTemp_Main
 13139 ;; This function uses a non-reentrant model
 13140 ;;
 13141                           
 13142                           
 13143                           ;psect for function _getPF_Safe
 13144  2401                     _getPF_Safe:	
 13145                           
 13146                           ;PowerFault_B1.c: 42: return PF->Safe;
 13147                           
 13148                           ;incstack = 0
 13149                           ; Regs used in _getPF_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 13150  2401  087B               	movf	_PF,w
 13151  2402  0086               	movwf	6
 13152  2403  3001               	movlw	1	; select bank2/3
 13153  2404  0087               	movwf	7
 13154  2405  0C01               	rrf	1,w
 13155  2406  0C89               	rrf	9,f
 13156  2407  3901               	andlw	1
 13157  2408  0008               	return
 13158  2409                     __end_of_getPF_Safe:	
 13159                           
 13160                           	psect	text70
 13161  1B82                     __ptext70:	
 13162 ;; *************** function ___lwdiv *****************
 13163 ;; Defined at:
 13164 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  divisor         2    0[BANK0 ] unsigned int 
 13167 ;;  dividend        2    2[BANK0 ] unsigned int 
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;  quotient        2    5[BANK0 ] unsigned int 
 13170 ;;  counter         1    7[BANK0 ] unsigned char 
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  2    0[BANK0 ] unsigned int 
 13173 ;; Registers used:
 13174 ;;		wreg, status,2, status,0
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13183 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13184 ;;Total ram usage:        8 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; Hardware stack levels required when called:    4
 13187 ;; This function calls:
 13188 ;;		Nothing
 13189 ;; This function is called by:
 13190 ;;		_Load_Main
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           
 13195                           ;psect for function ___lwdiv
 13196  1B82                     ___lwdiv:	
 13197                           
 13198                           ;incstack = 0
 13199                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13200  1B82  0020               	movlb	0	; select bank0
 13201  1B83  01A5               	clrf	___lwdiv@quotient
 13202  1B84  01A6               	clrf	___lwdiv@quotient+1
 13203  1B85  0821               	movf	___lwdiv@divisor+1,w
 13204  1B86  0420               	iorwf	___lwdiv@divisor,w
 13205  1B87  1903               	skipnz
 13206  1B88  2BB2               	goto	l7894
 13207  1B89  01A7               	clrf	___lwdiv@counter
 13208  1B8A  0AA7               	incf	___lwdiv@counter,f
 13209  1B8B                     l7882:	
 13210  1B8B  1BA1               	btfsc	___lwdiv@divisor+1,7
 13211  1B8C  2B97               	goto	l7884
 13212  1B8D  3001               	movlw	1
 13213  1B8E                     u6955:	
 13214  1B8E  35A0               	lslf	___lwdiv@divisor,f
 13215  1B8F  0DA1               	rlf	___lwdiv@divisor+1,f
 13216  1B90  0B89               	decfsz	9,f
 13217  1B91  2B8E               	goto	u6955
 13218  1B92  3001               	movlw	1
 13219  1B93  00A4               	movwf	??___lwdiv
 13220  1B94  0824               	movf	??___lwdiv,w
 13221  1B95  07A7               	addwf	___lwdiv@counter,f
 13222  1B96  2B8B               	goto	l7882
 13223  1B97                     l7884:	
 13224  1B97  3001               	movlw	1
 13225  1B98                     u6975:	
 13226  1B98  35A5               	lslf	___lwdiv@quotient,f
 13227  1B99  0DA6               	rlf	___lwdiv@quotient+1,f
 13228  1B9A  0B89               	decfsz	9,f
 13229  1B9B  2B98               	goto	u6975
 13230  1B9C  0821               	movf	___lwdiv@divisor+1,w
 13231  1B9D  0223               	subwf	___lwdiv@dividend+1,w
 13232  1B9E  1D03               	skipz
 13233  1B9F  2BA2               	goto	u6985
 13234  1BA0  0820               	movf	___lwdiv@divisor,w
 13235  1BA1  0222               	subwf	___lwdiv@dividend,w
 13236  1BA2                     u6985:	
 13237  1BA2  1C03               	skipc
 13238  1BA3  2BA9               	goto	l7890
 13239  1BA4  0820               	movf	___lwdiv@divisor,w
 13240  1BA5  02A2               	subwf	___lwdiv@dividend,f
 13241  1BA6  0821               	movf	___lwdiv@divisor+1,w
 13242  1BA7  3BA3               	subwfb	___lwdiv@dividend+1,f
 13243  1BA8  1425               	bsf	___lwdiv@quotient,0
 13244  1BA9                     l7890:	
 13245  1BA9  3001               	movlw	1
 13246  1BAA                     u6995:	
 13247  1BAA  36A1               	lsrf	___lwdiv@divisor+1,f
 13248  1BAB  0CA0               	rrf	___lwdiv@divisor,f
 13249  1BAC  0B89               	decfsz	9,f
 13250  1BAD  2BAA               	goto	u6995
 13251  1BAE  3001               	movlw	1
 13252  1BAF  02A7               	subwf	___lwdiv@counter,f
 13253  1BB0  1D03               	btfss	3,2
 13254  1BB1  2B97               	goto	l7884
 13255  1BB2                     l7894:	
 13256  1BB2  0826               	movf	___lwdiv@quotient+1,w
 13257  1BB3  01A1               	clrf	?___lwdiv+1
 13258  1BB4  07A1               	addwf	?___lwdiv+1,f
 13259  1BB5  0825               	movf	___lwdiv@quotient,w
 13260  1BB6  01A0               	clrf	?___lwdiv
 13261  1BB7  07A0               	addwf	?___lwdiv,f
 13262  1BB8  0008               	return
 13263  1BB9                     __end_of___lwdiv:	
 13264                           
 13265                           	psect	text71
 13266  24D7                     __ptext71:	
 13267 ;; *************** function _Load_Initialization *****************
 13268 ;; Defined at:
 13269 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1.
      +2.1\Release\OverLoad_B1.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;		None
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;		None
 13274 ;; Return value:  Size  Location     Type
 13275 ;;		None               void
 13276 ;; Registers used:
 13277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13286 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13287 ;;Total ram usage:        1 bytes
 13288 ;; Hardware stack levels used:    1
 13289 ;; Hardware stack levels required when called:    5
 13290 ;; This function calls:
 13291 ;;		_setLoad_AH_AL_Restore
 13292 ;; This function is called by:
 13293 ;;		_main
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297                           
 13298                           ;psect for function _Load_Initialization
 13299  24D7                     _Load_Initialization:	
 13300                           
 13301                           ;OverLoad_B1.c: 10: Load=&Load1;
 13302                           
 13303                           ;incstack = 0
 13304                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13305  24D7  30A0               	movlw	_Load1& (0+255)
 13306  24D8  0020               	movlb	0	; select bank0
 13307  24D9  00A2               	movwf	??_Load_Initialization
 13308  24DA  0822               	movf	??_Load_Initialization,w
 13309  24DB  00EE               	movwf	_Load
 13310                           
 13311                           ;OverLoad_B1.c: 11: Load->Safe=1;
 13312  24DC  086E               	movf	_Load,w
 13313  24DD  0086               	movwf	6
 13314  24DE  3002               	movlw	2	; select bank4/5
 13315  24DF  0087               	movwf	7
 13316  24E0  1581               	bsf	1,3
 13317                           
 13318                           ;OverLoad_B1.c: 12: setLoad_AH_AL_Restore();
 13319  24E1  3198  20A1         	fcall	_setLoad_AH_AL_Restore
 13320  24E3  0008               	return
 13321  24E4                     __end_of_Load_Initialization:	
 13322                           
 13323                           	psect	text72
 13324  18A1                     __ptext72:	
 13325 ;; *************** function _setLoad_AH_AL_Restore *****************
 13326 ;; Defined at:
 13327 ;;		line 310 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;		None
 13330 ;; Auto vars:     Size  Location     Type
 13331 ;;  i               1    1[BANK0 ] unsigned char 
 13332 ;; Return value:  Size  Location     Type
 13333 ;;		None               void
 13334 ;; Registers used:
 13335 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13336 ;; Tracked objects:
 13337 ;;		On entry : 0/0
 13338 ;;		On exit  : 0/0
 13339 ;;		Unchanged: 0/0
 13340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;Total ram usage:        2 bytes
 13346 ;; Hardware stack levels used:    1
 13347 ;; Hardware stack levels required when called:    4
 13348 ;; This function calls:
 13349 ;;		Nothing
 13350 ;; This function is called by:
 13351 ;;		_Load_Initialization
 13352 ;;		_Load_Main
 13353 ;; This function uses a non-reentrant model
 13354 ;;
 13355                           
 13356                           
 13357                           ;psect for function _setLoad_AH_AL_Restore
 13358  18A1                     _setLoad_AH_AL_Restore:	
 13359                           
 13360                           ;OverLoad_B1.c: 312: char i;
 13361                           ;OverLoad_B1.c: 313: for(i=0 ; i<5 ;i++)
 13362                           
 13363                           ;incstack = 0
 13364                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
 13365  18A1  0020               	movlb	0	; select bank0
 13366  18A2  01A1               	clrf	setLoad_AH_AL_Restore@i
 13367  18A3                     L13:	
 13368  18A3  3005               	movlw	5
 13369  18A4  0221               	subwf	setLoad_AH_AL_Restore@i,w
 13370  18A5  1803               	btfsc	3,0
 13371  18A6  0008               	return
 13372                           
 13373                           ;OverLoad_B1.c: 314: {
 13374                           ;OverLoad_B1.c: 315: Load->AH[i]=0;
 13375  18A7  3521               	lslf	setLoad_AH_AL_Restore@i,w
 13376  18A8  3E08               	addlw	8
 13377  18A9  076E               	addwf	_Load,w
 13378  18AA  00A0               	movwf	??_setLoad_AH_AL_Restore
 13379  18AB  0820               	movf	??_setLoad_AH_AL_Restore,w
 13380  18AC  0086               	movwf	6
 13381  18AD  3002               	movlw	2	; select bank4/5
 13382  18AE  0087               	movwf	7
 13383  18AF  3000               	movlw	0
 13384  18B0  3FC0               	movwi [0]fsr1
 13385  18B1  3FC1               	movwi [1]fsr1
 13386                           
 13387                           ;OverLoad_B1.c: 316: Load->AL[i]=0xffff;
 13388  18B2  3521               	lslf	setLoad_AH_AL_Restore@i,w
 13389  18B3  3E1A               	addlw	26
 13390  18B4  076E               	addwf	_Load,w
 13391  18B5  00A0               	movwf	??_setLoad_AH_AL_Restore
 13392  18B6  0820               	movf	??_setLoad_AH_AL_Restore,w
 13393  18B7  0086               	movwf	6
 13394  18B8  3002               	movlw	2	; select bank4/5
 13395  18B9  0087               	movwf	7
 13396  18BA  30FF               	movlw	255
 13397  18BB  3FC0               	movwi [0]fsr1
 13398  18BC  30FF               	movlw	255
 13399  18BD  3FC1               	movwi [1]fsr1
 13400  18BE  3001               	movlw	1
 13401  18BF  00A0               	movwf	??_setLoad_AH_AL_Restore
 13402  18C0  0820               	movf	??_setLoad_AH_AL_Restore,w
 13403  18C1  07A1               	addwf	setLoad_AH_AL_Restore@i,f
 13404  18C2  28A3               	goto	L13
 13405  18C3                     __end_of_setLoad_AH_AL_Restore:	
 13406                           
 13407                           	psect	text73
 13408  24CB                     __ptext73:	
 13409 ;; *************** function _LED_Main *****************
 13410 ;; Defined at:
 13411 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\LED_B1.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;		None
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;		None               void
 13418 ;; Registers used:
 13419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13429 ;;Total ram usage:        0 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:    6
 13432 ;; This function calls:
 13433 ;;		_setLED_Main
 13434 ;; This function is called by:
 13435 ;;		_main
 13436 ;; This function uses a non-reentrant model
 13437 ;;
 13438                           
 13439                           
 13440                           ;psect for function _LED_Main
 13441  24CB                     _LED_Main:	
 13442                           
 13443                           ;LED_B1.c: 54: setLED_Main(1);
 13444                           
 13445                           ;incstack = 0
 13446                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13447  24CB  3001               	movlw	1
 13448  24CC  319B  23F3  31A4   	fcall	_setLED_Main
 13449                           
 13450                           ;LED_B1.c: 57: setLED_Main(2);
 13451  24CF  3002               	movlw	2
 13452  24D0  319B  23F3  31A4   	fcall	_setLED_Main
 13453                           
 13454                           ;LED_B1.c: 63: setLED_Main(99);
 13455  24D3  3063               	movlw	99
 13456  24D4  319B  23F3         	fcall	_setLED_Main
 13457  24D6  0008               	return
 13458  24D7                     __end_of_LED_Main:	
 13459                           
 13460                           	psect	text74
 13461  1BF3                     __ptext74:	
 13462 ;; *************** function _setLED_Main *****************
 13463 ;; Defined at:
 13464 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\LED_B1.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  led             1    wreg     unsigned char 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  led             1    4[BANK0 ] unsigned char 
 13469 ;; Return value:  Size  Location     Type
 13470 ;;		None               void
 13471 ;; Registers used:
 13472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13473 ;; Tracked objects:
 13474 ;;		On entry : 0/0
 13475 ;;		On exit  : 0/0
 13476 ;;		Unchanged: 0/0
 13477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;Total ram usage:        3 bytes
 13483 ;; Hardware stack levels used:    1
 13484 ;; Hardware stack levels required when called:    5
 13485 ;; This function calls:
 13486 ;;		_LedPointSelect
 13487 ;; This function is called by:
 13488 ;;		_LED_Main
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           
 13493                           ;psect for function _setLED_Main
 13494  1BF3                     _setLED_Main:	
 13495                           
 13496                           ;incstack = 0
 13497                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13498                           ;setLED_Main@led stored from wreg
 13499  1BF3  0020               	movlb	0	; select bank0
 13500  1BF4  00A4               	movwf	setLED_Main@led
 13501                           
 13502                           ;LED_B1.c: 216: LedPointSelect(led);
 13503  1BF5  0824               	movf	setLED_Main@led,w
 13504  1BF6  3198  207F  319B   	fcall	_LedPointSelect
 13505                           
 13506                           ;LED_B1.c: 217: if(LED->GO)
 13507  1BF9  0021               	movlb	1	; select bank1
 13508  1BFA  083B               	movf	_LED^(0+128),w
 13509  1BFB  0086               	movwf	6
 13510  1BFC  0187               	clrf	7
 13511  1BFD  1C81               	btfss	1,1
 13512  1BFE  0008               	return
 13513                           
 13514                           ;LED_B1.c: 218: {
 13515                           ;LED_B1.c: 219: LED->Time++;
 13516  1BFF  0A3B               	incf	_LED^(0+128),w
 13517  1C00  0086               	movwf	6
 13518  1C01  0187               	clrf	7
 13519  1C02  3001               	movlw	1
 13520  1C03  0781               	addwf	1,f
 13521  1C04  3141               	addfsr 1,1
 13522  1C05  1803               	skipnc
 13523  1C06  0A81               	incf	1,f
 13524                           
 13525                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 13526  1C07  0A3B               	incf	_LED^(0+128),w
 13527  1C08  0086               	movwf	6
 13528  1C09  0187               	clrf	7
 13529  1C0A  3F40               	moviw [0]fsr1
 13530  1C0B  0020               	movlb	0	; select bank0
 13531  1C0C  00A2               	movwf	??_setLED_Main
 13532  1C0D  3F41               	moviw [1]fsr1
 13533  1C0E  00A3               	movwf	??_setLED_Main+1
 13534  1C0F  3000               	movlw	0
 13535  1C10  0223               	subwf	??_setLED_Main+1,w
 13536  1C11  3032               	movlw	50
 13537  1C12  1903               	skipnz
 13538  1C13  0222               	subwf	??_setLED_Main,w
 13539  1C14  1C03               	skipc
 13540  1C15  0008               	return
 13541                           
 13542                           ;LED_B1.c: 221: {
 13543                           ;LED_B1.c: 222: LED->Time=0;
 13544  1C16  0021               	movlb	1	; select bank1
 13545  1C17  0A3B               	incf	_LED^(0+128),w
 13546  1C18  0086               	movwf	6
 13547  1C19  0187               	clrf	7
 13548  1C1A  3000               	movlw	0
 13549  1C1B  3FC0               	movwi [0]fsr1
 13550  1C1C  3FC1               	movwi [1]fsr1
 13551                           
 13552                           ;LED_B1.c: 224: if(led == 1)
 13553  1C1D  0020               	movlb	0	; select bank0
 13554  1C1E  0824               	movf	setLED_Main@led,w
 13555  1C1F  3A01               	xorlw	1
 13556  1C20  1D03               	skipz
 13557  1C21  2C25               	goto	l7458
 13558                           
 13559                           ;LED_B1.c: 225: {
 13560                           ;LED_B1.c: 226: RA3=~RA3;
 13561  1C22  3008               	movlw	8
 13562  1C23  068C               	xorwf	12,f
 13563                           
 13564                           ;LED_B1.c: 227: }
 13565  1C24  0008               	return
 13566  1C25                     l7458:	
 13567                           
 13568                           ;LED_B1.c: 230: else if(led == 2)
 13569  1C25  0824               	movf	setLED_Main@led,w
 13570  1C26  3A02               	xorlw	2
 13571  1C27  1D03               	skipz
 13572  1C28  2C2C               	goto	l7462
 13573                           
 13574                           ;LED_B1.c: 231: {
 13575                           ;LED_B1.c: 232: RC7=~RC7;
 13576  1C29  3080               	movlw	128
 13577  1C2A  068E               	xorwf	14,f
 13578                           
 13579                           ;LED_B1.c: 233: }
 13580  1C2B  0008               	return
 13581  1C2C                     l7462:	
 13582                           
 13583                           ;LED_B1.c: 242: else if(led == 99)
 13584  1C2C  0824               	movf	setLED_Main@led,w
 13585  1C2D  3A63               	xorlw	99
 13586  1C2E  1D03               	skipz
 13587  1C2F  0008               	return
 13588                           
 13589                           ;LED_B1.c: 243: {
 13590                           ;LED_B1.c: 244: RB5=~RB5;
 13591  1C30  3020               	movlw	32
 13592  1C31  068D               	xorwf	13,f
 13593  1C32  0008               	return
 13594  1C33                     __end_of_setLED_Main:	
 13595                           
 13596                           	psect	text75
 13597  24BF                     __ptext75:	
 13598 ;; *************** function _LED_Initialization *****************
 13599 ;; Defined at:
 13600 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\LED_B1.c"
 13601 ;; Parameters:    Size  Location     Type
 13602 ;;		None
 13603 ;; Auto vars:     Size  Location     Type
 13604 ;;		None
 13605 ;; Return value:  Size  Location     Type
 13606 ;;		None               void
 13607 ;; Registers used:
 13608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13609 ;; Tracked objects:
 13610 ;;		On entry : 0/0
 13611 ;;		On exit  : 0/0
 13612 ;;		Unchanged: 0/0
 13613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13618 ;;Total ram usage:        0 bytes
 13619 ;; Hardware stack levels used:    1
 13620 ;; Hardware stack levels required when called:    7
 13621 ;; This function calls:
 13622 ;;		_setLED_Initialization
 13623 ;; This function is called by:
 13624 ;;		_main
 13625 ;; This function uses a non-reentrant model
 13626 ;;
 13627                           
 13628                           
 13629                           ;psect for function _LED_Initialization
 13630  24BF                     _LED_Initialization:	
 13631                           
 13632                           ;LED_B1.c: 38: setLED_Initialization(1);
 13633                           
 13634                           ;incstack = 0
 13635                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13636  24BF  3001               	movlw	1
 13637  24C0  31A5  25C5  31A4   	fcall	_setLED_Initialization
 13638                           
 13639                           ;LED_B1.c: 41: setLED_Initialization(2);
 13640  24C3  3002               	movlw	2
 13641  24C4  31A5  25C5  31A4   	fcall	_setLED_Initialization
 13642                           
 13643                           ;LED_B1.c: 47: setLED_Initialization(99);
 13644  24C7  3063               	movlw	99
 13645  24C8  31A5  25C5         	fcall	_setLED_Initialization
 13646  24CA  0008               	return
 13647  24CB                     __end_of_LED_Initialization:	
 13648                           
 13649                           	psect	text76
 13650  25C5                     __ptext76:	
 13651 ;; *************** function _setLED_Initialization *****************
 13652 ;; Defined at:
 13653 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\LED_B1.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;  led             1    wreg     unsigned char 
 13656 ;; Auto vars:     Size  Location     Type
 13657 ;;  led             1    4[BANK0 ] unsigned char 
 13658 ;; Return value:  Size  Location     Type
 13659 ;;		None               void
 13660 ;; Registers used:
 13661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13662 ;; Tracked objects:
 13663 ;;		On entry : 0/0
 13664 ;;		On exit  : 0/0
 13665 ;;		Unchanged: 0/0
 13666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13668 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13670 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13671 ;;Total ram usage:        1 bytes
 13672 ;; Hardware stack levels used:    1
 13673 ;; Hardware stack levels required when called:    6
 13674 ;; This function calls:
 13675 ;;		_LedPointSelect
 13676 ;;		_setLED
 13677 ;; This function is called by:
 13678 ;;		_LED_Initialization
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           
 13683                           ;psect for function _setLED_Initialization
 13684  25C5                     _setLED_Initialization:	
 13685                           
 13686                           ;incstack = 0
 13687                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13688                           ;setLED_Initialization@led stored from wreg
 13689  25C5  0020               	movlb	0	; select bank0
 13690  25C6  00A4               	movwf	setLED_Initialization@led
 13691                           
 13692                           ;LED_B1.c: 69: LedPointSelect(led);
 13693  25C7  0824               	movf	setLED_Initialization@led,w
 13694  25C8  3198  207F  31A5   	fcall	_LedPointSelect
 13695                           
 13696                           ;LED_B1.c: 70: LED->Enable=1;
 13697  25CB  0021               	movlb	1	; select bank1
 13698  25CC  083B               	movf	_LED^(0+128),w
 13699  25CD  0086               	movwf	6
 13700  25CE  0187               	clrf	7
 13701  25CF  1401               	bsf	1,0
 13702                           
 13703                           ;LED_B1.c: 71: setLED(led,0);
 13704  25D0  0020               	movlb	0	; select bank0
 13705  25D1  01A2               	clrf	setLED@command
 13706  25D2  0824               	movf	setLED_Initialization@led,w
 13707  25D3  319F  27A2         	fcall	_setLED
 13708  25D5  0008               	return
 13709  25D6                     __end_of_setLED_Initialization:	
 13710                           
 13711                           	psect	text77
 13712  1DC1                     __ptext77:	
 13713 ;; *************** function _Flash_Memory_Main *****************
 13714 ;; Defined at:
 13715 ;;		line 474 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 13716 ;; Parameters:    Size  Location     Type
 13717 ;;		None
 13718 ;; Auto vars:     Size  Location     Type
 13719 ;;		None
 13720 ;; Return value:  Size  Location     Type
 13721 ;;		None               void
 13722 ;; Registers used:
 13723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13724 ;; Tracked objects:
 13725 ;;		On entry : 0/0
 13726 ;;		On exit  : 0/0
 13727 ;;		Unchanged: 0/0
 13728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13733 ;;Total ram usage:        0 bytes
 13734 ;; Hardware stack levels used:    1
 13735 ;; Hardware stack levels required when called:    7
 13736 ;; This function calls:
 13737 ;;		_Flash_Memory_Modify
 13738 ;; This function is called by:
 13739 ;;		_main
 13740 ;; This function uses a non-reentrant model
 13741 ;;
 13742                           
 13743                           
 13744                           ;psect for function _Flash_Memory_Main
 13745  1DC1                     _Flash_Memory_Main:	
 13746                           
 13747                           ;MCU_16f1518_B1.c: 476: if(Memory->GO)
 13748                           
 13749                           ;incstack = 0
 13750                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13751  1DC1  0021               	movlb	1	; select bank1
 13752  1DC2  0868               	movf	_Memory^(0+128),w
 13753  1DC3  3E22               	addlw	34
 13754  1DC4  0086               	movwf	6
 13755  1DC5  3002               	movlw	2	; select bank4/5
 13756  1DC6  0087               	movwf	7
 13757  1DC7  1C81               	btfss	1,1
 13758  1DC8  0008               	return
 13759                           
 13760                           ;MCU_16f1518_B1.c: 477: {
 13761                           ;MCU_16f1518_B1.c: 478: if(Memory->Modify)
 13762  1DC9  0868               	movf	_Memory^(0+128),w
 13763  1DCA  3E22               	addlw	34
 13764  1DCB  0086               	movwf	6
 13765  1DCC  3002               	movlw	2	; select bank4/5
 13766  1DCD  0087               	movwf	7
 13767  1DCE  1C01               	btfss	1,0
 13768  1DCF  2DFE               	goto	l9904
 13769                           
 13770                           ;MCU_16f1518_B1.c: 479: {
 13771                           ;MCU_16f1518_B1.c: 480: Memory->Time++;
 13772  1DD0  0868               	movf	_Memory^(0+128),w
 13773  1DD1  3E23               	addlw	35
 13774  1DD2  0086               	movwf	6
 13775  1DD3  3002               	movlw	2	; select bank4/5
 13776  1DD4  0087               	movwf	7
 13777  1DD5  3001               	movlw	1
 13778  1DD6  0781               	addwf	1,f
 13779  1DD7  3141               	addfsr 1,1
 13780  1DD8  1803               	skipnc
 13781  1DD9  0A81               	incf	1,f
 13782                           
 13783                           ;MCU_16f1518_B1.c: 481: if(Memory->Time == 25)
 13784  1DDA  0868               	movf	_Memory^(0+128),w
 13785  1DDB  3E23               	addlw	35
 13786  1DDC  0086               	movwf	6
 13787  1DDD  3002               	movlw	2	; select bank4/5
 13788  1DDE  0087               	movwf	7
 13789  1DDF  3F40               	moviw [0]fsr1
 13790  1DE0  3A19               	xorlw	25
 13791  1DE1  1D03               	skipz
 13792  1DE2  2DE5               	goto	u10035
 13793  1DE3  3F41               	moviw [1]fsr1
 13794  1DE4  3A00               	xorlw	0
 13795  1DE5                     u10035:	
 13796  1DE5  1D03               	skipz
 13797  1DE6  0008               	return
 13798                           
 13799                           ;MCU_16f1518_B1.c: 482: {
 13800                           ;MCU_16f1518_B1.c: 483: Memory->Time=0;
 13801  1DE7  0868               	movf	_Memory^(0+128),w
 13802  1DE8  3E23               	addlw	35
 13803  1DE9  0086               	movwf	6
 13804  1DEA  3002               	movlw	2	; select bank4/5
 13805  1DEB  0087               	movwf	7
 13806  1DEC  3000               	movlw	0
 13807  1DED  3FC0               	movwi [0]fsr1
 13808  1DEE  3FC1               	movwi [1]fsr1
 13809                           
 13810                           ;MCU_16f1518_B1.c: 484: Memory->Modify=0;
 13811  1DEF  0868               	movf	_Memory^(0+128),w
 13812  1DF0  3E22               	addlw	34
 13813  1DF1  0086               	movwf	6
 13814  1DF2  3002               	movlw	2	; select bank4/5
 13815  1DF3  0087               	movwf	7
 13816  1DF4  1001               	bcf	1,0
 13817                           
 13818                           ;MCU_16f1518_B1.c: 485: Memory->GO=0;
 13819  1DF5  0868               	movf	_Memory^(0+128),w
 13820  1DF6  3E22               	addlw	34
 13821  1DF7  0086               	movwf	6
 13822  1DF8  3002               	movlw	2	; select bank4/5
 13823  1DF9  0087               	movwf	7
 13824  1DFA  1081               	bcf	1,1
 13825                           
 13826                           ;MCU_16f1518_B1.c: 486: Flash_Memory_Modify();
 13827  1DFB  3192  220A         	fcall	_Flash_Memory_Modify
 13828                           
 13829                           ;MCU_16f1518_B1.c: 488: }
 13830                           ;MCU_16f1518_B1.c: 489: }
 13831  1DFD  0008               	return
 13832  1DFE                     l9904:	
 13833                           
 13834                           ;MCU_16f1518_B1.c: 490: else
 13835                           ;MCU_16f1518_B1.c: 491: {
 13836                           ;MCU_16f1518_B1.c: 492: Memory->GO=0;
 13837  1DFE  0021               	movlb	1	; select bank1
 13838  1DFF  0868               	movf	_Memory^(0+128),w
 13839  1E00  3E22               	addlw	34
 13840  1E01  0086               	movwf	6
 13841  1E02  3002               	movlw	2	; select bank4/5
 13842  1E03  0087               	movwf	7
 13843  1E04  1081               	bcf	1,1
 13844  1E05  0008               	return
 13845  1E06                     __end_of_Flash_Memory_Main:	
 13846                           
 13847                           	psect	text78
 13848  120A                     __ptext78:	
 13849 ;; *************** function _Flash_Memory_Modify *****************
 13850 ;; Defined at:
 13851 ;;		line 549 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;		None
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;  i               1    6[BANK0 ] unsigned char 
 13856 ;; Return value:  Size  Location     Type
 13857 ;;		None               void
 13858 ;; Registers used:
 13859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13860 ;; Tracked objects:
 13861 ;;		On entry : 0/0
 13862 ;;		On exit  : 0/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13867 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13868 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13869 ;;Total ram usage:        3 bytes
 13870 ;; Hardware stack levels used:    1
 13871 ;; Hardware stack levels required when called:    6
 13872 ;; This function calls:
 13873 ;;		_Flash_Memory_Erasing
 13874 ;;		_Flash_Memory_Read
 13875 ;;		_Flash_Memory_Write
 13876 ;; This function is called by:
 13877 ;;		_Flash_Memory_Main
 13878 ;; This function uses a non-reentrant model
 13879 ;;
 13880                           
 13881                           
 13882                           ;psect for function _Flash_Memory_Modify
 13883  120A                     _Flash_Memory_Modify:	
 13884                           
 13885                           ;MCU_16f1518_B1.c: 551: char i;
 13886                           ;MCU_16f1518_B1.c: 552: for(i=0;i<32;i++)
 13887                           
 13888                           ;incstack = 0
 13889                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13890  120A  0020               	movlb	0	; select bank0
 13891  120B  01A6               	clrf	Flash_Memory_Modify@i
 13892  120C  3020               	movlw	32
 13893  120D  0226               	subwf	Flash_Memory_Modify@i,w
 13894  120E  1803               	btfsc	3,0
 13895  120F  2A29               	goto	l9416
 13896  1210                     l9410:	
 13897                           
 13898                           ;MCU_16f1518_B1.c: 553: {
 13899                           ;MCU_16f1518_B1.c: 554: Memory->Data[i]=Flash_Memory_Read(i);
 13900  1210  0826               	movf	Flash_Memory_Modify@i,w
 13901  1211  31A6  26DF  3192   	fcall	_Flash_Memory_Read
 13902  1214  0020               	movlb	0	; select bank0
 13903  1215  00A4               	movwf	??_Flash_Memory_Modify
 13904  1216  0826               	movf	Flash_Memory_Modify@i,w
 13905  1217  0021               	movlb	1	; select bank1
 13906  1218  0768               	addwf	_Memory^(0+128),w
 13907  1219  0020               	movlb	0	; select bank0
 13908  121A  00A5               	movwf	??_Flash_Memory_Modify+1
 13909  121B  0825               	movf	??_Flash_Memory_Modify+1,w
 13910  121C  0086               	movwf	6
 13911  121D  3002               	movlw	2	; select bank4/5
 13912  121E  0087               	movwf	7
 13913  121F  0824               	movf	??_Flash_Memory_Modify,w
 13914  1220  0081               	movwf	1
 13915  1221  3001               	movlw	1
 13916  1222  00A4               	movwf	??_Flash_Memory_Modify
 13917  1223  0824               	movf	??_Flash_Memory_Modify,w
 13918  1224  07A6               	addwf	Flash_Memory_Modify@i,f
 13919  1225  3020               	movlw	32
 13920  1226  0226               	subwf	Flash_Memory_Modify@i,w
 13921  1227  1C03               	skipc
 13922  1228  2A10               	goto	l9410
 13923  1229                     l9416:	
 13924                           
 13925                           ;MCU_16f1518_B1.c: 555: }
 13926                           ;MCU_16f1518_B1.c: 556: Memory->Data[0]=Product->Data[12];
 13927  1229  086F               	movf	_Product,w
 13928  122A  3E0C               	addlw	12
 13929  122B  0086               	movwf	6
 13930  122C  3001               	movlw	1	; select bank2/3
 13931  122D  0087               	movwf	7
 13932  122E  0801               	movf	1,w
 13933  122F  00A4               	movwf	??_Flash_Memory_Modify
 13934  1230  0021               	movlb	1	; select bank1
 13935  1231  0868               	movf	_Memory^(0+128),w
 13936  1232  0086               	movwf	6
 13937  1233  3002               	movlw	2	; select bank4/5
 13938  1234  0087               	movwf	7
 13939  1235  0020               	movlb	0	; select bank0
 13940  1236  0824               	movf	??_Flash_Memory_Modify,w
 13941  1237  0081               	movwf	1
 13942                           
 13943                           ;MCU_16f1518_B1.c: 557: Memory->Data[1]=Product->Data[13];
 13944  1238  086F               	movf	_Product,w
 13945  1239  3E0D               	addlw	13
 13946  123A  0086               	movwf	6
 13947  123B  3001               	movlw	1	; select bank2/3
 13948  123C  0087               	movwf	7
 13949  123D  0801               	movf	1,w
 13950  123E  00A4               	movwf	??_Flash_Memory_Modify
 13951  123F  0021               	movlb	1	; select bank1
 13952  1240  0A68               	incf	_Memory^(0+128),w
 13953  1241  0086               	movwf	6
 13954  1242  3002               	movlw	2	; select bank4/5
 13955  1243  0087               	movwf	7
 13956  1244  0020               	movlb	0	; select bank0
 13957  1245  0824               	movf	??_Flash_Memory_Modify,w
 13958  1246  0081               	movwf	1
 13959                           
 13960                           ;MCU_16f1518_B1.c: 558: Memory->Data[2]=Product->Data[14];
 13961  1247  086F               	movf	_Product,w
 13962  1248  3E0E               	addlw	14
 13963  1249  0086               	movwf	6
 13964  124A  3001               	movlw	1	; select bank2/3
 13965  124B  0087               	movwf	7
 13966  124C  0801               	movf	1,w
 13967  124D  00A4               	movwf	??_Flash_Memory_Modify
 13968  124E  0021               	movlb	1	; select bank1
 13969  124F  0868               	movf	_Memory^(0+128),w
 13970  1250  3E02               	addlw	2
 13971  1251  0086               	movwf	6
 13972  1252  3002               	movlw	2	; select bank4/5
 13973  1253  0087               	movwf	7
 13974  1254  0020               	movlb	0	; select bank0
 13975  1255  0824               	movf	??_Flash_Memory_Modify,w
 13976  1256  0081               	movwf	1
 13977                           
 13978                           ;MCU_16f1518_B1.c: 564: if(Memory->LoopSave)
 13979  1257  0021               	movlb	1	; select bank1
 13980  1258  0868               	movf	_Memory^(0+128),w
 13981  1259  3E22               	addlw	34
 13982  125A  0086               	movwf	6
 13983  125B  3002               	movlw	2	; select bank4/5
 13984  125C  0087               	movwf	7
 13985  125D  1D01               	btfss	1,2
 13986  125E  2A70               	goto	l9420
 13987                           
 13988                           ;MCU_16f1518_B1.c: 565: {
 13989                           ;MCU_16f1518_B1.c: 566: Memory->LoopSave=0;
 13990  125F  0868               	movf	_Memory^(0+128),w
 13991  1260  3E22               	addlw	34
 13992  1261  0086               	movwf	6
 13993  1262  3002               	movlw	2	; select bank4/5
 13994  1263  0087               	movwf	7
 13995  1264  1101               	bcf	1,2
 13996                           
 13997                           ;MCU_16f1518_B1.c: 567: TMain->FirstOpen=0;
 13998  1265  0869               	movf	_TMain^(0+128),w
 13999  1266  0086               	movwf	6
 14000  1267  3001               	movlw	1	; select bank2/3
 14001  1268  0087               	movwf	7
 14002  1269  1281               	bcf	1,5
 14003                           
 14004                           ;MCU_16f1518_B1.c: 568: TMain->First=0;
 14005  126A  0869               	movf	_TMain^(0+128),w
 14006  126B  3E03               	addlw	3
 14007  126C  0086               	movwf	6
 14008  126D  3001               	movlw	1	; select bank2/3
 14009  126E  0087               	movwf	7
 14010  126F  1081               	bcf	1,1
 14011  1270                     l9420:	
 14012                           
 14013                           ;MCU_16f1518_B1.c: 570: }
 14014                           ;MCU_16f1518_B1.c: 571: GIE=0;
 14015  1270  138B               	bcf	11,7	;volatile
 14016                           
 14017                           ;MCU_16f1518_B1.c: 572: Flash_Memory_Erasing();
 14018  1271  31A4  24B3  3192   	fcall	_Flash_Memory_Erasing
 14019                           
 14020                           ;MCU_16f1518_B1.c: 573: Flash_Memory_Write();
 14021  1274  319A  22EA         	fcall	_Flash_Memory_Write
 14022                           
 14023                           ;MCU_16f1518_B1.c: 574: GIE=1;
 14024  1276  178B               	bsf	11,7	;volatile
 14025  1277  0008               	return
 14026  1278                     __end_of_Flash_Memory_Modify:	
 14027                           
 14028                           	psect	text79
 14029  24B3                     __ptext79:	
 14030 ;; *************** function _Flash_Memory_Erasing *****************
 14031 ;; Defined at:
 14032 ;;		line 538 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 14033 ;; Parameters:    Size  Location     Type
 14034 ;;		None
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;		None
 14037 ;; Return value:  Size  Location     Type
 14038 ;;		None               void
 14039 ;; Registers used:
 14040 ;;		wreg, status,2, status,0, pclath, cstack
 14041 ;; Tracked objects:
 14042 ;;		On entry : 0/0
 14043 ;;		On exit  : 0/0
 14044 ;;		Unchanged: 0/0
 14045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14050 ;;Total ram usage:        0 bytes
 14051 ;; Hardware stack levels used:    1
 14052 ;; Hardware stack levels required when called:    5
 14053 ;; This function calls:
 14054 ;;		_Flash_Memory_Unlock
 14055 ;; This function is called by:
 14056 ;;		_Flash_Memory_Modify
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           
 14061                           ;psect for function _Flash_Memory_Erasing
 14062  24B3                     _Flash_Memory_Erasing:	
 14063                           
 14064                           ;MCU_16f1518_B1.c: 540: CFGS=0;
 14065                           
 14066                           ;incstack = 0
 14067                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 14068  24B3  0023               	movlb	3	; select bank3
 14069  24B4  1315               	bcf	21,6	;volatile
 14070                           
 14071                           ;MCU_16f1518_B1.c: 541: PMADRH=0x30;
 14072  24B5  3030               	movlw	48
 14073  24B6  0092               	movwf	18	;volatile
 14074                           
 14075                           ;MCU_16f1518_B1.c: 542: PMADRL=0x00;
 14076  24B7  0191               	clrf	17	;volatile
 14077                           
 14078                           ;MCU_16f1518_B1.c: 543: FREE=1;
 14079  24B8  1615               	bsf	21,4	;volatile
 14080                           
 14081                           ;MCU_16f1518_B1.c: 544: WREN=1;
 14082  24B9  1515               	bsf	21,2	;volatile
 14083                           
 14084                           ;MCU_16f1518_B1.c: 545: Flash_Memory_Unlock();
 14085  24BA  31A4  2419         	fcall	_Flash_Memory_Unlock
 14086                           
 14087                           ;MCU_16f1518_B1.c: 546: WREN=0;
 14088  24BC  0023               	movlb	3	; select bank3
 14089  24BD  1115               	bcf	21,2	;volatile
 14090  24BE  0008               	return
 14091  24BF                     __end_of_Flash_Memory_Erasing:	
 14092                           
 14093                           	psect	text80
 14094  0CD7                     __ptext80:	
 14095 ;; *************** function _Flash_Memory_Initialization *****************
 14096 ;; Defined at:
 14097 ;;		line 429 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;		None
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;  i               1   62[BANK0 ] unsigned char 
 14102 ;; Return value:  Size  Location     Type
 14103 ;;		None               void
 14104 ;; Registers used:
 14105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14115 ;;Total ram usage:        2 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    7
 14118 ;; This function calls:
 14119 ;;		_Flash_Memory_Read
 14120 ;;		_Flash_Memory_Write
 14121 ;;		_setPercentValue
 14122 ;; This function is called by:
 14123 ;;		_main
 14124 ;; This function uses a non-reentrant model
 14125 ;;
 14126                           
 14127                           
 14128                           ;psect for function _Flash_Memory_Initialization
 14129  0CD7                     _Flash_Memory_Initialization:	
 14130                           
 14131                           ;MCU_16f1518_B1.c: 431: char i;
 14132                           ;MCU_16f1518_B1.c: 432: if(Flash_Memory_Read(31) == 0xaa)
 14133                           
 14134                           ;incstack = 0
 14135                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14136  0CD7  301F               	movlw	31
 14137  0CD8  31A6  26DF  318C   	fcall	_Flash_Memory_Read
 14138  0CDB  3AAA               	xorlw	170
 14139  0CDC  1D03               	skipz
 14140  0CDD  2D50               	goto	l9762
 14141                           
 14142                           ;MCU_16f1518_B1.c: 433: {
 14143                           ;MCU_16f1518_B1.c: 434: Product->Data[12]=Flash_Memory_Read(0);
 14144  0CDE  3000               	movlw	0
 14145  0CDF  31A6  26DF  318C   	fcall	_Flash_Memory_Read
 14146  0CE2  0020               	movlb	0	; select bank0
 14147  0CE3  00DD               	movwf	??_Flash_Memory_Initialization
 14148  0CE4  086F               	movf	_Product,w
 14149  0CE5  3E0C               	addlw	12
 14150  0CE6  0086               	movwf	6
 14151  0CE7  3001               	movlw	1	; select bank2/3
 14152  0CE8  0087               	movwf	7
 14153  0CE9  085D               	movf	??_Flash_Memory_Initialization,w
 14154  0CEA  0081               	movwf	1
 14155                           
 14156                           ;MCU_16f1518_B1.c: 435: Product->Data[13]=Flash_Memory_Read(1);
 14157  0CEB  3001               	movlw	1
 14158  0CEC  31A6  26DF  318C   	fcall	_Flash_Memory_Read
 14159  0CEF  0020               	movlb	0	; select bank0
 14160  0CF0  00DD               	movwf	??_Flash_Memory_Initialization
 14161  0CF1  086F               	movf	_Product,w
 14162  0CF2  3E0D               	addlw	13
 14163  0CF3  0086               	movwf	6
 14164  0CF4  3001               	movlw	1	; select bank2/3
 14165  0CF5  0087               	movwf	7
 14166  0CF6  085D               	movf	??_Flash_Memory_Initialization,w
 14167  0CF7  0081               	movwf	1
 14168                           
 14169                           ;MCU_16f1518_B1.c: 436: Product->Data[14]=Flash_Memory_Read(2);
 14170  0CF8  3002               	movlw	2
 14171  0CF9  31A6  26DF  318C   	fcall	_Flash_Memory_Read
 14172  0CFC  0020               	movlb	0	; select bank0
 14173  0CFD  00DD               	movwf	??_Flash_Memory_Initialization
 14174  0CFE  086F               	movf	_Product,w
 14175  0CFF  3E0E               	addlw	14
 14176  0D00  0086               	movwf	6
 14177  0D01  3001               	movlw	1	; select bank2/3
 14178  0D02  0087               	movwf	7
 14179  0D03  085D               	movf	??_Flash_Memory_Initialization,w
 14180  0D04  0081               	movwf	1
 14181                           
 14182                           ;MCU_16f1518_B1.c: 442: i=setPercentValue(((char)((100-55)*1.5)));
 14183  0D05  3043               	movlw	67
 14184  0D06  319E  2606  318C   	fcall	_setPercentValue
 14185  0D09  0020               	movlb	0	; select bank0
 14186  0D0A  00DD               	movwf	??_Flash_Memory_Initialization
 14187  0D0B  085D               	movf	??_Flash_Memory_Initialization,w
 14188  0D0C  00DE               	movwf	Flash_Memory_Initialization@i
 14189                           
 14190                           ;MCU_16f1518_B1.c: 443: Product->Data[21]=i;
 14191  0D0D  085E               	movf	Flash_Memory_Initialization@i,w
 14192  0D0E  00DD               	movwf	??_Flash_Memory_Initialization
 14193  0D0F  086F               	movf	_Product,w
 14194  0D10  3E15               	addlw	21
 14195  0D11  0086               	movwf	6
 14196  0D12  3001               	movlw	1	; select bank2/3
 14197  0D13  0087               	movwf	7
 14198  0D14  085D               	movf	??_Flash_Memory_Initialization,w
 14199  0D15  0081               	movwf	1
 14200                           
 14201                           ;MCU_16f1518_B1.c: 444: Product->Data[22]=i;
 14202  0D16  085E               	movf	Flash_Memory_Initialization@i,w
 14203  0D17  00DD               	movwf	??_Flash_Memory_Initialization
 14204  0D18  086F               	movf	_Product,w
 14205  0D19  3E16               	addlw	22
 14206  0D1A  0086               	movwf	6
 14207  0D1B  3001               	movlw	1	; select bank2/3
 14208  0D1C  0087               	movwf	7
 14209  0D1D  085D               	movf	??_Flash_Memory_Initialization,w
 14210  0D1E  0081               	movwf	1
 14211                           
 14212                           ;MCU_16f1518_B1.c: 445: Product->Data[23]=i;
 14213  0D1F  085E               	movf	Flash_Memory_Initialization@i,w
 14214  0D20  00DD               	movwf	??_Flash_Memory_Initialization
 14215  0D21  086F               	movf	_Product,w
 14216  0D22  3E17               	addlw	23
 14217  0D23  0086               	movwf	6
 14218  0D24  3001               	movlw	1	; select bank2/3
 14219  0D25  0087               	movwf	7
 14220  0D26  085D               	movf	??_Flash_Memory_Initialization,w
 14221  0D27  0081               	movwf	1
 14222                           
 14223                           ;MCU_16f1518_B1.c: 447: if(Product->Data[12]==0xff && Product->Data[13]==0xff && Product
      +                          ->Data[14]==0xff)
 14224  0D28  086F               	movf	_Product,w
 14225  0D29  3E0C               	addlw	12
 14226  0D2A  0086               	movwf	6
 14227  0D2B  3001               	movlw	1	; select bank2/3
 14228  0D2C  0087               	movwf	7
 14229  0D2D  0801               	movf	1,w
 14230  0D2E  3AFF               	xorlw	255
 14231  0D2F  1D03               	skipz
 14232  0D30  0008               	return
 14233  0D31  086F               	movf	_Product,w
 14234  0D32  3E0D               	addlw	13
 14235  0D33  0086               	movwf	6
 14236  0D34  3001               	movlw	1	; select bank2/3
 14237  0D35  0087               	movwf	7
 14238  0D36  0801               	movf	1,w
 14239  0D37  3AFF               	xorlw	255
 14240  0D38  1D03               	skipz
 14241  0D39  0008               	return
 14242  0D3A  086F               	movf	_Product,w
 14243  0D3B  3E0E               	addlw	14
 14244  0D3C  0086               	movwf	6
 14245  0D3D  3001               	movlw	1	; select bank2/3
 14246  0D3E  0087               	movwf	7
 14247  0D3F  0801               	movf	1,w
 14248  0D40  3AFF               	xorlw	255
 14249  0D41  1D03               	skipz
 14250  0D42  0008               	return
 14251                           
 14252                           ;MCU_16f1518_B1.c: 448: {
 14253                           ;MCU_16f1518_B1.c: 449: TMain->FirstOpen=1;
 14254  0D43  0021               	movlb	1	; select bank1
 14255  0D44  0869               	movf	_TMain^(0+128),w
 14256  0D45  0086               	movwf	6
 14257  0D46  3001               	movlw	1	; select bank2/3
 14258  0D47  0087               	movwf	7
 14259  0D48  1681               	bsf	1,5
 14260                           
 14261                           ;MCU_16f1518_B1.c: 450: TMain->First=1;
 14262  0D49  0869               	movf	_TMain^(0+128),w
 14263  0D4A  3E03               	addlw	3
 14264  0D4B  0086               	movwf	6
 14265  0D4C  3001               	movlw	1	; select bank2/3
 14266  0D4D  0087               	movwf	7
 14267  0D4E  1481               	bsf	1,1
 14268                           
 14269                           ;MCU_16f1518_B1.c: 451: }
 14270                           ;MCU_16f1518_B1.c: 452: }
 14271  0D4F  0008               	return
 14272  0D50                     l9762:	
 14273                           
 14274                           ;MCU_16f1518_B1.c: 453: else
 14275                           ;MCU_16f1518_B1.c: 454: {
 14276                           ;MCU_16f1518_B1.c: 455: i=setPercentValue(((char)((100-55)*1.5)));
 14277  0D50  3043               	movlw	67
 14278  0D51  319E  2606  318C   	fcall	_setPercentValue
 14279  0D54  0020               	movlb	0	; select bank0
 14280  0D55  00DD               	movwf	??_Flash_Memory_Initialization
 14281  0D56  085D               	movf	??_Flash_Memory_Initialization,w
 14282  0D57  00DE               	movwf	Flash_Memory_Initialization@i
 14283                           
 14284                           ;MCU_16f1518_B1.c: 456: Memory->Data[0]=0xff;
 14285  0D58  30FF               	movlw	255
 14286  0D59  00DD               	movwf	??_Flash_Memory_Initialization
 14287  0D5A  0021               	movlb	1	; select bank1
 14288  0D5B  0868               	movf	_Memory^(0+128),w
 14289  0D5C  0086               	movwf	6
 14290  0D5D  3002               	movlw	2	; select bank4/5
 14291  0D5E  0087               	movwf	7
 14292  0D5F  0020               	movlb	0	; select bank0
 14293  0D60  085D               	movf	??_Flash_Memory_Initialization,w
 14294  0D61  0081               	movwf	1
 14295                           
 14296                           ;MCU_16f1518_B1.c: 457: Memory->Data[1]=0xff;
 14297  0D62  30FF               	movlw	255
 14298  0D63  00DD               	movwf	??_Flash_Memory_Initialization
 14299  0D64  0021               	movlb	1	; select bank1
 14300  0D65  0A68               	incf	_Memory^(0+128),w
 14301  0D66  0086               	movwf	6
 14302  0D67  3002               	movlw	2	; select bank4/5
 14303  0D68  0087               	movwf	7
 14304  0D69  0020               	movlb	0	; select bank0
 14305  0D6A  085D               	movf	??_Flash_Memory_Initialization,w
 14306  0D6B  0081               	movwf	1
 14307                           
 14308                           ;MCU_16f1518_B1.c: 458: Memory->Data[2]=0xff;
 14309  0D6C  30FF               	movlw	255
 14310  0D6D  00DD               	movwf	??_Flash_Memory_Initialization
 14311  0D6E  0021               	movlb	1	; select bank1
 14312  0D6F  0868               	movf	_Memory^(0+128),w
 14313  0D70  3E02               	addlw	2
 14314  0D71  0086               	movwf	6
 14315  0D72  3002               	movlw	2	; select bank4/5
 14316  0D73  0087               	movwf	7
 14317  0D74  0020               	movlb	0	; select bank0
 14318  0D75  085D               	movf	??_Flash_Memory_Initialization,w
 14319  0D76  0081               	movwf	1
 14320                           
 14321                           ;MCU_16f1518_B1.c: 459: Memory->Data[3]=0xff;
 14322  0D77  30FF               	movlw	255
 14323  0D78  00DD               	movwf	??_Flash_Memory_Initialization
 14324  0D79  0021               	movlb	1	; select bank1
 14325  0D7A  0868               	movf	_Memory^(0+128),w
 14326  0D7B  3E03               	addlw	3
 14327  0D7C  0086               	movwf	6
 14328  0D7D  3002               	movlw	2	; select bank4/5
 14329  0D7E  0087               	movwf	7
 14330  0D7F  0020               	movlb	0	; select bank0
 14331  0D80  085D               	movf	??_Flash_Memory_Initialization,w
 14332  0D81  0081               	movwf	1
 14333                           
 14334                           ;MCU_16f1518_B1.c: 460: Memory->Data[4]=0xff;
 14335  0D82  30FF               	movlw	255
 14336  0D83  00DD               	movwf	??_Flash_Memory_Initialization
 14337  0D84  0021               	movlb	1	; select bank1
 14338  0D85  0868               	movf	_Memory^(0+128),w
 14339  0D86  3E04               	addlw	4
 14340  0D87  0086               	movwf	6
 14341  0D88  3002               	movlw	2	; select bank4/5
 14342  0D89  0087               	movwf	7
 14343  0D8A  0020               	movlb	0	; select bank0
 14344  0D8B  085D               	movf	??_Flash_Memory_Initialization,w
 14345  0D8C  0081               	movwf	1
 14346                           
 14347                           ;MCU_16f1518_B1.c: 461: Memory->Data[5]=0xff;
 14348  0D8D  30FF               	movlw	255
 14349  0D8E  00DD               	movwf	??_Flash_Memory_Initialization
 14350  0D8F  0021               	movlb	1	; select bank1
 14351  0D90  0868               	movf	_Memory^(0+128),w
 14352  0D91  3E05               	addlw	5
 14353  0D92  0086               	movwf	6
 14354  0D93  3002               	movlw	2	; select bank4/5
 14355  0D94  0087               	movwf	7
 14356  0D95  0020               	movlb	0	; select bank0
 14357  0D96  085D               	movf	??_Flash_Memory_Initialization,w
 14358  0D97  0081               	movwf	1
 14359                           
 14360                           ;MCU_16f1518_B1.c: 462: Memory->Data[31]=0xaa;
 14361  0D98  30AA               	movlw	170
 14362  0D99  00DD               	movwf	??_Flash_Memory_Initialization
 14363  0D9A  0021               	movlb	1	; select bank1
 14364  0D9B  0868               	movf	_Memory^(0+128),w
 14365  0D9C  3E1F               	addlw	31
 14366  0D9D  0086               	movwf	6
 14367  0D9E  3002               	movlw	2	; select bank4/5
 14368  0D9F  0087               	movwf	7
 14369  0DA0  0020               	movlb	0	; select bank0
 14370  0DA1  085D               	movf	??_Flash_Memory_Initialization,w
 14371  0DA2  0081               	movwf	1
 14372                           
 14373                           ;MCU_16f1518_B1.c: 463: Product->Data[21]=i;
 14374  0DA3  085E               	movf	Flash_Memory_Initialization@i,w
 14375  0DA4  00DD               	movwf	??_Flash_Memory_Initialization
 14376  0DA5  086F               	movf	_Product,w
 14377  0DA6  3E15               	addlw	21
 14378  0DA7  0086               	movwf	6
 14379  0DA8  3001               	movlw	1	; select bank2/3
 14380  0DA9  0087               	movwf	7
 14381  0DAA  085D               	movf	??_Flash_Memory_Initialization,w
 14382  0DAB  0081               	movwf	1
 14383                           
 14384                           ;MCU_16f1518_B1.c: 464: Product->Data[22]=i;
 14385  0DAC  085E               	movf	Flash_Memory_Initialization@i,w
 14386  0DAD  00DD               	movwf	??_Flash_Memory_Initialization
 14387  0DAE  086F               	movf	_Product,w
 14388  0DAF  3E16               	addlw	22
 14389  0DB0  0086               	movwf	6
 14390  0DB1  3001               	movlw	1	; select bank2/3
 14391  0DB2  0087               	movwf	7
 14392  0DB3  085D               	movf	??_Flash_Memory_Initialization,w
 14393  0DB4  0081               	movwf	1
 14394                           
 14395                           ;MCU_16f1518_B1.c: 465: Product->Data[23]=i;
 14396  0DB5  085E               	movf	Flash_Memory_Initialization@i,w
 14397  0DB6  00DD               	movwf	??_Flash_Memory_Initialization
 14398  0DB7  086F               	movf	_Product,w
 14399  0DB8  3E17               	addlw	23
 14400  0DB9  0086               	movwf	6
 14401  0DBA  3001               	movlw	1	; select bank2/3
 14402  0DBB  0087               	movwf	7
 14403  0DBC  085D               	movf	??_Flash_Memory_Initialization,w
 14404  0DBD  0081               	movwf	1
 14405                           
 14406                           ;MCU_16f1518_B1.c: 466: GIE=0;
 14407  0DBE  138B               	bcf	11,7	;volatile
 14408                           
 14409                           ;MCU_16f1518_B1.c: 467: Flash_Memory_Write();
 14410  0DBF  319A  22EA         	fcall	_Flash_Memory_Write
 14411                           
 14412                           ;MCU_16f1518_B1.c: 468: GIE=1;
 14413  0DC1  178B               	bsf	11,7	;volatile
 14414                           
 14415                           ;MCU_16f1518_B1.c: 469: TMain->FirstOpen=1;
 14416  0DC2  0021               	movlb	1	; select bank1
 14417  0DC3  0869               	movf	_TMain^(0+128),w
 14418  0DC4  0086               	movwf	6
 14419  0DC5  3001               	movlw	1	; select bank2/3
 14420  0DC6  0087               	movwf	7
 14421  0DC7  1681               	bsf	1,5
 14422                           
 14423                           ;MCU_16f1518_B1.c: 470: TMain->First=1;
 14424  0DC8  0869               	movf	_TMain^(0+128),w
 14425  0DC9  3E03               	addlw	3
 14426  0DCA  0086               	movwf	6
 14427  0DCB  3001               	movlw	1	; select bank2/3
 14428  0DCC  0087               	movwf	7
 14429  0DCD  1481               	bsf	1,1
 14430  0DCE  0008               	return
 14431  0DCF                     __end_of_Flash_Memory_Initialization:	
 14432                           
 14433                           	psect	text81
 14434  1AEA                     __ptext81:	
 14435 ;; *************** function _Flash_Memory_Write *****************
 14436 ;; Defined at:
 14437 ;;		line 518 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;		None
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;  i               1    1[BANK0 ] unsigned char 
 14442 ;; Return value:  Size  Location     Type
 14443 ;;		None               void
 14444 ;; Registers used:
 14445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14446 ;; Tracked objects:
 14447 ;;		On entry : 0/0
 14448 ;;		On exit  : 0/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;Total ram usage:        2 bytes
 14456 ;; Hardware stack levels used:    1
 14457 ;; Hardware stack levels required when called:    5
 14458 ;; This function calls:
 14459 ;;		_Flash_Memory_Unlock
 14460 ;; This function is called by:
 14461 ;;		_Flash_Memory_Initialization
 14462 ;;		_Flash_Memory_Modify
 14463 ;; This function uses a non-reentrant model
 14464 ;;
 14465                           
 14466                           
 14467                           ;psect for function _Flash_Memory_Write
 14468  1AEA                     _Flash_Memory_Write:	
 14469                           
 14470                           ;MCU_16f1518_B1.c: 520: char i;
 14471                           ;MCU_16f1518_B1.c: 521: CFGS=0;
 14472                           
 14473                           ;incstack = 0
 14474                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14475  1AEA  0023               	movlb	3	; select bank3
 14476  1AEB  1315               	bcf	21,6	;volatile
 14477                           
 14478                           ;MCU_16f1518_B1.c: 522: PMADRH=0x30;
 14479  1AEC  3030               	movlw	48
 14480  1AED  0092               	movwf	18	;volatile
 14481                           
 14482                           ;MCU_16f1518_B1.c: 523: PMDATH=0;
 14483  1AEE  0194               	clrf	20	;volatile
 14484                           
 14485                           ;MCU_16f1518_B1.c: 524: FREE=0;
 14486  1AEF  1215               	bcf	21,4	;volatile
 14487                           
 14488                           ;MCU_16f1518_B1.c: 525: LWLO=1;
 14489  1AF0  1695               	bsf	21,5	;volatile
 14490                           
 14491                           ;MCU_16f1518_B1.c: 526: WREN=1;
 14492  1AF1  1515               	bsf	21,2	;volatile
 14493                           
 14494                           ;MCU_16f1518_B1.c: 527: for(i=0 ; i<32 ; i++)
 14495  1AF2  0020               	movlb	0	; select bank0
 14496  1AF3  01A1               	clrf	Flash_Memory_Write@i
 14497  1AF4  3020               	movlw	32
 14498  1AF5  0221               	subwf	Flash_Memory_Write@i,w
 14499  1AF6  1803               	btfsc	3,0
 14500  1AF7  2B14               	goto	l1744
 14501  1AF8                     l9054:	
 14502                           
 14503                           ;MCU_16f1518_B1.c: 528: {
 14504                           ;MCU_16f1518_B1.c: 529: PMADRL=i;
 14505  1AF8  0821               	movf	Flash_Memory_Write@i,w
 14506  1AF9  0023               	movlb	3	; select bank3
 14507  1AFA  0091               	movwf	17	;volatile
 14508                           
 14509                           ;MCU_16f1518_B1.c: 530: PMDATL=Memory->Data[i];
 14510  1AFB  0020               	movlb	0	; select bank0
 14511  1AFC  0821               	movf	Flash_Memory_Write@i,w
 14512  1AFD  0021               	movlb	1	; select bank1
 14513  1AFE  0768               	addwf	_Memory^(0+128),w
 14514  1AFF  0020               	movlb	0	; select bank0
 14515  1B00  00A0               	movwf	??_Flash_Memory_Write
 14516  1B01  0820               	movf	??_Flash_Memory_Write,w
 14517  1B02  0086               	movwf	6
 14518  1B03  3002               	movlw	2	; select bank4/5
 14519  1B04  0087               	movwf	7
 14520  1B05  0801               	movf	1,w
 14521  1B06  0023               	movlb	3	; select bank3
 14522  1B07  0093               	movwf	19	;volatile
 14523                           
 14524                           ;MCU_16f1518_B1.c: 531: Flash_Memory_Unlock();
 14525  1B08  31A4  2419  319A   	fcall	_Flash_Memory_Unlock
 14526  1B0B  3001               	movlw	1
 14527  1B0C  0020               	movlb	0	; select bank0
 14528  1B0D  00A0               	movwf	??_Flash_Memory_Write
 14529  1B0E  0820               	movf	??_Flash_Memory_Write,w
 14530  1B0F  07A1               	addwf	Flash_Memory_Write@i,f
 14531  1B10  3020               	movlw	32
 14532  1B11  0221               	subwf	Flash_Memory_Write@i,w
 14533  1B12  1C03               	skipc
 14534  1B13  2AF8               	goto	l9054
 14535  1B14                     l1744:	
 14536                           
 14537                           ;MCU_16f1518_B1.c: 532: }
 14538                           ;MCU_16f1518_B1.c: 533: LWLO=0;
 14539  1B14  0023               	movlb	3	; select bank3
 14540  1B15  1295               	bcf	21,5	;volatile
 14541                           
 14542                           ;MCU_16f1518_B1.c: 534: Flash_Memory_Unlock();
 14543  1B16  31A4  2419         	fcall	_Flash_Memory_Unlock
 14544                           
 14545                           ;MCU_16f1518_B1.c: 535: WREN=0;
 14546  1B18  0023               	movlb	3	; select bank3
 14547  1B19  1115               	bcf	21,2	;volatile
 14548  1B1A  0008               	return
 14549  1B1B                     __end_of_Flash_Memory_Write:	
 14550                           
 14551                           	psect	text82
 14552  2419                     __ptext82:	
 14553 ;; *************** function _Flash_Memory_Unlock *****************
 14554 ;; Defined at:
 14555 ;;		line 497 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 14556 ;; Parameters:    Size  Location     Type
 14557 ;;		None
 14558 ;; Auto vars:     Size  Location     Type
 14559 ;;		None
 14560 ;; Return value:  Size  Location     Type
 14561 ;;		None               void
 14562 ;; Registers used:
 14563 ;;		wreg
 14564 ;; Tracked objects:
 14565 ;;		On entry : 0/0
 14566 ;;		On exit  : 0/0
 14567 ;;		Unchanged: 0/0
 14568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14573 ;;Total ram usage:        0 bytes
 14574 ;; Hardware stack levels used:    1
 14575 ;; Hardware stack levels required when called:    4
 14576 ;; This function calls:
 14577 ;;		Nothing
 14578 ;; This function is called by:
 14579 ;;		_Flash_Memory_Write
 14580 ;;		_Flash_Memory_Erasing
 14581 ;; This function uses a non-reentrant model
 14582 ;;
 14583                           
 14584                           
 14585                           ;psect for function _Flash_Memory_Unlock
 14586  2419                     _Flash_Memory_Unlock:	
 14587                           
 14588                           ;MCU_16f1518_B1.c: 499: PMCON2=0x55;
 14589                           
 14590                           ;incstack = 0
 14591                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 14592  2419  3055               	movlw	85
 14593  241A  0023               	movlb	3	; select bank3
 14594  241B  0096               	movwf	22	;volatile
 14595                           
 14596                           ;MCU_16f1518_B1.c: 500: PMCON2=0xaa;
 14597  241C  30AA               	movlw	170
 14598  241D  0096               	movwf	22	;volatile
 14599                           
 14600                           ;MCU_16f1518_B1.c: 501: WR=1;
 14601  241E  1495               	bsf	21,1	;volatile
 14602                           
 14603                           ;MCU_16f1518_B1.c: 502: __nop();
 14604  241F  0000               	nop
 14605                           
 14606                           ;MCU_16f1518_B1.c: 503: __nop();
 14607  2420  0000               	nop
 14608  2421  0008               	return
 14609  2422                     __end_of_Flash_Memory_Unlock:	
 14610                           
 14611                           	psect	text83
 14612  26DF                     __ptext83:	
 14613 ;; *************** function _Flash_Memory_Read *****************
 14614 ;; Defined at:
 14615 ;;		line 506 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;  address         1    wreg     unsigned char 
 14618 ;; Auto vars:     Size  Location     Type
 14619 ;;  address         1    2[BANK0 ] unsigned char 
 14620 ;;  ret             1    3[BANK0 ] unsigned char 
 14621 ;;  i               1    1[BANK0 ] unsigned char 
 14622 ;; Return value:  Size  Location     Type
 14623 ;;                  1    wreg      unsigned char 
 14624 ;; Registers used:
 14625 ;;		wreg, status,2
 14626 ;; Tracked objects:
 14627 ;;		On entry : 0/0
 14628 ;;		On exit  : 0/0
 14629 ;;		Unchanged: 0/0
 14630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14632 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14633 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14634 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14635 ;;Total ram usage:        4 bytes
 14636 ;; Hardware stack levels used:    1
 14637 ;; Hardware stack levels required when called:    4
 14638 ;; This function calls:
 14639 ;;		Nothing
 14640 ;; This function is called by:
 14641 ;;		_Flash_Memory_Initialization
 14642 ;;		_Flash_Memory_Modify
 14643 ;; This function uses a non-reentrant model
 14644 ;;
 14645                           
 14646                           
 14647                           ;psect for function _Flash_Memory_Read
 14648  26DF                     _Flash_Memory_Read:	
 14649                           
 14650                           ;incstack = 0
 14651                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 14652                           ;Flash_Memory_Read@address stored from wreg
 14653  26DF  0020               	movlb	0	; select bank0
 14654  26E0  00A2               	movwf	Flash_Memory_Read@address
 14655                           
 14656                           ;MCU_16f1518_B1.c: 508: char i,ret=0;
 14657  26E1  01A3               	clrf	Flash_Memory_Read@ret
 14658                           
 14659                           ;MCU_16f1518_B1.c: 509: PMADRH=0x30;
 14660  26E2  3030               	movlw	48
 14661  26E3  0023               	movlb	3	; select bank3
 14662  26E4  0092               	movwf	18	;volatile
 14663                           
 14664                           ;MCU_16f1518_B1.c: 510: PMADRL=address;
 14665  26E5  0020               	movlb	0	; select bank0
 14666  26E6  0822               	movf	Flash_Memory_Read@address,w
 14667  26E7  0023               	movlb	3	; select bank3
 14668  26E8  0091               	movwf	17	;volatile
 14669                           
 14670                           ;MCU_16f1518_B1.c: 511: CFGS=0;
 14671  26E9  1315               	bcf	21,6	;volatile
 14672                           
 14673                           ;MCU_16f1518_B1.c: 512: RD=1;
 14674  26EA  1415               	bsf	21,0	;volatile
 14675                           
 14676                           ;MCU_16f1518_B1.c: 513: i=PMDATH;
 14677  26EB  0814               	movf	20,w	;volatile
 14678  26EC  0020               	movlb	0	; select bank0
 14679  26ED  00A0               	movwf	??_Flash_Memory_Read
 14680  26EE  0820               	movf	??_Flash_Memory_Read,w
 14681  26EF  00A1               	movwf	Flash_Memory_Read@i
 14682                           
 14683                           ;MCU_16f1518_B1.c: 514: ret=PMDATL;
 14684  26F0  0023               	movlb	3	; select bank3
 14685  26F1  0813               	movf	19,w	;volatile
 14686  26F2  0020               	movlb	0	; select bank0
 14687  26F3  00A0               	movwf	??_Flash_Memory_Read
 14688  26F4  0820               	movf	??_Flash_Memory_Read,w
 14689  26F5  00A3               	movwf	Flash_Memory_Read@ret
 14690                           
 14691                           ;MCU_16f1518_B1.c: 515: return ret;
 14692  26F6  0823               	movf	Flash_Memory_Read@ret,w
 14693  26F7  0008               	return
 14694  26F8                     __end_of_Flash_Memory_Read:	
 14695                           
 14696                           	psect	text84
 14697  2458                     __ptext84:	
 14698 ;; *************** function _DimmerLights_Main *****************
 14699 ;; Defined at:
 14700 ;;		line 105 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 14701 ;; Parameters:    Size  Location     Type
 14702 ;;		None
 14703 ;; Auto vars:     Size  Location     Type
 14704 ;;		None
 14705 ;; Return value:  Size  Location     Type
 14706 ;;		None               void
 14707 ;; Registers used:
 14708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14709 ;; Tracked objects:
 14710 ;;		On entry : 0/0
 14711 ;;		On exit  : 0/0
 14712 ;;		Unchanged: 0/0
 14713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14718 ;;Total ram usage:        0 bytes
 14719 ;; Hardware stack levels used:    1
 14720 ;; Hardware stack levels required when called:   10
 14721 ;; This function calls:
 14722 ;;		_DimmerLights_Close
 14723 ;;		_setDimmerLights_Main
 14724 ;; This function is called by:
 14725 ;;		_main
 14726 ;; This function uses a non-reentrant model
 14727 ;;
 14728                           
 14729                           
 14730                           ;psect for function _DimmerLights_Main
 14731  2458                     _DimmerLights_Main:	
 14732                           
 14733                           ;Dimmer_B1.c: 108: setDimmerLights_Main(1);
 14734                           
 14735                           ;incstack = 0
 14736                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14737  2458  3001               	movlw	1
 14738  2459  3194  24B5  31A4   	fcall	_setDimmerLights_Main
 14739                           
 14740                           ;Dimmer_B1.c: 112: setDimmerLights_Main(2);
 14741  245C  3002               	movlw	2
 14742  245D  3194  24B5  31A4   	fcall	_setDimmerLights_Main
 14743                           
 14744                           ;Dimmer_B1.c: 119: DimmerLights_Close();
 14745  2460  31A7  2712         	fcall	_DimmerLights_Close
 14746  2462  0008               	return
 14747  2463                     __end_of_DimmerLights_Main:	
 14748                           
 14749                           	psect	text85
 14750  14B5                     __ptext85:	
 14751 ;; *************** function _setDimmerLights_Main *****************
 14752 ;; Defined at:
 14753 ;;		line 122 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 14754 ;; Parameters:    Size  Location     Type
 14755 ;;  lights          1    wreg     unsigned char 
 14756 ;; Auto vars:     Size  Location     Type
 14757 ;;  lights          1   70[BANK0 ] unsigned char 
 14758 ;;  clear           1   69[BANK0 ] unsigned char 
 14759 ;; Return value:  Size  Location     Type
 14760 ;;		None               void
 14761 ;; Registers used:
 14762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14763 ;; Tracked objects:
 14764 ;;		On entry : 0/0
 14765 ;;		On exit  : 0/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;Total ram usage:        2 bytes
 14773 ;; Hardware stack levels used:    1
 14774 ;; Hardware stack levels required when called:    9
 14775 ;; This function calls:
 14776 ;;		_DimmerLightsPointSelect
 14777 ;;		_setBuz
 14778 ;;		_setDimmerLights
 14779 ;;		_setDimmerLights_Adj
 14780 ;; This function is called by:
 14781 ;;		_DimmerLights_Main
 14782 ;; This function uses a non-reentrant model
 14783 ;;
 14784                           
 14785                           
 14786                           ;psect for function _setDimmerLights_Main
 14787  14B5                     _setDimmerLights_Main:	
 14788                           
 14789                           ;incstack = 0
 14790                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14791                           ;setDimmerLights_Main@lights stored from wreg
 14792  14B5  0020               	movlb	0	; select bank0
 14793  14B6  00E6               	movwf	setDimmerLights_Main@lights
 14794                           
 14795                           ;Dimmer_B1.c: 124: char clear=1;
 14796  14B7  01E5               	clrf	setDimmerLights_Main@clear
 14797  14B8  0AE5               	incf	setDimmerLights_Main@clear,f
 14798                           
 14799                           ;Dimmer_B1.c: 125: DimmerLightsPointSelect(lights);
 14800  14B9  0866               	movf	setDimmerLights_Main@lights,w
 14801  14BA  31A5  25D6  3194   	fcall	_DimmerLightsPointSelect
 14802                           
 14803                           ;Dimmer_B1.c: 143: if(lights == 1)
 14804  14BD  0020               	movlb	0	; select bank0
 14805  14BE  0866               	movf	setDimmerLights_Main@lights,w
 14806  14BF  3A01               	xorlw	1
 14807  14C0  1D03               	skipz
 14808  14C1  2CC4               	goto	l9310
 14809                           
 14810                           ;Dimmer_B1.c: 144: {
 14811                           ;Dimmer_B1.c: 145: clear=(!DimmerLights22->Clear)?0:1;
 14812  14C2  087A               	movf	_DimmerLights22,w
 14813  14C3  2CC9               	goto	L14
 14814  14C4                     l9310:	
 14815                           ;Dimmer_B1.c: 146: }
 14816                           
 14817                           
 14818                           ;Dimmer_B1.c: 147: else if(lights == 2)
 14819  14C4  0866               	movf	setDimmerLights_Main@lights,w
 14820  14C5  3A02               	xorlw	2
 14821  14C6  1D03               	skipz
 14822  14C7  2CD1               	goto	l9314
 14823                           
 14824                           ;Dimmer_B1.c: 148: {
 14825                           ;Dimmer_B1.c: 149: clear=(!DimmerLights11->Clear)?0:1;
 14826  14C8  0879               	movf	_DimmerLights11,w
 14827  14C9                     L14:	
 14828  14C9  3E0C               	addlw	12
 14829  14CA  0086               	movwf	6
 14830  14CB  3001               	movlw	1	; select bank2/3
 14831  14CC  0087               	movwf	7
 14832  14CD  3000               	movlw	0
 14833  14CE  1801               	btfsc	1,0
 14834  14CF  3001               	movlw	1
 14835  14D0  00E5               	movwf	setDimmerLights_Main@clear
 14836  14D1                     l9314:	
 14837                           
 14838                           ;Dimmer_B1.c: 150: }
 14839                           ;Dimmer_B1.c: 153: if(DimmerLights->Trigger)
 14840  14D1  086C               	movf	_DimmerLights,w
 14841  14D2  3E09               	addlw	9
 14842  14D3  0086               	movwf	6
 14843  14D4  3001               	movlw	1	; select bank2/3
 14844  14D5  0087               	movwf	7
 14845  14D6  1C81               	btfss	1,1
 14846  14D7  2D07               	goto	l9332
 14847                           
 14848                           ;Dimmer_B1.c: 154: {
 14849                           ;Dimmer_B1.c: 155: if(clear)
 14850  14D8  0865               	movf	setDimmerLights_Main@clear,w
 14851  14D9  1903               	btfsc	3,2
 14852  14DA  0008               	return
 14853                           
 14854                           ;Dimmer_B1.c: 156: {
 14855                           ;Dimmer_B1.c: 157: if(DimmerLights->Switch)
 14856  14DB  086C               	movf	_DimmerLights,w
 14857  14DC  3E09               	addlw	9
 14858  14DD  0086               	movwf	6
 14859  14DE  3001               	movlw	1	; select bank2/3
 14860  14DF  0087               	movwf	7
 14861  14E0  1C01               	btfss	1,0
 14862  14E1  2CF5               	goto	l9326
 14863                           
 14864                           ;Dimmer_B1.c: 158: {
 14865                           ;Dimmer_B1.c: 159: DimmerLights->Trigger=0;
 14866  14E2  086C               	movf	_DimmerLights,w
 14867  14E3  3E09               	addlw	9
 14868  14E4  0086               	movwf	6
 14869  14E5  3001               	movlw	1	; select bank2/3
 14870  14E6  0087               	movwf	7
 14871  14E7  1081               	bcf	1,1
 14872                           
 14873                           ;Dimmer_B1.c: 160: setDimmerLights(lights,1);
 14874  14E8  01A4               	clrf	setDimmerLights@status
 14875  14E9  0AA4               	incf	setDimmerLights@status,f
 14876  14EA  0866               	movf	setDimmerLights_Main@lights,w
 14877  14EB  3197  276C         	fcall	_setDimmerLights
 14878                           
 14879                           ;Dimmer_B1.c: 163: DimmerLights->Clear=0;
 14880  14ED  0020               	movlb	0	; select bank0
 14881  14EE  086C               	movf	_DimmerLights,w
 14882  14EF  3E0C               	addlw	12
 14883  14F0  0086               	movwf	6
 14884  14F1  3001               	movlw	1	; select bank2/3
 14885  14F2  0087               	movwf	7
 14886  14F3  1001               	bcf	1,0
 14887                           
 14888                           ;Dimmer_B1.c: 165: }
 14889  14F4  0008               	return
 14890  14F5                     l9326:	
 14891                           
 14892                           ;Dimmer_B1.c: 166: else
 14893                           ;Dimmer_B1.c: 167: {
 14894                           ;Dimmer_B1.c: 168: DimmerLights->Trigger=0;
 14895  14F5  086C               	movf	_DimmerLights,w
 14896  14F6  3E09               	addlw	9
 14897  14F7  0086               	movwf	6
 14898  14F8  3001               	movlw	1	; select bank2/3
 14899  14F9  0087               	movwf	7
 14900  14FA  1081               	bcf	1,1
 14901                           
 14902                           ;Dimmer_B1.c: 169: setDimmerLights(lights,0);
 14903  14FB  01A4               	clrf	setDimmerLights@status
 14904  14FC  0866               	movf	setDimmerLights_Main@lights,w
 14905  14FD  3197  276C         	fcall	_setDimmerLights
 14906                           
 14907                           ;Dimmer_B1.c: 172: DimmerLights->Clear=0;
 14908  14FF  0020               	movlb	0	; select bank0
 14909  1500  086C               	movf	_DimmerLights,w
 14910  1501  3E0C               	addlw	12
 14911  1502  0086               	movwf	6
 14912  1503  3001               	movlw	1	; select bank2/3
 14913  1504  0087               	movwf	7
 14914  1505  1001               	bcf	1,0
 14915                           
 14916                           ;Dimmer_B1.c: 174: }
 14917                           ;Dimmer_B1.c: 175: }
 14918                           ;Dimmer_B1.c: 176: }
 14919  1506  0008               	return
 14920  1507                     l9332:	
 14921                           
 14922                           ;Dimmer_B1.c: 177: else
 14923                           ;Dimmer_B1.c: 178: {
 14924                           ;Dimmer_B1.c: 179: if(DimmerLights->TriggerAdj)
 14925  1507  086C               	movf	_DimmerLights,w
 14926  1508  3E09               	addlw	9
 14927  1509  0086               	movwf	6
 14928  150A  3001               	movlw	1	; select bank2/3
 14929  150B  0087               	movwf	7
 14930  150C  1D81               	btfss	1,3
 14931  150D  0008               	return
 14932                           
 14933                           ;Dimmer_B1.c: 180: {
 14934                           ;Dimmer_B1.c: 181: if(clear)
 14935  150E  0865               	movf	setDimmerLights_Main@clear,w
 14936  150F  1903               	btfsc	3,2
 14937  1510  0008               	return
 14938                           
 14939                           ;Dimmer_B1.c: 182: {
 14940                           ;Dimmer_B1.c: 183: DimmerLightsPointSelect(lights);
 14941  1511  0866               	movf	setDimmerLights_Main@lights,w
 14942  1512  31A5  25D6  3194   	fcall	_DimmerLightsPointSelect
 14943                           
 14944                           ;Dimmer_B1.c: 184: DimmerLights->TriggerAdj=0;
 14945  1515  0020               	movlb	0	; select bank0
 14946  1516  086C               	movf	_DimmerLights,w
 14947  1517  3E09               	addlw	9
 14948  1518  0086               	movwf	6
 14949  1519  3001               	movlw	1	; select bank2/3
 14950  151A  0087               	movwf	7
 14951  151B  1181               	bcf	1,3
 14952                           
 14953                           ;Dimmer_B1.c: 185: if(DimmerLights->AdjGo)
 14954  151C  086C               	movf	_DimmerLights,w
 14955  151D  3E09               	addlw	9
 14956  151E  0086               	movwf	6
 14957  151F  3001               	movlw	1	; select bank2/3
 14958  1520  0087               	movwf	7
 14959  1521  1D01               	btfss	1,2
 14960  1522  2D33               	goto	l9344
 14961                           
 14962                           ;Dimmer_B1.c: 186: {
 14963                           ;Dimmer_B1.c: 187: setDimmerLights_Adj(lights,1);
 14964  1523  01E2               	clrf	setDimmerLights_Adj@status
 14965  1524  0AE2               	incf	setDimmerLights_Adj@status,f
 14966  1525  0866               	movf	setDimmerLights_Main@lights,w
 14967  1526  319D  2539  3194   	fcall	_setDimmerLights_Adj
 14968                           
 14969                           ;Dimmer_B1.c: 188: setBuz(1,100);
 14970  1529  3064               	movlw	100
 14971  152A  0020               	movlb	0	; select bank0
 14972  152B  00A6               	movwf	setBuz@time
 14973  152C  3000               	movlw	0
 14974  152D  00A7               	movwf	setBuz@time+1
 14975  152E  3001               	movlw	1
 14976  152F  3193  23C7         	fcall	_setBuz
 14977                           
 14978                           ;Dimmer_B1.c: 189: }
 14979  1531  0020               	movlb	0	; select bank0
 14980  1532  0008               	return
 14981  1533                     l9344:	
 14982                           
 14983                           ;Dimmer_B1.c: 190: else
 14984                           ;Dimmer_B1.c: 191: {
 14985                           ;Dimmer_B1.c: 192: setDimmerLights_Adj(lights,0);
 14986  1533  0020               	movlb	0	; select bank0
 14987  1534  01E2               	clrf	setDimmerLights_Adj@status
 14988  1535  0866               	movf	setDimmerLights_Main@lights,w
 14989  1536  319D  2539         	fcall	_setDimmerLights_Adj
 14990  1538  0020               	movlb	0	; select bank0
 14991  1539  0008               	return
 14992  153A                     __end_of_setDimmerLights_Main:	
 14993                           
 14994                           	psect	text86
 14995  1D39                     __ptext86:	
 14996 ;; *************** function _setDimmerLights_Adj *****************
 14997 ;; Defined at:
 14998 ;;		line 379 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 14999 ;; Parameters:    Size  Location     Type
 15000 ;;  lights          1    wreg     unsigned char 
 15001 ;;  status          1   66[BANK0 ] unsigned char 
 15002 ;; Auto vars:     Size  Location     Type
 15003 ;;  lights          1   68[BANK0 ] unsigned char 
 15004 ;; Return value:  Size  Location     Type
 15005 ;;		None               void
 15006 ;; Registers used:
 15007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15008 ;; Tracked objects:
 15009 ;;		On entry : 0/0
 15010 ;;		On exit  : 0/0
 15011 ;;		Unchanged: 0/0
 15012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15013 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15017 ;;Total ram usage:        3 bytes
 15018 ;; Hardware stack levels used:    1
 15019 ;; Hardware stack levels required when called:    8
 15020 ;; This function calls:
 15021 ;;		_DimmerLightsPointSelect
 15022 ;;		_setLoad_StatusOff
 15023 ;;		_setRF_DimmerLights
 15024 ;;		_setTxData
 15025 ;; This function is called by:
 15026 ;;		_setDimmerLights_Main
 15027 ;; This function uses a non-reentrant model
 15028 ;;
 15029                           
 15030                           
 15031                           ;psect for function _setDimmerLights_Adj
 15032  1D39                     _setDimmerLights_Adj:	
 15033                           
 15034                           ;incstack = 0
 15035                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15036                           ;setDimmerLights_Adj@lights stored from wreg
 15037  1D39  0020               	movlb	0	; select bank0
 15038  1D3A  00E4               	movwf	setDimmerLights_Adj@lights
 15039                           
 15040                           ;Dimmer_B1.c: 381: DimmerLightsPointSelect(lights);
 15041  1D3B  0864               	movf	setDimmerLights_Adj@lights,w
 15042  1D3C  31A5  25D6  319D   	fcall	_DimmerLightsPointSelect
 15043                           
 15044                           ;Dimmer_B1.c: 382: if(status)
 15045  1D3F  0020               	movlb	0	; select bank0
 15046  1D40  0862               	movf	setDimmerLights_Adj@status,w
 15047  1D41  1903               	btfsc	3,2
 15048  1D42  2D4E               	goto	l9030
 15049                           
 15050                           ;Dimmer_B1.c: 383: {
 15051                           ;Dimmer_B1.c: 384: DimmerLights->AdjFlag=1;
 15052  1D43  086C               	movf	_DimmerLights,w
 15053  1D44  0086               	movwf	6
 15054  1D45  3001               	movlw	1	; select bank2/3
 15055  1D46  0087               	movwf	7
 15056  1D47  1581               	bsf	1,3
 15057                           
 15058                           ;Dimmer_B1.c: 385: DimmerLights->Signal=1;
 15059  1D48  086C               	movf	_DimmerLights,w
 15060  1D49  0086               	movwf	6
 15061  1D4A  3001               	movlw	1	; select bank2/3
 15062  1D4B  0087               	movwf	7
 15063  1D4C  1481               	bsf	1,1
 15064                           
 15065                           ;Dimmer_B1.c: 386: }
 15066  1D4D  0008               	return
 15067  1D4E                     l9030:	
 15068                           
 15069                           ;Dimmer_B1.c: 387: else
 15070                           ;Dimmer_B1.c: 388: {
 15071                           ;Dimmer_B1.c: 389: if(DimmerLights->AdjFlag)
 15072  1D4E  086C               	movf	_DimmerLights,w
 15073  1D4F  0086               	movwf	6
 15074  1D50  3001               	movlw	1	; select bank2/3
 15075  1D51  0087               	movwf	7
 15076  1D52  1D81               	btfss	1,3
 15077  1D53  0008               	return
 15078                           
 15079                           ;Dimmer_B1.c: 390: {
 15080                           ;Dimmer_B1.c: 391: DimmerLights->Signal=0;
 15081  1D54  086C               	movf	_DimmerLights,w
 15082  1D55  0086               	movwf	6
 15083  1D56  3001               	movlw	1	; select bank2/3
 15084  1D57  0087               	movwf	7
 15085  1D58  1081               	bcf	1,1
 15086                           
 15087                           ;Dimmer_B1.c: 392: DimmerLights->AdjFlag=0;
 15088  1D59  086C               	movf	_DimmerLights,w
 15089  1D5A  0086               	movwf	6
 15090  1D5B  3001               	movlw	1	; select bank2/3
 15091  1D5C  0087               	movwf	7
 15092  1D5D  1181               	bcf	1,3
 15093                           
 15094                           ;Dimmer_B1.c: 393: setLoad_StatusOff(0,1);
 15095  1D5E  01A0               	clrf	setLoad_StatusOff@command
 15096  1D5F  0AA0               	incf	setLoad_StatusOff@command,f
 15097  1D60  3000               	movlw	0
 15098  1D61  319A  22B9  319D   	fcall	_setLoad_StatusOff
 15099                           
 15100                           ;Dimmer_B1.c: 394: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 15101  1D64  0020               	movlb	0	; select bank0
 15102  1D65  086C               	movf	_DimmerLights,w
 15103  1D66  3E04               	addlw	4
 15104  1D67  0086               	movwf	6
 15105  1D68  3001               	movlw	1	; select bank2/3
 15106  1D69  0087               	movwf	7
 15107  1D6A  0801               	movf	1,w
 15108  1D6B  00E3               	movwf	??_setDimmerLights_Adj
 15109  1D6C  086C               	movf	_DimmerLights,w
 15110  1D6D  3E05               	addlw	5
 15111  1D6E  0086               	movwf	6
 15112  1D6F  3001               	movlw	1	; select bank2/3
 15113  1D70  0087               	movwf	7
 15114  1D71  0863               	movf	??_setDimmerLights_Adj,w
 15115  1D72  0081               	movwf	1
 15116                           
 15117                           ;Dimmer_B1.c: 402: setRF_DimmerLights(lights,1);
 15118  1D73  01DD               	clrf	setRF_DimmerLights@on
 15119  1D74  0ADD               	incf	setRF_DimmerLights@on,f
 15120  1D75  0864               	movf	setDimmerLights_Adj@lights,w
 15121  1D76  3191  2133  319D   	fcall	_setRF_DimmerLights
 15122                           
 15123                           ;Dimmer_B1.c: 403: setTxData(1);
 15124  1D79  3001               	movlw	1
 15125  1D7A  318B  2318         	fcall	_setTxData
 15126  1D7C  0008               	return
 15127  1D7D                     __end_of_setDimmerLights_Adj:	
 15128                           
 15129                           	psect	text87
 15130  1AB9                     __ptext87:	
 15131 ;; *************** function _setLoad_StatusOff *****************
 15132 ;; Defined at:
 15133 ;;		line 284 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;  lights          1    wreg     unsigned char 
 15136 ;;  command         1    0[BANK0 ] unsigned char 
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;  lights          1    1[BANK0 ] unsigned char 
 15139 ;; Return value:  Size  Location     Type
 15140 ;;		None               void
 15141 ;; Registers used:
 15142 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15148 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;Total ram usage:        2 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:    4
 15155 ;; This function calls:
 15156 ;;		Nothing
 15157 ;; This function is called by:
 15158 ;;		_setDimmerLights_ERROR
 15159 ;;		_setDimmerLights_Adj
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           
 15164                           ;psect for function _setLoad_StatusOff
 15165  1AB9                     _setLoad_StatusOff:	
 15166                           
 15167                           ;incstack = 0
 15168                           ; Regs used in _setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0]
 15169                           ;setLoad_StatusOff@lights stored from wreg
 15170  1AB9  0020               	movlb	0	; select bank0
 15171  1ABA  00A1               	movwf	setLoad_StatusOff@lights
 15172                           
 15173                           ;OverLoad_B1.c: 286: Load->StatusOff=command;
 15174  1ABB  086E               	movf	_Load,w
 15175  1ABC  3E46               	addlw	70
 15176  1ABD  0086               	movwf	6
 15177  1ABE  3002               	movlw	2	; select bank4/5
 15178  1ABF  0087               	movwf	7
 15179  1AC0  0820               	movf	setLoad_StatusOff@command,w
 15180  1AC1  1081               	bcf	1,1
 15181  1AC2  1D03               	skipz
 15182  1AC3  1481               	bsf	1,1
 15183                           
 15184                           ;OverLoad_B1.c: 287: Load->SafeCount-=2;
 15185  1AC4  086E               	movf	_Load,w
 15186  1AC5  3E42               	addlw	66
 15187  1AC6  0086               	movwf	6
 15188  1AC7  3002               	movlw	2	; select bank4/5
 15189  1AC8  0087               	movwf	7
 15190  1AC9  3002               	movlw	2
 15191  1ACA  0281               	subwf	1,f
 15192                           
 15193                           ;OverLoad_B1.c: 288: if(lights == 1)
 15194  1ACB  0821               	movf	setLoad_StatusOff@lights,w
 15195  1ACC  3A01               	xorlw	1
 15196  1ACD  1D03               	skipz
 15197  1ACE  2AD5               	goto	l8690
 15198                           
 15199                           ;OverLoad_B1.c: 289: {
 15200                           ;OverLoad_B1.c: 290: Load->Lights1Status=0;
 15201  1ACF  086E               	movf	_Load,w
 15202  1AD0  3E43               	addlw	67
 15203  1AD1  0086               	movwf	6
 15204  1AD2  3002               	movlw	2	; select bank4/5
 15205  1AD3  0087               	movwf	7
 15206  1AD4  0181               	clrf	1
 15207  1AD5                     l8690:	
 15208                           
 15209                           ;OverLoad_B1.c: 291: }
 15210                           ;OverLoad_B1.c: 292: if(lights == 2)
 15211  1AD5  0821               	movf	setLoad_StatusOff@lights,w
 15212  1AD6  3A02               	xorlw	2
 15213  1AD7  1D03               	skipz
 15214  1AD8  2ADF               	goto	l8694
 15215                           
 15216                           ;OverLoad_B1.c: 293: {
 15217                           ;OverLoad_B1.c: 294: Load->Lights2Status=0;
 15218  1AD9  086E               	movf	_Load,w
 15219  1ADA  3E44               	addlw	68
 15220  1ADB  0086               	movwf	6
 15221  1ADC  3002               	movlw	2	; select bank4/5
 15222  1ADD  0087               	movwf	7
 15223  1ADE  0181               	clrf	1
 15224  1ADF                     l8694:	
 15225                           
 15226                           ;OverLoad_B1.c: 295: }
 15227                           ;OverLoad_B1.c: 296: if(lights == 3)
 15228  1ADF  0821               	movf	setLoad_StatusOff@lights,w
 15229  1AE0  3A03               	xorlw	3
 15230  1AE1  1D03               	skipz
 15231  1AE2  0008               	return
 15232                           
 15233                           ;OverLoad_B1.c: 297: {
 15234                           ;OverLoad_B1.c: 298: Load->Lights3Status=0;
 15235  1AE3  086E               	movf	_Load,w
 15236  1AE4  3E45               	addlw	69
 15237  1AE5  0086               	movwf	6
 15238  1AE6  3002               	movlw	2	; select bank4/5
 15239  1AE7  0087               	movwf	7
 15240  1AE8  0181               	clrf	1
 15241  1AE9  0008               	return
 15242  1AEA                     __end_of_setLoad_StatusOff:	
 15243                           
 15244                           	psect	text88
 15245  176C                     __ptext88:	
 15246 ;; *************** function _setDimmerLights *****************
 15247 ;; Defined at:
 15248 ;;		line 321 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;  lights          1    wreg     unsigned char 
 15251 ;;  status          1    4[BANK0 ] unsigned char 
 15252 ;; Auto vars:     Size  Location     Type
 15253 ;;  lights          1    6[BANK0 ] unsigned char 
 15254 ;; Return value:  Size  Location     Type
 15255 ;;		None               void
 15256 ;; Registers used:
 15257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15258 ;; Tracked objects:
 15259 ;;		On entry : 0/0
 15260 ;;		On exit  : 0/0
 15261 ;;		Unchanged: 0/0
 15262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15263 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15266 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15267 ;;Total ram usage:        3 bytes
 15268 ;; Hardware stack levels used:    1
 15269 ;; Hardware stack levels required when called:    6
 15270 ;; This function calls:
 15271 ;;		_DimmerLightsPointSelect
 15272 ;;		_setLED
 15273 ;;		_setLoad_Count
 15274 ;;		_setLoad_StatusOn
 15275 ;; This function is called by:
 15276 ;;		_setDimmerLights_Main
 15277 ;;		_setControl_Lights_Table
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281                           
 15282                           ;psect for function _setDimmerLights
 15283  176C                     _setDimmerLights:	
 15284                           
 15285                           ;incstack = 0
 15286                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15287                           ;setDimmerLights@lights stored from wreg
 15288  176C  0020               	movlb	0	; select bank0
 15289  176D  00A6               	movwf	setDimmerLights@lights
 15290                           
 15291                           ;Dimmer_B1.c: 323: DimmerLightsPointSelect(lights);
 15292  176E  0826               	movf	setDimmerLights@lights,w
 15293  176F  31A5  25D6  3197   	fcall	_DimmerLightsPointSelect
 15294                           
 15295                           ;Dimmer_B1.c: 324: Dimmer->Load=lights;
 15296  1772  0020               	movlb	0	; select bank0
 15297  1773  0826               	movf	setDimmerLights@lights,w
 15298  1774  00A5               	movwf	??_setDimmerLights
 15299  1775  0021               	movlb	1	; select bank1
 15300  1776  0A39               	incf	_Dimmer^(0+128),w
 15301  1777  0086               	movwf	6
 15302  1778  0187               	clrf	7
 15303  1779  0020               	movlb	0	; select bank0
 15304  177A  0825               	movf	??_setDimmerLights,w
 15305  177B  0081               	movwf	1
 15306                           
 15307                           ;Dimmer_B1.c: 325: if(status)
 15308  177C  0824               	movf	setDimmerLights@status,w
 15309  177D  1903               	btfsc	3,2
 15310  177E  2FD4               	goto	l8786
 15311                           
 15312                           ;Dimmer_B1.c: 326: {
 15313                           ;Dimmer_B1.c: 327: DimmerLights->Status=1;
 15314  177F  086C               	movf	_DimmerLights,w
 15315  1780  0086               	movwf	6
 15316  1781  3001               	movlw	1	; select bank2/3
 15317  1782  0087               	movwf	7
 15318  1783  1681               	bsf	1,5
 15319                           
 15320                           ;Dimmer_B1.c: 328: setLED(lights,0);
 15321  1784  01A2               	clrf	setLED@command
 15322  1785  0826               	movf	setDimmerLights@lights,w
 15323  1786  319F  27A2  3197   	fcall	_setLED
 15324                           
 15325                           ;Dimmer_B1.c: 330: setLoad_Count(0);
 15326  1789  3000               	movlw	0
 15327  178A  31A6  2627  3197   	fcall	_setLoad_Count
 15328                           
 15329                           ;Dimmer_B1.c: 332: DimmerLights->Signal=1;
 15330  178D  0020               	movlb	0	; select bank0
 15331  178E  086C               	movf	_DimmerLights,w
 15332  178F  0086               	movwf	6
 15333  1790  3001               	movlw	1	; select bank2/3
 15334  1791  0087               	movwf	7
 15335  1792  1481               	bsf	1,1
 15336                           
 15337                           ;Dimmer_B1.c: 333: DimmerLights->DimmingTimeValue=3;
 15338  1793  3003               	movlw	3
 15339  1794  00A5               	movwf	??_setDimmerLights
 15340  1795  086C               	movf	_DimmerLights,w
 15341  1796  3E02               	addlw	2
 15342  1797  0086               	movwf	6
 15343  1798  3001               	movlw	1	; select bank2/3
 15344  1799  0087               	movwf	7
 15345  179A  0825               	movf	??_setDimmerLights,w
 15346  179B  0081               	movwf	1
 15347                           
 15348                           ;Dimmer_B1.c: 335: if(!DimmerLights->StatusFlag)
 15349  179C  086C               	movf	_DimmerLights,w
 15350  179D  0086               	movwf	6
 15351  179E  3001               	movlw	1	; select bank2/3
 15352  179F  0087               	movwf	7
 15353  17A0  1B01               	btfsc	1,6
 15354  17A1  0008               	return
 15355                           
 15356                           ;Dimmer_B1.c: 336: {
 15357                           ;Dimmer_B1.c: 337: DimmerLights->StatusFlag=1;
 15358  17A2  086C               	movf	_DimmerLights,w
 15359  17A3  0086               	movwf	6
 15360  17A4  3001               	movlw	1	; select bank2/3
 15361  17A5  0087               	movwf	7
 15362  17A6  1701               	bsf	1,6
 15363                           
 15364                           ;Dimmer_B1.c: 338: setLoad_StatusOn(lights,1);
 15365  17A7  01A0               	clrf	setLoad_StatusOn@command
 15366  17A8  0AA0               	incf	setLoad_StatusOn@command,f
 15367  17A9  0826               	movf	setDimmerLights@lights,w
 15368  17AA  319B  231B         	fcall	_setLoad_StatusOn
 15369                           
 15370                           ;Dimmer_B1.c: 339: Memory->GO=0; if(!0) { Memory->Time=0; } ;;
 15371  17AC  0021               	movlb	1	; select bank1
 15372  17AD  0868               	movf	_Memory^(0+128),w
 15373  17AE  3E22               	addlw	34
 15374  17AF  0086               	movwf	6
 15375  17B0  3002               	movlw	2	; select bank4/5
 15376  17B1  0087               	movwf	7
 15377  17B2  1081               	bcf	1,1
 15378  17B3  0868               	movf	_Memory^(0+128),w
 15379  17B4  3E23               	addlw	35
 15380  17B5  0086               	movwf	6
 15381  17B6  3002               	movlw	2	; select bank4/5
 15382  17B7  0087               	movwf	7
 15383  17B8  3000               	movlw	0
 15384  17B9  3FC0               	movwi [0]fsr1
 15385  17BA  3FC1               	movwi [1]fsr1
 15386                           
 15387                           ;Dimmer_B1.c: 342: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 15388  17BB  0020               	movlb	0	; select bank0
 15389  17BC  086C               	movf	_DimmerLights,w
 15390  17BD  3E05               	addlw	5
 15391  17BE  0086               	movwf	6
 15392  17BF  3001               	movlw	1	; select bank2/3
 15393  17C0  0087               	movwf	7
 15394  17C1  0801               	movf	1,w
 15395  17C2  00A5               	movwf	??_setDimmerLights
 15396  17C3  086C               	movf	_DimmerLights,w
 15397  17C4  3E04               	addlw	4
 15398  17C5  0086               	movwf	6
 15399  17C6  3001               	movlw	1	; select bank2/3
 15400  17C7  0087               	movwf	7
 15401  17C8  0825               	movf	??_setDimmerLights,w
 15402  17C9  0081               	movwf	1
 15403                           
 15404                           ;Dimmer_B1.c: 346: DimmerLights->DimmingValue=((char)((100-55)*1.5));
 15405  17CA  3043               	movlw	67
 15406  17CB  00A5               	movwf	??_setDimmerLights
 15407  17CC  086C               	movf	_DimmerLights,w
 15408  17CD  3E04               	addlw	4
 15409  17CE  0086               	movwf	6
 15410  17CF  3001               	movlw	1	; select bank2/3
 15411  17D0  0087               	movwf	7
 15412  17D1  0825               	movf	??_setDimmerLights,w
 15413  17D2  0081               	movwf	1
 15414                           
 15415                           ;Dimmer_B1.c: 348: }
 15416                           ;Dimmer_B1.c: 349: }
 15417  17D3  0008               	return
 15418  17D4                     l8786:	
 15419                           
 15420                           ;Dimmer_B1.c: 350: else
 15421                           ;Dimmer_B1.c: 351: {
 15422                           ;Dimmer_B1.c: 352: DimmerLights->Status=0;
 15423  17D4  086C               	movf	_DimmerLights,w
 15424  17D5  0086               	movwf	6
 15425  17D6  3001               	movlw	1	; select bank2/3
 15426  17D7  0087               	movwf	7
 15427  17D8  1281               	bcf	1,5
 15428                           
 15429                           ;Dimmer_B1.c: 354: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 15430  17D9  086C               	movf	_DimmerLights,w
 15431  17DA  3E06               	addlw	6
 15432  17DB  0086               	movwf	6
 15433  17DC  3001               	movlw	1	; select bank2/3
 15434  17DD  0087               	movwf	7
 15435  17DE  0801               	movf	1,w
 15436  17DF  00A5               	movwf	??_setDimmerLights
 15437  17E0  086C               	movf	_DimmerLights,w
 15438  17E1  3E04               	addlw	4
 15439  17E2  0086               	movwf	6
 15440  17E3  3001               	movlw	1	; select bank2/3
 15441  17E4  0087               	movwf	7
 15442  17E5  0825               	movf	??_setDimmerLights,w
 15443  17E6  0081               	movwf	1
 15444                           
 15445                           ;Dimmer_B1.c: 361: DimmerLights->Signal=1;
 15446  17E7  086C               	movf	_DimmerLights,w
 15447  17E8  0086               	movwf	6
 15448  17E9  3001               	movlw	1	; select bank2/3
 15449  17EA  0087               	movwf	7
 15450  17EB  1481               	bsf	1,1
 15451                           
 15452                           ;Dimmer_B1.c: 362: DimmerLights->AdjFlag=0;
 15453  17EC  086C               	movf	_DimmerLights,w
 15454  17ED  0086               	movwf	6
 15455  17EE  3001               	movlw	1	; select bank2/3
 15456  17EF  0087               	movwf	7
 15457  17F0  1181               	bcf	1,3
 15458                           
 15459                           ;Dimmer_B1.c: 363: DimmerLights->AdjStatus=0;
 15460  17F1  086C               	movf	_DimmerLights,w
 15461  17F2  0086               	movwf	6
 15462  17F3  3001               	movlw	1	; select bank2/3
 15463  17F4  0087               	movwf	7
 15464  17F5  1201               	bcf	1,4
 15465                           
 15466                           ;Dimmer_B1.c: 364: DimmerLights->DimmingTimeValue=3;
 15467  17F6  3003               	movlw	3
 15468  17F7  00A5               	movwf	??_setDimmerLights
 15469  17F8  086C               	movf	_DimmerLights,w
 15470  17F9  3E02               	addlw	2
 15471  17FA  0086               	movwf	6
 15472  17FB  3001               	movlw	1	; select bank2/3
 15473  17FC  0087               	movwf	7
 15474  17FD  0825               	movf	??_setDimmerLights,w
 15475  17FE  0081               	movwf	1
 15476  17FF  0008               	return
 15477  1800                     __end_of_setDimmerLights:	
 15478                           
 15479                           	psect	text89
 15480  1B1B                     __ptext89:	
 15481 ;; *************** function _setLoad_StatusOn *****************
 15482 ;; Defined at:
 15483 ;;		line 266 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 15484 ;; Parameters:    Size  Location     Type
 15485 ;;  lights          1    wreg     unsigned char 
 15486 ;;  command         1    0[BANK0 ] unsigned char 
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;  lights          1    1[BANK0 ] unsigned char 
 15489 ;; Return value:  Size  Location     Type
 15490 ;;		None               void
 15491 ;; Registers used:
 15492 ;;		wreg, fsr1l, fsr1h
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15498 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;Total ram usage:        2 bytes
 15503 ;; Hardware stack levels used:    1
 15504 ;; Hardware stack levels required when called:    4
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		_setDimmerLights
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           
 15513                           ;psect for function _setLoad_StatusOn
 15514  1B1B                     _setLoad_StatusOn:	
 15515                           
 15516                           ;incstack = 0
 15517                           ; Regs used in _setLoad_StatusOn: [wregfsr1]
 15518                           ;setLoad_StatusOn@lights stored from wreg
 15519  1B1B  0020               	movlb	0	; select bank0
 15520  1B1C  00A1               	movwf	setLoad_StatusOn@lights
 15521                           
 15522                           ;OverLoad_B1.c: 268: Load->GO=1;
 15523  1B1D  086E               	movf	_Load,w
 15524  1B1E  0086               	movwf	6
 15525  1B1F  3002               	movlw	2	; select bank4/5
 15526  1B20  0087               	movwf	7
 15527  1B21  1481               	bsf	1,1
 15528                           
 15529                           ;OverLoad_B1.c: 269: Load->StatusOn=command;
 15530  1B22  086E               	movf	_Load,w
 15531  1B23  3E46               	addlw	70
 15532  1B24  0086               	movwf	6
 15533  1B25  3002               	movlw	2	; select bank4/5
 15534  1B26  0087               	movwf	7
 15535  1B27  0820               	movf	setLoad_StatusOn@command,w
 15536  1B28  1001               	bcf	1,0
 15537  1B29  1D03               	skipz
 15538  1B2A  1401               	bsf	1,0
 15539                           
 15540                           ;OverLoad_B1.c: 271: if(lights == 1)
 15541  1B2B  0821               	movf	setLoad_StatusOn@lights,w
 15542  1B2C  3A01               	xorlw	1
 15543  1B2D  1D03               	skipz
 15544  1B2E  2B36               	goto	l8754
 15545                           
 15546                           ;OverLoad_B1.c: 272: {
 15547                           ;OverLoad_B1.c: 273: Load->Lights1Status=1;
 15548  1B2F  086E               	movf	_Load,w
 15549  1B30  3E43               	addlw	67
 15550  1B31  0086               	movwf	6
 15551  1B32  3002               	movlw	2	; select bank4/5
 15552  1B33  0087               	movwf	7
 15553  1B34  0181               	clrf	1
 15554  1B35  0A81               	incf	1,f
 15555  1B36                     l8754:	
 15556                           
 15557                           ;OverLoad_B1.c: 274: }
 15558                           ;OverLoad_B1.c: 275: if(lights == 2)
 15559  1B36  0821               	movf	setLoad_StatusOn@lights,w
 15560  1B37  3A02               	xorlw	2
 15561  1B38  1D03               	skipz
 15562  1B39  2B41               	goto	l8758
 15563                           
 15564                           ;OverLoad_B1.c: 276: {
 15565                           ;OverLoad_B1.c: 277: Load->Lights2Status=1;
 15566  1B3A  086E               	movf	_Load,w
 15567  1B3B  3E44               	addlw	68
 15568  1B3C  0086               	movwf	6
 15569  1B3D  3002               	movlw	2	; select bank4/5
 15570  1B3E  0087               	movwf	7
 15571  1B3F  0181               	clrf	1
 15572  1B40  0A81               	incf	1,f
 15573  1B41                     l8758:	
 15574                           
 15575                           ;OverLoad_B1.c: 278: }
 15576                           ;OverLoad_B1.c: 279: if(lights == 3)
 15577  1B41  0821               	movf	setLoad_StatusOn@lights,w
 15578  1B42  3A03               	xorlw	3
 15579  1B43  1D03               	skipz
 15580  1B44  0008               	return
 15581                           
 15582                           ;OverLoad_B1.c: 280: {
 15583                           ;OverLoad_B1.c: 281: Load->Lights3Status=1;
 15584  1B45  086E               	movf	_Load,w
 15585  1B46  3E45               	addlw	69
 15586  1B47  0086               	movwf	6
 15587  1B48  3002               	movlw	2	; select bank4/5
 15588  1B49  0087               	movwf	7
 15589  1B4A  0181               	clrf	1
 15590  1B4B  0A81               	incf	1,f
 15591  1B4C  0008               	return
 15592  1B4D                     __end_of_setLoad_StatusOn:	
 15593                           
 15594                           	psect	text90
 15595  2627                     __ptext90:	
 15596 ;; *************** function _setLoad_Count *****************
 15597 ;; Defined at:
 15598 ;;		line 251 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;  command         1    wreg     unsigned char 
 15601 ;; Auto vars:     Size  Location     Type
 15602 ;;  command         1    1[BANK0 ] unsigned char 
 15603 ;; Return value:  Size  Location     Type
 15604 ;;		None               void
 15605 ;; Registers used:
 15606 ;;		wreg, fsr1l, fsr1h
 15607 ;; Tracked objects:
 15608 ;;		On entry : 0/0
 15609 ;;		On exit  : 0/0
 15610 ;;		Unchanged: 0/0
 15611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15614 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15615 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15616 ;;Total ram usage:        2 bytes
 15617 ;; Hardware stack levels used:    1
 15618 ;; Hardware stack levels required when called:    4
 15619 ;; This function calls:
 15620 ;;		Nothing
 15621 ;; This function is called by:
 15622 ;;		_setDimmerLights
 15623 ;; This function uses a non-reentrant model
 15624 ;;
 15625                           
 15626                           
 15627                           ;psect for function _setLoad_Count
 15628  2627                     _setLoad_Count:	
 15629                           
 15630                           ;incstack = 0
 15631                           ; Regs used in _setLoad_Count: [wregfsr1]
 15632                           ;setLoad_Count@command stored from wreg
 15633  2627  0020               	movlb	0	; select bank0
 15634  2628  00A1               	movwf	setLoad_Count@command
 15635                           
 15636                           ;OverLoad_B1.c: 253: Load->Count=command;
 15637  2629  0821               	movf	setLoad_Count@command,w
 15638  262A  00A0               	movwf	??_setLoad_Count
 15639  262B  086E               	movf	_Load,w
 15640  262C  3E3A               	addlw	58
 15641  262D  0086               	movwf	6
 15642  262E  3002               	movlw	2	; select bank4/5
 15643  262F  0087               	movwf	7
 15644  2630  0820               	movf	??_setLoad_Count,w
 15645  2631  0081               	movwf	1
 15646                           
 15647                           ;OverLoad_B1.c: 254: Load->SafeCount=command;
 15648  2632  0821               	movf	setLoad_Count@command,w
 15649  2633  00A0               	movwf	??_setLoad_Count
 15650  2634  086E               	movf	_Load,w
 15651  2635  3E42               	addlw	66
 15652  2636  0086               	movwf	6
 15653  2637  3002               	movlw	2	; select bank4/5
 15654  2638  0087               	movwf	7
 15655  2639  0820               	movf	??_setLoad_Count,w
 15656  263A  0081               	movwf	1
 15657  263B  0008               	return
 15658  263C                     __end_of_setLoad_Count:	
 15659                           
 15660                           	psect	text91
 15661  1FA2                     __ptext91:	
 15662 ;; *************** function _setLED *****************
 15663 ;; Defined at:
 15664 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\LED_B1.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;  led             1    wreg     unsigned char 
 15667 ;;  command         1    2[BANK0 ] unsigned char 
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;  led             1    3[BANK0 ] unsigned char 
 15670 ;; Return value:  Size  Location     Type
 15671 ;;		None               void
 15672 ;; Registers used:
 15673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15674 ;; Tracked objects:
 15675 ;;		On entry : 0/0
 15676 ;;		On exit  : 0/0
 15677 ;;		Unchanged: 0/0
 15678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15679 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;Total ram usage:        2 bytes
 15684 ;; Hardware stack levels used:    1
 15685 ;; Hardware stack levels required when called:    5
 15686 ;; This function calls:
 15687 ;;		_LedPointSelect
 15688 ;; This function is called by:
 15689 ;;		_setDimmerLights_ERROR
 15690 ;;		_setDimmerLights
 15691 ;;		_setLED_Initialization
 15692 ;;		_setLoad_Exceptions
 15693 ;;		_setOverTemp_Exceptions
 15694 ;;		_setPowerFault_Exceptions
 15695 ;;		_setSw_Initialization
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           
 15700                           ;psect for function _setLED
 15701  1FA2                     _setLED:	
 15702                           
 15703                           ;incstack = 0
 15704                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15705                           ;setLED@led stored from wreg
 15706  1FA2  0020               	movlb	0	; select bank0
 15707  1FA3  00A3               	movwf	setLED@led
 15708                           
 15709                           ;LED_B1.c: 76: LedPointSelect(led);
 15710  1FA4  0823               	movf	setLED@led,w
 15711  1FA5  3198  207F  319F   	fcall	_LedPointSelect
 15712                           
 15713                           ;LED_B1.c: 77: if(command == 0)
 15714  1FA8  0020               	movlb	0	; select bank0
 15715  1FA9  08A2               	movf	setLED@command,f
 15716  1FAA  1D03               	skipz
 15717  1FAB  2FBE               	goto	l8714
 15718                           
 15719                           ;LED_B1.c: 78: {
 15720                           ;LED_B1.c: 80: if(led == 1)
 15721  1FAC  0823               	movf	setLED@led,w
 15722  1FAD  3A01               	xorlw	1
 15723  1FAE  1D03               	skipz
 15724  1FAF  2FB2               	goto	l8706
 15725                           
 15726                           ;LED_B1.c: 81: {
 15727                           ;LED_B1.c: 85: RA3=1;
 15728  1FB0  158C               	bsf	12,3	;volatile
 15729                           
 15730                           ;LED_B1.c: 87: }
 15731  1FB1  0008               	return
 15732  1FB2                     l8706:	
 15733                           
 15734                           ;LED_B1.c: 90: else if(led == 2)
 15735  1FB2  0823               	movf	setLED@led,w
 15736  1FB3  3A02               	xorlw	2
 15737  1FB4  1D03               	skipz
 15738  1FB5  2FB8               	goto	l8710
 15739                           
 15740                           ;LED_B1.c: 91: {
 15741                           ;LED_B1.c: 95: RC7=1;
 15742  1FB6  178E               	bsf	14,7	;volatile
 15743                           
 15744                           ;LED_B1.c: 97: }
 15745  1FB7  0008               	return
 15746  1FB8                     l8710:	
 15747                           
 15748                           ;LED_B1.c: 110: else if(led == 99)
 15749  1FB8  0823               	movf	setLED@led,w
 15750  1FB9  3A63               	xorlw	99
 15751  1FBA  1D03               	skipz
 15752  1FBB  0008               	return
 15753                           
 15754                           ;LED_B1.c: 111: {
 15755                           ;LED_B1.c: 115: RB5=1;
 15756  1FBC  168D               	bsf	13,5	;volatile
 15757                           
 15758                           ;LED_B1.c: 117: }
 15759                           ;LED_B1.c: 119: }
 15760  1FBD  0008               	return
 15761  1FBE                     l8714:	
 15762                           
 15763                           ;LED_B1.c: 120: else if(command == 1)
 15764  1FBE  0822               	movf	setLED@command,w
 15765  1FBF  3A01               	xorlw	1
 15766  1FC0  1D03               	skipz
 15767  1FC1  2FD4               	goto	l8728
 15768                           
 15769                           ;LED_B1.c: 121: {
 15770                           ;LED_B1.c: 123: if(led == 1)
 15771  1FC2  0823               	movf	setLED@led,w
 15772  1FC3  3A01               	xorlw	1
 15773  1FC4  1D03               	skipz
 15774  1FC5  2FC8               	goto	l8720
 15775                           
 15776                           ;LED_B1.c: 124: {
 15777                           ;LED_B1.c: 128: RA3=0;
 15778  1FC6  118C               	bcf	12,3	;volatile
 15779                           
 15780                           ;LED_B1.c: 130: }
 15781  1FC7  0008               	return
 15782  1FC8                     l8720:	
 15783                           
 15784                           ;LED_B1.c: 133: else if(led == 2)
 15785  1FC8  0823               	movf	setLED@led,w
 15786  1FC9  3A02               	xorlw	2
 15787  1FCA  1D03               	skipz
 15788  1FCB  2FCE               	goto	l8724
 15789                           
 15790                           ;LED_B1.c: 134: {
 15791                           ;LED_B1.c: 138: RC7=0;
 15792  1FCC  138E               	bcf	14,7	;volatile
 15793                           
 15794                           ;LED_B1.c: 140: }
 15795  1FCD  0008               	return
 15796  1FCE                     l8724:	
 15797                           
 15798                           ;LED_B1.c: 153: else if(led == 99)
 15799  1FCE  0823               	movf	setLED@led,w
 15800  1FCF  3A63               	xorlw	99
 15801  1FD0  1D03               	skipz
 15802  1FD1  0008               	return
 15803                           
 15804                           ;LED_B1.c: 154: {
 15805                           ;LED_B1.c: 158: RB5=0;
 15806  1FD2  128D               	bcf	13,5	;volatile
 15807                           
 15808                           ;LED_B1.c: 160: }
 15809                           ;LED_B1.c: 162: }
 15810  1FD3  0008               	return
 15811  1FD4                     l8728:	
 15812                           
 15813                           ;LED_B1.c: 163: else if(command == 10)
 15814  1FD4  0822               	movf	setLED@command,w
 15815  1FD5  3A0A               	xorlw	10
 15816  1FD6  1D03               	skipz
 15817  1FD7  2FF6               	goto	l8744
 15818                           
 15819                           ;LED_B1.c: 164: {
 15820                           ;LED_B1.c: 165: LED->GO=0;
 15821  1FD8  0021               	movlb	1	; select bank1
 15822  1FD9  083B               	movf	_LED^(0+128),w
 15823  1FDA  0086               	movwf	6
 15824  1FDB  0187               	clrf	7
 15825  1FDC  1081               	bcf	1,1
 15826                           
 15827                           ;LED_B1.c: 166: LED->Time=0;
 15828  1FDD  0A3B               	incf	_LED^(0+128),w
 15829  1FDE  0086               	movwf	6
 15830  1FDF  0187               	clrf	7
 15831  1FE0  3000               	movlw	0
 15832  1FE1  3FC0               	movwi [0]fsr1
 15833  1FE2  3FC1               	movwi [1]fsr1
 15834                           
 15835                           ;LED_B1.c: 168: if(led == 1)
 15836  1FE3  0020               	movlb	0	; select bank0
 15837  1FE4  0823               	movf	setLED@led,w
 15838  1FE5  3A01               	xorlw	1
 15839  1FE6  1D03               	skipz
 15840  1FE7  2FEA               	goto	l8736
 15841                           
 15842                           ;LED_B1.c: 169: {
 15843                           ;LED_B1.c: 173: RA3=1;
 15844  1FE8  158C               	bsf	12,3	;volatile
 15845                           
 15846                           ;LED_B1.c: 175: }
 15847  1FE9  0008               	return
 15848  1FEA                     l8736:	
 15849                           
 15850                           ;LED_B1.c: 178: else if(led == 2)
 15851  1FEA  0823               	movf	setLED@led,w
 15852  1FEB  3A02               	xorlw	2
 15853  1FEC  1D03               	skipz
 15854  1FED  2FF0               	goto	l8740
 15855                           
 15856                           ;LED_B1.c: 179: {
 15857                           ;LED_B1.c: 183: RC7=1;
 15858  1FEE  178E               	bsf	14,7	;volatile
 15859                           
 15860                           ;LED_B1.c: 185: }
 15861  1FEF  0008               	return
 15862  1FF0                     l8740:	
 15863                           
 15864                           ;LED_B1.c: 198: else if(led == 99)
 15865  1FF0  0823               	movf	setLED@led,w
 15866  1FF1  3A63               	xorlw	99
 15867  1FF2  1D03               	skipz
 15868  1FF3  0008               	return
 15869                           
 15870                           ;LED_B1.c: 199: {
 15871                           ;LED_B1.c: 203: RB5=1;
 15872  1FF4  168D               	bsf	13,5	;volatile
 15873                           
 15874                           ;LED_B1.c: 205: }
 15875                           ;LED_B1.c: 207: }
 15876  1FF5  0008               	return
 15877  1FF6                     l8744:	
 15878                           
 15879                           ;LED_B1.c: 208: else if(command == 11)
 15880  1FF6  0822               	movf	setLED@command,w
 15881  1FF7  3A0B               	xorlw	11
 15882  1FF8  1D03               	skipz
 15883  1FF9  0008               	return
 15884                           
 15885                           ;LED_B1.c: 209: {
 15886                           ;LED_B1.c: 210: LED->GO=1;
 15887  1FFA  0021               	movlb	1	; select bank1
 15888  1FFB  083B               	movf	_LED^(0+128),w
 15889  1FFC  0086               	movwf	6
 15890  1FFD  0187               	clrf	7
 15891  1FFE  1481               	bsf	1,1
 15892  1FFF  0008               	return
 15893  2000                     __end_of_setLED:	
 15894                           
 15895                           	psect	text92
 15896  187F                     __ptext92:	
 15897 ;; *************** function _LedPointSelect *****************
 15898 ;; Defined at:
 15899 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1.
      +2.1\Release\LED_B1.c"
 15900 ;; Parameters:    Size  Location     Type
 15901 ;;  led             1    wreg     unsigned char 
 15902 ;; Auto vars:     Size  Location     Type
 15903 ;;  led             1    1[BANK0 ] unsigned char 
 15904 ;; Return value:  Size  Location     Type
 15905 ;;		None               void
 15906 ;; Registers used:
 15907 ;;		wreg
 15908 ;; Tracked objects:
 15909 ;;		On entry : 0/0
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15915 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15917 ;;Total ram usage:        2 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; Hardware stack levels required when called:    4
 15920 ;; This function calls:
 15921 ;;		Nothing
 15922 ;; This function is called by:
 15923 ;;		_setLED_Initialization
 15924 ;;		_setLED
 15925 ;;		_setLED_Main
 15926 ;; This function uses a non-reentrant model
 15927 ;;
 15928                           
 15929                           
 15930                           ;psect for function _LedPointSelect
 15931  187F                     _LedPointSelect:	
 15932                           
 15933                           ;incstack = 0
 15934                           ; Regs used in _LedPointSelect: [wreg]
 15935                           ;LedPointSelect@led stored from wreg
 15936  187F  0020               	movlb	0	; select bank0
 15937  1880  00A1               	movwf	LedPointSelect@led
 15938                           
 15939                           ;LED_B1.c: 10: if(led == 1)
 15940  1881  0821               	movf	LedPointSelect@led,w
 15941  1882  3A01               	xorlw	1
 15942  1883  1D03               	skipz
 15943  1884  288B               	goto	l6440
 15944                           
 15945                           ;LED_B1.c: 11: {
 15946                           ;LED_B1.c: 12: LED=&VarLED1;
 15947  1885  30D9               	movlw	_VarLED1& (0+255)
 15948  1886  00A0               	movwf	??_LedPointSelect
 15949  1887  0820               	movf	??_LedPointSelect,w
 15950  1888  0021               	movlb	1	; select bank1
 15951  1889  00BB               	movwf	_LED^(0+128)
 15952                           
 15953                           ;LED_B1.c: 13: }
 15954  188A  0008               	return
 15955  188B                     l6440:	
 15956                           
 15957                           ;LED_B1.c: 16: else if(led == 2)
 15958  188B  0020               	movlb	0	; select bank0
 15959  188C  0821               	movf	LedPointSelect@led,w
 15960  188D  3A02               	xorlw	2
 15961  188E  1D03               	skipz
 15962  188F  2896               	goto	l6444
 15963                           
 15964                           ;LED_B1.c: 17: {
 15965                           ;LED_B1.c: 18: LED=&VarLED2;
 15966  1890  30DD               	movlw	_VarLED2& (0+255)
 15967  1891  00A0               	movwf	??_LedPointSelect
 15968  1892  0820               	movf	??_LedPointSelect,w
 15969  1893  0021               	movlb	1	; select bank1
 15970  1894  00BB               	movwf	_LED^(0+128)
 15971                           
 15972                           ;LED_B1.c: 19: }
 15973  1895  0008               	return
 15974  1896                     l6444:	
 15975                           
 15976                           ;LED_B1.c: 28: else if(led == 99)
 15977  1896  0020               	movlb	0	; select bank0
 15978  1897  0821               	movf	LedPointSelect@led,w
 15979  1898  3A63               	xorlw	99
 15980  1899  1D03               	skipz
 15981  189A  0008               	return
 15982                           
 15983                           ;LED_B1.c: 29: {
 15984                           ;LED_B1.c: 30: LED=&VarErrLED;
 15985  189B  30D5               	movlw	_VarErrLED& (0+255)
 15986  189C  00A0               	movwf	??_LedPointSelect
 15987  189D  0820               	movf	??_LedPointSelect,w
 15988  189E  0021               	movlb	1	; select bank1
 15989  189F  00BB               	movwf	_LED^(0+128)
 15990  18A0  0008               	return
 15991  18A1                     __end_of_LedPointSelect:	
 15992                           
 15993                           	psect	text93
 15994  2712                     __ptext93:	
 15995 ;; *************** function _DimmerLights_Close *****************
 15996 ;; Defined at:
 15997 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Dimmer_B1.c"
 15998 ;; Parameters:    Size  Location     Type
 15999 ;;		None
 16000 ;; Auto vars:     Size  Location     Type
 16001 ;;		None
 16002 ;; Return value:  Size  Location     Type
 16003 ;;		None               void
 16004 ;; Registers used:
 16005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16006 ;; Tracked objects:
 16007 ;;		On entry : 0/0
 16008 ;;		On exit  : 0/0
 16009 ;;		Unchanged: 0/0
 16010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;Total ram usage:        0 bytes
 16016 ;; Hardware stack levels used:    1
 16017 ;; Hardware stack levels required when called:    5
 16018 ;; This function calls:
 16019 ;;		_getDimmerLights_StatusFlag
 16020 ;;		_setLoad_GO
 16021 ;; This function is called by:
 16022 ;;		_DimmerLights_Main
 16023 ;; This function uses a non-reentrant model
 16024 ;;
 16025                           
 16026                           
 16027                           ;psect for function _DimmerLights_Close
 16028  2712                     _DimmerLights_Close:	
 16029                           
 16030                           ;Dimmer_B1.c: 94: if(Dimmer->Detect)
 16031                           
 16032                           ;incstack = 0
 16033                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16034  2712  0021               	movlb	1	; select bank1
 16035  2713  0839               	movf	_Dimmer^(0+128),w
 16036  2714  0086               	movwf	6
 16037  2715  0187               	clrf	7
 16038  2716  1C01               	btfss	1,0
 16039  2717  0008               	return
 16040                           
 16041                           ;Dimmer_B1.c: 95: {
 16042                           ;Dimmer_B1.c: 96: Dimmer->Detect=0;
 16043  2718  0839               	movf	_Dimmer^(0+128),w
 16044  2719  0086               	movwf	6
 16045  271A  0187               	clrf	7
 16046  271B  1001               	bcf	1,0
 16047                           
 16048                           ;Dimmer_B1.c: 97: if(!getDimmerLights_StatusFlag())
 16049  271C  31A6  2652  31A7   	fcall	_getDimmerLights_StatusFlag
 16050  271F  3800               	iorlw	0
 16051  2720  1D03               	skipz
 16052  2721  0008               	return
 16053                           
 16054                           ;Dimmer_B1.c: 98: {
 16055                           ;Dimmer_B1.c: 99: setLoad_GO(0);
 16056  2722  3000               	movlw	0
 16057  2723  31A4  244D         	fcall	_setLoad_GO
 16058                           
 16059                           ;Dimmer_B1.c: 100: Memory->GO=1; if(!1) { Memory->Time=1; } ;;
 16060  2725  0021               	movlb	1	; select bank1
 16061  2726  0868               	movf	_Memory^(0+128),w
 16062  2727  3E22               	addlw	34
 16063  2728  0086               	movwf	6
 16064  2729  3002               	movlw	2	; select bank4/5
 16065  272A  0087               	movwf	7
 16066  272B  1481               	bsf	1,1
 16067  272C  0008               	return
 16068  272D                     __end_of_DimmerLights_Close:	
 16069                           
 16070                           	psect	text94
 16071  244D                     __ptext94:	
 16072 ;; *************** function _setLoad_GO *****************
 16073 ;; Defined at:
 16074 ;;		line 262 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;  command         1    wreg     unsigned char 
 16077 ;; Auto vars:     Size  Location     Type
 16078 ;;  command         1    0[BANK0 ] unsigned char 
 16079 ;; Return value:  Size  Location     Type
 16080 ;;		None               void
 16081 ;; Registers used:
 16082 ;;		wreg, fsr1l, fsr1h
 16083 ;; Tracked objects:
 16084 ;;		On entry : 0/0
 16085 ;;		On exit  : 0/0
 16086 ;;		Unchanged: 0/0
 16087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16092 ;;Total ram usage:        1 bytes
 16093 ;; Hardware stack levels used:    1
 16094 ;; Hardware stack levels required when called:    4
 16095 ;; This function calls:
 16096 ;;		Nothing
 16097 ;; This function is called by:
 16098 ;;		_DimmerLights_Close
 16099 ;; This function uses a non-reentrant model
 16100 ;;
 16101                           
 16102                           
 16103                           ;psect for function _setLoad_GO
 16104  244D                     _setLoad_GO:	
 16105                           
 16106                           ;incstack = 0
 16107                           ; Regs used in _setLoad_GO: [wregfsr1]
 16108                           ;setLoad_GO@command stored from wreg
 16109  244D  0020               	movlb	0	; select bank0
 16110  244E  00A0               	movwf	setLoad_GO@command
 16111                           
 16112                           ;OverLoad_B1.c: 264: Load->GO=command;
 16113  244F  086E               	movf	_Load,w
 16114  2450  0086               	movwf	6
 16115  2451  3002               	movlw	2	; select bank4/5
 16116  2452  0087               	movwf	7
 16117  2453  0820               	movf	setLoad_GO@command,w
 16118  2454  1081               	bcf	1,1
 16119  2455  1D03               	skipz
 16120  2456  1481               	bsf	1,1
 16121  2457  0008               	return
 16122  2458                     __end_of_setLoad_GO:	
 16123                           
 16124                           	psect	text95
 16125  2652                     __ptext95:	
 16126 ;; *************** function _getDimmerLights_StatusFlag *****************
 16127 ;; Defined at:
 16128 ;;		line 199 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 16129 ;; Parameters:    Size  Location     Type
 16130 ;;		None
 16131 ;; Auto vars:     Size  Location     Type
 16132 ;;  Status          1    1[BANK0 ] unsigned char 
 16133 ;; Return value:  Size  Location     Type
 16134 ;;                  1    wreg      unsigned char 
 16135 ;; Registers used:
 16136 ;;		wreg, fsr1l, fsr1h, status,2
 16137 ;; Tracked objects:
 16138 ;;		On entry : 0/0
 16139 ;;		On exit  : 0/0
 16140 ;;		Unchanged: 0/0
 16141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16143 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16144 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16145 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16146 ;;Total ram usage:        3 bytes
 16147 ;; Hardware stack levels used:    1
 16148 ;; Hardware stack levels required when called:    4
 16149 ;; This function calls:
 16150 ;;		Nothing
 16151 ;; This function is called by:
 16152 ;;		_DimmerLights_Close
 16153 ;;		_DimmerLights_Exceptions
 16154 ;; This function uses a non-reentrant model
 16155 ;;
 16156                           
 16157                           
 16158                           ;psect for function _getDimmerLights_StatusFlag
 16159  2652                     _getDimmerLights_StatusFlag:	
 16160                           
 16161                           ;Dimmer_B1.c: 201: char Status=0;
 16162                           
 16163                           ;incstack = 0
 16164                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2]
 16165  2652  0020               	movlb	0	; select bank0
 16166  2653  01A1               	clrf	getDimmerLights_StatusFlag@Status
 16167                           
 16168                           ;Dimmer_B1.c: 208: Status=(DimmerLights11->StatusFlag || DimmerLights22->StatusFlag)?1:0
      +                          ;
 16169  2654  01A2               	clrf	_getDimmerLights_StatusFlag$1814
 16170  2655  0AA2               	incf	_getDimmerLights_StatusFlag$1814,f
 16171  2656  0879               	movf	_DimmerLights11,w
 16172  2657  0086               	movwf	6
 16173  2658  3001               	movlw	1	; select bank2/3
 16174  2659  0087               	movwf	7
 16175  265A  1B01               	btfsc	1,6
 16176  265B  2E62               	goto	l6710
 16177  265C  087A               	movf	_DimmerLights22,w
 16178  265D  0086               	movwf	6
 16179  265E  3001               	movlw	1	; select bank2/3
 16180  265F  0087               	movwf	7
 16181  2660  1F01               	btfss	1,6
 16182  2661  01A2               	clrf	_getDimmerLights_StatusFlag$1814
 16183  2662                     l6710:	
 16184  2662  0822               	movf	_getDimmerLights_StatusFlag$1814,w
 16185  2663  00A0               	movwf	??_getDimmerLights_StatusFlag
 16186  2664  0820               	movf	??_getDimmerLights_StatusFlag,w
 16187  2665  00A1               	movwf	getDimmerLights_StatusFlag@Status
 16188                           
 16189                           ;Dimmer_B1.c: 215: return Status;
 16190  2666  0821               	movf	getDimmerLights_StatusFlag@Status,w
 16191  2667  0008               	return
 16192  2668                     __end_of_getDimmerLights_StatusFlag:	
 16193                           
 16194                           	psect	text96
 16195  2612                     __ptext96:	
 16196 ;; *************** function _DimmerLights_Initialization *****************
 16197 ;; Defined at:
 16198 ;;		line 32 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Dimmer_B1.c"
 16199 ;; Parameters:    Size  Location     Type
 16200 ;;		None
 16201 ;; Auto vars:     Size  Location     Type
 16202 ;;		None
 16203 ;; Return value:  Size  Location     Type
 16204 ;;		None               void
 16205 ;; Registers used:
 16206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16207 ;; Tracked objects:
 16208 ;;		On entry : 0/0
 16209 ;;		On exit  : 0/0
 16210 ;;		Unchanged: 0/0
 16211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16215 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16216 ;;Total ram usage:        1 bytes
 16217 ;; Hardware stack levels used:    1
 16218 ;; Hardware stack levels required when called:    6
 16219 ;; This function calls:
 16220 ;;		_Dimmer_Initialization
 16221 ;;		_setDimmerLights_Initialization
 16222 ;; This function is called by:
 16223 ;;		_main
 16224 ;; This function uses a non-reentrant model
 16225 ;;
 16226                           
 16227                           
 16228                           ;psect for function _DimmerLights_Initialization
 16229  2612                     _DimmerLights_Initialization:	
 16230                           
 16231                           ;Dimmer_B1.c: 35: DimmerLights11=&DimmerLights1;
 16232                           
 16233                           ;incstack = 0
 16234                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16235  2612  302E               	movlw	_DimmerLights1& (0+255)
 16236  2613  0020               	movlb	0	; select bank0
 16237  2614  00A4               	movwf	??_DimmerLights_Initialization
 16238  2615  0824               	movf	??_DimmerLights_Initialization,w
 16239  2616  00F9               	movwf	_DimmerLights11
 16240                           
 16241                           ;Dimmer_B1.c: 36: setDimmerLights_Initialization(1);
 16242  2617  3001               	movlw	1
 16243  2618  3199  21FD  31A6   	fcall	_setDimmerLights_Initialization
 16244                           
 16245                           ;Dimmer_B1.c: 40: DimmerLights22=&DimmerLights2;
 16246  261B  303B               	movlw	_DimmerLights2& (0+255)
 16247  261C  0020               	movlb	0	; select bank0
 16248  261D  00A4               	movwf	??_DimmerLights_Initialization
 16249  261E  0824               	movf	??_DimmerLights_Initialization,w
 16250  261F  00FA               	movwf	_DimmerLights22
 16251                           
 16252                           ;Dimmer_B1.c: 41: setDimmerLights_Initialization(2);
 16253  2620  3002               	movlw	2
 16254  2621  3199  21FD  31A6   	fcall	_setDimmerLights_Initialization
 16255                           
 16256                           ;Dimmer_B1.c: 50: Dimmer_Initialization();
 16257  2624  31A3  23D5         	fcall	_Dimmer_Initialization
 16258  2626  0008               	return
 16259  2627                     __end_of_DimmerLights_Initialization:	
 16260                           
 16261                           	psect	text97
 16262  19FD                     __ptext97:	
 16263 ;; *************** function _setDimmerLights_Initialization *****************
 16264 ;; Defined at:
 16265 ;;		line 54 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Dimmer_B1.c"
 16266 ;; Parameters:    Size  Location     Type
 16267 ;;  lights          1    wreg     unsigned char 
 16268 ;; Auto vars:     Size  Location     Type
 16269 ;;  lights          1    3[BANK0 ] unsigned char 
 16270 ;; Return value:  Size  Location     Type
 16271 ;;		None               void
 16272 ;; Registers used:
 16273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16274 ;; Tracked objects:
 16275 ;;		On entry : 0/0
 16276 ;;		On exit  : 0/0
 16277 ;;		Unchanged: 0/0
 16278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16283 ;;Total ram usage:        2 bytes
 16284 ;; Hardware stack levels used:    1
 16285 ;; Hardware stack levels required when called:    5
 16286 ;; This function calls:
 16287 ;;		_DimmerLightsPointSelect
 16288 ;; This function is called by:
 16289 ;;		_DimmerLights_Initialization
 16290 ;; This function uses a non-reentrant model
 16291 ;;
 16292                           
 16293                           
 16294                           ;psect for function _setDimmerLights_Initialization
 16295  19FD                     _setDimmerLights_Initialization:	
 16296                           
 16297                           ;incstack = 0
 16298                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 16299                           ;setDimmerLights_Initialization@lights stored from wreg
 16300  19FD  0020               	movlb	0	; select bank0
 16301  19FE  00A3               	movwf	setDimmerLights_Initialization@lights
 16302                           
 16303                           ;Dimmer_B1.c: 56: DimmerLightsPointSelect(lights);
 16304  19FF  0823               	movf	setDimmerLights_Initialization@lights,w
 16305  1A00  31A5  25D6         	fcall	_DimmerLightsPointSelect
 16306                           
 16307                           ;Dimmer_B1.c: 57: DimmerLights->Clear=1;
 16308  1A02  0020               	movlb	0	; select bank0
 16309  1A03  086C               	movf	_DimmerLights,w
 16310  1A04  3E0C               	addlw	12
 16311  1A05  0086               	movwf	6
 16312  1A06  3001               	movlw	1	; select bank2/3
 16313  1A07  0087               	movwf	7
 16314  1A08  1401               	bsf	1,0
 16315                           
 16316                           ;Dimmer_B1.c: 63: DimmerLights->MaxmumValue=((char)((100-55)*1.5));
 16317  1A09  3043               	movlw	67
 16318  1A0A  00A2               	movwf	??_setDimmerLights_Initialization
 16319  1A0B  086C               	movf	_DimmerLights,w
 16320  1A0C  3E05               	addlw	5
 16321  1A0D  0086               	movwf	6
 16322  1A0E  3001               	movlw	1	; select bank2/3
 16323  1A0F  0087               	movwf	7
 16324  1A10  0822               	movf	??_setDimmerLights_Initialization,w
 16325  1A11  0081               	movwf	1
 16326                           
 16327                           ;Dimmer_B1.c: 64: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 16328  1A12  3078               	movlw	120
 16329  1A13  00A2               	movwf	??_setDimmerLights_Initialization
 16330  1A14  086C               	movf	_DimmerLights,w
 16331  1A15  3E06               	addlw	6
 16332  1A16  0086               	movwf	6
 16333  1A17  3001               	movlw	1	; select bank2/3
 16334  1A18  0087               	movwf	7
 16335  1A19  0822               	movf	??_setDimmerLights_Initialization,w
 16336  1A1A  0081               	movwf	1
 16337                           
 16338                           ;Dimmer_B1.c: 74: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 16339  1A1B  086C               	movf	_DimmerLights,w
 16340  1A1C  3E06               	addlw	6
 16341  1A1D  0086               	movwf	6
 16342  1A1E  3001               	movlw	1	; select bank2/3
 16343  1A1F  0087               	movwf	7
 16344  1A20  0801               	movf	1,w
 16345  1A21  00A2               	movwf	??_setDimmerLights_Initialization
 16346  1A22  086C               	movf	_DimmerLights,w
 16347  1A23  3E04               	addlw	4
 16348  1A24  0086               	movwf	6
 16349  1A25  3001               	movlw	1	; select bank2/3
 16350  1A26  0087               	movwf	7
 16351  1A27  0822               	movf	??_setDimmerLights_Initialization,w
 16352  1A28  0081               	movwf	1
 16353  1A29  0008               	return
 16354  1A2A                     __end_of_setDimmerLights_Initialization:	
 16355                           
 16356                           	psect	text98
 16357  23D5                     __ptext98:	
 16358 ;; *************** function _Dimmer_Initialization *****************
 16359 ;; Defined at:
 16360 ;;		line 511 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;		None
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;		None
 16365 ;; Return value:  Size  Location     Type
 16366 ;;		None               void
 16367 ;; Registers used:
 16368 ;;		wreg
 16369 ;; Tracked objects:
 16370 ;;		On entry : 0/0
 16371 ;;		On exit  : 0/0
 16372 ;;		Unchanged: 0/0
 16373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16377 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16378 ;;Total ram usage:        1 bytes
 16379 ;; Hardware stack levels used:    1
 16380 ;; Hardware stack levels required when called:    4
 16381 ;; This function calls:
 16382 ;;		Nothing
 16383 ;; This function is called by:
 16384 ;;		_DimmerLights_Initialization
 16385 ;; This function uses a non-reentrant model
 16386 ;;
 16387                           
 16388                           
 16389                           ;psect for function _Dimmer_Initialization
 16390  23D5                     _Dimmer_Initialization:	
 16391                           
 16392                           ;Dimmer_B1.c: 513: Dimmer=&Dimmer1;
 16393                           
 16394                           ;incstack = 0
 16395                           ; Regs used in _Dimmer_Initialization: [wreg]
 16396  23D5  30E1               	movlw	_Dimmer1& (0+255)
 16397  23D6  0020               	movlb	0	; select bank0
 16398  23D7  00A0               	movwf	??_Dimmer_Initialization
 16399  23D8  0820               	movf	??_Dimmer_Initialization,w
 16400  23D9  0021               	movlb	1	; select bank1
 16401  23DA  00B9               	movwf	_Dimmer^(0+128)
 16402  23DB  0008               	return
 16403  23DC                     __end_of_Dimmer_Initialization:	
 16404                           
 16405                           	psect	text99
 16406  23F9                     __ptext99:	
 16407 ;; *************** function _DelayOff_Main *****************
 16408 ;; Defined at:
 16409 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\DelayOff_B1.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;		None
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;		None
 16414 ;; Return value:  Size  Location     Type
 16415 ;;		None               void
 16416 ;; Registers used:
 16417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16427 ;;Total ram usage:        0 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:    9
 16430 ;; This function calls:
 16431 ;;		_DlyOff_Main
 16432 ;; This function is called by:
 16433 ;;		_main
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           
 16438                           ;psect for function _DelayOff_Main
 16439  23F9                     _DelayOff_Main:	
 16440                           
 16441                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 16442                           
 16443                           ;incstack = 0
 16444                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16445  23F9  3001               	movlw	1
 16446  23FA  3188  2004  31A3   	fcall	_DlyOff_Main
 16447                           
 16448                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 16449  23FD  3002               	movlw	2
 16450  23FE  3188  2004         	fcall	_DlyOff_Main
 16451  2400  0008               	return
 16452  2401                     __end_of_DelayOff_Main:	
 16453                           
 16454                           	psect	text100
 16455  0804                     __ptext100:	
 16456 ;; *************** function _DlyOff_Main *****************
 16457 ;; Defined at:
 16458 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\DelayOff_B1.c"
 16459 ;; Parameters:    Size  Location     Type
 16460 ;;  sw              1    wreg     unsigned char 
 16461 ;; Auto vars:     Size  Location     Type
 16462 ;;  sw              1   68[BANK0 ] unsigned char 
 16463 ;; Return value:  Size  Location     Type
 16464 ;;		None               void
 16465 ;; Registers used:
 16466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16467 ;; Tracked objects:
 16468 ;;		On entry : 0/0
 16469 ;;		On exit  : 0/0
 16470 ;;		Unchanged: 0/0
 16471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16475 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16476 ;;Total ram usage:        3 bytes
 16477 ;; Hardware stack levels used:    1
 16478 ;; Hardware stack levels required when called:    8
 16479 ;; This function calls:
 16480 ;;		_DelayOffPointSelect
 16481 ;;		_setBuz
 16482 ;;		_setDimmerLights_Switch
 16483 ;;		_setDimmerLights_Trigger
 16484 ;;		_setRFSW_Status
 16485 ;;		_setRF_DimmerLights
 16486 ;;		_setSw_Status
 16487 ;;		_setTxData
 16488 ;; This function is called by:
 16489 ;;		_DelayOff_Main
 16490 ;; This function uses a non-reentrant model
 16491 ;;
 16492                           
 16493                           
 16494                           ;psect for function _DlyOff_Main
 16495  0804                     _DlyOff_Main:	
 16496                           
 16497                           ;incstack = 0
 16498                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16499                           ;DlyOff_Main@sw stored from wreg
 16500  0804  0020               	movlb	0	; select bank0
 16501  0805  00E4               	movwf	DlyOff_Main@sw
 16502                           
 16503                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 16504  0806  0864               	movf	DlyOff_Main@sw,w
 16505  0807  31A6  267E  3188   	fcall	_DelayOffPointSelect
 16506                           
 16507                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 16508  080A  0021               	movlb	1	; select bank1
 16509  080B  0838               	movf	_DelayOff^(0+128),w
 16510  080C  0086               	movwf	6
 16511  080D  0187               	clrf	7
 16512  080E  1C81               	btfss	1,1
 16513  080F  0008               	return
 16514                           
 16515                           ;DelayOff_B1.c: 70: {
 16516                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 16517  0810  0838               	movf	_DelayOff^(0+128),w
 16518  0811  3E02               	addlw	2
 16519  0812  0086               	movwf	6
 16520  0813  0187               	clrf	7
 16521  0814  3001               	movlw	1
 16522  0815  0781               	addwf	1,f
 16523  0816  3141               	addfsr 1,1
 16524  0817  1803               	skipnc
 16525  0818  0A81               	incf	1,f
 16526                           
 16527                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5650)
 16528  0819  0838               	movf	_DelayOff^(0+128),w
 16529  081A  3E02               	addlw	2
 16530  081B  0086               	movwf	6
 16531  081C  0187               	clrf	7
 16532  081D  3F40               	moviw [0]fsr1
 16533  081E  0020               	movlb	0	; select bank0
 16534  081F  00E2               	movwf	??_DlyOff_Main
 16535  0820  3F41               	moviw [1]fsr1
 16536  0821  00E3               	movwf	??_DlyOff_Main+1
 16537  0822  3016               	movlw	22
 16538  0823  0263               	subwf	??_DlyOff_Main+1,w
 16539  0824  3012               	movlw	18
 16540  0825  1903               	skipnz
 16541  0826  0262               	subwf	??_DlyOff_Main,w
 16542  0827  1C03               	skipc
 16543  0828  0008               	return
 16544                           
 16545                           ;DelayOff_B1.c: 73: {
 16546                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 16547  0829  0021               	movlb	1	; select bank1
 16548  082A  0838               	movf	_DelayOff^(0+128),w
 16549  082B  3E02               	addlw	2
 16550  082C  0086               	movwf	6
 16551  082D  0187               	clrf	7
 16552  082E  3000               	movlw	0
 16553  082F  3FC0               	movwi [0]fsr1
 16554  0830  3FC1               	movwi [1]fsr1
 16555                           
 16556                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 16557  0831  3001               	movlw	1
 16558  0832  0020               	movlb	0	; select bank0
 16559  0833  00E2               	movwf	??_DlyOff_Main
 16560  0834  0021               	movlb	1	; select bank1
 16561  0835  0838               	movf	_DelayOff^(0+128),w
 16562  0836  3E04               	addlw	4
 16563  0837  0086               	movwf	6
 16564  0838  0187               	clrf	7
 16565  0839  0020               	movlb	0	; select bank0
 16566  083A  0862               	movf	??_DlyOff_Main,w
 16567  083B  0781               	addwf	1,f
 16568                           
 16569                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 16570  083C  0021               	movlb	1	; select bank1
 16571  083D  0838               	movf	_DelayOff^(0+128),w
 16572  083E  3E04               	addlw	4
 16573  083F  0086               	movwf	6
 16574  0840  0187               	clrf	7
 16575  0841  0A38               	incf	_DelayOff^(0+128),w
 16576  0842  0084               	movwf	4
 16577  0843  0185               	clrf	5
 16578  0844  0800               	movf	0,w
 16579  0845  0201               	subwf	1,w
 16580  0846  1C03               	skipc
 16581  0847  0008               	return
 16582                           
 16583                           ;DelayOff_B1.c: 77: {
 16584                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 16585  0848  0838               	movf	_DelayOff^(0+128),w
 16586  0849  3E04               	addlw	4
 16587  084A  0086               	movwf	6
 16588  084B  0187               	clrf	7
 16589  084C  0181               	clrf	1
 16590                           
 16591                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 16592  084D  0838               	movf	_DelayOff^(0+128),w
 16593  084E  0086               	movwf	6
 16594  084F  0187               	clrf	7
 16595  0850  1081               	bcf	1,1
 16596                           
 16597                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 16598  0851  0020               	movlb	0	; select bank0
 16599  0852  01A2               	clrf	setSw_Status@command
 16600  0853  0864               	movf	DlyOff_Main@sw,w
 16601  0854  31A5  2536  3188   	fcall	_setSw_Status
 16602                           
 16603                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 16604  0857  0020               	movlb	0	; select bank0
 16605  0858  01A2               	clrf	setRFSW_Status@command
 16606  0859  0864               	movf	DlyOff_Main@sw,w
 16607  085A  31A5  2527  3188   	fcall	_setRFSW_Status
 16608                           
 16609                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 16610  085D  0020               	movlb	0	; select bank0
 16611  085E  01DD               	clrf	setRF_DimmerLights@on
 16612  085F  0864               	movf	DlyOff_Main@sw,w
 16613  0860  3191  2133  3188   	fcall	_setRF_DimmerLights
 16614                           
 16615                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 16616  0863  0020               	movlb	0	; select bank0
 16617  0864  01A2               	clrf	setDimmerLights_Trigger@command
 16618  0865  0AA2               	incf	setDimmerLights_Trigger@command,f
 16619  0866  0864               	movf	DlyOff_Main@sw,w
 16620  0867  31A5  2565  3188   	fcall	_setDimmerLights_Trigger
 16621                           
 16622                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 16623  086A  0020               	movlb	0	; select bank0
 16624  086B  01A2               	clrf	setDimmerLights_Switch@command
 16625  086C  0864               	movf	DlyOff_Main@sw,w
 16626  086D  31A5  2555  3188   	fcall	_setDimmerLights_Switch
 16627                           
 16628                           ;DelayOff_B1.c: 85: setTxData(1);
 16629  0870  3001               	movlw	1
 16630  0871  318B  2318  3188   	fcall	_setTxData
 16631                           
 16632                           ;DelayOff_B1.c: 86: setBuz(1,100);
 16633  0874  3064               	movlw	100
 16634  0875  0020               	movlb	0	; select bank0
 16635  0876  00A6               	movwf	setBuz@time
 16636  0877  3000               	movlw	0
 16637  0878  00A7               	movwf	setBuz@time+1
 16638  0879  3001               	movlw	1
 16639  087A  3193  23C7         	fcall	_setBuz
 16640  087C  0008               	return
 16641  087D                     __end_of_DlyOff_Main:	
 16642                           
 16643                           	psect	text101
 16644  0B18                     __ptext101:	
 16645 ;; *************** function _setTxData *****************
 16646 ;; Defined at:
 16647 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;  rf              1    wreg     unsigned char 
 16650 ;; Auto vars:     Size  Location     Type
 16651 ;;  rf              1    3[BANK0 ] unsigned char 
 16652 ;;  i               1    0        unsigned char 
 16653 ;; Return value:  Size  Location     Type
 16654 ;;		None               void
 16655 ;; Registers used:
 16656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16657 ;; Tracked objects:
 16658 ;;		On entry : 0/0
 16659 ;;		On exit  : 0/0
 16660 ;;		Unchanged: 0/0
 16661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;Total ram usage:        2 bytes
 16667 ;; Hardware stack levels used:    1
 16668 ;; Hardware stack levels required when called:    5
 16669 ;; This function calls:
 16670 ;;		_RfPointSelect
 16671 ;; This function is called by:
 16672 ;;		_DlyOff_Main
 16673 ;;		_setDimmerLights_Adj
 16674 ;;		_setControl_Lights_Table
 16675 ;;		_setRFSW_Control
 16676 ;;		_setRFSW_AdjControl
 16677 ;;		_Sw_DimmerOnFunc
 16678 ;;		_Sw_DimmerOffFunc
 16679 ;; This function uses a non-reentrant model
 16680 ;;
 16681                           
 16682                           
 16683                           ;psect for function _setTxData
 16684  0B18                     _setTxData:	
 16685                           
 16686                           ;incstack = 0
 16687                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16688                           ;setTxData@rf stored from wreg
 16689  0B18  0020               	movlb	0	; select bank0
 16690  0B19  00A3               	movwf	setTxData@rf
 16691                           
 16692                           ;RF_Control_B1.c: 135: char i;
 16693                           ;RF_Control_B1.c: 136: RfPointSelect(rf);
 16694  0B1A  0823               	movf	setTxData@rf,w
 16695  0B1B  31A4  2442  318B   	fcall	_RfPointSelect
 16696                           
 16697                           ;RF_Control_B1.c: 137: if(RF->Enable)
 16698  0B1E  087C               	movf	_RF,w
 16699  0B1F  0086               	movwf	6
 16700  0B20  0187               	clrf	7
 16701  0B21  1C01               	btfss	1,0
 16702  0B22  0008               	return
 16703                           
 16704                           ;RF_Control_B1.c: 138: {
 16705                           ;RF_Control_B1.c: 140: if(!RF->TransceiveGO)
 16706  0B23  087C               	movf	_RF,w
 16707  0B24  0086               	movwf	6
 16708  0B25  0187               	clrf	7
 16709  0B26  1901               	btfsc	1,2
 16710  0B27  0008               	return
 16711                           
 16712                           ;RF_Control_B1.c: 141: {
 16713                           ;RF_Control_B1.c: 142: RF->TransceiveGO=1;
 16714  0B28  087C               	movf	_RF,w
 16715  0B29  0086               	movwf	6
 16716  0B2A  0187               	clrf	7
 16717  0B2B  1501               	bsf	1,2
 16718                           
 16719                           ;RF_Control_B1.c: 151: RF_Data[0]=0x63;
 16720  0B2C  3063               	movlw	99
 16721  0B2D  0020               	movlb	0	; select bank0
 16722  0B2E  00A2               	movwf	??_setTxData
 16723  0B2F  0822               	movf	??_setTxData,w
 16724  0B30  0021               	movlb	1	; select bank1
 16725  0B31  00A0               	movwf	_RF_Data^(0+128)
 16726                           
 16727                           ;RF_Control_B1.c: 152: RF_Data[1]=0x02;
 16728  0B32  3002               	movlw	2
 16729  0B33  0020               	movlb	0	; select bank0
 16730  0B34  00A2               	movwf	??_setTxData
 16731  0B35  0822               	movf	??_setTxData,w
 16732  0B36  0021               	movlb	1	; select bank1
 16733  0B37  00A1               	movwf	(_RF_Data^(0+128)+1)
 16734                           
 16735                           ;RF_Control_B1.c: 153: RF_Data[2]=Product->Data[2];
 16736  0B38  0020               	movlb	0	; select bank0
 16737  0B39  086F               	movf	_Product,w
 16738  0B3A  0086               	movwf	6
 16739  0B3B  3001               	movlw	1	; select bank2/3
 16740  0B3C  0087               	movwf	7
 16741  0B3D  3001               	movlw	1	; select bank2/3
 16742  0B3E  3F42               	moviw [2]fsr1
 16743  0B3F  0021               	movlb	1	; select bank1
 16744  0B40  00A2               	movwf	(_RF_Data^(0+128)+2)
 16745                           
 16746                           ;RF_Control_B1.c: 154: RF_Data[3]=Product->Data[3];
 16747  0B41  0020               	movlb	0	; select bank0
 16748  0B42  086F               	movf	_Product,w
 16749  0B43  0086               	movwf	6
 16750  0B44  3001               	movlw	1	; select bank2/3
 16751  0B45  0087               	movwf	7
 16752  0B46  3001               	movlw	1	; select bank2/3
 16753  0B47  3F43               	moviw [3]fsr1
 16754  0B48  0021               	movlb	1	; select bank1
 16755  0B49  00A3               	movwf	(_RF_Data^(0+128)+3)
 16756                           
 16757                           ;RF_Control_B1.c: 155: RF_Data[4]=Product->Data[4];
 16758  0B4A  0020               	movlb	0	; select bank0
 16759  0B4B  086F               	movf	_Product,w
 16760  0B4C  0086               	movwf	6
 16761  0B4D  3001               	movlw	1	; select bank2/3
 16762  0B4E  0087               	movwf	7
 16763  0B4F  3001               	movlw	1	; select bank2/3
 16764  0B50  3F44               	moviw [4]fsr1
 16765  0B51  0021               	movlb	1	; select bank1
 16766  0B52  00A4               	movwf	(_RF_Data^(0+128)+4)
 16767                           
 16768                           ;RF_Control_B1.c: 156: RF_Data[5]=Product->Data[5];
 16769  0B53  0020               	movlb	0	; select bank0
 16770  0B54  086F               	movf	_Product,w
 16771  0B55  0086               	movwf	6
 16772  0B56  3001               	movlw	1	; select bank2/3
 16773  0B57  0087               	movwf	7
 16774  0B58  3001               	movlw	1	; select bank2/3
 16775  0B59  3F45               	moviw [5]fsr1
 16776  0B5A  0021               	movlb	1	; select bank1
 16777  0B5B  00A5               	movwf	(_RF_Data^(0+128)+5)
 16778                           
 16779                           ;RF_Control_B1.c: 157: RF_Data[6]=Product->Data[6];
 16780  0B5C  0020               	movlb	0	; select bank0
 16781  0B5D  086F               	movf	_Product,w
 16782  0B5E  0086               	movwf	6
 16783  0B5F  3001               	movlw	1	; select bank2/3
 16784  0B60  0087               	movwf	7
 16785  0B61  3001               	movlw	1	; select bank2/3
 16786  0B62  3F46               	moviw [6]fsr1
 16787  0B63  0021               	movlb	1	; select bank1
 16788  0B64  00A6               	movwf	(_RF_Data^(0+128)+6)
 16789                           
 16790                           ;RF_Control_B1.c: 158: RF_Data[7]=Product->Data[7];
 16791  0B65  0020               	movlb	0	; select bank0
 16792  0B66  086F               	movf	_Product,w
 16793  0B67  0086               	movwf	6
 16794  0B68  3001               	movlw	1	; select bank2/3
 16795  0B69  0087               	movwf	7
 16796  0B6A  3001               	movlw	1	; select bank2/3
 16797  0B6B  3F47               	moviw [7]fsr1
 16798  0B6C  0021               	movlb	1	; select bank1
 16799  0B6D  00A7               	movwf	(_RF_Data^(0+128)+7)
 16800                           
 16801                           ;RF_Control_B1.c: 159: RF_Data[8]=Product->Data[8];
 16802  0B6E  0020               	movlb	0	; select bank0
 16803  0B6F  086F               	movf	_Product,w
 16804  0B70  0086               	movwf	6
 16805  0B71  3001               	movlw	1	; select bank2/3
 16806  0B72  0087               	movwf	7
 16807  0B73  3001               	movlw	1	; select bank2/3
 16808  0B74  3F48               	moviw [8]fsr1
 16809  0B75  0021               	movlb	1	; select bank1
 16810  0B76  00A8               	movwf	(_RF_Data^(0+128)+8)
 16811                           
 16812                           ;RF_Control_B1.c: 160: RF_Data[9]=Product->Data[9];
 16813  0B77  0020               	movlb	0	; select bank0
 16814  0B78  086F               	movf	_Product,w
 16815  0B79  0086               	movwf	6
 16816  0B7A  3001               	movlw	1	; select bank2/3
 16817  0B7B  0087               	movwf	7
 16818  0B7C  3001               	movlw	1	; select bank2/3
 16819  0B7D  3F49               	moviw [9]fsr1
 16820  0B7E  0021               	movlb	1	; select bank1
 16821  0B7F  00A9               	movwf	(_RF_Data^(0+128)+9)
 16822                           
 16823                           ;RF_Control_B1.c: 161: RF_Data[10]=Product->Data[10];
 16824  0B80  0020               	movlb	0	; select bank0
 16825  0B81  086F               	movf	_Product,w
 16826  0B82  0086               	movwf	6
 16827  0B83  3001               	movlw	1	; select bank2/3
 16828  0B84  0087               	movwf	7
 16829  0B85  3001               	movlw	1	; select bank2/3
 16830  0B86  3F4A               	moviw [10]fsr1
 16831  0B87  0021               	movlb	1	; select bank1
 16832  0B88  00AA               	movwf	(_RF_Data^(0+128)+10)
 16833                           
 16834                           ;RF_Control_B1.c: 162: RF_Data[11]=Product->Data[11];
 16835  0B89  0020               	movlb	0	; select bank0
 16836  0B8A  086F               	movf	_Product,w
 16837  0B8B  0086               	movwf	6
 16838  0B8C  3001               	movlw	1	; select bank2/3
 16839  0B8D  0087               	movwf	7
 16840  0B8E  3001               	movlw	1	; select bank2/3
 16841  0B8F  3F4B               	moviw [11]fsr1
 16842  0B90  0021               	movlb	1	; select bank1
 16843  0B91  00AB               	movwf	(_RF_Data^(0+128)+11)
 16844                           
 16845                           ;RF_Control_B1.c: 163: RF_Data[12]=Product->Data[12];
 16846  0B92  0020               	movlb	0	; select bank0
 16847  0B93  086F               	movf	_Product,w
 16848  0B94  0086               	movwf	6
 16849  0B95  3001               	movlw	1	; select bank2/3
 16850  0B96  0087               	movwf	7
 16851  0B97  3001               	movlw	1	; select bank2/3
 16852  0B98  3F4C               	moviw [12]fsr1
 16853  0B99  0021               	movlb	1	; select bank1
 16854  0B9A  00AC               	movwf	(_RF_Data^(0+128)+12)
 16855                           
 16856                           ;RF_Control_B1.c: 164: RF_Data[13]=Product->Data[13];
 16857  0B9B  0020               	movlb	0	; select bank0
 16858  0B9C  086F               	movf	_Product,w
 16859  0B9D  0086               	movwf	6
 16860  0B9E  3001               	movlw	1	; select bank2/3
 16861  0B9F  0087               	movwf	7
 16862  0BA0  3001               	movlw	1	; select bank2/3
 16863  0BA1  3F4D               	moviw [13]fsr1
 16864  0BA2  0021               	movlb	1	; select bank1
 16865  0BA3  00AD               	movwf	(_RF_Data^(0+128)+13)
 16866                           
 16867                           ;RF_Control_B1.c: 165: RF_Data[14]=Product->Data[14];
 16868  0BA4  0020               	movlb	0	; select bank0
 16869  0BA5  086F               	movf	_Product,w
 16870  0BA6  0086               	movwf	6
 16871  0BA7  3001               	movlw	1	; select bank2/3
 16872  0BA8  0087               	movwf	7
 16873  0BA9  3001               	movlw	1	; select bank2/3
 16874  0BAA  3F4E               	moviw [14]fsr1
 16875  0BAB  0021               	movlb	1	; select bank1
 16876  0BAC  00AE               	movwf	(_RF_Data^(0+128)+14)
 16877                           
 16878                           ;RF_Control_B1.c: 166: RF_Data[15]=Product->Data[15];
 16879  0BAD  0020               	movlb	0	; select bank0
 16880  0BAE  086F               	movf	_Product,w
 16881  0BAF  0086               	movwf	6
 16882  0BB0  3001               	movlw	1	; select bank2/3
 16883  0BB1  0087               	movwf	7
 16884  0BB2  3001               	movlw	1	; select bank2/3
 16885  0BB3  3F4F               	moviw [15]fsr1
 16886  0BB4  0021               	movlb	1	; select bank1
 16887  0BB5  00AF               	movwf	(_RF_Data^(0+128)+15)
 16888                           
 16889                           ;RF_Control_B1.c: 167: RF_Data[16]=Product->Data[16];
 16890  0BB6  0020               	movlb	0	; select bank0
 16891  0BB7  086F               	movf	_Product,w
 16892  0BB8  0086               	movwf	6
 16893  0BB9  3001               	movlw	1	; select bank2/3
 16894  0BBA  0087               	movwf	7
 16895  0BBB  3001               	movlw	1	; select bank2/3
 16896  0BBC  3F50               	moviw [16]fsr1
 16897  0BBD  0021               	movlb	1	; select bank1
 16898  0BBE  00B0               	movwf	(_RF_Data^(0+128)+16)
 16899                           
 16900                           ;RF_Control_B1.c: 168: RF_Data[17]=Product->Data[17];
 16901  0BBF  0020               	movlb	0	; select bank0
 16902  0BC0  086F               	movf	_Product,w
 16903  0BC1  0086               	movwf	6
 16904  0BC2  3001               	movlw	1	; select bank2/3
 16905  0BC3  0087               	movwf	7
 16906  0BC4  3001               	movlw	1	; select bank2/3
 16907  0BC5  3F51               	moviw [17]fsr1
 16908  0BC6  0021               	movlb	1	; select bank1
 16909  0BC7  00B1               	movwf	(_RF_Data^(0+128)+17)
 16910                           
 16911                           ;RF_Control_B1.c: 169: RF_Data[18]=Product->Data[18];
 16912  0BC8  0020               	movlb	0	; select bank0
 16913  0BC9  086F               	movf	_Product,w
 16914  0BCA  0086               	movwf	6
 16915  0BCB  3001               	movlw	1	; select bank2/3
 16916  0BCC  0087               	movwf	7
 16917  0BCD  3001               	movlw	1	; select bank2/3
 16918  0BCE  3F52               	moviw [18]fsr1
 16919  0BCF  0021               	movlb	1	; select bank1
 16920  0BD0  00B2               	movwf	(_RF_Data^(0+128)+18)
 16921                           
 16922                           ;RF_Control_B1.c: 170: RF_Data[19]=Product->Data[19];
 16923  0BD1  0020               	movlb	0	; select bank0
 16924  0BD2  086F               	movf	_Product,w
 16925  0BD3  0086               	movwf	6
 16926  0BD4  3001               	movlw	1	; select bank2/3
 16927  0BD5  0087               	movwf	7
 16928  0BD6  3001               	movlw	1	; select bank2/3
 16929  0BD7  3F53               	moviw [19]fsr1
 16930  0BD8  0021               	movlb	1	; select bank1
 16931  0BD9  00B3               	movwf	(_RF_Data^(0+128)+19)
 16932                           
 16933                           ;RF_Control_B1.c: 171: RF_Data[20]=2;
 16934  0BDA  3002               	movlw	2
 16935  0BDB  0020               	movlb	0	; select bank0
 16936  0BDC  00A2               	movwf	??_setTxData
 16937  0BDD  0822               	movf	??_setTxData,w
 16938  0BDE  0021               	movlb	1	; select bank1
 16939  0BDF  00B4               	movwf	(_RF_Data^(0+128)+20)
 16940  0BE0  0008               	return
 16941  0BE1                     __end_of_setTxData:	
 16942                           
 16943                           	psect	text102
 16944  2442                     __ptext102:	
 16945 ;; *************** function _RfPointSelect *****************
 16946 ;; Defined at:
 16947 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1.
      +2.1\Release\RF_Control_B1.c"
 16948 ;; Parameters:    Size  Location     Type
 16949 ;;  rf              1    wreg     unsigned char 
 16950 ;; Auto vars:     Size  Location     Type
 16951 ;;  rf              1    1[BANK0 ] unsigned char 
 16952 ;; Return value:  Size  Location     Type
 16953 ;;		None               void
 16954 ;; Registers used:
 16955 ;;		wreg
 16956 ;; Tracked objects:
 16957 ;;		On entry : 0/0
 16958 ;;		On exit  : 0/0
 16959 ;;		Unchanged: 0/0
 16960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16964 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16965 ;;Total ram usage:        2 bytes
 16966 ;; Hardware stack levels used:    1
 16967 ;; Hardware stack levels required when called:    4
 16968 ;; This function calls:
 16969 ;;		Nothing
 16970 ;; This function is called by:
 16971 ;;		_setRF_Learn
 16972 ;;		_setRF_RxStatus
 16973 ;;		_setRF_Main
 16974 ;;		_setTxData
 16975 ;;		_setRF_Enable
 16976 ;;		_RF_RxDisable
 16977 ;;		_getRxData
 16978 ;;		_setLog_Code
 16979 ;;		_setControl_Lights_Table
 16980 ;; This function uses a non-reentrant model
 16981 ;;
 16982                           
 16983                           
 16984                           ;psect for function _RfPointSelect
 16985  2442                     _RfPointSelect:	
 16986                           
 16987                           ;incstack = 0
 16988                           ; Regs used in _RfPointSelect: [wreg]
 16989                           ;RfPointSelect@rf stored from wreg
 16990  2442  0020               	movlb	0	; select bank0
 16991  2443  00A1               	movwf	RfPointSelect@rf
 16992                           
 16993                           ;RF_Control_B1.c: 10: if(rf == 1)
 16994  2444  0821               	movf	RfPointSelect@rf,w
 16995  2445  3A01               	xorlw	1
 16996  2446  1D03               	skipz
 16997  2447  0008               	return
 16998                           
 16999                           ;RF_Control_B1.c: 11: {
 17000                           ;RF_Control_B1.c: 12: RF=&RF1;
 17001  2448  30E4               	movlw	_RF1& (0+255)
 17002  2449  00A0               	movwf	??_RfPointSelect
 17003  244A  0820               	movf	??_RfPointSelect,w
 17004  244B  00FC               	movwf	_RF
 17005  244C  0008               	return
 17006  244D                     __end_of_RfPointSelect:	
 17007                           
 17008                           	psect	text103
 17009  2536                     __ptext103:	
 17010 ;; *************** function _setSw_Status *****************
 17011 ;; Defined at:
 17012 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Switch_B1.c"
 17013 ;; Parameters:    Size  Location     Type
 17014 ;;  sw              1    wreg     unsigned char 
 17015 ;;  command         1    2[BANK0 ] unsigned char 
 17016 ;; Auto vars:     Size  Location     Type
 17017 ;;  sw              1    3[BANK0 ] unsigned char 
 17018 ;; Return value:  Size  Location     Type
 17019 ;;		None               void
 17020 ;; Registers used:
 17021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17022 ;; Tracked objects:
 17023 ;;		On entry : 0/0
 17024 ;;		On exit  : 0/0
 17025 ;;		Unchanged: 0/0
 17026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17027 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17030 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;Total ram usage:        2 bytes
 17032 ;; Hardware stack levels used:    1
 17033 ;; Hardware stack levels required when called:    5
 17034 ;; This function calls:
 17035 ;;		_SwPointSelect
 17036 ;; This function is called by:
 17037 ;;		_DlyOff_Main
 17038 ;;		_setDimmerLights_ERROR
 17039 ;;		_setControl_Lights_Table
 17040 ;;		_setRFSW_Control
 17041 ;; This function uses a non-reentrant model
 17042 ;;
 17043                           
 17044                           
 17045                           ;psect for function _setSw_Status
 17046  2536                     _setSw_Status:	
 17047                           
 17048                           ;incstack = 0
 17049                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17050                           ;setSw_Status@sw stored from wreg
 17051  2536  0020               	movlb	0	; select bank0
 17052  2537  00A3               	movwf	setSw_Status@sw
 17053                           
 17054                           ;Switch_B1.c: 108: SwPointSelect(sw);
 17055  2538  0823               	movf	setSw_Status@sw,w
 17056  2539  31A5  25E9         	fcall	_SwPointSelect
 17057                           
 17058                           ;Switch_B1.c: 109: Sw->Status=command;
 17059  253B  0020               	movlb	0	; select bank0
 17060  253C  086D               	movf	_Sw,w
 17061  253D  0086               	movwf	6
 17062  253E  3001               	movlw	1	; select bank2/3
 17063  253F  0087               	movwf	7
 17064  2540  0822               	movf	setSw_Status@command,w
 17065  2541  1301               	bcf	1,6
 17066  2542  1D03               	skipz
 17067  2543  1701               	bsf	1,6
 17068  2544  0008               	return
 17069  2545                     __end_of_setSw_Status:	
 17070                           
 17071                           	psect	text104
 17072  25E9                     __ptext104:	
 17073 ;; *************** function _SwPointSelect *****************
 17074 ;; Defined at:
 17075 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Switch_B1.c"
 17076 ;; Parameters:    Size  Location     Type
 17077 ;;  sw              1    wreg     unsigned char 
 17078 ;; Auto vars:     Size  Location     Type
 17079 ;;  sw              1    1[BANK0 ] unsigned char 
 17080 ;; Return value:  Size  Location     Type
 17081 ;;		None               void
 17082 ;; Registers used:
 17083 ;;		wreg
 17084 ;; Tracked objects:
 17085 ;;		On entry : 0/0
 17086 ;;		On exit  : 0/0
 17087 ;;		Unchanged: 0/0
 17088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17093 ;;Total ram usage:        2 bytes
 17094 ;; Hardware stack levels used:    1
 17095 ;; Hardware stack levels required when called:    4
 17096 ;; This function calls:
 17097 ;;		Nothing
 17098 ;; This function is called by:
 17099 ;;		_setSw_Enable
 17100 ;;		_setSw_Status
 17101 ;;		_setSw_Main
 17102 ;;		_Sw_Detect
 17103 ;; This function uses a non-reentrant model
 17104 ;;
 17105                           
 17106                           
 17107                           ;psect for function _SwPointSelect
 17108  25E9                     _SwPointSelect:	
 17109                           
 17110                           ;incstack = 0
 17111                           ; Regs used in _SwPointSelect: [wreg]
 17112                           ;SwPointSelect@sw stored from wreg
 17113  25E9  0020               	movlb	0	; select bank0
 17114  25EA  00A1               	movwf	SwPointSelect@sw
 17115                           
 17116                           ;Switch_B1.c: 19: if(sw == 1)
 17117  25EB  0821               	movf	SwPointSelect@sw,w
 17118  25EC  3A01               	xorlw	1
 17119  25ED  1D03               	skipz
 17120  25EE  2DF4               	goto	l6462
 17121                           
 17122                           ;Switch_B1.c: 20: {
 17123                           ;Switch_B1.c: 21: Sw=&Sw1;
 17124  25EF  3054               	movlw	_Sw1& (0+255)
 17125  25F0  00A0               	movwf	??_SwPointSelect
 17126  25F1  0820               	movf	??_SwPointSelect,w
 17127  25F2  00ED               	movwf	_Sw
 17128                           
 17129                           ;Switch_B1.c: 22: }
 17130  25F3  0008               	return
 17131  25F4                     l6462:	
 17132                           
 17133                           ;Switch_B1.c: 25: else if(sw == 2)
 17134  25F4  0821               	movf	SwPointSelect@sw,w
 17135  25F5  3A02               	xorlw	2
 17136  25F6  1D03               	skipz
 17137  25F7  0008               	return
 17138                           
 17139                           ;Switch_B1.c: 26: {
 17140                           ;Switch_B1.c: 27: Sw=&Sw2;
 17141  25F8  305D               	movlw	_Sw2& (0+255)
 17142  25F9  00A0               	movwf	??_SwPointSelect
 17143  25FA  0820               	movf	??_SwPointSelect,w
 17144  25FB  00ED               	movwf	_Sw
 17145  25FC  0008               	return
 17146  25FD                     __end_of_SwPointSelect:	
 17147                           
 17148                           	psect	text105
 17149  1133                     __ptext105:	
 17150 ;; *************** function _setRF_DimmerLights *****************
 17151 ;; Defined at:
 17152 ;;		line 437 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
 17153 ;; Parameters:    Size  Location     Type
 17154 ;;  lights          1    wreg     unsigned char 
 17155 ;;  on              1   61[BANK0 ] unsigned char 
 17156 ;; Auto vars:     Size  Location     Type
 17157 ;;  lights          1   65[BANK0 ] unsigned char 
 17158 ;;  status          1   64[BANK0 ] unsigned char 
 17159 ;; Return value:  Size  Location     Type
 17160 ;;		None               void
 17161 ;; Registers used:
 17162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17163 ;; Tracked objects:
 17164 ;;		On entry : 0/0
 17165 ;;		On exit  : 0/0
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17168 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17169 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17171 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17172 ;;Total ram usage:        5 bytes
 17173 ;; Hardware stack levels used:    1
 17174 ;; Hardware stack levels required when called:    7
 17175 ;; This function calls:
 17176 ;;		_setPercentValue
 17177 ;; This function is called by:
 17178 ;;		_DlyOff_Main
 17179 ;;		_setDimmerLights_Adj
 17180 ;;		_setRFSW_Control
 17181 ;;		_Sw_DimmerOnFunc
 17182 ;;		_Sw_DimmerOffFunc
 17183 ;; This function uses a non-reentrant model
 17184 ;;
 17185                           
 17186                           
 17187                           ;psect for function _setRF_DimmerLights
 17188  1133                     _setRF_DimmerLights:	
 17189                           
 17190                           ;incstack = 0
 17191                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17192                           ;setRF_DimmerLights@lights stored from wreg
 17193  1133  0020               	movlb	0	; select bank0
 17194  1134  00E1               	movwf	setRF_DimmerLights@lights
 17195                           
 17196                           ;RF_Control_B1.c: 439: char status;
 17197                           ;RF_Control_B1.c: 440: status=1;
 17198  1135  01E0               	clrf	setRF_DimmerLights@status
 17199  1136  0AE0               	incf	setRF_DimmerLights@status,f
 17200                           
 17201                           ;RF_Control_B1.c: 441: status<<=(lights-1);
 17202  1137  0861               	movf	setRF_DimmerLights@lights,w
 17203  1138  3EFF               	addlw	-1
 17204  1139  0A89               	incf	9,f
 17205  113A  293D               	goto	u8250
 17206  113B                     u8255:	
 17207  113B  1003               	clrc
 17208  113C  0DE0               	rlf	setRF_DimmerLights@status,f
 17209  113D                     u8250:	
 17210  113D  3EFF               	addlw	-1
 17211  113E  1D03               	skipz
 17212  113F  293B               	goto	u8255
 17213                           
 17214                           ;RF_Control_B1.c: 442: Product->Data[11]=lights;
 17215  1140  0861               	movf	setRF_DimmerLights@lights,w
 17216  1141  00DE               	movwf	??_setRF_DimmerLights
 17217  1142  086F               	movf	_Product,w
 17218  1143  3E0B               	addlw	11
 17219  1144  0086               	movwf	6
 17220  1145  3001               	movlw	1	; select bank2/3
 17221  1146  0087               	movwf	7
 17222  1147  085E               	movf	??_setRF_DimmerLights,w
 17223  1148  0081               	movwf	1
 17224                           
 17225                           ;RF_Control_B1.c: 445: Product->Data[(20+lights)]=setPercentValue(((char)((100-55)*1.5))
      +                          );
 17226  1149  3043               	movlw	67
 17227  114A  319E  2606  3191   	fcall	_setPercentValue
 17228  114D  0020               	movlb	0	; select bank0
 17229  114E  00DE               	movwf	??_setRF_DimmerLights
 17230  114F  0861               	movf	setRF_DimmerLights@lights,w
 17231  1150  3E14               	addlw	20
 17232  1151  076F               	addwf	_Product,w
 17233  1152  00DF               	movwf	??_setRF_DimmerLights+1
 17234  1153  085F               	movf	??_setRF_DimmerLights+1,w
 17235  1154  0086               	movwf	6
 17236  1155  3001               	movlw	1	; select bank2/3
 17237  1156  0087               	movwf	7
 17238  1157  085E               	movf	??_setRF_DimmerLights,w
 17239  1158  0081               	movwf	1
 17240                           
 17241                           ;RF_Control_B1.c: 448: Product->Data[9]=Product->Data[20+lights];
 17242  1159  0861               	movf	setRF_DimmerLights@lights,w
 17243  115A  3E14               	addlw	20
 17244  115B  076F               	addwf	_Product,w
 17245  115C  00DE               	movwf	??_setRF_DimmerLights
 17246  115D  085E               	movf	??_setRF_DimmerLights,w
 17247  115E  0086               	movwf	6
 17248  115F  3001               	movlw	1	; select bank2/3
 17249  1160  0087               	movwf	7
 17250  1161  0801               	movf	1,w
 17251  1162  00DF               	movwf	??_setRF_DimmerLights+1
 17252  1163  086F               	movf	_Product,w
 17253  1164  3E09               	addlw	9
 17254  1165  0086               	movwf	6
 17255  1166  3001               	movlw	1	; select bank2/3
 17256  1167  0087               	movwf	7
 17257  1168  085F               	movf	??_setRF_DimmerLights+1,w
 17258  1169  0081               	movwf	1
 17259                           
 17260                           ;RF_Control_B1.c: 449: Product->Data[17]=Product->Data[26+lights];
 17261  116A  0861               	movf	setRF_DimmerLights@lights,w
 17262  116B  3E1A               	addlw	26
 17263  116C  076F               	addwf	_Product,w
 17264  116D  00DE               	movwf	??_setRF_DimmerLights
 17265  116E  085E               	movf	??_setRF_DimmerLights,w
 17266  116F  0086               	movwf	6
 17267  1170  3001               	movlw	1	; select bank2/3
 17268  1171  0087               	movwf	7
 17269  1172  0801               	movf	1,w
 17270  1173  00DF               	movwf	??_setRF_DimmerLights+1
 17271  1174  086F               	movf	_Product,w
 17272  1175  3E11               	addlw	17
 17273  1176  0086               	movwf	6
 17274  1177  3001               	movlw	1	; select bank2/3
 17275  1178  0087               	movwf	7
 17276  1179  085F               	movf	??_setRF_DimmerLights+1,w
 17277  117A  0081               	movwf	1
 17278                           
 17279                           ;RF_Control_B1.c: 450: if(on)
 17280  117B  085D               	movf	setRF_DimmerLights@on,w
 17281  117C  1903               	btfsc	3,2
 17282  117D  298E               	goto	l8672
 17283                           
 17284                           ;RF_Control_B1.c: 451: {
 17285                           ;RF_Control_B1.c: 452: Product->Data[15]=(Product->Data[15]|status);
 17286  117E  086F               	movf	_Product,w
 17287  117F  3E0F               	addlw	15
 17288  1180  0086               	movwf	6
 17289  1181  3001               	movlw	1	; select bank2/3
 17290  1182  0087               	movwf	7
 17291  1183  0801               	movf	1,w
 17292  1184  0460               	iorwf	setRF_DimmerLights@status,w
 17293  1185  00DE               	movwf	??_setRF_DimmerLights
 17294  1186  086F               	movf	_Product,w
 17295  1187  3E0F               	addlw	15
 17296  1188  0086               	movwf	6
 17297  1189  3001               	movlw	1	; select bank2/3
 17298  118A  0087               	movwf	7
 17299  118B  085E               	movf	??_setRF_DimmerLights,w
 17300  118C  0081               	movwf	1
 17301                           
 17302                           ;RF_Control_B1.c: 453: }
 17303  118D  0008               	return
 17304  118E                     l8672:	
 17305                           
 17306                           ;RF_Control_B1.c: 454: else
 17307                           ;RF_Control_B1.c: 455: {
 17308                           ;RF_Control_B1.c: 456: Product->Data[15]=(Product->Data[15]&(~status));
 17309  118E  086F               	movf	_Product,w
 17310  118F  3E0F               	addlw	15
 17311  1190  0086               	movwf	6
 17312  1191  3001               	movlw	1	; select bank2/3
 17313  1192  0087               	movwf	7
 17314  1193  0960               	comf	setRF_DimmerLights@status,w
 17315  1194  0501               	andwf	1,w
 17316  1195  00DE               	movwf	??_setRF_DimmerLights
 17317  1196  086F               	movf	_Product,w
 17318  1197  3E0F               	addlw	15
 17319  1198  0086               	movwf	6
 17320  1199  3001               	movlw	1	; select bank2/3
 17321  119A  0087               	movwf	7
 17322  119B  085E               	movf	??_setRF_DimmerLights,w
 17323  119C  0081               	movwf	1
 17324  119D  0008               	return
 17325  119E                     __end_of_setRF_DimmerLights:	
 17326                           
 17327                           	psect	text106
 17328  1E06                     __ptext106:	
 17329 ;; *************** function _setPercentValue *****************
 17330 ;; Defined at:
 17331 ;;		line 496 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 17332 ;; Parameters:    Size  Location     Type
 17333 ;;  value           1    wreg     unsigned char 
 17334 ;; Auto vars:     Size  Location     Type
 17335 ;;  value           1   57[BANK0 ] unsigned char 
 17336 ;;  i               3   58[BANK0 ] float 
 17337 ;; Return value:  Size  Location     Type
 17338 ;;                  1    wreg      unsigned char 
 17339 ;; Registers used:
 17340 ;;		wreg, status,2, status,0, pclath, cstack
 17341 ;; Tracked objects:
 17342 ;;		On entry : 0/0
 17343 ;;		On exit  : 0/0
 17344 ;;		Unchanged: 0/0
 17345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17347 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17349 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17350 ;;Total ram usage:        4 bytes
 17351 ;; Hardware stack levels used:    1
 17352 ;; Hardware stack levels required when called:    6
 17353 ;; This function calls:
 17354 ;;		___awtoft
 17355 ;;		___ftdiv
 17356 ;;		___fttol
 17357 ;; This function is called by:
 17358 ;;		_Flash_Memory_Initialization
 17359 ;;		_setRF_DimmerLights
 17360 ;; This function uses a non-reentrant model
 17361 ;;
 17362                           
 17363                           
 17364                           ;psect for function _setPercentValue
 17365  1E06                     _setPercentValue:	
 17366                           
 17367                           ;incstack = 0
 17368                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 17369                           ;setPercentValue@value stored from wreg
 17370  1E06  0020               	movlb	0	; select bank0
 17371  1E07  00D9               	movwf	setPercentValue@value
 17372                           
 17373                           ;Dimmer_B1.c: 499: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
 17374  1E08  3000               	movlw	0
 17375  1E09  00DA               	movwf	setPercentValue@i
 17376  1E0A  3054               	movlw	84
 17377  1E0B  00DB               	movwf	setPercentValue@i+1
 17378  1E0C  3042               	movlw	66
 17379  1E0D  00DC               	movwf	setPercentValue@i+2
 17380                           
 17381                           ;Dimmer_B1.c: 500: i/=100;
 17382  1E0E  3000               	movlw	0
 17383  1E0F  00AE               	movwf	___ftdiv@f2
 17384  1E10  30C8               	movlw	200
 17385  1E11  00AF               	movwf	___ftdiv@f2+1
 17386  1E12  3042               	movlw	66
 17387  1E13  00B0               	movwf	___ftdiv@f2+2
 17388  1E14  085A               	movf	setPercentValue@i,w
 17389  1E15  00B1               	movwf	___ftdiv@f1
 17390  1E16  085B               	movf	setPercentValue@i+1,w
 17391  1E17  00B2               	movwf	___ftdiv@f1+1
 17392  1E18  085C               	movf	setPercentValue@i+2,w
 17393  1E19  00B3               	movwf	___ftdiv@f1+2
 17394  1E1A  3189  21BB  319E   	fcall	___ftdiv
 17395  1E1D  0020               	movlb	0	; select bank0
 17396  1E1E  082E               	movf	?___ftdiv,w
 17397  1E1F  00DA               	movwf	setPercentValue@i
 17398  1E20  082F               	movf	?___ftdiv+1,w
 17399  1E21  00DB               	movwf	setPercentValue@i+1
 17400  1E22  0830               	movf	?___ftdiv+2,w
 17401  1E23  00DC               	movwf	setPercentValue@i+2
 17402                           
 17403                           ;Dimmer_B1.c: 501: return (100-(char)((value-((char)((100-55)*1.5)))/i));
 17404  1E24  0859               	movf	setPercentValue@value,w
 17405  1E25  3EBD               	addlw	189
 17406  1E26  00A8               	movwf	___awtoft@c
 17407  1E27  30FF               	movlw	255
 17408  1E28  1803               	skipnc
 17409  1E29  3000               	movlw	0
 17410  1E2A  00A9               	movwf	___awtoft@c+1
 17411  1E2B  31A7  27DE  319E   	fcall	___awtoft
 17412  1E2E  0020               	movlb	0	; select bank0
 17413  1E2F  0828               	movf	?___awtoft,w
 17414  1E30  00B1               	movwf	___ftdiv@f1
 17415  1E31  0829               	movf	?___awtoft+1,w
 17416  1E32  00B2               	movwf	___ftdiv@f1+1
 17417  1E33  082A               	movf	?___awtoft+2,w
 17418  1E34  00B3               	movwf	___ftdiv@f1+2
 17419  1E35  085A               	movf	setPercentValue@i,w
 17420  1E36  00AE               	movwf	___ftdiv@f2
 17421  1E37  085B               	movf	setPercentValue@i+1,w
 17422  1E38  00AF               	movwf	___ftdiv@f2+1
 17423  1E39  085C               	movf	setPercentValue@i+2,w
 17424  1E3A  00B0               	movwf	___ftdiv@f2+2
 17425  1E3B  3189  21BB  319E   	fcall	___ftdiv
 17426  1E3E  0020               	movlb	0	; select bank0
 17427  1E3F  082E               	movf	?___ftdiv,w
 17428  1E40  00CB               	movwf	___fttol@f1
 17429  1E41  082F               	movf	?___ftdiv+1,w
 17430  1E42  00CC               	movwf	___fttol@f1+1
 17431  1E43  0830               	movf	?___ftdiv+2,w
 17432  1E44  00CD               	movwf	___fttol@f1+2
 17433  1E45  3195  253A         	fcall	___fttol
 17434  1E47  0020               	movlb	0	; select bank0
 17435  1E48  034B               	decf	?___fttol,w
 17436  1E49  3AFF               	xorlw	255
 17437  1E4A  3E64               	addlw	100
 17438  1E4B  0008               	return
 17439  1E4C                     __end_of_setPercentValue:	
 17440                           
 17441                           	psect	text107
 17442  153A                     __ptext107:	
 17443 ;; *************** function ___fttol *****************
 17444 ;; Defined at:
 17445 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 17446 ;; Parameters:    Size  Location     Type
 17447 ;;  f1              3   43[BANK0 ] float 
 17448 ;; Auto vars:     Size  Location     Type
 17449 ;;  lval            4   52[BANK0 ] unsigned long 
 17450 ;;  exp1            1   56[BANK0 ] unsigned char 
 17451 ;;  sign1           1   51[BANK0 ] unsigned char 
 17452 ;; Return value:  Size  Location     Type
 17453 ;;                  4   43[BANK0 ] long 
 17454 ;; Registers used:
 17455 ;;		wreg, status,2, status,0
 17456 ;; Tracked objects:
 17457 ;;		On entry : 0/0
 17458 ;;		On exit  : 0/0
 17459 ;;		Unchanged: 0/0
 17460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17461 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17462 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17463 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17464 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;Total ram usage:       14 bytes
 17466 ;; Hardware stack levels used:    1
 17467 ;; Hardware stack levels required when called:    4
 17468 ;; This function calls:
 17469 ;;		Nothing
 17470 ;; This function is called by:
 17471 ;;		_getPercentValue
 17472 ;;		_setPercentValue
 17473 ;; This function uses a non-reentrant model
 17474 ;;
 17475                           
 17476                           
 17477                           ;psect for function ___fttol
 17478  153A                     ___fttol:	
 17479                           
 17480                           ;incstack = 0
 17481                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 17482  153A  0020               	movlb	0	; select bank0
 17483  153B  084B               	movf	___fttol@f1,w
 17484  153C  00CF               	movwf	??___fttol
 17485  153D  084C               	movf	___fttol@f1+1,w
 17486  153E  00D0               	movwf	??___fttol+1
 17487  153F  084D               	movf	___fttol@f1+2,w
 17488  1540  00D1               	movwf	??___fttol+2
 17489  1541  1003               	clrc
 17490  1542  0D50               	rlf	??___fttol+1,w
 17491  1543  0D51               	rlf	??___fttol+2,w
 17492  1544  00D2               	movwf	??___fttol+3
 17493  1545  0852               	movf	??___fttol+3,w
 17494  1546  00D8               	movwf	___fttol@exp1
 17495  1547  08D8               	movf	___fttol@exp1,f
 17496  1548  1D03               	skipz
 17497  1549  2D53               	goto	l6334
 17498  154A  3000               	movlw	0
 17499  154B  00CE               	movwf	?___fttol+3
 17500  154C  3000               	movlw	0
 17501  154D  00CD               	movwf	?___fttol+2
 17502  154E  3000               	movlw	0
 17503  154F  00CC               	movwf	?___fttol+1
 17504  1550  3000               	movlw	0
 17505  1551  00CB               	movwf	?___fttol
 17506  1552  0008               	return
 17507  1553                     l6334:	
 17508  1553  084B               	movf	___fttol@f1,w
 17509  1554  00CF               	movwf	??___fttol
 17510  1555  084C               	movf	___fttol@f1+1,w
 17511  1556  00D0               	movwf	??___fttol+1
 17512  1557  084D               	movf	___fttol@f1+2,w
 17513  1558  00D1               	movwf	??___fttol+2
 17514  1559  3017               	movlw	23
 17515  155A                     u4655:	
 17516  155A  36D1               	lsrf	??___fttol+2,f
 17517  155B  0CD0               	rrf	??___fttol+1,f
 17518  155C  0CCF               	rrf	??___fttol,f
 17519  155D  0B89               	decfsz	9,f
 17520  155E  2D5A               	goto	u4655
 17521  155F  084F               	movf	??___fttol,w
 17522  1560  00D2               	movwf	??___fttol+3
 17523  1561  0852               	movf	??___fttol+3,w
 17524  1562  00D3               	movwf	___fttol@sign1
 17525  1563  17CC               	bsf	___fttol@f1+1,7
 17526  1564  30FF               	movlw	255
 17527  1565  05CB               	andwf	___fttol@f1,f
 17528  1566  30FF               	movlw	255
 17529  1567  05CC               	andwf	___fttol@f1+1,f
 17530  1568  3000               	movlw	0
 17531  1569  05CD               	andwf	___fttol@f1+2,f
 17532  156A  084B               	movf	___fttol@f1,w
 17533  156B  00D4               	movwf	___fttol@lval
 17534  156C  084C               	movf	___fttol@f1+1,w
 17535  156D  00D5               	movwf	___fttol@lval+1
 17536  156E  084D               	movf	___fttol@f1+2,w
 17537  156F  00D6               	movwf	___fttol@lval+2
 17538  1570  01D7               	clrf	___fttol@lval+3
 17539  1571  308E               	movlw	142
 17540  1572  02D8               	subwf	___fttol@exp1,f
 17541  1573  1FD8               	btfss	___fttol@exp1,7
 17542  1574  2D91               	goto	l6354
 17543  1575  0858               	movf	___fttol@exp1,w
 17544  1576  3A80               	xorlw	128
 17545  1577  3E8F               	addlw	143
 17546  1578  1803               	skipnc
 17547  1579  2D83               	goto	l6352
 17548  157A  3000               	movlw	0
 17549  157B  00CE               	movwf	?___fttol+3
 17550  157C  3000               	movlw	0
 17551  157D  00CD               	movwf	?___fttol+2
 17552  157E  3000               	movlw	0
 17553  157F  00CC               	movwf	?___fttol+1
 17554  1580  3000               	movlw	0
 17555  1581  00CB               	movwf	?___fttol
 17556  1582  0008               	return
 17557  1583                     l6352:	
 17558  1583  3001               	movlw	1
 17559  1584                     u4685:	
 17560  1584  36D7               	lsrf	___fttol@lval+3,f
 17561  1585  0CD6               	rrf	___fttol@lval+2,f
 17562  1586  0CD5               	rrf	___fttol@lval+1,f
 17563  1587  0CD4               	rrf	___fttol@lval,f
 17564  1588  0B89               	decfsz	9,f
 17565  1589  2D84               	goto	u4685
 17566  158A  3001               	movlw	1
 17567  158B  00CF               	movwf	??___fttol
 17568  158C  084F               	movf	??___fttol,w
 17569  158D  07D8               	addwf	___fttol@exp1,f
 17570  158E  1903               	btfsc	3,2
 17571  158F  2DAA               	goto	l6364
 17572  1590  2D83               	goto	l6352
 17573  1591                     l6354:	
 17574  1591  3018               	movlw	24
 17575  1592  0258               	subwf	___fttol@exp1,w
 17576  1593  1C03               	skipc
 17577  1594  2DA7               	goto	l6362
 17578  1595  3000               	movlw	0
 17579  1596  00CE               	movwf	?___fttol+3
 17580  1597  3000               	movlw	0
 17581  1598  00CD               	movwf	?___fttol+2
 17582  1599  3000               	movlw	0
 17583  159A  00CC               	movwf	?___fttol+1
 17584  159B  3000               	movlw	0
 17585  159C  00CB               	movwf	?___fttol
 17586  159D  0008               	return
 17587  159E                     l6360:	
 17588  159E  3001               	movlw	1
 17589  159F                     u4715:	
 17590  159F  35D4               	lslf	___fttol@lval,f
 17591  15A0  0DD5               	rlf	___fttol@lval+1,f
 17592  15A1  0DD6               	rlf	___fttol@lval+2,f
 17593  15A2  0DD7               	rlf	___fttol@lval+3,f
 17594  15A3  0B89               	decfsz	9,f
 17595  15A4  2D9F               	goto	u4715
 17596  15A5  3001               	movlw	1
 17597  15A6  02D8               	subwf	___fttol@exp1,f
 17598  15A7                     l6362:	
 17599  15A7  08D8               	movf	___fttol@exp1,f
 17600  15A8  1D03               	skipz
 17601  15A9  2D9E               	goto	l6360
 17602  15AA                     l6364:	
 17603  15AA  0853               	movf	___fttol@sign1,w
 17604  15AB  1903               	btfsc	3,2
 17605  15AC  2DB8               	goto	l6368
 17606  15AD  09D4               	comf	___fttol@lval,f
 17607  15AE  09D5               	comf	___fttol@lval+1,f
 17608  15AF  09D6               	comf	___fttol@lval+2,f
 17609  15B0  09D7               	comf	___fttol@lval+3,f
 17610  15B1  0AD4               	incf	___fttol@lval,f
 17611  15B2  1903               	skipnz
 17612  15B3  0AD5               	incf	___fttol@lval+1,f
 17613  15B4  1903               	skipnz
 17614  15B5  0AD6               	incf	___fttol@lval+2,f
 17615  15B6  1903               	skipnz
 17616  15B7  0AD7               	incf	___fttol@lval+3,f
 17617  15B8                     l6368:	
 17618  15B8  0857               	movf	___fttol@lval+3,w
 17619  15B9  00CE               	movwf	?___fttol+3
 17620  15BA  0856               	movf	___fttol@lval+2,w
 17621  15BB  00CD               	movwf	?___fttol+2
 17622  15BC  0855               	movf	___fttol@lval+1,w
 17623  15BD  00CC               	movwf	?___fttol+1
 17624  15BE  0854               	movf	___fttol@lval,w
 17625  15BF  00CB               	movwf	?___fttol
 17626  15C0  0008               	return
 17627  15C1                     __end_of___fttol:	
 17628                           
 17629                           	psect	text108
 17630  09BB                     __ptext108:	
 17631 ;; *************** function ___ftdiv *****************
 17632 ;; Defined at:
 17633 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 17634 ;; Parameters:    Size  Location     Type
 17635 ;;  f2              3   14[BANK0 ] float 
 17636 ;;  f1              3   17[BANK0 ] float 
 17637 ;; Auto vars:     Size  Location     Type
 17638 ;;  f3              3   25[BANK0 ] float 
 17639 ;;  sign            1   29[BANK0 ] unsigned char 
 17640 ;;  exp             1   28[BANK0 ] unsigned char 
 17641 ;;  cntr            1   24[BANK0 ] unsigned char 
 17642 ;; Return value:  Size  Location     Type
 17643 ;;                  3   14[BANK0 ] float 
 17644 ;; Registers used:
 17645 ;;		wreg, status,2, status,0, pclath, cstack
 17646 ;; Tracked objects:
 17647 ;;		On entry : 0/0
 17648 ;;		On exit  : 0/0
 17649 ;;		Unchanged: 0/0
 17650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17651 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17652 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17653 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17654 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17655 ;;Total ram usage:       16 bytes
 17656 ;; Hardware stack levels used:    1
 17657 ;; Hardware stack levels required when called:    5
 17658 ;; This function calls:
 17659 ;;		___ftpack
 17660 ;; This function is called by:
 17661 ;;		_getPercentValue
 17662 ;;		_setPercentValue
 17663 ;; This function uses a non-reentrant model
 17664 ;;
 17665                           
 17666                           
 17667                           ;psect for function ___ftdiv
 17668  09BB                     ___ftdiv:	
 17669                           
 17670                           ;incstack = 0
 17671                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 17672  09BB  0020               	movlb	0	; select bank0
 17673  09BC  0831               	movf	___ftdiv@f1,w
 17674  09BD  00B4               	movwf	??___ftdiv
 17675  09BE  0832               	movf	___ftdiv@f1+1,w
 17676  09BF  00B5               	movwf	??___ftdiv+1
 17677  09C0  0833               	movf	___ftdiv@f1+2,w
 17678  09C1  00B6               	movwf	??___ftdiv+2
 17679  09C2  1003               	clrc
 17680  09C3  0D35               	rlf	??___ftdiv+1,w
 17681  09C4  0D36               	rlf	??___ftdiv+2,w
 17682  09C5  00B7               	movwf	??___ftdiv+3
 17683  09C6  0837               	movf	??___ftdiv+3,w
 17684  09C7  00BC               	movwf	___ftdiv@exp
 17685  09C8  08BC               	movf	___ftdiv@exp,f
 17686  09C9  1D03               	skipz
 17687  09CA  29D2               	goto	l6242
 17688  09CB  3000               	movlw	0
 17689  09CC  00AE               	movwf	?___ftdiv
 17690  09CD  3000               	movlw	0
 17691  09CE  00AF               	movwf	?___ftdiv+1
 17692  09CF  3000               	movlw	0
 17693  09D0  00B0               	movwf	?___ftdiv+2
 17694  09D1  0008               	return
 17695  09D2                     l6242:	
 17696  09D2  082E               	movf	___ftdiv@f2,w
 17697  09D3  00B4               	movwf	??___ftdiv
 17698  09D4  082F               	movf	___ftdiv@f2+1,w
 17699  09D5  00B5               	movwf	??___ftdiv+1
 17700  09D6  0830               	movf	___ftdiv@f2+2,w
 17701  09D7  00B6               	movwf	??___ftdiv+2
 17702  09D8  1003               	clrc
 17703  09D9  0D35               	rlf	??___ftdiv+1,w
 17704  09DA  0D36               	rlf	??___ftdiv+2,w
 17705  09DB  00B7               	movwf	??___ftdiv+3
 17706  09DC  0837               	movf	??___ftdiv+3,w
 17707  09DD  00BD               	movwf	___ftdiv@sign
 17708  09DE  08BD               	movf	___ftdiv@sign,f
 17709  09DF  1D03               	skipz
 17710  09E0  29E8               	goto	l6248
 17711  09E1  3000               	movlw	0
 17712  09E2  00AE               	movwf	?___ftdiv
 17713  09E3  3000               	movlw	0
 17714  09E4  00AF               	movwf	?___ftdiv+1
 17715  09E5  3000               	movlw	0
 17716  09E6  00B0               	movwf	?___ftdiv+2
 17717  09E7  0008               	return
 17718  09E8                     l6248:	
 17719  09E8  3000               	movlw	0
 17720  09E9  00B9               	movwf	___ftdiv@f3
 17721  09EA  3000               	movlw	0
 17722  09EB  00BA               	movwf	___ftdiv@f3+1
 17723  09EC  3000               	movlw	0
 17724  09ED  00BB               	movwf	___ftdiv@f3+2
 17725  09EE  3089               	movlw	137
 17726  09EF  073D               	addwf	___ftdiv@sign,w
 17727  09F0  00B4               	movwf	??___ftdiv
 17728  09F1  0834               	movf	??___ftdiv,w
 17729  09F2  02BC               	subwf	___ftdiv@exp,f
 17730  09F3  0831               	movf	___ftdiv@f1,w
 17731  09F4  00B4               	movwf	??___ftdiv
 17732  09F5  0832               	movf	___ftdiv@f1+1,w
 17733  09F6  00B5               	movwf	??___ftdiv+1
 17734  09F7  0833               	movf	___ftdiv@f1+2,w
 17735  09F8  00B6               	movwf	??___ftdiv+2
 17736  09F9  3010               	movlw	16
 17737  09FA                     u4465:	
 17738  09FA  36B6               	lsrf	??___ftdiv+2,f
 17739  09FB  0CB5               	rrf	??___ftdiv+1,f
 17740  09FC  0CB4               	rrf	??___ftdiv,f
 17741  09FD  0B89               	decfsz	9,f
 17742  09FE  29FA               	goto	u4465
 17743  09FF  0834               	movf	??___ftdiv,w
 17744  0A00  00B7               	movwf	??___ftdiv+3
 17745  0A01  0837               	movf	??___ftdiv+3,w
 17746  0A02  00BD               	movwf	___ftdiv@sign
 17747  0A03  082E               	movf	___ftdiv@f2,w
 17748  0A04  00B4               	movwf	??___ftdiv
 17749  0A05  082F               	movf	___ftdiv@f2+1,w
 17750  0A06  00B5               	movwf	??___ftdiv+1
 17751  0A07  0830               	movf	___ftdiv@f2+2,w
 17752  0A08  00B6               	movwf	??___ftdiv+2
 17753  0A09  3010               	movlw	16
 17754  0A0A                     u4475:	
 17755  0A0A  36B6               	lsrf	??___ftdiv+2,f
 17756  0A0B  0CB5               	rrf	??___ftdiv+1,f
 17757  0A0C  0CB4               	rrf	??___ftdiv,f
 17758  0A0D  0B89               	decfsz	9,f
 17759  0A0E  2A0A               	goto	u4475
 17760  0A0F  0834               	movf	??___ftdiv,w
 17761  0A10  00B7               	movwf	??___ftdiv+3
 17762  0A11  0837               	movf	??___ftdiv+3,w
 17763  0A12  06BD               	xorwf	___ftdiv@sign,f
 17764  0A13  3080               	movlw	128
 17765  0A14  00B4               	movwf	??___ftdiv
 17766  0A15  0834               	movf	??___ftdiv,w
 17767  0A16  05BD               	andwf	___ftdiv@sign,f
 17768  0A17  17B2               	bsf	___ftdiv@f1+1,7
 17769  0A18  30FF               	movlw	255
 17770  0A19  05B1               	andwf	___ftdiv@f1,f
 17771  0A1A  30FF               	movlw	255
 17772  0A1B  05B2               	andwf	___ftdiv@f1+1,f
 17773  0A1C  3000               	movlw	0
 17774  0A1D  05B3               	andwf	___ftdiv@f1+2,f
 17775  0A1E  17AF               	bsf	___ftdiv@f2+1,7
 17776  0A1F  30FF               	movlw	255
 17777  0A20  05AE               	andwf	___ftdiv@f2,f
 17778  0A21  30FF               	movlw	255
 17779  0A22  05AF               	andwf	___ftdiv@f2+1,f
 17780  0A23  3000               	movlw	0
 17781  0A24  05B0               	andwf	___ftdiv@f2+2,f
 17782  0A25  3018               	movlw	24
 17783  0A26  00B4               	movwf	??___ftdiv
 17784  0A27  0834               	movf	??___ftdiv,w
 17785  0A28  00B8               	movwf	___ftdiv@cntr
 17786  0A29                     l6262:	
 17787  0A29  3001               	movlw	1
 17788  0A2A                     u4485:	
 17789  0A2A  35B9               	lslf	___ftdiv@f3,f
 17790  0A2B  0DBA               	rlf	___ftdiv@f3+1,f
 17791  0A2C  0DBB               	rlf	___ftdiv@f3+2,f
 17792  0A2D  0B89               	decfsz	9,f
 17793  0A2E  2A2A               	goto	u4485
 17794  0A2F  0830               	movf	___ftdiv@f2+2,w
 17795  0A30  0233               	subwf	___ftdiv@f1+2,w
 17796  0A31  1D03               	skipz
 17797  0A32  2A39               	goto	u4495
 17798  0A33  082F               	movf	___ftdiv@f2+1,w
 17799  0A34  0232               	subwf	___ftdiv@f1+1,w
 17800  0A35  1D03               	skipz
 17801  0A36  2A39               	goto	u4495
 17802  0A37  082E               	movf	___ftdiv@f2,w
 17803  0A38  0231               	subwf	___ftdiv@f1,w
 17804  0A39                     u4495:	
 17805  0A39  1C03               	skipc
 17806  0A3A  2A42               	goto	l6270
 17807  0A3B  082E               	movf	___ftdiv@f2,w
 17808  0A3C  02B1               	subwf	___ftdiv@f1,f
 17809  0A3D  082F               	movf	___ftdiv@f2+1,w
 17810  0A3E  3BB2               	subwfb	___ftdiv@f1+1,f
 17811  0A3F  0830               	movf	___ftdiv@f2+2,w
 17812  0A40  3BB3               	subwfb	___ftdiv@f1+2,f
 17813  0A41  1439               	bsf	___ftdiv@f3,0
 17814  0A42                     l6270:	
 17815  0A42  3001               	movlw	1
 17816  0A43                     u4505:	
 17817  0A43  35B1               	lslf	___ftdiv@f1,f
 17818  0A44  0DB2               	rlf	___ftdiv@f1+1,f
 17819  0A45  0DB3               	rlf	___ftdiv@f1+2,f
 17820  0A46  0B89               	decfsz	9,f
 17821  0A47  2A43               	goto	u4505
 17822  0A48  3001               	movlw	1
 17823  0A49  02B8               	subwf	___ftdiv@cntr,f
 17824  0A4A  1D03               	btfss	3,2
 17825  0A4B  2A29               	goto	l6262
 17826  0A4C  0839               	movf	___ftdiv@f3,w
 17827  0A4D  00A0               	movwf	___ftpack@arg
 17828  0A4E  083A               	movf	___ftdiv@f3+1,w
 17829  0A4F  00A1               	movwf	___ftpack@arg+1
 17830  0A50  083B               	movf	___ftdiv@f3+2,w
 17831  0A51  00A2               	movwf	___ftpack@arg+2
 17832  0A52  083C               	movf	___ftdiv@exp,w
 17833  0A53  00B4               	movwf	??___ftdiv
 17834  0A54  0834               	movf	??___ftdiv,w
 17835  0A55  00A3               	movwf	___ftpack@exp
 17836  0A56  083D               	movf	___ftdiv@sign,w
 17837  0A57  00B5               	movwf	??___ftdiv+1
 17838  0A58  0835               	movf	??___ftdiv+1,w
 17839  0A59  00A4               	movwf	___ftpack@sign
 17840  0A5A  3190  2009         	fcall	___ftpack
 17841  0A5C  0020               	movlb	0	; select bank0
 17842  0A5D  0820               	movf	?___ftpack,w
 17843  0A5E  00AE               	movwf	?___ftdiv
 17844  0A5F  0821               	movf	?___ftpack+1,w
 17845  0A60  00AF               	movwf	?___ftdiv+1
 17846  0A61  0822               	movf	?___ftpack+2,w
 17847  0A62  00B0               	movwf	?___ftdiv+2
 17848  0A63  0008               	return
 17849  0A64                     __end_of___ftdiv:	
 17850                           
 17851                           	psect	text109
 17852  27DE                     __ptext109:	
 17853 ;; *************** function ___awtoft *****************
 17854 ;; Defined at:
 17855 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 17856 ;; Parameters:    Size  Location     Type
 17857 ;;  c               2    8[BANK0 ] int 
 17858 ;; Auto vars:     Size  Location     Type
 17859 ;;  sign            1   13[BANK0 ] unsigned char 
 17860 ;; Return value:  Size  Location     Type
 17861 ;;                  3    8[BANK0 ] float 
 17862 ;; Registers used:
 17863 ;;		wreg, status,2, status,0, pclath, cstack
 17864 ;; Tracked objects:
 17865 ;;		On entry : 0/0
 17866 ;;		On exit  : 0/0
 17867 ;;		Unchanged: 0/0
 17868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17869 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17871 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17872 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17873 ;;Total ram usage:        6 bytes
 17874 ;; Hardware stack levels used:    1
 17875 ;; Hardware stack levels required when called:    5
 17876 ;; This function calls:
 17877 ;;		___ftpack
 17878 ;; This function is called by:
 17879 ;;		_getPercentValue
 17880 ;;		_setPercentValue
 17881 ;; This function uses a non-reentrant model
 17882 ;;
 17883                           
 17884                           
 17885                           ;psect for function ___awtoft
 17886  27DE                     ___awtoft:	
 17887                           
 17888                           ;incstack = 0
 17889                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 17890  27DE  0020               	movlb	0	; select bank0
 17891  27DF  01AD               	clrf	___awtoft@sign
 17892  27E0  1FA9               	btfss	___awtoft@c+1,7
 17893  27E1  2FE9               	goto	l6160
 17894  27E2  09A8               	comf	___awtoft@c,f
 17895  27E3  09A9               	comf	___awtoft@c+1,f
 17896  27E4  0AA8               	incf	___awtoft@c,f
 17897  27E5  1903               	skipnz
 17898  27E6  0AA9               	incf	___awtoft@c+1,f
 17899  27E7  01AD               	clrf	___awtoft@sign
 17900  27E8  0AAD               	incf	___awtoft@sign,f
 17901  27E9                     l6160:	
 17902  27E9  0828               	movf	___awtoft@c,w
 17903  27EA  00A0               	movwf	___ftpack@arg
 17904  27EB  0829               	movf	___awtoft@c+1,w
 17905  27EC  00A1               	movwf	___ftpack@arg+1
 17906  27ED  01A2               	clrf	___ftpack@arg+2
 17907  27EE  308E               	movlw	142
 17908  27EF  00AB               	movwf	??___awtoft
 17909  27F0  082B               	movf	??___awtoft,w
 17910  27F1  00A3               	movwf	___ftpack@exp
 17911  27F2  082D               	movf	___awtoft@sign,w
 17912  27F3  00AC               	movwf	??___awtoft+1
 17913  27F4  082C               	movf	??___awtoft+1,w
 17914  27F5  00A4               	movwf	___ftpack@sign
 17915  27F6  3190  2009         	fcall	___ftpack
 17916  27F8  0020               	movlb	0	; select bank0
 17917  27F9  0820               	movf	?___ftpack,w
 17918  27FA  00A8               	movwf	?___awtoft
 17919  27FB  0821               	movf	?___ftpack+1,w
 17920  27FC  00A9               	movwf	?___awtoft+1
 17921  27FD  0822               	movf	?___ftpack+2,w
 17922  27FE  00AA               	movwf	?___awtoft+2
 17923  27FF  0008               	return
 17924  2800                     __end_of___awtoft:	
 17925                           
 17926                           	psect	text110
 17927  1009                     __ptext110:	
 17928 ;; *************** function ___ftpack *****************
 17929 ;; Defined at:
 17930 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 17931 ;; Parameters:    Size  Location     Type
 17932 ;;  arg             3    0[BANK0 ] unsigned um
 17933 ;;  exp             1    3[BANK0 ] unsigned char 
 17934 ;;  sign            1    4[BANK0 ] unsigned char 
 17935 ;; Auto vars:     Size  Location     Type
 17936 ;;		None
 17937 ;; Return value:  Size  Location     Type
 17938 ;;                  3    0[BANK0 ] float 
 17939 ;; Registers used:
 17940 ;;		wreg, status,2, status,0
 17941 ;; Tracked objects:
 17942 ;;		On entry : 0/0
 17943 ;;		On exit  : 0/0
 17944 ;;		Unchanged: 0/0
 17945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17946 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17948 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17949 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17950 ;;Total ram usage:        8 bytes
 17951 ;; Hardware stack levels used:    1
 17952 ;; Hardware stack levels required when called:    4
 17953 ;; This function calls:
 17954 ;;		Nothing
 17955 ;; This function is called by:
 17956 ;;		___awtoft
 17957 ;;		___ftadd
 17958 ;;		___ftdiv
 17959 ;;		___ftmul
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           
 17964                           ;psect for function ___ftpack
 17965  1009                     ___ftpack:	
 17966                           
 17967                           ;incstack = 0
 17968                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 17969  1009  0020               	movlb	0	; select bank0
 17970  100A  0823               	movf	___ftpack@exp,w
 17971  100B  1903               	btfsc	3,2
 17972  100C  2812               	goto	l6126
 17973  100D  0822               	movf	___ftpack@arg+2,w
 17974  100E  0421               	iorwf	___ftpack@arg+1,w
 17975  100F  0420               	iorwf	___ftpack@arg,w
 17976  1010  1D03               	skipz
 17977  1011  2823               	goto	l6132
 17978  1012                     l6126:	
 17979  1012  3000               	movlw	0
 17980  1013  00A0               	movwf	?___ftpack
 17981  1014  3000               	movlw	0
 17982  1015  00A1               	movwf	?___ftpack+1
 17983  1016  3000               	movlw	0
 17984  1017  00A2               	movwf	?___ftpack+2
 17985  1018  0008               	return
 17986  1019                     l6130:	
 17987  1019  3001               	movlw	1
 17988  101A  00A5               	movwf	??___ftpack
 17989  101B  0825               	movf	??___ftpack,w
 17990  101C  07A3               	addwf	___ftpack@exp,f
 17991  101D  3001               	movlw	1
 17992  101E                     u4115:	
 17993  101E  36A2               	lsrf	___ftpack@arg+2,f
 17994  101F  0CA1               	rrf	___ftpack@arg+1,f
 17995  1020  0CA0               	rrf	___ftpack@arg,f
 17996  1021  0B89               	decfsz	9,f
 17997  1022  281E               	goto	u4115
 17998  1023                     l6132:	
 17999  1023  30FE               	movlw	254
 18000  1024  0522               	andwf	___ftpack@arg+2,w
 18001  1025  1903               	btfsc	3,2
 18002  1026  283C               	goto	l3400
 18003  1027  2819               	goto	l6130
 18004  1028                     l6134:	
 18005  1028  3001               	movlw	1
 18006  1029  00A5               	movwf	??___ftpack
 18007  102A  0825               	movf	??___ftpack,w
 18008  102B  07A3               	addwf	___ftpack@exp,f
 18009  102C  3001               	movlw	1
 18010  102D  07A0               	addwf	___ftpack@arg,f
 18011  102E  3000               	movlw	0
 18012  102F  1803               	skipnc
 18013  1030  3001               	movlw	1
 18014  1031  07A1               	addwf	___ftpack@arg+1,f
 18015  1032  3000               	movlw	0
 18016  1033  1803               	skipnc
 18017  1034  3001               	movlw	1
 18018  1035  07A2               	addwf	___ftpack@arg+2,f
 18019  1036  3001               	movlw	1
 18020  1037                     u4135:	
 18021  1037  36A2               	lsrf	___ftpack@arg+2,f
 18022  1038  0CA1               	rrf	___ftpack@arg+1,f
 18023  1039  0CA0               	rrf	___ftpack@arg,f
 18024  103A  0B89               	decfsz	9,f
 18025  103B  2837               	goto	u4135
 18026  103C                     l3400:	
 18027  103C  30FF               	movlw	255
 18028  103D  0522               	andwf	___ftpack@arg+2,w
 18029  103E  1903               	btfsc	3,2
 18030  103F  2849               	goto	l6142
 18031  1040  2828               	goto	l6134
 18032  1041                     l6140:	
 18033  1041  3001               	movlw	1
 18034  1042  02A3               	subwf	___ftpack@exp,f
 18035  1043  3001               	movlw	1
 18036  1044                     u4155:	
 18037  1044  35A0               	lslf	___ftpack@arg,f
 18038  1045  0DA1               	rlf	___ftpack@arg+1,f
 18039  1046  0DA2               	rlf	___ftpack@arg+2,f
 18040  1047  0B89               	decfsz	9,f
 18041  1048  2844               	goto	u4155
 18042  1049                     l6142:	
 18043  1049  1FA1               	btfss	___ftpack@arg+1,7
 18044  104A  2841               	goto	l6140
 18045  104B  1823               	btfsc	___ftpack@exp,0
 18046  104C  2853               	goto	l3406
 18047  104D  30FF               	movlw	255
 18048  104E  05A0               	andwf	___ftpack@arg,f
 18049  104F  307F               	movlw	127
 18050  1050  05A1               	andwf	___ftpack@arg+1,f
 18051  1051  30FF               	movlw	255
 18052  1052  05A2               	andwf	___ftpack@arg+2,f
 18053  1053                     l3406:	
 18054  1053  1003               	clrc
 18055  1054  0CA3               	rrf	___ftpack@exp,f
 18056  1055  0823               	movf	___ftpack@exp,w
 18057  1056  00A5               	movwf	??___ftpack
 18058  1057  01A6               	clrf	??___ftpack+1
 18059  1058  01A7               	clrf	??___ftpack+2
 18060  1059  3010               	movlw	16
 18061  105A                     u4185:	
 18062  105A  35A5               	lslf	??___ftpack,f
 18063  105B  0DA6               	rlf	??___ftpack+1,f
 18064  105C  0DA7               	rlf	??___ftpack+2,f
 18065  105D  0B89               	decfsz	9,f
 18066  105E  285A               	goto	u4185
 18067  105F  0825               	movf	??___ftpack,w
 18068  1060  04A0               	iorwf	___ftpack@arg,f
 18069  1061  0826               	movf	??___ftpack+1,w
 18070  1062  04A1               	iorwf	___ftpack@arg+1,f
 18071  1063  0827               	movf	??___ftpack+2,w
 18072  1064  04A2               	iorwf	___ftpack@arg+2,f
 18073  1065  0824               	movf	___ftpack@sign,w
 18074  1066  1903               	btfsc	3,2
 18075  1067  0008               	return
 18076  1068  17A2               	bsf	___ftpack@arg+2,7
 18077  1069  0008               	return
 18078  106A                     __end_of___ftpack:	
 18079                           
 18080                           	psect	text111
 18081  2527                     __ptext111:	
 18082 ;; *************** function _setRFSW_Status *****************
 18083 ;; Defined at:
 18084 ;;		line 417 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
 18085 ;; Parameters:    Size  Location     Type
 18086 ;;  sw              1    wreg     unsigned char 
 18087 ;;  command         1    2[BANK0 ] unsigned char 
 18088 ;; Auto vars:     Size  Location     Type
 18089 ;;  sw              1    3[BANK0 ] unsigned char 
 18090 ;; Return value:  Size  Location     Type
 18091 ;;		None               void
 18092 ;; Registers used:
 18093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18094 ;; Tracked objects:
 18095 ;;		On entry : 0/0
 18096 ;;		On exit  : 0/0
 18097 ;;		Unchanged: 0/0
 18098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18099 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18102 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18103 ;;Total ram usage:        2 bytes
 18104 ;; Hardware stack levels used:    1
 18105 ;; Hardware stack levels required when called:    5
 18106 ;; This function calls:
 18107 ;;		_RfSWPointSelect
 18108 ;; This function is called by:
 18109 ;;		_DlyOff_Main
 18110 ;;		_setDimmerLights_ERROR
 18111 ;;		_setControl_Lights_Table
 18112 ;;		_Sw_DimmerOnFunc
 18113 ;;		_Sw_DimmerAdjFunc
 18114 ;; This function uses a non-reentrant model
 18115 ;;
 18116                           
 18117                           
 18118                           ;psect for function _setRFSW_Status
 18119  2527                     _setRFSW_Status:	
 18120                           
 18121                           ;incstack = 0
 18122                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18123                           ;setRFSW_Status@sw stored from wreg
 18124  2527  0020               	movlb	0	; select bank0
 18125  2528  00A3               	movwf	setRFSW_Status@sw
 18126                           
 18127                           ;RF_Control_B1.c: 419: RfSWPointSelect(sw);
 18128  2529  0823               	movf	setRFSW_Status@sw,w
 18129  252A  31A6  263C         	fcall	_RfSWPointSelect
 18130                           
 18131                           ;RF_Control_B1.c: 420: RFSW->Status=command;
 18132  252C  0021               	movlb	1	; select bank1
 18133  252D  083C               	movf	_RFSW^(0+128),w
 18134  252E  0086               	movwf	6
 18135  252F  0187               	clrf	7
 18136  2530  0020               	movlb	0	; select bank0
 18137  2531  0822               	movf	setRFSW_Status@command,w
 18138  2532  1001               	bcf	1,0
 18139  2533  1D03               	skipz
 18140  2534  1401               	bsf	1,0
 18141  2535  0008               	return
 18142  2536                     __end_of_setRFSW_Status:	
 18143                           
 18144                           	psect	text112
 18145  263C                     __ptext112:	
 18146 ;; *************** function _RfSWPointSelect *****************
 18147 ;; Defined at:
 18148 ;;		line 339 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\RF_Control_B1.c"
 18149 ;; Parameters:    Size  Location     Type
 18150 ;;  sw              1    wreg     unsigned char 
 18151 ;; Auto vars:     Size  Location     Type
 18152 ;;  sw              1    1[BANK0 ] unsigned char 
 18153 ;; Return value:  Size  Location     Type
 18154 ;;		None               void
 18155 ;; Registers used:
 18156 ;;		wreg
 18157 ;; Tracked objects:
 18158 ;;		On entry : 0/0
 18159 ;;		On exit  : 0/0
 18160 ;;		Unchanged: 0/0
 18161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18164 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18165 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18166 ;;Total ram usage:        2 bytes
 18167 ;; Hardware stack levels used:    1
 18168 ;; Hardware stack levels required when called:    4
 18169 ;; This function calls:
 18170 ;;		Nothing
 18171 ;; This function is called by:
 18172 ;;		_setRFSW_Control
 18173 ;;		_setRFSW_AdjControl
 18174 ;;		_setRFSW_Status
 18175 ;; This function uses a non-reentrant model
 18176 ;;
 18177                           
 18178                           
 18179                           ;psect for function _RfSWPointSelect
 18180  263C                     _RfSWPointSelect:	
 18181                           
 18182                           ;incstack = 0
 18183                           ; Regs used in _RfSWPointSelect: [wreg]
 18184                           ;RfSWPointSelect@sw stored from wreg
 18185  263C  0020               	movlb	0	; select bank0
 18186  263D  00A1               	movwf	RfSWPointSelect@sw
 18187                           
 18188                           ;RF_Control_B1.c: 342: if(sw == 1)
 18189  263E  0821               	movf	RfSWPointSelect@sw,w
 18190  263F  3A01               	xorlw	1
 18191  2640  1D03               	skipz
 18192  2641  2E47               	goto	l2724
 18193                           
 18194                           ;RF_Control_B1.c: 343: {
 18195                           ;RF_Control_B1.c: 344: RFSW=&RFSW1;
 18196  2642  30E6               	movlw	_RFSW1& (0+255)
 18197  2643  00A0               	movwf	??_RfSWPointSelect
 18198  2644  0820               	movf	??_RfSWPointSelect,w
 18199  2645  0021               	movlb	1	; select bank1
 18200  2646  00BC               	movwf	_RFSW^(0+128)
 18201  2647                     l2724:	
 18202                           
 18203                           ;RF_Control_B1.c: 345: }
 18204                           ;RF_Control_B1.c: 348: if(sw == 2)
 18205  2647  0020               	movlb	0	; select bank0
 18206  2648  0821               	movf	RfSWPointSelect@sw,w
 18207  2649  3A02               	xorlw	2
 18208  264A  1D03               	skipz
 18209  264B  0008               	return
 18210                           
 18211                           ;RF_Control_B1.c: 349: {
 18212                           ;RF_Control_B1.c: 350: RFSW=&RFSW2;
 18213  264C  30E7               	movlw	_RFSW2& (0+255)
 18214  264D  00A0               	movwf	??_RfSWPointSelect
 18215  264E  0820               	movf	??_RfSWPointSelect,w
 18216  264F  0021               	movlb	1	; select bank1
 18217  2650  00BC               	movwf	_RFSW^(0+128)
 18218  2651  0008               	return
 18219  2652                     __end_of_RfSWPointSelect:	
 18220                           
 18221                           	psect	text113
 18222  2565                     __ptext113:	
 18223 ;; *************** function _setDimmerLights_Trigger *****************
 18224 ;; Defined at:
 18225 ;;		line 436 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 18226 ;; Parameters:    Size  Location     Type
 18227 ;;  lights          1    wreg     unsigned char 
 18228 ;;  command         1    2[BANK0 ] unsigned char 
 18229 ;; Auto vars:     Size  Location     Type
 18230 ;;  lights          1    3[BANK0 ] unsigned char 
 18231 ;; Return value:  Size  Location     Type
 18232 ;;		None               void
 18233 ;; Registers used:
 18234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18235 ;; Tracked objects:
 18236 ;;		On entry : 0/0
 18237 ;;		On exit  : 0/0
 18238 ;;		Unchanged: 0/0
 18239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18240 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18244 ;;Total ram usage:        2 bytes
 18245 ;; Hardware stack levels used:    1
 18246 ;; Hardware stack levels required when called:    5
 18247 ;; This function calls:
 18248 ;;		_DimmerLightsPointSelect
 18249 ;; This function is called by:
 18250 ;;		_DlyOff_Main
 18251 ;;		_setRFSW_Control
 18252 ;;		_Sw_DimmerOnFunc
 18253 ;;		_Sw_DimmerOffFunc
 18254 ;; This function uses a non-reentrant model
 18255 ;;
 18256                           
 18257                           
 18258                           ;psect for function _setDimmerLights_Trigger
 18259  2565                     _setDimmerLights_Trigger:	
 18260                           
 18261                           ;incstack = 0
 18262                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18263                           ;setDimmerLights_Trigger@lights stored from wreg
 18264  2565  0020               	movlb	0	; select bank0
 18265  2566  00A3               	movwf	setDimmerLights_Trigger@lights
 18266                           
 18267                           ;Dimmer_B1.c: 438: DimmerLightsPointSelect(lights);
 18268  2567  0823               	movf	setDimmerLights_Trigger@lights,w
 18269  2568  31A5  25D6         	fcall	_DimmerLightsPointSelect
 18270                           
 18271                           ;Dimmer_B1.c: 439: DimmerLights->Trigger=command;
 18272  256A  0020               	movlb	0	; select bank0
 18273  256B  086C               	movf	_DimmerLights,w
 18274  256C  3E09               	addlw	9
 18275  256D  0086               	movwf	6
 18276  256E  3001               	movlw	1	; select bank2/3
 18277  256F  0087               	movwf	7
 18278  2570  0822               	movf	setDimmerLights_Trigger@command,w
 18279  2571  1081               	bcf	1,1
 18280  2572  1D03               	skipz
 18281  2573  1481               	bsf	1,1
 18282  2574  0008               	return
 18283  2575                     __end_of_setDimmerLights_Trigger:	
 18284                           
 18285                           	psect	text114
 18286  2555                     __ptext114:	
 18287 ;; *************** function _setDimmerLights_Switch *****************
 18288 ;; Defined at:
 18289 ;;		line 426 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\Dimmer_B1.c"
 18290 ;; Parameters:    Size  Location     Type
 18291 ;;  lights          1    wreg     unsigned char 
 18292 ;;  command         1    2[BANK0 ] unsigned char 
 18293 ;; Auto vars:     Size  Location     Type
 18294 ;;  lights          1    3[BANK0 ] unsigned char 
 18295 ;; Return value:  Size  Location     Type
 18296 ;;		None               void
 18297 ;; Registers used:
 18298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18299 ;; Tracked objects:
 18300 ;;		On entry : 0/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18304 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18307 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18308 ;;Total ram usage:        2 bytes
 18309 ;; Hardware stack levels used:    1
 18310 ;; Hardware stack levels required when called:    5
 18311 ;; This function calls:
 18312 ;;		_DimmerLightsPointSelect
 18313 ;; This function is called by:
 18314 ;;		_DlyOff_Main
 18315 ;;		_setRFSW_Control
 18316 ;;		_Sw_DimmerOnFunc
 18317 ;;		_Sw_DimmerOffFunc
 18318 ;; This function uses a non-reentrant model
 18319 ;;
 18320                           
 18321                           
 18322                           ;psect for function _setDimmerLights_Switch
 18323  2555                     _setDimmerLights_Switch:	
 18324                           
 18325                           ;incstack = 0
 18326                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 18327                           ;setDimmerLights_Switch@lights stored from wreg
 18328  2555  0020               	movlb	0	; select bank0
 18329  2556  00A3               	movwf	setDimmerLights_Switch@lights
 18330                           
 18331                           ;Dimmer_B1.c: 428: DimmerLightsPointSelect(lights);
 18332  2557  0823               	movf	setDimmerLights_Switch@lights,w
 18333  2558  31A5  25D6         	fcall	_DimmerLightsPointSelect
 18334                           
 18335                           ;Dimmer_B1.c: 429: DimmerLights->Switch=command;
 18336  255A  0020               	movlb	0	; select bank0
 18337  255B  086C               	movf	_DimmerLights,w
 18338  255C  3E09               	addlw	9
 18339  255D  0086               	movwf	6
 18340  255E  3001               	movlw	1	; select bank2/3
 18341  255F  0087               	movwf	7
 18342  2560  0822               	movf	setDimmerLights_Switch@command,w
 18343  2561  1001               	bcf	1,0
 18344  2562  1D03               	skipz
 18345  2563  1401               	bsf	1,0
 18346  2564  0008               	return
 18347  2565                     __end_of_setDimmerLights_Switch:	
 18348                           
 18349                           	psect	text115
 18350  25D6                     __ptext115:	
 18351 ;; *************** function _DimmerLightsPointSelect *****************
 18352 ;; Defined at:
 18353 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1.
      +2.1\Release\Dimmer_B1.c"
 18354 ;; Parameters:    Size  Location     Type
 18355 ;;  lights          1    wreg     unsigned char 
 18356 ;; Auto vars:     Size  Location     Type
 18357 ;;  lights          1    1[BANK0 ] unsigned char 
 18358 ;; Return value:  Size  Location     Type
 18359 ;;		None               void
 18360 ;; Registers used:
 18361 ;;		wreg
 18362 ;; Tracked objects:
 18363 ;;		On entry : 0/0
 18364 ;;		On exit  : 0/0
 18365 ;;		Unchanged: 0/0
 18366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18369 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18370 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18371 ;;Total ram usage:        2 bytes
 18372 ;; Hardware stack levels used:    1
 18373 ;; Hardware stack levels required when called:    4
 18374 ;; This function calls:
 18375 ;;		Nothing
 18376 ;; This function is called by:
 18377 ;;		_setDimmerLights_Initialization
 18378 ;;		_setDimmerLights_Main
 18379 ;;		_setDimmerLights_ERROR
 18380 ;;		_setDimmerLights_TriggerERROR
 18381 ;;		_setDimmerLights
 18382 ;;		_setDimmerLights_Adj
 18383 ;;		_setDimmerLights_AdjRF
 18384 ;;		_setDimmerLights_Switch
 18385 ;;		_setDimmerLights_AdjGo
 18386 ;;		_setDimmerLights_Trigger
 18387 ;;		_setDimmerLights_TriggerAdj
 18388 ;;		_setDimmerLights_Clear
 18389 ;;		_setDimmerLights_GO
 18390 ;;		_setDimmerLights_MaxmumValue
 18391 ;; This function uses a non-reentrant model
 18392 ;;
 18393                           
 18394                           
 18395                           ;psect for function _DimmerLightsPointSelect
 18396  25D6                     _DimmerLightsPointSelect:	
 18397                           
 18398                           ;incstack = 0
 18399                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 18400                           ;DimmerLightsPointSelect@lights stored from wreg
 18401  25D6  0020               	movlb	0	; select bank0
 18402  25D7  00A1               	movwf	DimmerLightsPointSelect@lights
 18403                           
 18404                           ;Dimmer_B1.c: 10: if(lights == 1)
 18405  25D8  0821               	movf	DimmerLightsPointSelect@lights,w
 18406  25D9  3A01               	xorlw	1
 18407  25DA  1D03               	skipz
 18408  25DB  2DE0               	goto	l875
 18409                           
 18410                           ;Dimmer_B1.c: 11: {
 18411                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 18412  25DC  302E               	movlw	_DimmerLights1& (0+255)
 18413  25DD  00A0               	movwf	??_DimmerLightsPointSelect
 18414  25DE  0820               	movf	??_DimmerLightsPointSelect,w
 18415  25DF  00EC               	movwf	_DimmerLights
 18416  25E0                     l875:	
 18417                           
 18418                           ;Dimmer_B1.c: 13: }
 18419                           ;Dimmer_B1.c: 17: if(lights == 2)
 18420  25E0  0821               	movf	DimmerLightsPointSelect@lights,w
 18421  25E1  3A02               	xorlw	2
 18422  25E2  1D03               	skipz
 18423  25E3  0008               	return
 18424                           
 18425                           ;Dimmer_B1.c: 18: {
 18426                           ;Dimmer_B1.c: 19: DimmerLights=&DimmerLights2;
 18427  25E4  303B               	movlw	_DimmerLights2& (0+255)
 18428  25E5  00A0               	movwf	??_DimmerLightsPointSelect
 18429  25E6  0820               	movf	??_DimmerLightsPointSelect,w
 18430  25E7  00EC               	movwf	_DimmerLights
 18431  25E8  0008               	return
 18432  25E9                     __end_of_DimmerLightsPointSelect:	
 18433                           
 18434                           	psect	text116
 18435  13C7                     __ptext116:	
 18436 ;; *************** function _setBuz *****************
 18437 ;; Defined at:
 18438 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Buzzer_B1.c"
 18439 ;; Parameters:    Size  Location     Type
 18440 ;;  count           1    wreg     unsigned char 
 18441 ;;  time            2    6[BANK0 ] int 
 18442 ;; Auto vars:     Size  Location     Type
 18443 ;;  count           1    9[BANK0 ] unsigned char 
 18444 ;; Return value:  Size  Location     Type
 18445 ;;		None               void
 18446 ;; Registers used:
 18447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18448 ;; Tracked objects:
 18449 ;;		On entry : 0/0
 18450 ;;		On exit  : 0/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18454 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18455 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18456 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18457 ;;Total ram usage:        4 bytes
 18458 ;; Hardware stack levels used:    1
 18459 ;; Hardware stack levels required when called:    5
 18460 ;; This function calls:
 18461 ;;		___wmul
 18462 ;; This function is called by:
 18463 ;;		_DlyOff_Main
 18464 ;;		_setDimmerLights_Main
 18465 ;;		_DimmerLights_Exceptions
 18466 ;;		_MainT
 18467 ;;		_setOverTemp_Exceptions
 18468 ;;		_setLog_Code
 18469 ;;		_setControl_Lights_Table
 18470 ;;		_setRFSW_Control
 18471 ;;		_setSw_Main
 18472 ;;		_Sw_DimmerOnFunc
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           
 18477                           ;psect for function _setBuz
 18478  13C7                     _setBuz:	
 18479                           
 18480                           ;incstack = 0
 18481                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18482                           ;setBuz@count stored from wreg
 18483  13C7  0020               	movlb	0	; select bank0
 18484  13C8  00A9               	movwf	setBuz@count
 18485                           
 18486                           ;Buzzer_B1.c: 24: time*=20;
 18487  13C9  3014               	movlw	20
 18488  13CA  00A0               	movwf	___wmul@multiplier
 18489  13CB  3000               	movlw	0
 18490  13CC  00A1               	movwf	___wmul@multiplier+1
 18491  13CD  0827               	movf	setBuz@time+1,w
 18492  13CE  01A3               	clrf	___wmul@multiplicand+1
 18493  13CF  07A3               	addwf	___wmul@multiplicand+1,f
 18494  13D0  0826               	movf	setBuz@time,w
 18495  13D1  01A2               	clrf	___wmul@multiplicand
 18496  13D2  07A2               	addwf	___wmul@multiplicand,f
 18497  13D3  31A7  2781  3193   	fcall	___wmul
 18498  13D6  0020               	movlb	0	; select bank0
 18499  13D7  0821               	movf	?___wmul+1,w
 18500  13D8  01A7               	clrf	setBuz@time+1
 18501  13D9  07A7               	addwf	setBuz@time+1,f
 18502  13DA  0820               	movf	?___wmul,w
 18503  13DB  01A6               	clrf	setBuz@time
 18504  13DC  07A6               	addwf	setBuz@time,f
 18505                           
 18506                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 18507  13DD  0878               	movf	_Buz,w
 18508  13DE  0086               	movwf	6
 18509  13DF  3001               	movlw	1	; select bank2/3
 18510  13E0  0087               	movwf	7
 18511  13E1  1C01               	btfss	1,0
 18512  13E2  0008               	return
 18513                           
 18514                           ;Buzzer_B1.c: 26: {
 18515                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 18516  13E3  0878               	movf	_Buz,w
 18517  13E4  0086               	movwf	6
 18518  13E5  3001               	movlw	1	; select bank2/3
 18519  13E6  0087               	movwf	7
 18520  13E7  1881               	btfsc	1,1
 18521  13E8  2C02               	goto	l8640
 18522                           
 18523                           ;Buzzer_B1.c: 28: {
 18524                           ;Buzzer_B1.c: 29: Buz->GO=1;
 18525  13E9  0878               	movf	_Buz,w
 18526  13EA  0086               	movwf	6
 18527  13EB  3001               	movlw	1	; select bank2/3
 18528  13EC  0087               	movwf	7
 18529  13ED  1481               	bsf	1,1
 18530                           
 18531                           ;Buzzer_B1.c: 30: Buz->Count=count;
 18532  13EE  0829               	movf	setBuz@count,w
 18533  13EF  00A8               	movwf	??_setBuz
 18534  13F0  0878               	movf	_Buz,w
 18535  13F1  3E03               	addlw	3
 18536  13F2  0086               	movwf	6
 18537  13F3  3001               	movlw	1	; select bank2/3
 18538  13F4  0087               	movwf	7
 18539  13F5  0828               	movf	??_setBuz,w
 18540  13F6  0081               	movwf	1
 18541                           
 18542                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 18543  13F7  0878               	movf	_Buz,w
 18544  13F8  3E06               	addlw	6
 18545  13F9  0086               	movwf	6
 18546  13FA  3001               	movlw	1	; select bank2/3
 18547  13FB  0087               	movwf	7
 18548  13FC  0826               	movf	setBuz@time,w
 18549  13FD  3FC0               	movwi [0]fsr1
 18550  13FE  0827               	movf	setBuz@time+1,w
 18551  13FF  3FC1               	movwi [1]fsr1
 18552                           
 18553                           ;Buzzer_B1.c: 33: RB3=1;
 18554  1400  158D               	bsf	13,3	;volatile
 18555                           
 18556                           ;Buzzer_B1.c: 34: }
 18557  1401  0008               	return
 18558  1402                     l8640:	
 18559                           
 18560                           ;Buzzer_B1.c: 35: else
 18561                           ;Buzzer_B1.c: 36: {
 18562                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 18563  1402  0878               	movf	_Buz,w
 18564  1403  0086               	movwf	6
 18565  1404  3001               	movlw	1	; select bank2/3
 18566  1405  0087               	movwf	7
 18567  1406  1981               	btfsc	1,3
 18568  1407  2C20               	goto	l8644
 18569                           
 18570                           ;Buzzer_B1.c: 38: {
 18571                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 18572  1408  0878               	movf	_Buz,w
 18573  1409  0086               	movwf	6
 18574  140A  3001               	movlw	1	; select bank2/3
 18575  140B  0087               	movwf	7
 18576  140C  1581               	bsf	1,3
 18577                           
 18578                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 18579  140D  0829               	movf	setBuz@count,w
 18580  140E  00A8               	movwf	??_setBuz
 18581  140F  0878               	movf	_Buz,w
 18582  1410  3E04               	addlw	4
 18583  1411  0086               	movwf	6
 18584  1412  3001               	movlw	1	; select bank2/3
 18585  1413  0087               	movwf	7
 18586  1414  0828               	movf	??_setBuz,w
 18587  1415  0081               	movwf	1
 18588                           
 18589                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 18590  1416  0878               	movf	_Buz,w
 18591  1417  3E08               	addlw	8
 18592  1418  0086               	movwf	6
 18593  1419  3001               	movlw	1	; select bank2/3
 18594  141A  0087               	movwf	7
 18595  141B  0826               	movf	setBuz@time,w
 18596  141C  3FC0               	movwi [0]fsr1
 18597  141D  0827               	movf	setBuz@time+1,w
 18598  141E  3FC1               	movwi [1]fsr1
 18599                           
 18600                           ;Buzzer_B1.c: 42: }
 18601  141F  0008               	return
 18602  1420                     l8644:	
 18603                           
 18604                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 18605  1420  0878               	movf	_Buz,w
 18606  1421  0086               	movwf	6
 18607  1422  3001               	movlw	1	; select bank2/3
 18608  1423  0087               	movwf	7
 18609  1424  1A01               	btfsc	1,4
 18610  1425  0008               	return
 18611                           
 18612                           ;Buzzer_B1.c: 44: {
 18613                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 18614  1426  0878               	movf	_Buz,w
 18615  1427  0086               	movwf	6
 18616  1428  3001               	movlw	1	; select bank2/3
 18617  1429  0087               	movwf	7
 18618  142A  1601               	bsf	1,4
 18619                           
 18620                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 18621  142B  0829               	movf	setBuz@count,w
 18622  142C  00A8               	movwf	??_setBuz
 18623  142D  0878               	movf	_Buz,w
 18624  142E  3E05               	addlw	5
 18625  142F  0086               	movwf	6
 18626  1430  3001               	movlw	1	; select bank2/3
 18627  1431  0087               	movwf	7
 18628  1432  0828               	movf	??_setBuz,w
 18629  1433  0081               	movwf	1
 18630                           
 18631                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 18632  1434  0878               	movf	_Buz,w
 18633  1435  3E0A               	addlw	10
 18634  1436  0086               	movwf	6
 18635  1437  3001               	movlw	1	; select bank2/3
 18636  1438  0087               	movwf	7
 18637  1439  0826               	movf	setBuz@time,w
 18638  143A  3FC0               	movwi [0]fsr1
 18639  143B  0827               	movf	setBuz@time+1,w
 18640  143C  3FC1               	movwi [1]fsr1
 18641  143D  0008               	return
 18642  143E                     __end_of_setBuz:	
 18643                           
 18644                           	psect	text117
 18645  2781                     __ptext117:	
 18646 ;; *************** function ___wmul *****************
 18647 ;; Defined at:
 18648 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 18649 ;; Parameters:    Size  Location     Type
 18650 ;;  multiplier      2    0[BANK0 ] unsigned int 
 18651 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 18652 ;; Auto vars:     Size  Location     Type
 18653 ;;  product         2    4[BANK0 ] unsigned int 
 18654 ;; Return value:  Size  Location     Type
 18655 ;;                  2    0[BANK0 ] unsigned int 
 18656 ;; Registers used:
 18657 ;;		wreg, status,2, status,0
 18658 ;; Tracked objects:
 18659 ;;		On entry : 0/0
 18660 ;;		On exit  : 0/0
 18661 ;;		Unchanged: 0/0
 18662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18663 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18666 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18667 ;;Total ram usage:        6 bytes
 18668 ;; Hardware stack levels used:    1
 18669 ;; Hardware stack levels required when called:    4
 18670 ;; This function calls:
 18671 ;;		Nothing
 18672 ;; This function is called by:
 18673 ;;		_setBuz
 18674 ;;		_Load_Main
 18675 ;; This function uses a non-reentrant model
 18676 ;;
 18677                           
 18678                           
 18679                           ;psect for function ___wmul
 18680  2781                     ___wmul:	
 18681                           
 18682                           ;incstack = 0
 18683                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18684  2781  0020               	movlb	0	; select bank0
 18685  2782  01A4               	clrf	___wmul@product
 18686  2783  01A5               	clrf	___wmul@product+1
 18687  2784                     l8620:	
 18688  2784  1C20               	btfss	___wmul@multiplier,0
 18689  2785  2F8A               	goto	l3239
 18690  2786  0822               	movf	___wmul@multiplicand,w
 18691  2787  07A4               	addwf	___wmul@product,f
 18692  2788  0823               	movf	___wmul@multiplicand+1,w
 18693  2789  3DA5               	addwfc	___wmul@product+1,f
 18694  278A                     l3239:	
 18695  278A  3001               	movlw	1
 18696  278B                     u8185:	
 18697  278B  35A2               	lslf	___wmul@multiplicand,f
 18698  278C  0DA3               	rlf	___wmul@multiplicand+1,f
 18699  278D  0B89               	decfsz	9,f
 18700  278E  2F8B               	goto	u8185
 18701  278F  3001               	movlw	1
 18702  2790                     u8195:	
 18703  2790  36A1               	lsrf	___wmul@multiplier+1,f
 18704  2791  0CA0               	rrf	___wmul@multiplier,f
 18705  2792  0B89               	decfsz	9,f
 18706  2793  2F90               	goto	u8195
 18707  2794  0821               	movf	___wmul@multiplier+1,w
 18708  2795  0420               	iorwf	___wmul@multiplier,w
 18709  2796  1D03               	skipz
 18710  2797  2F84               	goto	l8620
 18711  2798  0825               	movf	___wmul@product+1,w
 18712  2799  01A1               	clrf	?___wmul+1
 18713  279A  07A1               	addwf	?___wmul+1,f
 18714  279B  0824               	movf	___wmul@product,w
 18715  279C  01A0               	clrf	?___wmul
 18716  279D  07A0               	addwf	?___wmul,f
 18717  279E  0008               	return
 18718  279F                     __end_of___wmul:	
 18719                           
 18720                           	psect	text118
 18721  23F1                     __ptext118:	
 18722 ;; *************** function _DelayOff_Initialization *****************
 18723 ;; Defined at:
 18724 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\DelayOff_B1.c"
 18725 ;; Parameters:    Size  Location     Type
 18726 ;;		None
 18727 ;; Auto vars:     Size  Location     Type
 18728 ;;		None
 18729 ;; Return value:  Size  Location     Type
 18730 ;;		None               void
 18731 ;; Registers used:
 18732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18733 ;; Tracked objects:
 18734 ;;		On entry : 0/0
 18735 ;;		On exit  : 0/0
 18736 ;;		Unchanged: 0/0
 18737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18742 ;;Total ram usage:        0 bytes
 18743 ;; Hardware stack levels used:    1
 18744 ;; Hardware stack levels required when called:    6
 18745 ;; This function calls:
 18746 ;;		_DlyOff_Initialization
 18747 ;; This function is called by:
 18748 ;;		_main
 18749 ;; This function uses a non-reentrant model
 18750 ;;
 18751                           
 18752                           
 18753                           ;psect for function _DelayOff_Initialization
 18754  23F1                     _DelayOff_Initialization:	
 18755                           
 18756                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 18757                           
 18758                           ;incstack = 0
 18759                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18760  23F1  3001               	movlw	1
 18761  23F2  31A4  2437  31A3   	fcall	_DlyOff_Initialization
 18762                           
 18763                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 18764  23F5  3002               	movlw	2
 18765  23F6  31A4  2437         	fcall	_DlyOff_Initialization
 18766  23F8  0008               	return
 18767  23F9                     __end_of_DelayOff_Initialization:	
 18768                           
 18769                           	psect	text119
 18770  2437                     __ptext119:	
 18771 ;; *************** function _DlyOff_Initialization *****************
 18772 ;; Defined at:
 18773 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\DelayOff_B1.c"
 18774 ;; Parameters:    Size  Location     Type
 18775 ;;  sw              1    wreg     unsigned char 
 18776 ;; Auto vars:     Size  Location     Type
 18777 ;;  sw              1    2[BANK0 ] unsigned char 
 18778 ;; Return value:  Size  Location     Type
 18779 ;;		None               void
 18780 ;; Registers used:
 18781 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18782 ;; Tracked objects:
 18783 ;;		On entry : 0/0
 18784 ;;		On exit  : 0/0
 18785 ;;		Unchanged: 0/0
 18786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18790 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18791 ;;Total ram usage:        1 bytes
 18792 ;; Hardware stack levels used:    1
 18793 ;; Hardware stack levels required when called:    5
 18794 ;; This function calls:
 18795 ;;		_DelayOffPointSelect
 18796 ;; This function is called by:
 18797 ;;		_DelayOff_Initialization
 18798 ;; This function uses a non-reentrant model
 18799 ;;
 18800                           
 18801                           
 18802                           ;psect for function _DlyOff_Initialization
 18803  2437                     _DlyOff_Initialization:	
 18804                           
 18805                           ;incstack = 0
 18806                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18807                           ;DlyOff_Initialization@sw stored from wreg
 18808  2437  0020               	movlb	0	; select bank0
 18809  2438  00A2               	movwf	DlyOff_Initialization@sw
 18810                           
 18811                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 18812  2439  0822               	movf	DlyOff_Initialization@sw,w
 18813  243A  31A6  267E         	fcall	_DelayOffPointSelect
 18814                           
 18815                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 18816  243C  0021               	movlb	1	; select bank1
 18817  243D  0838               	movf	_DelayOff^(0+128),w
 18818  243E  0086               	movwf	6
 18819  243F  0187               	clrf	7
 18820  2440  1401               	bsf	1,0
 18821  2441  0008               	return
 18822  2442                     __end_of_DlyOff_Initialization:	
 18823                           
 18824                           	psect	text120
 18825  267E                     __ptext120:	
 18826 ;; *************** function _DelayOffPointSelect *****************
 18827 ;; Defined at:
 18828 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1.
      +2.1\Release\DelayOff_B1.c"
 18829 ;; Parameters:    Size  Location     Type
 18830 ;;  sw              1    wreg     unsigned char 
 18831 ;; Auto vars:     Size  Location     Type
 18832 ;;  sw              1    1[BANK0 ] unsigned char 
 18833 ;; Return value:  Size  Location     Type
 18834 ;;		None               void
 18835 ;; Registers used:
 18836 ;;		wreg
 18837 ;; Tracked objects:
 18838 ;;		On entry : 0/0
 18839 ;;		On exit  : 0/0
 18840 ;;		Unchanged: 0/0
 18841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18844 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18846 ;;Total ram usage:        2 bytes
 18847 ;; Hardware stack levels used:    1
 18848 ;; Hardware stack levels required when called:    4
 18849 ;; This function calls:
 18850 ;;		Nothing
 18851 ;; This function is called by:
 18852 ;;		_DlyOff_Initialization
 18853 ;;		_DlyOff_Main
 18854 ;;		_setDelayOff_GO
 18855 ;; This function uses a non-reentrant model
 18856 ;;
 18857                           
 18858                           
 18859                           ;psect for function _DelayOffPointSelect
 18860  267E                     _DelayOffPointSelect:	
 18861                           
 18862                           ;incstack = 0
 18863                           ; Regs used in _DelayOffPointSelect: [wreg]
 18864                           ;DelayOffPointSelect@sw stored from wreg
 18865  267E  0020               	movlb	0	; select bank0
 18866  267F  00A1               	movwf	DelayOffPointSelect@sw
 18867                           
 18868                           ;DelayOff_B1.c: 11: if(sw == 1)
 18869  2680  0821               	movf	DelayOffPointSelect@sw,w
 18870  2681  3A01               	xorlw	1
 18871  2682  1D03               	skipz
 18872  2683  2E8A               	goto	l6390
 18873                           
 18874                           ;DelayOff_B1.c: 12: {
 18875                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 18876  2684  30CB               	movlw	_DlySw1& (0+255)
 18877  2685  00A0               	movwf	??_DelayOffPointSelect
 18878  2686  0820               	movf	??_DelayOffPointSelect,w
 18879  2687  0021               	movlb	1	; select bank1
 18880  2688  00B8               	movwf	_DelayOff^(0+128)
 18881                           
 18882                           ;DelayOff_B1.c: 14: }
 18883  2689  0008               	return
 18884  268A                     l6390:	
 18885                           
 18886                           ;DelayOff_B1.c: 17: else if(sw == 2)
 18887  268A  0020               	movlb	0	; select bank0
 18888  268B  0821               	movf	DelayOffPointSelect@sw,w
 18889  268C  3A02               	xorlw	2
 18890  268D  1D03               	skipz
 18891  268E  0008               	return
 18892                           
 18893                           ;DelayOff_B1.c: 18: {
 18894                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 18895  268F  30D0               	movlw	_DlySw2& (0+255)
 18896  2690  00A0               	movwf	??_DelayOffPointSelect
 18897  2691  0820               	movf	??_DelayOffPointSelect,w
 18898  2692  0021               	movlb	1	; select bank1
 18899  2693  00B8               	movwf	_DelayOff^(0+128)
 18900  2694  0008               	return
 18901  2695                     __end_of_DelayOffPointSelect:	
 18902                           
 18903                           	psect	text121
 18904  25FD                     __ptext121:	
 18905 ;; *************** function _CC2500_PowerOnInitial *****************
 18906 ;; Defined at:
 18907 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\CC2500_B1.c"
 18908 ;; Parameters:    Size  Location     Type
 18909 ;;		None
 18910 ;; Auto vars:     Size  Location     Type
 18911 ;;		None
 18912 ;; Return value:  Size  Location     Type
 18913 ;;		None               void
 18914 ;; Registers used:
 18915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18916 ;; Tracked objects:
 18917 ;;		On entry : 0/0
 18918 ;;		On exit  : 0/0
 18919 ;;		Unchanged: 0/0
 18920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18925 ;;Total ram usage:        0 bytes
 18926 ;; Hardware stack levels used:    1
 18927 ;; Hardware stack levels required when called:    7
 18928 ;; This function calls:
 18929 ;;		_CC2500_ClearRXFIFO
 18930 ;;		_CC2500_ClearTXFIFO
 18931 ;;		_CC2500_FrequencyCabr
 18932 ;;		_CC2500_InitPATable
 18933 ;;		_CC2500_InitSetREG
 18934 ;;		_CC2500_PowerRST
 18935 ;;		_CC2500_SIDLEMode
 18936 ;; This function is called by:
 18937 ;;		_main
 18938 ;; This function uses a non-reentrant model
 18939 ;;
 18940                           
 18941                           
 18942                           ;psect for function _CC2500_PowerOnInitial
 18943  25FD                     _CC2500_PowerOnInitial:	
 18944                           
 18945                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 18946                           
 18947                           ;incstack = 0
 18948                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18949  25FD  319A  2258  31A5   	fcall	_CC2500_PowerRST
 18950                           
 18951                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 18952  2600  3199  217E  31A5   	fcall	_CC2500_InitSetREG
 18953                           
 18954                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 18955  2603  31A7  279F  31A5   	fcall	_CC2500_InitPATable
 18956                           
 18957                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 18958  2606  31A3  23B2  31A5   	fcall	_CC2500_ClearTXFIFO
 18959                           
 18960                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 18961  2609  31A3  23AE  31A5   	fcall	_CC2500_ClearRXFIFO
 18962                           
 18963                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 18964  260C  31A4  24A7  31A5   	fcall	_CC2500_FrequencyCabr
 18965                           
 18966                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 18967  260F  31A3  23B6         	fcall	_CC2500_SIDLEMode
 18968  2611  0008               	return
 18969  2612                     __end_of_CC2500_PowerOnInitial:	
 18970                           
 18971                           	psect	text122
 18972  23B6                     __ptext122:	
 18973 ;; *************** function _CC2500_SIDLEMode *****************
 18974 ;; Defined at:
 18975 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 18976 ;; Parameters:    Size  Location     Type
 18977 ;;		None
 18978 ;; Auto vars:     Size  Location     Type
 18979 ;;		None
 18980 ;; Return value:  Size  Location     Type
 18981 ;;		None               void
 18982 ;; Registers used:
 18983 ;;		wreg, status,2, status,0, pclath, cstack
 18984 ;; Tracked objects:
 18985 ;;		On entry : 0/0
 18986 ;;		On exit  : 0/0
 18987 ;;		Unchanged: 0/0
 18988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18993 ;;Total ram usage:        0 bytes
 18994 ;; Hardware stack levels used:    1
 18995 ;; Hardware stack levels required when called:    6
 18996 ;; This function calls:
 18997 ;;		_CC2500_WriteCommand
 18998 ;; This function is called by:
 18999 ;;		_CC2500_PowerOnInitial
 19000 ;; This function uses a non-reentrant model
 19001 ;;
 19002                           
 19003                           
 19004                           ;psect for function _CC2500_SIDLEMode
 19005  23B6                     _CC2500_SIDLEMode:	
 19006                           
 19007                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 19008                           
 19009                           ;incstack = 0
 19010                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 19011  23B6  3036               	movlw	54
 19012  23B7  31A5  2545         	fcall	_CC2500_WriteCommand
 19013  23B9  0008               	return
 19014  23BA                     __end_of_CC2500_SIDLEMode:	
 19015                           
 19016                           	psect	text123
 19017  1A58                     __ptext123:	
 19018 ;; *************** function _CC2500_PowerRST *****************
 19019 ;; Defined at:
 19020 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19021 ;; Parameters:    Size  Location     Type
 19022 ;;		None
 19023 ;; Auto vars:     Size  Location     Type
 19024 ;;		None
 19025 ;; Return value:  Size  Location     Type
 19026 ;;		None               void
 19027 ;; Registers used:
 19028 ;;		wreg, status,2, status,0, pclath, cstack
 19029 ;; Tracked objects:
 19030 ;;		On entry : 0/0
 19031 ;;		On exit  : 0/0
 19032 ;;		Unchanged: 0/0
 19033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19037 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19038 ;;Total ram usage:        1 bytes
 19039 ;; Hardware stack levels used:    1
 19040 ;; Hardware stack levels required when called:    5
 19041 ;; This function calls:
 19042 ;;		_CC2500_WriteByte
 19043 ;;		_DelayTime_1us
 19044 ;; This function is called by:
 19045 ;;		_CC2500_PowerOnInitial
 19046 ;; This function uses a non-reentrant model
 19047 ;;
 19048                           
 19049                           
 19050                           ;psect for function _CC2500_PowerRST
 19051  1A58                     _CC2500_PowerRST:	
 19052                           
 19053                           ;CC2500_B1.c: 112: RC1=0;
 19054                           
 19055                           ;incstack = 0
 19056                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 19057  1A58  0020               	movlb	0	; select bank0
 19058  1A59  108E               	bcf	14,1	;volatile
 19059                           
 19060                           ;CC2500_B1.c: 113: RC0=0;
 19061  1A5A  100E               	bcf	14,0	;volatile
 19062                           
 19063                           ;CC2500_B1.c: 114: RC4=1;
 19064  1A5B  160E               	bsf	14,4	;volatile
 19065                           
 19066                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 19067  1A5C  300A               	movlw	10
 19068  1A5D  00A0               	movwf	DelayTime_1us@count
 19069  1A5E  3000               	movlw	0
 19070  1A5F  00A1               	movwf	DelayTime_1us@count+1
 19071  1A60  3199  210B  319A   	fcall	_DelayTime_1us
 19072                           
 19073                           ;CC2500_B1.c: 116: RC4=0;
 19074  1A63  0020               	movlb	0	; select bank0
 19075  1A64  120E               	bcf	14,4	;volatile
 19076                           
 19077                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 19078  1A65  300A               	movlw	10
 19079  1A66  00A0               	movwf	DelayTime_1us@count
 19080  1A67  3000               	movlw	0
 19081  1A68  00A1               	movwf	DelayTime_1us@count+1
 19082  1A69  3199  210B  319A   	fcall	_DelayTime_1us
 19083                           
 19084                           ;CC2500_B1.c: 118: RC4=1;
 19085  1A6C  0020               	movlb	0	; select bank0
 19086  1A6D  160E               	bsf	14,4	;volatile
 19087                           
 19088                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 19089  1A6E  3028               	movlw	40
 19090  1A6F  00A0               	movwf	DelayTime_1us@count
 19091  1A70  3000               	movlw	0
 19092  1A71  00A1               	movwf	DelayTime_1us@count+1
 19093  1A72  3199  210B  319A   	fcall	_DelayTime_1us
 19094                           
 19095                           ;CC2500_B1.c: 120: RC4=0;
 19096  1A75  0020               	movlb	0	; select bank0
 19097  1A76  120E               	bcf	14,4	;volatile
 19098                           
 19099                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 19100  1A77  3030               	movlw	48
 19101  1A78  00A6               	movwf	??_CC2500_PowerRST
 19102  1A79  0826               	movf	??_CC2500_PowerRST,w
 19103  1A7A  0021               	movlb	1	; select bank1
 19104  1A7B  00BF               	movwf	_SPI0Buffer^(0+128)
 19105  1A7C                     l340:	
 19106                           ;CC2500_B1.c: 122: while(RC2==1);
 19107                           
 19108  1A7C  0020               	movlb	0	; select bank0
 19109  1A7D  190E               	btfsc	14,2	;volatile
 19110  1A7E  2A7C               	goto	l340
 19111                           
 19112                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 19113  1A7F  31A6  26AD  319A   	fcall	_CC2500_WriteByte
 19114  1A82                     l343:	
 19115                           ;CC2500_B1.c: 124: while(RC2==1);
 19116                           
 19117  1A82  0020               	movlb	0	; select bank0
 19118  1A83  190E               	btfsc	14,2	;volatile
 19119  1A84  2A82               	goto	l343
 19120                           
 19121                           ;CC2500_B1.c: 125: RC0=0;
 19122  1A85  100E               	bcf	14,0	;volatile
 19123                           
 19124                           ;CC2500_B1.c: 126: RC4=1;
 19125  1A86  160E               	bsf	14,4	;volatile
 19126  1A87  0008               	return
 19127  1A88                     __end_of_CC2500_PowerRST:	
 19128                           
 19129                           	psect	text124
 19130  197E                     __ptext124:	
 19131 ;; *************** function _CC2500_InitSetREG *****************
 19132 ;; Defined at:
 19133 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19134 ;; Parameters:    Size  Location     Type
 19135 ;;		None
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;  loop_c          1    8[BANK0 ] unsigned char 
 19138 ;;  temp2           1    7[BANK0 ] unsigned char 
 19139 ;;  temp1           1    6[BANK0 ] unsigned char 
 19140 ;; Return value:  Size  Location     Type
 19141 ;;		None               void
 19142 ;; Registers used:
 19143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19144 ;; Tracked objects:
 19145 ;;		On entry : 0/0
 19146 ;;		On exit  : 0/0
 19147 ;;		Unchanged: 0/0
 19148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19152 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19153 ;;Total ram usage:        4 bytes
 19154 ;; Hardware stack levels used:    1
 19155 ;; Hardware stack levels required when called:    6
 19156 ;; This function calls:
 19157 ;;		_CC2500_WriteREG
 19158 ;; This function is called by:
 19159 ;;		_CC2500_PowerOnInitial
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           
 19164                           ;psect for function _CC2500_InitSetREG
 19165  197E                     _CC2500_InitSetREG:	
 19166                           
 19167                           ;CC2500_B1.c: 133: unsigned char loop_c;
 19168                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 19169                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 19170                           
 19171                           ;incstack = 0
 19172                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19173  197E  0020               	movlb	0	; select bank0
 19174  197F  01A8               	clrf	CC2500_InitSetREG@loop_c
 19175  1980                     L15:	
 19176  1980  302F               	movlw	47
 19177  1981  0228               	subwf	CC2500_InitSetREG@loop_c,w
 19178  1982  1803               	btfsc	3,0
 19179  1983  0008               	return
 19180                           
 19181                           ;CC2500_B1.c: 137: {
 19182                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 19183  1984  0828               	movf	CC2500_InitSetREG@loop_c,w
 19184  1985  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 19185  1986  0084               	movwf	4
 19186  1987  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 19187  1988  1803               	skipnc
 19188  1989  3E01               	addlw	1
 19189  198A  0085               	movwf	5
 19190  198B  0800               	movf	0,w	;code access
 19191  198C  00A5               	movwf	??_CC2500_InitSetREG
 19192  198D  0825               	movf	??_CC2500_InitSetREG,w
 19193  198E  00A6               	movwf	CC2500_InitSetREG@temp1
 19194                           
 19195                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 19196  198F  0828               	movf	CC2500_InitSetREG@loop_c,w
 19197  1990  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 19198  1991  0084               	movwf	4
 19199  1992  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 19200  1993  1803               	skipnc
 19201  1994  3E01               	addlw	1
 19202  1995  0085               	movwf	5
 19203  1996  0800               	movf	0,w	;code access
 19204  1997  00A5               	movwf	??_CC2500_InitSetREG
 19205  1998  0825               	movf	??_CC2500_InitSetREG,w
 19206  1999  00A7               	movwf	CC2500_InitSetREG@temp2
 19207                           
 19208                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 19209  199A  0827               	movf	CC2500_InitSetREG@temp2,w
 19210  199B  00A5               	movwf	??_CC2500_InitSetREG
 19211  199C  0825               	movf	??_CC2500_InitSetREG,w
 19212  199D  00A2               	movwf	CC2500_WriteREG@value
 19213  199E  0826               	movf	CC2500_InitSetREG@temp1,w
 19214  199F  31A6  26C6  3199   	fcall	_CC2500_WriteREG
 19215  19A2  3001               	movlw	1
 19216  19A3  0020               	movlb	0	; select bank0
 19217  19A4  00A5               	movwf	??_CC2500_InitSetREG
 19218  19A5  0825               	movf	??_CC2500_InitSetREG,w
 19219  19A6  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 19220  19A7  2980               	goto	L15
 19221  19A8                     __end_of_CC2500_InitSetREG:	
 19222                           
 19223                           	psect	text125
 19224  279F                     __ptext125:	
 19225 ;; *************** function _CC2500_InitPATable *****************
 19226 ;; Defined at:
 19227 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19228 ;; Parameters:    Size  Location     Type
 19229 ;;		None
 19230 ;; Auto vars:     Size  Location     Type
 19231 ;;  loop_d          1    7[BANK0 ] unsigned char 
 19232 ;;  temp            1    6[BANK0 ] unsigned char 
 19233 ;; Return value:  Size  Location     Type
 19234 ;;		None               void
 19235 ;; Registers used:
 19236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19237 ;; Tracked objects:
 19238 ;;		On entry : 0/0
 19239 ;;		On exit  : 0/0
 19240 ;;		Unchanged: 0/0
 19241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19243 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19245 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19246 ;;Total ram usage:        3 bytes
 19247 ;; Hardware stack levels used:    1
 19248 ;; Hardware stack levels required when called:    6
 19249 ;; This function calls:
 19250 ;;		_CC2500_WriteREG
 19251 ;; This function is called by:
 19252 ;;		_CC2500_PowerOnInitial
 19253 ;; This function uses a non-reentrant model
 19254 ;;
 19255                           
 19256                           
 19257                           ;psect for function _CC2500_InitPATable
 19258  279F                     _CC2500_InitPATable:	
 19259                           
 19260                           ;CC2500_B1.c: 149: unsigned char loop_d;
 19261                           ;CC2500_B1.c: 150: unsigned char temp;
 19262                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 19263                           
 19264                           ;incstack = 0
 19265                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19266  279F  0020               	movlb	0	; select bank0
 19267  27A0  01A7               	clrf	CC2500_InitPATable@loop_d
 19268  27A1                     L16:	
 19269  27A1  3008               	movlw	8
 19270  27A2  0227               	subwf	CC2500_InitPATable@loop_d,w
 19271  27A3  1803               	btfsc	3,0
 19272  27A4  0008               	return
 19273                           
 19274                           ;CC2500_B1.c: 153: {
 19275                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 19276  27A5  0827               	movf	CC2500_InitPATable@loop_d,w
 19277  27A6  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 19278  27A7  0084               	movwf	4
 19279  27A8  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 19280  27A9  1803               	skipnc
 19281  27AA  3E01               	addlw	1
 19282  27AB  0085               	movwf	5
 19283  27AC  0800               	movf	0,w	;code access
 19284  27AD  00A5               	movwf	??_CC2500_InitPATable
 19285  27AE  0825               	movf	??_CC2500_InitPATable,w
 19286  27AF  00A6               	movwf	CC2500_InitPATable@temp
 19287                           
 19288                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 19289  27B0  0826               	movf	CC2500_InitPATable@temp,w
 19290  27B1  00A5               	movwf	??_CC2500_InitPATable
 19291  27B2  0825               	movf	??_CC2500_InitPATable,w
 19292  27B3  00A2               	movwf	CC2500_WriteREG@value
 19293  27B4  303E               	movlw	62
 19294  27B5  31A6  26C6  31A7   	fcall	_CC2500_WriteREG
 19295  27B8  3001               	movlw	1
 19296  27B9  0020               	movlb	0	; select bank0
 19297  27BA  00A5               	movwf	??_CC2500_InitPATable
 19298  27BB  0825               	movf	??_CC2500_InitPATable,w
 19299  27BC  07A7               	addwf	CC2500_InitPATable@loop_d,f
 19300  27BD  2FA1               	goto	L16
 19301  27BE                     __end_of_CC2500_InitPATable:	
 19302                           
 19303                           	psect	text126
 19304  26C6                     __ptext126:	
 19305 ;; *************** function _CC2500_WriteREG *****************
 19306 ;; Defined at:
 19307 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19308 ;; Parameters:    Size  Location     Type
 19309 ;;  w_addr          1    wreg     unsigned char 
 19310 ;;  value           1    2[BANK0 ] unsigned char 
 19311 ;; Auto vars:     Size  Location     Type
 19312 ;;  w_addr          1    4[BANK0 ] unsigned char 
 19313 ;; Return value:  Size  Location     Type
 19314 ;;		None               void
 19315 ;; Registers used:
 19316 ;;		wreg, status,2, status,0, pclath, cstack
 19317 ;; Tracked objects:
 19318 ;;		On entry : 0/0
 19319 ;;		On exit  : 0/0
 19320 ;;		Unchanged: 0/0
 19321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19322 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19323 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19325 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19326 ;;Total ram usage:        3 bytes
 19327 ;; Hardware stack levels used:    1
 19328 ;; Hardware stack levels required when called:    5
 19329 ;; This function calls:
 19330 ;;		_CC2500_WriteByte
 19331 ;; This function is called by:
 19332 ;;		_CC2500_InitSetREG
 19333 ;;		_CC2500_InitPATable
 19334 ;; This function uses a non-reentrant model
 19335 ;;
 19336                           
 19337                           
 19338                           ;psect for function _CC2500_WriteREG
 19339  26C6                     _CC2500_WriteREG:	
 19340                           
 19341                           ;incstack = 0
 19342                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 19343                           ;CC2500_WriteREG@w_addr stored from wreg
 19344  26C6  0020               	movlb	0	; select bank0
 19345  26C7  00A4               	movwf	CC2500_WriteREG@w_addr
 19346                           
 19347                           ;CC2500_B1.c: 229: RC4=0;
 19348  26C8  120E               	bcf	14,4	;volatile
 19349                           
 19350                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 19351  26C9  0824               	movf	CC2500_WriteREG@w_addr,w
 19352  26CA  00A3               	movwf	??_CC2500_WriteREG
 19353  26CB  0823               	movf	??_CC2500_WriteREG,w
 19354  26CC  0021               	movlb	1	; select bank1
 19355  26CD  00BF               	movwf	_SPI0Buffer^(0+128)
 19356  26CE                     l385:	
 19357                           ;CC2500_B1.c: 231: while(RC2==1);
 19358                           
 19359  26CE  0020               	movlb	0	; select bank0
 19360  26CF  190E               	btfsc	14,2	;volatile
 19361  26D0  2ECE               	goto	l385
 19362                           
 19363                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 19364  26D1  31A6  26AD  31A6   	fcall	_CC2500_WriteByte
 19365                           
 19366                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 19367  26D4  0020               	movlb	0	; select bank0
 19368  26D5  0822               	movf	CC2500_WriteREG@value,w
 19369  26D6  00A3               	movwf	??_CC2500_WriteREG
 19370  26D7  0823               	movf	??_CC2500_WriteREG,w
 19371  26D8  0021               	movlb	1	; select bank1
 19372  26D9  00BF               	movwf	_SPI0Buffer^(0+128)
 19373                           
 19374                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 19375  26DA  31A6  26AD         	fcall	_CC2500_WriteByte
 19376                           
 19377                           ;CC2500_B1.c: 235: RC4=1;
 19378  26DC  0020               	movlb	0	; select bank0
 19379  26DD  160E               	bsf	14,4	;volatile
 19380  26DE  0008               	return
 19381  26DF                     __end_of_CC2500_WriteREG:	
 19382                           
 19383                           	psect	text127
 19384  24A7                     __ptext127:	
 19385 ;; *************** function _CC2500_FrequencyCabr *****************
 19386 ;; Defined at:
 19387 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19388 ;; Parameters:    Size  Location     Type
 19389 ;;		None
 19390 ;; Auto vars:     Size  Location     Type
 19391 ;;		None
 19392 ;; Return value:  Size  Location     Type
 19393 ;;		None               void
 19394 ;; Registers used:
 19395 ;;		wreg, status,2, status,0, pclath, cstack
 19396 ;; Tracked objects:
 19397 ;;		On entry : 0/0
 19398 ;;		On exit  : 0/0
 19399 ;;		Unchanged: 0/0
 19400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19405 ;;Total ram usage:        0 bytes
 19406 ;; Hardware stack levels used:    1
 19407 ;; Hardware stack levels required when called:    6
 19408 ;; This function calls:
 19409 ;;		_CC2500_WriteCommand
 19410 ;;		_DelayTime_1us
 19411 ;; This function is called by:
 19412 ;;		_CC2500_PowerOnInitial
 19413 ;; This function uses a non-reentrant model
 19414 ;;
 19415                           
 19416                           
 19417                           ;psect for function _CC2500_FrequencyCabr
 19418  24A7                     _CC2500_FrequencyCabr:	
 19419                           
 19420                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 19421                           
 19422                           ;incstack = 0
 19423                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 19424  24A7  3033               	movlw	51
 19425  24A8  31A5  2545  31A4   	fcall	_CC2500_WriteCommand
 19426                           
 19427                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 19428  24AB  30E8               	movlw	232
 19429  24AC  0020               	movlb	0	; select bank0
 19430  24AD  00A0               	movwf	DelayTime_1us@count
 19431  24AE  3003               	movlw	3
 19432  24AF  00A1               	movwf	DelayTime_1us@count+1
 19433  24B0  3199  210B         	fcall	_DelayTime_1us
 19434  24B2  0008               	return
 19435  24B3                     __end_of_CC2500_FrequencyCabr:	
 19436                           
 19437                           	psect	text128
 19438  190B                     __ptext128:	
 19439 ;; *************** function _DelayTime_1us *****************
 19440 ;; Defined at:
 19441 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19442 ;; Parameters:    Size  Location     Type
 19443 ;;  count           2    0[BANK0 ] int 
 19444 ;; Auto vars:     Size  Location     Type
 19445 ;;  j               2    4[BANK0 ] unsigned int 
 19446 ;;  i               2    2[BANK0 ] unsigned int 
 19447 ;; Return value:  Size  Location     Type
 19448 ;;		None               void
 19449 ;; Registers used:
 19450 ;;		wreg, status,2
 19451 ;; Tracked objects:
 19452 ;;		On entry : 0/0
 19453 ;;		On exit  : 0/0
 19454 ;;		Unchanged: 0/0
 19455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19457 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19459 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19460 ;;Total ram usage:        6 bytes
 19461 ;; Hardware stack levels used:    1
 19462 ;; Hardware stack levels required when called:    4
 19463 ;; This function calls:
 19464 ;;		Nothing
 19465 ;; This function is called by:
 19466 ;;		_CC2500_PowerRST
 19467 ;;		_CC2500_FrequencyCabr
 19468 ;; This function uses a non-reentrant model
 19469 ;;
 19470                           
 19471                           
 19472                           ;psect for function _DelayTime_1us
 19473  190B                     _DelayTime_1us:	
 19474                           
 19475                           ;CC2500_B1.c: 285: unsigned int i,j;
 19476                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 19477                           
 19478                           ;incstack = 0
 19479                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 19480  190B  3001               	movlw	1
 19481  190C  0020               	movlb	0	; select bank0
 19482  190D  00A2               	movwf	DelayTime_1us@i
 19483  190E  3000               	movlw	0
 19484  190F  00A3               	movwf	DelayTime_1us@i+1
 19485  1910                     l409:	
 19486  1910  0821               	movf	DelayTime_1us@count+1,w
 19487  1911  0223               	subwf	DelayTime_1us@i+1,w
 19488  1912  1D03               	skipz
 19489  1913  2916               	goto	u8745
 19490  1914  0820               	movf	DelayTime_1us@count,w
 19491  1915  0222               	subwf	DelayTime_1us@i,w
 19492  1916                     u8745:	
 19493  1916  1803               	btfsc	3,0
 19494  1917  0008               	return
 19495                           
 19496                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 19497  1918  01A4               	clrf	DelayTime_1us@j
 19498  1919  01A5               	clrf	DelayTime_1us@j+1
 19499  191A  3000               	movlw	0
 19500  191B  0225               	subwf	DelayTime_1us@j+1,w
 19501  191C  3002               	movlw	2
 19502  191D  1903               	skipnz
 19503  191E  0224               	subwf	DelayTime_1us@j,w
 19504  191F  1803               	btfsc	3,0
 19505  1920  292C               	goto	l9020
 19506  1921                     l9018:	
 19507  1921  3001               	movlw	1
 19508  1922  07A4               	addwf	DelayTime_1us@j,f
 19509  1923  3000               	movlw	0
 19510  1924  3DA5               	addwfc	DelayTime_1us@j+1,f
 19511  1925  3000               	movlw	0
 19512  1926  0225               	subwf	DelayTime_1us@j+1,w
 19513  1927  3002               	movlw	2
 19514  1928  1903               	skipnz
 19515  1929  0224               	subwf	DelayTime_1us@j,w
 19516  192A  1C03               	skipc
 19517  192B  2921               	goto	l9018
 19518  192C                     l9020:	
 19519  192C  3001               	movlw	1
 19520  192D  07A2               	addwf	DelayTime_1us@i,f
 19521  192E  3000               	movlw	0
 19522  192F  3DA3               	addwfc	DelayTime_1us@i+1,f
 19523  1930  2910               	goto	l409
 19524  1931                     __end_of_DelayTime_1us:	
 19525                           
 19526                           	psect	text129
 19527  23B2                     __ptext129:	
 19528 ;; *************** function _CC2500_ClearTXFIFO *****************
 19529 ;; Defined at:
 19530 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;		None
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;		None
 19535 ;; Return value:  Size  Location     Type
 19536 ;;		None               void
 19537 ;; Registers used:
 19538 ;;		wreg, status,2, status,0, pclath, cstack
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19548 ;;Total ram usage:        0 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    6
 19551 ;; This function calls:
 19552 ;;		_CC2500_WriteCommand
 19553 ;; This function is called by:
 19554 ;;		_CC2500_PowerOnInitial
 19555 ;; This function uses a non-reentrant model
 19556 ;;
 19557                           
 19558                           
 19559                           ;psect for function _CC2500_ClearTXFIFO
 19560  23B2                     _CC2500_ClearTXFIFO:	
 19561                           
 19562                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 19563                           
 19564                           ;incstack = 0
 19565                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 19566  23B2  303B               	movlw	59
 19567  23B3  31A5  2545         	fcall	_CC2500_WriteCommand
 19568  23B5  0008               	return
 19569  23B6                     __end_of_CC2500_ClearTXFIFO:	
 19570                           
 19571                           	psect	text130
 19572  23AE                     __ptext130:	
 19573 ;; *************** function _CC2500_ClearRXFIFO *****************
 19574 ;; Defined at:
 19575 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19576 ;; Parameters:    Size  Location     Type
 19577 ;;		None
 19578 ;; Auto vars:     Size  Location     Type
 19579 ;;		None
 19580 ;; Return value:  Size  Location     Type
 19581 ;;		None               void
 19582 ;; Registers used:
 19583 ;;		wreg, status,2, status,0, pclath, cstack
 19584 ;; Tracked objects:
 19585 ;;		On entry : 0/0
 19586 ;;		On exit  : 0/0
 19587 ;;		Unchanged: 0/0
 19588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19593 ;;Total ram usage:        0 bytes
 19594 ;; Hardware stack levels used:    1
 19595 ;; Hardware stack levels required when called:    6
 19596 ;; This function calls:
 19597 ;;		_CC2500_WriteCommand
 19598 ;; This function is called by:
 19599 ;;		_CC2500_PowerOnInitial
 19600 ;; This function uses a non-reentrant model
 19601 ;;
 19602                           
 19603                           
 19604                           ;psect for function _CC2500_ClearRXFIFO
 19605  23AE                     _CC2500_ClearRXFIFO:	
 19606                           
 19607                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 19608                           
 19609                           ;incstack = 0
 19610                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 19611  23AE  303A               	movlw	58
 19612  23AF  31A5  2545         	fcall	_CC2500_WriteCommand
 19613  23B1  0008               	return
 19614  23B2                     __end_of_CC2500_ClearRXFIFO:	
 19615                           
 19616                           	psect	text131
 19617  2545                     __ptext131:	
 19618 ;; *************** function _CC2500_WriteCommand *****************
 19619 ;; Defined at:
 19620 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;  command         1    wreg     unsigned char 
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;  command         1    3[BANK0 ] unsigned char 
 19625 ;; Return value:  Size  Location     Type
 19626 ;;		None               void
 19627 ;; Registers used:
 19628 ;;		wreg, status,2, status,0, pclath, cstack
 19629 ;; Tracked objects:
 19630 ;;		On entry : 0/0
 19631 ;;		On exit  : 0/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19638 ;;Total ram usage:        2 bytes
 19639 ;; Hardware stack levels used:    1
 19640 ;; Hardware stack levels required when called:    5
 19641 ;; This function calls:
 19642 ;;		_CC2500_WriteByte
 19643 ;; This function is called by:
 19644 ;;		_CC2500_TxData
 19645 ;;		_CC2500_RxData
 19646 ;;		_CC2500_ClearTXFIFO
 19647 ;;		_CC2500_ClearRXFIFO
 19648 ;;		_CC2500_FrequencyCabr
 19649 ;;		_CC2500_SIDLEMode
 19650 ;;		_setRF_Main
 19651 ;;		_RF_RxDisable
 19652 ;; This function uses a non-reentrant model
 19653 ;;
 19654                           
 19655                           
 19656                           ;psect for function _CC2500_WriteCommand
 19657  2545                     _CC2500_WriteCommand:	
 19658                           
 19659                           ;incstack = 0
 19660                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 19661                           ;CC2500_WriteCommand@command stored from wreg
 19662  2545  0020               	movlb	0	; select bank0
 19663  2546  00A3               	movwf	CC2500_WriteCommand@command
 19664                           
 19665                           ;CC2500_B1.c: 255: RC4=0;
 19666  2547  120E               	bcf	14,4	;volatile
 19667                           
 19668                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 19669  2548  0823               	movf	CC2500_WriteCommand@command,w
 19670  2549  00A2               	movwf	??_CC2500_WriteCommand
 19671  254A  0822               	movf	??_CC2500_WriteCommand,w
 19672  254B  0021               	movlb	1	; select bank1
 19673  254C  00BF               	movwf	_SPI0Buffer^(0+128)
 19674  254D                     l397:	
 19675                           ;CC2500_B1.c: 258: while(RC2==1);
 19676                           
 19677  254D  0020               	movlb	0	; select bank0
 19678  254E  190E               	btfsc	14,2	;volatile
 19679  254F  2D4D               	goto	l397
 19680                           
 19681                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 19682  2550  31A6  26AD         	fcall	_CC2500_WriteByte
 19683                           
 19684                           ;CC2500_B1.c: 261: RC4=1;
 19685  2552  0020               	movlb	0	; select bank0
 19686  2553  160E               	bsf	14,4	;volatile
 19687  2554  0008               	return
 19688  2555                     __end_of_CC2500_WriteCommand:	
 19689                           
 19690                           	psect	text132
 19691  26AD                     __ptext132:	
 19692 ;; *************** function _CC2500_WriteByte *****************
 19693 ;; Defined at:
 19694 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\CC2500_B1.c"
 19695 ;; Parameters:    Size  Location     Type
 19696 ;;		None
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;  loop_a          1    1[BANK0 ] unsigned char 
 19699 ;; Return value:  Size  Location     Type
 19700 ;;		None               void
 19701 ;; Registers used:
 19702 ;;		wreg, status,2, status,0
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19712 ;;Total ram usage:        2 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; Hardware stack levels required when called:    4
 19715 ;; This function calls:
 19716 ;;		Nothing
 19717 ;; This function is called by:
 19718 ;;		_CC2500_TxData
 19719 ;;		_CC2500_RxData
 19720 ;;		_CC2500_PowerRST
 19721 ;;		_CC2500_WriteREG
 19722 ;;		_CC2500_WriteCommand
 19723 ;;		_CC2500_ReadStatus
 19724 ;;		_CC2500_ReadREG
 19725 ;; This function uses a non-reentrant model
 19726 ;;
 19727                           
 19728                           
 19729                           ;psect for function _CC2500_WriteByte
 19730  26AD                     _CC2500_WriteByte:	
 19731                           
 19732                           ;CC2500_B1.c: 195: unsigned char loop_a;
 19733                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 19734                           
 19735                           ;incstack = 0
 19736                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 19737  26AD  0020               	movlb	0	; select bank0
 19738  26AE  01A1               	clrf	CC2500_WriteByte@loop_a
 19739  26AF                     L17:	
 19740  26AF  3008               	movlw	8
 19741  26B0  0221               	subwf	CC2500_WriteByte@loop_a,w
 19742  26B1  1803               	btfsc	3,0
 19743  26B2  0008               	return
 19744                           
 19745                           ;CC2500_B1.c: 197: {
 19746                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 19747  26B3  0021               	movlb	1	; select bank1
 19748  26B4  1FBF               	btfss	_SPI0Buffer^(0+128),7
 19749  26B5  2EB9               	goto	l373
 19750                           
 19751                           ;CC2500_B1.c: 199: RC0=1;
 19752  26B6  0020               	movlb	0	; select bank0
 19753  26B7  140E               	bsf	14,0	;volatile
 19754  26B8  2EBB               	goto	l374
 19755  26B9                     l373:	
 19756                           
 19757                           ;CC2500_B1.c: 200: else
 19758                           ;CC2500_B1.c: 201: RC0=0;
 19759  26B9  0020               	movlb	0	; select bank0
 19760  26BA  100E               	bcf	14,0	;volatile
 19761  26BB                     l374:	
 19762                           
 19763                           ;CC2500_B1.c: 202: RC1=1;
 19764  26BB  148E               	bsf	14,1	;volatile
 19765                           
 19766                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 19767  26BC  1003               	clrc
 19768  26BD  0021               	movlb	1	; select bank1
 19769  26BE  0DBF               	rlf	_SPI0Buffer^(0+128),f
 19770                           
 19771                           ;CC2500_B1.c: 204: RC1=0;
 19772  26BF  0020               	movlb	0	; select bank0
 19773  26C0  108E               	bcf	14,1	;volatile
 19774  26C1  3001               	movlw	1
 19775  26C2  00A0               	movwf	??_CC2500_WriteByte
 19776  26C3  0820               	movf	??_CC2500_WriteByte,w
 19777  26C4  07A1               	addwf	CC2500_WriteByte@loop_a,f
 19778  26C5  2EAF               	goto	L17
 19779  26C6                     __end_of_CC2500_WriteByte:	
 19780                           
 19781                           	psect	text133
 19782  0913                     __ptext133:	
 19783 ;; *************** function _Buzzer_Main *****************
 19784 ;; Defined at:
 19785 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Buzzer_B1.c"
 19786 ;; Parameters:    Size  Location     Type
 19787 ;;		None
 19788 ;; Auto vars:     Size  Location     Type
 19789 ;;		None
 19790 ;; Return value:  Size  Location     Type
 19791 ;;		None               void
 19792 ;; Registers used:
 19793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19794 ;; Tracked objects:
 19795 ;;		On entry : 0/0
 19796 ;;		On exit  : 0/0
 19797 ;;		Unchanged: 0/0
 19798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19802 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19803 ;;Total ram usage:        4 bytes
 19804 ;; Hardware stack levels used:    1
 19805 ;; Hardware stack levels required when called:    4
 19806 ;; This function calls:
 19807 ;;		Nothing
 19808 ;; This function is called by:
 19809 ;;		_main
 19810 ;; This function uses a non-reentrant model
 19811 ;;
 19812                           
 19813                           
 19814                           ;psect for function _Buzzer_Main
 19815  0913                     _Buzzer_Main:	
 19816                           
 19817                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 19818                           
 19819                           ;incstack = 0
 19820                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 19821  0913  0878               	movf	_Buz,w
 19822  0914  0086               	movwf	6
 19823  0915  3001               	movlw	1	; select bank2/3
 19824  0916  0087               	movwf	7
 19825  0917  1281               	bcf	1,5
 19826  0918  0020               	movlb	0	; select bank0
 19827  0919  198D               	btfsc	13,3	;volatile
 19828  091A  1681               	bsf	1,5
 19829                           
 19830                           ;Buzzer_B1.c: 57: if(Buz->GO)
 19831  091B  0878               	movf	_Buz,w
 19832  091C  0086               	movwf	6
 19833  091D  3001               	movlw	1	; select bank2/3
 19834  091E  0087               	movwf	7
 19835  091F  1C81               	btfss	1,1
 19836  0920  0008               	return
 19837                           
 19838                           ;Buzzer_B1.c: 58: {
 19839                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 19840  0921  0878               	movf	_Buz,w
 19841  0922  3E06               	addlw	6
 19842  0923  0086               	movwf	6
 19843  0924  3001               	movlw	1	; select bank2/3
 19844  0925  0087               	movwf	7
 19845  0926  3F40               	moviw [0]fsr1
 19846  0927  0020               	movlb	0	; select bank0
 19847  0928  00A0               	movwf	??_Buzzer_Main
 19848  0929  3F41               	moviw [1]fsr1
 19849  092A  00A1               	movwf	??_Buzzer_Main+1
 19850  092B  0A78               	incf	_Buz,w
 19851  092C  0086               	movwf	6
 19852  092D  3001               	movlw	1	; select bank2/3
 19853  092E  0087               	movwf	7
 19854  092F  3F40               	moviw [0]fsr1
 19855  0930  00A2               	movwf	??_Buzzer_Main+2
 19856  0931  3F41               	moviw [1]fsr1
 19857  0932  00A3               	movwf	??_Buzzer_Main+3
 19858  0933  0821               	movf	??_Buzzer_Main+1,w
 19859  0934  0223               	subwf	??_Buzzer_Main+3,w
 19860  0935  1D03               	skipz
 19861  0936  2939               	goto	u7065
 19862  0937  0820               	movf	??_Buzzer_Main,w
 19863  0938  0222               	subwf	??_Buzzer_Main+2,w
 19864  0939                     u7065:	
 19865  0939  1C03               	skipc
 19866  093A  0008               	return
 19867                           
 19868                           ;Buzzer_B1.c: 61: {
 19869                           ;Buzzer_B1.c: 62: Buz->Time=0;
 19870  093B  0A78               	incf	_Buz,w
 19871  093C  0086               	movwf	6
 19872  093D  3001               	movlw	1	; select bank2/3
 19873  093E  0087               	movwf	7
 19874  093F  3000               	movlw	0
 19875  0940  3FC0               	movwi [0]fsr1
 19876  0941  3FC1               	movwi [1]fsr1
 19877                           
 19878                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 19879  0942  0878               	movf	_Buz,w
 19880  0943  0086               	movwf	6
 19881  0944  3001               	movlw	1	; select bank2/3
 19882  0945  0087               	movwf	7
 19883  0946  1A81               	btfsc	1,5
 19884  0947  29AD               	goto	l7944
 19885                           
 19886                           ;Buzzer_B1.c: 64: {
 19887                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 19888  0948  0878               	movf	_Buz,w
 19889  0949  3E03               	addlw	3
 19890  094A  0086               	movwf	6
 19891  094B  3001               	movlw	1	; select bank2/3
 19892  094C  0087               	movwf	7
 19893  094D  0881               	movf	1,f
 19894  094E  1D03               	skipz
 19895  094F  29A6               	goto	l7940
 19896                           
 19897                           ;Buzzer_B1.c: 66: {
 19898                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 19899  0950  0878               	movf	_Buz,w
 19900  0951  0086               	movwf	6
 19901  0952  3001               	movlw	1	; select bank2/3
 19902  0953  0087               	movwf	7
 19903  0954  1D81               	btfss	1,3
 19904  0955  2978               	goto	l7932
 19905                           
 19906                           ;Buzzer_B1.c: 68: {
 19907                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 19908  0956  0878               	movf	_Buz,w
 19909  0957  0086               	movwf	6
 19910  0958  3001               	movlw	1	; select bank2/3
 19911  0959  0087               	movwf	7
 19912  095A  1181               	bcf	1,3
 19913                           
 19914                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 19915  095B  0878               	movf	_Buz,w
 19916  095C  3E04               	addlw	4
 19917  095D  0086               	movwf	6
 19918  095E  3001               	movlw	1	; select bank2/3
 19919  095F  0087               	movwf	7
 19920  0960  0801               	movf	1,w
 19921  0961  00A0               	movwf	??_Buzzer_Main
 19922  0962  0878               	movf	_Buz,w
 19923  0963  3E03               	addlw	3
 19924  0964  0086               	movwf	6
 19925  0965  3001               	movlw	1	; select bank2/3
 19926  0966  0087               	movwf	7
 19927  0967  0820               	movf	??_Buzzer_Main,w
 19928  0968  0081               	movwf	1
 19929                           
 19930                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 19931  0969  0878               	movf	_Buz,w
 19932  096A  3E08               	addlw	8
 19933  096B  0086               	movwf	6
 19934  096C  3001               	movlw	1	; select bank2/3
 19935  096D  0087               	movwf	7
 19936  096E  0878               	movf	_Buz,w
 19937  096F  3E06               	addlw	6
 19938  0970  0084               	movwf	4
 19939  0971  3001               	movlw	1	; select bank2/3
 19940  0972  0085               	movwf	5
 19941  0973  3F40               	moviw [0]fsr1
 19942  0974  3F80               	movwi [0]fsr0
 19943  0975  3F41               	moviw [1]fsr1
 19944  0976  3F81               	movwi [1]fsr0
 19945                           
 19946                           ;Buzzer_B1.c: 72: }
 19947  0977  0008               	return
 19948  0978                     l7932:	
 19949                           
 19950                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 19951  0978  0878               	movf	_Buz,w
 19952  0979  0086               	movwf	6
 19953  097A  3001               	movlw	1	; select bank2/3
 19954  097B  0087               	movwf	7
 19955  097C  1E01               	btfss	1,4
 19956  097D  29A0               	goto	l7938
 19957                           
 19958                           ;Buzzer_B1.c: 74: {
 19959                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 19960  097E  0878               	movf	_Buz,w
 19961  097F  0086               	movwf	6
 19962  0980  3001               	movlw	1	; select bank2/3
 19963  0981  0087               	movwf	7
 19964  0982  1201               	bcf	1,4
 19965                           
 19966                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 19967  0983  0878               	movf	_Buz,w
 19968  0984  3E05               	addlw	5
 19969  0985  0086               	movwf	6
 19970  0986  3001               	movlw	1	; select bank2/3
 19971  0987  0087               	movwf	7
 19972  0988  0801               	movf	1,w
 19973  0989  00A0               	movwf	??_Buzzer_Main
 19974  098A  0878               	movf	_Buz,w
 19975  098B  3E03               	addlw	3
 19976  098C  0086               	movwf	6
 19977  098D  3001               	movlw	1	; select bank2/3
 19978  098E  0087               	movwf	7
 19979  098F  0820               	movf	??_Buzzer_Main,w
 19980  0990  0081               	movwf	1
 19981                           
 19982                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 19983  0991  0878               	movf	_Buz,w
 19984  0992  3E0A               	addlw	10
 19985  0993  0086               	movwf	6
 19986  0994  3001               	movlw	1	; select bank2/3
 19987  0995  0087               	movwf	7
 19988  0996  0878               	movf	_Buz,w
 19989  0997  3E06               	addlw	6
 19990  0998  0084               	movwf	4
 19991  0999  3001               	movlw	1	; select bank2/3
 19992  099A  0085               	movwf	5
 19993  099B  3F40               	moviw [0]fsr1
 19994  099C  3F80               	movwi [0]fsr0
 19995  099D  3F41               	moviw [1]fsr1
 19996  099E  3F81               	movwi [1]fsr0
 19997                           
 19998                           ;Buzzer_B1.c: 78: }
 19999  099F  0008               	return
 20000  09A0                     l7938:	
 20001                           
 20002                           ;Buzzer_B1.c: 79: else
 20003                           ;Buzzer_B1.c: 80: {
 20004                           ;Buzzer_B1.c: 81: Buz->GO=0;
 20005  09A0  0878               	movf	_Buz,w
 20006  09A1  0086               	movwf	6
 20007  09A2  3001               	movlw	1	; select bank2/3
 20008  09A3  0087               	movwf	7
 20009  09A4  1081               	bcf	1,1
 20010                           
 20011                           ;Buzzer_B1.c: 82: }
 20012                           ;Buzzer_B1.c: 83: }
 20013  09A5  0008               	return
 20014  09A6                     l7940:	
 20015                           
 20016                           ;Buzzer_B1.c: 84: else
 20017                           ;Buzzer_B1.c: 85: {
 20018                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 20019  09A6  0878               	movf	_Buz,w
 20020  09A7  0086               	movwf	6
 20021  09A8  3001               	movlw	1	; select bank2/3
 20022  09A9  0087               	movwf	7
 20023  09AA  1681               	bsf	1,5
 20024                           
 20025                           ;Buzzer_B1.c: 88: RB3=1;
 20026  09AB  158D               	bsf	13,3	;volatile
 20027                           
 20028                           ;Buzzer_B1.c: 89: }
 20029                           ;Buzzer_B1.c: 90: }
 20030  09AC  0008               	return
 20031  09AD                     l7944:	
 20032                           
 20033                           ;Buzzer_B1.c: 91: else
 20034                           ;Buzzer_B1.c: 92: {
 20035                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 20036  09AD  0878               	movf	_Buz,w
 20037  09AE  0086               	movwf	6
 20038  09AF  3001               	movlw	1	; select bank2/3
 20039  09B0  0087               	movwf	7
 20040  09B1  1281               	bcf	1,5
 20041                           
 20042                           ;Buzzer_B1.c: 95: RB3=0;
 20043  09B2  118D               	bcf	13,3	;volatile
 20044                           
 20045                           ;Buzzer_B1.c: 97: Buz->Count--;
 20046  09B3  0878               	movf	_Buz,w
 20047  09B4  3E03               	addlw	3
 20048  09B5  0086               	movwf	6
 20049  09B6  3001               	movlw	1	; select bank2/3
 20050  09B7  0087               	movwf	7
 20051  09B8  3001               	movlw	1
 20052  09B9  0281               	subwf	1,f
 20053  09BA  0008               	return
 20054  09BB                     __end_of_Buzzer_Main:	
 20055                           
 20056                           	psect	text134
 20057  242C                     __ptext134:	
 20058 ;; *************** function _Buzzer_Initialization *****************
 20059 ;; Defined at:
 20060 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\Buzzer_B1.c"
 20061 ;; Parameters:    Size  Location     Type
 20062 ;;		None
 20063 ;; Auto vars:     Size  Location     Type
 20064 ;;		None
 20065 ;; Return value:  Size  Location     Type
 20066 ;;		None               void
 20067 ;; Registers used:
 20068 ;;		wreg, fsr1l, fsr1h
 20069 ;; Tracked objects:
 20070 ;;		On entry : 0/0
 20071 ;;		On exit  : 0/0
 20072 ;;		Unchanged: 0/0
 20073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20076 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20077 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20078 ;;Total ram usage:        1 bytes
 20079 ;; Hardware stack levels used:    1
 20080 ;; Hardware stack levels required when called:    4
 20081 ;; This function calls:
 20082 ;;		Nothing
 20083 ;; This function is called by:
 20084 ;;		_main
 20085 ;; This function uses a non-reentrant model
 20086 ;;
 20087                           
 20088                           
 20089                           ;psect for function _Buzzer_Initialization
 20090  242C                     _Buzzer_Initialization:	
 20091                           
 20092                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 20093                           
 20094                           ;incstack = 0
 20095                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 20096  242C  3048               	movlw	_Buz1& (0+255)
 20097  242D  0020               	movlb	0	; select bank0
 20098  242E  00A0               	movwf	??_Buzzer_Initialization
 20099  242F  0820               	movf	??_Buzzer_Initialization,w
 20100  2430  00F8               	movwf	_Buz
 20101                           
 20102                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 20103  2431  0878               	movf	_Buz,w
 20104  2432  0086               	movwf	6
 20105  2433  3001               	movlw	1	; select bank2/3
 20106  2434  0087               	movwf	7
 20107  2435  1401               	bsf	1,0
 20108  2436  0008               	return
 20109  2437                     __end_of_Buzzer_Initialization:	
 20110                           
 20111                           	psect	intentry
 20112  0004                     __pintentry:	
 20113 ;; *************** function _ISR *****************
 20114 ;; Defined at:
 20115 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\MCU_16f1518_B1.c"
 20116 ;; Parameters:    Size  Location     Type
 20117 ;;		None
 20118 ;; Auto vars:     Size  Location     Type
 20119 ;;		None
 20120 ;; Return value:  Size  Location     Type
 20121 ;;		None               void
 20122 ;; Registers used:
 20123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20124 ;; Tracked objects:
 20125 ;;		On entry : 0/0
 20126 ;;		On exit  : 0/0
 20127 ;;		Unchanged: 0/0
 20128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20133 ;;Total ram usage:        1 bytes
 20134 ;; Hardware stack levels used:    1
 20135 ;; Hardware stack levels required when called:    3
 20136 ;; This function calls:
 20137 ;;		_INT_ISR
 20138 ;;		_IOC_ISR
 20139 ;;		_TMR0_ISR
 20140 ;; This function is called by:
 20141 ;;		Interrupt level 1
 20142 ;; This function uses a non-reentrant model
 20143 ;;
 20144                           
 20145  0004                     _ISR:	
 20146                           
 20147                           ;incstack = 0
 20148                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20149  0004  147E               	bsf	126,0	;set compiler interrupt flag
 20150  0005  3180               	pagesel	$
 20151  0006  0020               	movlb	0	; select bank0
 20152  0007  087F               	movf	127,w
 20153  0008  00F7               	movwf	??_ISR
 20154                           
 20155                           ;MCU_16f1518_B1.c: 58: IOC_ISR();
 20156  0009  3198  20E6  3180   	fcall	_IOC_ISR
 20157                           
 20158                           ;MCU_16f1518_B1.c: 60: TMR0_ISR();
 20159  000C  3180  2059  3180   	fcall	_TMR0_ISR
 20160                           
 20161                           ;MCU_16f1518_B1.c: 62: ;;
 20162                           ;MCU_16f1518_B1.c: 66: INT_ISR();
 20163  000F  31A4  249B         	fcall	_INT_ISR
 20164  0011  0877               	movf	??_ISR,w
 20165  0012  0020               	movlb	0	; select bank0
 20166  0013  00FF               	movwf	127
 20167  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 20168  0015  0009               	retfie
 20169  0016                     __end_of_ISR:	
 20170                           
 20171                           	psect	text136
 20172  0059                     __ptext136:	
 20173 ;; *************** function _TMR0_ISR *****************
 20174 ;; Defined at:
 20175 ;;		line 82 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\MCU_16f1518_B1.c"
 20176 ;; Parameters:    Size  Location     Type
 20177 ;;		None
 20178 ;; Auto vars:     Size  Location     Type
 20179 ;;		None
 20180 ;; Return value:  Size  Location     Type
 20181 ;;		None               void
 20182 ;; Registers used:
 20183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20184 ;; Tracked objects:
 20185 ;;		On entry : 0/0
 20186 ;;		On exit  : 0/0
 20187 ;;		Unchanged: 0/0
 20188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20193 ;;Total ram usage:        4 bytes
 20194 ;; Hardware stack levels used:    1
 20195 ;; Hardware stack levels required when called:    1
 20196 ;; This function calls:
 20197 ;;		i1_setLoad_StatusOff
 20198 ;; This function is called by:
 20199 ;;		_ISR
 20200 ;; This function uses a non-reentrant model
 20201 ;;
 20202                           
 20203                           
 20204                           ;psect for function _TMR0_ISR
 20205  0059                     _TMR0_ISR:	
 20206                           
 20207                           ;MCU_16f1518_B1.c: 84: if(TMR0IE && TMR0IF)
 20208                           
 20209                           ;incstack = 0
 20210                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20211  0059  1E8B               	btfss	11,5	;volatile
 20212  005A  0008               	return
 20213  005B  1D0B               	btfss	11,2	;volatile
 20214  005C  0008               	return
 20215                           
 20216                           ;MCU_16f1518_B1.c: 85: {
 20217                           ;MCU_16f1518_B1.c: 86: TMR0=(256-90);
 20218  005D  30A6               	movlw	166
 20219  005E  0020               	movlb	0	; select bank0
 20220  005F  0095               	movwf	21	;volatile
 20221                           
 20222                           ;MCU_16f1518_B1.c: 87: TMR0IF=0;
 20223  0060  110B               	bcf	11,2	;volatile
 20224                           
 20225                           ;MCU_16f1518_B1.c: 100: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLight
      +                          s11->Count >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count
      +                          =0; DimmerLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RA7=1
      +                          ; ;; } } }
 20226  0061  0879               	movf	_DimmerLights11,w
 20227  0062  0086               	movwf	6
 20228  0063  3001               	movlw	1	; select bank2/3
 20229  0064  0087               	movwf	7
 20230  0065  1C01               	btfss	1,0
 20231  0066  28B1               	goto	i1l8328
 20232  0067  3001               	movlw	1
 20233  0068  00F3               	movwf	??_TMR0_ISR
 20234  0069  0879               	movf	_DimmerLights11,w
 20235  006A  3E03               	addlw	3
 20236  006B  0086               	movwf	6
 20237  006C  3001               	movlw	1	; select bank2/3
 20238  006D  0087               	movwf	7
 20239  006E  0873               	movf	??_TMR0_ISR,w
 20240  006F  0781               	addwf	1,f
 20241  0070  0021               	movlb	1	; select bank1
 20242  0071  0839               	movf	_Dimmer^(0+128),w
 20243  0072  3E02               	addlw	2
 20244  0073  0086               	movwf	6
 20245  0074  0187               	clrf	7
 20246  0075  0801               	movf	1,w
 20247  0076  00F3               	movwf	??_TMR0_ISR
 20248  0077  01F4               	clrf	??_TMR0_ISR+1
 20249  0078  09F3               	comf	??_TMR0_ISR,f
 20250  0079  09F4               	comf	??_TMR0_ISR+1,f
 20251  007A  0AF3               	incf	??_TMR0_ISR,f
 20252  007B  1903               	skipnz
 20253  007C  0AF4               	incf	??_TMR0_ISR+1,f
 20254  007D  0879               	movf	_DimmerLights11,w
 20255  007E  3E04               	addlw	4
 20256  007F  0086               	movwf	6
 20257  0080  3001               	movlw	1	; select bank2/3
 20258  0081  0087               	movwf	7
 20259  0082  0801               	movf	1,w
 20260  0083  0773               	addwf	??_TMR0_ISR,w
 20261  0084  00F5               	movwf	??_TMR0_ISR+2
 20262  0085  0874               	movf	??_TMR0_ISR+1,w
 20263  0086  1803               	skipnc
 20264  0087  0A74               	incf	??_TMR0_ISR+1,w
 20265  0088  00F6               	movwf	??_TMR0_ISR+3
 20266  0089  0879               	movf	_DimmerLights11,w
 20267  008A  3E03               	addlw	3
 20268  008B  0086               	movwf	6
 20269  008C  3001               	movlw	1	; select bank2/3
 20270  008D  0087               	movwf	7
 20271  008E  0876               	movf	??_TMR0_ISR+3,w
 20272  008F  3A80               	xorlw	128
 20273  0090  3C80               	sublw	128
 20274  0091  1D03               	skipz
 20275  0092  2895               	goto	u764_25
 20276  0093  0875               	movf	??_TMR0_ISR+2,w
 20277  0094  0201               	subwf	1,w
 20278  0095                     u764_25:	
 20279  0095  1C03               	skipc
 20280  0096  29EB               	goto	i1l8394
 20281  0097  0879               	movf	_DimmerLights11,w
 20282  0098  3E03               	addlw	3
 20283  0099  0086               	movwf	6
 20284  009A  3001               	movlw	1	; select bank2/3
 20285  009B  0087               	movwf	7
 20286  009C  0181               	clrf	1
 20287  009D  0879               	movf	_DimmerLights11,w
 20288  009E  0086               	movwf	6
 20289  009F  3001               	movlw	1	; select bank2/3
 20290  00A0  0087               	movwf	7
 20291  00A1  1001               	bcf	1,0
 20292  00A2  0879               	movf	_DimmerLights11,w
 20293  00A3  3E07               	addlw	7
 20294  00A4  0086               	movwf	6
 20295  00A5  3001               	movlw	1	; select bank2/3
 20296  00A6  0087               	movwf	7
 20297  00A7  1401               	bsf	1,0
 20298  00A8  0879               	movf	_DimmerLights11,w
 20299  00A9  0086               	movwf	6
 20300  00AA  3001               	movlw	1	; select bank2/3
 20301  00AB  0087               	movwf	7
 20302  00AC  1F01               	btfss	1,6
 20303  00AD  29EB               	goto	i1l8394
 20304  00AE  0020               	movlb	0	; select bank0
 20305  00AF  178C               	bsf	12,7	;volatile
 20306  00B0  29EB               	goto	i1l8394
 20307  00B1                     i1l8328:	
 20308  00B1  0879               	movf	_DimmerLights11,w
 20309  00B2  3E07               	addlw	7
 20310  00B3  0086               	movwf	6
 20311  00B4  3001               	movlw	1	; select bank2/3
 20312  00B5  0087               	movwf	7
 20313  00B6  1C01               	btfss	1,0
 20314  00B7  29B6               	goto	i1l8386
 20315  00B8  0879               	movf	_DimmerLights11,w
 20316  00B9  3E07               	addlw	7
 20317  00BA  0086               	movwf	6
 20318  00BB  3001               	movlw	1	; select bank2/3
 20319  00BC  0087               	movwf	7
 20320  00BD  1001               	bcf	1,0
 20321  00BE  0879               	movf	_DimmerLights11,w
 20322  00BF  0086               	movwf	6
 20323  00C0  3001               	movlw	1	; select bank2/3
 20324  00C1  0087               	movwf	7
 20325  00C2  1C81               	btfss	1,1
 20326  00C3  29B6               	goto	i1l8386
 20327  00C4  3001               	movlw	1
 20328  00C5  00F3               	movwf	??_TMR0_ISR
 20329  00C6  0A79               	incf	_DimmerLights11,w
 20330  00C7  0086               	movwf	6
 20331  00C8  3001               	movlw	1	; select bank2/3
 20332  00C9  0087               	movwf	7
 20333  00CA  0873               	movf	??_TMR0_ISR,w
 20334  00CB  0781               	addwf	1,f
 20335  00CC  0A79               	incf	_DimmerLights11,w
 20336  00CD  0086               	movwf	6
 20337  00CE  3001               	movlw	1	; select bank2/3
 20338  00CF  0087               	movwf	7
 20339  00D0  0879               	movf	_DimmerLights11,w
 20340  00D1  3E02               	addlw	2
 20341  00D2  0084               	movwf	4
 20342  00D3  3001               	movlw	1	; select bank2/3
 20343  00D4  0085               	movwf	5
 20344  00D5  0800               	movf	0,w
 20345  00D6  0201               	subwf	1,w
 20346  00D7  1C03               	skipc
 20347  00D8  29B6               	goto	i1l8386
 20348  00D9  0A79               	incf	_DimmerLights11,w
 20349  00DA  0086               	movwf	6
 20350  00DB  3001               	movlw	1	; select bank2/3
 20351  00DC  0087               	movwf	7
 20352  00DD  0181               	clrf	1
 20353  00DE  0879               	movf	_DimmerLights11,w
 20354  00DF  0086               	movwf	6
 20355  00E0  3001               	movlw	1	; select bank2/3
 20356  00E1  0087               	movwf	7
 20357  00E2  1D81               	btfss	1,3
 20358  00E3  291A               	goto	i1l8354
 20359  00E4  0879               	movf	_DimmerLights11,w
 20360  00E5  0086               	movwf	6
 20361  00E6  3001               	movlw	1	; select bank2/3
 20362  00E7  0087               	movwf	7
 20363  00E8  1A01               	btfsc	1,4
 20364  00E9  2901               	goto	i1l8348
 20365  00EA  0879               	movf	_DimmerLights11,w
 20366  00EB  3E04               	addlw	4
 20367  00EC  0086               	movwf	6
 20368  00ED  3001               	movlw	1	; select bank2/3
 20369  00EE  0087               	movwf	7
 20370  00EF  3044               	movlw	68
 20371  00F0  0201               	subwf	1,w
 20372  00F1  1C03               	skipc
 20373  00F2  28FB               	goto	i1l8346
 20374  00F3  0879               	movf	_DimmerLights11,w
 20375  00F4  3E04               	addlw	4
 20376  00F5  0086               	movwf	6
 20377  00F6  3001               	movlw	1	; select bank2/3
 20378  00F7  0087               	movwf	7
 20379  00F8  3001               	movlw	1
 20380  00F9  0281               	subwf	1,f
 20381  00FA  29B6               	goto	i1l8386
 20382  00FB                     i1l8346:	
 20383  00FB  0879               	movf	_DimmerLights11,w
 20384  00FC  0086               	movwf	6
 20385  00FD  3001               	movlw	1	; select bank2/3
 20386  00FE  0087               	movwf	7
 20387  00FF  1601               	bsf	1,4
 20388  0100  29B6               	goto	i1l8386
 20389  0101                     i1l8348:	
 20390  0101  0879               	movf	_DimmerLights11,w
 20391  0102  3E04               	addlw	4
 20392  0103  0086               	movwf	6
 20393  0104  3001               	movlw	1	; select bank2/3
 20394  0105  0087               	movwf	7
 20395  0106  3078               	movlw	120
 20396  0107  0201               	subwf	1,w
 20397  0108  1803               	skipnc
 20398  0109  2914               	goto	i1l8352
 20399  010A  3001               	movlw	1
 20400  010B  00F3               	movwf	??_TMR0_ISR
 20401  010C  0879               	movf	_DimmerLights11,w
 20402  010D  3E04               	addlw	4
 20403  010E  0086               	movwf	6
 20404  010F  3001               	movlw	1	; select bank2/3
 20405  0110  0087               	movwf	7
 20406  0111  0873               	movf	??_TMR0_ISR,w
 20407  0112  0781               	addwf	1,f
 20408  0113  29B6               	goto	i1l8386
 20409  0114                     i1l8352:	
 20410  0114  0879               	movf	_DimmerLights11,w
 20411  0115  0086               	movwf	6
 20412  0116  3001               	movlw	1	; select bank2/3
 20413  0117  0087               	movwf	7
 20414  0118  1201               	bcf	1,4
 20415  0119  29B6               	goto	i1l8386
 20416  011A                     i1l8354:	
 20417  011A  0879               	movf	_DimmerLights11,w
 20418  011B  0086               	movwf	6
 20419  011C  3001               	movlw	1	; select bank2/3
 20420  011D  0087               	movwf	7
 20421  011E  1D01               	btfss	1,2
 20422  011F  2961               	goto	i1l8368
 20423  0120  0879               	movf	_DimmerLights11,w
 20424  0121  3E05               	addlw	5
 20425  0122  0086               	movwf	6
 20426  0123  3001               	movlw	1	; select bank2/3
 20427  0124  0087               	movwf	7
 20428  0125  0879               	movf	_DimmerLights11,w
 20429  0126  3E04               	addlw	4
 20430  0127  0084               	movwf	4
 20431  0128  3001               	movlw	1	; select bank2/3
 20432  0129  0085               	movwf	5
 20433  012A  0800               	movf	0,w
 20434  012B  0201               	subwf	1,w
 20435  012C  1803               	skipnc
 20436  012D  2936               	goto	i1l8360
 20437  012E  0879               	movf	_DimmerLights11,w
 20438  012F  3E04               	addlw	4
 20439  0130  0086               	movwf	6
 20440  0131  3001               	movlw	1	; select bank2/3
 20441  0132  0087               	movwf	7
 20442  0133  3001               	movlw	1
 20443  0134  0281               	subwf	1,f
 20444  0135  294D               	goto	i1l8364
 20445  0136                     i1l8360:	
 20446  0136  0879               	movf	_DimmerLights11,w
 20447  0137  3E04               	addlw	4
 20448  0138  0086               	movwf	6
 20449  0139  3001               	movlw	1	; select bank2/3
 20450  013A  0087               	movwf	7
 20451  013B  0879               	movf	_DimmerLights11,w
 20452  013C  3E05               	addlw	5
 20453  013D  0084               	movwf	4
 20454  013E  3001               	movlw	1	; select bank2/3
 20455  013F  0085               	movwf	5
 20456  0140  0800               	movf	0,w
 20457  0141  0201               	subwf	1,w
 20458  0142  1803               	skipnc
 20459  0143  294D               	goto	i1l8364
 20460  0144  3001               	movlw	1
 20461  0145  00F3               	movwf	??_TMR0_ISR
 20462  0146  0879               	movf	_DimmerLights11,w
 20463  0147  3E04               	addlw	4
 20464  0148  0086               	movwf	6
 20465  0149  3001               	movlw	1	; select bank2/3
 20466  014A  0087               	movwf	7
 20467  014B  0873               	movf	??_TMR0_ISR,w
 20468  014C  0781               	addwf	1,f
 20469  014D                     i1l8364:	
 20470  014D  0879               	movf	_DimmerLights11,w
 20471  014E  3E05               	addlw	5
 20472  014F  0086               	movwf	6
 20473  0150  3001               	movlw	1	; select bank2/3
 20474  0151  0087               	movwf	7
 20475  0152  0879               	movf	_DimmerLights11,w
 20476  0153  3E04               	addlw	4
 20477  0154  0084               	movwf	4
 20478  0155  3001               	movlw	1	; select bank2/3
 20479  0156  0085               	movwf	5
 20480  0157  0800               	movf	0,w
 20481  0158  0601               	xorwf	1,w
 20482  0159  1D03               	skipz
 20483  015A  29B6               	goto	i1l8386
 20484  015B  0879               	movf	_DimmerLights11,w
 20485  015C  0086               	movwf	6
 20486  015D  3001               	movlw	1	; select bank2/3
 20487  015E  0087               	movwf	7
 20488  015F  1101               	bcf	1,2
 20489  0160  297C               	goto	i1l8374
 20490  0161                     i1l8368:	
 20491  0161  0879               	movf	_DimmerLights11,w
 20492  0162  0086               	movwf	6
 20493  0163  3001               	movlw	1	; select bank2/3
 20494  0164  0087               	movwf	7
 20495  0165  1E81               	btfss	1,5
 20496  0166  2982               	goto	i1l8376
 20497  0167  0879               	movf	_DimmerLights11,w
 20498  0168  3E04               	addlw	4
 20499  0169  0086               	movwf	6
 20500  016A  3001               	movlw	1	; select bank2/3
 20501  016B  0087               	movwf	7
 20502  016C  3001               	movlw	1
 20503  016D  0281               	subwf	1,f
 20504  016E  0879               	movf	_DimmerLights11,w
 20505  016F  3E05               	addlw	5
 20506  0170  0086               	movwf	6
 20507  0171  3001               	movlw	1	; select bank2/3
 20508  0172  0087               	movwf	7
 20509  0173  0879               	movf	_DimmerLights11,w
 20510  0174  3E04               	addlw	4
 20511  0175  0084               	movwf	4
 20512  0176  3001               	movlw	1	; select bank2/3
 20513  0177  0085               	movwf	5
 20514  0178  0800               	movf	0,w
 20515  0179  0201               	subwf	1,w
 20516  017A  1C03               	skipc
 20517  017B  29B6               	goto	i1l8386
 20518  017C                     i1l8374:	
 20519  017C  0879               	movf	_DimmerLights11,w
 20520  017D  0086               	movwf	6
 20521  017E  3001               	movlw	1	; select bank2/3
 20522  017F  0087               	movwf	7
 20523  0180  1081               	bcf	1,1
 20524  0181  29B6               	goto	i1l8386
 20525  0182                     i1l8376:	
 20526  0182  3001               	movlw	1
 20527  0183  00F3               	movwf	??_TMR0_ISR
 20528  0184  0879               	movf	_DimmerLights11,w
 20529  0185  3E04               	addlw	4
 20530  0186  0086               	movwf	6
 20531  0187  3001               	movlw	1	; select bank2/3
 20532  0188  0087               	movwf	7
 20533  0189  0873               	movf	??_TMR0_ISR,w
 20534  018A  0781               	addwf	1,f
 20535  018B  0879               	movf	_DimmerLights11,w
 20536  018C  3E04               	addlw	4
 20537  018D  0086               	movwf	6
 20538  018E  3001               	movlw	1	; select bank2/3
 20539  018F  0087               	movwf	7
 20540  0190  0879               	movf	_DimmerLights11,w
 20541  0191  3E06               	addlw	6
 20542  0192  0084               	movwf	4
 20543  0193  3001               	movlw	1	; select bank2/3
 20544  0194  0085               	movwf	5
 20545  0195  0800               	movf	0,w
 20546  0196  0201               	subwf	1,w
 20547  0197  1C03               	skipc
 20548  0198  29B6               	goto	i1l8386
 20549  0199  0879               	movf	_DimmerLights11,w
 20550  019A  0086               	movwf	6
 20551  019B  3001               	movlw	1	; select bank2/3
 20552  019C  0087               	movwf	7
 20553  019D  1081               	bcf	1,1
 20554  019E  0879               	movf	_DimmerLights11,w
 20555  019F  0086               	movwf	6
 20556  01A0  3001               	movlw	1	; select bank2/3
 20557  01A1  0087               	movwf	7
 20558  01A2  1301               	bcf	1,6
 20559  01A3  0879               	movf	_DimmerLights11,w
 20560  01A4  3E0C               	addlw	12
 20561  01A5  0086               	movwf	6
 20562  01A6  3001               	movlw	1	; select bank2/3
 20563  01A7  0087               	movwf	7
 20564  01A8  1401               	bsf	1,0
 20565  01A9  0021               	movlb	1	; select bank1
 20566  01AA  0839               	movf	_Dimmer^(0+128),w
 20567  01AB  0086               	movwf	6
 20568  01AC  0187               	clrf	7
 20569  01AD  1401               	bsf	1,0
 20570  01AE  0020               	movlb	0	; select bank0
 20571  01AF  118C               	bcf	12,3	;volatile
 20572  01B0  01F1               	clrf	i1setLoad_StatusOff@command
 20573  01B1  0AF1               	incf	i1setLoad_StatusOff@command,f
 20574  01B2  3001               	movlw	1
 20575  01B3  319A  2288  3180   	fcall	i1_setLoad_StatusOff
 20576  01B6                     i1l8386:	
 20577  01B6  0020               	movlb	0	; select bank0
 20578  01B7  1F8C               	btfss	12,7	;volatile
 20579  01B8  29EB               	goto	i1l8394
 20580  01B9  3001               	movlw	1
 20581  01BA  00F3               	movwf	??_TMR0_ISR
 20582  01BB  0879               	movf	_DimmerLights11,w
 20583  01BC  3E08               	addlw	8
 20584  01BD  0086               	movwf	6
 20585  01BE  3001               	movlw	1	; select bank2/3
 20586  01BF  0087               	movwf	7
 20587  01C0  0873               	movf	??_TMR0_ISR,w
 20588  01C1  0781               	addwf	1,f
 20589  01C2  0879               	movf	_DimmerLights11,w
 20590  01C3  3E04               	addlw	4
 20591  01C4  0086               	movwf	6
 20592  01C5  3001               	movlw	1	; select bank2/3
 20593  01C6  0087               	movwf	7
 20594  01C7  0801               	movf	1,w
 20595  01C8  00F3               	movwf	??_TMR0_ISR
 20596  01C9  01F4               	clrf	??_TMR0_ISR+1
 20597  01CA  09F3               	comf	??_TMR0_ISR,f
 20598  01CB  09F4               	comf	??_TMR0_ISR+1,f
 20599  01CC  0AF3               	incf	??_TMR0_ISR,f
 20600  01CD  1903               	skipnz
 20601  01CE  0AF4               	incf	??_TMR0_ISR+1,f
 20602  01CF  0873               	movf	??_TMR0_ISR,w
 20603  01D0  3E78               	addlw	120
 20604  01D1  00F5               	movwf	??_TMR0_ISR+2
 20605  01D2  3000               	movlw	0
 20606  01D3  3D74               	addwfc	??_TMR0_ISR+1,w
 20607  01D4  00F6               	movwf	??_TMR0_ISR+3
 20608  01D5  0879               	movf	_DimmerLights11,w
 20609  01D6  3E08               	addlw	8
 20610  01D7  0086               	movwf	6
 20611  01D8  3001               	movlw	1	; select bank2/3
 20612  01D9  0087               	movwf	7
 20613  01DA  0876               	movf	??_TMR0_ISR+3,w
 20614  01DB  3A80               	xorlw	128
 20615  01DC  3C80               	sublw	128
 20616  01DD  1D03               	skipz
 20617  01DE  29E1               	goto	u781_25
 20618  01DF  0875               	movf	??_TMR0_ISR+2,w
 20619  01E0  0201               	subwf	1,w
 20620  01E1                     u781_25:	
 20621  01E1  1C03               	skipc
 20622  01E2  29EB               	goto	i1l8394
 20623  01E3  0879               	movf	_DimmerLights11,w
 20624  01E4  3E08               	addlw	8
 20625  01E5  0086               	movwf	6
 20626  01E6  3001               	movlw	1	; select bank2/3
 20627  01E7  0087               	movwf	7
 20628  01E8  0181               	clrf	1
 20629  01E9  0020               	movlb	0	; select bank0
 20630  01EA  138C               	bcf	12,7	;volatile
 20631  01EB                     i1l8394:	
 20632                           
 20633                           ;MCU_16f1518_B1.c: 104: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLight
      +                          s22->Count >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count
      +                          =0; DimmerLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RB4=1
      +                          ; } } } el
 20634  01EB  087A               	movf	_DimmerLights22,w
 20635  01EC  0086               	movwf	6
 20636  01ED  3001               	movlw	1	; select bank2/3
 20637  01EE  0087               	movwf	7
 20638  01EF  1C01               	btfss	1,0
 20639  01F0  2A3B               	goto	i1l8408
 20640  01F1  3001               	movlw	1
 20641  01F2  00F3               	movwf	??_TMR0_ISR
 20642  01F3  087A               	movf	_DimmerLights22,w
 20643  01F4  3E03               	addlw	3
 20644  01F5  0086               	movwf	6
 20645  01F6  3001               	movlw	1	; select bank2/3
 20646  01F7  0087               	movwf	7
 20647  01F8  0873               	movf	??_TMR0_ISR,w
 20648  01F9  0781               	addwf	1,f
 20649  01FA  0021               	movlb	1	; select bank1
 20650  01FB  0839               	movf	_Dimmer^(0+128),w
 20651  01FC  3E02               	addlw	2
 20652  01FD  0086               	movwf	6
 20653  01FE  0187               	clrf	7
 20654  01FF  0801               	movf	1,w
 20655  0200  00F3               	movwf	??_TMR0_ISR
 20656  0201  01F4               	clrf	??_TMR0_ISR+1
 20657  0202  09F3               	comf	??_TMR0_ISR,f
 20658  0203  09F4               	comf	??_TMR0_ISR+1,f
 20659  0204  0AF3               	incf	??_TMR0_ISR,f
 20660  0205  1903               	skipnz
 20661  0206  0AF4               	incf	??_TMR0_ISR+1,f
 20662  0207  087A               	movf	_DimmerLights22,w
 20663  0208  3E04               	addlw	4
 20664  0209  0086               	movwf	6
 20665  020A  3001               	movlw	1	; select bank2/3
 20666  020B  0087               	movwf	7
 20667  020C  0801               	movf	1,w
 20668  020D  0773               	addwf	??_TMR0_ISR,w
 20669  020E  00F5               	movwf	??_TMR0_ISR+2
 20670  020F  0874               	movf	??_TMR0_ISR+1,w
 20671  0210  1803               	skipnc
 20672  0211  0A74               	incf	??_TMR0_ISR+1,w
 20673  0212  00F6               	movwf	??_TMR0_ISR+3
 20674  0213  087A               	movf	_DimmerLights22,w
 20675  0214  3E03               	addlw	3
 20676  0215  0086               	movwf	6
 20677  0216  3001               	movlw	1	; select bank2/3
 20678  0217  0087               	movwf	7
 20679  0218  0876               	movf	??_TMR0_ISR+3,w
 20680  0219  3A80               	xorlw	128
 20681  021A  3C80               	sublw	128
 20682  021B  1D03               	skipz
 20683  021C  2A1F               	goto	u783_25
 20684  021D  0875               	movf	??_TMR0_ISR+2,w
 20685  021E  0201               	subwf	1,w
 20686  021F                     u783_25:	
 20687  021F  1C03               	skipc
 20688  0220  2B75               	goto	i1l8474
 20689  0221  087A               	movf	_DimmerLights22,w
 20690  0222  3E03               	addlw	3
 20691  0223  0086               	movwf	6
 20692  0224  3001               	movlw	1	; select bank2/3
 20693  0225  0087               	movwf	7
 20694  0226  0181               	clrf	1
 20695  0227  087A               	movf	_DimmerLights22,w
 20696  0228  0086               	movwf	6
 20697  0229  3001               	movlw	1	; select bank2/3
 20698  022A  0087               	movwf	7
 20699  022B  1001               	bcf	1,0
 20700  022C  087A               	movf	_DimmerLights22,w
 20701  022D  3E07               	addlw	7
 20702  022E  0086               	movwf	6
 20703  022F  3001               	movlw	1	; select bank2/3
 20704  0230  0087               	movwf	7
 20705  0231  1401               	bsf	1,0
 20706  0232  087A               	movf	_DimmerLights22,w
 20707  0233  0086               	movwf	6
 20708  0234  3001               	movlw	1	; select bank2/3
 20709  0235  0087               	movwf	7
 20710  0236  1F01               	btfss	1,6
 20711  0237  2B75               	goto	i1l8474
 20712  0238  0020               	movlb	0	; select bank0
 20713  0239  160D               	bsf	13,4	;volatile
 20714  023A  2B75               	goto	i1l8474
 20715  023B                     i1l8408:	
 20716  023B  087A               	movf	_DimmerLights22,w
 20717  023C  3E07               	addlw	7
 20718  023D  0086               	movwf	6
 20719  023E  3001               	movlw	1	; select bank2/3
 20720  023F  0087               	movwf	7
 20721  0240  1C01               	btfss	1,0
 20722  0241  2B40               	goto	i1l8466
 20723  0242  087A               	movf	_DimmerLights22,w
 20724  0243  3E07               	addlw	7
 20725  0244  0086               	movwf	6
 20726  0245  3001               	movlw	1	; select bank2/3
 20727  0246  0087               	movwf	7
 20728  0247  1001               	bcf	1,0
 20729  0248  087A               	movf	_DimmerLights22,w
 20730  0249  0086               	movwf	6
 20731  024A  3001               	movlw	1	; select bank2/3
 20732  024B  0087               	movwf	7
 20733  024C  1C81               	btfss	1,1
 20734  024D  2B40               	goto	i1l8466
 20735  024E  3001               	movlw	1
 20736  024F  00F3               	movwf	??_TMR0_ISR
 20737  0250  0A7A               	incf	_DimmerLights22,w
 20738  0251  0086               	movwf	6
 20739  0252  3001               	movlw	1	; select bank2/3
 20740  0253  0087               	movwf	7
 20741  0254  0873               	movf	??_TMR0_ISR,w
 20742  0255  0781               	addwf	1,f
 20743  0256  0A7A               	incf	_DimmerLights22,w
 20744  0257  0086               	movwf	6
 20745  0258  3001               	movlw	1	; select bank2/3
 20746  0259  0087               	movwf	7
 20747  025A  087A               	movf	_DimmerLights22,w
 20748  025B  3E02               	addlw	2
 20749  025C  0084               	movwf	4
 20750  025D  3001               	movlw	1	; select bank2/3
 20751  025E  0085               	movwf	5
 20752  025F  0800               	movf	0,w
 20753  0260  0201               	subwf	1,w
 20754  0261  1C03               	skipc
 20755  0262  2B40               	goto	i1l8466
 20756  0263  0A7A               	incf	_DimmerLights22,w
 20757  0264  0086               	movwf	6
 20758  0265  3001               	movlw	1	; select bank2/3
 20759  0266  0087               	movwf	7
 20760  0267  0181               	clrf	1
 20761  0268  087A               	movf	_DimmerLights22,w
 20762  0269  0086               	movwf	6
 20763  026A  3001               	movlw	1	; select bank2/3
 20764  026B  0087               	movwf	7
 20765  026C  1D81               	btfss	1,3
 20766  026D  2AA4               	goto	i1l8434
 20767  026E  087A               	movf	_DimmerLights22,w
 20768  026F  0086               	movwf	6
 20769  0270  3001               	movlw	1	; select bank2/3
 20770  0271  0087               	movwf	7
 20771  0272  1A01               	btfsc	1,4
 20772  0273  2A8B               	goto	i1l8428
 20773  0274  087A               	movf	_DimmerLights22,w
 20774  0275  3E04               	addlw	4
 20775  0276  0086               	movwf	6
 20776  0277  3001               	movlw	1	; select bank2/3
 20777  0278  0087               	movwf	7
 20778  0279  3044               	movlw	68
 20779  027A  0201               	subwf	1,w
 20780  027B  1C03               	skipc
 20781  027C  2A85               	goto	i1l8426
 20782  027D  087A               	movf	_DimmerLights22,w
 20783  027E  3E04               	addlw	4
 20784  027F  0086               	movwf	6
 20785  0280  3001               	movlw	1	; select bank2/3
 20786  0281  0087               	movwf	7
 20787  0282  3001               	movlw	1
 20788  0283  0281               	subwf	1,f
 20789  0284  2B40               	goto	i1l8466
 20790  0285                     i1l8426:	
 20791  0285  087A               	movf	_DimmerLights22,w
 20792  0286  0086               	movwf	6
 20793  0287  3001               	movlw	1	; select bank2/3
 20794  0288  0087               	movwf	7
 20795  0289  1601               	bsf	1,4
 20796  028A  2B40               	goto	i1l8466
 20797  028B                     i1l8428:	
 20798  028B  087A               	movf	_DimmerLights22,w
 20799  028C  3E04               	addlw	4
 20800  028D  0086               	movwf	6
 20801  028E  3001               	movlw	1	; select bank2/3
 20802  028F  0087               	movwf	7
 20803  0290  3078               	movlw	120
 20804  0291  0201               	subwf	1,w
 20805  0292  1803               	skipnc
 20806  0293  2A9E               	goto	i1l8432
 20807  0294  3001               	movlw	1
 20808  0295  00F3               	movwf	??_TMR0_ISR
 20809  0296  087A               	movf	_DimmerLights22,w
 20810  0297  3E04               	addlw	4
 20811  0298  0086               	movwf	6
 20812  0299  3001               	movlw	1	; select bank2/3
 20813  029A  0087               	movwf	7
 20814  029B  0873               	movf	??_TMR0_ISR,w
 20815  029C  0781               	addwf	1,f
 20816  029D  2B40               	goto	i1l8466
 20817  029E                     i1l8432:	
 20818  029E  087A               	movf	_DimmerLights22,w
 20819  029F  0086               	movwf	6
 20820  02A0  3001               	movlw	1	; select bank2/3
 20821  02A1  0087               	movwf	7
 20822  02A2  1201               	bcf	1,4
 20823  02A3  2B40               	goto	i1l8466
 20824  02A4                     i1l8434:	
 20825  02A4  087A               	movf	_DimmerLights22,w
 20826  02A5  0086               	movwf	6
 20827  02A6  3001               	movlw	1	; select bank2/3
 20828  02A7  0087               	movwf	7
 20829  02A8  1D01               	btfss	1,2
 20830  02A9  2AEB               	goto	i1l8448
 20831  02AA  087A               	movf	_DimmerLights22,w
 20832  02AB  3E05               	addlw	5
 20833  02AC  0086               	movwf	6
 20834  02AD  3001               	movlw	1	; select bank2/3
 20835  02AE  0087               	movwf	7
 20836  02AF  087A               	movf	_DimmerLights22,w
 20837  02B0  3E04               	addlw	4
 20838  02B1  0084               	movwf	4
 20839  02B2  3001               	movlw	1	; select bank2/3
 20840  02B3  0085               	movwf	5
 20841  02B4  0800               	movf	0,w
 20842  02B5  0201               	subwf	1,w
 20843  02B6  1803               	skipnc
 20844  02B7  2AC0               	goto	i1l8440
 20845  02B8  087A               	movf	_DimmerLights22,w
 20846  02B9  3E04               	addlw	4
 20847  02BA  0086               	movwf	6
 20848  02BB  3001               	movlw	1	; select bank2/3
 20849  02BC  0087               	movwf	7
 20850  02BD  3001               	movlw	1
 20851  02BE  0281               	subwf	1,f
 20852  02BF  2AD7               	goto	i1l8444
 20853  02C0                     i1l8440:	
 20854  02C0  087A               	movf	_DimmerLights22,w
 20855  02C1  3E04               	addlw	4
 20856  02C2  0086               	movwf	6
 20857  02C3  3001               	movlw	1	; select bank2/3
 20858  02C4  0087               	movwf	7
 20859  02C5  087A               	movf	_DimmerLights22,w
 20860  02C6  3E05               	addlw	5
 20861  02C7  0084               	movwf	4
 20862  02C8  3001               	movlw	1	; select bank2/3
 20863  02C9  0085               	movwf	5
 20864  02CA  0800               	movf	0,w
 20865  02CB  0201               	subwf	1,w
 20866  02CC  1803               	skipnc
 20867  02CD  2AD7               	goto	i1l8444
 20868  02CE  3001               	movlw	1
 20869  02CF  00F3               	movwf	??_TMR0_ISR
 20870  02D0  087A               	movf	_DimmerLights22,w
 20871  02D1  3E04               	addlw	4
 20872  02D2  0086               	movwf	6
 20873  02D3  3001               	movlw	1	; select bank2/3
 20874  02D4  0087               	movwf	7
 20875  02D5  0873               	movf	??_TMR0_ISR,w
 20876  02D6  0781               	addwf	1,f
 20877  02D7                     i1l8444:	
 20878  02D7  087A               	movf	_DimmerLights22,w
 20879  02D8  3E05               	addlw	5
 20880  02D9  0086               	movwf	6
 20881  02DA  3001               	movlw	1	; select bank2/3
 20882  02DB  0087               	movwf	7
 20883  02DC  087A               	movf	_DimmerLights22,w
 20884  02DD  3E04               	addlw	4
 20885  02DE  0084               	movwf	4
 20886  02DF  3001               	movlw	1	; select bank2/3
 20887  02E0  0085               	movwf	5
 20888  02E1  0800               	movf	0,w
 20889  02E2  0601               	xorwf	1,w
 20890  02E3  1D03               	skipz
 20891  02E4  2B40               	goto	i1l8466
 20892  02E5  087A               	movf	_DimmerLights22,w
 20893  02E6  0086               	movwf	6
 20894  02E7  3001               	movlw	1	; select bank2/3
 20895  02E8  0087               	movwf	7
 20896  02E9  1101               	bcf	1,2
 20897  02EA  2B06               	goto	i1l8454
 20898  02EB                     i1l8448:	
 20899  02EB  087A               	movf	_DimmerLights22,w
 20900  02EC  0086               	movwf	6
 20901  02ED  3001               	movlw	1	; select bank2/3
 20902  02EE  0087               	movwf	7
 20903  02EF  1E81               	btfss	1,5
 20904  02F0  2B0C               	goto	i1l8456
 20905  02F1  087A               	movf	_DimmerLights22,w
 20906  02F2  3E04               	addlw	4
 20907  02F3  0086               	movwf	6
 20908  02F4  3001               	movlw	1	; select bank2/3
 20909  02F5  0087               	movwf	7
 20910  02F6  3001               	movlw	1
 20911  02F7  0281               	subwf	1,f
 20912  02F8  087A               	movf	_DimmerLights22,w
 20913  02F9  3E05               	addlw	5
 20914  02FA  0086               	movwf	6
 20915  02FB  3001               	movlw	1	; select bank2/3
 20916  02FC  0087               	movwf	7
 20917  02FD  087A               	movf	_DimmerLights22,w
 20918  02FE  3E04               	addlw	4
 20919  02FF  0084               	movwf	4
 20920  0300  3001               	movlw	1	; select bank2/3
 20921  0301  0085               	movwf	5
 20922  0302  0800               	movf	0,w
 20923  0303  0201               	subwf	1,w
 20924  0304  1C03               	skipc
 20925  0305  2B40               	goto	i1l8466
 20926  0306                     i1l8454:	
 20927  0306  087A               	movf	_DimmerLights22,w
 20928  0307  0086               	movwf	6
 20929  0308  3001               	movlw	1	; select bank2/3
 20930  0309  0087               	movwf	7
 20931  030A  1081               	bcf	1,1
 20932  030B  2B40               	goto	i1l8466
 20933  030C                     i1l8456:	
 20934  030C  3001               	movlw	1
 20935  030D  00F3               	movwf	??_TMR0_ISR
 20936  030E  087A               	movf	_DimmerLights22,w
 20937  030F  3E04               	addlw	4
 20938  0310  0086               	movwf	6
 20939  0311  3001               	movlw	1	; select bank2/3
 20940  0312  0087               	movwf	7
 20941  0313  0873               	movf	??_TMR0_ISR,w
 20942  0314  0781               	addwf	1,f
 20943  0315  087A               	movf	_DimmerLights22,w
 20944  0316  3E04               	addlw	4
 20945  0317  0086               	movwf	6
 20946  0318  3001               	movlw	1	; select bank2/3
 20947  0319  0087               	movwf	7
 20948  031A  087A               	movf	_DimmerLights22,w
 20949  031B  3E06               	addlw	6
 20950  031C  0084               	movwf	4
 20951  031D  3001               	movlw	1	; select bank2/3
 20952  031E  0085               	movwf	5
 20953  031F  0800               	movf	0,w
 20954  0320  0201               	subwf	1,w
 20955  0321  1C03               	skipc
 20956  0322  2B40               	goto	i1l8466
 20957  0323  087A               	movf	_DimmerLights22,w
 20958  0324  0086               	movwf	6
 20959  0325  3001               	movlw	1	; select bank2/3
 20960  0326  0087               	movwf	7
 20961  0327  1081               	bcf	1,1
 20962  0328  087A               	movf	_DimmerLights22,w
 20963  0329  0086               	movwf	6
 20964  032A  3001               	movlw	1	; select bank2/3
 20965  032B  0087               	movwf	7
 20966  032C  1301               	bcf	1,6
 20967  032D  087A               	movf	_DimmerLights22,w
 20968  032E  3E0C               	addlw	12
 20969  032F  0086               	movwf	6
 20970  0330  3001               	movlw	1	; select bank2/3
 20971  0331  0087               	movwf	7
 20972  0332  1401               	bsf	1,0
 20973  0333  0021               	movlb	1	; select bank1
 20974  0334  0839               	movf	_Dimmer^(0+128),w
 20975  0335  0086               	movwf	6
 20976  0336  0187               	clrf	7
 20977  0337  1401               	bsf	1,0
 20978  0338  0020               	movlb	0	; select bank0
 20979  0339  138E               	bcf	14,7	;volatile
 20980  033A  01F1               	clrf	i1setLoad_StatusOff@command
 20981  033B  0AF1               	incf	i1setLoad_StatusOff@command,f
 20982  033C  3002               	movlw	2
 20983  033D  319A  2288  3180   	fcall	i1_setLoad_StatusOff
 20984  0340                     i1l8466:	
 20985  0340  0020               	movlb	0	; select bank0
 20986  0341  1E0D               	btfss	13,4	;volatile
 20987  0342  2B75               	goto	i1l8474
 20988  0343  3001               	movlw	1
 20989  0344  00F3               	movwf	??_TMR0_ISR
 20990  0345  087A               	movf	_DimmerLights22,w
 20991  0346  3E08               	addlw	8
 20992  0347  0086               	movwf	6
 20993  0348  3001               	movlw	1	; select bank2/3
 20994  0349  0087               	movwf	7
 20995  034A  0873               	movf	??_TMR0_ISR,w
 20996  034B  0781               	addwf	1,f
 20997  034C  087A               	movf	_DimmerLights22,w
 20998  034D  3E04               	addlw	4
 20999  034E  0086               	movwf	6
 21000  034F  3001               	movlw	1	; select bank2/3
 21001  0350  0087               	movwf	7
 21002  0351  0801               	movf	1,w
 21003  0352  00F3               	movwf	??_TMR0_ISR
 21004  0353  01F4               	clrf	??_TMR0_ISR+1
 21005  0354  09F3               	comf	??_TMR0_ISR,f
 21006  0355  09F4               	comf	??_TMR0_ISR+1,f
 21007  0356  0AF3               	incf	??_TMR0_ISR,f
 21008  0357  1903               	skipnz
 21009  0358  0AF4               	incf	??_TMR0_ISR+1,f
 21010  0359  0873               	movf	??_TMR0_ISR,w
 21011  035A  3E78               	addlw	120
 21012  035B  00F5               	movwf	??_TMR0_ISR+2
 21013  035C  3000               	movlw	0
 21014  035D  3D74               	addwfc	??_TMR0_ISR+1,w
 21015  035E  00F6               	movwf	??_TMR0_ISR+3
 21016  035F  087A               	movf	_DimmerLights22,w
 21017  0360  3E08               	addlw	8
 21018  0361  0086               	movwf	6
 21019  0362  3001               	movlw	1	; select bank2/3
 21020  0363  0087               	movwf	7
 21021  0364  0876               	movf	??_TMR0_ISR+3,w
 21022  0365  3A80               	xorlw	128
 21023  0366  3C80               	sublw	128
 21024  0367  1D03               	skipz
 21025  0368  2B6B               	goto	u800_25
 21026  0369  0875               	movf	??_TMR0_ISR+2,w
 21027  036A  0201               	subwf	1,w
 21028  036B                     u800_25:	
 21029  036B  1C03               	skipc
 21030  036C  2B75               	goto	i1l8474
 21031  036D  087A               	movf	_DimmerLights22,w
 21032  036E  3E08               	addlw	8
 21033  036F  0086               	movwf	6
 21034  0370  3001               	movlw	1	; select bank2/3
 21035  0371  0087               	movwf	7
 21036  0372  0181               	clrf	1
 21037  0373  0020               	movlb	0	; select bank0
 21038  0374  120D               	bcf	13,4	;volatile
 21039  0375                     i1l8474:	
 21040                           
 21041                           ;MCU_16f1518_B1.c: 113: Timer0->Count++;
 21042  0375  0021               	movlb	1	; select bank1
 21043  0376  0A6A               	incf	_Timer0^(0+128),w
 21044  0377  0086               	movwf	6
 21045  0378  0187               	clrf	7
 21046  0379  3001               	movlw	1
 21047  037A  0781               	addwf	1,f
 21048  037B  3141               	addfsr 1,1
 21049  037C  1803               	skipnc
 21050  037D  0A81               	incf	1,f
 21051                           
 21052                           ;MCU_16f1518_B1.c: 114: if(Timer0->Count == 200)
 21053  037E  0A6A               	incf	_Timer0^(0+128),w
 21054  037F  0086               	movwf	6
 21055  0380  0187               	clrf	7
 21056  0381  3F40               	moviw [0]fsr1
 21057  0382  3AC8               	xorlw	200
 21058  0383  1D03               	skipz
 21059  0384  2B87               	goto	u801_25
 21060  0385  3F41               	moviw [1]fsr1
 21061  0386  3A00               	xorlw	0
 21062  0387                     u801_25:	
 21063  0387  1D03               	skipz
 21064  0388  2B94               	goto	i1l1685
 21065                           
 21066                           ;MCU_16f1518_B1.c: 115: {
 21067                           ;MCU_16f1518_B1.c: 116: Timer0->Count=0;
 21068  0389  0A6A               	incf	_Timer0^(0+128),w
 21069  038A  0086               	movwf	6
 21070  038B  0187               	clrf	7
 21071  038C  3000               	movlw	0
 21072  038D  3FC0               	movwi [0]fsr1
 21073  038E  3FC1               	movwi [1]fsr1
 21074                           
 21075                           ;MCU_16f1518_B1.c: 117: TMain->T0_Timerout=1;
 21076  038F  0869               	movf	_TMain^(0+128),w
 21077  0390  0086               	movwf	6
 21078  0391  3001               	movlw	1	; select bank2/3
 21079  0392  0087               	movwf	7
 21080  0393  1481               	bsf	1,1
 21081  0394                     i1l1685:	
 21082                           
 21083                           ;MCU_16f1518_B1.c: 118: }
 21084                           ;MCU_16f1518_B1.c: 121: if(Buz->GO)
 21085  0394  0878               	movf	_Buz,w
 21086  0395  0086               	movwf	6
 21087  0396  3001               	movlw	1	; select bank2/3
 21088  0397  0087               	movwf	7
 21089  0398  1C81               	btfss	1,1
 21090  0399  0008               	return
 21091                           
 21092                           ;MCU_16f1518_B1.c: 122: {
 21093                           ;MCU_16f1518_B1.c: 123: Buz->Time++;
 21094  039A  0A78               	incf	_Buz,w
 21095  039B  0086               	movwf	6
 21096  039C  3001               	movlw	1	; select bank2/3
 21097  039D  0087               	movwf	7
 21098  039E  3001               	movlw	1
 21099  039F  0781               	addwf	1,f
 21100  03A0  3141               	addfsr 1,1
 21101  03A1  1803               	skipnc
 21102  03A2  0A81               	incf	1,f
 21103  03A3  0008               	return
 21104  03A4                     __end_of_TMR0_ISR:	
 21105                           
 21106                           	psect	text137
 21107  1A88                     __ptext137:	
 21108 ;; *************** function i1_setLoad_StatusOff *****************
 21109 ;; Defined at:
 21110 ;;		line 284 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\OverLoad_B1.c"
 21111 ;; Parameters:    Size  Location     Type
 21112 ;;  lights          1    wreg     unsigned char 
 21113 ;;  command         1    0[COMMON] unsigned char 
 21114 ;; Auto vars:     Size  Location     Type
 21115 ;;  lights          1    1[COMMON] unsigned char 
 21116 ;; Return value:  Size  Location     Type
 21117 ;;		None               void
 21118 ;; Registers used:
 21119 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21120 ;; Tracked objects:
 21121 ;;		On entry : 0/0
 21122 ;;		On exit  : 0/0
 21123 ;;		Unchanged: 0/0
 21124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21125 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21129 ;;Total ram usage:        2 bytes
 21130 ;; Hardware stack levels used:    1
 21131 ;; This function calls:
 21132 ;;		Nothing
 21133 ;; This function is called by:
 21134 ;;		_TMR0_ISR
 21135 ;; This function uses a non-reentrant model
 21136 ;;
 21137                           
 21138                           
 21139                           ;psect for function i1_setLoad_StatusOff
 21140  1A88                     i1_setLoad_StatusOff:	
 21141                           
 21142                           ;incstack = 0
 21143                           ; Regs used in i1_setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0]
 21144                           ;i1setLoad_StatusOff@lights stored from wreg
 21145  1A88  00F2               	movwf	i1setLoad_StatusOff@lights
 21146                           
 21147                           ;OverLoad_B1.c: 286: Load->StatusOff=command;
 21148  1A89  0020               	movlb	0	; select bank0
 21149  1A8A  086E               	movf	_Load,w
 21150  1A8B  3E46               	addlw	70
 21151  1A8C  0086               	movwf	6
 21152  1A8D  3002               	movlw	2	; select bank4/5
 21153  1A8E  0087               	movwf	7
 21154  1A8F  0871               	movf	i1setLoad_StatusOff@command,w
 21155  1A90  1081               	bcf	1,1
 21156  1A91  1D03               	skipz
 21157  1A92  1481               	bsf	1,1
 21158                           
 21159                           ;OverLoad_B1.c: 287: Load->SafeCount-=2;
 21160  1A93  086E               	movf	_Load,w
 21161  1A94  3E42               	addlw	66
 21162  1A95  0086               	movwf	6
 21163  1A96  3002               	movlw	2	; select bank4/5
 21164  1A97  0087               	movwf	7
 21165  1A98  3002               	movlw	2
 21166  1A99  0281               	subwf	1,f
 21167                           
 21168                           ;OverLoad_B1.c: 288: if(lights == 1)
 21169  1A9A  0872               	movf	i1setLoad_StatusOff@lights,w
 21170  1A9B  3A01               	xorlw	1
 21171  1A9C  1D03               	skipz
 21172  1A9D  2AA4               	goto	i1l7906
 21173                           
 21174                           ;OverLoad_B1.c: 289: {
 21175                           ;OverLoad_B1.c: 290: Load->Lights1Status=0;
 21176  1A9E  086E               	movf	_Load,w
 21177  1A9F  3E43               	addlw	67
 21178  1AA0  0086               	movwf	6
 21179  1AA1  3002               	movlw	2	; select bank4/5
 21180  1AA2  0087               	movwf	7
 21181  1AA3  0181               	clrf	1
 21182  1AA4                     i1l7906:	
 21183                           
 21184                           ;OverLoad_B1.c: 291: }
 21185                           ;OverLoad_B1.c: 292: if(lights == 2)
 21186  1AA4  0872               	movf	i1setLoad_StatusOff@lights,w
 21187  1AA5  3A02               	xorlw	2
 21188  1AA6  1D03               	skipz
 21189  1AA7  2AAE               	goto	i1l7910
 21190                           
 21191                           ;OverLoad_B1.c: 293: {
 21192                           ;OverLoad_B1.c: 294: Load->Lights2Status=0;
 21193  1AA8  086E               	movf	_Load,w
 21194  1AA9  3E44               	addlw	68
 21195  1AAA  0086               	movwf	6
 21196  1AAB  3002               	movlw	2	; select bank4/5
 21197  1AAC  0087               	movwf	7
 21198  1AAD  0181               	clrf	1
 21199  1AAE                     i1l7910:	
 21200                           
 21201                           ;OverLoad_B1.c: 295: }
 21202                           ;OverLoad_B1.c: 296: if(lights == 3)
 21203  1AAE  0872               	movf	i1setLoad_StatusOff@lights,w
 21204  1AAF  3A03               	xorlw	3
 21205  1AB0  1D03               	skipz
 21206  1AB1  0008               	return
 21207                           
 21208                           ;OverLoad_B1.c: 297: {
 21209                           ;OverLoad_B1.c: 298: Load->Lights3Status=0;
 21210  1AB2  086E               	movf	_Load,w
 21211  1AB3  3E45               	addlw	69
 21212  1AB4  0086               	movwf	6
 21213  1AB5  3002               	movlw	2	; select bank4/5
 21214  1AB6  0087               	movwf	7
 21215  1AB7  0181               	clrf	1
 21216  1AB8  0008               	return
 21217  1AB9                     __end_ofi1_setLoad_StatusOff:	
 21218                           
 21219                           	psect	text138
 21220  18E6                     __ptext138:	
 21221 ;; *************** function _IOC_ISR *****************
 21222 ;; Defined at:
 21223 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 21224 ;; Parameters:    Size  Location     Type
 21225 ;;		None
 21226 ;; Auto vars:     Size  Location     Type
 21227 ;;		None
 21228 ;; Return value:  Size  Location     Type
 21229 ;;		None               void
 21230 ;; Registers used:
 21231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21232 ;; Tracked objects:
 21233 ;;		On entry : 0/0
 21234 ;;		On exit  : 0/0
 21235 ;;		Unchanged: 0/0
 21236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21239 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21241 ;;Total ram usage:        1 bytes
 21242 ;; Hardware stack levels used:    1
 21243 ;; Hardware stack levels required when called:    1
 21244 ;; This function calls:
 21245 ;;		_setDimmerReClock
 21246 ;; This function is called by:
 21247 ;;		_ISR
 21248 ;; This function uses a non-reentrant model
 21249 ;;
 21250                           
 21251                           
 21252                           ;psect for function _IOC_ISR
 21253  18E6                     _IOC_ISR:	
 21254                           
 21255                           ;MCU_16f1518_B1.c: 269: if(IOCIE && IOCBF2)
 21256                           
 21257                           ;incstack = 0
 21258                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21259  18E6  1D8B               	btfss	11,3	;volatile
 21260  18E7  0008               	return
 21261  18E8  0027               	movlb	7	; select bank7
 21262  18E9  1D16               	btfss	22,2	;volatile
 21263  18EA  0008               	return
 21264                           
 21265                           ;MCU_16f1518_B1.c: 270: {
 21266                           ;MCU_16f1518_B1.c: 271: IOCBF2=0;
 21267  18EB  1116               	bcf	22,2	;volatile
 21268                           
 21269                           ;MCU_16f1518_B1.c: 272: IOCIF=0;
 21270  18EC  100B               	bcf	11,0	;volatile
 21271                           
 21272                           ;MCU_16f1518_B1.c: 273: if(TMain->PowerON)
 21273  18ED  0021               	movlb	1	; select bank1
 21274  18EE  0869               	movf	_TMain^(0+128),w
 21275  18EF  0086               	movwf	6
 21276  18F0  3001               	movlw	1	; select bank2/3
 21277  18F1  0087               	movwf	7
 21278  18F2  1C01               	btfss	1,0
 21279  18F3  0008               	return
 21280                           
 21281                           ;MCU_16f1518_B1.c: 274: {
 21282                           ;MCU_16f1518_B1.c: 278: setDimmerReClock();
 21283  18F4  31A6  26F8  3198   	fcall	_setDimmerReClock
 21284                           
 21285                           ;MCU_16f1518_B1.c: 279: if(RB2)
 21286  18F7  0020               	movlb	0	; select bank0
 21287  18F8  1D0D               	btfss	13,2	;volatile
 21288  18F9  2901               	goto	i1l8304
 21289                           
 21290                           ;MCU_16f1518_B1.c: 280: {
 21291                           ;MCU_16f1518_B1.c: 281: Dimmer->Correction=0;
 21292  18FA  0021               	movlb	1	; select bank1
 21293  18FB  0839               	movf	_Dimmer^(0+128),w
 21294  18FC  3E02               	addlw	2
 21295  18FD  0086               	movwf	6
 21296  18FE  0187               	clrf	7
 21297  18FF  0181               	clrf	1
 21298                           
 21299                           ;MCU_16f1518_B1.c: 282: }
 21300  1900  0008               	return
 21301  1901                     i1l8304:	
 21302                           
 21303                           ;MCU_16f1518_B1.c: 283: else
 21304                           ;MCU_16f1518_B1.c: 284: {
 21305                           ;MCU_16f1518_B1.c: 285: Dimmer->Correction=8;
 21306  1901  3008               	movlw	8
 21307  1902  00F1               	movwf	??_IOC_ISR
 21308  1903  0021               	movlb	1	; select bank1
 21309  1904  0839               	movf	_Dimmer^(0+128),w
 21310  1905  3E02               	addlw	2
 21311  1906  0086               	movwf	6
 21312  1907  0187               	clrf	7
 21313  1908  0871               	movf	??_IOC_ISR,w
 21314  1909  0081               	movwf	1
 21315  190A  0008               	return
 21316  190B                     __end_of_IOC_ISR:	
 21317                           
 21318                           	psect	text139
 21319  26F8                     __ptext139:	
 21320 ;; *************** function _setDimmerReClock *****************
 21321 ;; Defined at:
 21322 ;;		line 129 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 21323 ;; Parameters:    Size  Location     Type
 21324 ;;		None
 21325 ;; Auto vars:     Size  Location     Type
 21326 ;;		None
 21327 ;; Return value:  Size  Location     Type
 21328 ;;		None               void
 21329 ;; Registers used:
 21330 ;;		wreg, fsr1l, fsr1h
 21331 ;; Tracked objects:
 21332 ;;		On entry : 0/0
 21333 ;;		On exit  : 0/0
 21334 ;;		Unchanged: 0/0
 21335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21340 ;;Total ram usage:        0 bytes
 21341 ;; Hardware stack levels used:    1
 21342 ;; This function calls:
 21343 ;;		Nothing
 21344 ;; This function is called by:
 21345 ;;		_IOC_ISR
 21346 ;; This function uses a non-reentrant model
 21347 ;;
 21348                           
 21349                           
 21350                           ;psect for function _setDimmerReClock
 21351  26F8                     _setDimmerReClock:	
 21352                           
 21353                           ;MCU_16f1518_B1.c: 131: TMR0=255;
 21354                           
 21355                           ;incstack = 0
 21356                           ; Regs used in _setDimmerReClock: [wregfsr1]
 21357  26F8  30FF               	movlw	255
 21358  26F9  0020               	movlb	0	; select bank0
 21359  26FA  0095               	movwf	21	;volatile
 21360                           
 21361                           ;MCU_16f1518_B1.c: 136: if(!DimmerLights11->GO)
 21362  26FB  0879               	movf	_DimmerLights11,w
 21363  26FC  0086               	movwf	6
 21364  26FD  3001               	movlw	1	; select bank2/3
 21365  26FE  0087               	movwf	7
 21366  26FF  1801               	btfsc	1,0
 21367  2700  2F06               	goto	i1l1690
 21368                           
 21369                           ;MCU_16f1518_B1.c: 137: {
 21370                           ;MCU_16f1518_B1.c: 138: DimmerLights11->GO=1;
 21371  2701  0879               	movf	_DimmerLights11,w
 21372  2702  0086               	movwf	6
 21373  2703  3001               	movlw	1	; select bank2/3
 21374  2704  0087               	movwf	7
 21375  2705  1401               	bsf	1,0
 21376  2706                     i1l1690:	
 21377                           
 21378                           ;MCU_16f1518_B1.c: 139: }
 21379                           ;MCU_16f1518_B1.c: 158: if(!DimmerLights22->GO)
 21380  2706  087A               	movf	_DimmerLights22,w
 21381  2707  0086               	movwf	6
 21382  2708  3001               	movlw	1	; select bank2/3
 21383  2709  0087               	movwf	7
 21384  270A  1801               	btfsc	1,0
 21385  270B  0008               	return
 21386                           
 21387                           ;MCU_16f1518_B1.c: 159: {
 21388                           ;MCU_16f1518_B1.c: 160: DimmerLights22->GO=1;
 21389  270C  087A               	movf	_DimmerLights22,w
 21390  270D  0086               	movwf	6
 21391  270E  3001               	movlw	1	; select bank2/3
 21392  270F  0087               	movwf	7
 21393  2710  1401               	bsf	1,0
 21394  2711  0008               	return
 21395  2712                     __end_of_setDimmerReClock:	
 21396                           
 21397                           	psect	text140
 21398  249B                     __ptext140:	
 21399 ;; *************** function _INT_ISR *****************
 21400 ;; Defined at:
 21401 ;;		line 225 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.
      +1.2.1\Release\MCU_16f1518_B1.c"
 21402 ;; Parameters:    Size  Location     Type
 21403 ;;		None
 21404 ;; Auto vars:     Size  Location     Type
 21405 ;;		None
 21406 ;; Return value:  Size  Location     Type
 21407 ;;		None               void
 21408 ;; Registers used:
 21409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21410 ;; Tracked objects:
 21411 ;;		On entry : 0/0
 21412 ;;		On exit  : 0/0
 21413 ;;		Unchanged: 0/0
 21414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21419 ;;Total ram usage:        0 bytes
 21420 ;; Hardware stack levels used:    1
 21421 ;; Hardware stack levels required when called:    2
 21422 ;; This function calls:
 21423 ;;		_setRF_ReceiveGO
 21424 ;; This function is called by:
 21425 ;;		_ISR
 21426 ;; This function uses a non-reentrant model
 21427 ;;
 21428                           
 21429                           
 21430                           ;psect for function _INT_ISR
 21431  249B                     _INT_ISR:	
 21432                           
 21433                           ;MCU_16f1518_B1.c: 227: if(INTE && INTF)
 21434                           
 21435                           ;incstack = 0
 21436                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21437  249B  1E0B               	btfss	11,4	;volatile
 21438  249C  0008               	return
 21439  249D  1C8B               	btfss	11,1	;volatile
 21440  249E  0008               	return
 21441                           
 21442                           ;MCU_16f1518_B1.c: 228: {
 21443                           ;MCU_16f1518_B1.c: 229: INTF=0;
 21444  249F  108B               	bcf	11,1	;volatile
 21445                           
 21446                           ;MCU_16f1518_B1.c: 230: INTE=0;
 21447  24A0  120B               	bcf	11,4	;volatile
 21448                           
 21449                           ;MCU_16f1518_B1.c: 231: setRF_ReceiveGO(1,1);
 21450  24A1  01F3               	clrf	setRF_ReceiveGO@command
 21451  24A2  0AF3               	incf	setRF_ReceiveGO@command,f
 21452  24A3  3001               	movlw	1
 21453  24A4  31A4  248F         	fcall	_setRF_ReceiveGO
 21454  24A6  0008               	return
 21455  24A7                     __end_of_INT_ISR:	
 21456                           
 21457                           	psect	text141
 21458  248F                     __ptext141:	
 21459 ;; *************** function _setRF_ReceiveGO *****************
 21460 ;; Defined at:
 21461 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1
      +.2.1\Release\RF_Control_B1.c"
 21462 ;; Parameters:    Size  Location     Type
 21463 ;;  rf              1    wreg     unsigned char 
 21464 ;;  command         1    2[COMMON] unsigned char 
 21465 ;; Auto vars:     Size  Location     Type
 21466 ;;  rf              1    3[COMMON] unsigned char 
 21467 ;; Return value:  Size  Location     Type
 21468 ;;		None               void
 21469 ;; Registers used:
 21470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21471 ;; Tracked objects:
 21472 ;;		On entry : 0/0
 21473 ;;		On exit  : 0/0
 21474 ;;		Unchanged: 0/0
 21475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21476 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21480 ;;Total ram usage:        2 bytes
 21481 ;; Hardware stack levels used:    1
 21482 ;; Hardware stack levels required when called:    1
 21483 ;; This function calls:
 21484 ;;		i1_RfPointSelect
 21485 ;; This function is called by:
 21486 ;;		_INT_ISR
 21487 ;; This function uses a non-reentrant model
 21488 ;;
 21489                           
 21490                           
 21491                           ;psect for function _setRF_ReceiveGO
 21492  248F                     _setRF_ReceiveGO:	
 21493                           
 21494                           ;incstack = 0
 21495                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21496                           ;setRF_ReceiveGO@rf stored from wreg
 21497  248F  00F4               	movwf	setRF_ReceiveGO@rf
 21498                           
 21499                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 21500  2490  0874               	movf	setRF_ReceiveGO@rf,w
 21501  2491  31A4  2422         	fcall	i1_RfPointSelect
 21502                           
 21503                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 21504  2493  087C               	movf	_RF,w
 21505  2494  0086               	movwf	6
 21506  2495  0187               	clrf	7
 21507  2496  0873               	movf	setRF_ReceiveGO@command,w
 21508  2497  1081               	bcf	1,1
 21509  2498  1D03               	skipz
 21510  2499  1481               	bsf	1,1
 21511  249A  0008               	return
 21512  249B                     __end_of_setRF_ReceiveGO:	
 21513                           
 21514                           	psect	text142
 21515  2422                     __ptext142:	
 21516 ;; *************** function i1_RfPointSelect *****************
 21517 ;; Defined at:
 21518 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\9.Switch_2Key_Dimmer\Release\Switch_2Key_Dimmer_V1.2.1.
      +2.1\Release\RF_Control_B1.c"
 21519 ;; Parameters:    Size  Location     Type
 21520 ;;  rf              1    wreg     unsigned char 
 21521 ;; Auto vars:     Size  Location     Type
 21522 ;;  rf              1    1[COMMON] unsigned char 
 21523 ;; Return value:  Size  Location     Type
 21524 ;;		None               void
 21525 ;; Registers used:
 21526 ;;		wreg
 21527 ;; Tracked objects:
 21528 ;;		On entry : 0/0
 21529 ;;		On exit  : 0/0
 21530 ;;		Unchanged: 0/0
 21531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21536 ;;Total ram usage:        2 bytes
 21537 ;; Hardware stack levels used:    1
 21538 ;; This function calls:
 21539 ;;		Nothing
 21540 ;; This function is called by:
 21541 ;;		_setRF_ReceiveGO
 21542 ;; This function uses a non-reentrant model
 21543 ;;
 21544                           
 21545                           
 21546                           ;psect for function i1_RfPointSelect
 21547  2422                     i1_RfPointSelect:	
 21548                           
 21549                           ;incstack = 0
 21550                           ; Regs used in i1_RfPointSelect: [wreg]
 21551                           ;i1RfPointSelect@rf stored from wreg
 21552  2422  00F2               	movwf	i1RfPointSelect@rf
 21553                           
 21554                           ;RF_Control_B1.c: 10: if(rf == 1)
 21555  2423  0872               	movf	i1RfPointSelect@rf,w
 21556  2424  3A01               	xorlw	1
 21557  2425  1D03               	skipz
 21558  2426  0008               	return
 21559                           
 21560                           ;RF_Control_B1.c: 11: {
 21561                           ;RF_Control_B1.c: 12: RF=&RF1;
 21562  2427  30E4               	movlw	_RF1& (0+255)
 21563  2428  00F1               	movwf	??i1_RfPointSelect
 21564  2429  0871               	movf	??i1_RfPointSelect,w
 21565  242A  00FC               	movwf	_RF
 21566  242B  0008               	return
 21567  242C                     __end_ofi1_RfPointSelect:	
 21568  007E                     btemp	set	126	;btemp
 21569  007E                     pic14e$flags	set	126
 21570  007E                     wtemp	set	126
 21571  007E                     wtemp0	set	126
 21572  0080                     wtemp1	set	128
 21573  0082                     wtemp2	set	130
 21574  0084                     wtemp3	set	132
 21575  0086                     wtemp4	set	134
 21576  0088                     wtemp5	set	136
 21577  007F                     wtemp6	set	127
 21578  007E                     ttemp	set	126
 21579  007E                     ttemp0	set	126
 21580  0081                     ttemp1	set	129
 21581  0084                     ttemp2	set	132
 21582  0087                     ttemp3	set	135
 21583  007F                     ttemp4	set	127
 21584  007E                     ltemp	set	126
 21585  007E                     ltemp0	set	126
 21586  0082                     ltemp1	set	130
 21587  0086                     ltemp2	set	134
 21588  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         283
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     76      80
    BANK1            80      0      75
    BANK2            80      0      78
    BANK3            80      0      48
    BANK4            80      0      37
    BANK5            80      0      71
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 2
		 -> NULL(NULL[0]), RF1(BANK1[2]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK2[8]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    Load	PTR struct OverLoad size(1) Largest target is 71
		 -> NULL(NULL[0]), Load1(BANK5[71]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 7
		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 16
		 -> NULL(NULL[0]), VarTMain(BANK3[16]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK4[37]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights1(BANK2[13]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), DimmerLights1(BANK2[13]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _TMR0_ISR->i1_setLoad_StatusOff
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _getLoad_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setRF_DimmerLights
    _Sw_DimmerOffFunc->_setRF_DimmerLights
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setRF_DimmerLights
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _getPercentValue->___fttol
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _PowerFault_Initialization->_setPowerFault_Initialization
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _Load_Main->_setLoad_Exceptions
    _setLoad_Exceptions->_DimmerLights_Exceptions
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RfPointSelect
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _setDimmerLights_Clear->_DimmerLightsPointSelect
    _Load_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setRF_DimmerLights
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setRF_DimmerLights
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRF_DimmerLights->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  109537
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                              _MainT
               _MainT_Initialization
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                         _getLoad_AD
                   _getPowerFault_AD
                         _getTemp_AD
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     324
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     5     5      0     324
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           8     8      0     624
                                              4 BANK0      8     8      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     293
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    8083
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    8083
                                             13 BANK0      3     3      0
                       _getLoad_Safe
                         _getPF_Safe
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    8083
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0   22258
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0   22258
                                             69 BANK0      5     5      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     315
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    9767
                                             66 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    9103
                                             66 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     1     1      0    1258
                                              4 BANK0      1     1      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     260
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     260
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1070
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1070
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   29449
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   29449
                                             73 BANK0      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   28445
                                             72 BANK0      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1564
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   26828
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      2     2      0   10861
                                             66 BANK0      2     2      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2     981
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   11355
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   11179
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11113
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11047
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2502
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3118
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     152
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     160
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     503
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     161
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     114
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    6572
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   2     2      0    6572
                                             13 BANK0      2     2      0
                       _getLoad_Safe
                       _getTemp_Safe
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             2     2      0    6572
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (3) _getLoad_Safe                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    2102
                             _setBuz
                     _setLoad_Enable
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setLoad_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                            5     5      0    8099
                                             13 BANK0      5     5      0
                            ___lwdiv
                             ___wmul
                         _getPF_Safe
                       _getTemp_Safe
              _setDimmerLights_Clear
              _setLoad_AH_AL_Restore
                 _setLoad_Exceptions
 ---------------------------------------------------------------------------------
 (2) _setLoad_Exceptions                                   2     2      0    6603
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _setSw_Enable                                         1     1      0     106
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _setRF_Enable                                         2     1      1     423
                                              2 BANK0      2     1      1
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (5) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    4818
                                             10 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     353
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2813
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                  _setLoad_StatusOff
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Clear                                2     1      1     414
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  1     1      0      90
                                              2 BANK0      1     1      0
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1167
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1167
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     307
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     307
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5827
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      47
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   10769
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0   10690
                                             69 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1    7025
                                             66 BANK0      3     2      1
            _DimmerLightsPointSelect
                  _setLoad_StatusOff
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOff                                    2     1      1     362
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1791
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                      _setLoad_Count
                   _setLoad_StatusOn
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOn                                     2     1      1     201
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _setLoad_Count                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1    1039
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      79
         _getDimmerLights_StatusFlag
                         _setLoad_GO
 ---------------------------------------------------------------------------------
 (3) _setLoad_GO                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      66
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      66
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0   10308
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0   10308
                                             66 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            3     3      0      44
                                              2 BANK0      2     2      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     568
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (5) _SwPointSelect                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1    6328
                                             61 BANK0      5     4      1
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (5) _setPercentValue                                      4     4      0    5458
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     380
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2712
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3    2267
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2048
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     645
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     491
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     491
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setBuz                                               4     2      2    1511
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     444
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      75
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      75
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    1869
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     490
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     354
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     309
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     218
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     512
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     444
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      68
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     270
                                              6 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0     140
                                              2 COMMON     4     4      0
                i1_setLoad_StatusOff
 ---------------------------------------------------------------------------------
 (13) i1_setLoad_StatusOff                                 2     1      1     140
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     130
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     130
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setLoad_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setLoad_Count
         _setLoad_StatusOn
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setLoad_StatusOff
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getPF_Safe
     _getTemp_Safe
     _setDimmerLights_Clear
       _DimmerLightsPointSelect
     _setLoad_AH_AL_Restore
     _setLoad_Exceptions
       _DimmerLights_Exceptions
         _getDimmerLights_StatusFlag
         _setBuz
           ___wmul
         _setDimmerLights_ERROR
           _DimmerLightsPointSelect
           _setLED
             _LedPointSelect
           _setLoad_StatusOff
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
         _setDimmerLights_TriggerERROR
           _DimmerLightsPointSelect
       _setLED
         _LedPointSelect
       _setRF_Enable
         _RfPointSelect
         _setINT_GO
       _setSw_Enable
         _SwPointSelect
   _MainT
     _setBuz
       ___wmul
     _setLoad_Enable
     _setRF_Enable
       _RfPointSelect
       _setINT_GO
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
   _MainT_Initialization
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _getLoad_Safe
       _getTemp_Safe
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_Count
             _setLoad_StatusOn
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
               _setPercentValue
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___wmul
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getLoad_Safe
       _getPF_Safe
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___wmul
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _getLoad_AD
     _getAD
   _getPowerFault_AD
     _getAD
   _getTemp_AD
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR
     i1_setLoad_StatusOff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      25      13       46.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      47      15       88.8%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     193      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     193      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Sep 15 16:41:09 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _PF 007B  
                                     _RD 0CA8                                       _RF 007C  
                __end_of_CC2500_WriteREG 26DF                                       _WR 0CA9  
                                     _Sw 006D       __end_of_getDimmerLights_StatusFlag 2668  
             _getDimmerLights_StatusFlag 2652                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 1FA2                             ___ftadd@exp1 004A  
                           ___ftadd@exp2 0049                setDimmerLights_Adj@lights 0064  
              __end_of_setLoad_StatusOff 1AEA                     _setDimmerLights_Main 14B5  
                           ___ftadd@sign 0048                                      l312 1DAE  
                                    l313 1DB3                                      l403 2736  
                                    l323 106C                                      l307 1D84  
                                    l340 1A7C                                      l316 1DB6  
                                    l343 1A82                                      l327 107D  
                                    l409 1910                                      l373 26B9  
                                    l374 26BB                                      l385 26CE  
                                    l706 1A56                                      l397 254D  
                                    l922 1104                                      l875 25E0  
                                    _GIE 005F                                      _CRC 00B7  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 0015                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 0166  
                                    _RC0 0070                                      _RB2 006A  
                                    _RA4 0064                                      _LED 00BB  
                                    _RC1 0071                                      _RB3 006B  
                                    _RC2 0072                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC4 0074  
                                    _RC5 0075                                      _RC7 0077  
                                    _RF1 00E4                                      _ISR 0004  
        setPowerFault_Exceptions@command 002C                                      _Sw1 0154  
                                    _Sw2 015D                                      _Buz 0078  
              setDimmerLights_Adj@status 0062                 __end_of_CC2500_WriteByte 26C6  
         ??_setDimmerLights_TriggerERROR 0023                    _Buzzer_Initialization 242C  
                        __end_of_ADC_Set 23EA                          ?_DelayTimejudge 0071  
                                    wreg 0009     setDimmerLights_Initialization@lights 0023  
                        _setDimmerLights 176C                    _setDimmerLights_ERROR 1E94  
                  _setDimmerLights_AdjRF 18C3                    _setDimmerLights_AdjGo 25A5  
                __size_of_setTemp_Enable 000B                    _setDimmerLights_Clear 2575  
                                   ?_ISR 0071                          _PowerFault_Main 23A8  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 190B  
                             Load_Main@i 0031                             ___ftdiv@sign 003D  
                                   l2160 1CDC                 ?_DimmerLightsPointSelect 0071  
                                   l3400 103C                                     l2460 0ED5  
                        __end_of_IOC_Set 24F1                                     l3406 1053  
                                   l1718 2672                                     l3239 278A  
                                   l1744 1B14                                     l2464 1BD9  
                                   l2706 1E8D                                     l2724 2647  
                                   l3429 0C80                                     l6200 0C4C  
                                   l6130 1019                                     l6202 0C56  
                                   l2738 1C5D                                     l2922 23BE  
                                   l1939 1D1F                                     l6140 1041  
                                   l6132 1023                                     l6212 0C72  
                                   l6204 0C5B                                     l6142 1049  
                                   l6134 1028                                     l6126 1012  
                                   l6222 0CA4                                     l6214 0C7C  
                                   l6206 0C5F                                     l6302 0ACC  
                                   l6160 27E9                                     l6232 0CBF  
                                   l6242 09D2                                     l6218 0C92  
                                   l6314 0AE8                                     l6306 0AD4  
                                   l6410 1A48                                     l6402 1A3C  
                                   l6172 0C09                                     l6270 0A42  
                                   l6262 0A29                                     l6334 1553  
                                   l6182 0C1F                                     l6318 0AF0  
                                   l6414 1A4E                                     l6406 1A42  
                                   l6248 09E8                                     l6360 159E  
                                   l6352 1583                                     l6440 188B  
                                   l6176 0C10                                     l6362 15A7  
                                   l6354 1591                                     l6194 0C39  
                                   l6290 0A91                                     l9020 192C  
                                   l6364 15AA                                     l6444 1896  
                                   l6284 0A7B                                     l6390 268A  
                                   l6462 25F4                                     l6710 2662  
                                   l9030 1D4E                                     l9006 10C0  
                                   l6368 15B8                                     l9018 1921  
                                   l6562 1F7B                                     l9122 07C2  
                                   l6564 1F88                                     l9310 14C4  
                                   l9054 1AF8                                     l7462 1C2C  
                                   l6398 1A36                                     l6558 1F75  
                                   l9134 07D8                                     l9230 13A2  
                                   l6816 1C4B                                     l6568 1F94  
                                   l9314 14D1                                     l9410 1210  
                                   l7458 1C25                                     l6658 1B5A  
                                   l8620 2784                                     l9332 1507  
                                   l9420 1270                                     l8710 1FB8  
                                   l9326 14F5                                     l6694 2774  
                                   l9174 1282                                     l8640 1402  
                                   l8720 1FC8                                     l9344 1533  
                                   l9416 1229                                     l6696 277A  
                                   l8706 1FB2                                     l8714 1FBE  
                                   l9514 0E15                                     l6970 1D96  
                                   l9610 163E                                     l9178 1292  
                                   l9098 1CD3                                     l7932 0978  
                                   l7940 09A6                                     l8644 1420  
                                   l8740 1FF0                                     l8724 1FCE  
                                   l9540 0EA7                                     l9516 0E1F  
                                   l9452 0F20                                     l9550 0ECA  
                                   l9198 12D4                                     l9630 0667  
                                   l9454 0F29                                     l7944 09AD  
                                   l8672 118E                                     l8736 1FEA  
                                   l8744 1FF6                                     l8728 1FD4  
                                   l9536 0E88                                     l8824 1666  
                                   l9640 0677                                     l9632 066D  
                                   l7938 09A0                                     l8754 1B36  
                                   l8690 1AD5                                     l7890 1BA9  
                                   l7882 1B8B                                     l8834 168A  
                                   l9642 067F                                     l7884 1B97  
                                   l9548 0EC4                                     l9572 15DC  
                                   l9492 0FCE                                     l9476 0F8F  
                                   l9820 089E                                     l8758 1B41  
                                   l8694 1ADF                                     l7894 1BB2  
                                   l8870 10FC                                     l8838 16A0  
                                   l9582 15F9                                     l9486 0FBD  
                                   l9830 08D7                                     l9904 1DFE  
                                   l8864 10E4                                     l8960 175A  
                                   l8952 1748                                     l9568 15D5  
                                   l9680 0723                                     l9656 06AC  
                                   l9488 0FC3                                     _CFGS 0CAE  
                                   l8786 17D4                                     l9762 0D50  
                                   l8946 172C                                     l9594 1614  
                                   l9666 06DE                                     l9690 0756  
                                   l9842 090E                                     l9826 08CF  
                                   l8868 10F7                                     l9940 044C  
                                   l8964 1763                                     l8956 1751  
                                   l9596 1618                                     l9934 041E  
                                   l9918 03D1                                     l9854 11E1  
                                   l9960 04FD                                     l8992 108F  
                                   l9954 04E1                                     l9962 0515  
                                   l9882 1489                                     l8994 10A7  
                                   l9972 054C                                     l9990 059C  
                                   l9978 0565                                     l9998 05D4  
                                   _FREE 0CAC                                     _LATA 010C  
                                   _LATB 010D                          __end_of_INT_ISR 24A7  
                                   _LATC 010E                                     u4115 101E  
                                   u4135 1037                                     u4305 0C3A  
                                   u4155 1044                                     u4335 0C4D  
                                   u4185 105A                                     u4505 0A43  
                                   _PEIE 005E                                     u4365 0C60  
                                   _INTE 005C                                     _INTF 0059  
                                   u4615 0AF1                                     u4465 09FA  
                                   u4625 0AF7                                     u4545 0A9D  
                                   u4475 0A0A                                     u4715 159F  
                                   u4395 0C73                                     u4555 0AAD  
                                   u4485 0A2A                                     u4495 0A39  
                                   u4655 155A                                     u4575 0AD5  
                                   u7065 0939                                     u4585 0ADB  
                                   u4685 1584                                     u8250 113D  
                                   u8255 113B                                     u8185 278B  
                                   u8195 2790                                     u8490 1007  
                                   u6955 1B8E                                     u6975 1B98  
                                   u8745 1916                                     u6985 1BA2  
                                   u6995 1BAA                                     u9905 08FA  
                                   _LWLO 0CAD                                     _RFSW 00BC  
                                   u9935 11D0                                     _TMR0 0015  
                                   u9865 08B9                                     u9945 11F9  
                                   u9965 1CA4                                     u9985 1458  
                                   u9995 149F                          __end_of_INT_Set 23C9  
                                   _RSSI 00BD                                     _WREN 0CAA  
                                   _Buz1 0148                                     _Load 006E  
                                   _Temp 007D                                     _main 12E7  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 23A8  
                    __end_of_DlyOff_Main 087D                          __end_of_RF_Main 0804  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                                     ltemp 007E  
          __size_of_setRF_Initialization 0007                         _setDimmerReClock 26F8  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                 _setPowerFault_Exceptions 1BB9  
                    DelayTimejudge@value 0022                            _RfPointSelect 2442  
             __end_of_setRFSW_AdjControl 1C73                             ___ftmul@cntr 003C  
                           ___ftmul@sign 003D             __size_of_Temp_Initialization 0003  
            __size_of_setPowerFault_Main 010E                                    ??_ISR 0077  
                           ___fttol@exp1 0058                             ___fttol@lval 0054  
                       __end_of_LED_Main 24D7                                    l10000 05D7  
                                  l10012 0601                                    l10006 05EE  
                                  l10064 130E                                    l10068 1324  
                  ?_setDimmerLights_Main 0071                          ?_setDelayOff_GO 0023  
                  __end_of_setLoad_Count 263C                                    ?_main 0071  
              setControl_Lights_Table@rf 0067                          __end_of___ftadd 0CD7  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0A64  
                                  u10105 0498                                    u10035 1DE5  
                                  u10155 052D                          __end_of___ftmul 0B18  
                        __end_of___fttol 15C1             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                          __end_of___lwdiv 1BB9  
                 _setDimmerLights_Switch 2555            __size_of_CC2500_FrequencyCabr 000C  
                                  _RFSW1 00E6                                    _RFSW2 00E7  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0071  
                     setRF_Learn@command 0022                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
           __size_ofi1_setLoad_StatusOff 0031                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                                  _TMain 00E9                            setRF_Learn@rf 0023  
                                  _MainT 143E                                    _Load1 02A0  
                          __CFG_WRT$HALF 0000                                    _Temp1 0120  
                       __end_of_TMR0_ISR 03A4             __size_of_CC2500_WriteCommand 0010  
                       __end_of_TMR0_Set 24FE                                    _getAD 2668  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 1133  
          DimmerLights_Exceptions@status 002A                            ___ftpack@sign 0024  
                         _setLoad_Enable 2585              __size_of_CC2500_ClearRXFIFO 0004  
                          ??_Buzzer_Main 0020              __size_of_CC2500_ClearTXFIFO 0004  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 0380  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                       ?_CC2500_ReadByte 0071                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0011  
          __end_of_setLED_Initialization 25D6                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                       _setRF_DimmerLights 1133  
            __size_of_Flash_Memory_Write 0031                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0004  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
               setLoad_StatusOff@command 0020         __size_of_DelayOff_Initialization 0008  
                 ?_setLoad_AH_AL_Restore 0071                setDimmerLights_Main@clear 0065  
                  setLoad_Enable@command 0020                   ??_Flash_Memory_Erasing 0020  
                        _getPercentValue 1EEB                       ??_CC2500_SIDLEMode 0024  
                        __initialization 0018                         ?_CC2500_PowerRST 0071  
                      ??_Sw_DimmerOnFunc 0062                     __end_of_getLoad_Safe 2484  
                      ??_setPercentValue 0059                             __end_of_main 1356  
                    ?_setRF_DimmerLights 005D                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 1800  
                   _setSw_Initialization 2409               __size_of_setLoad_StatusOff 0031  
                                 ??_main 006C                            ___fttol@sign1 0053  
                           ?_setLog_Code 0071                  _setControl_Lights_Table 16D9  
                 ?_Buzzer_Initialization 0071                  ??_DlyOff_Initialization 0022  
                __end_of_PowerFault_Main 23AB                               _Receive_GO 0381  
                             _Receive_OK 0382                                ??_IOC_ISR 0071  
                 ?_setDimmerLights_ERROR 0071                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 25E9                                   ?_MainT 0071  
                 ?_setDimmerLights_AdjRF 0071                                ??_INT_ISR 0075  
                 ?_setDimmerLights_AdjGo 0022                 __size_of_setRFSW_Control 0090  
                       ??_setRFSW_Status 0023                                ??_INT_Set 0020  
                 ?_setDimmerLights_Clear 0022                  ??_Switch_Initialization 0025  
                 __end_of_setLoad_Enable 2595                     __end_of_getTemp_Safe 23E3  
                      i1RfPointSelect@rf 0072                     ??_setRF_DimmerLights 005E  
                                 ?_getAD 0020                              _DlyOff_Main 0804  
                                 _ADCON0 009D                                   _ADCON1 009E  
                              ??_RF_Main 006C                                   _ADRESH 009C  
                                 _ADRESL 009B               i1setLoad_StatusOff@command 0071  
                      ?_getPowerFault_AD 0071                           setRF_Enable@rf 0023  
                       __end_of___awtoft 2800                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 106A                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 2565                                   i1l1690 2706  
                                 i1l1685 0394                                   i1l8304 1901  
                                 i1l8440 02C0                                   i1l8432 029E  
                                 i1l8408 023B                                   i1l8360 0136  
                                 i1l8352 0114                                   i1l8328 00B1  
                                 i1l8426 0285                                   i1l8434 02A4  
                                 i1l8346 00FB                                   i1l8354 011A  
                                 i1l8444 02D7                                   i1l8428 028B  
                                 i1l8364 014D                                   i1l8348 0101  
                                 i1l7910 1AAE                                   i1l8454 0306  
                                 i1l8374 017C                                   i1l8456 030C  
                                 i1l8448 02EB                                   i1l8376 0182  
                                 i1l8368 0161                                   i1l7906 1AA4  
                                 i1l8466 0340                                   i1l8474 0375  
                                 i1l8386 01B6                                   i1l8394 01EB  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                     ??_getPowerFault_AD 0024                                   u800_25 036B  
                                 u801_25 0387                                   _OSCCON 0099  
                     __size_of_Load_Main 02AC                                   u764_25 0095  
                                 _TMR0IE 005D                                   _TMR0IF 005A  
                                 u781_25 01E1                                   u783_25 021F  
                                 _IO_Set 1866                       DelayTime_1us@count 0020  
                             _VarProduct 01A0                    _Dimmer_Initialization 23D5  
         __size_of_CC2500_PowerOnInitial 0015            __end_of_CC2500_PowerOnInitial 2612  
                                 _Dimmer 00B9                                   _DlySw1 00CB  
                                 _DlySw2 00D0              __size_of_setLoad_Exceptions 0043  
             __end_of_Mcu_Initialization 26AD                      __end_of_Buzzer_Main 09BB  
                                 _Memory 00E8                                   _Timer0 00EA  
     __end_of_setDimmerLights_TriggerAdj 25C5               _setDimmerLights_TriggerAdj 25B5  
          setDimmerLights_Switch@command 0022                                   ___wmul 2781  
                              ??___ftadd 0044             __size_of_DelayOffPointSelect 0017  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___ftmul 0034                                ??___fttol 004F  
           ?_Flash_Memory_Initialization 0071                                ??___lwdiv 0024  
                        i1_RfPointSelect 2422              setDimmerLights_AdjRF@lights 0060  
                 ??_setDimmerLights_Main 0065                                   _r_data 00C2  
                                 _s_data 00C3                                   _setLED 1FA2  
                       _DimmerLightsIntr 00BA                    ?_setSw_Initialization 0071  
                  setDimmerLights@status 0024                                   _setBuz 13C7  
                     __size_of_Temp_Main 0003              __end_of_Load_Initialization 24E4  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0071  
                  ___ftmul@f3_as_product 0039             ??_getDimmerLights_StatusFlag 0020  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                    __end_of_SwPointSelect 25FD  
                        ?_setLoad_Enable 0071                  getPowerFault_AD@channel 0028  
                          ?_setRF_Enable 0022                           _setTemp_Enable 2463  
                        _RfSWPointSelect 263C             __size_of_Flash_Memory_Modify 006E  
            __size_of_DimmerLights_Close 001B                  __size_of_LedPointSelect 0022  
                    Flash_Memory_Write@i 0021             __size_of_Flash_Memory_Unlock 0009  
                             _TouchPower 23BE                        ?_Sw_DimmerAdjFunc 0071  
            __size_of_CC2500_InitPATable 001F                      CC2500_TxData@loop_e 0025  
                __end_of_getPercentValue 1F46         __end_of_CC2500_registers_address 182F  
   __end_of_setPowerFault_Initialization 25A5    __size_of_setPowerFault_Initialization 0010  
           _setPowerFault_Initialization 2595                  __end_of__initialization 0055  
            ??_PowerFault_Initialization 0021                          ??_RfPointSelect 0020  
            setDimmerLights_AdjGo@lights 0023                                ?_LED_Main 0071  
                             ___ftadd@f1 003E                               ___ftadd@f2 0041  
                     ??_Sw_DimmerAdjFunc 0024                      setSw_Enable@command 0022  
                             ___ftdiv@f1 0031                               ___ftdiv@f2 002E  
                             ___ftdiv@f3 0039                        ?_Sw_DimmerOffFunc 0071  
                             ___awtoft@c 0028             ?_DimmerLights_Initialization 0071  
                             ___ftmul@f1 002E                               ___ftmul@f2 0031  
                          __end_of_MainT 14B5                               ___fttol@f1 004B  
                         __pcstackCOMMON 0071                       ??_Sw_DimmerOffFunc 0062  
                           __pidataBANK3 27BE                            __end_of_getAD 267E  
                              ?_TMR0_ISR 0071                                ?_TMR0_Set 0071  
                 setLoad_AH_AL_Restore@i 0021             __size_of_setDimmerLights_Adj 0044  
                     _LED_Initialization 24BF                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0065                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071                __size_of_setLoad_StatusOn 0032  
          ??_Flash_Memory_Initialization 005D                 __size_of_setRF_ReceiveGO 000C  
                       ?_setDimmerLights 0024                        __end_of_Load_Main 0650  
                       ?_PowerFault_Main 0071                 __end_of_setDimmerReClock 2712  
                     __size_of_getRxData 0052                      ?_LED_Initialization 0071  
                 __end_of_setTemp_Enable 246E                        ?_CC2500_WriteByte 0071  
                                ??_MainT 002A                           ??_setRF_Enable 0023  
                         _DimmerLights11 0079                           _DimmerLights22 007A  
                   __size_of_setLED_Main 0040                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023                      _Temp_Initialization 23AB  
                     ??_CC2500_WriteByte 0020               ??_setPowerFault_Exceptions 002B  
           setDimmerLights_Switch@lights 0023                               __pbssBANK0 006C  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pbssBANK3 01C0                               __pbssBANK4 0220  
                             __pbssBANK5 02A0                              _Buzzer_Main 0913  
                      ??_setRFSW_Control 0062                        __end_of_Temp_Main 0800  
                 ?_Dimmer_Initialization 0071                                  ?_IO_Set 0071  
                             ??_LED_Main 0025                  _DelayOff_Initialization 23F1  
                  __size_of_getLoad_Safe 000B            ?_setPowerFault_Initialization 0071  
                             _getPF_Safe 2401                            ??_Switch_Main 006A  
                         DelayTime_1us@i 0022                           DelayTime_1us@j 0024  
                   ??_LED_Initialization 0025                             _DimmerLights 006C  
                      LedPointSelect@led 0021                  __end_ofi1_RfPointSelect 242C  
                    i1_setLoad_StatusOff 1A88                       __size_of_setINT_GO 0009  
                 __size_of_DelayOff_Main 0008                     __size_of_setRF_Learn 000E  
                            setBuz@count 0029                               __pmaintext 12E7  
                    _CC2500_WriteCommand 2545                     ?_Temp_Initialization 0071  
       __size_of_DimmerLightsPointSelect 0013                         ??_setDelayOff_GO 0025  
          ??_DimmerLights_Initialization 0024                                  ?___wmul 0020  
                             ??_TMR0_ISR 0073                            ?_setTemp_Main 0071  
                             ??_TMR0_Set 0020                               _getLoad_AD 087D  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0071                       __size_of_setTxData 00C9  
                ?_setDimmerLights_Switch 0022                                  ?_setLED 0022  
                 __size_of_DelayTime_1us 0026                                  _ADC_Set 23E3  
              _PowerFault_Initialization 23A5                                  ?_setBuz 0026  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             _getTemp_AD 119E             __end_of_setRF_Initialization 23F1  
                  __size_of_getTemp_Safe 0007                            ?_setSw_Status 0022  
                     _setRFSW_AdjControl 1C33                  __end_of_RfSWPointSelect 2652  
                      Sw_DimmerOnFunc@sw 0063                     ?i1_setLoad_StatusOff 0071  
                                _IOC_ISR 18E6                          ?_setTemp_Enable 0071  
                                _IOC_Set 24E4                     __size_of_setLog_Code 0048  
                                _INT_ISR 249B                                  _INT_Set 23C3  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 1DC1  
                      _Flash_Memory_Read 26DF                   __size_of_CC2500_RxData 0064  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                             _getLoad_Safe 2479  
                            setTxData@rf 0023                                  _RF_Data 00A0  
                                _RF_Main 0800                       ?_Flash_Memory_Main 0071  
                     ?_Flash_Memory_Read 0071          __end_of_setControl_Lights_Table 176C  
                            ?_TouchPower 0071                          _Sw_DimmerOnFunc 1278  
                        _setPercentValue 1E06                  ??_setLoad_AH_AL_Restore 0020  
                          setLog_Code@rf 002B                         ?_getPercentValue 0071  
                                _Dimmer1 00E1             __end_of_CC2500_FrequencyCabr 24B3  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00D9  
                                _VarLED2 00DD                        __end_of_getRxData 07FD  
             __end_of_setPowerFault_Main 0EDD                 _CC2500_registers_address 1800  
                         RF_RxDisable@rf 0024                    ??_Temp_Initialization 0021  
        __end_of_setDimmerLights_Trigger 2575                                  _Product 006F  
                   ??_setRFSW_AdjControl 0064                             _getTemp_Safe 23DC  
                         ??_setTemp_Main 002D           __end_of_setDimmerLights_Switch 2565  
                                ___ftadd 0BE1                           ??_setSw_Enable 0022  
                                ___ftdiv 09BB                          __size_of___wmul 001E  
                                ___ftmul 0A64                                  ___fttol 153A  
                    __end_of_Switch_Main 2419                                  ___lwdiv 1B82  
                ??_Buzzer_Initialization 0020                 ??_setOverTemp_Exceptions 002B  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005E                     setRFSW_AdjControl@sw 0066  
                ??_setDimmerLights_ERROR 0024                          __size_of_setBuz 0077  
                         ??_setSw_Status 0023                                  __ptext1 119E  
                                __ptext2 1C73                                  __ptext3 087D  
                                __ptext4 2668                                  __ptext5 07FD  
                                __ptext6 0EDD                                  __ptext7 1CB4  
                                __ptext8 23AB                                  __ptext9 2484  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0004                  ??_setDimmerLights_Clear 0023  
                    Sw_DimmerOnFunc@Idle 0062                    ??i1_setLoad_StatusOff 0072  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 1E06  
              __end_of_Flash_Memory_Read 26F8                               _setRF_Main 15C1  
                          _DelayOff_Main 23F9                        _DimmerLights_Main 2458  
                      __end_of_setINT_GO 1009           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 2442  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 23B2  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 23B6  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 187F  
                    _DelayOffPointSelect 267E                                  clrloop0 23D0  
         __size_of_Switch_Initialization 000D            __end_of_Switch_Initialization 250B  
                   end_of_initialization 0055                ??_DelayOff_Initialization 0023  
                             _setLoad_GO 244D                        _CC2500_InitSetREG 197E  
                          _DelayTime_1us 190B                        __end_of_setTxData 0BE1  
             __end_of_Flash_Memory_Write 1B1B                                  init_ram 23C9  
                     ?_CC2500_InitSetREG 0071                      ??_DimmerLights_Main 0067  
                   Flash_Memory_Read@ret 0023                                  initloop 23CA  
                             _setSw_Main 0650                    CC2500_ReadByte@loop_b 0021  
                      _CC2500_ReadStatus 272D                              ?_getPF_Safe 0071  
                 __size_of_setLoad_Count 0015                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 25C5                            _CC2500_Enable 0380  
                       ?i1_RfPointSelect 0071                       ?_CC2500_ReadStatus 0071  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 000B  
               __size_of_CC2500_ReadByte 001D                            _CC2500_RxData 106A  
                          _CC2500_TxData 1D7D                      ??_CC2500_InitSetREG 0025  
                   __end_of_setRF_Enable 19D2           ??_setPowerFault_Initialization 0020  
            ?_setDimmerLights_TriggerAdj 0022                __size_of_getPowerFault_AD 0041  
          __size_of_Flash_Memory_Erasing 000C                     ?_DelayOffPointSelect 0071  
                    _Flash_Memory_Modify 120A                  _DimmerLights_Exceptions 10CE  
                            ?_getLoad_AD 0071                             __pstringtext 1800  
                    _Flash_Memory_Unlock 2419                      ??_CC2500_ReadStatus 0022  
                 setRF_Initialization@rf 0071                         _setLoad_StatusOn 1B1B  
       getDimmerLights_StatusFlag@Status 0021                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0071                setLoad_Exceptions@command 002C  
                    __size_of_TouchPower 0005                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 2463  
                     _Mcu_Initialization 2695                         ??_setLoad_Enable 0020  
               __size_of_CC2500_PowerRST 0030                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                          _setSw_Main$4704 0067  
                        _setSw_Main$4705 0068                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 18A1                  __end_of_Sw_DimmerOnFunc 12E7  
                __end_of_setPercentValue 1E4C                 __size_of_CC2500_WriteREG 0019  
              __end_of_CC2500_InitSetREG 19A8                      ?_Mcu_Initialization 0071  
       __end_of_setPowerFault_Exceptions 1BF3                     ?_Flash_Memory_Modify 0071  
            __size_of_setRF_DimmerLights 006B                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 1D39                     ?_Flash_Memory_Unlock 0071  
              __end_of_CC2500_ReadStatus 2748                            ?_RF_RxDisable 0071  
             __end_of_setLoad_Exceptions 1D39                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 187F                     _setRF_Initialization 23EA  
                            _Switch_Main 2411              setDimmerLights_Clear@lights 0023  
                      __size_of_LED_Main 000C                           ?_CC2500_RxData 0071  
                         ?_CC2500_TxData 0071                  _DimmerLightsPointSelect 25D6  
                            ___ftmul@exp 0038                    _CC2500_PowerOnInitial 25FD  
                   ??_Mcu_Initialization 0021                    ??_DelayOffPointSelect 0020  
                   ?_setDimmerLights_Adj 0062                __size_of_Sw_DimmerAdjFunc 0026  
                   setRF_DimmerLights@on 005D                           __end_of___wmul 279F  
                           setRF_Main@rf 006A                        __size_of_TMR0_ISR 034B  
        __size_of_setOverTemp_Exceptions 0042                        __size_of_TMR0_Set 000D  
          __size_of_setDimmerLights_Main 0085                           __end_of_setLED 2000  
                         __end_of_setBuz 143E                            _setLoad_Count 2627  
        _getDimmerLights_StatusFlag$1814 0022                     _CC2500_FrequencyCabr 24A7  
                setLoad_StatusOn@command 0020                __size_of_Sw_DimmerOffFunc 0071  
             __size_of_Flash_Memory_Main 0045               __size_of_Flash_Memory_Read 0019  
                            ?_setRF_Main 0071                          _setRFSW_Control 1649  
                    __size_of_getPF_Safe 0008                        ?_setDimmerReClock 0071  
                    start_initialization 0018                        _setRF_DimmerValue 1B4D  
                        ?_LedPointSelect 0071               __end_of_DimmerLights_Close 272D  
                              _Load_Main 03A4                  setLoad_StatusOff@lights 0021  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
           __size_of_Load_Initialization 000D       __size_of_PowerFault_Initialization 0003  
                     ??_setDimmerReClock 0071                       ?_setRF_DimmerValue 0071  
             __end_of_CC2500_InitPATable 27BE          __size_of_setTemp_Initialization 000B  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setTemp_Main 1000                              ?_setLoad_GO 0071  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 2764  
                        RfPointSelect@rf 0021                      __size_of_getLoad_AD 0096  
                           ?_Buzzer_Main 0071                                 ??_IO_Set 0020  
                              _VarErrLED 00D5                              ?_setSw_Main 0071  
                    ??_setRF_DimmerValue 0061                      __size_of_getTemp_AD 006C  
                 ?_setLED_Initialization 0071                     __end_of_setSw_Status 2545  
                     Sw_DimmerAdjFunc@sw 0024                    ?_setRF_Initialization 0071  
              i1setLoad_StatusOff@lights 0072                                _VarMemory 0220  
                __size_of_setRFSW_Status 000F                    __end_of_RfPointSelect 244D  
              __size_of_CC2500_WriteByte 0019                                _VarTimer0 00C4  
                              _Temp_Main 07FD                ??_DimmerLights_Exceptions 002A  
          setOverTemp_Exceptions@command 002C                                _Rx_Length 00BE  
                setRF_DimmerValue@lights 0063                    ??_setDimmerLights_Adj 0063  
                               ??___wmul 0024                   __size_of_SwPointSelect 0014  
                              _Tx_Length 00C0                              __pdataBANK3 01A0  
                               ??_setLED 0023                         ??_setTemp_Enable 0020  
                               ?_ADC_Set 0071                                 ??_setBuz 0028  
                        ??_DelayOff_Main 0065                        ??_CC2500_ReadByte 0020  
                         ?_setLoad_Count 0071                         _CC2500_SIDLEMode 23B6  
             __size_of_DimmerLights_Main 000B                __end_of_setRF_DimmerValue 1B82  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0071  
                        _setRF_Main$4353 006B                              __pbssCOMMON 0078  
                               ?_IOC_Set 0071                                ___latbits 0003  
                             ?_Load_Main 0071                    setTemp_Enable@command 0020  
                               ?_INT_ISR 0071                      setRF_Enable@command 0022  
                       ?_Sw_DimmerOnFunc 0071                            __pcstackBANK0 0020  
                               ?_INT_Set 0071                         ?_setPercentValue 0071  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002A  
               __size_of_setDimmerLights 0094                            DlyOff_Main@sw 0064  
                      ??_CC2500_PowerRST 0026                                 ?_RF_Main 0071  
           setDimmerLights_Clear@command 0022                             ??_TouchPower 0020  
               __size_of_PowerFault_Main 0003                     __size_of_DlyOff_Main 0079  
             __size_of_CC2500_ReadStatus 001B                   _setOverTemp_Exceptions 1CB4  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 012E                            _DimmerLights2 013B  
                  CC2500_WriteREG@w_addr 0024                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020           __size_of_setLoad_AH_AL_Restore 0022  
                  __size_of_setRF_Enable 002A                          ??_CC2500_RxData 0024  
          __end_of_setLoad_AH_AL_Restore 18C3                  __size_of_setRF_RxStatus 000E  
                        ??_CC2500_TxData 0024                                __pnvBANK0 006F  
                              __pnvBANK1 00E8              __size_of_LED_Initialization 000C  
                 ?_CC2500_PowerOnInitial 0071                               ?_Temp_Main 0071  
                    __size_of_setRF_Main 0088                         ___lwdiv@dividend 0022  
                  DelayOffPointSelect@sw 0021                               setBuz@time 0026  
                    setDelayOff_GO@value 0024                 ?_setControl_Lights_Table 0071  
                 _setTemp_Initialization 2484                         _getPowerFault_AD 1C73  
      __size_of_setPowerFault_Exceptions 003A      __end_of_Flash_Memory_Initialization 0DCF  
            _Flash_Memory_Initialization 0CD7                ?_setPowerFault_Exceptions 0071  
                              __ptext100 0804                                __ptext101 0B18  
                              __ptext110 1009                                __ptext102 2442  
                              __ptext111 2527                                __ptext103 2536  
                              __ptext120 267E                                __ptext112 263C  
                              __ptext104 25E9                                __ptext121 25FD  
                              __ptext113 2565                                __ptext105 1133  
                              __ptext130 23AE                                __ptext122 23B6  
                              __ptext114 2555                                __ptext106 1E06  
                              __ptext131 2545                                __ptext123 1A58  
                              __ptext115 25D6                                __ptext107 153A  
                              __ptext140 249B                                __ptext132 26AD  
                              __ptext124 197E                                __ptext116 13C7  
                              __ptext108 09BB                                __ptext141 248F  
                              __ptext133 0913                                __ptext125 279F  
                              __ptext117 2781                                __ptext109 27DE  
                               ?___ftadd 003E                                __ptext142 2422  
                              __ptext134 242C                                __ptext126 26C6  
                              __ptext118 23F1                                __ptext127 24A7  
                              __ptext119 2437                                __ptext136 0059  
                              __ptext128 190B                                __ptext137 1A88  
                              __ptext129 23B2                                __ptext138 18E6  
                              __ptext139 26F8                                _getRxData 07AB  
                               ?___ftdiv 002E                                 ?___ftmul 002E  
                               ?___fttol 004B                                 ?___lwdiv 0020  
                __end_of_setRFSW_Control 16D9                          _setRF_ReceiveGO 248F  
                    __size_of_setLoad_GO 000B            __size_of_setSw_Initialization 0008  
         __size_of_Buzzer_Initialization 000B            __end_of_Buzzer_Initialization 2437  
                       getPercentValue@i 005C                         setPercentValue@i 005A  
                          ??_setLog_Code 002A                       __end_of_TouchPower 23C3  
                     _setPowerFault_Main 0DCF       setDimmerLights_TriggerERROR@lights 0023  
         __size_of_setDimmerLights_ERROR 0057                 ?_setDimmerLights_Trigger 0022  
                        DelayTimejudge@i 0021                      __size_of_setSw_Main 015B  
          __end_of_setDimmerLights_ERROR 1EEB             CC2500_ReadStatus@status_addr 0023  
         __size_of_setDimmerLights_AdjRF 0023           __size_of_setDimmerLights_AdjGo 0010  
          __end_of_setDimmerLights_AdjRF 18E6            __end_of_setDimmerLights_AdjGo 25B5  
                 CC2500_WriteByte@loop_a 0021           __size_of_setDimmerLights_Clear 0010  
          __end_of_setDimmerLights_Clear 2585                           __size_of_MainT 0077  
                              _r_address 00C1             __end_of_CC2500_patable_vaule 1866  
                    ?_setPowerFault_Main 0071                           __size_of_getAD 0016  
                           _setRF_Enable 19A8                         ___lwdiv@quotient 0025  
                __size_of_DelayTimejudge 002E                            _SwPointSelect 25E9  
                     Sw_DimmerOffFunc@sw 0064                                _setINT_GO 1000  
                    __end_of_setLED_Main 1C33                 __end_of_setLoad_StatusOn 1B4D  
                 ??_setRF_Initialization 0020              __end_of_Temp_Initialization 23AE  
                      _CC2500_rfSettings 182F                           ___wmul@product 0024  
                               _LED_Main 24CB                             ??_getPF_Safe 0020  
                        SwPointSelect@sw 0021                                clear_ram0 23CF  
               CC2500_InitPATable@loop_d 0027                                _setTxData 0B18  
    __end_of_DimmerLights_Initialization 2627              _DimmerLights_Initialization 2612  
                     _CC2500_ClearRXFIFO 23AE                       _CC2500_ClearTXFIFO 23B2  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0061  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 2527  
                   ??_setPowerFault_Main 002D                 __size_of_getPercentValue 005B  
               setRF_DimmerLights@status 0060                   setRF_ReceiveGO@command 0073  
            __size_of_setRFSW_AdjControl 0040                       _Flash_Memory_Write 1AEA  
                             ?_getRxData 0071                                 _TMR0_ISR 0059  
                           ??_getLoad_AD 0024                   CC2500_InitSetREG@temp1 0026  
                 CC2500_InitSetREG@temp2 0027              __end_ofi1_setLoad_StatusOff 1AB9  
                      setRF_ReceiveGO@rf 0074                                 _TMR0_Set 24F1  
                       _Sw_DimmerAdjFunc 1931                      ?_CC2500_ClearRXFIFO 0071  
                    ?_CC2500_ClearTXFIFO 0071                          ??_setLoad_Count 0020  
      setDimmerLights_TriggerAdj@command 0022                                 _RF_Count 00B5  
                   __end_of_RF_RxDisable 197E                             ??_getTemp_AD 0024  
            __end_of_CC2500_WriteCommand 2555                   ??_CC2500_FrequencyCabr 0026  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
                      ___wmul@multiplier 0020               __size_of_setRF_DimmerValue 0035  
                    ?_Flash_Memory_Write 0071                         _Sw_DimmerOffFunc 1356  
                  __size_of_setTemp_Main 0123             __end_of_MainT_Initialization 2479  
                __size_of_setDelayOff_GO 005C                    __size_of_setSw_Enable 001C  
                               _DelayOff 00B8                             setSw_Main@sw 0069  
                            ??_Load_Main 002D                       __end_of_getPF_Safe 2409  
                       __size_of_IOC_ISR 0025                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 24BF                           ?_SwPointSelect 0071  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 000C                           setLED_Main@led 0024  
                       __size_of_INT_Set 0006                      __end_of_setLog_Code 1E94  
                  _DlyOff_Initialization 2437                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 185E  
                       __size_of_RF_Main 0004                   setLoad_StatusOn@lights 0021  
                     __end_of_getLoad_AD 0913                    _Switch_Initialization 24FE  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                         _setRFSW_Status 2527                     __size_of_Buzzer_Main 00A8  
                     __end_of_getTemp_AD 120A                               ?_setTxData 0071  
                           ?_Switch_Main 0071                         _CC2500_WriteByte 26AD  
                               _VarTMain 01C0                        getLoad_AD@channel 0029  
           Flash_Memory_Initialization@i 005E                  __end_of_setRF_ReceiveGO 249B  
                            ??_Temp_Main 0030                        ??_PowerFault_Main 002F  
                      setRFSW_Control@sw 0063                      _Load_Initialization 24D7  
                              setLED@led 0023                                 _RxStatus 0383  
   __end_of_setDimmerLights_TriggerERROR 19FD    __size_of_setDimmerLights_TriggerERROR 002B  
           _setDimmerLights_TriggerERROR 19D2                                 _TxStatus 0386  
                           _setTemp_Main 0EDD                       _setLoad_Exceptions 1CF6  
                       __size_of___ftadd 00F6                         ?_setRFSW_Control 0071  
                       __size_of___ftdiv 00A9                             _setSw_Enable 2748  
                       __size_of___ftmul 00B4                         __size_of___fttol 0087  
                       __size_of___lwdiv 0037                 __size_ofi1_RfPointSelect 000A  
                               ___awtoft 27DE                         ??_LedPointSelect 0020  
                               ___ftpack 1009                             _setSw_Status 2536  
                      getTemp_AD@channel 0028                             ??_setRF_Main 0069  
                   CC2500_WriteREG@value 0022                              _setLED_Main 1BF3  
                    ?_setLoad_Exceptions 0071                    setRFSW_Status@command 0022  
             __end_of_setRF_DimmerLights 119E                 ?_DelayOff_Initialization 0071  
                       setDelayOff_GO@sw 0027                          ___lwdiv@divisor 0020  
                   ?_Load_Initialization 0071                          ___lwdiv@counter 0027  
                               __ptext10 2411                                 __ptext11 0650  
                               __ptext20 23BE                                 __ptext12 2519  
                               __ptext21 0800                                 __ptext13 1278  
                               __ptext30 1B4D                                 __ptext22 15C1  
                               __ptext14 1356                                 __ptext31 18C3  
                               __ptext23 07AB                                 __ptext15 1931  
                               __ptext40 2764                                 __ptext32 1EEB  
                               __ptext24 1E4C                                 __ptext16 25B5  
                               __ptext41 23BA                                 __ptext33 0A64  
                               __ptext25 16D9                                 __ptext17 25A5  
                               __ptext50 24F1                                 __ptext42 23EA  
                               __ptext34 0BE1                                 __ptext26 1649  
                               __ptext18 24FE                                 __ptext51 1866  
                               __ptext43 23A8                                 __ptext35 1957  
                               __ptext27 1F46                                 __ptext19 2409  
                               __ptext60 1CF6                                 __ptext52 24E4  
                               __ptext44 0DCF                                 __ptext36 1D7D  
                               __ptext28 1A2A                                 __ptext61 2748  
                               __ptext53 23C3                                 __ptext45 1BB9  
                               __ptext37 106A                                 __ptext29 1C33  
                               __ptext70 1B82                                 __ptext62 19A8  
                               __ptext54 23E3                                 __ptext46 2479  
                               __ptext38 250B                                 __ptext71 24D7  
                               __ptext63 1000                                 __ptext55 246E  
                               __ptext47 23A5                                 __ptext39 272D  
                               __ptext80 0CD7                                 __ptext72 18A1  
                               __ptext64 10CE                                 __ptext56 143E  
                               __ptext48 2595                                 __ptext81 1AEA  
                               __ptext73 24CB                                 __ptext65 19D2  
                               __ptext57 2463                                 __ptext49 2695  
                               __ptext90 2627                                 __ptext82 2419  
                               __ptext74 1BF3                                 __ptext66 1E94  
                               __ptext58 2585                                 __ptext91 1FA2  
                               __ptext83 26DF                                 __ptext75 24BF  
                               __ptext67 2575                                 __ptext59 03A4  
                               __ptext92 187F                                 __ptext84 2458  
                               __ptext76 25C5                                 __ptext68 23DC  
                               __ptext93 2712                                 __ptext85 14B5  
                               __ptext77 1DC1                                 __ptext69 2401  
                               __ptext94 244D                                 __ptext86 1D39  
                               __ptext78 120A                                 __ptext95 2652  
                               __ptext87 1AB9                                 __ptext79 24B3  
                               __ptext96 2612                                 __ptext88 176C  
                               __ptext97 19FD                                 __ptext89 1B1B  
                               __ptext98 23D5                                 __ptext99 23F9  
                           ??_setLoad_GO 0020                  ??_setLED_Initialization 0024  
               __size_of_RfSWPointSelect 0016           __size_of_Dimmer_Initialization 0007  
                 __end_of_setRFSW_Status 2536            __end_of_Dimmer_Initialization 23DC  
           __end_of_setDimmerLights_Main 153A              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 0065                            setLED@command 0022  
                          __size_of_main 006F                              _setRF_Learn 2519  
               __end_of_CC2500_SIDLEMode 23BA                           _setRF_RxStatus 250B  
             setDimmerLights_Main@lights 0066              __end_of_DelayOffPointSelect 2695  
             CC2500_WriteCommand@command 0023                       _DimmerLights_Close 2712  
               ??_setDimmerLights_Switch 0023                __size_of_setDimmerReClock 001A  
                   ??_setLoad_Exceptions 002B                          _CC2500_ReadByte 2764  
                     _CC2500_InitPATable 279F      __size_of_getDimmerLights_StatusFlag 0016  
          setDimmerLights_Trigger@lights 0023                       __end_of_setRF_Main 1649  
            __size_of_Mcu_Initialization 0018                     _CC2500_patable_vaule 185E  
                            ??_getRxData 0068                      ?_DimmerLights_Close 0071  
       setDimmerLights_TriggerAdj@lights 0023            ?_setDimmerLights_TriggerERROR 0022  
                    ?_CC2500_InitPATable 0071                          _CC2500_PowerRST 1A58  
                     __end_of_setLoad_GO 2458              __end_of_Flash_Memory_Modify 1278  
                      ??_getPercentValue 0059                              _setLog_Code 1E4C  
                  setRF_RxStatus@command 0022              __end_of_Flash_Memory_Unlock 2422  
                        ??_SwPointSelect 0020                          _CC2500_WriteREG 26C6  
                     __end_of_setSw_Main 07AB                        setLoad_GO@command 0020  
                  ??_Load_Initialization 0022                            _Transceive_GO 0384  
                          _Transceive_OK 0385                     setLoad_Count@command 0021  
                 ?_DlyOff_Initialization 0071                  ?_setOverTemp_Exceptions 0071  
                         _DelayTimejudge 1A2A                            ?_getLoad_Safe 0071  
                            pic14e$flags 007E                 __end_of_getPowerFault_AD 1CB4  
                   ??_DimmerLights_Close 0023                              ??_setINT_GO 0020  
                               intlevel1 0000                     ??_CC2500_InitPATable 0025  
                __size_of_setLoad_Enable 0010                   ?_Switch_Initialization 0071  
                 __end_of_setRF_RxStatus 2519                          ?_setRFSW_Status 0022  
                ??_CC2500_PowerOnInitial 0029   __end_of_setDimmerLights_Initialization 1A2A  
__size_of_setDimmerLights_Initialization 002D           _setDimmerLights_Initialization 19FD  
            __end_of_setDimmerLights_Adj 1D7D                  ?_setTemp_Initialization 0071  
                            ??_setTxData 0022                         ?_setRF_ReceiveGO 0073  
                 CC2500_InitPATable@temp 0026                     _MainT_Initialization 246E  
                  __size_of_RF_RxDisable 0027                        _RF_Initialization 23BA  
                            getLoad_AD@i 002B                              getLoad_AD@j 002A  
                          ?_getTemp_Safe 0071                     _Flash_Memory_Erasing 24B3  
                     ?_RF_Initialization 0071                               _SPI0Buffer 00BF  
        __end_of_DelayOff_Initialization 23F9                               _OPTION_REG 0095  
                  __end_of_DelayOff_Main 2401                      ??_RF_Initialization 0021  
                            getRxData@rf 0068                           _setDelayOff_GO 1F46  
       __size_of_setControl_Lights_Table 0093                        _setLoad_StatusOff 1AB9  
                 __end_of_DelayTimejudge 1A58           __end_of_setOverTemp_Exceptions 1CF6  
                 __size_of_RfPointSelect 000B                        ??i1_RfPointSelect 0071  
                         ??_getLoad_Safe 0020     __size_of_Flash_Memory_Initialization 00F8  
                          ??_DlyOff_Main 0062                       ?_setLoad_StatusOff 0020  
                  __end_of_DelayTime_1us 1931                 __end_of_Sw_DimmerAdjFunc 1957  
                __end_of_CC2500_ReadByte 2781             __end_of_setSw_Initialization 2411  
                        ?_setRF_RxStatus 0022                     getPercentValue@value 005B  
                           _RF_RxDisable 1957               ?_PowerFault_Initialization 0071  
             __end_of_LED_Initialization 24CB         __size_of_setDimmerLights_Trigger 0010  
                      ?_setLoad_StatusOn 0020           __end_of_setTemp_Initialization 248F  
               __size_of_Sw_DimmerOnFunc 006F                      ??_setLoad_StatusOff 0021  
               ?_DimmerLights_Exceptions 0071                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 23BE  
               __end_of_Sw_DimmerOffFunc 13C7                       ??_setLoad_StatusOn 0021  
        __size_of_setDimmerLights_Switch 0010                        ??_RfSWPointSelect 0020  
                  ?_MainT_Initialization 0071                         setRF_RxStatus@rf 0023  
                  __end_of_CC2500_RxData 10CE                    __end_of_CC2500_TxData 1DC1  
                         ??_getTemp_Safe 0020                    _setLoad_AH_AL_Restore 18A1  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 1A88  
