

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Sep 09 17:30:26 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	intentry,global,class=CODE,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	dabs	1,0x7E,2
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  0090                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  011D                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  018E                     	;# 
   188  0191                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0193                     	;# 
   192  0193                     	;# 
   193  0194                     	;# 
   194  0195                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0199                     	;# 
   198  019A                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019C                     	;# 
   204  019C                     	;# 
   205  019D                     	;# 
   206  019E                     	;# 
   207  019F                     	;# 
   208  020D                     	;# 
   209  0210                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0214                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0217                     	;# 
   225  0291                     	;# 
   226  0291                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0298                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  0394                     	;# 
   234  0395                     	;# 
   235  0396                     	;# 
   236  0FE4                     	;# 
   237  0FE5                     	;# 
   238  0FE6                     	;# 
   239  0FE7                     	;# 
   240  0FE8                     	;# 
   241  0FE9                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  0116                     	;# 
   294  0117                     	;# 
   295  011D                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  018E                     	;# 
   299  0191                     	;# 
   300  0191                     	;# 
   301  0192                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0194                     	;# 
   305  0195                     	;# 
   306  0196                     	;# 
   307  0197                     	;# 
   308  0199                     	;# 
   309  019A                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  019C                     	;# 
   316  019D                     	;# 
   317  019E                     	;# 
   318  019F                     	;# 
   319  020D                     	;# 
   320  0210                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0291                     	;# 
   337  0291                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0298                     	;# 
   341  0298                     	;# 
   342  0299                     	;# 
   343  029A                     	;# 
   344  0394                     	;# 
   345  0395                     	;# 
   346  0396                     	;# 
   347  0FE4                     	;# 
   348  0FE5                     	;# 
   349  0FE6                     	;# 
   350  0FE7                     	;# 
   351  0FE8                     	;# 
   352  0FE9                     	;# 
   353  0FEA                     	;# 
   354  0FEB                     	;# 
   355  0FED                     	;# 
   356  0FEE                     	;# 
   357  0FEF                     	;# 
   358  0000                     	;# 
   359  0001                     	;# 
   360  0002                     	;# 
   361  0003                     	;# 
   362  0004                     	;# 
   363  0005                     	;# 
   364  0006                     	;# 
   365  0007                     	;# 
   366  0008                     	;# 
   367  0009                     	;# 
   368  000A                     	;# 
   369  000B                     	;# 
   370  000C                     	;# 
   371  000D                     	;# 
   372  000E                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  0090                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0097                     	;# 
   394  0099                     	;# 
   395  009A                     	;# 
   396  009B                     	;# 
   397  009B                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009E                     	;# 
   401  010C                     	;# 
   402  010D                     	;# 
   403  010E                     	;# 
   404  0116                     	;# 
   405  0117                     	;# 
   406  011D                     	;# 
   407  018C                     	;# 
   408  018D                     	;# 
   409  018E                     	;# 
   410  0191                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  0193                     	;# 
   414  0193                     	;# 
   415  0194                     	;# 
   416  0195                     	;# 
   417  0196                     	;# 
   418  0197                     	;# 
   419  0199                     	;# 
   420  019A                     	;# 
   421  019B                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019C                     	;# 
   426  019C                     	;# 
   427  019D                     	;# 
   428  019E                     	;# 
   429  019F                     	;# 
   430  020D                     	;# 
   431  0210                     	;# 
   432  0211                     	;# 
   433  0211                     	;# 
   434  0212                     	;# 
   435  0212                     	;# 
   436  0213                     	;# 
   437  0213                     	;# 
   438  0214                     	;# 
   439  0214                     	;# 
   440  0215                     	;# 
   441  0215                     	;# 
   442  0215                     	;# 
   443  0216                     	;# 
   444  0216                     	;# 
   445  0217                     	;# 
   446  0217                     	;# 
   447  0291                     	;# 
   448  0291                     	;# 
   449  0292                     	;# 
   450  0293                     	;# 
   451  0298                     	;# 
   452  0298                     	;# 
   453  0299                     	;# 
   454  029A                     	;# 
   455  0394                     	;# 
   456  0395                     	;# 
   457  0396                     	;# 
   458  0FE4                     	;# 
   459  0FE5                     	;# 
   460  0FE6                     	;# 
   461  0FE7                     	;# 
   462  0FE8                     	;# 
   463  0FE9                     	;# 
   464  0FEA                     	;# 
   465  0FEB                     	;# 
   466  0FED                     	;# 
   467  0FEE                     	;# 
   468  0FEF                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  0010                     	;# 
   485  0011                     	;# 
   486  0012                     	;# 
   487  0015                     	;# 
   488  0016                     	;# 
   489  0016                     	;# 
   490  0017                     	;# 
   491  0018                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  001B                     	;# 
   495  001C                     	;# 
   496  008C                     	;# 
   497  008D                     	;# 
   498  008E                     	;# 
   499  0090                     	;# 
   500  0091                     	;# 
   501  0092                     	;# 
   502  0095                     	;# 
   503  0096                     	;# 
   504  0097                     	;# 
   505  0099                     	;# 
   506  009A                     	;# 
   507  009B                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  0116                     	;# 
   516  0117                     	;# 
   517  011D                     	;# 
   518  018C                     	;# 
   519  018D                     	;# 
   520  018E                     	;# 
   521  0191                     	;# 
   522  0191                     	;# 
   523  0192                     	;# 
   524  0193                     	;# 
   525  0193                     	;# 
   526  0194                     	;# 
   527  0195                     	;# 
   528  0196                     	;# 
   529  0197                     	;# 
   530  0199                     	;# 
   531  019A                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019C                     	;# 
   537  019C                     	;# 
   538  019D                     	;# 
   539  019E                     	;# 
   540  019F                     	;# 
   541  020D                     	;# 
   542  0210                     	;# 
   543  0211                     	;# 
   544  0211                     	;# 
   545  0212                     	;# 
   546  0212                     	;# 
   547  0213                     	;# 
   548  0213                     	;# 
   549  0214                     	;# 
   550  0214                     	;# 
   551  0215                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0216                     	;# 
   555  0216                     	;# 
   556  0217                     	;# 
   557  0217                     	;# 
   558  0291                     	;# 
   559  0291                     	;# 
   560  0292                     	;# 
   561  0293                     	;# 
   562  0298                     	;# 
   563  0298                     	;# 
   564  0299                     	;# 
   565  029A                     	;# 
   566  0394                     	;# 
   567  0395                     	;# 
   568  0396                     	;# 
   569  0FE4                     	;# 
   570  0FE5                     	;# 
   571  0FE6                     	;# 
   572  0FE7                     	;# 
   573  0FE8                     	;# 
   574  0FE9                     	;# 
   575  0FEA                     	;# 
   576  0FEB                     	;# 
   577  0FED                     	;# 
   578  0FEE                     	;# 
   579  0FEF                     	;# 
   580  0000                     	;# 
   581  0001                     	;# 
   582  0002                     	;# 
   583  0003                     	;# 
   584  0004                     	;# 
   585  0005                     	;# 
   586  0006                     	;# 
   587  0007                     	;# 
   588  0008                     	;# 
   589  0009                     	;# 
   590  000A                     	;# 
   591  000B                     	;# 
   592  000C                     	;# 
   593  000D                     	;# 
   594  000E                     	;# 
   595  0010                     	;# 
   596  0011                     	;# 
   597  0012                     	;# 
   598  0015                     	;# 
   599  0016                     	;# 
   600  0016                     	;# 
   601  0017                     	;# 
   602  0018                     	;# 
   603  0019                     	;# 
   604  001A                     	;# 
   605  001B                     	;# 
   606  001C                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009B                     	;# 
   620  009C                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  010C                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  0116                     	;# 
   627  0117                     	;# 
   628  011D                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  018E                     	;# 
   632  0191                     	;# 
   633  0191                     	;# 
   634  0192                     	;# 
   635  0193                     	;# 
   636  0193                     	;# 
   637  0194                     	;# 
   638  0195                     	;# 
   639  0196                     	;# 
   640  0197                     	;# 
   641  0199                     	;# 
   642  019A                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019C                     	;# 
   648  019C                     	;# 
   649  019D                     	;# 
   650  019E                     	;# 
   651  019F                     	;# 
   652  020D                     	;# 
   653  0210                     	;# 
   654  0211                     	;# 
   655  0211                     	;# 
   656  0212                     	;# 
   657  0212                     	;# 
   658  0213                     	;# 
   659  0213                     	;# 
   660  0214                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0216                     	;# 
   666  0216                     	;# 
   667  0217                     	;# 
   668  0217                     	;# 
   669  0291                     	;# 
   670  0291                     	;# 
   671  0292                     	;# 
   672  0293                     	;# 
   673  0298                     	;# 
   674  0298                     	;# 
   675  0299                     	;# 
   676  029A                     	;# 
   677  0394                     	;# 
   678  0395                     	;# 
   679  0396                     	;# 
   680  0FE4                     	;# 
   681  0FE5                     	;# 
   682  0FE6                     	;# 
   683  0FE7                     	;# 
   684  0FE8                     	;# 
   685  0FE9                     	;# 
   686  0FEA                     	;# 
   687  0FEB                     	;# 
   688  0FED                     	;# 
   689  0FEE                     	;# 
   690  0FEF                     	;# 
   691  0000                     	;# 
   692  0001                     	;# 
   693  0002                     	;# 
   694  0003                     	;# 
   695  0004                     	;# 
   696  0005                     	;# 
   697  0006                     	;# 
   698  0007                     	;# 
   699  0008                     	;# 
   700  0009                     	;# 
   701  000A                     	;# 
   702  000B                     	;# 
   703  000C                     	;# 
   704  000D                     	;# 
   705  000E                     	;# 
   706  0010                     	;# 
   707  0011                     	;# 
   708  0012                     	;# 
   709  0015                     	;# 
   710  0016                     	;# 
   711  0016                     	;# 
   712  0017                     	;# 
   713  0018                     	;# 
   714  0019                     	;# 
   715  001A                     	;# 
   716  001B                     	;# 
   717  001C                     	;# 
   718  008C                     	;# 
   719  008D                     	;# 
   720  008E                     	;# 
   721  0090                     	;# 
   722  0091                     	;# 
   723  0092                     	;# 
   724  0095                     	;# 
   725  0096                     	;# 
   726  0097                     	;# 
   727  0099                     	;# 
   728  009A                     	;# 
   729  009B                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  010C                     	;# 
   735  010D                     	;# 
   736  010E                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  011D                     	;# 
   740  018C                     	;# 
   741  018D                     	;# 
   742  018E                     	;# 
   743  0191                     	;# 
   744  0191                     	;# 
   745  0192                     	;# 
   746  0193                     	;# 
   747  0193                     	;# 
   748  0194                     	;# 
   749  0195                     	;# 
   750  0196                     	;# 
   751  0197                     	;# 
   752  0199                     	;# 
   753  019A                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019C                     	;# 
   759  019C                     	;# 
   760  019D                     	;# 
   761  019E                     	;# 
   762  019F                     	;# 
   763  020D                     	;# 
   764  0210                     	;# 
   765  0211                     	;# 
   766  0211                     	;# 
   767  0212                     	;# 
   768  0212                     	;# 
   769  0213                     	;# 
   770  0213                     	;# 
   771  0214                     	;# 
   772  0214                     	;# 
   773  0215                     	;# 
   774  0215                     	;# 
   775  0215                     	;# 
   776  0216                     	;# 
   777  0216                     	;# 
   778  0217                     	;# 
   779  0217                     	;# 
   780  0291                     	;# 
   781  0291                     	;# 
   782  0292                     	;# 
   783  0293                     	;# 
   784  0298                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  029A                     	;# 
   788  0394                     	;# 
   789  0395                     	;# 
   790  0396                     	;# 
   791  0FE4                     	;# 
   792  0FE5                     	;# 
   793  0FE6                     	;# 
   794  0FE7                     	;# 
   795  0FE8                     	;# 
   796  0FE9                     	;# 
   797  0FEA                     	;# 
   798  0FEB                     	;# 
   799  0FED                     	;# 
   800  0FEE                     	;# 
   801  0FEF                     	;# 
   802  0000                     	;# 
   803  0001                     	;# 
   804  0002                     	;# 
   805  0003                     	;# 
   806  0004                     	;# 
   807  0005                     	;# 
   808  0006                     	;# 
   809  0007                     	;# 
   810  0008                     	;# 
   811  0009                     	;# 
   812  000A                     	;# 
   813  000B                     	;# 
   814  000C                     	;# 
   815  000D                     	;# 
   816  000E                     	;# 
   817  0010                     	;# 
   818  0011                     	;# 
   819  0012                     	;# 
   820  0015                     	;# 
   821  0016                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001C                     	;# 
   829  008C                     	;# 
   830  008D                     	;# 
   831  008E                     	;# 
   832  0090                     	;# 
   833  0091                     	;# 
   834  0092                     	;# 
   835  0095                     	;# 
   836  0096                     	;# 
   837  0097                     	;# 
   838  0099                     	;# 
   839  009A                     	;# 
   840  009B                     	;# 
   841  009B                     	;# 
   842  009C                     	;# 
   843  009D                     	;# 
   844  009E                     	;# 
   845  010C                     	;# 
   846  010D                     	;# 
   847  010E                     	;# 
   848  0116                     	;# 
   849  0117                     	;# 
   850  011D                     	;# 
   851  018C                     	;# 
   852  018D                     	;# 
   853  018E                     	;# 
   854  0191                     	;# 
   855  0191                     	;# 
   856  0192                     	;# 
   857  0193                     	;# 
   858  0193                     	;# 
   859  0194                     	;# 
   860  0195                     	;# 
   861  0196                     	;# 
   862  0197                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019C                     	;# 
   871  019D                     	;# 
   872  019E                     	;# 
   873  019F                     	;# 
   874  020D                     	;# 
   875  0210                     	;# 
   876  0211                     	;# 
   877  0211                     	;# 
   878  0212                     	;# 
   879  0212                     	;# 
   880  0213                     	;# 
   881  0213                     	;# 
   882  0214                     	;# 
   883  0214                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0216                     	;# 
   888  0216                     	;# 
   889  0217                     	;# 
   890  0217                     	;# 
   891  0291                     	;# 
   892  0291                     	;# 
   893  0292                     	;# 
   894  0293                     	;# 
   895  0298                     	;# 
   896  0298                     	;# 
   897  0299                     	;# 
   898  029A                     	;# 
   899  0394                     	;# 
   900  0395                     	;# 
   901  0396                     	;# 
   902  0FE4                     	;# 
   903  0FE5                     	;# 
   904  0FE6                     	;# 
   905  0FE7                     	;# 
   906  0FE8                     	;# 
   907  0FE9                     	;# 
   908  0FEA                     	;# 
   909  0FEB                     	;# 
   910  0FED                     	;# 
   911  0FEE                     	;# 
   912  0FEF                     	;# 
   913  0000                     	;# 
   914  0001                     	;# 
   915  0002                     	;# 
   916  0003                     	;# 
   917  0004                     	;# 
   918  0005                     	;# 
   919  0006                     	;# 
   920  0007                     	;# 
   921  0008                     	;# 
   922  0009                     	;# 
   923  000A                     	;# 
   924  000B                     	;# 
   925  000C                     	;# 
   926  000D                     	;# 
   927  000E                     	;# 
   928  0010                     	;# 
   929  0011                     	;# 
   930  0012                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0016                     	;# 
   934  0017                     	;# 
   935  0018                     	;# 
   936  0019                     	;# 
   937  001A                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  008C                     	;# 
   941  008D                     	;# 
   942  008E                     	;# 
   943  0090                     	;# 
   944  0091                     	;# 
   945  0092                     	;# 
   946  0095                     	;# 
   947  0096                     	;# 
   948  0097                     	;# 
   949  0099                     	;# 
   950  009A                     	;# 
   951  009B                     	;# 
   952  009B                     	;# 
   953  009C                     	;# 
   954  009D                     	;# 
   955  009E                     	;# 
   956  010C                     	;# 
   957  010D                     	;# 
   958  010E                     	;# 
   959  0116                     	;# 
   960  0117                     	;# 
   961  011D                     	;# 
   962  018C                     	;# 
   963  018D                     	;# 
   964  018E                     	;# 
   965  0191                     	;# 
   966  0191                     	;# 
   967  0192                     	;# 
   968  0193                     	;# 
   969  0193                     	;# 
   970  0194                     	;# 
   971  0195                     	;# 
   972  0196                     	;# 
   973  0197                     	;# 
   974  0199                     	;# 
   975  019A                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019C                     	;# 
   981  019C                     	;# 
   982  019D                     	;# 
   983  019E                     	;# 
   984  019F                     	;# 
   985  020D                     	;# 
   986  0210                     	;# 
   987  0211                     	;# 
   988  0211                     	;# 
   989  0212                     	;# 
   990  0212                     	;# 
   991  0213                     	;# 
   992  0213                     	;# 
   993  0214                     	;# 
   994  0214                     	;# 
   995  0215                     	;# 
   996  0215                     	;# 
   997  0215                     	;# 
   998  0216                     	;# 
   999  0216                     	;# 
  1000  0217                     	;# 
  1001  0217                     	;# 
  1002  0291                     	;# 
  1003  0291                     	;# 
  1004  0292                     	;# 
  1005  0293                     	;# 
  1006  0298                     	;# 
  1007  0298                     	;# 
  1008  0299                     	;# 
  1009  029A                     	;# 
  1010  0394                     	;# 
  1011  0395                     	;# 
  1012  0396                     	;# 
  1013  0FE4                     	;# 
  1014  0FE5                     	;# 
  1015  0FE6                     	;# 
  1016  0FE7                     	;# 
  1017  0FE8                     	;# 
  1018  0FE9                     	;# 
  1019  0FEA                     	;# 
  1020  0FEB                     	;# 
  1021  0FED                     	;# 
  1022  0FEE                     	;# 
  1023  0FEF                     	;# 
  1024  0000                     	;# 
  1025  0001                     	;# 
  1026  0002                     	;# 
  1027  0003                     	;# 
  1028  0004                     	;# 
  1029  0005                     	;# 
  1030  0006                     	;# 
  1031  0007                     	;# 
  1032  0008                     	;# 
  1033  0009                     	;# 
  1034  000A                     	;# 
  1035  000B                     	;# 
  1036  000C                     	;# 
  1037  000D                     	;# 
  1038  000E                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0015                     	;# 
  1043  0016                     	;# 
  1044  0016                     	;# 
  1045  0017                     	;# 
  1046  0018                     	;# 
  1047  0019                     	;# 
  1048  001A                     	;# 
  1049  001B                     	;# 
  1050  001C                     	;# 
  1051  008C                     	;# 
  1052  008D                     	;# 
  1053  008E                     	;# 
  1054  0090                     	;# 
  1055  0091                     	;# 
  1056  0092                     	;# 
  1057  0095                     	;# 
  1058  0096                     	;# 
  1059  0097                     	;# 
  1060  0099                     	;# 
  1061  009A                     	;# 
  1062  009B                     	;# 
  1063  009B                     	;# 
  1064  009C                     	;# 
  1065  009D                     	;# 
  1066  009E                     	;# 
  1067  010C                     	;# 
  1068  010D                     	;# 
  1069  010E                     	;# 
  1070  0116                     	;# 
  1071  0117                     	;# 
  1072  011D                     	;# 
  1073  018C                     	;# 
  1074  018D                     	;# 
  1075  018E                     	;# 
  1076  0191                     	;# 
  1077  0191                     	;# 
  1078  0192                     	;# 
  1079  0193                     	;# 
  1080  0193                     	;# 
  1081  0194                     	;# 
  1082  0195                     	;# 
  1083  0196                     	;# 
  1084  0197                     	;# 
  1085  0199                     	;# 
  1086  019A                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019C                     	;# 
  1092  019C                     	;# 
  1093  019D                     	;# 
  1094  019E                     	;# 
  1095  019F                     	;# 
  1096  020D                     	;# 
  1097  0210                     	;# 
  1098  0211                     	;# 
  1099  0211                     	;# 
  1100  0212                     	;# 
  1101  0212                     	;# 
  1102  0213                     	;# 
  1103  0213                     	;# 
  1104  0214                     	;# 
  1105  0214                     	;# 
  1106  0215                     	;# 
  1107  0215                     	;# 
  1108  0215                     	;# 
  1109  0216                     	;# 
  1110  0216                     	;# 
  1111  0217                     	;# 
  1112  0217                     	;# 
  1113  0291                     	;# 
  1114  0291                     	;# 
  1115  0292                     	;# 
  1116  0293                     	;# 
  1117  0298                     	;# 
  1118  0298                     	;# 
  1119  0299                     	;# 
  1120  029A                     	;# 
  1121  0394                     	;# 
  1122  0395                     	;# 
  1123  0396                     	;# 
  1124  0FE4                     	;# 
  1125  0FE5                     	;# 
  1126  0FE6                     	;# 
  1127  0FE7                     	;# 
  1128  0FE8                     	;# 
  1129  0FE9                     	;# 
  1130  0FEA                     	;# 
  1131  0FEB                     	;# 
  1132  0FED                     	;# 
  1133  0FEE                     	;# 
  1134  0FEF                     	;# 
  1135  0000                     	;# 
  1136  0001                     	;# 
  1137  0002                     	;# 
  1138  0003                     	;# 
  1139  0004                     	;# 
  1140  0005                     	;# 
  1141  0006                     	;# 
  1142  0007                     	;# 
  1143  0008                     	;# 
  1144  0009                     	;# 
  1145  000A                     	;# 
  1146  000B                     	;# 
  1147  000C                     	;# 
  1148  000D                     	;# 
  1149  000E                     	;# 
  1150  0010                     	;# 
  1151  0011                     	;# 
  1152  0012                     	;# 
  1153  0015                     	;# 
  1154  0016                     	;# 
  1155  0016                     	;# 
  1156  0017                     	;# 
  1157  0018                     	;# 
  1158  0019                     	;# 
  1159  001A                     	;# 
  1160  001B                     	;# 
  1161  001C                     	;# 
  1162  008C                     	;# 
  1163  008D                     	;# 
  1164  008E                     	;# 
  1165  0090                     	;# 
  1166  0091                     	;# 
  1167  0092                     	;# 
  1168  0095                     	;# 
  1169  0096                     	;# 
  1170  0097                     	;# 
  1171  0099                     	;# 
  1172  009A                     	;# 
  1173  009B                     	;# 
  1174  009B                     	;# 
  1175  009C                     	;# 
  1176  009D                     	;# 
  1177  009E                     	;# 
  1178  010C                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  0116                     	;# 
  1182  0117                     	;# 
  1183  011D                     	;# 
  1184  018C                     	;# 
  1185  018D                     	;# 
  1186  018E                     	;# 
  1187  0191                     	;# 
  1188  0191                     	;# 
  1189  0192                     	;# 
  1190  0193                     	;# 
  1191  0193                     	;# 
  1192  0194                     	;# 
  1193  0195                     	;# 
  1194  0196                     	;# 
  1195  0197                     	;# 
  1196  0199                     	;# 
  1197  019A                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019C                     	;# 
  1203  019C                     	;# 
  1204  019D                     	;# 
  1205  019E                     	;# 
  1206  019F                     	;# 
  1207  020D                     	;# 
  1208  0210                     	;# 
  1209  0211                     	;# 
  1210  0211                     	;# 
  1211  0212                     	;# 
  1212  0212                     	;# 
  1213  0213                     	;# 
  1214  0213                     	;# 
  1215  0214                     	;# 
  1216  0214                     	;# 
  1217  0215                     	;# 
  1218  0215                     	;# 
  1219  0215                     	;# 
  1220  0216                     	;# 
  1221  0216                     	;# 
  1222  0217                     	;# 
  1223  0217                     	;# 
  1224  0291                     	;# 
  1225  0291                     	;# 
  1226  0292                     	;# 
  1227  0293                     	;# 
  1228  0298                     	;# 
  1229  0298                     	;# 
  1230  0299                     	;# 
  1231  029A                     	;# 
  1232  0394                     	;# 
  1233  0395                     	;# 
  1234  0396                     	;# 
  1235  0FE4                     	;# 
  1236  0FE5                     	;# 
  1237  0FE6                     	;# 
  1238  0FE7                     	;# 
  1239  0FE8                     	;# 
  1240  0FE9                     	;# 
  1241  0FEA                     	;# 
  1242  0FEB                     	;# 
  1243  0FED                     	;# 
  1244  0FEE                     	;# 
  1245  0FEF                     	;# 
  1246  0000                     	;# 
  1247  0001                     	;# 
  1248  0002                     	;# 
  1249  0003                     	;# 
  1250  0004                     	;# 
  1251  0005                     	;# 
  1252  0006                     	;# 
  1253  0007                     	;# 
  1254  0008                     	;# 
  1255  0009                     	;# 
  1256  000A                     	;# 
  1257  000B                     	;# 
  1258  000C                     	;# 
  1259  000D                     	;# 
  1260  000E                     	;# 
  1261  0010                     	;# 
  1262  0011                     	;# 
  1263  0012                     	;# 
  1264  0015                     	;# 
  1265  0016                     	;# 
  1266  0016                     	;# 
  1267  0017                     	;# 
  1268  0018                     	;# 
  1269  0019                     	;# 
  1270  001A                     	;# 
  1271  001B                     	;# 
  1272  001C                     	;# 
  1273  008C                     	;# 
  1274  008D                     	;# 
  1275  008E                     	;# 
  1276  0090                     	;# 
  1277  0091                     	;# 
  1278  0092                     	;# 
  1279  0095                     	;# 
  1280  0096                     	;# 
  1281  0097                     	;# 
  1282  0099                     	;# 
  1283  009A                     	;# 
  1284  009B                     	;# 
  1285  009B                     	;# 
  1286  009C                     	;# 
  1287  009D                     	;# 
  1288  009E                     	;# 
  1289  010C                     	;# 
  1290  010D                     	;# 
  1291  010E                     	;# 
  1292  0116                     	;# 
  1293  0117                     	;# 
  1294  011D                     	;# 
  1295  018C                     	;# 
  1296  018D                     	;# 
  1297  018E                     	;# 
  1298  0191                     	;# 
  1299  0191                     	;# 
  1300  0192                     	;# 
  1301  0193                     	;# 
  1302  0193                     	;# 
  1303  0194                     	;# 
  1304  0195                     	;# 
  1305  0196                     	;# 
  1306  0197                     	;# 
  1307  0199                     	;# 
  1308  019A                     	;# 
  1309  019B                     	;# 
  1310  019B                     	;# 
  1311  019B                     	;# 
  1312  019B                     	;# 
  1313  019C                     	;# 
  1314  019C                     	;# 
  1315  019D                     	;# 
  1316  019E                     	;# 
  1317  019F                     	;# 
  1318  020D                     	;# 
  1319  0210                     	;# 
  1320  0211                     	;# 
  1321  0211                     	;# 
  1322  0212                     	;# 
  1323  0212                     	;# 
  1324  0213                     	;# 
  1325  0213                     	;# 
  1326  0214                     	;# 
  1327  0214                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0216                     	;# 
  1332  0216                     	;# 
  1333  0217                     	;# 
  1334  0217                     	;# 
  1335  0291                     	;# 
  1336  0291                     	;# 
  1337  0292                     	;# 
  1338  0293                     	;# 
  1339  0298                     	;# 
  1340  0298                     	;# 
  1341  0299                     	;# 
  1342  029A                     	;# 
  1343  0394                     	;# 
  1344  0395                     	;# 
  1345  0396                     	;# 
  1346  0FE4                     	;# 
  1347  0FE5                     	;# 
  1348  0FE6                     	;# 
  1349  0FE7                     	;# 
  1350  0FE8                     	;# 
  1351  0FE9                     	;# 
  1352  0FEA                     	;# 
  1353  0FEB                     	;# 
  1354  0FED                     	;# 
  1355  0FEE                     	;# 
  1356  0FEF                     	;# 
  1357  0000                     	;# 
  1358  0001                     	;# 
  1359  0002                     	;# 
  1360  0003                     	;# 
  1361  0004                     	;# 
  1362  0005                     	;# 
  1363  0006                     	;# 
  1364  0007                     	;# 
  1365  0008                     	;# 
  1366  0009                     	;# 
  1367  000A                     	;# 
  1368  000B                     	;# 
  1369  000C                     	;# 
  1370  000D                     	;# 
  1371  000E                     	;# 
  1372  0010                     	;# 
  1373  0011                     	;# 
  1374  0012                     	;# 
  1375  0015                     	;# 
  1376  0016                     	;# 
  1377  0016                     	;# 
  1378  0017                     	;# 
  1379  0018                     	;# 
  1380  0019                     	;# 
  1381  001A                     	;# 
  1382  001B                     	;# 
  1383  001C                     	;# 
  1384  008C                     	;# 
  1385  008D                     	;# 
  1386  008E                     	;# 
  1387  0090                     	;# 
  1388  0091                     	;# 
  1389  0092                     	;# 
  1390  0095                     	;# 
  1391  0096                     	;# 
  1392  0097                     	;# 
  1393  0099                     	;# 
  1394  009A                     	;# 
  1395  009B                     	;# 
  1396  009B                     	;# 
  1397  009C                     	;# 
  1398  009D                     	;# 
  1399  009E                     	;# 
  1400  010C                     	;# 
  1401  010D                     	;# 
  1402  010E                     	;# 
  1403  0116                     	;# 
  1404  0117                     	;# 
  1405  011D                     	;# 
  1406  018C                     	;# 
  1407  018D                     	;# 
  1408  018E                     	;# 
  1409  0191                     	;# 
  1410  0191                     	;# 
  1411  0192                     	;# 
  1412  0193                     	;# 
  1413  0193                     	;# 
  1414  0194                     	;# 
  1415  0195                     	;# 
  1416  0196                     	;# 
  1417  0197                     	;# 
  1418  0199                     	;# 
  1419  019A                     	;# 
  1420  019B                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019C                     	;# 
  1425  019C                     	;# 
  1426  019D                     	;# 
  1427  019E                     	;# 
  1428  019F                     	;# 
  1429  020D                     	;# 
  1430  0210                     	;# 
  1431  0211                     	;# 
  1432  0211                     	;# 
  1433  0212                     	;# 
  1434  0212                     	;# 
  1435  0213                     	;# 
  1436  0213                     	;# 
  1437  0214                     	;# 
  1438  0214                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0216                     	;# 
  1443  0216                     	;# 
  1444  0217                     	;# 
  1445  0217                     	;# 
  1446  0291                     	;# 
  1447  0291                     	;# 
  1448  0292                     	;# 
  1449  0293                     	;# 
  1450  0298                     	;# 
  1451  0298                     	;# 
  1452  0299                     	;# 
  1453  029A                     	;# 
  1454  0394                     	;# 
  1455  0395                     	;# 
  1456  0396                     	;# 
  1457  0FE4                     	;# 
  1458  0FE5                     	;# 
  1459  0FE6                     	;# 
  1460  0FE7                     	;# 
  1461  0FE8                     	;# 
  1462  0FE9                     	;# 
  1463  0FEA                     	;# 
  1464  0FEB                     	;# 
  1465  0FED                     	;# 
  1466  0FEE                     	;# 
  1467  0FEF                     	;# 
  1468  0000                     	;# 
  1469  0001                     	;# 
  1470  0002                     	;# 
  1471  0003                     	;# 
  1472  0004                     	;# 
  1473  0005                     	;# 
  1474  0006                     	;# 
  1475  0007                     	;# 
  1476  0008                     	;# 
  1477  0009                     	;# 
  1478  000A                     	;# 
  1479  000B                     	;# 
  1480  000C                     	;# 
  1481  000D                     	;# 
  1482  000E                     	;# 
  1483  0010                     	;# 
  1484  0011                     	;# 
  1485  0012                     	;# 
  1486  0015                     	;# 
  1487  0016                     	;# 
  1488  0016                     	;# 
  1489  0017                     	;# 
  1490  0018                     	;# 
  1491  0019                     	;# 
  1492  001A                     	;# 
  1493  001B                     	;# 
  1494  001C                     	;# 
  1495  008C                     	;# 
  1496  008D                     	;# 
  1497  008E                     	;# 
  1498  0090                     	;# 
  1499  0091                     	;# 
  1500  0092                     	;# 
  1501  0095                     	;# 
  1502  0096                     	;# 
  1503  0097                     	;# 
  1504  0099                     	;# 
  1505  009A                     	;# 
  1506  009B                     	;# 
  1507  009B                     	;# 
  1508  009C                     	;# 
  1509  009D                     	;# 
  1510  009E                     	;# 
  1511  010C                     	;# 
  1512  010D                     	;# 
  1513  010E                     	;# 
  1514  0116                     	;# 
  1515  0117                     	;# 
  1516  011D                     	;# 
  1517  018C                     	;# 
  1518  018D                     	;# 
  1519  018E                     	;# 
  1520  0191                     	;# 
  1521  0191                     	;# 
  1522  0192                     	;# 
  1523  0193                     	;# 
  1524  0193                     	;# 
  1525  0194                     	;# 
  1526  0195                     	;# 
  1527  0196                     	;# 
  1528  0197                     	;# 
  1529  0199                     	;# 
  1530  019A                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019B                     	;# 
  1535  019C                     	;# 
  1536  019C                     	;# 
  1537  019D                     	;# 
  1538  019E                     	;# 
  1539  019F                     	;# 
  1540  020D                     	;# 
  1541  0210                     	;# 
  1542  0211                     	;# 
  1543  0211                     	;# 
  1544  0212                     	;# 
  1545  0212                     	;# 
  1546  0213                     	;# 
  1547  0213                     	;# 
  1548  0214                     	;# 
  1549  0214                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0216                     	;# 
  1554  0216                     	;# 
  1555  0217                     	;# 
  1556  0217                     	;# 
  1557  0291                     	;# 
  1558  0291                     	;# 
  1559  0292                     	;# 
  1560  0293                     	;# 
  1561  0298                     	;# 
  1562  0298                     	;# 
  1563  0299                     	;# 
  1564  029A                     	;# 
  1565  0394                     	;# 
  1566  0395                     	;# 
  1567  0396                     	;# 
  1568  0FE4                     	;# 
  1569  0FE5                     	;# 
  1570  0FE6                     	;# 
  1571  0FE7                     	;# 
  1572  0FE8                     	;# 
  1573  0FE9                     	;# 
  1574  0FEA                     	;# 
  1575  0FEB                     	;# 
  1576  0FED                     	;# 
  1577  0FEE                     	;# 
  1578  0FEF                     	;# 
  1579  0000                     	;# 
  1580  0001                     	;# 
  1581  0002                     	;# 
  1582  0003                     	;# 
  1583  0004                     	;# 
  1584  0005                     	;# 
  1585  0006                     	;# 
  1586  0007                     	;# 
  1587  0008                     	;# 
  1588  0009                     	;# 
  1589  000A                     	;# 
  1590  000B                     	;# 
  1591  000C                     	;# 
  1592  000D                     	;# 
  1593  000E                     	;# 
  1594  0010                     	;# 
  1595  0011                     	;# 
  1596  0012                     	;# 
  1597  0015                     	;# 
  1598  0016                     	;# 
  1599  0016                     	;# 
  1600  0017                     	;# 
  1601  0018                     	;# 
  1602  0019                     	;# 
  1603  001A                     	;# 
  1604  001B                     	;# 
  1605  001C                     	;# 
  1606  008C                     	;# 
  1607  008D                     	;# 
  1608  008E                     	;# 
  1609  0090                     	;# 
  1610  0091                     	;# 
  1611  0092                     	;# 
  1612  0095                     	;# 
  1613  0096                     	;# 
  1614  0097                     	;# 
  1615  0099                     	;# 
  1616  009A                     	;# 
  1617  009B                     	;# 
  1618  009B                     	;# 
  1619  009C                     	;# 
  1620  009D                     	;# 
  1621  009E                     	;# 
  1622  010C                     	;# 
  1623  010D                     	;# 
  1624  010E                     	;# 
  1625  0116                     	;# 
  1626  0117                     	;# 
  1627  011D                     	;# 
  1628  018C                     	;# 
  1629  018D                     	;# 
  1630  018E                     	;# 
  1631  0191                     	;# 
  1632  0191                     	;# 
  1633  0192                     	;# 
  1634  0193                     	;# 
  1635  0193                     	;# 
  1636  0194                     	;# 
  1637  0195                     	;# 
  1638  0196                     	;# 
  1639  0197                     	;# 
  1640  0199                     	;# 
  1641  019A                     	;# 
  1642  019B                     	;# 
  1643  019B                     	;# 
  1644  019B                     	;# 
  1645  019B                     	;# 
  1646  019C                     	;# 
  1647  019C                     	;# 
  1648  019D                     	;# 
  1649  019E                     	;# 
  1650  019F                     	;# 
  1651  020D                     	;# 
  1652  0210                     	;# 
  1653  0211                     	;# 
  1654  0211                     	;# 
  1655  0212                     	;# 
  1656  0212                     	;# 
  1657  0213                     	;# 
  1658  0213                     	;# 
  1659  0214                     	;# 
  1660  0214                     	;# 
  1661  0215                     	;# 
  1662  0215                     	;# 
  1663  0215                     	;# 
  1664  0216                     	;# 
  1665  0216                     	;# 
  1666  0217                     	;# 
  1667  0217                     	;# 
  1668  0291                     	;# 
  1669  0291                     	;# 
  1670  0292                     	;# 
  1671  0293                     	;# 
  1672  0298                     	;# 
  1673  0298                     	;# 
  1674  0299                     	;# 
  1675  029A                     	;# 
  1676  0394                     	;# 
  1677  0395                     	;# 
  1678  0396                     	;# 
  1679  0FE4                     	;# 
  1680  0FE5                     	;# 
  1681  0FE6                     	;# 
  1682  0FE7                     	;# 
  1683  0FE8                     	;# 
  1684  0FE9                     	;# 
  1685  0FEA                     	;# 
  1686  0FEB                     	;# 
  1687  0FED                     	;# 
  1688  0FEE                     	;# 
  1689  0FEF                     	;# 
  1690  0000                     	;# 
  1691  0001                     	;# 
  1692  0002                     	;# 
  1693  0003                     	;# 
  1694  0004                     	;# 
  1695  0005                     	;# 
  1696  0006                     	;# 
  1697  0007                     	;# 
  1698  0008                     	;# 
  1699  0009                     	;# 
  1700  000A                     	;# 
  1701  000B                     	;# 
  1702  000C                     	;# 
  1703  000D                     	;# 
  1704  000E                     	;# 
  1705  0010                     	;# 
  1706  0011                     	;# 
  1707  0012                     	;# 
  1708  0015                     	;# 
  1709  0016                     	;# 
  1710  0016                     	;# 
  1711  0017                     	;# 
  1712  0018                     	;# 
  1713  0019                     	;# 
  1714  001A                     	;# 
  1715  001B                     	;# 
  1716  001C                     	;# 
  1717  008C                     	;# 
  1718  008D                     	;# 
  1719  008E                     	;# 
  1720  0090                     	;# 
  1721  0091                     	;# 
  1722  0092                     	;# 
  1723  0095                     	;# 
  1724  0096                     	;# 
  1725  0097                     	;# 
  1726  0099                     	;# 
  1727  009A                     	;# 
  1728  009B                     	;# 
  1729  009B                     	;# 
  1730  009C                     	;# 
  1731  009D                     	;# 
  1732  009E                     	;# 
  1733  010C                     	;# 
  1734  010D                     	;# 
  1735  010E                     	;# 
  1736  0116                     	;# 
  1737  0117                     	;# 
  1738  011D                     	;# 
  1739  018C                     	;# 
  1740  018D                     	;# 
  1741  018E                     	;# 
  1742  0191                     	;# 
  1743  0191                     	;# 
  1744  0192                     	;# 
  1745  0193                     	;# 
  1746  0193                     	;# 
  1747  0194                     	;# 
  1748  0195                     	;# 
  1749  0196                     	;# 
  1750  0197                     	;# 
  1751  0199                     	;# 
  1752  019A                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019B                     	;# 
  1757  019C                     	;# 
  1758  019C                     	;# 
  1759  019D                     	;# 
  1760  019E                     	;# 
  1761  019F                     	;# 
  1762  020D                     	;# 
  1763  0210                     	;# 
  1764  0211                     	;# 
  1765  0211                     	;# 
  1766  0212                     	;# 
  1767  0212                     	;# 
  1768  0213                     	;# 
  1769  0213                     	;# 
  1770  0214                     	;# 
  1771  0214                     	;# 
  1772  0215                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0216                     	;# 
  1776  0216                     	;# 
  1777  0217                     	;# 
  1778  0217                     	;# 
  1779  0291                     	;# 
  1780  0291                     	;# 
  1781  0292                     	;# 
  1782  0293                     	;# 
  1783  0298                     	;# 
  1784  0298                     	;# 
  1785  0299                     	;# 
  1786  029A                     	;# 
  1787  0394                     	;# 
  1788  0395                     	;# 
  1789  0396                     	;# 
  1790  0FE4                     	;# 
  1791  0FE5                     	;# 
  1792  0FE6                     	;# 
  1793  0FE7                     	;# 
  1794  0FE8                     	;# 
  1795  0FE9                     	;# 
  1796  0FEA                     	;# 
  1797  0FEB                     	;# 
  1798  0FED                     	;# 
  1799  0FEE                     	;# 
  1800  0FEF                     	;# 
  1801  0000                     	;# 
  1802  0001                     	;# 
  1803  0002                     	;# 
  1804  0003                     	;# 
  1805  0004                     	;# 
  1806  0005                     	;# 
  1807  0006                     	;# 
  1808  0007                     	;# 
  1809  0008                     	;# 
  1810  0009                     	;# 
  1811  000A                     	;# 
  1812  000B                     	;# 
  1813  000C                     	;# 
  1814  000D                     	;# 
  1815  000E                     	;# 
  1816  0010                     	;# 
  1817  0011                     	;# 
  1818  0012                     	;# 
  1819  0015                     	;# 
  1820  0016                     	;# 
  1821  0016                     	;# 
  1822  0017                     	;# 
  1823  0018                     	;# 
  1824  0019                     	;# 
  1825  001A                     	;# 
  1826  001B                     	;# 
  1827  001C                     	;# 
  1828  008C                     	;# 
  1829  008D                     	;# 
  1830  008E                     	;# 
  1831  0090                     	;# 
  1832  0091                     	;# 
  1833  0092                     	;# 
  1834  0095                     	;# 
  1835  0096                     	;# 
  1836  0097                     	;# 
  1837  0099                     	;# 
  1838  009A                     	;# 
  1839  009B                     	;# 
  1840  009B                     	;# 
  1841  009C                     	;# 
  1842  009D                     	;# 
  1843  009E                     	;# 
  1844  010C                     	;# 
  1845  010D                     	;# 
  1846  010E                     	;# 
  1847  0116                     	;# 
  1848  0117                     	;# 
  1849  011D                     	;# 
  1850  018C                     	;# 
  1851  018D                     	;# 
  1852  018E                     	;# 
  1853  0191                     	;# 
  1854  0191                     	;# 
  1855  0192                     	;# 
  1856  0193                     	;# 
  1857  0193                     	;# 
  1858  0194                     	;# 
  1859  0195                     	;# 
  1860  0196                     	;# 
  1861  0197                     	;# 
  1862  0199                     	;# 
  1863  019A                     	;# 
  1864  019B                     	;# 
  1865  019B                     	;# 
  1866  019B                     	;# 
  1867  019B                     	;# 
  1868  019C                     	;# 
  1869  019C                     	;# 
  1870  019D                     	;# 
  1871  019E                     	;# 
  1872  019F                     	;# 
  1873  020D                     	;# 
  1874  0210                     	;# 
  1875  0211                     	;# 
  1876  0211                     	;# 
  1877  0212                     	;# 
  1878  0212                     	;# 
  1879  0213                     	;# 
  1880  0213                     	;# 
  1881  0214                     	;# 
  1882  0214                     	;# 
  1883  0215                     	;# 
  1884  0215                     	;# 
  1885  0215                     	;# 
  1886  0216                     	;# 
  1887  0216                     	;# 
  1888  0217                     	;# 
  1889  0217                     	;# 
  1890  0291                     	;# 
  1891  0291                     	;# 
  1892  0292                     	;# 
  1893  0293                     	;# 
  1894  0298                     	;# 
  1895  0298                     	;# 
  1896  0299                     	;# 
  1897  029A                     	;# 
  1898  0394                     	;# 
  1899  0395                     	;# 
  1900  0396                     	;# 
  1901  0FE4                     	;# 
  1902  0FE5                     	;# 
  1903  0FE6                     	;# 
  1904  0FE7                     	;# 
  1905  0FE8                     	;# 
  1906  0FE9                     	;# 
  1907  0FEA                     	;# 
  1908  0FEB                     	;# 
  1909  0FED                     	;# 
  1910  0FEE                     	;# 
  1911  0FEF                     	;# 
  1912                           
  1913                           	psect	idataBANK3
  1914  15A6                     __pidataBANK3:	
  1915                           
  1916                           ;initializer for _VarMemory
  1917  15A6  34FF               	retlw	255
  1918  15A7  34FF               	retlw	255
  1919  15A8  34FF               	retlw	255
  1920  15A9  3400               	retlw	0
  1921  15AA  3400               	retlw	0
  1922  15AB  3400               	retlw	0
  1923  15AC  3400               	retlw	0
  1924  15AD  3400               	retlw	0
  1925  15AE  3400               	retlw	0
  1926  15AF  3400               	retlw	0
  1927  15B0  3400               	retlw	0
  1928  15B1  3400               	retlw	0
  1929  15B2  3400               	retlw	0
  1930  15B3  3400               	retlw	0
  1931  15B4  3400               	retlw	0
  1932  15B5  3400               	retlw	0
  1933  15B6  3400               	retlw	0
  1934  15B7  3400               	retlw	0
  1935  15B8  3400               	retlw	0
  1936  15B9  3400               	retlw	0
  1937  15BA  3400               	retlw	0
  1938  15BB  3400               	retlw	0
  1939  15BC  3400               	retlw	0
  1940  15BD  3400               	retlw	0
  1941  15BE  3400               	retlw	0
  1942  15BF  3400               	retlw	0
  1943  15C0  3400               	retlw	0
  1944  15C1  3400               	retlw	0
  1945  15C2  3400               	retlw	0
  1946  15C3  3400               	retlw	0
  1947  15C4  3400               	retlw	0
  1948  15C5  34AA               	retlw	170
  1949  15C6  3400               	retlw	0
  1950  15C7  3400               	retlw	0
  1951  15C8  3400               	retlw	0
  1952  15C9  3400               	retlw	0
  1953  15CA  3400               	retlw	0
  1954                           
  1955                           ;initializer for _VarProduct
  1956  15CB  3463               	retlw	99
  1957  15CC  3402               	retlw	2
  1958  15CD  3400               	retlw	0
  1959  15CE  3400               	retlw	0
  1960  15CF  3400               	retlw	0
  1961  15D0  3400               	retlw	0
  1962  15D1  3400               	retlw	0
  1963  15D2  3400               	retlw	0
  1964  15D3  3400               	retlw	0
  1965  15D4  3400               	retlw	0
  1966  15D5  3400               	retlw	0
  1967  15D6  3400               	retlw	0
  1968  15D7  34FF               	retlw	255
  1969  15D8  34FF               	retlw	255
  1970  15D9  34FF               	retlw	255
  1971  15DA  3400               	retlw	0
  1972  15DB  3400               	retlw	0
  1973  15DC  3400               	retlw	0
  1974  15DD  3400               	retlw	0
  1975  15DE  3400               	retlw	0
  1976  15DF  3402               	retlw	2
  1977  15E0  3400               	retlw	0
  1978  15E1  3400               	retlw	0
  1979  15E2  3400               	retlw	0
  1980  15E3  3400               	retlw	0
  1981  15E4  3400               	retlw	0
  1982  15E5  3400               	retlw	0
  1983  15E6  3400               	retlw	0
  1984  15E7  3400               	retlw	0
  1985  15E8  3400               	retlw	0
  1986                           
  1987                           	psect	stringtext
  1988  1000                     __pstringtext:	
  1989  1000                     _CC2500_registers_address:	
  1990  1000  3403               	retlw	3
  1991  1001  3416               	retlw	22
  1992  1002  3417               	retlw	23
  1993  1003  341E               	retlw	30
  1994  1004  341F               	retlw	31
  1995  1005  3420               	retlw	32
  1996  1006  342A               	retlw	42
  1997  1007  342B               	retlw	43
  1998  1008  340B               	retlw	11
  1999  1009  340C               	retlw	12
  2000  100A  340D               	retlw	13
  2001  100B  340E               	retlw	14
  2002  100C  340F               	retlw	15
  2003  100D  3410               	retlw	16
  2004  100E  3411               	retlw	17
  2005  100F  3412               	retlw	18
  2006  1010  3413               	retlw	19
  2007  1011  3414               	retlw	20
  2008  1012  340A               	retlw	10
  2009  1013  3415               	retlw	21
  2010  1014  3421               	retlw	33
  2011  1015  3422               	retlw	34
  2012  1016  3418               	retlw	24
  2013  1017  3419               	retlw	25
  2014  1018  341A               	retlw	26
  2015  1019  341B               	retlw	27
  2016  101A  341C               	retlw	28
  2017  101B  341D               	retlw	29
  2018  101C  3423               	retlw	35
  2019  101D  3424               	retlw	36
  2020  101E  3425               	retlw	37
  2021  101F  3426               	retlw	38
  2022  1020  3429               	retlw	41
  2023  1021  342C               	retlw	44
  2024  1022  342D               	retlw	45
  2025  1023  342E               	retlw	46
  2026  1024  3400               	retlw	0
  2027  1025  3401               	retlw	1
  2028  1026  3402               	retlw	2
  2029  1027  3407               	retlw	7
  2030  1028  3408               	retlw	8
  2031  1029  3409               	retlw	9
  2032  102A  3406               	retlw	6
  2033  102B  3404               	retlw	4
  2034  102C  3405               	retlw	5
  2035  102D  3427               	retlw	39
  2036  102E  3428               	retlw	40
  2037  102F                     __end_of_CC2500_registers_address:	
  2038  102F                     _CC2500_rfSettings:	
  2039  102F  3407               	retlw	7
  2040  1030  3407               	retlw	7
  2041  1031  3430               	retlw	48
  2042  1032  3487               	retlw	135
  2043  1033  346B               	retlw	107
  2044  1034  34F8               	retlw	248
  2045  1035  347F               	retlw	127
  2046  1036  343F               	retlw	63
  2047  1037  3409               	retlw	9
  2048  1038  3400               	retlw	0
  2049  1039  345C               	retlw	92
  2050  103A  34A7               	retlw	167
  2051  103B  3462               	retlw	98
  2052  103C  3486               	retlw	134
  2053  103D  3483               	retlw	131
  2054  103E  3403               	retlw	3
  2055  103F  3422               	retlw	34
  2056  1040  34F8               	retlw	248
  2057  1041  3400               	retlw	0
  2058  1042  3444               	retlw	68
  2059  1043  34B6               	retlw	182
  2060  1044  3410               	retlw	16
  2061  1045  3418               	retlw	24
  2062  1046  341D               	retlw	29
  2063  1047  341C               	retlw	28
  2064  1048  34C7               	retlw	199
  2065  1049  3400               	retlw	0
  2066  104A  34B2               	retlw	178
  2067  104B  34EA               	retlw	234
  2068  104C  340A               	retlw	10
  2069  104D  3400               	retlw	0
  2070  104E  3411               	retlw	17
  2071  104F  3459               	retlw	89
  2072  1050  3488               	retlw	136
  2073  1051  3431               	retlw	49
  2074  1052  340B               	retlw	11
  2075  1053  342F               	retlw	47
  2076  1054  342E               	retlw	46
  2077  1055  3406               	retlw	6
  2078  1056  3404               	retlw	4
  2079  1057  3405               	retlw	5
  2080  1058  3400               	retlw	0
  2081  1059  3430               	retlw	48
  2082  105A  34D3               	retlw	211
  2083  105B  3491               	retlw	145
  2084  105C  3441               	retlw	65
  2085  105D  3400               	retlw	0
  2086  105E                     __end_of_CC2500_rfSettings:	
  2087  105E                     _CC2500_patable_vaule:	
  2088  105E  34FE               	retlw	254
  2089  105F  34FE               	retlw	254
  2090  1060  34FE               	retlw	254
  2091  1061  34FE               	retlw	254
  2092  1062  34FE               	retlw	254
  2093  1063  34FE               	retlw	254
  2094  1064  34FE               	retlw	254
  2095  1065  34FE               	retlw	254
  2096  1066                     __end_of_CC2500_patable_vaule:	
  2097                           
  2098                           	psect	nvCOMMON
  2099  007A                     __pnvCOMMON:	
  2100  007A                     _Memory:	
  2101  007A                     	ds	1
  2102                           
  2103                           	psect	nvBANK0
  2104  006E                     __pnvBANK0:	
  2105  006E                     _Product:	
  2106  006E                     	ds	1
  2107  006F                     _TMain:	
  2108  006F                     	ds	1
  2109                           
  2110                           	psect	nvBANK1
  2111  00EE                     __pnvBANK1:	
  2112  00EE                     _Timer0:	
  2113  00EE                     	ds	1
  2114  000C                     _PORTA	set	12
  2115  000D                     _PORTB	set	13
  2116  000E                     _PORTC	set	14
  2117  0015                     _TMR0	set	21
  2118  005F                     _GIE	set	95
  2119  005C                     _INTE	set	92
  2120  0059                     _INTF	set	89
  2121  005B                     _IOCIE	set	91
  2122  0058                     _IOCIF	set	88
  2123  005E                     _PEIE	set	94
  2124  0060                     _RA0	set	96
  2125  0063                     _RA3	set	99
  2126  0064                     _RA4	set	100
  2127  0066                     _RA6	set	102
  2128  0067                     _RA7	set	103
  2129  0068                     _RB0	set	104
  2130  0069                     _RB1	set	105
  2131  006A                     _RB2	set	106
  2132  006B                     _RB3	set	107
  2133  006C                     _RB4	set	108
  2134  006D                     _RB5	set	109
  2135  0070                     _RC0	set	112
  2136  0071                     _RC1	set	113
  2137  0072                     _RC2	set	114
  2138  0074                     _RC4	set	116
  2139  0075                     _RC5	set	117
  2140  0077                     _RC7	set	119
  2141  005D                     _TMR0IE	set	93
  2142  005A                     _TMR0IF	set	90
  2143  009D                     _ADCON0	set	157
  2144  009E                     _ADCON1	set	158
  2145  009C                     _ADRESH	set	156
  2146  009B                     _ADRESL	set	155
  2147  0095                     _OPTION_REG	set	149
  2148  0099                     _OSCCON	set	153
  2149  008C                     _TRISA	set	140
  2150  008D                     _TRISB	set	141
  2151  008E                     _TRISC	set	142
  2152  04E9                     _GO_nDONE	set	1257
  2153  0117                     _FVRCON	set	279
  2154  010C                     _LATA	set	268
  2155  010D                     _LATB	set	269
  2156  010E                     _LATC	set	270
  2157  018C                     _ANSELA	set	396
  2158  018D                     _ANSELB	set	397
  2159  018E                     _ANSELC	set	398
  2160  0192                     _PMADRH	set	402
  2161  0191                     _PMADRL	set	401
  2162  0196                     _PMCON2	set	406
  2163  0194                     _PMDATH	set	404
  2164  0193                     _PMDATL	set	403
  2165  0CAE                     _CFGS	set	3246
  2166  0CAC                     _FREE	set	3244
  2167  0CAD                     _LWLO	set	3245
  2168  0CA8                     _RD	set	3240
  2169  0CA9                     _WR	set	3241
  2170  0CAA                     _WREN	set	3242
  2171  1068                     _WPUB0	set	4200
  2172  1069                     _WPUB1	set	4201
  2173  106A                     _WPUB2	set	4202
  2174  0396                     _IOCBF	set	918
  2175  0395                     _IOCBN	set	917
  2176  0394                     _IOCBP	set	916
  2177  1CB2                     _IOCBF2	set	7346
  2178                           
  2179                           ; #config settings
  2180  0000                     
  2181                           	psect	cinit
  2182  0018                     start_initialization:	
  2183  0018                     __initialization:	
  2184                           
  2185                           ; Clear objects allocated to BITCOMMON
  2186  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2187                           
  2188                           ; Clear objects allocated to COMMON
  2189  0019  01F6               	clrf	__pbssCOMMON& (0+127)
  2190  001A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2191  001B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2192  001C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2193                           
  2194                           ; Clear objects allocated to BANK0
  2195  001D  01E8               	clrf	__pbssBANK0& (0+127)
  2196  001E  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  2197  001F  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  2198  0020  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  2199  0021  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  2200  0022  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  2201                           
  2202                           ; Clear objects allocated to BANK1
  2203  0023  30A0               	movlw	low __pbssBANK1
  2204  0024  0084               	movwf	4
  2205  0025  3000               	movlw	high __pbssBANK1
  2206  0026  0085               	movwf	5
  2207  0027  304E               	movlw	78
  2208  0028  319E  262E  3180   	fcall	clear_ram0
  2209                           
  2210                           ; Clear objects allocated to BANK2
  2211  002B  3020               	movlw	low __pbssBANK2
  2212  002C  0084               	movwf	4
  2213  002D  3001               	movlw	high __pbssBANK2
  2214  002E  0085               	movwf	5
  2215  002F  303F               	movlw	63
  2216  0030  319E  262E  3180   	fcall	clear_ram0
  2217                           
  2218                           ; Initialize objects allocated to BANK3
  2219  0033  30A6               	movlw	low __pidataBANK3
  2220  0034  0084               	movwf	4
  2221  0035  3095               	movlw	(high __pidataBANK3)| (0+128)
  2222  0036  0085               	movwf	5
  2223  0037  30A0               	movlw	low __pdataBANK3
  2224  0038  0086               	movwf	6
  2225  0039  3001               	movlw	high __pdataBANK3
  2226  003A  0087               	movwf	7
  2227  003B  3043               	movlw	67
  2228  003C  319E  2628         	fcall	init_ram
  2229  003E                     end_of_initialization:	
  2230                           ;End of C runtime variable initialization code
  2231                           
  2232  003E                     __end_of__initialization:	
  2233  003E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2234  003F  0020               	movlb	0
  2235  0040  3197  2F04         	ljmp	_main	;jump to C main() function
  2236                           
  2237                           	psect	bitbssCOMMON
  2238  0380                     __pbitbssCOMMON:	
  2239  0380                     _CC2500_Enable:	
  2240  0380                     	ds	1
  2241  0381                     _Receive_GO:	
  2242  0381                     	ds	1
  2243  0382                     _Receive_OK:	
  2244  0382                     	ds	1
  2245  0383                     _RxStatus:	
  2246  0383                     	ds	1
  2247  0384                     _Transceive_GO:	
  2248  0384                     	ds	1
  2249  0385                     _Transceive_OK:	
  2250  0385                     	ds	1
  2251  0386                     _TxStatus:	
  2252  0386                     	ds	1
  2253                           
  2254                           	psect	bssCOMMON
  2255  0076                     __pbssCOMMON:	
  2256  0076                     _Sw:	
  2257  0076                     	ds	2
  2258  0078                     _LED:	
  2259  0078                     	ds	1
  2260  0079                     _RF:	
  2261  0079                     	ds	1
  2262                           
  2263                           	psect	bssBANK0
  2264  0068                     __pbssBANK0:	
  2265  0068                     _Buz:	
  2266  0068                     	ds	1
  2267  0069                     _DelayOff:	
  2268  0069                     	ds	1
  2269  006A                     _Dimmer:	
  2270  006A                     	ds	1
  2271  006B                     _DimmerLights:	
  2272  006B                     	ds	1
  2273  006C                     _DimmerLights11:	
  2274  006C                     	ds	1
  2275  006D                     _DimmerLights22:	
  2276  006D                     	ds	1
  2277                           
  2278                           	psect	bssBANK1
  2279  00A0                     __pbssBANK1:	
  2280  00A0                     _RF_Data:	
  2281  00A0                     	ds	21
  2282  00B5                     _RF_Count:	
  2283  00B5                     	ds	2
  2284  00B7                     _CRC:	
  2285  00B7                     	ds	1
  2286  00B8                     _DimmerLightsIntr:	
  2287  00B8                     	ds	1
  2288  00B9                     _RFSW:	
  2289  00B9                     	ds	1
  2290  00BA                     _RSSI:	
  2291  00BA                     	ds	1
  2292  00BB                     _Rx_Length:	
  2293  00BB                     	ds	1
  2294  00BC                     _SPI0Buffer:	
  2295  00BC                     	ds	1
  2296  00BD                     _Tx_Length:	
  2297  00BD                     	ds	1
  2298  00BE                     _r_address:	
  2299  00BE                     	ds	1
  2300  00BF                     _r_data:	
  2301  00BF                     	ds	1
  2302  00C0                     _s_data:	
  2303  00C0                     	ds	1
  2304  00C1                     _Sw1:	
  2305  00C1                     	ds	9
  2306  00CA                     _VarTimer0:	
  2307  00CA                     	ds	7
  2308  00D1                     _DlySw1:	
  2309  00D1                     	ds	5
  2310  00D6                     _DlySw2:	
  2311  00D6                     	ds	5
  2312  00DB                     _VarErrLED:	
  2313  00DB                     	ds	4
  2314  00DF                     _VarLED1:	
  2315  00DF                     	ds	4
  2316  00E3                     _VarLED2:	
  2317  00E3                     	ds	4
  2318  00E7                     _Dimmer1:	
  2319  00E7                     	ds	3
  2320  00EA                     _RF1:	
  2321  00EA                     	ds	2
  2322  00EC                     _RFSW1:	
  2323  00EC                     	ds	1
  2324  00ED                     _RFSW2:	
  2325  00ED                     	ds	1
  2326                           
  2327                           	psect	bssBANK2
  2328  0120                     __pbssBANK2:	
  2329  0120                     _VarTMain:	
  2330  0120                     	ds	16
  2331  0130                     _DimmerLights1:	
  2332  0130                     	ds	13
  2333  013D                     _DimmerLights2:	
  2334  013D                     	ds	13
  2335  014A                     _Buz1:	
  2336  014A                     	ds	12
  2337  0156                     _Sw2:	
  2338  0156                     	ds	9
  2339                           
  2340                           	psect	dataBANK3
  2341  01A0                     __pdataBANK3:	
  2342  01A0                     _VarMemory:	
  2343  01A0                     	ds	37
  2344  01C5                     _VarProduct:	
  2345  01C5                     	ds	30
  2346                           
  2347                           	psect	clrtext
  2348  1E2E                     clear_ram0:	
  2349                           ;	Called with FSR0 containing the base address, and
  2350                           ;	WREG with the size to clear
  2351                           
  2352  1E2E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2353  1E2F                     clrloop0:	
  2354  1E2F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2355  1E30  3101               	addfsr 0,1
  2356  1E31  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2357  1E32  2E2F               	goto	clrloop0	;have we reached the end yet?
  2358  1E33  3400               	retlw	0	;all done for this memory range, return
  2359                           
  2360                           	psect	inittext
  2361  1E28                     init_ram:	
  2362  1E28  00FE               	movwf	126
  2363  1E29                     initloop:	
  2364  1E29  0012               	moviw fsr0++
  2365  1E2A  001E               	movwi fsr1++
  2366  1E2B  0BFE               	decfsz	126,f
  2367  1E2C  2E29               	goto	initloop
  2368  1E2D  3400               	retlw	0
  2369                           
  2370                           	psect	cstackBANK2
  2371  015F                     __pcstackBANK2:	
  2372  015F                     ??_setRF_Main:	
  2373                           
  2374                           ; 0 bytes @ 0x0
  2375  015F                     	ds	1
  2376  0160                     setRF_Main@rf:	
  2377                           
  2378                           ; 1 bytes @ 0x1
  2379  0160                     	ds	1
  2380  0161                     _setRF_Main$3353:	
  2381                           
  2382                           ; 1 bytes @ 0x2
  2383  0161                     	ds	1
  2384                           
  2385                           	psect	cstackBANK1
  2386  00EF                     __pcstackBANK1:	
  2387  00EF                     getRxData@rf:	
  2388                           
  2389                           ; 1 bytes @ 0x0
  2390  00EF                     	ds	1
  2391                           
  2392                           	psect	cstackCOMMON
  2393  0071                     __pcstackCOMMON:	
  2394  0071                     ?_CC2500_WriteByte:	
  2395  0071                     ?_CC2500_WriteCommand:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0071                     ?_CC2500_ReadStatus:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0071                     ?_CC2500_ReadByte:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0071                     ?_CC2500_PowerRST:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0071                     ?_CC2500_InitSetREG:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0071                     ?_CC2500_InitPATable:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0071                     ?_CC2500_ClearTXFIFO:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0071                     ?_CC2500_ClearRXFIFO:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0071                     ?_CC2500_FrequencyCabr:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0071                     ?_CC2500_SIDLEMode:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0071                     ?_DlyOff_Initialization:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0071                     ?_DlyOff_Main:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0071                     ?_setTxData:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0071                     ?_setDimmerLights_Initialization:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0071                     ?_setDimmerLights_Main:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0071                     ?_setLED_Initialization:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0071                     ?_setLED_Main:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0071                     ?_MainT_Initialization:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0071                     ?_Mcu_Initialization:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0071                     ?_Flash_Memory_Initialization:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0071                     ?_Switch_Initialization:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0071                     ?_RF_Initialization:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0071                     ?_MainT:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0071                     ?_Flash_Memory_Main:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0071                     ?_Switch_Main:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0071                     ?_RF_Main:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0071                     ?_setSw_Enable:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0071                     ?_IO_Set:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0071                     ?_TMR0_Set:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0071                     ?_ADC_Set:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0071                     ?_INT_Set:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0071                     ?_IOC_Set:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0071                     ?_IOC_ISR:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0071                     ??_IOC_ISR:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0071                     ?_TMR0_ISR:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0071                     ??_TMR0_ISR:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0071                     ?_INT_ISR:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0071                     ?_Flash_Memory_Write:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0071                     ?_Flash_Memory_Modify:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0071                     ?_setRF_Initialization:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0071                     ?_setRF_Main:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0071                     ?_RF_RxDisable:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0071                     ?_getRxData:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0071                     ?_setLog_Code:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0071                     ?_setControl_Lights_Table:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0071                     ?_setRFSW_Control:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0071                     ?_setRFSW_AdjControl:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0071                     ?_setRF_DimmerValue:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0071                     ?_setSw_Initialization:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0071                     ?_setSw_Main:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0071                     ?_Sw_DimmerOnFunc:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0071                     ?_Sw_DimmerAdjFunc:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0071                     ?_Sw_DimmerOffFunc:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0071                     ?_Buzzer_Initialization:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0071                     ?_Buzzer_Main:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0071                     ?_CC2500_TxData:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0071                     ?_CC2500_RxData:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0071                     ?_CC2500_PowerOnInitial:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0071                     ?_DelayOffPointSelect:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0071                     ?_DelayOff_Initialization:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0071                     ?_DelayOff_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0071                     ?_DimmerLightsPointSelect:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0071                     ?_DimmerLights_Initialization:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0071                     ?_DimmerLights_Close:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0071                     ?_DimmerLights_Main:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0071                     ?_setDimmerLights_AdjRF:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0071                     ?_DimmerPointSelect:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0071                     ?_LedPointSelect:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0071                     ?_LED_Initialization:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0071                     ?_LED_Main:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0071                     ?_main:	
  2606                           ; 0 bytes @ 0x0
  2607                           
  2608  0071                     ?_ISR:	
  2609                           ; 0 bytes @ 0x0
  2610                           
  2611  0071                     ?_setDimmerReClock:	
  2612                           ; 0 bytes @ 0x0
  2613                           
  2614  0071                     ??_setDimmerReClock:	
  2615                           ; 0 bytes @ 0x0
  2616                           
  2617  0071                     ?_setINT_GO:	
  2618                           ; 0 bytes @ 0x0
  2619                           
  2620  0071                     ?_Flash_Memory_Unlock:	
  2621                           ; 0 bytes @ 0x0
  2622                           
  2623  0071                     ?_Flash_Memory_Erasing:	
  2624                           ; 0 bytes @ 0x0
  2625                           
  2626  0071                     ?_RfPointSelect:	
  2627                           ; 0 bytes @ 0x0
  2628                           
  2629  0071                     ?_RfSWPointSelect:	
  2630                           ; 0 bytes @ 0x0
  2631                           
  2632  0071                     ?_TouchPower:	
  2633                           ; 0 bytes @ 0x0
  2634                           
  2635  0071                     ?_SwPointSelect:	
  2636                           ; 0 bytes @ 0x0
  2637                           
  2638  0071                     ?i1_RfPointSelect:	
  2639                           ; 0 bytes @ 0x0
  2640                           
  2641  0071                     ??i1_RfPointSelect:	
  2642                           ; 0 bytes @ 0x0
  2643                           
  2644  0071                     ?_DelayTimejudge:	
  2645                           ; 0 bytes @ 0x0
  2646                           
  2647  0071                     ?_getPercentValue:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0071                     ?_getDimmer_Detect:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0071                     ?_getDimmerLights_StatusFlag:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0071                     ?_getDimmerLights_Trigger:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0071                     ?_setPercentValue:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0071                     ?_Flash_Memory_Read:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0071                     setRF_Initialization@rf:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668                           
  2669                           ; 1 bytes @ 0x0
  2670  0071                     	ds	1
  2671  0072                     i1RfPointSelect@rf:	
  2672                           
  2673                           ; 1 bytes @ 0x1
  2674  0072                     	ds	1
  2675  0073                     ?_setRF_ReceiveGO:	
  2676  0073                     setRF_ReceiveGO@command:	
  2677                           ; 0 bytes @ 0x2
  2678                           
  2679                           
  2680                           ; 1 bytes @ 0x2
  2681  0073                     	ds	1
  2682  0074                     ??_setRF_ReceiveGO:	
  2683  0074                     setRF_ReceiveGO@rf:	
  2684                           ; 0 bytes @ 0x3
  2685                           
  2686                           
  2687                           ; 1 bytes @ 0x3
  2688  0074                     	ds	1
  2689  0075                     ??_INT_ISR:	
  2690  0075                     ??_ISR:	
  2691                           ; 0 bytes @ 0x4
  2692                           
  2693                           
  2694                           ; 0 bytes @ 0x4
  2695  0075                     	ds	1
  2696                           
  2697                           	psect	cstackBANK0
  2698  0020                     __pcstackBANK0:	
  2699  0020                     ??_CC2500_WriteByte:	
  2700  0020                     ??_CC2500_ReadByte:	
  2701                           ; 0 bytes @ 0x0
  2702                           
  2703  0020                     ?_DelayTime_1us:	
  2704                           ; 0 bytes @ 0x0
  2705                           
  2706  0020                     ?_setRF_DimmerLights:	
  2707                           ; 0 bytes @ 0x0
  2708                           
  2709  0020                     ??_DelayTimejudge:	
  2710                           ; 0 bytes @ 0x0
  2711                           
  2712  0020                     ??_MainT_Initialization:	
  2713                           ; 0 bytes @ 0x0
  2714                           
  2715  0020                     ??_IO_Set:	
  2716                           ; 0 bytes @ 0x0
  2717                           
  2718  0020                     ??_TMR0_Set:	
  2719                           ; 0 bytes @ 0x0
  2720                           
  2721  0020                     ??_ADC_Set:	
  2722                           ; 0 bytes @ 0x0
  2723                           
  2724  0020                     ??_INT_Set:	
  2725                           ; 0 bytes @ 0x0
  2726                           
  2727  0020                     ??_IOC_Set:	
  2728                           ; 0 bytes @ 0x0
  2729                           
  2730  0020                     ??_Flash_Memory_Read:	
  2731                           ; 0 bytes @ 0x0
  2732                           
  2733  0020                     ??_Flash_Memory_Write:	
  2734                           ; 0 bytes @ 0x0
  2735                           
  2736  0020                     ??_setRF_Initialization:	
  2737                           ; 0 bytes @ 0x0
  2738                           
  2739  0020                     ??_Buzzer_Initialization:	
  2740                           ; 0 bytes @ 0x0
  2741                           
  2742  0020                     ??_Buzzer_Main:	
  2743                           ; 0 bytes @ 0x0
  2744                           
  2745  0020                     ??_DelayOffPointSelect:	
  2746                           ; 0 bytes @ 0x0
  2747                           
  2748  0020                     ??_DimmerLightsPointSelect:	
  2749                           ; 0 bytes @ 0x0
  2750                           
  2751  0020                     ??_DimmerPointSelect:	
  2752                           ; 0 bytes @ 0x0
  2753                           
  2754  0020                     ??_LedPointSelect:	
  2755                           ; 0 bytes @ 0x0
  2756                           
  2757  0020                     ??_setINT_GO:	
  2758                           ; 0 bytes @ 0x0
  2759                           
  2760  0020                     ??_Flash_Memory_Unlock:	
  2761                           ; 0 bytes @ 0x0
  2762                           
  2763  0020                     ??_Flash_Memory_Erasing:	
  2764                           ; 0 bytes @ 0x0
  2765                           
  2766  0020                     ??_RfPointSelect:	
  2767                           ; 0 bytes @ 0x0
  2768                           
  2769  0020                     ??_RfSWPointSelect:	
  2770                           ; 0 bytes @ 0x0
  2771                           
  2772  0020                     ??_TouchPower:	
  2773                           ; 0 bytes @ 0x0
  2774                           
  2775  0020                     ??_SwPointSelect:	
  2776                           ; 0 bytes @ 0x0
  2777                           
  2778  0020                     ?___wmul:	
  2779                           ; 0 bytes @ 0x0
  2780                           
  2781  0020                     ?___ftpack:	
  2782                           ; 2 bytes @ 0x0
  2783                           
  2784  0020                     setINT_GO@command:	
  2785                           ; 3 bytes @ 0x0
  2786                           
  2787  0020                     setRF_DimmerLights@on:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790  0020                     SwPointSelect@sw:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793  0020                     DelayTime_1us@count:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796  0020                     ___wmul@multiplier:	
  2797                           ; 2 bytes @ 0x0
  2798                           
  2799  0020                     ___ftpack@arg:	
  2800                           ; 2 bytes @ 0x0
  2801                           
  2802                           
  2803                           ; 3 bytes @ 0x0
  2804  0020                     	ds	1
  2805  0021                     ?_setSw_Status:	
  2806  0021                     ??_setRF_DimmerLights:	
  2807                           ; 0 bytes @ 0x1
  2808                           
  2809  0021                     ??_Mcu_Initialization:	
  2810                           ; 0 bytes @ 0x1
  2811                           
  2812  0021                     ??_RF_Initialization:	
  2813                           ; 0 bytes @ 0x1
  2814                           
  2815  0021                     ??_setSw_Enable:	
  2816                           ; 0 bytes @ 0x1
  2817                           
  2818  0021                     CC2500_WriteByte@loop_a:	
  2819                           ; 0 bytes @ 0x1
  2820                           
  2821  0021                     CC2500_ReadByte@loop_b:	
  2822                           ; 1 bytes @ 0x1
  2823                           
  2824  0021                     DelayOffPointSelect@sw:	
  2825                           ; 1 bytes @ 0x1
  2826                           
  2827  0021                     DelayTimejudge@i:	
  2828                           ; 1 bytes @ 0x1
  2829                           
  2830  0021                     DimmerLightsPointSelect@lights:	
  2831                           ; 1 bytes @ 0x1
  2832                           
  2833  0021                     DimmerPointSelect@dimmer:	
  2834                           ; 1 bytes @ 0x1
  2835                           
  2836  0021                     LedPointSelect@led:	
  2837                           ; 1 bytes @ 0x1
  2838                           
  2839  0021                     Flash_Memory_Read@i:	
  2840                           ; 1 bytes @ 0x1
  2841                           
  2842  0021                     Flash_Memory_Write@i:	
  2843                           ; 1 bytes @ 0x1
  2844                           
  2845  0021                     RfPointSelect@rf:	
  2846                           ; 1 bytes @ 0x1
  2847                           
  2848  0021                     RfSWPointSelect@sw:	
  2849                           ; 1 bytes @ 0x1
  2850                           
  2851  0021                     setSw_Enable@command:	
  2852                           ; 1 bytes @ 0x1
  2853                           
  2854  0021                     setSw_Status@command:	
  2855                           ; 1 bytes @ 0x1
  2856                           
  2857                           
  2858                           ; 1 bytes @ 0x1
  2859  0021                     	ds	1
  2860  0022                     ??_CC2500_WriteCommand:	
  2861  0022                     ??_CC2500_ReadStatus:	
  2862                           ; 0 bytes @ 0x2
  2863                           
  2864  0022                     ?_setRF_RxStatus:	
  2865                           ; 0 bytes @ 0x2
  2866                           
  2867  0022                     ??_DelayTime_1us:	
  2868                           ; 0 bytes @ 0x2
  2869                           
  2870  0022                     ?_CC2500_WriteREG:	
  2871                           ; 0 bytes @ 0x2
  2872                           
  2873  0022                     ??_DlyOff_Initialization:	
  2874                           ; 0 bytes @ 0x2
  2875                           
  2876  0022                     ??_setSw_Status:	
  2877                           ; 0 bytes @ 0x2
  2878                           
  2879  0022                     ?_setRFSW_Status:	
  2880                           ; 0 bytes @ 0x2
  2881                           
  2882  0022                     ?_setDimmerLights_Trigger:	
  2883                           ; 0 bytes @ 0x2
  2884                           
  2885  0022                     ?_setDimmerLights_Switch:	
  2886                           ; 0 bytes @ 0x2
  2887                           
  2888  0022                     ??_setTxData:	
  2889                           ; 0 bytes @ 0x2
  2890                           
  2891  0022                     ??_getDimmer_Detect:	
  2892                           ; 0 bytes @ 0x2
  2893                           
  2894  0022                     ?_setDimmer_Detect:	
  2895                           ; 0 bytes @ 0x2
  2896                           
  2897  0022                     ??_getDimmerLights_StatusFlag:	
  2898                           ; 0 bytes @ 0x2
  2899                           
  2900  0022                     ??_getDimmerLights_Trigger:	
  2901                           ; 0 bytes @ 0x2
  2902                           
  2903  0022                     ?_setLED:	
  2904                           ; 0 bytes @ 0x2
  2905                           
  2906  0022                     ??_setLED_Main:	
  2907                           ; 0 bytes @ 0x2
  2908                           
  2909  0022                     ?_setDimmerLights_AdjGo:	
  2910                           ; 0 bytes @ 0x2
  2911                           
  2912  0022                     ?_setDimmerLights_TriggerAdj:	
  2913                           ; 0 bytes @ 0x2
  2914                           
  2915  0022                     ?_setRF_Learn:	
  2916                           ; 0 bytes @ 0x2
  2917                           
  2918  0022                     CC2500_WriteREG@value:	
  2919                           ; 0 bytes @ 0x2
  2920                           
  2921  0022                     DlyOff_Initialization@sw:	
  2922                           ; 1 bytes @ 0x2
  2923                           
  2924  0022                     DelayTimejudge@value:	
  2925                           ; 1 bytes @ 0x2
  2926                           
  2927  0022                     setDimmerLights_Switch@command:	
  2928                           ; 1 bytes @ 0x2
  2929                           
  2930  0022                     setDimmerLights_AdjGo@command:	
  2931                           ; 1 bytes @ 0x2
  2932                           
  2933  0022                     setDimmerLights_Trigger@command:	
  2934                           ; 1 bytes @ 0x2
  2935                           
  2936  0022                     setDimmerLights_TriggerAdj@command:	
  2937                           ; 1 bytes @ 0x2
  2938                           
  2939  0022                     setDimmer_Detect@command:	
  2940                           ; 1 bytes @ 0x2
  2941                           
  2942  0022                     setLED@command:	
  2943                           ; 1 bytes @ 0x2
  2944                           
  2945  0022                     Flash_Memory_Read@address:	
  2946                           ; 1 bytes @ 0x2
  2947                           
  2948  0022                     setRF_Learn@command:	
  2949                           ; 1 bytes @ 0x2
  2950                           
  2951  0022                     setRF_RxStatus@command:	
  2952                           ; 1 bytes @ 0x2
  2953                           
  2954  0022                     setRFSW_Status@command:	
  2955                           ; 1 bytes @ 0x2
  2956                           
  2957  0022                     setSw_Status@sw:	
  2958                           ; 1 bytes @ 0x2
  2959                           
  2960  0022                     DelayTime_1us@i:	
  2961                           ; 1 bytes @ 0x2
  2962                           
  2963  0022                     ___wmul@multiplicand:	
  2964                           ; 2 bytes @ 0x2
  2965                           
  2966                           
  2967                           ; 2 bytes @ 0x2
  2968  0022                     	ds	1
  2969  0023                     ??_setRF_RxStatus:	
  2970  0023                     ??_CC2500_WriteREG:	
  2971                           ; 0 bytes @ 0x3
  2972                           
  2973  0023                     ??_setRFSW_Status:	
  2974                           ; 0 bytes @ 0x3
  2975                           
  2976  0023                     ??_setDimmerLights_Trigger:	
  2977                           ; 0 bytes @ 0x3
  2978                           
  2979  0023                     ??_setDimmerLights_Switch:	
  2980                           ; 0 bytes @ 0x3
  2981                           
  2982  0023                     ??_setDimmer_Detect:	
  2983                           ; 0 bytes @ 0x3
  2984                           
  2985  0023                     ??_setLED:	
  2986                           ; 0 bytes @ 0x3
  2987                           
  2988  0023                     ??_DelayOff_Initialization:	
  2989                           ; 0 bytes @ 0x3
  2990                           
  2991  0023                     ?_setDelayOff_GO:	
  2992                           ; 0 bytes @ 0x3
  2993                           
  2994  0023                     ??_setDimmerLights_AdjGo:	
  2995                           ; 0 bytes @ 0x3
  2996                           
  2997  0023                     ??_setDimmerLights_TriggerAdj:	
  2998                           ; 0 bytes @ 0x3
  2999                           
  3000  0023                     ??_setRF_Learn:	
  3001                           ; 0 bytes @ 0x3
  3002                           
  3003  0023                     CC2500_WriteCommand@command:	
  3004                           ; 0 bytes @ 0x3
  3005                           
  3006  0023                     CC2500_ReadStatus@status_addr:	
  3007                           ; 1 bytes @ 0x3
  3008                           
  3009  0023                     setDelayOff_GO@command:	
  3010                           ; 1 bytes @ 0x3
  3011                           
  3012  0023                     getDimmerLights_StatusFlag@length:	
  3013                           ; 1 bytes @ 0x3
  3014                           
  3015  0023                     getDimmerLights_Trigger@length:	
  3016                           ; 1 bytes @ 0x3
  3017                           
  3018  0023                     setDimmerLights_Switch@lights:	
  3019                           ; 1 bytes @ 0x3
  3020                           
  3021  0023                     setDimmerLights_AdjGo@lights:	
  3022                           ; 1 bytes @ 0x3
  3023                           
  3024  0023                     setDimmerLights_Trigger@lights:	
  3025                           ; 1 bytes @ 0x3
  3026                           
  3027  0023                     setDimmerLights_TriggerAdj@lights:	
  3028                           ; 1 bytes @ 0x3
  3029                           
  3030  0023                     setDimmer_Detect@dimmer:	
  3031                           ; 1 bytes @ 0x3
  3032                           
  3033  0023                     getDimmer_Detect@dimmer:	
  3034                           ; 1 bytes @ 0x3
  3035                           
  3036  0023                     setLED@led:	
  3037                           ; 1 bytes @ 0x3
  3038                           
  3039  0023                     Flash_Memory_Read@ret:	
  3040                           ; 1 bytes @ 0x3
  3041                           
  3042  0023                     setRF_Learn@rf:	
  3043                           ; 1 bytes @ 0x3
  3044                           
  3045  0023                     setRF_RxStatus@rf:	
  3046                           ; 1 bytes @ 0x3
  3047                           
  3048  0023                     setRFSW_Status@sw:	
  3049                           ; 1 bytes @ 0x3
  3050                           
  3051  0023                     setRF_DimmerLights@status:	
  3052                           ; 1 bytes @ 0x3
  3053                           
  3054  0023                     ___ftpack@exp:	
  3055                           ; 1 bytes @ 0x3
  3056                           
  3057                           
  3058                           ; 1 bytes @ 0x3
  3059  0023                     	ds	1
  3060  0024                     ??_CC2500_ClearTXFIFO:	
  3061  0024                     ??_CC2500_ClearRXFIFO:	
  3062                           ; 0 bytes @ 0x4
  3063                           
  3064  0024                     ??_CC2500_SIDLEMode:	
  3065                           ; 0 bytes @ 0x4
  3066                           
  3067  0024                     ?_setDimmerLights:	
  3068                           ; 0 bytes @ 0x4
  3069                           
  3070  0024                     ??_setLED_Initialization:	
  3071                           ; 0 bytes @ 0x4
  3072                           
  3073  0024                     ??_Flash_Memory_Modify:	
  3074                           ; 0 bytes @ 0x4
  3075                           
  3076  0024                     ??_RF_RxDisable:	
  3077                           ; 0 bytes @ 0x4
  3078                           
  3079  0024                     ??_setSw_Initialization:	
  3080                           ; 0 bytes @ 0x4
  3081                           
  3082  0024                     ??_Sw_DimmerAdjFunc:	
  3083                           ; 0 bytes @ 0x4
  3084                           
  3085  0024                     ??_CC2500_TxData:	
  3086                           ; 0 bytes @ 0x4
  3087                           
  3088  0024                     ??_CC2500_RxData:	
  3089                           ; 0 bytes @ 0x4
  3090                           
  3091  0024                     ??___wmul:	
  3092                           ; 0 bytes @ 0x4
  3093                           
  3094  0024                     CC2500_WriteREG@w_addr:	
  3095                           ; 0 bytes @ 0x4
  3096                           
  3097  0024                     setDelayOff_GO@value:	
  3098                           ; 1 bytes @ 0x4
  3099                           
  3100  0024                     getDimmerLights_StatusFlag@Status:	
  3101                           ; 1 bytes @ 0x4
  3102                           
  3103  0024                     getDimmerLights_Trigger@Status:	
  3104                           ; 1 bytes @ 0x4
  3105                           
  3106  0024                     setDimmerLights@status:	
  3107                           ; 1 bytes @ 0x4
  3108                           
  3109  0024                     setLED_Initialization@led:	
  3110                           ; 1 bytes @ 0x4
  3111                           
  3112  0024                     setLED_Main@led:	
  3113                           ; 1 bytes @ 0x4
  3114                           
  3115  0024                     setTxData@rf:	
  3116                           ; 1 bytes @ 0x4
  3117                           
  3118  0024                     RF_RxDisable@rf:	
  3119                           ; 1 bytes @ 0x4
  3120                           
  3121  0024                     setRF_DimmerLights@lights:	
  3122                           ; 1 bytes @ 0x4
  3123                           
  3124  0024                     setSw_Initialization@sw:	
  3125                           ; 1 bytes @ 0x4
  3126                           
  3127  0024                     Sw_DimmerAdjFunc@sw:	
  3128                           ; 1 bytes @ 0x4
  3129                           
  3130  0024                     ___ftpack@sign:	
  3131                           ; 1 bytes @ 0x4
  3132                           
  3133  0024                     DelayTime_1us@j:	
  3134                           ; 1 bytes @ 0x4
  3135                           
  3136  0024                     ___wmul@product:	
  3137                           ; 2 bytes @ 0x4
  3138                           
  3139                           
  3140                           ; 2 bytes @ 0x4
  3141  0024                     	ds	1
  3142  0025                     ??_CC2500_InitSetREG:	
  3143  0025                     ??_CC2500_InitPATable:	
  3144                           ; 0 bytes @ 0x5
  3145                           
  3146  0025                     ??_setDimmerLights:	
  3147                           ; 0 bytes @ 0x5
  3148                           
  3149  0025                     ??_Switch_Initialization:	
  3150                           ; 0 bytes @ 0x5
  3151                           
  3152  0025                     ?_setRF_Enable:	
  3153                           ; 0 bytes @ 0x5
  3154                           
  3155  0025                     ??___ftpack:	
  3156                           ; 0 bytes @ 0x5
  3157                           
  3158  0025                     ??_setDelayOff_GO:	
  3159                           ; 0 bytes @ 0x5
  3160                           
  3161  0025                     ??_LED_Initialization:	
  3162                           ; 0 bytes @ 0x5
  3163                           
  3164  0025                     ??_LED_Main:	
  3165                           ; 0 bytes @ 0x5
  3166                           
  3167  0025                     CC2500_TxData@loop_e:	
  3168                           ; 0 bytes @ 0x5
  3169                           
  3170  0025                     CC2500_RxData@loop_f:	
  3171                           ; 1 bytes @ 0x5
  3172                           
  3173  0025                     getDimmerLights_StatusFlag@i:	
  3174                           ; 1 bytes @ 0x5
  3175                           
  3176  0025                     getDimmerLights_Trigger@i:	
  3177                           ; 1 bytes @ 0x5
  3178                           
  3179  0025                     setTxData@i:	
  3180                           ; 1 bytes @ 0x5
  3181                           
  3182  0025                     setRF_Enable@command:	
  3183                           ; 1 bytes @ 0x5
  3184                           
  3185                           
  3186                           ; 1 bytes @ 0x5
  3187  0025                     	ds	1
  3188  0026                     ??_CC2500_PowerRST:	
  3189  0026                     ??_CC2500_FrequencyCabr:	
  3190                           ; 0 bytes @ 0x6
  3191                           
  3192  0026                     ??_setRF_Enable:	
  3193                           ; 0 bytes @ 0x6
  3194                           
  3195  0026                     ??_Sw_DimmerOnFunc:	
  3196                           ; 0 bytes @ 0x6
  3197                           
  3198  0026                     ?_setBuz:	
  3199                           ; 0 bytes @ 0x6
  3200                           
  3201  0026                     ??_DimmerLights_Close:	
  3202                           ; 0 bytes @ 0x6
  3203                           
  3204  0026                     CC2500_InitSetREG@temp1:	
  3205                           ; 0 bytes @ 0x6
  3206                           
  3207  0026                     CC2500_InitPATable@temp:	
  3208                           ; 1 bytes @ 0x6
  3209                           
  3210  0026                     setDelayOff_GO@sw:	
  3211                           ; 1 bytes @ 0x6
  3212                           
  3213  0026                     setDimmerLights@lights:	
  3214                           ; 1 bytes @ 0x6
  3215                           
  3216  0026                     Flash_Memory_Modify@i:	
  3217                           ; 1 bytes @ 0x6
  3218                           
  3219  0026                     setRF_Enable@rf:	
  3220                           ; 1 bytes @ 0x6
  3221                           
  3222  0026                     Sw_DimmerOnFunc@sw:	
  3223                           ; 1 bytes @ 0x6
  3224                           
  3225  0026                     setBuz@time:	
  3226                           ; 1 bytes @ 0x6
  3227                           
  3228                           
  3229                           ; 2 bytes @ 0x6
  3230  0026                     	ds	1
  3231  0027                     ??_Flash_Memory_Main:	
  3232  0027                     ??_Sw_DimmerOffFunc:	
  3233                           ; 0 bytes @ 0x7
  3234                           
  3235  0027                     CC2500_InitSetREG@temp2:	
  3236                           ; 0 bytes @ 0x7
  3237                           
  3238  0027                     CC2500_InitPATable@loop_d:	
  3239                           ; 1 bytes @ 0x7
  3240                           
  3241                           
  3242                           ; 1 bytes @ 0x7
  3243  0027                     	ds	1
  3244  0028                     ??_setBuz:	
  3245  0028                     ?___awtoft:	
  3246                           ; 0 bytes @ 0x8
  3247                           
  3248  0028                     CC2500_InitSetREG@loop_c:	
  3249                           ; 3 bytes @ 0x8
  3250                           
  3251  0028                     ___awtoft@c:	
  3252                           ; 1 bytes @ 0x8
  3253                           
  3254                           
  3255                           ; 2 bytes @ 0x8
  3256  0028                     	ds	1
  3257  0029                     ??_CC2500_PowerOnInitial:	
  3258  0029                     setBuz@count:	
  3259                           ; 0 bytes @ 0x9
  3260                           
  3261  0029                     Sw_DimmerOffFunc@sw:	
  3262                           ; 1 bytes @ 0x9
  3263                           
  3264                           
  3265                           ; 1 bytes @ 0x9
  3266  0029                     	ds	1
  3267  002A                     ??_DlyOff_Main:	
  3268  002A                     ??_MainT:	
  3269                           ; 0 bytes @ 0xA
  3270                           
  3271  002A                     ??_setLog_Code:	
  3272                           ; 0 bytes @ 0xA
  3273                           
  3274  002A                     ??_setRFSW_Control:	
  3275                           ; 0 bytes @ 0xA
  3276                           
  3277  002A                     ??_setSw_Main:	
  3278                           ; 0 bytes @ 0xA
  3279                           
  3280                           
  3281                           ; 0 bytes @ 0xA
  3282  002A                     	ds	1
  3283  002B                     ??___awtoft:	
  3284  002B                     setLog_Code@rf:	
  3285                           ; 0 bytes @ 0xB
  3286                           
  3287                           
  3288                           ; 1 bytes @ 0xB
  3289  002B                     	ds	1
  3290  002C                     DlyOff_Main@sw:	
  3291  002C                     setRFSW_Control@sw:	
  3292                           ; 1 bytes @ 0xC
  3293                           
  3294  002C                     _setSw_Main$3642:	
  3295                           ; 1 bytes @ 0xC
  3296                           
  3297                           
  3298                           ; 1 bytes @ 0xC
  3299  002C                     	ds	1
  3300  002D                     ??_DelayOff_Main:	
  3301  002D                     _setSw_Main$3643:	
  3302                           ; 0 bytes @ 0xD
  3303                           
  3304  002D                     ___awtoft@sign:	
  3305                           ; 1 bytes @ 0xD
  3306                           
  3307                           
  3308                           ; 1 bytes @ 0xD
  3309  002D                     	ds	1
  3310  002E                     ?___ftdiv:	
  3311  002E                     ?___ftmul:	
  3312                           ; 3 bytes @ 0xE
  3313                           
  3314  002E                     setSw_Main@sw:	
  3315                           ; 3 bytes @ 0xE
  3316                           
  3317  002E                     ___ftdiv@f2:	
  3318                           ; 1 bytes @ 0xE
  3319                           
  3320  002E                     ___ftmul@f1:	
  3321                           ; 3 bytes @ 0xE
  3322                           
  3323                           
  3324                           ; 3 bytes @ 0xE
  3325  002E                     	ds	1
  3326  002F                     ??_Switch_Main:	
  3327                           
  3328                           ; 0 bytes @ 0xF
  3329  002F                     	ds	2
  3330  0031                     ___ftdiv@f1:	
  3331  0031                     ___ftmul@f2:	
  3332                           ; 3 bytes @ 0x11
  3333                           
  3334                           
  3335                           ; 3 bytes @ 0x11
  3336  0031                     	ds	3
  3337  0034                     ??___ftdiv:	
  3338  0034                     ??___ftmul:	
  3339                           ; 0 bytes @ 0x14
  3340                           
  3341                           
  3342                           ; 0 bytes @ 0x14
  3343  0034                     	ds	4
  3344  0038                     ___ftdiv@cntr:	
  3345  0038                     ___ftmul@exp:	
  3346                           ; 1 bytes @ 0x18
  3347                           
  3348                           
  3349                           ; 1 bytes @ 0x18
  3350  0038                     	ds	1
  3351  0039                     ___ftdiv@f3:	
  3352  0039                     ___ftmul@f3_as_product:	
  3353                           ; 3 bytes @ 0x19
  3354                           
  3355                           
  3356                           ; 3 bytes @ 0x19
  3357  0039                     	ds	3
  3358  003C                     ___ftdiv@exp:	
  3359  003C                     ___ftmul@cntr:	
  3360                           ; 1 bytes @ 0x1C
  3361                           
  3362                           
  3363                           ; 1 bytes @ 0x1C
  3364  003C                     	ds	1
  3365  003D                     ___ftdiv@sign:	
  3366  003D                     ___ftmul@sign:	
  3367                           ; 1 bytes @ 0x1D
  3368                           
  3369                           
  3370                           ; 1 bytes @ 0x1D
  3371  003D                     	ds	1
  3372  003E                     ?___ftadd:	
  3373  003E                     ___ftadd@f1:	
  3374                           ; 3 bytes @ 0x1E
  3375                           
  3376                           
  3377                           ; 3 bytes @ 0x1E
  3378  003E                     	ds	3
  3379  0041                     ___ftadd@f2:	
  3380                           
  3381                           ; 3 bytes @ 0x21
  3382  0041                     	ds	3
  3383  0044                     ??___ftadd:	
  3384                           
  3385                           ; 0 bytes @ 0x24
  3386  0044                     	ds	4
  3387  0048                     ___ftadd@sign:	
  3388                           
  3389                           ; 1 bytes @ 0x28
  3390  0048                     	ds	1
  3391  0049                     ___ftadd@exp2:	
  3392                           
  3393                           ; 1 bytes @ 0x29
  3394  0049                     	ds	1
  3395  004A                     ___ftadd@exp1:	
  3396                           
  3397                           ; 1 bytes @ 0x2A
  3398  004A                     	ds	1
  3399  004B                     ?___fttol:	
  3400  004B                     ___fttol@f1:	
  3401                           ; 4 bytes @ 0x2B
  3402                           
  3403                           
  3404                           ; 3 bytes @ 0x2B
  3405  004B                     	ds	4
  3406  004F                     ??___fttol:	
  3407                           
  3408                           ; 0 bytes @ 0x2F
  3409  004F                     	ds	4
  3410  0053                     ___fttol@sign1:	
  3411                           
  3412                           ; 1 bytes @ 0x33
  3413  0053                     	ds	1
  3414  0054                     ___fttol@lval:	
  3415                           
  3416                           ; 4 bytes @ 0x34
  3417  0054                     	ds	4
  3418  0058                     ___fttol@exp1:	
  3419                           
  3420                           ; 1 bytes @ 0x38
  3421  0058                     	ds	1
  3422  0059                     ??_getPercentValue:	
  3423  0059                     ??_setPercentValue:	
  3424                           ; 0 bytes @ 0x39
  3425                           
  3426  0059                     setPercentValue@value:	
  3427                           ; 0 bytes @ 0x39
  3428                           
  3429                           
  3430                           ; 1 bytes @ 0x39
  3431  0059                     	ds	1
  3432  005A                     setPercentValue@i:	
  3433                           
  3434                           ; 3 bytes @ 0x3A
  3435  005A                     	ds	1
  3436  005B                     getPercentValue@value:	
  3437                           
  3438                           ; 1 bytes @ 0x3B
  3439  005B                     	ds	1
  3440  005C                     getPercentValue@i:	
  3441                           
  3442                           ; 3 bytes @ 0x3C
  3443  005C                     	ds	1
  3444  005D                     ?_setDimmerLights_Adj:	
  3445  005D                     ??_Flash_Memory_Initialization:	
  3446                           ; 0 bytes @ 0x3D
  3447                           
  3448  005D                     setDimmerLights_Adj@status:	
  3449                           ; 0 bytes @ 0x3D
  3450                           
  3451                           
  3452                           ; 1 bytes @ 0x3D
  3453  005D                     	ds	1
  3454  005E                     ??_setDimmerLights_Adj:	
  3455  005E                     Flash_Memory_Initialization@i:	
  3456                           ; 0 bytes @ 0x3E
  3457                           
  3458                           
  3459                           ; 1 bytes @ 0x3E
  3460  005E                     	ds	1
  3461  005F                     ??_setDimmerLights_Initialization:	
  3462  005F                     ??_setDimmerLights_AdjRF:	
  3463                           ; 0 bytes @ 0x3F
  3464                           
  3465                           
  3466                           ; 0 bytes @ 0x3F
  3467  005F                     	ds	1
  3468  0060                     setDimmerLights_Adj@lights:	
  3469  0060                     setDimmerLights_AdjRF@lights:	
  3470                           ; 1 bytes @ 0x40
  3471                           
  3472                           
  3473                           ; 1 bytes @ 0x40
  3474  0060                     	ds	1
  3475  0061                     ??_setDimmerLights_Main:	
  3476  0061                     ??_setRF_DimmerValue:	
  3477                           ; 0 bytes @ 0x41
  3478                           
  3479  0061                     setDimmerLights_Initialization@lights:	
  3480                           ; 0 bytes @ 0x41
  3481                           
  3482  0061                     setDimmerLights_Main@clear:	
  3483                           ; 1 bytes @ 0x41
  3484                           
  3485                           
  3486                           ; 1 bytes @ 0x41
  3487  0061                     	ds	1
  3488  0062                     ??_DimmerLights_Initialization:	
  3489  0062                     setDimmerLights_Main@lights:	
  3490                           ; 0 bytes @ 0x42
  3491                           
  3492                           
  3493                           ; 1 bytes @ 0x42
  3494  0062                     	ds	1
  3495  0063                     ??_DimmerLights_Main:	
  3496  0063                     setRF_DimmerValue@lights:	
  3497                           ; 0 bytes @ 0x43
  3498                           
  3499                           
  3500                           ; 1 bytes @ 0x43
  3501  0063                     	ds	1
  3502  0064                     ??_setRFSW_AdjControl:	
  3503                           
  3504                           ; 0 bytes @ 0x44
  3505  0064                     	ds	2
  3506  0066                     setRFSW_AdjControl@sw:	
  3507                           
  3508                           ; 1 bytes @ 0x46
  3509  0066                     	ds	1
  3510  0067                     ??_setControl_Lights_Table:	
  3511  0067                     setControl_Lights_Table@rf:	
  3512                           ; 0 bytes @ 0x47
  3513                           
  3514                           
  3515                           ; 1 bytes @ 0x47
  3516  0067                     	ds	1
  3517  0068                     ??_RF_Main:	
  3518  0068                     ??_getRxData:	
  3519                           ; 0 bytes @ 0x48
  3520                           
  3521  0068                     ??_main:	
  3522                           ; 0 bytes @ 0x48
  3523                           
  3524                           
  3525                           	psect	maintext
  3526  1704                     __pmaintext:	
  3527                           ; 0 bytes @ 0x48
  3528 ;;
  3529 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3530 ;;
  3531 ;; *************** function _main *****************
  3532 ;; Defined at:
  3533 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;		None               void
  3540 ;; Registers used:
  3541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 17F/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;Total ram usage:        0 bytes
  3552 ;; Hardware stack levels required when called:   14
  3553 ;; This function calls:
  3554 ;;		_Buzzer_Initialization
  3555 ;;		_Buzzer_Main
  3556 ;;		_CC2500_PowerOnInitial
  3557 ;;		_DelayOff_Initialization
  3558 ;;		_DelayOff_Main
  3559 ;;		_DimmerLights_Initialization
  3560 ;;		_DimmerLights_Main
  3561 ;;		_Flash_Memory_Initialization
  3562 ;;		_Flash_Memory_Main
  3563 ;;		_LED_Initialization
  3564 ;;		_LED_Main
  3565 ;;		_MainT
  3566 ;;		_MainT_Initialization
  3567 ;;		_Mcu_Initialization
  3568 ;;		_RF_Initialization
  3569 ;;		_RF_Main
  3570 ;;		_Switch_Initialization
  3571 ;;		_Switch_Main
  3572 ;; This function is called by:
  3573 ;;		Startup code after reset
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           
  3578                           ;psect for function _main
  3579  1704                     _main:	
  3580                           
  3581                           ;main.c: 9: MainT_Initialization();
  3582                           
  3583                           ;incstack = 0
  3584                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3585  1704  3188  2000  3197   	fcall	_MainT_Initialization
  3586                           
  3587                           ;main.c: 10: Mcu_Initialization();
  3588  1707  3190  20B9  3197   	fcall	_Mcu_Initialization
  3589                           
  3590                           ;main.c: 11: Flash_Memory_Initialization();
  3591  170A  3187  2722  3197   	fcall	_Flash_Memory_Initialization
  3592                           
  3593                           ;main.c: 12: LED_Initialization();
  3594  170D  319E  26E5  3197   	fcall	_LED_Initialization
  3595                           
  3596                           ;main.c: 13: Buzzer_Initialization();
  3597  1710  319E  267E  3197   	fcall	_Buzzer_Initialization
  3598                           
  3599                           ;main.c: 15: ;;
  3600                           ;main.c: 16: ;;
  3601                           ;main.c: 17: ;;
  3602                           ;main.c: 18: ;;
  3603                           ;main.c: 19: DelayOff_Initialization();
  3604  1713  319E  2642  3197   	fcall	_DelayOff_Initialization
  3605                           
  3606                           ;main.c: 21: DimmerLights_Initialization();
  3607  1716  319F  27DB  3197   	fcall	_DimmerLights_Initialization
  3608                           
  3609                           ;main.c: 22: ;;
  3610                           ;main.c: 23: ;;
  3611                           ;main.c: 24: ;;
  3612                           ;main.c: 26: Switch_Initialization();
  3613  1719  319F  2717  3197   	fcall	_Switch_Initialization
  3614                           
  3615                           ;main.c: 27: RF_Initialization();
  3616  171C  319E  2616  3197   	fcall	_RF_Initialization
  3617                           
  3618                           ;main.c: 28: CC2500_PowerOnInitial();
  3619  171F  3190  208E  3197   	fcall	_CC2500_PowerOnInitial
  3620  1722                     l9046:	
  3621                           ;main.c: 30: while(1)
  3622                           
  3623                           
  3624                           ;main.c: 31: {
  3625                           ;main.c: 32: if(TMain->PowerON)
  3626  1722  0020               	movlb	0	; select bank0
  3627  1723  086F               	movf	_TMain,w
  3628  1724  0086               	movwf	6
  3629  1725  3001               	movlw	1	; select bank2/3
  3630  1726  0087               	movwf	7
  3631  1727  1C01               	btfss	1,0
  3632  1728  2F2C               	goto	l9050
  3633                           
  3634                           ;main.c: 33: {
  3635                           ;main.c: 35: ;;
  3636                           ;main.c: 39: ;;
  3637                           ;main.c: 43: ;;
  3638                           ;main.c: 47: ;;
  3639                           ;main.c: 59: Buzzer_Main();
  3640  1729  318F  2758  3197   	fcall	_Buzzer_Main
  3641  172C                     l9050:	
  3642                           
  3643                           ;main.c: 61: }
  3644                           ;main.c: 63: if(TMain->T0_Timerout)
  3645  172C  0020               	movlb	0	; select bank0
  3646  172D  086F               	movf	_TMain,w
  3647  172E  0086               	movwf	6
  3648  172F  3001               	movlw	1	; select bank2/3
  3649  1730  0087               	movwf	7
  3650  1731  1C81               	btfss	1,1
  3651  1732  2F22               	goto	l9046
  3652                           
  3653                           ;main.c: 64: {
  3654                           ;main.c: 65: TMain->T0_Timerout = 0;
  3655  1733  086F               	movf	_TMain,w
  3656  1734  0086               	movwf	6
  3657  1735  3001               	movlw	1	; select bank2/3
  3658  1736  0087               	movwf	7
  3659  1737  1081               	bcf	1,1
  3660                           
  3661                           ;main.c: 66: MainT();
  3662  1738  318A  22C9  3197   	fcall	_MainT
  3663                           
  3664                           ;main.c: 67: if(TMain->PowerON)
  3665  173B  0020               	movlb	0	; select bank0
  3666  173C  086F               	movf	_TMain,w
  3667  173D  0086               	movwf	6
  3668  173E  3001               	movlw	1	; select bank2/3
  3669  173F  0087               	movwf	7
  3670  1740  1C01               	btfss	1,0
  3671  1741  2F22               	goto	l9046
  3672                           
  3673                           ;main.c: 68: {
  3674                           ;main.c: 69: Flash_Memory_Main();
  3675  1742  3195  2563  3197   	fcall	_Flash_Memory_Main
  3676                           
  3677                           ;main.c: 71: LED_Main();
  3678  1745  319E  26F1  3197   	fcall	_LED_Main
  3679                           
  3680                           ;main.c: 73: ;;
  3681                           ;main.c: 74: ;;
  3682                           ;main.c: 75: ;;
  3683                           ;main.c: 76: ;;
  3684                           ;main.c: 78: ;;
  3685                           ;main.c: 79: DimmerLights_Main();
  3686  1748  319E  26AA  3197   	fcall	_DimmerLights_Main
  3687                           
  3688                           ;main.c: 80: Switch_Main();
  3689  174B  319E  265A  3197   	fcall	_Switch_Main
  3690                           
  3691                           ;main.c: 81: ;;
  3692                           ;main.c: 82: ;;
  3693                           ;main.c: 84: RF_Main();
  3694  174E  319E  261A  3197   	fcall	_RF_Main
  3695                           
  3696                           ;main.c: 85: DelayOff_Main();
  3697  1751  319E  264A  3197   	fcall	_DelayOff_Main
  3698  1754  2F22               	goto	l9046
  3699  1755                     __end_of_main:	
  3700                           
  3701                           	psect	text1
  3702  1E5A                     __ptext1:	
  3703 ;; *************** function _Switch_Main *****************
  3704 ;; Defined at:
  3705 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;		None               void
  3712 ;; Registers used:
  3713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    8
  3726 ;; This function calls:
  3727 ;;		_setSw_Main
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _Switch_Main
  3735  1E5A                     _Switch_Main:	
  3736                           
  3737                           ;Switch_B1.c: 65: setSw_Main(1);
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3741  1E5A  3001               	movlw	1
  3742  1E5B  3183  237C  319E   	fcall	_setSw_Main
  3743                           
  3744                           ;Switch_B1.c: 69: setSw_Main(2);
  3745  1E5E  3002               	movlw	2
  3746  1E5F  3183  237C         	fcall	_setSw_Main
  3747  1E61  0008               	return
  3748  1E62                     __end_of_Switch_Main:	
  3749                           
  3750                           	psect	text2
  3751  037C                     __ptext2:	
  3752 ;; *************** function _setSw_Main *****************
  3753 ;; Defined at:
  3754 ;;		line 136 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  sw              1    wreg     unsigned char 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  sw              1   14[BANK0 ] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;		None               void
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;Total ram usage:        5 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    7
  3775 ;; This function calls:
  3776 ;;		_SwPointSelect
  3777 ;;		_Sw_DimmerAdjFunc
  3778 ;;		_Sw_DimmerOffFunc
  3779 ;;		_Sw_DimmerOnFunc
  3780 ;;		_setBuz
  3781 ;;		_setRF_Learn
  3782 ;; This function is called by:
  3783 ;;		_Switch_Main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           
  3788                           ;psect for function _setSw_Main
  3789  037C                     _setSw_Main:	
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3793                           ;setSw_Main@sw stored from wreg
  3794  037C  0020               	movlb	0	; select bank0
  3795  037D  00AE               	movwf	setSw_Main@sw
  3796                           
  3797                           ;Switch_B1.c: 138: if(Sw->Enable)
  3798  037E  0876               	movf	_Sw,w
  3799  037F  0086               	movwf	6
  3800  0380  0877               	movf	_Sw+1,w
  3801  0381  0087               	movwf	7
  3802  0382  1C01               	btfss	1,0
  3803  0383  0008               	return
  3804                           
  3805                           ;Switch_B1.c: 139: {
  3806                           ;Switch_B1.c: 140: SwPointSelect(sw);
  3807  0384  082E               	movf	setSw_Main@sw,w
  3808  0385  3190  207A  3183   	fcall	_SwPointSelect
  3809                           
  3810                           ;Switch_B1.c: 157: if(sw == 1)
  3811  0388  0020               	movlb	0	; select bank0
  3812  0389  082E               	movf	setSw_Main@sw,w
  3813  038A  3A01               	xorlw	1
  3814  038B  1D03               	skipz
  3815  038C  2B99               	goto	l8684
  3816                           
  3817                           ;Switch_B1.c: 158: {
  3818                           ;Switch_B1.c: 159: Sw->Touch=(RA0 || RB1)?1:0;
  3819  038D  01AC               	clrf	_setSw_Main$3642
  3820  038E  0AAC               	incf	_setSw_Main$3642,f
  3821  038F  1C0C               	btfss	12,0	;volatile
  3822  0390  188D               	btfsc	13,1	;volatile
  3823  0391  2B93               	goto	l8682
  3824  0392  01AC               	clrf	_setSw_Main$3642
  3825  0393                     l8682:	
  3826  0393  0876               	movf	_Sw,w
  3827  0394  0086               	movwf	6
  3828  0395  0877               	movf	_Sw+1,w
  3829  0396  0087               	movwf	7
  3830  0397  082C               	movf	_setSw_Main$3642,w
  3831  0398  2BA8               	goto	L1
  3832  0399                     l8684:	
  3833                           ;Switch_B1.c: 160: }
  3834                           
  3835                           
  3836                           ;Switch_B1.c: 161: else if(sw == 2)
  3837  0399  082E               	movf	setSw_Main@sw,w
  3838  039A  3A02               	xorlw	2
  3839  039B  1D03               	skipz
  3840  039C  2BAB               	goto	l8694
  3841                           
  3842                           ;Switch_B1.c: 162: {
  3843                           ;Switch_B1.c: 163: Sw->Touch=(RA6 || RA4)?1:0;
  3844  039D  01AD               	clrf	_setSw_Main$3643
  3845  039E  0AAD               	incf	_setSw_Main$3643,f
  3846  039F  1F0C               	btfss	12,6	;volatile
  3847  03A0  1A0C               	btfsc	12,4	;volatile
  3848  03A1  2BA3               	goto	l8692
  3849  03A2  01AD               	clrf	_setSw_Main$3643
  3850  03A3                     l8692:	
  3851  03A3  0876               	movf	_Sw,w
  3852  03A4  0086               	movwf	6
  3853  03A5  0877               	movf	_Sw+1,w
  3854  03A6  0087               	movwf	7
  3855  03A7  082D               	movf	_setSw_Main$3643,w
  3856  03A8                     L1:	
  3857  03A8  1081               	bcf	1,1
  3858  03A9  1D03               	skipz
  3859  03AA  1481               	bsf	1,1
  3860  03AB                     l8694:	
  3861                           
  3862                           ;Switch_B1.c: 164: }
  3863                           ;Switch_B1.c: 172: if(Sw->Touch)
  3864  03AB  0876               	movf	_Sw,w
  3865  03AC  0086               	movwf	6
  3866  03AD  0877               	movf	_Sw+1,w
  3867  03AE  0087               	movwf	7
  3868  03AF  1C81               	btfss	1,1
  3869  03B0  2C7A               	goto	l8740
  3870                           
  3871                           ;Switch_B1.c: 173: {
  3872                           ;Switch_B1.c: 174: if(!Sw->Debounce)
  3873  03B1  0876               	movf	_Sw,w
  3874  03B2  0086               	movwf	6
  3875  03B3  0877               	movf	_Sw+1,w
  3876  03B4  0087               	movwf	7
  3877  03B5  1901               	btfsc	1,2
  3878  03B6  2BE1               	goto	l8710
  3879                           
  3880                           ;Switch_B1.c: 175: {
  3881                           ;Switch_B1.c: 176: Sw->DebounceTime++;
  3882  03B7  3001               	movlw	1
  3883  03B8  00AA               	movwf	??_setSw_Main
  3884  03B9  0876               	movf	_Sw,w
  3885  03BA  0086               	movwf	6
  3886  03BB  0877               	movf	_Sw+1,w
  3887  03BC  0087               	movwf	7
  3888  03BD  3142               	addfsr 1,2
  3889  03BE  082A               	movf	??_setSw_Main,w
  3890  03BF  0781               	addwf	1,f
  3891                           
  3892                           ;Switch_B1.c: 177: if(Sw->DebounceTime >= 5)
  3893  03C0  0876               	movf	_Sw,w
  3894  03C1  0086               	movwf	6
  3895  03C2  0877               	movf	_Sw+1,w
  3896  03C3  0087               	movwf	7
  3897  03C4  3142               	addfsr 1,2
  3898  03C5  3005               	movlw	5
  3899  03C6  0201               	subwf	1,w
  3900  03C7  1C03               	skipc
  3901  03C8  0008               	return
  3902                           
  3903                           ;Switch_B1.c: 178: {
  3904                           ;Switch_B1.c: 179: Sw->DebounceTime=0;
  3905  03C9  0876               	movf	_Sw,w
  3906  03CA  0086               	movwf	6
  3907  03CB  0877               	movf	_Sw+1,w
  3908  03CC  0087               	movwf	7
  3909  03CD  3142               	addfsr 1,2
  3910  03CE  0181               	clrf	1
  3911                           
  3912                           ;Switch_B1.c: 180: Sw->Debounce=1;
  3913  03CF  0876               	movf	_Sw,w
  3914  03D0  0086               	movwf	6
  3915  03D1  0877               	movf	_Sw+1,w
  3916  03D2  0087               	movwf	7
  3917  03D3  1501               	bsf	1,2
  3918                           
  3919                           ;Switch_B1.c: 181: setBuz(1,100);
  3920  03D4  3064               	movlw	100
  3921  03D5  00A6               	movwf	setBuz@time
  3922  03D6  3000               	movlw	0
  3923  03D7  00A7               	movwf	setBuz@time+1
  3924  03D8  3001               	movlw	1
  3925  03D9  318C  2425  3183   	fcall	_setBuz
  3926                           
  3927                           ;Switch_B1.c: 184: Sw_DimmerOnFunc(sw);
  3928  03DC  0020               	movlb	0	; select bank0
  3929  03DD  082E               	movf	setSw_Main@sw,w
  3930  03DE  3196  26BB         	fcall	_Sw_DimmerOnFunc
  3931                           
  3932                           ;Switch_B1.c: 187: }
  3933                           ;Switch_B1.c: 188: }
  3934  03E0  0008               	return
  3935  03E1                     l8710:	
  3936                           
  3937                           ;Switch_B1.c: 189: else
  3938                           ;Switch_B1.c: 190: {
  3939                           ;Switch_B1.c: 191: if(!Sw->Hold1)
  3940  03E1  0876               	movf	_Sw,w
  3941  03E2  0086               	movwf	6
  3942  03E3  0877               	movf	_Sw+1,w
  3943  03E4  0087               	movwf	7
  3944  03E5  1981               	btfsc	1,3
  3945  03E6  2C13               	goto	l8720
  3946                           
  3947                           ;Switch_B1.c: 192: {
  3948                           ;Switch_B1.c: 193: Sw->Hold1Time++;
  3949  03E7  0876               	movf	_Sw,w
  3950  03E8  0086               	movwf	6
  3951  03E9  0877               	movf	_Sw+1,w
  3952  03EA  0087               	movwf	7
  3953  03EB  3143               	addfsr 1,3
  3954  03EC  3001               	movlw	1
  3955  03ED  0781               	addwf	1,f
  3956  03EE  3141               	addfsr 1,1
  3957  03EF  1803               	skipnc
  3958  03F0  0A81               	incf	1,f
  3959                           
  3960                           ;Switch_B1.c: 194: if(Sw->Hold1Time >= 150)
  3961  03F1  0876               	movf	_Sw,w
  3962  03F2  0086               	movwf	6
  3963  03F3  0877               	movf	_Sw+1,w
  3964  03F4  0087               	movwf	7
  3965  03F5  3143               	addfsr 1,3
  3966  03F6  3F40               	moviw [0]fsr1
  3967  03F7  0020               	movlb	0	; select bank0
  3968  03F8  00AA               	movwf	??_setSw_Main
  3969  03F9  3F41               	moviw [1]fsr1
  3970  03FA  00AB               	movwf	??_setSw_Main+1
  3971  03FB  3000               	movlw	0
  3972  03FC  022B               	subwf	??_setSw_Main+1,w
  3973  03FD  3096               	movlw	150
  3974  03FE  1903               	skipnz
  3975  03FF  022A               	subwf	??_setSw_Main,w
  3976  0400  1C03               	skipc
  3977  0401  0008               	return
  3978                           
  3979                           ;Switch_B1.c: 195: {
  3980                           ;Switch_B1.c: 196: Sw->Hold1Time=0;
  3981  0402  0876               	movf	_Sw,w
  3982  0403  0086               	movwf	6
  3983  0404  0877               	movf	_Sw+1,w
  3984  0405  0087               	movwf	7
  3985  0406  3143               	addfsr 1,3
  3986  0407  3000               	movlw	0
  3987  0408  3FC0               	movwi [0]fsr1
  3988  0409  3FC1               	movwi [1]fsr1
  3989                           
  3990                           ;Switch_B1.c: 197: Sw->Hold1=1;
  3991  040A  0876               	movf	_Sw,w
  3992  040B  0086               	movwf	6
  3993  040C  0877               	movf	_Sw+1,w
  3994  040D  0087               	movwf	7
  3995  040E  1581               	bsf	1,3
  3996                           
  3997                           ;Switch_B1.c: 200: Sw_DimmerAdjFunc(sw);
  3998  040F  082E               	movf	setSw_Main@sw,w
  3999  0410  3192  22ED         	fcall	_Sw_DimmerAdjFunc
  4000                           
  4001                           ;Switch_B1.c: 203: }
  4002                           ;Switch_B1.c: 204: }
  4003  0412  0008               	return
  4004  0413                     l8720:	
  4005                           
  4006                           ;Switch_B1.c: 205: else
  4007                           ;Switch_B1.c: 206: {
  4008                           ;Switch_B1.c: 207: if(!Sw->Hold2)
  4009  0413  0876               	movf	_Sw,w
  4010  0414  0086               	movwf	6
  4011  0415  0877               	movf	_Sw+1,w
  4012  0416  0087               	movwf	7
  4013  0417  1A01               	btfsc	1,4
  4014  0418  2C47               	goto	l8730
  4015                           
  4016                           ;Switch_B1.c: 208: {
  4017                           ;Switch_B1.c: 209: Sw->Hold2Time++;
  4018  0419  0876               	movf	_Sw,w
  4019  041A  0086               	movwf	6
  4020  041B  0877               	movf	_Sw+1,w
  4021  041C  0087               	movwf	7
  4022  041D  3145               	addfsr 1,5
  4023  041E  3001               	movlw	1
  4024  041F  0781               	addwf	1,f
  4025  0420  3141               	addfsr 1,1
  4026  0421  1803               	skipnc
  4027  0422  0A81               	incf	1,f
  4028                           
  4029                           ;Switch_B1.c: 210: if(Sw->Hold2Time >= 150)
  4030  0423  0876               	movf	_Sw,w
  4031  0424  0086               	movwf	6
  4032  0425  0877               	movf	_Sw+1,w
  4033  0426  0087               	movwf	7
  4034  0427  3145               	addfsr 1,5
  4035  0428  3F40               	moviw [0]fsr1
  4036  0429  0020               	movlb	0	; select bank0
  4037  042A  00AA               	movwf	??_setSw_Main
  4038  042B  3F41               	moviw [1]fsr1
  4039  042C  00AB               	movwf	??_setSw_Main+1
  4040  042D  3000               	movlw	0
  4041  042E  022B               	subwf	??_setSw_Main+1,w
  4042  042F  3096               	movlw	150
  4043  0430  1903               	skipnz
  4044  0431  022A               	subwf	??_setSw_Main,w
  4045  0432  1C03               	skipc
  4046  0433  0008               	return
  4047                           
  4048                           ;Switch_B1.c: 211: {
  4049                           ;Switch_B1.c: 212: Sw->Hold2Time=0;
  4050  0434  0876               	movf	_Sw,w
  4051  0435  0086               	movwf	6
  4052  0436  0877               	movf	_Sw+1,w
  4053  0437  0087               	movwf	7
  4054  0438  3145               	addfsr 1,5
  4055  0439  3000               	movlw	0
  4056  043A  3FC0               	movwi [0]fsr1
  4057  043B  3FC1               	movwi [1]fsr1
  4058                           
  4059                           ;Switch_B1.c: 213: Sw->Hold2=1;
  4060  043C  0876               	movf	_Sw,w
  4061  043D  0086               	movwf	6
  4062  043E  0877               	movf	_Sw+1,w
  4063  043F  0087               	movwf	7
  4064  0440  1601               	bsf	1,4
  4065                           
  4066                           ;Switch_B1.c: 215: setRF_Learn(1,1);
  4067  0441  01A2               	clrf	setRF_Learn@command
  4068  0442  0AA2               	incf	setRF_Learn@command,f
  4069  0443  3001               	movlw	1
  4070  0444  319F  2740         	fcall	_setRF_Learn
  4071                           
  4072                           ;Switch_B1.c: 223: }
  4073                           ;Switch_B1.c: 224: }
  4074  0446  0008               	return
  4075  0447                     l8730:	
  4076                           
  4077                           ;Switch_B1.c: 225: else
  4078                           ;Switch_B1.c: 226: {
  4079                           ;Switch_B1.c: 227: if(!Sw->Hold3)
  4080  0447  0876               	movf	_Sw,w
  4081  0448  0086               	movwf	6
  4082  0449  0877               	movf	_Sw+1,w
  4083  044A  0087               	movwf	7
  4084  044B  1A81               	btfsc	1,5
  4085  044C  0008               	return
  4086                           
  4087                           ;Switch_B1.c: 228: {
  4088                           ;Switch_B1.c: 229: Sw->Hold3Time++;
  4089  044D  0876               	movf	_Sw,w
  4090  044E  0086               	movwf	6
  4091  044F  0877               	movf	_Sw+1,w
  4092  0450  0087               	movwf	7
  4093  0451  3147               	addfsr 1,7
  4094  0452  3001               	movlw	1
  4095  0453  0781               	addwf	1,f
  4096  0454  3141               	addfsr 1,1
  4097  0455  1803               	skipnc
  4098  0456  0A81               	incf	1,f
  4099                           
  4100                           ;Switch_B1.c: 230: if(Sw->Hold3Time >= 300)
  4101  0457  0876               	movf	_Sw,w
  4102  0458  0086               	movwf	6
  4103  0459  0877               	movf	_Sw+1,w
  4104  045A  0087               	movwf	7
  4105  045B  3147               	addfsr 1,7
  4106  045C  3F40               	moviw [0]fsr1
  4107  045D  0020               	movlb	0	; select bank0
  4108  045E  00AA               	movwf	??_setSw_Main
  4109  045F  3F41               	moviw [1]fsr1
  4110  0460  00AB               	movwf	??_setSw_Main+1
  4111  0461  3001               	movlw	1
  4112  0462  022B               	subwf	??_setSw_Main+1,w
  4113  0463  302C               	movlw	44
  4114  0464  1903               	skipnz
  4115  0465  022A               	subwf	??_setSw_Main,w
  4116  0466  1C03               	skipc
  4117  0467  0008               	return
  4118                           
  4119                           ;Switch_B1.c: 231: {
  4120                           ;Switch_B1.c: 232: Sw->Hold3Time=0;
  4121  0468  0876               	movf	_Sw,w
  4122  0469  0086               	movwf	6
  4123  046A  0877               	movf	_Sw+1,w
  4124  046B  0087               	movwf	7
  4125  046C  3147               	addfsr 1,7
  4126  046D  3000               	movlw	0
  4127  046E  3FC0               	movwi [0]fsr1
  4128  046F  3FC1               	movwi [1]fsr1
  4129                           
  4130                           ;Switch_B1.c: 233: Sw->Hold3=1;
  4131  0470  0876               	movf	_Sw,w
  4132  0471  0086               	movwf	6
  4133  0472  0877               	movf	_Sw+1,w
  4134  0473  0087               	movwf	7
  4135  0474  1681               	bsf	1,5
  4136                           
  4137                           ;Switch_B1.c: 235: setRF_Learn(1,0);
  4138  0475  01A2               	clrf	setRF_Learn@command
  4139  0476  3001               	movlw	1
  4140  0477  319F  2740         	fcall	_setRF_Learn
  4141                           
  4142                           ;Switch_B1.c: 237: }
  4143                           ;Switch_B1.c: 238: }
  4144                           ;Switch_B1.c: 239: }
  4145                           ;Switch_B1.c: 240: }
  4146                           ;Switch_B1.c: 241: }
  4147                           ;Switch_B1.c: 242: }
  4148  0479  0008               	return
  4149  047A                     l8740:	
  4150                           
  4151                           ;Switch_B1.c: 243: else
  4152                           ;Switch_B1.c: 244: {
  4153                           ;Switch_B1.c: 245: if(Sw->Debounce)
  4154  047A  0876               	movf	_Sw,w
  4155  047B  0086               	movwf	6
  4156  047C  0877               	movf	_Sw+1,w
  4157  047D  0087               	movwf	7
  4158  047E  1D01               	btfss	1,2
  4159  047F  0008               	return
  4160                           
  4161                           ;Switch_B1.c: 246: {
  4162                           ;Switch_B1.c: 247: Sw->DebounceTime++;
  4163  0480  3001               	movlw	1
  4164  0481  0020               	movlb	0	; select bank0
  4165  0482  00AA               	movwf	??_setSw_Main
  4166  0483  0876               	movf	_Sw,w
  4167  0484  0086               	movwf	6
  4168  0485  0877               	movf	_Sw+1,w
  4169  0486  0087               	movwf	7
  4170  0487  3142               	addfsr 1,2
  4171  0488  082A               	movf	??_setSw_Main,w
  4172  0489  0781               	addwf	1,f
  4173                           
  4174                           ;Switch_B1.c: 248: if(Sw->DebounceTime >= 5)
  4175  048A  0876               	movf	_Sw,w
  4176  048B  0086               	movwf	6
  4177  048C  0877               	movf	_Sw+1,w
  4178  048D  0087               	movwf	7
  4179  048E  3142               	addfsr 1,2
  4180  048F  3005               	movlw	5
  4181  0490  0201               	subwf	1,w
  4182  0491  1C03               	skipc
  4183  0492  0008               	return
  4184                           
  4185                           ;Switch_B1.c: 249: {
  4186                           ;Switch_B1.c: 250: Sw->DebounceTime=0;
  4187  0493  0876               	movf	_Sw,w
  4188  0494  0086               	movwf	6
  4189  0495  0877               	movf	_Sw+1,w
  4190  0496  0087               	movwf	7
  4191  0497  3142               	addfsr 1,2
  4192  0498  0181               	clrf	1
  4193                           
  4194                           ;Switch_B1.c: 251: Sw->Debounce=0;
  4195  0499  0876               	movf	_Sw,w
  4196  049A  0086               	movwf	6
  4197  049B  0877               	movf	_Sw+1,w
  4198  049C  0087               	movwf	7
  4199  049D  1101               	bcf	1,2
  4200                           
  4201                           ;Switch_B1.c: 252: Sw->Hold1Time=0;
  4202  049E  0876               	movf	_Sw,w
  4203  049F  0086               	movwf	6
  4204  04A0  0877               	movf	_Sw+1,w
  4205  04A1  0087               	movwf	7
  4206  04A2  3143               	addfsr 1,3
  4207  04A3  3000               	movlw	0
  4208  04A4  3FC0               	movwi [0]fsr1
  4209  04A5  3FC1               	movwi [1]fsr1
  4210                           
  4211                           ;Switch_B1.c: 253: Sw->Hold1=0;
  4212  04A6  0876               	movf	_Sw,w
  4213  04A7  0086               	movwf	6
  4214  04A8  0877               	movf	_Sw+1,w
  4215  04A9  0087               	movwf	7
  4216  04AA  1181               	bcf	1,3
  4217                           
  4218                           ;Switch_B1.c: 254: Sw->Hold2Time=0;
  4219  04AB  0876               	movf	_Sw,w
  4220  04AC  0086               	movwf	6
  4221  04AD  0877               	movf	_Sw+1,w
  4222  04AE  0087               	movwf	7
  4223  04AF  3145               	addfsr 1,5
  4224  04B0  3000               	movlw	0
  4225  04B1  3FC0               	movwi [0]fsr1
  4226  04B2  3FC1               	movwi [1]fsr1
  4227                           
  4228                           ;Switch_B1.c: 255: Sw->Hold2=0;
  4229  04B3  0876               	movf	_Sw,w
  4230  04B4  0086               	movwf	6
  4231  04B5  0877               	movf	_Sw+1,w
  4232  04B6  0087               	movwf	7
  4233  04B7  1201               	bcf	1,4
  4234                           
  4235                           ;Switch_B1.c: 256: Sw->Hold3Time=0;
  4236  04B8  0876               	movf	_Sw,w
  4237  04B9  0086               	movwf	6
  4238  04BA  0877               	movf	_Sw+1,w
  4239  04BB  0087               	movwf	7
  4240  04BC  3147               	addfsr 1,7
  4241  04BD  3000               	movlw	0
  4242  04BE  3FC0               	movwi [0]fsr1
  4243  04BF  3FC1               	movwi [1]fsr1
  4244                           
  4245                           ;Switch_B1.c: 257: Sw->Hold3=0;
  4246  04C0  0876               	movf	_Sw,w
  4247  04C1  0086               	movwf	6
  4248  04C2  0877               	movf	_Sw+1,w
  4249  04C3  0087               	movwf	7
  4250  04C4  1281               	bcf	1,5
  4251                           
  4252                           ;Switch_B1.c: 258: setRF_Learn(1,0);
  4253  04C5  01A2               	clrf	setRF_Learn@command
  4254  04C6  3001               	movlw	1
  4255  04C7  319F  2740  3183   	fcall	_setRF_Learn
  4256                           
  4257                           ;Switch_B1.c: 261: Sw_DimmerOffFunc(sw);
  4258  04CA  0020               	movlb	0	; select bank0
  4259  04CB  082E               	movf	setSw_Main@sw,w
  4260  04CC  318B  233C         	fcall	_Sw_DimmerOffFunc
  4261  04CE  0008               	return
  4262  04CF                     __end_of_setSw_Main:	
  4263                           
  4264                           	psect	text3
  4265  1F40                     __ptext3:	
  4266 ;; *************** function _setRF_Learn *****************
  4267 ;; Defined at:
  4268 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  rf              1    wreg     unsigned char 
  4271 ;;  command         1    2[BANK0 ] unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  rf              1    3[BANK0 ] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;		None               void
  4276 ;; Registers used:
  4277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4283 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;Total ram usage:        2 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    5
  4290 ;; This function calls:
  4291 ;;		_RfPointSelect
  4292 ;; This function is called by:
  4293 ;;		_setSw_Main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function _setRF_Learn
  4299  1F40                     _setRF_Learn:	
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4303                           ;setRF_Learn@rf stored from wreg
  4304  1F40  0020               	movlb	0	; select bank0
  4305  1F41  00A3               	movwf	setRF_Learn@rf
  4306                           
  4307                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  4308  1F42  0823               	movf	setRF_Learn@rf,w
  4309  1F43  319E  2694         	fcall	_RfPointSelect
  4310                           
  4311                           ;RF_Control_B1.c: 34: RF->Learn=command;
  4312  1F45  0879               	movf	_RF,w
  4313  1F46  0086               	movwf	6
  4314  1F47  0187               	clrf	7
  4315  1F48  0020               	movlb	0	; select bank0
  4316  1F49  0822               	movf	setRF_Learn@command,w
  4317  1F4A  1301               	bcf	1,6
  4318  1F4B  1D03               	skipz
  4319  1F4C  1701               	bsf	1,6
  4320  1F4D  0008               	return
  4321  1F4E                     __end_of_setRF_Learn:	
  4322                           
  4323                           	psect	text4
  4324  16BB                     __ptext4:	
  4325 ;; *************** function _Sw_DimmerOnFunc *****************
  4326 ;; Defined at:
  4327 ;;		line 270 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  sw              1    wreg     unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  sw              1    6[BANK0 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;		None               void
  4334 ;; Registers used:
  4335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;Total ram usage:        1 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    6
  4348 ;; This function calls:
  4349 ;;		_setDimmerLights_Switch
  4350 ;;		_setDimmerLights_Trigger
  4351 ;;		_setRFSW_Status
  4352 ;;		_setRF_DimmerLights
  4353 ;;		_setTxData
  4354 ;; This function is called by:
  4355 ;;		_setSw_Main
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _Sw_DimmerOnFunc
  4361  16BB                     _Sw_DimmerOnFunc:	
  4362                           
  4363                           ;incstack = 0
  4364                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4365                           ;Sw_DimmerOnFunc@sw stored from wreg
  4366  16BB  0020               	movlb	0	; select bank0
  4367  16BC  00A6               	movwf	Sw_DimmerOnFunc@sw
  4368                           
  4369                           ;Switch_B1.c: 272: Sw->Flag=1;
  4370  16BD  0876               	movf	_Sw,w
  4371  16BE  0086               	movwf	6
  4372  16BF  0877               	movf	_Sw+1,w
  4373  16C0  0087               	movwf	7
  4374  16C1  1781               	bsf	1,7
  4375                           
  4376                           ;Switch_B1.c: 273: if(!Sw->Status)
  4377  16C2  0876               	movf	_Sw,w
  4378  16C3  0086               	movwf	6
  4379  16C4  0877               	movf	_Sw+1,w
  4380  16C5  0087               	movwf	7
  4381  16C6  1B01               	btfsc	1,6
  4382  16C7  2EF2               	goto	l8290
  4383                           
  4384                           ;Switch_B1.c: 274: {
  4385                           ;Switch_B1.c: 275: Sw->Status=1;
  4386  16C8  0876               	movf	_Sw,w
  4387  16C9  0086               	movwf	6
  4388  16CA  0877               	movf	_Sw+1,w
  4389  16CB  0087               	movwf	7
  4390  16CC  1701               	bsf	1,6
  4391                           
  4392                           ;Switch_B1.c: 276: setRFSW_Status(sw,1);
  4393  16CD  01A2               	clrf	setRFSW_Status@command
  4394  16CE  0AA2               	incf	setRFSW_Status@command,f
  4395  16CF  0826               	movf	Sw_DimmerOnFunc@sw,w
  4396  16D0  319F  274E  3196   	fcall	_setRFSW_Status
  4397                           
  4398                           ;Switch_B1.c: 278: setDimmerLights_Trigger(sw,1);
  4399  16D3  0020               	movlb	0	; select bank0
  4400  16D4  01A2               	clrf	setDimmerLights_Trigger@command
  4401  16D5  0AA2               	incf	setDimmerLights_Trigger@command,f
  4402  16D6  0826               	movf	Sw_DimmerOnFunc@sw,w
  4403  16D7  319F  279B  3196   	fcall	_setDimmerLights_Trigger
  4404                           
  4405                           ;Switch_B1.c: 279: setDimmerLights_Switch(sw,1);
  4406  16DA  0020               	movlb	0	; select bank0
  4407  16DB  01A2               	clrf	setDimmerLights_Switch@command
  4408  16DC  0AA2               	incf	setDimmerLights_Switch@command,f
  4409  16DD  0826               	movf	Sw_DimmerOnFunc@sw,w
  4410  16DE  319F  278B  3196   	fcall	_setDimmerLights_Switch
  4411                           
  4412                           ;Switch_B1.c: 281: setRF_DimmerLights(sw,Sw->Status);
  4413  16E1  0876               	movf	_Sw,w
  4414  16E2  0086               	movwf	6
  4415  16E3  0877               	movf	_Sw+1,w
  4416  16E4  0087               	movwf	7
  4417  16E5  3000               	movlw	0
  4418  16E6  1B01               	btfsc	1,6
  4419  16E7  3001               	movlw	1
  4420  16E8  0020               	movlb	0	; select bank0
  4421  16E9  00A0               	movwf	setRF_DimmerLights@on
  4422  16EA  0826               	movf	Sw_DimmerOnFunc@sw,w
  4423  16EB  3188  2015  3196   	fcall	_setRF_DimmerLights
  4424                           
  4425                           ;Switch_B1.c: 282: setTxData(1);
  4426  16EE  3001               	movlw	1
  4427  16EF  3194  2467         	fcall	_setTxData
  4428                           
  4429                           ;Switch_B1.c: 283: }
  4430  16F1  0008               	return
  4431  16F2                     l8290:	
  4432                           
  4433                           ;Switch_B1.c: 284: else
  4434                           ;Switch_B1.c: 285: {
  4435                           ;Switch_B1.c: 286: Sw->Status=0;
  4436  16F2  0876               	movf	_Sw,w
  4437  16F3  0086               	movwf	6
  4438  16F4  0877               	movf	_Sw+1,w
  4439  16F5  0087               	movwf	7
  4440  16F6  1301               	bcf	1,6
  4441                           
  4442                           ;Switch_B1.c: 287: setRFSW_Status(sw,Sw->Status);
  4443  16F7  0876               	movf	_Sw,w
  4444  16F8  0086               	movwf	6
  4445  16F9  0877               	movf	_Sw+1,w
  4446  16FA  0087               	movwf	7
  4447  16FB  3000               	movlw	0
  4448  16FC  1B01               	btfsc	1,6
  4449  16FD  3001               	movlw	1
  4450  16FE  0020               	movlb	0	; select bank0
  4451  16FF  00A2               	movwf	setRFSW_Status@command
  4452  1700  0826               	movf	Sw_DimmerOnFunc@sw,w
  4453  1701  319F  274E         	fcall	_setRFSW_Status
  4454  1703  0008               	return
  4455  1704                     __end_of_Sw_DimmerOnFunc:	
  4456                           
  4457                           	psect	text5
  4458  0B3C                     __ptext5:	
  4459 ;; *************** function _Sw_DimmerOffFunc *****************
  4460 ;; Defined at:
  4461 ;;		line 291 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  sw              1    wreg     unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  sw              1    9[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;		None               void
  4468 ;; Registers used:
  4469 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;Total ram usage:        3 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    6
  4482 ;; This function calls:
  4483 ;;		_setDelayOff_GO
  4484 ;;		_setDimmerLights_AdjGo
  4485 ;;		_setDimmerLights_Switch
  4486 ;;		_setDimmerLights_Trigger
  4487 ;;		_setDimmerLights_TriggerAdj
  4488 ;;		_setRF_DimmerLights
  4489 ;;		_setTxData
  4490 ;; This function is called by:
  4491 ;;		_setSw_Main
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _Sw_DimmerOffFunc
  4497  0B3C                     _Sw_DimmerOffFunc:	
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4501                           ;Sw_DimmerOffFunc@sw stored from wreg
  4502  0B3C  0020               	movlb	0	; select bank0
  4503  0B3D  00A9               	movwf	Sw_DimmerOffFunc@sw
  4504                           
  4505                           ;Switch_B1.c: 293: if(Sw->Flag)
  4506  0B3E  0876               	movf	_Sw,w
  4507  0B3F  0086               	movwf	6
  4508  0B40  0877               	movf	_Sw+1,w
  4509  0B41  0087               	movwf	7
  4510  0B42  1F81               	btfss	1,7
  4511  0B43  0008               	return
  4512                           
  4513                           ;Switch_B1.c: 294: {
  4514                           ;Switch_B1.c: 295: Sw->Flag=0;
  4515  0B44  0876               	movf	_Sw,w
  4516  0B45  0086               	movwf	6
  4517  0B46  0877               	movf	_Sw+1,w
  4518  0B47  0087               	movwf	7
  4519  0B48  1381               	bcf	1,7
  4520                           
  4521                           ;Switch_B1.c: 296: if(Sw->Status)
  4522  0B49  0876               	movf	_Sw,w
  4523  0B4A  0086               	movwf	6
  4524  0B4B  0877               	movf	_Sw+1,w
  4525  0B4C  0087               	movwf	7
  4526  0B4D  1F01               	btfss	1,6
  4527  0B4E  2B8A               	goto	l8322
  4528                           
  4529                           ;Switch_B1.c: 297: {
  4530                           ;Switch_B1.c: 298: if(Sw->Adj)
  4531  0B4F  0876               	movf	_Sw,w
  4532  0B50  0086               	movwf	6
  4533  0B51  0877               	movf	_Sw+1,w
  4534  0B52  0087               	movwf	7
  4535  0B53  3141               	addfsr 1,1
  4536  0B54  1C01               	btfss	1,0
  4537  0B55  0008               	return
  4538                           
  4539                           ;Switch_B1.c: 299: {
  4540                           ;Switch_B1.c: 300: Sw->Adj=0;
  4541  0B56  0876               	movf	_Sw,w
  4542  0B57  0086               	movwf	6
  4543  0B58  0877               	movf	_Sw+1,w
  4544  0B59  0087               	movwf	7
  4545  0B5A  3141               	addfsr 1,1
  4546  0B5B  1001               	bcf	1,0
  4547                           
  4548                           ;Switch_B1.c: 301: setDimmerLights_TriggerAdj(sw,1);
  4549  0B5C  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4550  0B5D  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  4551  0B5E  0829               	movf	Sw_DimmerOffFunc@sw,w
  4552  0B5F  319F  27CB  318B   	fcall	_setDimmerLights_TriggerAdj
  4553                           
  4554                           ;Switch_B1.c: 302: setDimmerLights_AdjGo(sw,0);
  4555  0B62  0020               	movlb	0	; select bank0
  4556  0B63  01A2               	clrf	setDimmerLights_AdjGo@command
  4557  0B64  0829               	movf	Sw_DimmerOffFunc@sw,w
  4558  0B65  319F  27BB  318B   	fcall	_setDimmerLights_AdjGo
  4559                           
  4560                           ;Switch_B1.c: 304: Product->Data[17]=Product->Data[26+sw];
  4561  0B68  0020               	movlb	0	; select bank0
  4562  0B69  0829               	movf	Sw_DimmerOffFunc@sw,w
  4563  0B6A  3E1A               	addlw	26
  4564  0B6B  076E               	addwf	_Product,w
  4565  0B6C  00A7               	movwf	??_Sw_DimmerOffFunc
  4566  0B6D  0827               	movf	??_Sw_DimmerOffFunc,w
  4567  0B6E  0086               	movwf	6
  4568  0B6F  3001               	movlw	1	; select bank2/3
  4569  0B70  0087               	movwf	7
  4570  0B71  0801               	movf	1,w
  4571  0B72  00A8               	movwf	??_Sw_DimmerOffFunc+1
  4572  0B73  086E               	movf	_Product,w
  4573  0B74  3E11               	addlw	17
  4574  0B75  0086               	movwf	6
  4575  0B76  3001               	movlw	1	; select bank2/3
  4576  0B77  0087               	movwf	7
  4577  0B78  0828               	movf	??_Sw_DimmerOffFunc+1,w
  4578  0B79  0081               	movwf	1
  4579                           
  4580                           ;Switch_B1.c: 305: setRF_DimmerLights(sw,Sw->Status);
  4581  0B7A  0876               	movf	_Sw,w
  4582  0B7B  0086               	movwf	6
  4583  0B7C  0877               	movf	_Sw+1,w
  4584  0B7D  0087               	movwf	7
  4585  0B7E  3000               	movlw	0
  4586  0B7F  1B01               	btfsc	1,6
  4587  0B80  3001               	movlw	1
  4588  0B81  00A0               	movwf	setRF_DimmerLights@on
  4589  0B82  0829               	movf	Sw_DimmerOffFunc@sw,w
  4590  0B83  3188  2015  318B   	fcall	_setRF_DimmerLights
  4591                           
  4592                           ;Switch_B1.c: 306: setTxData(1);
  4593  0B86  3001               	movlw	1
  4594  0B87  3194  2467         	fcall	_setTxData
  4595                           
  4596                           ;Switch_B1.c: 308: }
  4597                           ;Switch_B1.c: 309: }
  4598  0B89  0008               	return
  4599  0B8A                     l8322:	
  4600                           
  4601                           ;Switch_B1.c: 310: else
  4602                           ;Switch_B1.c: 311: {
  4603                           ;Switch_B1.c: 312: setDimmerLights_Trigger(sw,1);
  4604  0B8A  0020               	movlb	0	; select bank0
  4605  0B8B  01A2               	clrf	setDimmerLights_Trigger@command
  4606  0B8C  0AA2               	incf	setDimmerLights_Trigger@command,f
  4607  0B8D  0829               	movf	Sw_DimmerOffFunc@sw,w
  4608  0B8E  319F  279B  318B   	fcall	_setDimmerLights_Trigger
  4609                           
  4610                           ;Switch_B1.c: 313: setDimmerLights_Switch(sw,0);
  4611  0B91  0020               	movlb	0	; select bank0
  4612  0B92  01A2               	clrf	setDimmerLights_Switch@command
  4613  0B93  0829               	movf	Sw_DimmerOffFunc@sw,w
  4614  0B94  319F  278B  318B   	fcall	_setDimmerLights_Switch
  4615                           
  4616                           ;Switch_B1.c: 315: setRF_DimmerLights(sw,Sw->Status);
  4617  0B97  0876               	movf	_Sw,w
  4618  0B98  0086               	movwf	6
  4619  0B99  0877               	movf	_Sw+1,w
  4620  0B9A  0087               	movwf	7
  4621  0B9B  3000               	movlw	0
  4622  0B9C  1B01               	btfsc	1,6
  4623  0B9D  3001               	movlw	1
  4624  0B9E  0020               	movlb	0	; select bank0
  4625  0B9F  00A0               	movwf	setRF_DimmerLights@on
  4626  0BA0  0829               	movf	Sw_DimmerOffFunc@sw,w
  4627  0BA1  3188  2015  318B   	fcall	_setRF_DimmerLights
  4628                           
  4629                           ;Switch_B1.c: 316: setDelayOff_GO(sw,0,0);
  4630  0BA4  0020               	movlb	0	; select bank0
  4631  0BA5  01A3               	clrf	setDelayOff_GO@command
  4632  0BA6  01A4               	clrf	setDelayOff_GO@value
  4633  0BA7  0829               	movf	Sw_DimmerOffFunc@sw,w
  4634  0BA8  3194  242C  318B   	fcall	_setDelayOff_GO
  4635                           
  4636                           ;Switch_B1.c: 317: setTxData(1);
  4637  0BAB  3001               	movlw	1
  4638  0BAC  3194  2467         	fcall	_setTxData
  4639  0BAE  0008               	return
  4640  0BAF                     __end_of_Sw_DimmerOffFunc:	
  4641                           
  4642                           	psect	text6
  4643  12ED                     __ptext6:	
  4644 ;; *************** function _Sw_DimmerAdjFunc *****************
  4645 ;; Defined at:
  4646 ;;		line 322 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  sw              1    wreg     unsigned char 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  sw              1    4[BANK0 ] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;		None               void
  4653 ;; Registers used:
  4654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;Total ram usage:        1 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    6
  4667 ;; This function calls:
  4668 ;;		_setDimmerLights_AdjGo
  4669 ;;		_setDimmerLights_TriggerAdj
  4670 ;;		_setRFSW_Status
  4671 ;; This function is called by:
  4672 ;;		_setSw_Main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           
  4677                           ;psect for function _Sw_DimmerAdjFunc
  4678  12ED                     _Sw_DimmerAdjFunc:	
  4679                           
  4680                           ;incstack = 0
  4681                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4682                           ;Sw_DimmerAdjFunc@sw stored from wreg
  4683  12ED  0020               	movlb	0	; select bank0
  4684  12EE  00A4               	movwf	Sw_DimmerAdjFunc@sw
  4685                           
  4686                           ;Switch_B1.c: 324: if(Sw->Flag)
  4687  12EF  0876               	movf	_Sw,w
  4688  12F0  0086               	movwf	6
  4689  12F1  0877               	movf	_Sw+1,w
  4690  12F2  0087               	movwf	7
  4691  12F3  1F81               	btfss	1,7
  4692  12F4  0008               	return
  4693                           
  4694                           ;Switch_B1.c: 325: {
  4695                           ;Switch_B1.c: 326: Sw->Adj=1;
  4696  12F5  0876               	movf	_Sw,w
  4697  12F6  0086               	movwf	6
  4698  12F7  0877               	movf	_Sw+1,w
  4699  12F8  0087               	movwf	7
  4700  12F9  3141               	addfsr 1,1
  4701  12FA  1401               	bsf	1,0
  4702                           
  4703                           ;Switch_B1.c: 327: Sw->Status=1;
  4704  12FB  0876               	movf	_Sw,w
  4705  12FC  0086               	movwf	6
  4706  12FD  0877               	movf	_Sw+1,w
  4707  12FE  0087               	movwf	7
  4708  12FF  1701               	bsf	1,6
  4709                           
  4710                           ;Switch_B1.c: 328: setRFSW_Status(sw,1);
  4711  1300  01A2               	clrf	setRFSW_Status@command
  4712  1301  0AA2               	incf	setRFSW_Status@command,f
  4713  1302  0824               	movf	Sw_DimmerAdjFunc@sw,w
  4714  1303  319F  274E  3192   	fcall	_setRFSW_Status
  4715                           
  4716                           ;Switch_B1.c: 330: setDimmerLights_TriggerAdj(sw,1);
  4717  1306  0020               	movlb	0	; select bank0
  4718  1307  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4719  1308  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  4720  1309  0824               	movf	Sw_DimmerAdjFunc@sw,w
  4721  130A  319F  27CB  3192   	fcall	_setDimmerLights_TriggerAdj
  4722                           
  4723                           ;Switch_B1.c: 331: setDimmerLights_AdjGo(sw,1);
  4724  130D  0020               	movlb	0	; select bank0
  4725  130E  01A2               	clrf	setDimmerLights_AdjGo@command
  4726  130F  0AA2               	incf	setDimmerLights_AdjGo@command,f
  4727  1310  0824               	movf	Sw_DimmerAdjFunc@sw,w
  4728  1311  319F  27BB         	fcall	_setDimmerLights_AdjGo
  4729  1313  0008               	return
  4730  1314                     __end_of_Sw_DimmerAdjFunc:	
  4731                           
  4732                           	psect	text7
  4733  1FCB                     __ptext7:	
  4734 ;; *************** function _setDimmerLights_TriggerAdj *****************
  4735 ;; Defined at:
  4736 ;;		line 448 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  lights          1    wreg     unsigned char 
  4739 ;;  command         1    2[BANK0 ] unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  lights          1    3[BANK0 ] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;		None               void
  4744 ;; Registers used:
  4745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4751 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    5
  4758 ;; This function calls:
  4759 ;;		_DimmerLightsPointSelect
  4760 ;; This function is called by:
  4761 ;;		_Sw_DimmerOffFunc
  4762 ;;		_Sw_DimmerAdjFunc
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _setDimmerLights_TriggerAdj
  4768  1FCB                     _setDimmerLights_TriggerAdj:	
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4772                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  4773  1FCB  0020               	movlb	0	; select bank0
  4774  1FCC  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  4775                           
  4776                           ;Dimmer_B1.c: 450: DimmerLightsPointSelect(lights);
  4777  1FCD  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  4778  1FCE  319F  27ED         	fcall	_DimmerLightsPointSelect
  4779                           
  4780                           ;Dimmer_B1.c: 451: DimmerLights->TriggerAdj=command;
  4781  1FD0  0020               	movlb	0	; select bank0
  4782  1FD1  086B               	movf	_DimmerLights,w
  4783  1FD2  3E09               	addlw	9
  4784  1FD3  0086               	movwf	6
  4785  1FD4  3001               	movlw	1	; select bank2/3
  4786  1FD5  0087               	movwf	7
  4787  1FD6  0822               	movf	setDimmerLights_TriggerAdj@command,w
  4788  1FD7  1181               	bcf	1,3
  4789  1FD8  1D03               	skipz
  4790  1FD9  1581               	bsf	1,3
  4791  1FDA  0008               	return
  4792  1FDB                     __end_of_setDimmerLights_TriggerAdj:	
  4793                           
  4794                           	psect	text8
  4795  1FBB                     __ptext8:	
  4796 ;; *************** function _setDimmerLights_AdjGo *****************
  4797 ;; Defined at:
  4798 ;;		line 438 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  lights          1    wreg     unsigned char 
  4801 ;;  command         1    2[BANK0 ] unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  lights          1    3[BANK0 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;		None               void
  4806 ;; Registers used:
  4807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4813 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;Total ram usage:        2 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    5
  4820 ;; This function calls:
  4821 ;;		_DimmerLightsPointSelect
  4822 ;; This function is called by:
  4823 ;;		_Sw_DimmerOffFunc
  4824 ;;		_Sw_DimmerAdjFunc
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _setDimmerLights_AdjGo
  4830  1FBB                     _setDimmerLights_AdjGo:	
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4834                           ;setDimmerLights_AdjGo@lights stored from wreg
  4835  1FBB  0020               	movlb	0	; select bank0
  4836  1FBC  00A3               	movwf	setDimmerLights_AdjGo@lights
  4837                           
  4838                           ;Dimmer_B1.c: 440: DimmerLightsPointSelect(lights);
  4839  1FBD  0823               	movf	setDimmerLights_AdjGo@lights,w
  4840  1FBE  319F  27ED         	fcall	_DimmerLightsPointSelect
  4841                           
  4842                           ;Dimmer_B1.c: 441: DimmerLights->AdjGo=command;
  4843  1FC0  0020               	movlb	0	; select bank0
  4844  1FC1  086B               	movf	_DimmerLights,w
  4845  1FC2  3E09               	addlw	9
  4846  1FC3  0086               	movwf	6
  4847  1FC4  3001               	movlw	1	; select bank2/3
  4848  1FC5  0087               	movwf	7
  4849  1FC6  0822               	movf	setDimmerLights_AdjGo@command,w
  4850  1FC7  1101               	bcf	1,2
  4851  1FC8  1D03               	skipz
  4852  1FC9  1501               	bsf	1,2
  4853  1FCA  0008               	return
  4854  1FCB                     __end_of_setDimmerLights_AdjGo:	
  4855                           
  4856                           	psect	text9
  4857  1F17                     __ptext9:	
  4858 ;; *************** function _Switch_Initialization *****************
  4859 ;; Defined at:
  4860 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;		None               void
  4867 ;; Registers used:
  4868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    7
  4881 ;; This function calls:
  4882 ;;		_TouchPower
  4883 ;;		_setSw_Initialization
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function _Switch_Initialization
  4891  1F17                     _Switch_Initialization:	
  4892                           
  4893                           ;Switch_B1.c: 40: TouchPower();
  4894                           
  4895                           ;incstack = 0
  4896                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4897  1F17  319E  2623  319F   	fcall	_TouchPower
  4898                           
  4899                           ;Switch_B1.c: 42: WPUB1=0;
  4900  1F1A  0024               	movlb	4	; select bank4
  4901  1F1B  108D               	bcf	13,1	;volatile
  4902                           
  4903                           ;Switch_B1.c: 51: setSw_Initialization(1);
  4904  1F1C  3001               	movlw	1
  4905  1F1D  319E  2652  319F   	fcall	_setSw_Initialization
  4906                           
  4907                           ;Switch_B1.c: 54: setSw_Initialization(2);
  4908  1F20  3002               	movlw	2
  4909  1F21  319E  2652         	fcall	_setSw_Initialization
  4910  1F23  0008               	return
  4911  1F24                     __end_of_Switch_Initialization:	
  4912                           
  4913                           	psect	text10
  4914  1E52                     __ptext10:	
  4915 ;; *************** function _setSw_Initialization *****************
  4916 ;; Defined at:
  4917 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  sw              1    wreg     unsigned char 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  sw              1    4[BANK0 ] unsigned char 
  4922 ;; Return value:  Size  Location     Type
  4923 ;;		None               void
  4924 ;; Registers used:
  4925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;Total ram usage:        1 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    6
  4938 ;; This function calls:
  4939 ;;		_setLED
  4940 ;; This function is called by:
  4941 ;;		_Switch_Initialization
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           
  4946                           ;psect for function _setSw_Initialization
  4947  1E52                     _setSw_Initialization:	
  4948                           
  4949                           ;incstack = 0
  4950                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4951                           ;setSw_Initialization@sw stored from wreg
  4952  1E52  0020               	movlb	0	; select bank0
  4953  1E53  00A4               	movwf	setSw_Initialization@sw
  4954                           
  4955                           ;Switch_B1.c: 80: setLED(sw,1);
  4956  1E54  01A2               	clrf	setLED@command
  4957  1E55  0AA2               	incf	setLED@command,f
  4958  1E56  0824               	movf	setSw_Initialization@sw,w
  4959  1E57  3188  20CB         	fcall	_setLED
  4960  1E59  0008               	return
  4961  1E5A                     __end_of_setSw_Initialization:	
  4962                           
  4963                           	psect	text11
  4964  1E23                     __ptext11:	
  4965 ;; *************** function _TouchPower *****************
  4966 ;; Defined at:
  4967 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		None
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;Total ram usage:        0 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    4
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_Switch_Initialization
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           
  4996                           ;psect for function _TouchPower
  4997  1E23                     _TouchPower:	
  4998  1E23                     l2529:	
  4999                           ;Switch_B1.c: 11: while(RC5 == 0)
  5000                           
  5001                           ;incstack = 0
  5002                           ; Regs used in _TouchPower: []
  5003                           
  5004  1E23  0020               	movlb	0	; select bank0
  5005  1E24  1A8E               	btfsc	14,5	;volatile
  5006  1E25  0008               	return
  5007                           
  5008                           ;Switch_B1.c: 12: RC5=1;
  5009  1E26  168E               	bsf	14,5	;volatile
  5010  1E27  2E23               	goto	l2529
  5011  1E28                     __end_of_TouchPower:	
  5012                           
  5013                           	psect	text12
  5014  1E1A                     __ptext12:	
  5015 ;; *************** function _RF_Main *****************
  5016 ;; Defined at:
  5017 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;		None               void
  5024 ;; Registers used:
  5025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;Total ram usage:        0 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:   13
  5038 ;; This function calls:
  5039 ;;		_setRF_Main
  5040 ;; This function is called by:
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function _RF_Main
  5047  1E1A                     _RF_Main:	
  5048                           
  5049                           ;RF_Control_B1.c: 27: setRF_Main(1);
  5050                           
  5051                           ;incstack = 0
  5052                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5053  1E1A  3001               	movlw	1
  5054  1E1B  318C  249C         	fcall	_setRF_Main
  5055  1E1D  0008               	return
  5056  1E1E                     __end_of_RF_Main:	
  5057                           
  5058                           	psect	text13
  5059  0C9C                     __ptext13:	
  5060 ;; *************** function _setRF_Main *****************
  5061 ;; Defined at:
  5062 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  rf              1    wreg     unsigned char 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  rf              1    1[BANK2 ] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;		None               void
  5069 ;; Registers used:
  5070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;Total ram usage:        3 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:   12
  5083 ;; This function calls:
  5084 ;;		_CC2500_RxData
  5085 ;;		_CC2500_TxData
  5086 ;;		_CC2500_WriteCommand
  5087 ;;		_RF_RxDisable
  5088 ;;		_RfPointSelect
  5089 ;;		_getRxData
  5090 ;;		_setINT_GO
  5091 ;; This function is called by:
  5092 ;;		_RF_Main
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _setRF_Main
  5098  0C9C                     _setRF_Main:	
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5102                           ;setRF_Main@rf stored from wreg
  5103  0C9C  0022               	movlb	2	; select bank2
  5104  0C9D  00E0               	movwf	setRF_Main@rf^(0+256)
  5105                           
  5106                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  5107  0C9E  0860               	movf	setRF_Main@rf^(0+256),w
  5108  0C9F  319E  2694  318C   	fcall	_RfPointSelect
  5109                           
  5110                           ;RF_Control_B1.c: 61: if(RF->Enable)
  5111  0CA2  0879               	movf	_RF,w
  5112  0CA3  0086               	movwf	6
  5113  0CA4  0187               	clrf	7
  5114  0CA5  1C01               	btfss	1,0
  5115  0CA6  0008               	return
  5116                           
  5117                           ;RF_Control_B1.c: 62: {
  5118                           ;RF_Control_B1.c: 68: RF->Key=((RA0 || RB1 || RA6 || RA4 ) && RF->Learn == 0)?1:0;
  5119  0CA7  0022               	movlb	2	; select bank2
  5120  0CA8  01E1               	clrf	_setRF_Main$3353^(0+256)
  5121  0CA9  0020               	movlb	0	; select bank0
  5122  0CAA  1C0C               	btfss	12,0	;volatile
  5123  0CAB  188D               	btfsc	13,1	;volatile
  5124  0CAC  2CB1               	goto	l8622
  5125  0CAD  1B0C               	btfsc	12,6	;volatile
  5126  0CAE  2CB1               	goto	l8622
  5127  0CAF  1E0C               	btfss	12,4	;volatile
  5128  0CB0  2CB9               	goto	l8626
  5129  0CB1                     l8622:	
  5130  0CB1  0879               	movf	_RF,w
  5131  0CB2  0086               	movwf	6
  5132  0CB3  0187               	clrf	7
  5133  0CB4  1B01               	btfsc	1,6
  5134  0CB5  2CB9               	goto	l8626
  5135  0CB6  0022               	movlb	2	; select bank2
  5136  0CB7  01E1               	clrf	_setRF_Main$3353^(0+256)
  5137  0CB8  0AE1               	incf	_setRF_Main$3353^(0+256),f
  5138  0CB9                     l8626:	
  5139  0CB9  0879               	movf	_RF,w
  5140  0CBA  0086               	movwf	6
  5141  0CBB  0187               	clrf	7
  5142  0CBC  0022               	movlb	2	; select bank2
  5143  0CBD  0861               	movf	_setRF_Main$3353^(0+256),w
  5144  0CBE  1381               	bcf	1,7
  5145  0CBF  1D03               	skipz
  5146  0CC0  1781               	bsf	1,7
  5147                           
  5148                           ;RF_Control_B1.c: 75: if(RF->Key)
  5149  0CC1  0879               	movf	_RF,w
  5150  0CC2  0086               	movwf	6
  5151  0CC3  0187               	clrf	7
  5152  0CC4  1F81               	btfss	1,7
  5153  0CC5  2CCA               	goto	l8630
  5154                           
  5155                           ;RF_Control_B1.c: 76: {
  5156                           ;RF_Control_B1.c: 77: RF_RxDisable(1);
  5157  0CC6  3001               	movlw	1
  5158  0CC7  3193  233E         	fcall	_RF_RxDisable
  5159                           
  5160                           ;RF_Control_B1.c: 78: }
  5161  0CC9  0008               	return
  5162  0CCA                     l8630:	
  5163                           
  5164                           ;RF_Control_B1.c: 79: else
  5165                           ;RF_Control_B1.c: 80: {
  5166                           ;RF_Control_B1.c: 81: if(RF->ReceiveGO)
  5167  0CCA  0879               	movf	_RF,w
  5168  0CCB  0086               	movwf	6
  5169  0CCC  0187               	clrf	7
  5170  0CCD  1C81               	btfss	1,1
  5171  0CCE  2CDA               	goto	l8638
  5172                           
  5173                           ;RF_Control_B1.c: 82: {
  5174                           ;RF_Control_B1.c: 83: RF->ReceiveGO=0;
  5175  0CCF  0879               	movf	_RF,w
  5176  0CD0  0086               	movwf	6
  5177  0CD1  0187               	clrf	7
  5178  0CD2  1081               	bcf	1,1
  5179                           
  5180                           ;RF_Control_B1.c: 84: CC2500_RxData();
  5181  0CD3  3189  2187  318C   	fcall	_CC2500_RxData
  5182                           
  5183                           ;RF_Control_B1.c: 90: getRxData(1);
  5184  0CD6  3001               	movlw	1
  5185  0CD7  3197  2755         	fcall	_getRxData
  5186                           
  5187                           ;RF_Control_B1.c: 93: }
  5188  0CD9  0008               	return
  5189  0CDA                     l8638:	
  5190                           
  5191                           ;RF_Control_B1.c: 94: else
  5192                           ;RF_Control_B1.c: 95: {
  5193                           ;RF_Control_B1.c: 96: if(RF->TransceiveGO)
  5194  0CDA  0879               	movf	_RF,w
  5195  0CDB  0086               	movwf	6
  5196  0CDC  0187               	clrf	7
  5197  0CDD  1D01               	btfss	1,2
  5198  0CDE  2D0B               	goto	l8656
  5199                           
  5200                           ;RF_Control_B1.c: 97: {
  5201                           ;RF_Control_B1.c: 98: RF_RxDisable(1);
  5202  0CDF  3001               	movlw	1
  5203  0CE0  3193  233E  318C   	fcall	_RF_RxDisable
  5204                           
  5205                           ;RF_Control_B1.c: 99: if(RF->Debounce == 0)
  5206  0CE3  0879               	movf	_RF,w
  5207  0CE4  0086               	movwf	6
  5208  0CE5  0187               	clrf	7
  5209  0CE6  1A81               	btfsc	1,5
  5210  0CE7  2D00               	goto	l8652
  5211                           
  5212                           ;RF_Control_B1.c: 100: {
  5213                           ;RF_Control_B1.c: 101: RF->DebounceTime++;
  5214  0CE8  3001               	movlw	1
  5215  0CE9  0022               	movlb	2	; select bank2
  5216  0CEA  00DF               	movwf	??_setRF_Main^(0+256)
  5217  0CEB  0A79               	incf	_RF,w
  5218  0CEC  0086               	movwf	6
  5219  0CED  0187               	clrf	7
  5220  0CEE  085F               	movf	??_setRF_Main^(0+256),w
  5221  0CEF  0781               	addwf	1,f
  5222                           
  5223                           ;RF_Control_B1.c: 102: if(RF->DebounceTime == 25)
  5224  0CF0  0A79               	incf	_RF,w
  5225  0CF1  0086               	movwf	6
  5226  0CF2  0187               	clrf	7
  5227  0CF3  0801               	movf	1,w
  5228  0CF4  3A19               	xorlw	25
  5229  0CF5  1D03               	skipz
  5230  0CF6  0008               	return
  5231                           
  5232                           ;RF_Control_B1.c: 103: {
  5233                           ;RF_Control_B1.c: 104: RF->DebounceTime=0;
  5234  0CF7  0A79               	incf	_RF,w
  5235  0CF8  0086               	movwf	6
  5236  0CF9  0187               	clrf	7
  5237  0CFA  0181               	clrf	1
  5238                           
  5239                           ;RF_Control_B1.c: 105: RF->Debounce=1;
  5240  0CFB  0879               	movf	_RF,w
  5241  0CFC  0086               	movwf	6
  5242  0CFD  0187               	clrf	7
  5243  0CFE  1681               	bsf	1,5
  5244                           
  5245                           ;RF_Control_B1.c: 106: }
  5246                           ;RF_Control_B1.c: 107: }
  5247  0CFF  0008               	return
  5248  0D00                     l8652:	
  5249                           
  5250                           ;RF_Control_B1.c: 108: else
  5251                           ;RF_Control_B1.c: 109: {
  5252                           ;RF_Control_B1.c: 110: RF->Debounce=0;
  5253  0D00  0879               	movf	_RF,w
  5254  0D01  0086               	movwf	6
  5255  0D02  0187               	clrf	7
  5256  0D03  1281               	bcf	1,5
  5257                           
  5258                           ;RF_Control_B1.c: 111: RF->TransceiveGO=0;
  5259  0D04  0879               	movf	_RF,w
  5260  0D05  0086               	movwf	6
  5261  0D06  0187               	clrf	7
  5262  0D07  1101               	bcf	1,2
  5263                           
  5264                           ;RF_Control_B1.c: 112: CC2500_TxData();
  5265  0D08  3195  25E9         	fcall	_CC2500_TxData
  5266                           
  5267                           ;RF_Control_B1.c: 113: }
  5268                           ;RF_Control_B1.c: 114: }
  5269  0D0A  0008               	return
  5270  0D0B                     l8656:	
  5271                           
  5272                           ;RF_Control_B1.c: 115: else
  5273                           ;RF_Control_B1.c: 116: {
  5274                           ;RF_Control_B1.c: 117: if(RF->RxStatus == 0 && 1)
  5275  0D0B  0879               	movf	_RF,w
  5276  0D0C  0086               	movwf	6
  5277  0D0D  0187               	clrf	7
  5278  0D0E  1981               	btfsc	1,3
  5279  0D0F  0008               	return
  5280                           
  5281                           ;RF_Control_B1.c: 118: {
  5282                           ;RF_Control_B1.c: 119: RF->RxStatus=1;
  5283  0D10  0879               	movf	_RF,w
  5284  0D11  0086               	movwf	6
  5285  0D12  0187               	clrf	7
  5286  0D13  1581               	bsf	1,3
  5287                           
  5288                           ;RF_Control_B1.c: 120: CC2500_WriteCommand(0x36);
  5289  0D14  3036               	movlw	54
  5290  0D15  319F  277B  318C   	fcall	_CC2500_WriteCommand
  5291                           
  5292                           ;RF_Control_B1.c: 121: CC2500_WriteCommand(0x34);
  5293  0D18  3034               	movlw	52
  5294  0D19  319F  277B  318C   	fcall	_CC2500_WriteCommand
  5295                           
  5296                           ;RF_Control_B1.c: 122: setINT_GO(1);
  5297  0D1C  3001               	movlw	1
  5298  0D1D  319E  266B         	fcall	_setINT_GO
  5299  0D1F  0008               	return
  5300  0D20                     __end_of_setRF_Main:	
  5301                           
  5302                           	psect	text14
  5303  1755                     __ptext14:	
  5304 ;; *************** function _getRxData *****************
  5305 ;; Defined at:
  5306 ;;		line 206 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  rf              1    wreg     unsigned char 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  rf              1    0[BANK1 ] unsigned char 
  5311 ;;  i               1    0        unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;		None               void
  5314 ;; Registers used:
  5315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;Total ram usage:        1 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:   11
  5328 ;; This function calls:
  5329 ;;		_RfPointSelect
  5330 ;;		_setControl_Lights_Table
  5331 ;;		_setLog_Code
  5332 ;; This function is called by:
  5333 ;;		_setRF_Main
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function _getRxData
  5339  1755                     _getRxData:	
  5340                           
  5341                           ;incstack = 0
  5342                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5343                           ;getRxData@rf stored from wreg
  5344  1755  0021               	movlb	1	; select bank1
  5345  1756  00EF               	movwf	getRxData@rf^(0+128)
  5346                           
  5347                           ;RF_Control_B1.c: 208: unsigned char i;
  5348                           ;RF_Control_B1.c: 209: RfPointSelect(rf);
  5349  1757  086F               	movf	getRxData@rf^(0+128),w
  5350  1758  319E  2694  3197   	fcall	_RfPointSelect
  5351                           
  5352                           ;RF_Control_B1.c: 210: if(RF->Learn)
  5353  175B  0879               	movf	_RF,w
  5354  175C  0086               	movwf	6
  5355  175D  0187               	clrf	7
  5356  175E  1F01               	btfss	1,6
  5357  175F  2F6C               	goto	l8246
  5358                           
  5359                           ;RF_Control_B1.c: 211: {
  5360                           ;RF_Control_B1.c: 212: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  5361  1760  0021               	movlb	1	; select bank1
  5362  1761  08A0               	movf	_RF_Data^(0+128),f
  5363  1762  1D03               	skipz
  5364  1763  0008               	return
  5365  1764  0821               	movf	(_RF_Data^(0+128)+1),w
  5366  1765  3A64               	xorlw	100
  5367  1766  1D03               	skipz
  5368  1767  0008               	return
  5369                           
  5370                           ;RF_Control_B1.c: 213: {
  5371                           ;RF_Control_B1.c: 214: setLog_Code(1);
  5372  1768  3001               	movlw	1
  5373  1769  3196  2673         	fcall	_setLog_Code
  5374                           
  5375                           ;RF_Control_B1.c: 215: }
  5376                           ;RF_Control_B1.c: 216: }
  5377  176B  0008               	return
  5378  176C                     l8246:	
  5379                           
  5380                           ;RF_Control_B1.c: 217: else
  5381                           ;RF_Control_B1.c: 218: {
  5382                           ;RF_Control_B1.c: 219: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  5383  176C  0021               	movlb	1	; select bank1
  5384  176D  08A0               	movf	_RF_Data^(0+128),f
  5385  176E  1D03               	skipz
  5386  176F  0008               	return
  5387  1770  0821               	movf	(_RF_Data^(0+128)+1),w
  5388  1771  3A02               	xorlw	2
  5389  1772  1D03               	skipz
  5390  1773  0008               	return
  5391                           
  5392                           ;RF_Control_B1.c: 220: {
  5393                           ;RF_Control_B1.c: 221: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  5394  1774  082C               	movf	(_RF_Data^(0+128)+12),w
  5395  1775  3AFF               	xorlw	255
  5396  1776  1D03               	skipz
  5397  1777  2F82               	goto	l8258
  5398  1778  082D               	movf	(_RF_Data^(0+128)+13),w
  5399  1779  3AFF               	xorlw	255
  5400  177A  1D03               	skipz
  5401  177B  2F82               	goto	l8258
  5402  177C  082E               	movf	(_RF_Data^(0+128)+14),w
  5403  177D  3AFF               	xorlw	255
  5404  177E  1D03               	skipz
  5405  177F  2F82               	goto	l8258
  5406                           
  5407                           ;RF_Control_B1.c: 222: {
  5408                           ;RF_Control_B1.c: 223: __nop();
  5409  1780  0000               	nop
  5410                           
  5411                           ;RF_Control_B1.c: 224: }
  5412  1781  0008               	return
  5413  1782                     l8258:	
  5414                           
  5415                           ;RF_Control_B1.c: 225: else
  5416                           ;RF_Control_B1.c: 226: {
  5417                           ;RF_Control_B1.c: 227: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  5418  1782  0020               	movlb	0	; select bank0
  5419  1783  086E               	movf	_Product,w
  5420  1784  3E0C               	addlw	12
  5421  1785  0086               	movwf	6
  5422  1786  3001               	movlw	1	; select bank2/3
  5423  1787  0087               	movwf	7
  5424  1788  0021               	movlb	1	; select bank1
  5425  1789  082C               	movf	(_RF_Data^(0+128)+12),w
  5426  178A  0601               	xorwf	1,w
  5427  178B  1D03               	skipz
  5428  178C  0008               	return
  5429  178D  0020               	movlb	0	; select bank0
  5430  178E  086E               	movf	_Product,w
  5431  178F  3E0D               	addlw	13
  5432  1790  0086               	movwf	6
  5433  1791  3001               	movlw	1	; select bank2/3
  5434  1792  0087               	movwf	7
  5435  1793  0021               	movlb	1	; select bank1
  5436  1794  082D               	movf	(_RF_Data^(0+128)+13),w
  5437  1795  0601               	xorwf	1,w
  5438  1796  1D03               	skipz
  5439  1797  0008               	return
  5440  1798  0020               	movlb	0	; select bank0
  5441  1799  086E               	movf	_Product,w
  5442  179A  3E0E               	addlw	14
  5443  179B  0086               	movwf	6
  5444  179C  3001               	movlw	1	; select bank2/3
  5445  179D  0087               	movwf	7
  5446  179E  0021               	movlb	1	; select bank1
  5447  179F  082E               	movf	(_RF_Data^(0+128)+14),w
  5448  17A0  0601               	xorwf	1,w
  5449  17A1  1D03               	skipz
  5450  17A2  0008               	return
  5451                           
  5452                           ;RF_Control_B1.c: 228: {
  5453                           ;RF_Control_B1.c: 229: setControl_Lights_Table(1);
  5454  17A3  3001               	movlw	1
  5455  17A4  318E  262C         	fcall	_setControl_Lights_Table
  5456                           
  5457                           ;RF_Control_B1.c: 238: {
  5458                           ;RF_Control_B1.c: 239: ;
  5459                           
  5460                           ;RF_Control_B1.c: 234: {
  5461                           ;RF_Control_B1.c: 235: ;
  5462                           ;RF_Control_B1.c: 236: }
  5463                           
  5464                           ;RF_Control_B1.c: 230: }
  5465                           ;RF_Control_B1.c: 231: }
  5466                           ;RF_Control_B1.c: 232: }
  5467  17A6  0008               	return
  5468  17A7                     __end_of_getRxData:	
  5469                           
  5470                           	psect	text15
  5471  1673                     __ptext15:	
  5472 ;; *************** function _setLog_Code *****************
  5473 ;; Defined at:
  5474 ;;		line 248 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  rf              1    wreg     unsigned char 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  rf              1   11[BANK0 ] unsigned char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;		None               void
  5481 ;; Registers used:
  5482 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;Total ram usage:        2 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    6
  5495 ;; This function calls:
  5496 ;;		_RfPointSelect
  5497 ;;		_setBuz
  5498 ;; This function is called by:
  5499 ;;		_getRxData
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           
  5504                           ;psect for function _setLog_Code
  5505  1673                     _setLog_Code:	
  5506                           
  5507                           ;incstack = 0
  5508                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5509                           ;setLog_Code@rf stored from wreg
  5510  1673  0020               	movlb	0	; select bank0
  5511  1674  00AB               	movwf	setLog_Code@rf
  5512                           
  5513                           ;RF_Control_B1.c: 250: RfPointSelect(rf);
  5514  1675  082B               	movf	setLog_Code@rf,w
  5515  1676  319E  2694  3196   	fcall	_RfPointSelect
  5516                           
  5517                           ;RF_Control_B1.c: 251: Product->Data[12]=RF_Data[12];
  5518  1679  0021               	movlb	1	; select bank1
  5519  167A  082C               	movf	(_RF_Data^(0+128)+12),w
  5520  167B  0020               	movlb	0	; select bank0
  5521  167C  00AA               	movwf	??_setLog_Code
  5522  167D  086E               	movf	_Product,w
  5523  167E  3E0C               	addlw	12
  5524  167F  0086               	movwf	6
  5525  1680  3001               	movlw	1	; select bank2/3
  5526  1681  0087               	movwf	7
  5527  1682  082A               	movf	??_setLog_Code,w
  5528  1683  0081               	movwf	1
  5529                           
  5530                           ;RF_Control_B1.c: 252: Product->Data[13]=RF_Data[13];
  5531  1684  0021               	movlb	1	; select bank1
  5532  1685  082D               	movf	(_RF_Data^(0+128)+13),w
  5533  1686  0020               	movlb	0	; select bank0
  5534  1687  00AA               	movwf	??_setLog_Code
  5535  1688  086E               	movf	_Product,w
  5536  1689  3E0D               	addlw	13
  5537  168A  0086               	movwf	6
  5538  168B  3001               	movlw	1	; select bank2/3
  5539  168C  0087               	movwf	7
  5540  168D  082A               	movf	??_setLog_Code,w
  5541  168E  0081               	movwf	1
  5542                           
  5543                           ;RF_Control_B1.c: 253: Product->Data[14]=RF_Data[14];
  5544  168F  0021               	movlb	1	; select bank1
  5545  1690  082E               	movf	(_RF_Data^(0+128)+14),w
  5546  1691  0020               	movlb	0	; select bank0
  5547  1692  00AA               	movwf	??_setLog_Code
  5548  1693  086E               	movf	_Product,w
  5549  1694  3E0E               	addlw	14
  5550  1695  0086               	movwf	6
  5551  1696  3001               	movlw	1	; select bank2/3
  5552  1697  0087               	movwf	7
  5553  1698  082A               	movf	??_setLog_Code,w
  5554  1699  0081               	movwf	1
  5555                           
  5556                           ;RF_Control_B1.c: 254: setBuz(1,100);
  5557  169A  3064               	movlw	100
  5558  169B  00A6               	movwf	setBuz@time
  5559  169C  3000               	movlw	0
  5560  169D  00A7               	movwf	setBuz@time+1
  5561  169E  3001               	movlw	1
  5562  169F  318C  2425  3196   	fcall	_setBuz
  5563                           
  5564                           ;RF_Control_B1.c: 255: RF->Learn=0;
  5565  16A2  0879               	movf	_RF,w
  5566  16A3  0086               	movwf	6
  5567  16A4  0187               	clrf	7
  5568  16A5  1301               	bcf	1,6
  5569                           
  5570                           ;RF_Control_B1.c: 256: if(TMain->First)
  5571  16A6  0020               	movlb	0	; select bank0
  5572  16A7  086F               	movf	_TMain,w
  5573  16A8  3E03               	addlw	3
  5574  16A9  0086               	movwf	6
  5575  16AA  3001               	movlw	1	; select bank2/3
  5576  16AB  0087               	movwf	7
  5577  16AC  1C81               	btfss	1,1
  5578  16AD  2EB4               	goto	l2331
  5579                           
  5580                           ;RF_Control_B1.c: 257: {
  5581                           ;RF_Control_B1.c: 258: Memory->LoopSave=1;
  5582  16AE  087A               	movf	_Memory,w
  5583  16AF  3E22               	addlw	34
  5584  16B0  0086               	movwf	6
  5585  16B1  3001               	movlw	1	; select bank2/3
  5586  16B2  0087               	movwf	7
  5587  16B3  1501               	bsf	1,2
  5588  16B4                     l2331:	
  5589                           
  5590                           ;RF_Control_B1.c: 259: }
  5591                           ;RF_Control_B1.c: 260: Memory->Modify=1;
  5592  16B4  087A               	movf	_Memory,w
  5593  16B5  3E22               	addlw	34
  5594  16B6  0086               	movwf	6
  5595  16B7  3001               	movlw	1	; select bank2/3
  5596  16B8  0087               	movwf	7
  5597  16B9  1401               	bsf	1,0
  5598  16BA  0008               	return
  5599  16BB                     __end_of_setLog_Code:	
  5600                           
  5601                           	psect	text16
  5602  0E2C                     __ptext16:	
  5603 ;; *************** function _setControl_Lights_Table *****************
  5604 ;; Defined at:
  5605 ;;		line 263 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  rf              1    wreg     unsigned char 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  rf              1   71[BANK0 ] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;		None               void
  5612 ;; Registers used:
  5613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;Total ram usage:        1 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:   10
  5626 ;; This function calls:
  5627 ;;		_RfPointSelect
  5628 ;;		_setBuz
  5629 ;;		_setDimmerLights
  5630 ;;		_setRFSW_AdjControl
  5631 ;;		_setRFSW_Control
  5632 ;;		_setRFSW_Status
  5633 ;;		_setSw_Status
  5634 ;;		_setTxData
  5635 ;; This function is called by:
  5636 ;;		_getRxData
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _setControl_Lights_Table
  5642  0E2C                     _setControl_Lights_Table:	
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5646                           ;setControl_Lights_Table@rf stored from wreg
  5647  0E2C  0020               	movlb	0	; select bank0
  5648  0E2D  00E7               	movwf	setControl_Lights_Table@rf
  5649                           
  5650                           ;RF_Control_B1.c: 265: RfPointSelect(rf);
  5651  0E2E  0867               	movf	setControl_Lights_Table@rf,w
  5652  0E2F  319E  2694  318E   	fcall	_RfPointSelect
  5653                           
  5654                           ;RF_Control_B1.c: 266: if(RF_Data[15] == 0x00)
  5655  0E32  0021               	movlb	1	; select bank1
  5656  0E33  08AF               	movf	(_RF_Data^(0+128)+15),f
  5657  0E34  1D03               	skipz
  5658  0E35  2E7F               	goto	l7976
  5659                           
  5660                           ;RF_Control_B1.c: 267: {
  5661                           ;RF_Control_B1.c: 269: setDimmerLights(1,0);
  5662  0E36  0020               	movlb	0	; select bank0
  5663  0E37  01A4               	clrf	setDimmerLights@status
  5664  0E38  3001               	movlw	1
  5665  0E39  318B  23AF  318E   	fcall	_setDimmerLights
  5666                           
  5667                           ;RF_Control_B1.c: 270: setRFSW_Status(1,0);
  5668  0E3C  0020               	movlb	0	; select bank0
  5669  0E3D  01A2               	clrf	setRFSW_Status@command
  5670  0E3E  3001               	movlw	1
  5671  0E3F  319F  274E  318E   	fcall	_setRFSW_Status
  5672                           
  5673                           ;RF_Control_B1.c: 271: setSw_Status(1,0);
  5674  0E42  0020               	movlb	0	; select bank0
  5675  0E43  01A1               	clrf	setSw_Status@command
  5676  0E44  3001               	movlw	1
  5677  0E45  319F  275D  318E   	fcall	_setSw_Status
  5678                           
  5679                           ;RF_Control_B1.c: 274: setDimmerLights(2,0);
  5680  0E48  0020               	movlb	0	; select bank0
  5681  0E49  01A4               	clrf	setDimmerLights@status
  5682  0E4A  3002               	movlw	2
  5683  0E4B  318B  23AF  318E   	fcall	_setDimmerLights
  5684                           
  5685                           ;RF_Control_B1.c: 275: setRFSW_Status(2,0);
  5686  0E4E  0020               	movlb	0	; select bank0
  5687  0E4F  01A2               	clrf	setRFSW_Status@command
  5688  0E50  3002               	movlw	2
  5689  0E51  319F  274E  318E   	fcall	_setRFSW_Status
  5690                           
  5691                           ;RF_Control_B1.c: 276: setSw_Status(2,0);
  5692  0E54  0020               	movlb	0	; select bank0
  5693  0E55  01A1               	clrf	setSw_Status@command
  5694  0E56  3002               	movlw	2
  5695  0E57  319F  275D  318E   	fcall	_setSw_Status
  5696                           
  5697                           ;RF_Control_B1.c: 284: Product->Data[9]=0;
  5698  0E5A  0020               	movlb	0	; select bank0
  5699  0E5B  086E               	movf	_Product,w
  5700  0E5C  3E09               	addlw	9
  5701  0E5D  0086               	movwf	6
  5702  0E5E  3001               	movlw	1	; select bank2/3
  5703  0E5F  0087               	movwf	7
  5704  0E60  0181               	clrf	1
  5705                           
  5706                           ;RF_Control_B1.c: 285: Product->Data[11]=0;
  5707  0E61  086E               	movf	_Product,w
  5708  0E62  3E0B               	addlw	11
  5709  0E63  0086               	movwf	6
  5710  0E64  3001               	movlw	1	; select bank2/3
  5711  0E65  0087               	movwf	7
  5712  0E66  0181               	clrf	1
  5713                           
  5714                           ;RF_Control_B1.c: 286: Product->Data[15]=0;
  5715  0E67  086E               	movf	_Product,w
  5716  0E68  3E0F               	addlw	15
  5717  0E69  0086               	movwf	6
  5718  0E6A  3001               	movlw	1	; select bank2/3
  5719  0E6B  0087               	movwf	7
  5720  0E6C  0181               	clrf	1
  5721                           
  5722                           ;RF_Control_B1.c: 287: Product->Data[17]=0;
  5723  0E6D  086E               	movf	_Product,w
  5724  0E6E  3E11               	addlw	17
  5725  0E6F  0086               	movwf	6
  5726  0E70  3001               	movlw	1	; select bank2/3
  5727  0E71  0087               	movwf	7
  5728  0E72  0181               	clrf	1
  5729                           
  5730                           ;RF_Control_B1.c: 288: setBuz(1,100);
  5731  0E73  3064               	movlw	100
  5732  0E74  00A6               	movwf	setBuz@time
  5733  0E75  3000               	movlw	0
  5734  0E76  00A7               	movwf	setBuz@time+1
  5735  0E77  3001               	movlw	1
  5736  0E78  318C  2425  318E   	fcall	_setBuz
  5737                           
  5738                           ;RF_Control_B1.c: 289: setTxData(1);
  5739  0E7B  3001               	movlw	1
  5740  0E7C  3194  2467         	fcall	_setTxData
  5741                           
  5742                           ;RF_Control_B1.c: 290: }
  5743  0E7E  0008               	return
  5744  0E7F                     l7976:	
  5745                           
  5746                           ;RF_Control_B1.c: 291: else if(RF_Data[15] == 0x20)
  5747  0E7F  0021               	movlb	1	; select bank1
  5748  0E80  082F               	movf	(_RF_Data^(0+128)+15),w
  5749  0E81  3A20               	xorlw	32
  5750  0E82  1D03               	skipz
  5751  0E83  2E9B               	goto	l7982
  5752                           
  5753                           ;RF_Control_B1.c: 292: {
  5754                           ;RF_Control_B1.c: 293: Product->Data[9]=0;
  5755  0E84  0020               	movlb	0	; select bank0
  5756  0E85  086E               	movf	_Product,w
  5757  0E86  3E09               	addlw	9
  5758  0E87  0086               	movwf	6
  5759  0E88  3001               	movlw	1	; select bank2/3
  5760  0E89  0087               	movwf	7
  5761  0E8A  0181               	clrf	1
  5762                           
  5763                           ;RF_Control_B1.c: 294: Product->Data[11]=0;
  5764  0E8B  086E               	movf	_Product,w
  5765  0E8C  3E0B               	addlw	11
  5766  0E8D  0086               	movwf	6
  5767  0E8E  3001               	movlw	1	; select bank2/3
  5768  0E8F  0087               	movwf	7
  5769  0E90  0181               	clrf	1
  5770                           
  5771                           ;RF_Control_B1.c: 295: Product->Data[17]=0;
  5772  0E91  086E               	movf	_Product,w
  5773  0E92  3E11               	addlw	17
  5774  0E93  0086               	movwf	6
  5775  0E94  3001               	movlw	1	; select bank2/3
  5776  0E95  0087               	movwf	7
  5777  0E96  0181               	clrf	1
  5778                           
  5779                           ;RF_Control_B1.c: 296: setTxData(1);
  5780  0E97  3001               	movlw	1
  5781  0E98  3194  2467         	fcall	_setTxData
  5782                           
  5783                           ;RF_Control_B1.c: 297: }
  5784  0E9A  0008               	return
  5785  0E9B                     l7982:	
  5786                           
  5787                           ;RF_Control_B1.c: 299: else if(RF_Data[15] == 0x01)
  5788  0E9B  0021               	movlb	1	; select bank1
  5789  0E9C  082F               	movf	(_RF_Data^(0+128)+15),w
  5790  0E9D  3A01               	xorlw	1
  5791  0E9E  1D03               	skipz
  5792  0E9F  2EA4               	goto	l7986
  5793                           
  5794                           ;RF_Control_B1.c: 300: {
  5795                           ;RF_Control_B1.c: 301: setRFSW_Control(1);
  5796  0EA0  3001               	movlw	1
  5797  0EA1  318E  26BF         	fcall	_setRFSW_Control
  5798                           
  5799                           ;RF_Control_B1.c: 302: }
  5800  0EA3  0008               	return
  5801  0EA4                     l7986:	
  5802                           
  5803                           ;RF_Control_B1.c: 304: else if(RF_Data[15] == 0x11)
  5804  0EA4  0021               	movlb	1	; select bank1
  5805  0EA5  082F               	movf	(_RF_Data^(0+128)+15),w
  5806  0EA6  3A11               	xorlw	17
  5807  0EA7  1D03               	skipz
  5808  0EA8  2EAD               	goto	l7990
  5809                           
  5810                           ;RF_Control_B1.c: 305: {
  5811                           ;RF_Control_B1.c: 306: setRFSW_AdjControl(1);
  5812  0EA9  3001               	movlw	1
  5813  0EAA  3194  24E1         	fcall	_setRFSW_AdjControl
  5814                           
  5815                           ;RF_Control_B1.c: 307: }
  5816  0EAC  0008               	return
  5817  0EAD                     l7990:	
  5818                           
  5819                           ;RF_Control_B1.c: 312: else if(RF_Data[15] == 0x02)
  5820  0EAD  0021               	movlb	1	; select bank1
  5821  0EAE  082F               	movf	(_RF_Data^(0+128)+15),w
  5822  0EAF  3A02               	xorlw	2
  5823  0EB0  1D03               	skipz
  5824  0EB1  2EB6               	goto	l7994
  5825                           
  5826                           ;RF_Control_B1.c: 313: {
  5827                           ;RF_Control_B1.c: 314: setRFSW_Control(2);
  5828  0EB2  3002               	movlw	2
  5829  0EB3  318E  26BF         	fcall	_setRFSW_Control
  5830                           
  5831                           ;RF_Control_B1.c: 315: }
  5832  0EB5  0008               	return
  5833  0EB6                     l7994:	
  5834                           
  5835                           ;RF_Control_B1.c: 317: else if(RF_Data[15] == 0x21)
  5836  0EB6  0021               	movlb	1	; select bank1
  5837  0EB7  082F               	movf	(_RF_Data^(0+128)+15),w
  5838  0EB8  3A21               	xorlw	33
  5839  0EB9  1D03               	skipz
  5840  0EBA  0008               	return
  5841                           
  5842                           ;RF_Control_B1.c: 318: {
  5843                           ;RF_Control_B1.c: 319: setRFSW_AdjControl(2);
  5844  0EBB  3002               	movlw	2
  5845  0EBC  3194  24E1         	fcall	_setRFSW_AdjControl
  5846  0EBE  0008               	return
  5847  0EBF                     __end_of_setControl_Lights_Table:	
  5848                           
  5849                           	psect	text17
  5850  0EBF                     __ptext17:	
  5851 ;; *************** function _setRFSW_Control *****************
  5852 ;; Defined at:
  5853 ;;		line 360 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  sw              1    wreg     unsigned char 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  sw              1   12[BANK0 ] unsigned char 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;		None               void
  5860 ;; Registers used:
  5861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;Total ram usage:        3 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:    6
  5874 ;; This function calls:
  5875 ;;		_RfSWPointSelect
  5876 ;;		_setBuz
  5877 ;;		_setDelayOff_GO
  5878 ;;		_setDimmerLights_Switch
  5879 ;;		_setDimmerLights_Trigger
  5880 ;;		_setRF_DimmerLights
  5881 ;;		_setSw_Status
  5882 ;;		_setTxData
  5883 ;; This function is called by:
  5884 ;;		_setControl_Lights_Table
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           
  5889                           ;psect for function _setRFSW_Control
  5890  0EBF                     _setRFSW_Control:	
  5891                           
  5892                           ;incstack = 0
  5893                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5894                           ;setRFSW_Control@sw stored from wreg
  5895  0EBF  0020               	movlb	0	; select bank0
  5896  0EC0  00AC               	movwf	setRFSW_Control@sw
  5897                           
  5898                           ;RF_Control_B1.c: 362: RfSWPointSelect(sw);
  5899  0EC1  082C               	movf	setRFSW_Control@sw,w
  5900  0EC2  3190  20A3  318E   	fcall	_RfSWPointSelect
  5901                           
  5902                           ;RF_Control_B1.c: 363: if(RF_Data[16] == 0x80)
  5903  0EC5  0021               	movlb	1	; select bank1
  5904  0EC6  0830               	movf	(_RF_Data^(0+128)+16),w
  5905  0EC7  3A80               	xorlw	128
  5906  0EC8  1D03               	skipz
  5907  0EC9  2EE5               	goto	l7852
  5908                           
  5909                           ;RF_Control_B1.c: 364: {
  5910                           ;RF_Control_B1.c: 365: setDelayOff_GO(sw,1,RF_Data[17]);
  5911  0ECA  0020               	movlb	0	; select bank0
  5912  0ECB  01A3               	clrf	setDelayOff_GO@command
  5913  0ECC  0AA3               	incf	setDelayOff_GO@command,f
  5914  0ECD  0021               	movlb	1	; select bank1
  5915  0ECE  0831               	movf	(_RF_Data^(0+128)+17),w
  5916  0ECF  0020               	movlb	0	; select bank0
  5917  0ED0  00AA               	movwf	??_setRFSW_Control
  5918  0ED1  082A               	movf	??_setRFSW_Control,w
  5919  0ED2  00A4               	movwf	setDelayOff_GO@value
  5920  0ED3  082C               	movf	setRFSW_Control@sw,w
  5921  0ED4  3194  242C  318E   	fcall	_setDelayOff_GO
  5922                           
  5923                           ;RF_Control_B1.c: 366: Product->Data[26+sw]=RF_Data[17];
  5924  0ED7  0021               	movlb	1	; select bank1
  5925  0ED8  0831               	movf	(_RF_Data^(0+128)+17),w
  5926  0ED9  0020               	movlb	0	; select bank0
  5927  0EDA  00AA               	movwf	??_setRFSW_Control
  5928  0EDB  082C               	movf	setRFSW_Control@sw,w
  5929  0EDC  3E1A               	addlw	26
  5930  0EDD  076E               	addwf	_Product,w
  5931  0EDE  00AB               	movwf	??_setRFSW_Control+1
  5932  0EDF  082B               	movf	??_setRFSW_Control+1,w
  5933  0EE0  0086               	movwf	6
  5934  0EE1  3001               	movlw	1	; select bank2/3
  5935  0EE2  0087               	movwf	7
  5936  0EE3  082A               	movf	??_setRFSW_Control,w
  5937  0EE4  0081               	movwf	1
  5938  0EE5                     l7852:	
  5939                           
  5940                           ;RF_Control_B1.c: 367: }
  5941                           ;RF_Control_B1.c: 368: if(RFSW->Status == 0)
  5942  0EE5  0021               	movlb	1	; select bank1
  5943  0EE6  0839               	movf	_RFSW^(0+128),w
  5944  0EE7  0086               	movwf	6
  5945  0EE8  0187               	clrf	7
  5946  0EE9  1801               	btfsc	1,0
  5947  0EEA  2F12               	goto	l7864
  5948                           
  5949                           ;RF_Control_B1.c: 369: {
  5950                           ;RF_Control_B1.c: 370: RFSW->Status=1;
  5951  0EEB  0839               	movf	_RFSW^(0+128),w
  5952  0EEC  0086               	movwf	6
  5953  0EED  0187               	clrf	7
  5954  0EEE  1401               	bsf	1,0
  5955                           
  5956                           ;RF_Control_B1.c: 371: setSw_Status(sw,1);
  5957  0EEF  0020               	movlb	0	; select bank0
  5958  0EF0  01A1               	clrf	setSw_Status@command
  5959  0EF1  0AA1               	incf	setSw_Status@command,f
  5960  0EF2  082C               	movf	setRFSW_Control@sw,w
  5961  0EF3  319F  275D  318E   	fcall	_setSw_Status
  5962                           
  5963                           ;RF_Control_B1.c: 373: setDimmerLights_Trigger(sw,1);
  5964  0EF6  0020               	movlb	0	; select bank0
  5965  0EF7  01A2               	clrf	setDimmerLights_Trigger@command
  5966  0EF8  0AA2               	incf	setDimmerLights_Trigger@command,f
  5967  0EF9  082C               	movf	setRFSW_Control@sw,w
  5968  0EFA  319F  279B  318E   	fcall	_setDimmerLights_Trigger
  5969                           
  5970                           ;RF_Control_B1.c: 374: setDimmerLights_Switch(sw,1);
  5971  0EFD  0020               	movlb	0	; select bank0
  5972  0EFE  01A2               	clrf	setDimmerLights_Switch@command
  5973  0EFF  0AA2               	incf	setDimmerLights_Switch@command,f
  5974  0F00  082C               	movf	setRFSW_Control@sw,w
  5975  0F01  319F  278B  318E   	fcall	_setDimmerLights_Switch
  5976                           
  5977                           ;RF_Control_B1.c: 375: setRF_DimmerLights(sw,RFSW->Status);
  5978  0F04  0021               	movlb	1	; select bank1
  5979  0F05  0839               	movf	_RFSW^(0+128),w
  5980  0F06  0086               	movwf	6
  5981  0F07  0187               	clrf	7
  5982  0F08  3000               	movlw	0
  5983  0F09  1801               	btfsc	1,0
  5984  0F0A  3001               	movlw	1
  5985  0F0B  0020               	movlb	0	; select bank0
  5986  0F0C  00A0               	movwf	setRF_DimmerLights@on
  5987  0F0D  082C               	movf	setRFSW_Control@sw,w
  5988  0F0E  3188  2015  318E   	fcall	_setRF_DimmerLights
  5989                           
  5990                           ;RF_Control_B1.c: 376: }
  5991  0F11  2F4B               	goto	l7880
  5992  0F12                     l7864:	
  5993                           
  5994                           ;RF_Control_B1.c: 377: else
  5995                           ;RF_Control_B1.c: 378: {
  5996                           ;RF_Control_B1.c: 379: if(RF_Data[16] == 0x80)
  5997  0F12  0021               	movlb	1	; select bank1
  5998  0F13  0830               	movf	(_RF_Data^(0+128)+16),w
  5999  0F14  3A80               	xorlw	128
  6000  0F15  1D03               	skipz
  6001  0F16  2F1F               	goto	l7868
  6002                           
  6003                           ;RF_Control_B1.c: 380: {
  6004                           ;RF_Control_B1.c: 381: setRF_DimmerLights(sw,1);
  6005  0F17  0020               	movlb	0	; select bank0
  6006  0F18  01A0               	clrf	setRF_DimmerLights@on
  6007  0F19  0AA0               	incf	setRF_DimmerLights@on,f
  6008  0F1A  082C               	movf	setRFSW_Control@sw,w
  6009  0F1B  3188  2015  318E   	fcall	_setRF_DimmerLights
  6010                           
  6011                           ;RF_Control_B1.c: 382: }
  6012  0F1E  2F4B               	goto	l7880
  6013  0F1F                     l7868:	
  6014                           
  6015                           ;RF_Control_B1.c: 383: else
  6016                           ;RF_Control_B1.c: 384: {
  6017                           ;RF_Control_B1.c: 385: RFSW->Status=0;
  6018  0F1F  0021               	movlb	1	; select bank1
  6019  0F20  0839               	movf	_RFSW^(0+128),w
  6020  0F21  0086               	movwf	6
  6021  0F22  0187               	clrf	7
  6022  0F23  1001               	bcf	1,0
  6023                           
  6024                           ;RF_Control_B1.c: 386: setSw_Status(sw,0);
  6025  0F24  0020               	movlb	0	; select bank0
  6026  0F25  01A1               	clrf	setSw_Status@command
  6027  0F26  082C               	movf	setRFSW_Control@sw,w
  6028  0F27  319F  275D  318E   	fcall	_setSw_Status
  6029                           
  6030                           ;RF_Control_B1.c: 388: setDimmerLights_Trigger(sw,1);
  6031  0F2A  0020               	movlb	0	; select bank0
  6032  0F2B  01A2               	clrf	setDimmerLights_Trigger@command
  6033  0F2C  0AA2               	incf	setDimmerLights_Trigger@command,f
  6034  0F2D  082C               	movf	setRFSW_Control@sw,w
  6035  0F2E  319F  279B  318E   	fcall	_setDimmerLights_Trigger
  6036                           
  6037                           ;RF_Control_B1.c: 389: setDimmerLights_Switch(sw,RFSW->Status);
  6038  0F31  0021               	movlb	1	; select bank1
  6039  0F32  0839               	movf	_RFSW^(0+128),w
  6040  0F33  0086               	movwf	6
  6041  0F34  0187               	clrf	7
  6042  0F35  3000               	movlw	0
  6043  0F36  1801               	btfsc	1,0
  6044  0F37  3001               	movlw	1
  6045  0F38  0020               	movlb	0	; select bank0
  6046  0F39  00A2               	movwf	setDimmerLights_Switch@command
  6047  0F3A  082C               	movf	setRFSW_Control@sw,w
  6048  0F3B  319F  278B  318E   	fcall	_setDimmerLights_Switch
  6049                           
  6050                           ;RF_Control_B1.c: 391: setRF_DimmerLights(sw,0);
  6051  0F3E  0020               	movlb	0	; select bank0
  6052  0F3F  01A0               	clrf	setRF_DimmerLights@on
  6053  0F40  082C               	movf	setRFSW_Control@sw,w
  6054  0F41  3188  2015  318E   	fcall	_setRF_DimmerLights
  6055                           
  6056                           ;RF_Control_B1.c: 392: setDelayOff_GO(sw,0,0);
  6057  0F44  0020               	movlb	0	; select bank0
  6058  0F45  01A3               	clrf	setDelayOff_GO@command
  6059  0F46  01A4               	clrf	setDelayOff_GO@value
  6060  0F47  082C               	movf	setRFSW_Control@sw,w
  6061  0F48  3194  242C  318E   	fcall	_setDelayOff_GO
  6062  0F4B                     l7880:	
  6063                           
  6064                           ;RF_Control_B1.c: 393: }
  6065                           ;RF_Control_B1.c: 394: }
  6066                           ;RF_Control_B1.c: 395: setBuz(1,100);
  6067  0F4B  3064               	movlw	100
  6068  0F4C  0020               	movlb	0	; select bank0
  6069  0F4D  00A6               	movwf	setBuz@time
  6070  0F4E  3000               	movlw	0
  6071  0F4F  00A7               	movwf	setBuz@time+1
  6072  0F50  3001               	movlw	1
  6073  0F51  318C  2425  318E   	fcall	_setBuz
  6074                           
  6075                           ;RF_Control_B1.c: 396: setTxData(1);
  6076  0F54  3001               	movlw	1
  6077  0F55  3194  2467         	fcall	_setTxData
  6078  0F57  0008               	return
  6079  0F58                     __end_of_setRFSW_Control:	
  6080                           
  6081                           	psect	text18
  6082  142C                     __ptext18:	
  6083 ;; *************** function _setDelayOff_GO *****************
  6084 ;; Defined at:
  6085 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  sw              1    wreg     unsigned char 
  6088 ;;  command         1    3[BANK0 ] unsigned char 
  6089 ;;  value           1    4[BANK0 ] unsigned char 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  sw              1    6[BANK0 ] unsigned char 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;		None               void
  6094 ;; Registers used:
  6095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6101 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;Total ram usage:        4 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    5
  6108 ;; This function calls:
  6109 ;;		_DelayOffPointSelect
  6110 ;;		_DelayTimejudge
  6111 ;; This function is called by:
  6112 ;;		_setRFSW_Control
  6113 ;;		_Sw_DimmerOffFunc
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           
  6118                           ;psect for function _setDelayOff_GO
  6119  142C                     _setDelayOff_GO:	
  6120                           
  6121                           ;incstack = 0
  6122                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6123                           ;setDelayOff_GO@sw stored from wreg
  6124  142C  0020               	movlb	0	; select bank0
  6125  142D  00A6               	movwf	setDelayOff_GO@sw
  6126                           
  6127                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  6128  142E  0826               	movf	setDelayOff_GO@sw,w
  6129  142F  3190  2066  3194   	fcall	_DelayOffPointSelect
  6130                           
  6131                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  6132  1432  0020               	movlb	0	; select bank0
  6133  1433  0869               	movf	_DelayOff,w
  6134  1434  0086               	movwf	6
  6135  1435  0187               	clrf	7
  6136  1436  1C01               	btfss	1,0
  6137  1437  0008               	return
  6138                           
  6139                           ;DelayOff_B1.c: 96: {
  6140                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  6141  1438  0869               	movf	_DelayOff,w
  6142  1439  0086               	movwf	6
  6143  143A  0187               	clrf	7
  6144  143B  0823               	movf	setDelayOff_GO@command,w
  6145  143C  1081               	bcf	1,1
  6146  143D  1D03               	skipz
  6147  143E  1481               	bsf	1,1
  6148                           
  6149                           ;DelayOff_B1.c: 98: if(command)
  6150  143F  0823               	movf	setDelayOff_GO@command,w
  6151  1440  1903               	btfsc	3,2
  6152  1441  2C4E               	goto	l7702
  6153                           
  6154                           ;DelayOff_B1.c: 99: {
  6155                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  6156  1442  0824               	movf	setDelayOff_GO@value,w
  6157  1443  3193  236A  3194   	fcall	_DelayTimejudge
  6158  1446  0020               	movlb	0	; select bank0
  6159  1447  00A5               	movwf	??_setDelayOff_GO
  6160  1448  0A69               	incf	_DelayOff,w
  6161  1449  0086               	movwf	6
  6162  144A  0187               	clrf	7
  6163  144B  0825               	movf	??_setDelayOff_GO,w
  6164  144C  0081               	movwf	1
  6165                           
  6166                           ;DelayOff_B1.c: 101: }
  6167  144D  2C5A               	goto	l7706
  6168  144E                     l7702:	
  6169                           
  6170                           ;DelayOff_B1.c: 102: else if(command == 0)
  6171  144E  08A3               	movf	setDelayOff_GO@command,f
  6172  144F  1D03               	skipz
  6173  1450  2C5A               	goto	l7706
  6174                           
  6175                           ;DelayOff_B1.c: 103: {
  6176                           ;DelayOff_B1.c: 104: Product->Data[sw+26]=0;
  6177  1451  0826               	movf	setDelayOff_GO@sw,w
  6178  1452  3E1A               	addlw	26
  6179  1453  076E               	addwf	_Product,w
  6180  1454  00A5               	movwf	??_setDelayOff_GO
  6181  1455  0825               	movf	??_setDelayOff_GO,w
  6182  1456  0086               	movwf	6
  6183  1457  3001               	movlw	1	; select bank2/3
  6184  1458  0087               	movwf	7
  6185  1459  0181               	clrf	1
  6186  145A                     l7706:	
  6187                           
  6188                           ;DelayOff_B1.c: 105: }
  6189                           ;DelayOff_B1.c: 106: DelayOff->SecondTime=0;
  6190  145A  0869               	movf	_DelayOff,w
  6191  145B  3E02               	addlw	2
  6192  145C  0086               	movwf	6
  6193  145D  0187               	clrf	7
  6194  145E  3000               	movlw	0
  6195  145F  3FC0               	movwi [0]fsr1
  6196  1460  3FC1               	movwi [1]fsr1
  6197                           
  6198                           ;DelayOff_B1.c: 107: DelayOff->MinuteTime=0;
  6199  1461  0869               	movf	_DelayOff,w
  6200  1462  3E04               	addlw	4
  6201  1463  0086               	movwf	6
  6202  1464  0187               	clrf	7
  6203  1465  0181               	clrf	1
  6204  1466  0008               	return
  6205  1467                     __end_of_setDelayOff_GO:	
  6206                           
  6207                           	psect	text19
  6208  136A                     __ptext19:	
  6209 ;; *************** function _DelayTimejudge *****************
  6210 ;; Defined at:
  6211 ;;		line 111 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  value           1    wreg     unsigned char 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  value           1    2[BANK0 ] unsigned char 
  6216 ;;  i               1    1[BANK0 ] unsigned char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      unsigned char 
  6219 ;; Registers used:
  6220 ;;		wreg
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;Total ram usage:        3 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    4
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_setDelayOff_GO
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           
  6241                           ;psect for function _DelayTimejudge
  6242  136A                     _DelayTimejudge:	
  6243                           
  6244                           ;incstack = 0
  6245                           ; Regs used in _DelayTimejudge: [wreg]
  6246                           ;DelayTimejudge@value stored from wreg
  6247  136A  0020               	movlb	0	; select bank0
  6248  136B  00A2               	movwf	DelayTimejudge@value
  6249                           
  6250                           ;DelayOff_B1.c: 113: char i=5;
  6251  136C  3005               	movlw	5
  6252  136D  00A0               	movwf	??_DelayTimejudge
  6253  136E  0820               	movf	??_DelayTimejudge,w
  6254  136F  00A1               	movwf	DelayTimejudge@i
  6255                           
  6256                           ;DelayOff_B1.c: 114: if(value == 0x05)
  6257  1370  0822               	movf	DelayTimejudge@value,w
  6258  1371  3A05               	xorlw	5
  6259  1372  1D03               	skipz
  6260  1373  2B76               	goto	l7552
  6261                           
  6262                           ;DelayOff_B1.c: 115: {
  6263                           ;DelayOff_B1.c: 116: i=5;
  6264  1374  3005               	movlw	5
  6265  1375  2B93               	goto	L6
  6266  1376                     l7552:	
  6267                           ;DelayOff_B1.c: 117: }
  6268                           
  6269                           
  6270                           ;DelayOff_B1.c: 118: else if(value == 0x10)
  6271  1376  0822               	movf	DelayTimejudge@value,w
  6272  1377  3A10               	xorlw	16
  6273  1378  1D03               	skipz
  6274  1379  2B7C               	goto	l7556
  6275                           
  6276                           ;DelayOff_B1.c: 119: {
  6277                           ;DelayOff_B1.c: 120: i=10;
  6278  137A  300A               	movlw	10
  6279  137B  2B93               	goto	L6
  6280  137C                     l7556:	
  6281                           ;DelayOff_B1.c: 121: }
  6282                           
  6283                           
  6284                           ;DelayOff_B1.c: 122: else if(value == 0x15)
  6285  137C  0822               	movf	DelayTimejudge@value,w
  6286  137D  3A15               	xorlw	21
  6287  137E  1D03               	skipz
  6288  137F  2B82               	goto	l7560
  6289                           
  6290                           ;DelayOff_B1.c: 123: {
  6291                           ;DelayOff_B1.c: 124: i=15;
  6292  1380  300F               	movlw	15
  6293  1381  2B93               	goto	L6
  6294  1382                     l7560:	
  6295                           ;DelayOff_B1.c: 125: }
  6296                           
  6297                           
  6298                           ;DelayOff_B1.c: 126: else if(value == 0x20)
  6299  1382  0822               	movf	DelayTimejudge@value,w
  6300  1383  3A20               	xorlw	32
  6301  1384  1D03               	skipz
  6302  1385  2B88               	goto	l7564
  6303                           
  6304                           ;DelayOff_B1.c: 127: {
  6305                           ;DelayOff_B1.c: 128: i=20;
  6306  1386  3014               	movlw	20
  6307  1387  2B93               	goto	L6
  6308  1388                     l7564:	
  6309                           ;DelayOff_B1.c: 129: }
  6310                           
  6311                           
  6312                           ;DelayOff_B1.c: 130: else if(value == 0x25)
  6313  1388  0822               	movf	DelayTimejudge@value,w
  6314  1389  3A25               	xorlw	37
  6315  138A  1D03               	skipz
  6316  138B  2B8E               	goto	l7568
  6317                           
  6318                           ;DelayOff_B1.c: 131: {
  6319                           ;DelayOff_B1.c: 132: i=25;
  6320  138C  3019               	movlw	25
  6321  138D  2B93               	goto	L6
  6322  138E                     l7568:	
  6323                           ;DelayOff_B1.c: 133: }
  6324                           
  6325                           
  6326                           ;DelayOff_B1.c: 134: else if(value == 0x30)
  6327  138E  0822               	movf	DelayTimejudge@value,w
  6328  138F  3A30               	xorlw	48
  6329  1390  1D03               	skipz
  6330  1391  2B96               	goto	l654
  6331                           
  6332                           ;DelayOff_B1.c: 135: {
  6333                           ;DelayOff_B1.c: 136: i=30;
  6334  1392  301E               	movlw	30
  6335  1393                     L6:	
  6336  1393  00A0               	movwf	??_DelayTimejudge
  6337  1394  0820               	movf	??_DelayTimejudge,w
  6338  1395  00A1               	movwf	DelayTimejudge@i
  6339  1396                     l654:	
  6340                           
  6341                           ;DelayOff_B1.c: 137: }
  6342                           ;DelayOff_B1.c: 138: return i;
  6343  1396  0821               	movf	DelayTimejudge@i,w
  6344  1397  0008               	return
  6345  1398                     __end_of_DelayTimejudge:	
  6346                           
  6347                           	psect	text20
  6348  14E1                     __ptext20:	
  6349 ;; *************** function _setRFSW_AdjControl *****************
  6350 ;; Defined at:
  6351 ;;		line 399 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  sw              1    wreg     unsigned char 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  sw              1   70[BANK0 ] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;		None               void
  6358 ;; Registers used:
  6359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;Total ram usage:        3 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:    9
  6372 ;; This function calls:
  6373 ;;		_RfSWPointSelect
  6374 ;;		_setRF_DimmerValue
  6375 ;;		_setTxData
  6376 ;; This function is called by:
  6377 ;;		_setControl_Lights_Table
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           
  6382                           ;psect for function _setRFSW_AdjControl
  6383  14E1                     _setRFSW_AdjControl:	
  6384                           
  6385                           ;incstack = 0
  6386                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6387                           ;setRFSW_AdjControl@sw stored from wreg
  6388  14E1  0020               	movlb	0	; select bank0
  6389  14E2  00E6               	movwf	setRFSW_AdjControl@sw
  6390                           
  6391                           ;RF_Control_B1.c: 401: RfSWPointSelect(sw);
  6392  14E3  0866               	movf	setRFSW_AdjControl@sw,w
  6393  14E4  3190  20A3  3194   	fcall	_RfSWPointSelect
  6394                           
  6395                           ;RF_Control_B1.c: 402: if(RFSW->Status)
  6396  14E7  0021               	movlb	1	; select bank1
  6397  14E8  0839               	movf	_RFSW^(0+128),w
  6398  14E9  0086               	movwf	6
  6399  14EA  0187               	clrf	7
  6400  14EB  1C01               	btfss	1,0
  6401  14EC  2CF9               	goto	l7892
  6402                           
  6403                           ;RF_Control_B1.c: 403: {
  6404                           ;RF_Control_B1.c: 404: Memory->Modify=1;
  6405  14ED  087A               	movf	_Memory,w
  6406  14EE  3E22               	addlw	34
  6407  14EF  0086               	movwf	6
  6408  14F0  3001               	movlw	1	; select bank2/3
  6409  14F1  0087               	movwf	7
  6410  14F2  1401               	bsf	1,0
  6411                           
  6412                           ;RF_Control_B1.c: 405: setRF_DimmerValue(sw);
  6413  14F3  0020               	movlb	0	; select bank0
  6414  14F4  0866               	movf	setRFSW_AdjControl@sw,w
  6415  14F5  3187  27CA  3194   	fcall	_setRF_DimmerValue
  6416                           
  6417                           ;RF_Control_B1.c: 406: }
  6418  14F8  2D0B               	goto	l2363
  6419  14F9                     l7892:	
  6420                           
  6421                           ;RF_Control_B1.c: 407: else
  6422                           ;RF_Control_B1.c: 408: {
  6423                           ;RF_Control_B1.c: 409: Product->Data[9]=Product->Data[20+sw];
  6424  14F9  0020               	movlb	0	; select bank0
  6425  14FA  0866               	movf	setRFSW_AdjControl@sw,w
  6426  14FB  3E14               	addlw	20
  6427  14FC  076E               	addwf	_Product,w
  6428  14FD  00E4               	movwf	??_setRFSW_AdjControl
  6429  14FE  0864               	movf	??_setRFSW_AdjControl,w
  6430  14FF  0086               	movwf	6
  6431  1500  3001               	movlw	1	; select bank2/3
  6432  1501  0087               	movwf	7
  6433  1502  0801               	movf	1,w
  6434  1503  00E5               	movwf	??_setRFSW_AdjControl+1
  6435  1504  086E               	movf	_Product,w
  6436  1505  3E09               	addlw	9
  6437  1506  0086               	movwf	6
  6438  1507  3001               	movlw	1	; select bank2/3
  6439  1508  0087               	movwf	7
  6440  1509  0865               	movf	??_setRFSW_AdjControl+1,w
  6441  150A  0081               	movwf	1
  6442  150B                     l2363:	
  6443                           
  6444                           ;RF_Control_B1.c: 410: }
  6445                           ;RF_Control_B1.c: 411: Product->Data[17]=Product->Data[26+sw];
  6446  150B  0020               	movlb	0	; select bank0
  6447  150C  0866               	movf	setRFSW_AdjControl@sw,w
  6448  150D  3E1A               	addlw	26
  6449  150E  076E               	addwf	_Product,w
  6450  150F  00E4               	movwf	??_setRFSW_AdjControl
  6451  1510  0864               	movf	??_setRFSW_AdjControl,w
  6452  1511  0086               	movwf	6
  6453  1512  3001               	movlw	1	; select bank2/3
  6454  1513  0087               	movwf	7
  6455  1514  0801               	movf	1,w
  6456  1515  00E5               	movwf	??_setRFSW_AdjControl+1
  6457  1516  086E               	movf	_Product,w
  6458  1517  3E11               	addlw	17
  6459  1518  0086               	movwf	6
  6460  1519  3001               	movlw	1	; select bank2/3
  6461  151A  0087               	movwf	7
  6462  151B  0865               	movf	??_setRFSW_AdjControl+1,w
  6463  151C  0081               	movwf	1
  6464                           
  6465                           ;RF_Control_B1.c: 412: setTxData(1);
  6466  151D  3001               	movlw	1
  6467  151E  3194  2467         	fcall	_setTxData
  6468  1520  0008               	return
  6469  1521                     __end_of_setRFSW_AdjControl:	
  6470                           
  6471                           	psect	text21
  6472  07CA                     __ptext21:	
  6473 ;; *************** function _setRF_DimmerValue *****************
  6474 ;; Defined at:
  6475 ;;		line 423 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  lights          1    wreg     unsigned char 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  lights          1   67[BANK0 ] unsigned char 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;		None               void
  6482 ;; Registers used:
  6483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;Total ram usage:        3 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    8
  6496 ;; This function calls:
  6497 ;;		_setDimmerLights_AdjRF
  6498 ;; This function is called by:
  6499 ;;		_setRFSW_AdjControl
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function _setRF_DimmerValue
  6505  07CA                     _setRF_DimmerValue:	
  6506                           
  6507                           ;incstack = 0
  6508                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6509                           ;setRF_DimmerValue@lights stored from wreg
  6510  07CA  0020               	movlb	0	; select bank0
  6511  07CB  00E3               	movwf	setRF_DimmerValue@lights
  6512                           
  6513                           ;RF_Control_B1.c: 425: if(RF_Data[9] > 0x64)
  6514  07CC  3065               	movlw	101
  6515  07CD  0021               	movlb	1	; select bank1
  6516  07CE  0229               	subwf	(_RF_Data^(0+128)+9),w
  6517  07CF  1C03               	skipc
  6518  07D0  2FD7               	goto	l7774
  6519                           
  6520                           ;RF_Control_B1.c: 426: {
  6521                           ;RF_Control_B1.c: 427: RF_Data[9]=0x64;
  6522  07D1  3064               	movlw	100
  6523  07D2  0020               	movlb	0	; select bank0
  6524  07D3  00E1               	movwf	??_setRF_DimmerValue
  6525  07D4  0861               	movf	??_setRF_DimmerValue,w
  6526  07D5  0021               	movlb	1	; select bank1
  6527  07D6  00A9               	movwf	(_RF_Data^(0+128)+9)
  6528  07D7                     l7774:	
  6529                           
  6530                           ;RF_Control_B1.c: 428: }
  6531                           ;RF_Control_B1.c: 429: Product->Data[9]=RF_Data[9];
  6532  07D7  0829               	movf	(_RF_Data^(0+128)+9),w
  6533  07D8  0020               	movlb	0	; select bank0
  6534  07D9  00E1               	movwf	??_setRF_DimmerValue
  6535  07DA  086E               	movf	_Product,w
  6536  07DB  3E09               	addlw	9
  6537  07DC  0086               	movwf	6
  6538  07DD  3001               	movlw	1	; select bank2/3
  6539  07DE  0087               	movwf	7
  6540  07DF  0861               	movf	??_setRF_DimmerValue,w
  6541  07E0  0081               	movwf	1
  6542                           
  6543                           ;RF_Control_B1.c: 430: Product->Data[11]=lights;
  6544  07E1  0863               	movf	setRF_DimmerValue@lights,w
  6545  07E2  00E1               	movwf	??_setRF_DimmerValue
  6546  07E3  086E               	movf	_Product,w
  6547  07E4  3E0B               	addlw	11
  6548  07E5  0086               	movwf	6
  6549  07E6  3001               	movlw	1	; select bank2/3
  6550  07E7  0087               	movwf	7
  6551  07E8  0861               	movf	??_setRF_DimmerValue,w
  6552  07E9  0081               	movwf	1
  6553                           
  6554                           ;RF_Control_B1.c: 431: Product->Data[(20+lights)]=Product->Data[9];
  6555  07EA  086E               	movf	_Product,w
  6556  07EB  3E09               	addlw	9
  6557  07EC  0086               	movwf	6
  6558  07ED  3001               	movlw	1	; select bank2/3
  6559  07EE  0087               	movwf	7
  6560  07EF  0801               	movf	1,w
  6561  07F0  00E1               	movwf	??_setRF_DimmerValue
  6562  07F1  0863               	movf	setRF_DimmerValue@lights,w
  6563  07F2  3E14               	addlw	20
  6564  07F3  076E               	addwf	_Product,w
  6565  07F4  00E2               	movwf	??_setRF_DimmerValue+1
  6566  07F5  0862               	movf	??_setRF_DimmerValue+1,w
  6567  07F6  0086               	movwf	6
  6568  07F7  3001               	movlw	1	; select bank2/3
  6569  07F8  0087               	movwf	7
  6570  07F9  0861               	movf	??_setRF_DimmerValue,w
  6571  07FA  0081               	movwf	1
  6572                           
  6573                           ;RF_Control_B1.c: 432: setDimmerLights_AdjRF(lights);
  6574  07FB  0863               	movf	setRF_DimmerValue@lights,w
  6575  07FC  3192  2280         	fcall	_setDimmerLights_AdjRF
  6576  07FE  0008               	return
  6577  07FF                     __end_of_setRF_DimmerValue:	
  6578                           
  6579                           	psect	text22
  6580  1280                     __ptext22:	
  6581 ;; *************** function _setDimmerLights_AdjRF *****************
  6582 ;; Defined at:
  6583 ;;		line 421 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  lights          1    wreg     unsigned char 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  lights          1   64[BANK0 ] unsigned char 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;		None               void
  6590 ;; Registers used:
  6591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;Total ram usage:        2 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    7
  6604 ;; This function calls:
  6605 ;;		_DimmerLightsPointSelect
  6606 ;;		_getPercentValue
  6607 ;; This function is called by:
  6608 ;;		_setRF_DimmerValue
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function _setDimmerLights_AdjRF
  6614  1280                     _setDimmerLights_AdjRF:	
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6618                           ;setDimmerLights_AdjRF@lights stored from wreg
  6619  1280  0020               	movlb	0	; select bank0
  6620  1281  00E0               	movwf	setDimmerLights_AdjRF@lights
  6621                           
  6622                           ;Dimmer_B1.c: 423: DimmerLightsPointSelect(lights);
  6623  1282  0860               	movf	setDimmerLights_AdjRF@lights,w
  6624  1283  319F  27ED  3192   	fcall	_DimmerLightsPointSelect
  6625                           
  6626                           ;Dimmer_B1.c: 424: DimmerLights->AdjRF=1;
  6627  1286  0020               	movlb	0	; select bank0
  6628  1287  086B               	movf	_DimmerLights,w
  6629  1288  0086               	movwf	6
  6630  1289  3001               	movlw	1	; select bank2/3
  6631  128A  0087               	movwf	7
  6632  128B  1501               	bsf	1,2
  6633                           
  6634                           ;Dimmer_B1.c: 425: DimmerLights->Signal=1;
  6635  128C  086B               	movf	_DimmerLights,w
  6636  128D  0086               	movwf	6
  6637  128E  3001               	movlw	1	; select bank2/3
  6638  128F  0087               	movwf	7
  6639  1290  1481               	bsf	1,1
  6640                           
  6641                           ;Dimmer_B1.c: 426: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  6642  1291  086E               	movf	_Product,w
  6643  1292  3E09               	addlw	9
  6644  1293  0086               	movwf	6
  6645  1294  3001               	movlw	1	; select bank2/3
  6646  1295  0087               	movwf	7
  6647  1296  0801               	movf	1,w
  6648  1297  3188  2070         	fcall	_getPercentValue
  6649  1299  0020               	movlb	0	; select bank0
  6650  129A  00DF               	movwf	??_setDimmerLights_AdjRF
  6651  129B  086B               	movf	_DimmerLights,w
  6652  129C  3E05               	addlw	5
  6653  129D  0086               	movwf	6
  6654  129E  3001               	movlw	1	; select bank2/3
  6655  129F  0087               	movwf	7
  6656  12A0  085F               	movf	??_setDimmerLights_AdjRF,w
  6657  12A1  0081               	movwf	1
  6658  12A2  0008               	return
  6659  12A3                     __end_of_setDimmerLights_AdjRF:	
  6660                           
  6661                           	psect	text23
  6662  15E9                     __ptext23:	
  6663 ;; *************** function _CC2500_TxData *****************
  6664 ;; Defined at:
  6665 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;		None
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  loop_e          1    5[BANK0 ] unsigned char 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;		None               void
  6672 ;; Registers used:
  6673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;Total ram usage:        2 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    6
  6686 ;; This function calls:
  6687 ;;		_CC2500_WriteByte
  6688 ;;		_CC2500_WriteCommand
  6689 ;; This function is called by:
  6690 ;;		_setRF_Main
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           
  6695                           ;psect for function _CC2500_TxData
  6696  15E9                     _CC2500_TxData:	
  6697                           
  6698                           ;CC2500_B1.c: 32: unsigned char loop_e;
  6699                           ;CC2500_B1.c: 34: RC4=0;
  6700                           
  6701                           ;incstack = 0
  6702                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6703  15E9  0020               	movlb	0	; select bank0
  6704  15EA  120E               	bcf	14,4	;volatile
  6705                           
  6706                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  6707  15EB  307F               	movlw	127
  6708  15EC  00A4               	movwf	??_CC2500_TxData
  6709  15ED  0824               	movf	??_CC2500_TxData,w
  6710  15EE  0021               	movlb	1	; select bank1
  6711  15EF  00BC               	movwf	_SPI0Buffer^(0+128)
  6712  15F0                     l283:	
  6713                           ;CC2500_B1.c: 36: while(RC2==1);
  6714                           
  6715  15F0  0020               	movlb	0	; select bank0
  6716  15F1  190E               	btfsc	14,2	;volatile
  6717  15F2  2DF0               	goto	l283
  6718                           
  6719                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  6720  15F3  3190  20D0  3195   	fcall	_CC2500_WriteByte
  6721                           
  6722                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  6723  15F6  0021               	movlb	1	; select bank1
  6724  15F7  083D               	movf	_Tx_Length^(0+128),w
  6725  15F8  0020               	movlb	0	; select bank0
  6726  15F9  00A4               	movwf	??_CC2500_TxData
  6727  15FA  0824               	movf	??_CC2500_TxData,w
  6728  15FB  0021               	movlb	1	; select bank1
  6729  15FC  00BC               	movwf	_SPI0Buffer^(0+128)
  6730                           
  6731                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  6732  15FD  3190  20D0  3195   	fcall	_CC2500_WriteByte
  6733                           
  6734                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  6735  1600  0020               	movlb	0	; select bank0
  6736  1601  01A5               	clrf	CC2500_TxData@loop_e
  6737  1602                     l8016:	
  6738  1602  0021               	movlb	1	; select bank1
  6739  1603  083D               	movf	_Tx_Length^(0+128),w
  6740  1604  0020               	movlb	0	; select bank0
  6741  1605  0225               	subwf	CC2500_TxData@loop_e,w
  6742  1606  1803               	btfsc	3,0
  6743  1607  2E1A               	goto	l288
  6744                           
  6745                           ;CC2500_B1.c: 41: {
  6746                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  6747  1608  0825               	movf	CC2500_TxData@loop_e,w
  6748  1609  3EA0               	addlw	_RF_Data& (0+255)
  6749  160A  0086               	movwf	6
  6750  160B  0187               	clrf	7
  6751  160C  0801               	movf	1,w
  6752  160D  00A4               	movwf	??_CC2500_TxData
  6753  160E  0824               	movf	??_CC2500_TxData,w
  6754  160F  0021               	movlb	1	; select bank1
  6755  1610  00BC               	movwf	_SPI0Buffer^(0+128)
  6756                           
  6757                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  6758  1611  3190  20D0  3195   	fcall	_CC2500_WriteByte
  6759  1614  3001               	movlw	1
  6760  1615  0020               	movlb	0	; select bank0
  6761  1616  00A4               	movwf	??_CC2500_TxData
  6762  1617  0824               	movf	??_CC2500_TxData,w
  6763  1618  07A5               	addwf	CC2500_TxData@loop_e,f
  6764  1619  2E02               	goto	l8016
  6765  161A                     l288:	
  6766                           
  6767                           ;CC2500_B1.c: 44: }
  6768                           ;CC2500_B1.c: 45: RC4=1;
  6769  161A  160E               	bsf	14,4	;volatile
  6770                           
  6771                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  6772  161B  3035               	movlw	53
  6773  161C  319F  277B  3195   	fcall	_CC2500_WriteCommand
  6774  161F                     l289:	
  6775                           ;CC2500_B1.c: 47: while(RB0==0);
  6776                           
  6777  161F  0020               	movlb	0	; select bank0
  6778  1620  1C0D               	btfss	13,0	;volatile
  6779  1621  2E1F               	goto	l289
  6780  1622                     l292:	
  6781                           ;CC2500_B1.c: 48: while(RB0==1);
  6782                           
  6783  1622  180D               	btfsc	13,0	;volatile
  6784  1623  2E22               	goto	l292
  6785                           
  6786                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  6787  1624  3036               	movlw	54
  6788  1625  319F  277B  3195   	fcall	_CC2500_WriteCommand
  6789                           
  6790                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  6791  1628  303B               	movlw	59
  6792  1629  319F  277B         	fcall	_CC2500_WriteCommand
  6793                           
  6794                           ;CC2500_B1.c: 51: Transceive_OK=1;
  6795  162B  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  6796  162C  0008               	return
  6797  162D                     __end_of_CC2500_TxData:	
  6798                           
  6799                           	psect	text24
  6800  0987                     __ptext24:	
  6801 ;; *************** function _CC2500_RxData *****************
  6802 ;; Defined at:
  6803 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  loop_f          1    5[BANK0 ] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;		None               void
  6810 ;; Registers used:
  6811 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;Total ram usage:        2 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    6
  6824 ;; This function calls:
  6825 ;;		_CC2500_ReadByte
  6826 ;;		_CC2500_ReadStatus
  6827 ;;		_CC2500_WriteByte
  6828 ;;		_CC2500_WriteCommand
  6829 ;;		_setRF_RxStatus
  6830 ;; This function is called by:
  6831 ;;		_setRF_Main
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           
  6836                           ;psect for function _CC2500_RxData
  6837  0987                     _CC2500_RxData:	
  6838                           
  6839                           ;CC2500_B1.c: 58: unsigned char loop_f;
  6840                           ;CC2500_B1.c: 62: if(RB0 == 1)
  6841                           
  6842                           ;incstack = 0
  6843                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6844  0987  0020               	movlb	0	; select bank0
  6845  0988  180D               	btfsc	13,0	;volatile
  6846  0989                     l299:	
  6847                           ;CC2500_B1.c: 63: {
  6848                           ;CC2500_B1.c: 64: while(RB0 == 1);
  6849                           
  6850  0989  180D               	btfsc	13,0	;volatile
  6851  098A  2989               	goto	l299
  6852                           
  6853                           ;CC2500_B1.c: 65: }
  6854                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  6855  098B  303B               	movlw	59
  6856  098C  3191  2168  3189   	fcall	_CC2500_ReadStatus
  6857                           
  6858                           ;CC2500_B1.c: 67: if(s_data != 0)
  6859  098F  0021               	movlb	1	; select bank1
  6860  0990  0840               	movf	_s_data^(0+128),w
  6861  0991  1903               	btfsc	3,2
  6862  0992  29DD               	goto	l8062
  6863                           
  6864                           ;CC2500_B1.c: 69: {
  6865                           ;CC2500_B1.c: 70: RC4=0;
  6866  0993  0020               	movlb	0	; select bank0
  6867  0994  120E               	bcf	14,4	;volatile
  6868                           
  6869                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  6870  0995  30FF               	movlw	255
  6871  0996  00A4               	movwf	??_CC2500_RxData
  6872  0997  0824               	movf	??_CC2500_RxData,w
  6873  0998  0021               	movlb	1	; select bank1
  6874  0999  00BC               	movwf	_SPI0Buffer^(0+128)
  6875  099A                     l303:	
  6876                           ;CC2500_B1.c: 72: while(RC2==1);
  6877                           
  6878  099A  0020               	movlb	0	; select bank0
  6879  099B  190E               	btfsc	14,2	;volatile
  6880  099C  299A               	goto	l303
  6881                           
  6882                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  6883  099D  3190  20D0  3189   	fcall	_CC2500_WriteByte
  6884                           
  6885                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  6886  09A0  3191  21A0  3189   	fcall	_CC2500_ReadByte
  6887                           
  6888                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  6889  09A3  0021               	movlb	1	; select bank1
  6890  09A4  083C               	movf	_SPI0Buffer^(0+128),w
  6891  09A5  0020               	movlb	0	; select bank0
  6892  09A6  00A4               	movwf	??_CC2500_RxData
  6893  09A7  0824               	movf	??_CC2500_RxData,w
  6894  09A8  0021               	movlb	1	; select bank1
  6895  09A9  00BB               	movwf	_Rx_Length^(0+128)
  6896                           
  6897                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  6898  09AA  0020               	movlb	0	; select bank0
  6899  09AB  01A5               	clrf	CC2500_RxData@loop_f
  6900  09AC                     l8048:	
  6901  09AC  0021               	movlb	1	; select bank1
  6902  09AD  083B               	movf	_Rx_Length^(0+128),w
  6903  09AE  0020               	movlb	0	; select bank0
  6904  09AF  0225               	subwf	CC2500_RxData@loop_f,w
  6905  09B0  1803               	btfsc	3,0
  6906  09B1  29C4               	goto	l8050
  6907                           
  6908                           ;CC2500_B1.c: 78: {
  6909                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  6910  09B2  3191  21A0  3189   	fcall	_CC2500_ReadByte
  6911                           
  6912                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  6913  09B5  0021               	movlb	1	; select bank1
  6914  09B6  083C               	movf	_SPI0Buffer^(0+128),w
  6915  09B7  0020               	movlb	0	; select bank0
  6916  09B8  00A4               	movwf	??_CC2500_RxData
  6917  09B9  0825               	movf	CC2500_RxData@loop_f,w
  6918  09BA  3EA0               	addlw	_RF_Data& (0+255)
  6919  09BB  0086               	movwf	6
  6920  09BC  0187               	clrf	7
  6921  09BD  0824               	movf	??_CC2500_RxData,w
  6922  09BE  0081               	movwf	1
  6923  09BF  3001               	movlw	1
  6924  09C0  00A4               	movwf	??_CC2500_RxData
  6925  09C1  0824               	movf	??_CC2500_RxData,w
  6926  09C2  07A5               	addwf	CC2500_RxData@loop_f,f
  6927  09C3  29AC               	goto	l8048
  6928  09C4                     l8050:	
  6929                           
  6930                           ;CC2500_B1.c: 81: }
  6931                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  6932  09C4  3191  21A0  3189   	fcall	_CC2500_ReadByte
  6933                           
  6934                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  6935  09C7  0021               	movlb	1	; select bank1
  6936  09C8  083C               	movf	_SPI0Buffer^(0+128),w
  6937  09C9  0020               	movlb	0	; select bank0
  6938  09CA  00A4               	movwf	??_CC2500_RxData
  6939  09CB  0824               	movf	??_CC2500_RxData,w
  6940  09CC  0021               	movlb	1	; select bank1
  6941  09CD  00BA               	movwf	_RSSI^(0+128)
  6942                           
  6943                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  6944  09CE  3191  21A0  3189   	fcall	_CC2500_ReadByte
  6945                           
  6946                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  6947  09D1  0021               	movlb	1	; select bank1
  6948  09D2  083C               	movf	_SPI0Buffer^(0+128),w
  6949  09D3  0020               	movlb	0	; select bank0
  6950  09D4  00A4               	movwf	??_CC2500_RxData
  6951  09D5  0824               	movf	??_CC2500_RxData,w
  6952  09D6  0021               	movlb	1	; select bank1
  6953  09D7  00B7               	movwf	_CRC^(0+128)
  6954                           
  6955                           ;CC2500_B1.c: 86: RC4=1;
  6956  09D8  0020               	movlb	0	; select bank0
  6957  09D9  160E               	bsf	14,4	;volatile
  6958                           
  6959                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  6960  09DA  0021               	movlb	1	; select bank1
  6961  09DB  1BB7               	btfsc	_CRC^(0+128),7
  6962                           
  6963                           ;CC2500_B1.c: 88: Receive_OK=1;
  6964  09DC  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  6965  09DD                     l8062:	
  6966                           
  6967                           ;CC2500_B1.c: 89: }
  6968                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  6969  09DD  3036               	movlw	54
  6970  09DE  319F  277B  3189   	fcall	_CC2500_WriteCommand
  6971                           
  6972                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  6973  09E1  303A               	movlw	58
  6974  09E2  319F  277B  3189   	fcall	_CC2500_WriteCommand
  6975                           
  6976                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  6977  09E5  0020               	movlb	0	; select bank0
  6978  09E6  01A2               	clrf	setRF_RxStatus@command
  6979  09E7  3001               	movlw	1
  6980  09E8  319F  2732         	fcall	_setRF_RxStatus
  6981  09EA  0008               	return
  6982  09EB                     __end_of_CC2500_RxData:	
  6983                           
  6984                           	psect	text25
  6985  1F32                     __ptext25:	
  6986 ;; *************** function _setRF_RxStatus *****************
  6987 ;; Defined at:
  6988 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  rf              1    wreg     unsigned char 
  6991 ;;  command         1    2[BANK0 ] unsigned char 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  rf              1    3[BANK0 ] unsigned char 
  6994 ;; Return value:  Size  Location     Type
  6995 ;;		None               void
  6996 ;; Registers used:
  6997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7003 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;Total ram usage:        2 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:    5
  7010 ;; This function calls:
  7011 ;;		_RfPointSelect
  7012 ;; This function is called by:
  7013 ;;		_CC2500_RxData
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           
  7018                           ;psect for function _setRF_RxStatus
  7019  1F32                     _setRF_RxStatus:	
  7020                           
  7021                           ;incstack = 0
  7022                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7023                           ;setRF_RxStatus@rf stored from wreg
  7024  1F32  0020               	movlb	0	; select bank0
  7025  1F33  00A3               	movwf	setRF_RxStatus@rf
  7026                           
  7027                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  7028  1F34  0823               	movf	setRF_RxStatus@rf,w
  7029  1F35  319E  2694         	fcall	_RfPointSelect
  7030                           
  7031                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  7032  1F37  0879               	movf	_RF,w
  7033  1F38  0086               	movwf	6
  7034  1F39  0187               	clrf	7
  7035  1F3A  0020               	movlb	0	; select bank0
  7036  1F3B  0822               	movf	setRF_RxStatus@command,w
  7037  1F3C  1181               	bcf	1,3
  7038  1F3D  1D03               	skipz
  7039  1F3E  1581               	bsf	1,3
  7040  1F3F  0008               	return
  7041  1F40                     __end_of_setRF_RxStatus:	
  7042                           
  7043                           	psect	text26
  7044  1168                     __ptext26:	
  7045 ;; *************** function _CC2500_ReadStatus *****************
  7046 ;; Defined at:
  7047 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  status_addr     1    wreg     unsigned char 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  status_addr     1    3[BANK0 ] unsigned char 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;		None               void
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0, pclath, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;Total ram usage:        2 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:    5
  7068 ;; This function calls:
  7069 ;;		_CC2500_ReadByte
  7070 ;;		_CC2500_WriteByte
  7071 ;; This function is called by:
  7072 ;;		_CC2500_RxData
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           
  7077                           ;psect for function _CC2500_ReadStatus
  7078  1168                     _CC2500_ReadStatus:	
  7079                           
  7080                           ;incstack = 0
  7081                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  7082                           ;CC2500_ReadStatus@status_addr stored from wreg
  7083  1168  0020               	movlb	0	; select bank0
  7084  1169  00A3               	movwf	CC2500_ReadStatus@status_addr
  7085                           
  7086                           ;CC2500_B1.c: 269: RC4=0;
  7087  116A  120E               	bcf	14,4	;volatile
  7088                           
  7089                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  7090  116B  0823               	movf	CC2500_ReadStatus@status_addr,w
  7091  116C  3EC0               	addlw	192
  7092  116D  00A2               	movwf	??_CC2500_ReadStatus
  7093  116E  0822               	movf	??_CC2500_ReadStatus,w
  7094  116F  0021               	movlb	1	; select bank1
  7095  1170  00BC               	movwf	_SPI0Buffer^(0+128)
  7096  1171                     l379:	
  7097                           ;CC2500_B1.c: 272: while(RC2==1);
  7098                           
  7099  1171  0020               	movlb	0	; select bank0
  7100  1172  190E               	btfsc	14,2	;volatile
  7101  1173  2971               	goto	l379
  7102                           
  7103                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  7104  1174  3190  20D0  3191   	fcall	_CC2500_WriteByte
  7105                           
  7106                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  7107  1177  3191  21A0         	fcall	_CC2500_ReadByte
  7108                           
  7109                           ;CC2500_B1.c: 276: RC4=1;
  7110  1179  0020               	movlb	0	; select bank0
  7111  117A  160E               	bsf	14,4	;volatile
  7112                           
  7113                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  7114  117B  0021               	movlb	1	; select bank1
  7115  117C  083C               	movf	_SPI0Buffer^(0+128),w
  7116  117D  0020               	movlb	0	; select bank0
  7117  117E  00A2               	movwf	??_CC2500_ReadStatus
  7118  117F  0822               	movf	??_CC2500_ReadStatus,w
  7119  1180  0021               	movlb	1	; select bank1
  7120  1181  00C0               	movwf	_s_data^(0+128)
  7121  1182  0008               	return
  7122  1183                     __end_of_CC2500_ReadStatus:	
  7123                           
  7124                           	psect	text27
  7125  11A0                     __ptext27:	
  7126 ;; *************** function _CC2500_ReadByte *****************
  7127 ;; Defined at:
  7128 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;		None
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  loop_b          1    1[BANK0 ] unsigned char 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;		None               void
  7135 ;; Registers used:
  7136 ;;		wreg, status,2, status,0
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;Total ram usage:        2 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    4
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_CC2500_RxData
  7153 ;;		_CC2500_ReadStatus
  7154 ;;		_CC2500_ReadREG
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           
  7159                           ;psect for function _CC2500_ReadByte
  7160  11A0                     _CC2500_ReadByte:	
  7161                           
  7162                           ;CC2500_B1.c: 212: unsigned char loop_b;
  7163                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  7164                           
  7165                           ;incstack = 0
  7166                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  7167  11A0  0020               	movlb	0	; select bank0
  7168  11A1  01A1               	clrf	CC2500_ReadByte@loop_b
  7169  11A2                     L7:	
  7170  11A2  3008               	movlw	8
  7171  11A3  0221               	subwf	CC2500_ReadByte@loop_b,w
  7172  11A4  1803               	btfsc	3,0
  7173  11A5  0008               	return
  7174                           
  7175                           ;CC2500_B1.c: 214: {
  7176                           ;CC2500_B1.c: 215: RC1=1;
  7177  11A6  148E               	bsf	14,1	;volatile
  7178                           
  7179                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  7180  11A7  1003               	clrc
  7181  11A8  0021               	movlb	1	; select bank1
  7182  11A9  0DBC               	rlf	_SPI0Buffer^(0+128),f
  7183                           
  7184                           ;CC2500_B1.c: 217: if(RC2 == 1)
  7185  11AA  0020               	movlb	0	; select bank0
  7186  11AB  1D0E               	btfss	14,2	;volatile
  7187  11AC  29B0               	goto	l7810
  7188                           
  7189                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  7190  11AD  0021               	movlb	1	; select bank1
  7191  11AE  143C               	bsf	_SPI0Buffer^(0+128),0
  7192  11AF  29B6               	goto	l7812
  7193  11B0                     l7810:	
  7194                           
  7195                           ;CC2500_B1.c: 219: else
  7196                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  7197  11B0  30FE               	movlw	254
  7198  11B1  0020               	movlb	0	; select bank0
  7199  11B2  00A0               	movwf	??_CC2500_ReadByte
  7200  11B3  0820               	movf	??_CC2500_ReadByte,w
  7201  11B4  0021               	movlb	1	; select bank1
  7202  11B5  05BC               	andwf	_SPI0Buffer^(0+128),f
  7203  11B6                     l7812:	
  7204                           
  7205                           ;CC2500_B1.c: 221: RC1=0;
  7206  11B6  0020               	movlb	0	; select bank0
  7207  11B7  108E               	bcf	14,1	;volatile
  7208  11B8  3001               	movlw	1
  7209  11B9  00A0               	movwf	??_CC2500_ReadByte
  7210  11BA  0820               	movf	??_CC2500_ReadByte,w
  7211  11BB  07A1               	addwf	CC2500_ReadByte@loop_b,f
  7212  11BC  29A2               	goto	L7
  7213  11BD                     __end_of_CC2500_ReadByte:	
  7214                           
  7215                           	psect	text28
  7216  1E16                     __ptext28:	
  7217 ;; *************** function _RF_Initialization *****************
  7218 ;; Defined at:
  7219 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;		None
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;		None
  7224 ;; Return value:  Size  Location     Type
  7225 ;;		None               void
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0, pclath, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7237 ;;Total ram usage:        0 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    5
  7240 ;; This function calls:
  7241 ;;		_setRF_Initialization
  7242 ;; This function is called by:
  7243 ;;		_main
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           
  7248                           ;psect for function _RF_Initialization
  7249  1E16                     _RF_Initialization:	
  7250                           
  7251                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  7252                           
  7253                           ;incstack = 0
  7254                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7255  1E16  3001               	movlw	1
  7256  1E17  319E  263B         	fcall	_setRF_Initialization
  7257  1E19  0008               	return
  7258  1E1A                     __end_of_RF_Initialization:	
  7259                           
  7260                           	psect	text29
  7261  1E3B                     __ptext29:	
  7262 ;; *************** function _setRF_Initialization *****************
  7263 ;; Defined at:
  7264 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  rf              1    wreg     unsigned char 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  rf              1    0[COMMON] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;		None               void
  7271 ;; Registers used:
  7272 ;;		wreg
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;Total ram usage:        1 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    4
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_RF_Initialization
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           
  7293                           ;psect for function _setRF_Initialization
  7294  1E3B                     _setRF_Initialization:	
  7295                           
  7296                           ;RF_Control_B1.c: 54: Tx_Length=21;
  7297                           
  7298                           ;incstack = 0
  7299                           ; Regs used in _setRF_Initialization: [wreg]
  7300  1E3B  3015               	movlw	21
  7301  1E3C  0020               	movlb	0	; select bank0
  7302  1E3D  00A0               	movwf	??_setRF_Initialization
  7303  1E3E  0820               	movf	??_setRF_Initialization,w
  7304  1E3F  0021               	movlb	1	; select bank1
  7305  1E40  00BD               	movwf	_Tx_Length^(0+128)
  7306  1E41  0008               	return
  7307  1E42                     __end_of_setRF_Initialization:	
  7308                           
  7309                           	psect	text30
  7310  10B9                     __ptext30:	
  7311 ;; *************** function _Mcu_Initialization *****************
  7312 ;; Defined at:
  7313 ;;		line 11 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;		None
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;		None               void
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0, pclath, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;Total ram usage:        1 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    5
  7334 ;; This function calls:
  7335 ;;		_ADC_Set
  7336 ;;		_INT_Set
  7337 ;;		_IOC_Set
  7338 ;;		_IO_Set
  7339 ;;		_TMR0_Set
  7340 ;; This function is called by:
  7341 ;;		_main
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           
  7346                           ;psect for function _Mcu_Initialization
  7347  10B9                     _Mcu_Initialization:	
  7348                           
  7349                           ;MCU_16f1518_B1.c: 14: OSCCON=0x78; ;;
  7350                           
  7351                           ;incstack = 0
  7352                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7353  10B9  3078               	movlw	120
  7354  10BA  0021               	movlb	1	; select bank1
  7355  10BB  0099               	movwf	25	;volatile
  7356                           
  7357                           ;MCU_16f1518_B1.c: 16: IO_Set();
  7358  10BC  3191  211B  3190   	fcall	_IO_Set
  7359                           
  7360                           ;MCU_16f1518_B1.c: 18: TMR0_Set();
  7361  10BF  319F  270A  3190   	fcall	_TMR0_Set
  7362                           
  7363                           ;MCU_16f1518_B1.c: 20: ;;
  7364                           ;MCU_16f1518_B1.c: 22: ADC_Set();
  7365  10C2  319E  2634  3190   	fcall	_ADC_Set
  7366                           
  7367                           ;MCU_16f1518_B1.c: 26: INT_Set();
  7368  10C5  319E  261E  3190   	fcall	_INT_Set
  7369                           
  7370                           ;MCU_16f1518_B1.c: 28: IOC_Set();
  7371  10C8  319E  26FD         	fcall	_IOC_Set
  7372                           
  7373                           ;MCU_16f1518_B1.c: 30: ;;
  7374                           ;MCU_16f1518_B1.c: 32: ;;
  7375                           ;MCU_16f1518_B1.c: 34: Memory=&VarMemory;
  7376  10CA  30A0               	movlw	_VarMemory& (0+255)
  7377  10CB  0020               	movlb	0	; select bank0
  7378  10CC  00A1               	movwf	??_Mcu_Initialization
  7379  10CD  0821               	movf	??_Mcu_Initialization,w
  7380  10CE  00FA               	movwf	_Memory
  7381  10CF  0008               	return
  7382  10D0                     __end_of_Mcu_Initialization:	
  7383                           
  7384                           	psect	text31
  7385  1F0A                     __ptext31:	
  7386 ;; *************** function _TMR0_Set *****************
  7387 ;; Defined at:
  7388 ;;		line 73 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;		None               void
  7395 ;; Registers used:
  7396 ;;		wreg, status,2
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;Total ram usage:        1 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    4
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_Mcu_Initialization
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           
  7417                           ;psect for function _TMR0_Set
  7418  1F0A                     _TMR0_Set:	
  7419                           
  7420                           ;MCU_16f1518_B1.c: 75: Timer0=&VarTimer0;
  7421                           
  7422                           ;incstack = 0
  7423                           ; Regs used in _TMR0_Set: [wreg+status,2]
  7424  1F0A  30CA               	movlw	_VarTimer0& (0+255)
  7425  1F0B  0020               	movlb	0	; select bank0
  7426  1F0C  00A0               	movwf	??_TMR0_Set
  7427  1F0D  0820               	movf	??_TMR0_Set,w
  7428  1F0E  0021               	movlb	1	; select bank1
  7429  1F0F  00EE               	movwf	_Timer0^(0+128)
  7430                           
  7431                           ;MCU_16f1518_B1.c: 76: OPTION_REG=0x00;
  7432  1F10  0195               	clrf	21	;volatile
  7433                           
  7434                           ;MCU_16f1518_B1.c: 77: TMR0=(256-90);
  7435  1F11  30A6               	movlw	166
  7436  1F12  0020               	movlb	0	; select bank0
  7437  1F13  0095               	movwf	21	;volatile
  7438                           
  7439                           ;MCU_16f1518_B1.c: 78: TMR0IE=1;
  7440  1F14  168B               	bsf	11,5	;volatile
  7441                           
  7442                           ;MCU_16f1518_B1.c: 79: GIE=1;
  7443  1F15  178B               	bsf	11,7	;volatile
  7444  1F16  0008               	return
  7445  1F17                     __end_of_TMR0_Set:	
  7446                           
  7447                           	psect	text32
  7448  111B                     __ptext32:	
  7449 ;; *************** function _IO_Set *****************
  7450 ;; Defined at:
  7451 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;		None
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;		None               void
  7458 ;; Registers used:
  7459 ;;		wreg, status,2
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;Total ram usage:        0 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    4
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_Mcu_Initialization
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           
  7480                           ;psect for function _IO_Set
  7481  111B                     _IO_Set:	
  7482                           
  7483                           ;MCU_16f1518_B1.c: 39: TRISA=0b01110111;;
  7484                           
  7485                           ;incstack = 0
  7486                           ; Regs used in _IO_Set: [wreg+status,2]
  7487  111B  3077               	movlw	119
  7488  111C  0021               	movlb	1	; select bank1
  7489  111D  008C               	movwf	12	;volatile
  7490                           
  7491                           ;MCU_16f1518_B1.c: 40: TRISB=0b00000111;;
  7492  111E  3007               	movlw	7
  7493  111F  008D               	movwf	13	;volatile
  7494                           
  7495                           ;MCU_16f1518_B1.c: 41: TRISC=0b00001100;;
  7496  1120  300C               	movlw	12
  7497  1121  008E               	movwf	14	;volatile
  7498                           
  7499                           ;MCU_16f1518_B1.c: 42: LATA=0b00000000;;
  7500  1122  0022               	movlb	2	; select bank2
  7501  1123  018C               	clrf	12	;volatile
  7502                           
  7503                           ;MCU_16f1518_B1.c: 43: LATB=0b00000010;;
  7504  1124  3002               	movlw	2
  7505  1125  008D               	movwf	13	;volatile
  7506                           
  7507                           ;MCU_16f1518_B1.c: 44: LATC=0b00000000;;
  7508  1126  018E               	clrf	14	;volatile
  7509                           
  7510                           ;MCU_16f1518_B1.c: 45: ANSELA=0b00100010;;
  7511  1127  3022               	movlw	34
  7512  1128  0023               	movlb	3	; select bank3
  7513  1129  008C               	movwf	12	;volatile
  7514                           
  7515                           ;MCU_16f1518_B1.c: 46: ANSELB=0b00000000;;
  7516  112A  018D               	clrf	13	;volatile
  7517                           
  7518                           ;MCU_16f1518_B1.c: 47: ANSELC=0b00000000;;
  7519  112B  018E               	clrf	14	;volatile
  7520                           
  7521                           ;MCU_16f1518_B1.c: 48: PORTA=0b01110111;;
  7522  112C  3077               	movlw	119
  7523  112D  0020               	movlb	0	; select bank0
  7524  112E  008C               	movwf	12	;volatile
  7525                           
  7526                           ;MCU_16f1518_B1.c: 49: PORTB=0b00000111;;
  7527  112F  3007               	movlw	7
  7528  1130  008D               	movwf	13	;volatile
  7529                           
  7530                           ;MCU_16f1518_B1.c: 50: PORTC=0b00001100;;
  7531  1131  300C               	movlw	12
  7532  1132  008E               	movwf	14	;volatile
  7533  1133  0008               	return
  7534  1134                     __end_of_IO_Set:	
  7535                           
  7536                           	psect	text33
  7537  1EFD                     __ptext33:	
  7538 ;; *************** function _IOC_Set *****************
  7539 ;; Defined at:
  7540 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;		None
  7545 ;; Return value:  Size  Location     Type
  7546 ;;		None               void
  7547 ;; Registers used:
  7548 ;;		wreg, status,2
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;Total ram usage:        0 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    4
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		_Mcu_Initialization
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function _IOC_Set
  7570  1EFD                     _IOC_Set:	
  7571                           
  7572                           ;MCU_16f1518_B1.c: 248: WPUB2=0;
  7573                           
  7574                           ;incstack = 0
  7575                           ; Regs used in _IOC_Set: [wreg+status,2]
  7576  1EFD  0024               	movlb	4	; select bank4
  7577  1EFE  110D               	bcf	13,2	;volatile
  7578                           
  7579                           ;MCU_16f1518_B1.c: 250: IOCBP=0b00000100;
  7580  1EFF  3004               	movlw	4
  7581  1F00  0027               	movlb	7	; select bank7
  7582  1F01  0094               	movwf	20	;volatile
  7583                           
  7584                           ;MCU_16f1518_B1.c: 251: IOCBN=0b00000100;
  7585  1F02  3004               	movlw	4
  7586  1F03  0095               	movwf	21	;volatile
  7587                           
  7588                           ;MCU_16f1518_B1.c: 259: IOCBF=0b00000000;
  7589  1F04  0196               	clrf	22	;volatile
  7590                           
  7591                           ;MCU_16f1518_B1.c: 261: IOCIE=1;
  7592  1F05  158B               	bsf	11,3	;volatile
  7593                           
  7594                           ;MCU_16f1518_B1.c: 262: IOCIF=0;
  7595  1F06  100B               	bcf	11,0	;volatile
  7596                           
  7597                           ;MCU_16f1518_B1.c: 263: PEIE=1;
  7598  1F07  170B               	bsf	11,6	;volatile
  7599                           
  7600                           ;MCU_16f1518_B1.c: 264: GIE=1;
  7601  1F08  178B               	bsf	11,7	;volatile
  7602  1F09  0008               	return
  7603  1F0A                     __end_of_IOC_Set:	
  7604                           
  7605                           	psect	text34
  7606  1E1E                     __ptext34:	
  7607 ;; *************** function _INT_Set *****************
  7608 ;; Defined at:
  7609 ;;		line 217 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;		None
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;		None
  7614 ;; Return value:  Size  Location     Type
  7615 ;;		None               void
  7616 ;; Registers used:
  7617 ;;		None
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;Total ram usage:        0 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    4
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_Mcu_Initialization
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           
  7638                           ;psect for function _INT_Set
  7639  1E1E                     _INT_Set:	
  7640                           
  7641                           ;MCU_16f1518_B1.c: 219: WPUB0=0;
  7642                           
  7643                           ;incstack = 0
  7644                           ; Regs used in _INT_Set: []
  7645  1E1E  0024               	movlb	4	; select bank4
  7646  1E1F  100D               	bcf	13,0	;volatile
  7647                           
  7648                           ;MCU_16f1518_B1.c: 221: PEIE=1;
  7649  1E20  170B               	bsf	11,6	;volatile
  7650                           
  7651                           ;MCU_16f1518_B1.c: 222: GIE=1;
  7652  1E21  178B               	bsf	11,7	;volatile
  7653  1E22  0008               	return
  7654  1E23                     __end_of_INT_Set:	
  7655                           
  7656                           	psect	text35
  7657  1E34                     __ptext35:	
  7658 ;; *************** function _ADC_Set *****************
  7659 ;; Defined at:
  7660 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;		None
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;		None
  7665 ;; Return value:  Size  Location     Type
  7666 ;;		None               void
  7667 ;; Registers used:
  7668 ;;		wreg
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;Total ram usage:        0 bytes
  7679 ;; Hardware stack levels used:    1
  7680 ;; Hardware stack levels required when called:    4
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_Mcu_Initialization
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           
  7689                           ;psect for function _ADC_Set
  7690  1E34                     _ADC_Set:	
  7691                           
  7692                           ;MCU_16f1518_B1.c: 305: ADCON1=0xf2;
  7693                           
  7694                           ;incstack = 0
  7695                           ; Regs used in _ADC_Set: [wreg]
  7696  1E34  30F2               	movlw	242
  7697  1E35  0021               	movlb	1	; select bank1
  7698  1E36  009E               	movwf	30	;volatile
  7699                           
  7700                           ;MCU_16f1518_B1.c: 306: FVRCON=0xc0;
  7701  1E37  30C0               	movlw	192
  7702  1E38  0022               	movlb	2	; select bank2
  7703  1E39  0097               	movwf	23	;volatile
  7704  1E3A  0008               	return
  7705  1E3B                     __end_of_ADC_Set:	
  7706                           
  7707                           	psect	text36
  7708  0800                     __ptext36:	
  7709 ;; *************** function _MainT_Initialization *****************
  7710 ;; Defined at:
  7711 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;		None               void
  7718 ;; Registers used:
  7719 ;;		wreg, fsr1l, fsr1h
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7728 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;Total ram usage:        1 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:    4
  7732 ;; This function calls:
  7733 ;;		Nothing
  7734 ;; This function is called by:
  7735 ;;		_main
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           
  7740                           ;psect for function _MainT_Initialization
  7741  0800                     _MainT_Initialization:	
  7742                           
  7743                           ;main.c: 95: Product=&VarProduct;
  7744                           
  7745                           ;incstack = 0
  7746                           ; Regs used in _MainT_Initialization: [wregfsr1]
  7747  0800  30C5               	movlw	_VarProduct& (0+255)
  7748  0801  0020               	movlb	0	; select bank0
  7749  0802  00A0               	movwf	??_MainT_Initialization
  7750  0803  0820               	movf	??_MainT_Initialization,w
  7751  0804  00EE               	movwf	_Product
  7752                           
  7753                           ;main.c: 98: TMain=&VarTMain;
  7754  0805  3020               	movlw	_VarTMain& (0+255)
  7755  0806  00A0               	movwf	??_MainT_Initialization
  7756  0807  0820               	movf	??_MainT_Initialization,w
  7757  0808  00EF               	movwf	_TMain
  7758                           
  7759                           ;main.c: 99: TMain->FirstOpen=1;
  7760  0809  086F               	movf	_TMain,w
  7761  080A  0086               	movwf	6
  7762  080B  3001               	movlw	1	; select bank2/3
  7763  080C  0087               	movwf	7
  7764  080D  1681               	bsf	1,5
  7765                           
  7766                           ;main.c: 100: TMain->First=1;
  7767  080E  086F               	movf	_TMain,w
  7768  080F  3E03               	addlw	3
  7769  0810  0086               	movwf	6
  7770  0811  3001               	movlw	1	; select bank2/3
  7771  0812  0087               	movwf	7
  7772  0813  1481               	bsf	1,1
  7773  0814  0008               	return
  7774  0815                     __end_of_MainT_Initialization:	
  7775                           
  7776                           	psect	text37
  7777  0AC9                     __ptext37:	
  7778 ;; *************** function _MainT *****************
  7779 ;; Defined at:
  7780 ;;		line 103 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;		None               void
  7787 ;; Registers used:
  7788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;Total ram usage:        0 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:    8
  7801 ;; This function calls:
  7802 ;;		_setBuz
  7803 ;;		_setRF_Enable
  7804 ;;		_setSw_Enable
  7805 ;;		_setTxData
  7806 ;; This function is called by:
  7807 ;;		_main
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           
  7812                           ;psect for function _MainT
  7813  0AC9                     _MainT:	
  7814                           
  7815                           ;main.c: 106: if(!TMain->PowerON)
  7816                           
  7817                           ;incstack = 0
  7818                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7819  0AC9  0020               	movlb	0	; select bank0
  7820  0ACA  086F               	movf	_TMain,w
  7821  0ACB  0086               	movwf	6
  7822  0ACC  3001               	movlw	1	; select bank2/3
  7823  0ACD  0087               	movwf	7
  7824  0ACE  1801               	btfsc	1,0
  7825  0ACF  2B0B               	goto	l8898
  7826                           
  7827                           ;main.c: 107: {
  7828                           ;main.c: 108: TMain->PowerCount++;
  7829  0AD0  0A6F               	incf	_TMain,w
  7830  0AD1  0086               	movwf	6
  7831  0AD2  3001               	movlw	1	; select bank2/3
  7832  0AD3  0087               	movwf	7
  7833  0AD4  3001               	movlw	1
  7834  0AD5  0781               	addwf	1,f
  7835  0AD6  3141               	addfsr 1,1
  7836  0AD7  1803               	skipnc
  7837  0AD8  0A81               	incf	1,f
  7838                           
  7839                           ;main.c: 109: if(TMain->PowerCount == 150)
  7840  0AD9  0A6F               	incf	_TMain,w
  7841  0ADA  0086               	movwf	6
  7842  0ADB  3001               	movlw	1	; select bank2/3
  7843  0ADC  0087               	movwf	7
  7844  0ADD  3F40               	moviw [0]fsr1
  7845  0ADE  3A96               	xorlw	150
  7846  0ADF  1D03               	skipz
  7847  0AE0  2AE3               	goto	u9025
  7848  0AE1  3F41               	moviw [1]fsr1
  7849  0AE2  3A00               	xorlw	0
  7850  0AE3                     u9025:	
  7851  0AE3  1D03               	skipz
  7852  0AE4  0008               	return
  7853                           
  7854                           ;main.c: 110: {
  7855                           ;main.c: 111: TMain->PowerCount=0;
  7856  0AE5  0A6F               	incf	_TMain,w
  7857  0AE6  0086               	movwf	6
  7858  0AE7  3001               	movlw	1	; select bank2/3
  7859  0AE8  0087               	movwf	7
  7860  0AE9  3000               	movlw	0
  7861  0AEA  3FC0               	movwi [0]fsr1
  7862  0AEB  3FC1               	movwi [1]fsr1
  7863                           
  7864                           ;main.c: 112: TMain->PowerON=1;
  7865  0AEC  086F               	movf	_TMain,w
  7866  0AED  0086               	movwf	6
  7867  0AEE  3001               	movlw	1	; select bank2/3
  7868  0AEF  0087               	movwf	7
  7869  0AF0  1401               	bsf	1,0
  7870                           
  7871                           ;main.c: 115: ;;
  7872                           ;main.c: 119: ;;
  7873                           ;main.c: 125: setBuz(3,50);
  7874  0AF1  3032               	movlw	50
  7875  0AF2  00A6               	movwf	setBuz@time
  7876  0AF3  3000               	movlw	0
  7877  0AF4  00A7               	movwf	setBuz@time+1
  7878  0AF5  3003               	movlw	3
  7879  0AF6  318C  2425  318A   	fcall	_setBuz
  7880                           
  7881                           ;main.c: 126: TMain->SelfTest=1;
  7882  0AF9  0020               	movlb	0	; select bank0
  7883  0AFA  086F               	movf	_TMain,w
  7884  0AFB  3E03               	addlw	3
  7885  0AFC  0086               	movwf	6
  7886  0AFD  3001               	movlw	1	; select bank2/3
  7887  0AFE  0087               	movwf	7
  7888  0AFF  1401               	bsf	1,0
  7889                           
  7890                           ;main.c: 128: setSw_Enable(1);
  7891  0B00  3001               	movlw	1
  7892  0B01  3193  23F7  318A   	fcall	_setSw_Enable
  7893                           
  7894                           ;main.c: 131: setRF_Enable(1,1);
  7895  0B04  0020               	movlb	0	; select bank0
  7896  0B05  01A5               	clrf	setRF_Enable@command
  7897  0B06  0AA5               	incf	setRF_Enable@command,f
  7898  0B07  3001               	movlw	1
  7899  0B08  3192  22A3         	fcall	_setRF_Enable
  7900                           
  7901                           ;main.c: 135: }
  7902                           ;main.c: 136: }
  7903  0B0A  0008               	return
  7904  0B0B                     l8898:	
  7905                           
  7906                           ;main.c: 137: else
  7907                           ;main.c: 138: {
  7908                           ;main.c: 146: TMain->Count1++;
  7909  0B0B  0020               	movlb	0	; select bank0
  7910  0B0C  086F               	movf	_TMain,w
  7911  0B0D  3E06               	addlw	6
  7912  0B0E  0086               	movwf	6
  7913  0B0F  3001               	movlw	1	; select bank2/3
  7914  0B10  0087               	movwf	7
  7915  0B11  3001               	movlw	1
  7916  0B12  0781               	addwf	1,f
  7917  0B13  3141               	addfsr 1,1
  7918  0B14  1803               	skipnc
  7919  0B15  0A81               	incf	1,f
  7920                           
  7921                           ;main.c: 147: if(TMain->Count1 == 100)
  7922  0B16  086F               	movf	_TMain,w
  7923  0B17  3E06               	addlw	6
  7924  0B18  0086               	movwf	6
  7925  0B19  3001               	movlw	1	; select bank2/3
  7926  0B1A  0087               	movwf	7
  7927  0B1B  3F40               	moviw [0]fsr1
  7928  0B1C  3A64               	xorlw	100
  7929  0B1D  1D03               	skipz
  7930  0B1E  2B21               	goto	u9035
  7931  0B1F  3F41               	moviw [1]fsr1
  7932  0B20  3A00               	xorlw	0
  7933  0B21                     u9035:	
  7934  0B21  1D03               	skipz
  7935  0B22  0008               	return
  7936                           
  7937                           ;main.c: 148: {
  7938                           ;main.c: 149: TMain->Count1=0;
  7939  0B23  086F               	movf	_TMain,w
  7940  0B24  3E06               	addlw	6
  7941  0B25  0086               	movwf	6
  7942  0B26  3001               	movlw	1	; select bank2/3
  7943  0B27  0087               	movwf	7
  7944  0B28  3000               	movlw	0
  7945  0B29  3FC0               	movwi [0]fsr1
  7946  0B2A  3FC1               	movwi [1]fsr1
  7947                           
  7948                           ;main.c: 150: setTxData(1);
  7949  0B2B  3001               	movlw	1
  7950  0B2C  3194  2467  318A   	fcall	_setTxData
  7951                           
  7952                           ;main.c: 160: if(TMain->Flag)
  7953  0B2F  0020               	movlb	0	; select bank0
  7954  0B30  086F               	movf	_TMain,w
  7955  0B31  0086               	movwf	6
  7956  0B32  3001               	movlw	1	; select bank2/3
  7957  0B33  0087               	movwf	7
  7958  0B34  1981               	btfsc	1,3
  7959  0B35  0008               	return
  7960                           
  7961                           ;main.c: 170: else
  7962                           ;main.c: 171: {
  7963                           ;main.c: 172: TMain->Flag=1;
  7964                           
  7965                           ;main.c: 161: {
  7966                           ;main.c: 169: }
  7967  0B36  086F               	movf	_TMain,w
  7968  0B37  0086               	movwf	6
  7969  0B38  3001               	movlw	1	; select bank2/3
  7970  0B39  0087               	movwf	7
  7971  0B3A  1581               	bsf	1,3
  7972  0B3B  0008               	return
  7973  0B3C                     __end_of_MainT:	
  7974                           
  7975                           	psect	text38
  7976  13F7                     __ptext38:	
  7977 ;; *************** function _setSw_Enable *****************
  7978 ;; Defined at:
  7979 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  command         1    wreg     unsigned char 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  command         1    1[BANK0 ] unsigned char 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;		None               void
  7986 ;; Registers used:
  7987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;Total ram usage:        1 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    5
  8000 ;; This function calls:
  8001 ;;		_SwPointSelect
  8002 ;; This function is called by:
  8003 ;;		_MainT
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           
  8008                           ;psect for function _setSw_Enable
  8009  13F7                     _setSw_Enable:	
  8010                           
  8011                           ;incstack = 0
  8012                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8013                           ;setSw_Enable@command stored from wreg
  8014  13F7  0020               	movlb	0	; select bank0
  8015  13F8  00A1               	movwf	setSw_Enable@command
  8016                           
  8017                           ;Switch_B1.c: 90: SwPointSelect(1);
  8018  13F9  3001               	movlw	1
  8019  13FA  3190  207A  3193   	fcall	_SwPointSelect
  8020                           
  8021                           ;Switch_B1.c: 91: if(command)
  8022  13FD  0020               	movlb	0	; select bank0
  8023  13FE  0821               	movf	setSw_Enable@command,w
  8024  13FF  1903               	btfsc	3,2
  8025  1400  2C0D               	goto	l8508
  8026  1401                     l2551:	
  8027                           ;Switch_B1.c: 92: {
  8028                           ;Switch_B1.c: 93: while(!Sw->Enable)
  8029                           
  8030  1401  0876               	movf	_Sw,w
  8031  1402  0086               	movwf	6
  8032  1403  0877               	movf	_Sw+1,w
  8033  1404  0087               	movwf	7
  8034  1405  1801               	btfsc	1,0
  8035  1406  2C12               	goto	l8510
  8036                           
  8037                           ;Switch_B1.c: 94: Sw->Enable=1;
  8038  1407  0876               	movf	_Sw,w
  8039  1408  0086               	movwf	6
  8040  1409  0877               	movf	_Sw+1,w
  8041  140A  0087               	movwf	7
  8042  140B  1401               	bsf	1,0
  8043  140C  2C01               	goto	l2551
  8044  140D                     l8508:	
  8045                           ;Switch_B1.c: 95: }
  8046                           
  8047                           
  8048                           ;Switch_B1.c: 96: else
  8049                           ;Switch_B1.c: 97: {
  8050                           ;Switch_B1.c: 98: Sw->Enable=0;
  8051  140D  0876               	movf	_Sw,w
  8052  140E  0086               	movwf	6
  8053  140F  0877               	movf	_Sw+1,w
  8054  1410  0087               	movwf	7
  8055  1411  1001               	bcf	1,0
  8056  1412                     l8510:	
  8057                           
  8058                           ;Switch_B1.c: 99: }
  8059                           ;Switch_B1.c: 103: SwPointSelect(2);
  8060  1412  3002               	movlw	2
  8061  1413  3190  207A  3193   	fcall	_SwPointSelect
  8062                           
  8063                           ;Switch_B1.c: 104: if(command)
  8064  1416  0020               	movlb	0	; select bank0
  8065  1417  0821               	movf	setSw_Enable@command,w
  8066  1418  1903               	btfsc	3,2
  8067  1419  2C26               	goto	l8518
  8068  141A                     l2556:	
  8069                           ;Switch_B1.c: 105: {
  8070                           ;Switch_B1.c: 106: while(!Sw->Enable)
  8071                           
  8072  141A  0876               	movf	_Sw,w
  8073  141B  0086               	movwf	6
  8074  141C  0877               	movf	_Sw+1,w
  8075  141D  0087               	movwf	7
  8076  141E  1801               	btfsc	1,0
  8077  141F  0008               	return
  8078                           
  8079                           ;Switch_B1.c: 107: Sw->Enable=1;
  8080  1420  0876               	movf	_Sw,w
  8081  1421  0086               	movwf	6
  8082  1422  0877               	movf	_Sw+1,w
  8083  1423  0087               	movwf	7
  8084  1424  1401               	bsf	1,0
  8085  1425  2C1A               	goto	l2556
  8086  1426                     l8518:	
  8087                           ;Switch_B1.c: 108: }
  8088                           
  8089                           
  8090                           ;Switch_B1.c: 109: else
  8091                           ;Switch_B1.c: 110: {
  8092                           ;Switch_B1.c: 111: Sw->Enable=0;
  8093  1426  0876               	movf	_Sw,w
  8094  1427  0086               	movwf	6
  8095  1428  0877               	movf	_Sw+1,w
  8096  1429  0087               	movwf	7
  8097  142A  1001               	bcf	1,0
  8098  142B  0008               	return
  8099  142C                     __end_of_setSw_Enable:	
  8100                           
  8101                           	psect	text39
  8102  12A3                     __ptext39:	
  8103 ;; *************** function _setRF_Enable *****************
  8104 ;; Defined at:
  8105 ;;		line 173 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  rf              1    wreg     unsigned char 
  8108 ;;  command         1    5[BANK0 ] unsigned char 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  rf              1    6[BANK0 ] unsigned char 
  8111 ;; Return value:  Size  Location     Type
  8112 ;;		None               void
  8113 ;; Registers used:
  8114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8120 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;Total ram usage:        2 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; Hardware stack levels required when called:    7
  8127 ;; This function calls:
  8128 ;;		_CC2500_WriteCommand
  8129 ;;		_RF_RxDisable
  8130 ;;		_RfPointSelect
  8131 ;; This function is called by:
  8132 ;;		_MainT
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           
  8137                           ;psect for function _setRF_Enable
  8138  12A3                     _setRF_Enable:	
  8139                           
  8140                           ;incstack = 0
  8141                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8142                           ;setRF_Enable@rf stored from wreg
  8143  12A3  0020               	movlb	0	; select bank0
  8144  12A4  00A6               	movwf	setRF_Enable@rf
  8145                           
  8146                           ;RF_Control_B1.c: 175: RfPointSelect(rf);
  8147  12A5  0826               	movf	setRF_Enable@rf,w
  8148  12A6  319E  2694  3192   	fcall	_RfPointSelect
  8149                           
  8150                           ;RF_Control_B1.c: 176: if(command)
  8151  12A9  0020               	movlb	0	; select bank0
  8152  12AA  0825               	movf	setRF_Enable@command,w
  8153  12AB  1903               	btfsc	3,2
  8154  12AC  2AB2               	goto	l8526
  8155                           
  8156                           ;RF_Control_B1.c: 177: {
  8157                           ;RF_Control_B1.c: 178: RF->Enable=1;
  8158  12AD  0879               	movf	_RF,w
  8159  12AE  0086               	movwf	6
  8160  12AF  0187               	clrf	7
  8161  12B0  1401               	bsf	1,0
  8162                           
  8163                           ;RF_Control_B1.c: 179: }
  8164  12B1  0008               	return
  8165  12B2                     l8526:	
  8166                           
  8167                           ;RF_Control_B1.c: 180: else
  8168                           ;RF_Control_B1.c: 181: {
  8169                           ;RF_Control_B1.c: 182: RF->Enable=0;
  8170  12B2  0879               	movf	_RF,w
  8171  12B3  0086               	movwf	6
  8172  12B4  0187               	clrf	7
  8173  12B5  1001               	bcf	1,0
  8174                           
  8175                           ;RF_Control_B1.c: 183: RF->Learn=0;
  8176  12B6  0879               	movf	_RF,w
  8177  12B7  0086               	movwf	6
  8178  12B8  0187               	clrf	7
  8179  12B9  1301               	bcf	1,6
  8180                           
  8181                           ;RF_Control_B1.c: 184: Transceive_GO=0;
  8182  12BA  1270               	bcf	_Transceive_GO/(0+8),_Transceive_GO& (0+7)
  8183                           
  8184                           ;RF_Control_B1.c: 185: CC2500_WriteCommand(0x36);
  8185  12BB  3036               	movlw	54
  8186  12BC  319F  277B  3192   	fcall	_CC2500_WriteCommand
  8187                           
  8188                           ;RF_Control_B1.c: 186: CC2500_WriteCommand(0x3B);
  8189  12BF  303B               	movlw	59
  8190  12C0  319F  277B  3192   	fcall	_CC2500_WriteCommand
  8191                           
  8192                           ;RF_Control_B1.c: 187: RF_RxDisable(1);
  8193  12C3  3001               	movlw	1
  8194  12C4  3193  233E         	fcall	_RF_RxDisable
  8195  12C6  0008               	return
  8196  12C7                     __end_of_setRF_Enable:	
  8197                           
  8198                           	psect	text40
  8199  133E                     __ptext40:	
  8200 ;; *************** function _RF_RxDisable *****************
  8201 ;; Defined at:
  8202 ;;		line 191 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;  rf              1    wreg     unsigned char 
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  rf              1    4[BANK0 ] unsigned char 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;		None               void
  8209 ;; Registers used:
  8210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;Total ram usage:        1 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; Hardware stack levels required when called:    6
  8223 ;; This function calls:
  8224 ;;		_CC2500_WriteCommand
  8225 ;;		_RfPointSelect
  8226 ;;		_setINT_GO
  8227 ;; This function is called by:
  8228 ;;		_setRF_Main
  8229 ;;		_setRF_Enable
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           
  8234                           ;psect for function _RF_RxDisable
  8235  133E                     _RF_RxDisable:	
  8236                           
  8237                           ;incstack = 0
  8238                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8239                           ;RF_RxDisable@rf stored from wreg
  8240  133E  0020               	movlb	0	; select bank0
  8241  133F  00A4               	movwf	RF_RxDisable@rf
  8242                           
  8243                           ;RF_Control_B1.c: 193: RfPointSelect(rf);
  8244  1340  0824               	movf	RF_RxDisable@rf,w
  8245  1341  319E  2694  3193   	fcall	_RfPointSelect
  8246                           
  8247                           ;RF_Control_B1.c: 194: if(RF->RxStatus || RF->ReceiveGO)
  8248  1344  0879               	movf	_RF,w
  8249  1345  0086               	movwf	6
  8250  1346  0187               	clrf	7
  8251  1347  1981               	btfsc	1,3
  8252  1348  2B4E               	goto	l8224
  8253  1349  0879               	movf	_RF,w
  8254  134A  0086               	movwf	6
  8255  134B  0187               	clrf	7
  8256  134C  1C81               	btfss	1,1
  8257  134D  0008               	return
  8258  134E                     l8224:	
  8259                           
  8260                           ;RF_Control_B1.c: 195: {
  8261                           ;RF_Control_B1.c: 196: RF->RxStatus=0;
  8262  134E  0879               	movf	_RF,w
  8263  134F  0086               	movwf	6
  8264  1350  0187               	clrf	7
  8265  1351  1181               	bcf	1,3
  8266                           
  8267                           ;RF_Control_B1.c: 197: RF->ReceiveGO=0;
  8268  1352  0879               	movf	_RF,w
  8269  1353  0086               	movwf	6
  8270  1354  0187               	clrf	7
  8271  1355  1081               	bcf	1,1
  8272                           
  8273                           ;RF_Control_B1.c: 198: RF->DebounceTime=0;
  8274  1356  0A79               	incf	_RF,w
  8275  1357  0086               	movwf	6
  8276  1358  0187               	clrf	7
  8277  1359  0181               	clrf	1
  8278                           
  8279                           ;RF_Control_B1.c: 199: RF->Debounce=0;
  8280  135A  0879               	movf	_RF,w
  8281  135B  0086               	movwf	6
  8282  135C  0187               	clrf	7
  8283  135D  1281               	bcf	1,5
  8284                           
  8285                           ;RF_Control_B1.c: 200: CC2500_WriteCommand(0x36);
  8286  135E  3036               	movlw	54
  8287  135F  319F  277B  3193   	fcall	_CC2500_WriteCommand
  8288                           
  8289                           ;RF_Control_B1.c: 201: CC2500_WriteCommand(0x3A);
  8290  1362  303A               	movlw	58
  8291  1363  319F  277B  3193   	fcall	_CC2500_WriteCommand
  8292                           
  8293                           ;RF_Control_B1.c: 202: setINT_GO(0);
  8294  1366  3000               	movlw	0
  8295  1367  319E  266B         	fcall	_setINT_GO
  8296  1369  0008               	return
  8297  136A                     __end_of_RF_RxDisable:	
  8298                           
  8299                           	psect	text41
  8300  1E6B                     __ptext41:	
  8301 ;; *************** function _setINT_GO *****************
  8302 ;; Defined at:
  8303 ;;		line 235 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  command         1    wreg     unsigned char 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;  command         1    0[BANK0 ] unsigned char 
  8308 ;; Return value:  Size  Location     Type
  8309 ;;		None               void
  8310 ;; Registers used:
  8311 ;;		wreg
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;Total ram usage:        1 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    4
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_setRF_Main
  8328 ;;		_RF_RxDisable
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           
  8333                           ;psect for function _setINT_GO
  8334  1E6B                     _setINT_GO:	
  8335                           
  8336                           ;incstack = 0
  8337                           ; Regs used in _setINT_GO: [wreg]
  8338                           ;setINT_GO@command stored from wreg
  8339  1E6B  0020               	movlb	0	; select bank0
  8340  1E6C  00A0               	movwf	setINT_GO@command
  8341                           
  8342                           ;MCU_16f1518_B1.c: 237: INTF=0;
  8343  1E6D  108B               	bcf	11,1	;volatile
  8344                           
  8345                           ;MCU_16f1518_B1.c: 238: INTE=command;
  8346  1E6E  1C20               	btfss	setINT_GO@command,0
  8347  1E6F  2E72               	goto	u7780
  8348  1E70  160B               	bsf	11,4	;volatile
  8349  1E71  0008               	return
  8350  1E72                     u7780:	
  8351  1E72  120B               	bcf	11,4	;volatile
  8352  1E73  0008               	return
  8353  1E74                     __end_of_setINT_GO:	
  8354                           
  8355                           	psect	text42
  8356  1EF1                     __ptext42:	
  8357 ;; *************** function _LED_Main *****************
  8358 ;; Defined at:
  8359 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;		None
  8364 ;; Return value:  Size  Location     Type
  8365 ;;		None               void
  8366 ;; Registers used:
  8367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;Total ram usage:        0 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    6
  8380 ;; This function calls:
  8381 ;;		_setLED_Main
  8382 ;; This function is called by:
  8383 ;;		_main
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           
  8388                           ;psect for function _LED_Main
  8389  1EF1                     _LED_Main:	
  8390                           
  8391                           ;LED_B1.c: 54: setLED_Main(1);
  8392                           
  8393                           ;incstack = 0
  8394                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8395  1EF1  3001               	movlw	1
  8396  1EF2  3194  24A4  319E   	fcall	_setLED_Main
  8397                           
  8398                           ;LED_B1.c: 57: setLED_Main(2);
  8399  1EF5  3002               	movlw	2
  8400  1EF6  3194  24A4  319E   	fcall	_setLED_Main
  8401                           
  8402                           ;LED_B1.c: 63: setLED_Main(99);
  8403  1EF9  3063               	movlw	99
  8404  1EFA  3194  24A4         	fcall	_setLED_Main
  8405  1EFC  0008               	return
  8406  1EFD                     __end_of_LED_Main:	
  8407                           
  8408                           	psect	text43
  8409  14A4                     __ptext43:	
  8410 ;; *************** function _setLED_Main *****************
  8411 ;; Defined at:
  8412 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  led             1    wreg     unsigned char 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  led             1    4[BANK0 ] unsigned char 
  8417 ;; Return value:  Size  Location     Type
  8418 ;;		None               void
  8419 ;; Registers used:
  8420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;Total ram usage:        3 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    5
  8433 ;; This function calls:
  8434 ;;		_LedPointSelect
  8435 ;; This function is called by:
  8436 ;;		_LED_Main
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           
  8441                           ;psect for function _setLED_Main
  8442  14A4                     _setLED_Main:	
  8443                           
  8444                           ;incstack = 0
  8445                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8446                           ;setLED_Main@led stored from wreg
  8447  14A4  0020               	movlb	0	; select bank0
  8448  14A5  00A4               	movwf	setLED_Main@led
  8449                           
  8450                           ;LED_B1.c: 216: LedPointSelect(led);
  8451  14A6  0824               	movf	setLED_Main@led,w
  8452  14A7  3191  2183  3194   	fcall	_LedPointSelect
  8453                           
  8454                           ;LED_B1.c: 217: if(LED->GO)
  8455  14AA  0878               	movf	_LED,w
  8456  14AB  0086               	movwf	6
  8457  14AC  0187               	clrf	7
  8458  14AD  1C81               	btfss	1,1
  8459  14AE  0008               	return
  8460                           
  8461                           ;LED_B1.c: 218: {
  8462                           ;LED_B1.c: 219: LED->Time++;
  8463  14AF  0A78               	incf	_LED,w
  8464  14B0  0086               	movwf	6
  8465  14B1  0187               	clrf	7
  8466  14B2  3001               	movlw	1
  8467  14B3  0781               	addwf	1,f
  8468  14B4  3141               	addfsr 1,1
  8469  14B5  1803               	skipnc
  8470  14B6  0A81               	incf	1,f
  8471                           
  8472                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
  8473  14B7  0A78               	incf	_LED,w
  8474  14B8  0086               	movwf	6
  8475  14B9  0187               	clrf	7
  8476  14BA  3F40               	moviw [0]fsr1
  8477  14BB  0020               	movlb	0	; select bank0
  8478  14BC  00A2               	movwf	??_setLED_Main
  8479  14BD  3F41               	moviw [1]fsr1
  8480  14BE  00A3               	movwf	??_setLED_Main+1
  8481  14BF  3000               	movlw	0
  8482  14C0  0223               	subwf	??_setLED_Main+1,w
  8483  14C1  3032               	movlw	50
  8484  14C2  1903               	skipnz
  8485  14C3  0222               	subwf	??_setLED_Main,w
  8486  14C4  1C03               	skipc
  8487  14C5  0008               	return
  8488                           
  8489                           ;LED_B1.c: 221: {
  8490                           ;LED_B1.c: 222: LED->Time=0;
  8491  14C6  0A78               	incf	_LED,w
  8492  14C7  0086               	movwf	6
  8493  14C8  0187               	clrf	7
  8494  14C9  3000               	movlw	0
  8495  14CA  3FC0               	movwi [0]fsr1
  8496  14CB  3FC1               	movwi [1]fsr1
  8497                           
  8498                           ;LED_B1.c: 224: if(led == 1)
  8499  14CC  0824               	movf	setLED_Main@led,w
  8500  14CD  3A01               	xorlw	1
  8501  14CE  1D03               	skipz
  8502  14CF  2CD3               	goto	l8492
  8503                           
  8504                           ;LED_B1.c: 225: {
  8505                           ;LED_B1.c: 226: RC7=~RC7;
  8506  14D0  3080               	movlw	128
  8507  14D1  068E               	xorwf	14,f
  8508                           
  8509                           ;LED_B1.c: 227: }
  8510  14D2  0008               	return
  8511  14D3                     l8492:	
  8512                           
  8513                           ;LED_B1.c: 230: else if(led == 2)
  8514  14D3  0824               	movf	setLED_Main@led,w
  8515  14D4  3A02               	xorlw	2
  8516  14D5  1D03               	skipz
  8517  14D6  2CDA               	goto	l8496
  8518                           
  8519                           ;LED_B1.c: 231: {
  8520                           ;LED_B1.c: 232: RA3=~RA3;
  8521  14D7  3008               	movlw	8
  8522  14D8  068C               	xorwf	12,f
  8523                           
  8524                           ;LED_B1.c: 233: }
  8525  14D9  0008               	return
  8526  14DA                     l8496:	
  8527                           
  8528                           ;LED_B1.c: 242: else if(led == 99)
  8529  14DA  0824               	movf	setLED_Main@led,w
  8530  14DB  3A63               	xorlw	99
  8531  14DC  1D03               	skipz
  8532  14DD  0008               	return
  8533                           
  8534                           ;LED_B1.c: 243: {
  8535                           ;LED_B1.c: 244: RB5=~RB5;
  8536  14DE  3020               	movlw	32
  8537  14DF  068D               	xorwf	13,f
  8538  14E0  0008               	return
  8539  14E1                     __end_of_setLED_Main:	
  8540                           
  8541                           	psect	text44
  8542  1EE5                     __ptext44:	
  8543 ;; *************** function _LED_Initialization *****************
  8544 ;; Defined at:
  8545 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;		None               void
  8552 ;; Registers used:
  8553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;Total ram usage:        0 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:    7
  8566 ;; This function calls:
  8567 ;;		_setLED_Initialization
  8568 ;; This function is called by:
  8569 ;;		_main
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           
  8574                           ;psect for function _LED_Initialization
  8575  1EE5                     _LED_Initialization:	
  8576                           
  8577                           ;LED_B1.c: 38: setLED_Initialization(1);
  8578                           
  8579                           ;incstack = 0
  8580                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8581  1EE5  3001               	movlw	1
  8582  1EE6  319F  27AB  319E   	fcall	_setLED_Initialization
  8583                           
  8584                           ;LED_B1.c: 41: setLED_Initialization(2);
  8585  1EE9  3002               	movlw	2
  8586  1EEA  319F  27AB  319E   	fcall	_setLED_Initialization
  8587                           
  8588                           ;LED_B1.c: 47: setLED_Initialization(99);
  8589  1EED  3063               	movlw	99
  8590  1EEE  319F  27AB         	fcall	_setLED_Initialization
  8591  1EF0  0008               	return
  8592  1EF1                     __end_of_LED_Initialization:	
  8593                           
  8594                           	psect	text45
  8595  1FAB                     __ptext45:	
  8596 ;; *************** function _setLED_Initialization *****************
  8597 ;; Defined at:
  8598 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;  led             1    wreg     unsigned char 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;  led             1    4[BANK0 ] unsigned char 
  8603 ;; Return value:  Size  Location     Type
  8604 ;;		None               void
  8605 ;; Registers used:
  8606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;Total ram usage:        1 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    6
  8619 ;; This function calls:
  8620 ;;		_LedPointSelect
  8621 ;;		_setLED
  8622 ;; This function is called by:
  8623 ;;		_LED_Initialization
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           
  8628                           ;psect for function _setLED_Initialization
  8629  1FAB                     _setLED_Initialization:	
  8630                           
  8631                           ;incstack = 0
  8632                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8633                           ;setLED_Initialization@led stored from wreg
  8634  1FAB  0020               	movlb	0	; select bank0
  8635  1FAC  00A4               	movwf	setLED_Initialization@led
  8636                           
  8637                           ;LED_B1.c: 69: LedPointSelect(led);
  8638  1FAD  0824               	movf	setLED_Initialization@led,w
  8639  1FAE  3191  2183  319F   	fcall	_LedPointSelect
  8640                           
  8641                           ;LED_B1.c: 70: LED->Enable=1;
  8642  1FB1  0878               	movf	_LED,w
  8643  1FB2  0086               	movwf	6
  8644  1FB3  0187               	clrf	7
  8645  1FB4  1401               	bsf	1,0
  8646                           
  8647                           ;LED_B1.c: 71: setLED(led,0);
  8648  1FB5  0020               	movlb	0	; select bank0
  8649  1FB6  01A2               	clrf	setLED@command
  8650  1FB7  0824               	movf	setLED_Initialization@led,w
  8651  1FB8  3188  20CB         	fcall	_setLED
  8652  1FBA  0008               	return
  8653  1FBB                     __end_of_setLED_Initialization:	
  8654                           
  8655                           	psect	text46
  8656  1563                     __ptext46:	
  8657 ;; *************** function _Flash_Memory_Main *****************
  8658 ;; Defined at:
  8659 ;;		line 468 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;		None
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;		None               void
  8666 ;; Registers used:
  8667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;Total ram usage:        0 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    7
  8680 ;; This function calls:
  8681 ;;		_Flash_Memory_Modify
  8682 ;; This function is called by:
  8683 ;;		_main
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           
  8688                           ;psect for function _Flash_Memory_Main
  8689  1563                     _Flash_Memory_Main:	
  8690                           
  8691                           ;MCU_16f1518_B1.c: 470: if(Memory->GO)
  8692                           
  8693                           ;incstack = 0
  8694                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8695  1563  087A               	movf	_Memory,w
  8696  1564  3E22               	addlw	34
  8697  1565  0086               	movwf	6
  8698  1566  3001               	movlw	1	; select bank2/3
  8699  1567  0087               	movwf	7
  8700  1568  1C81               	btfss	1,1
  8701  1569  0008               	return
  8702                           
  8703                           ;MCU_16f1518_B1.c: 471: {
  8704                           ;MCU_16f1518_B1.c: 472: if(Memory->Modify)
  8705  156A  087A               	movf	_Memory,w
  8706  156B  3E22               	addlw	34
  8707  156C  0086               	movwf	6
  8708  156D  3001               	movlw	1	; select bank2/3
  8709  156E  0087               	movwf	7
  8710  156F  1C01               	btfss	1,0
  8711  1570  2D9F               	goto	l8924
  8712                           
  8713                           ;MCU_16f1518_B1.c: 473: {
  8714                           ;MCU_16f1518_B1.c: 474: Memory->Time++;
  8715  1571  087A               	movf	_Memory,w
  8716  1572  3E23               	addlw	35
  8717  1573  0086               	movwf	6
  8718  1574  3001               	movlw	1	; select bank2/3
  8719  1575  0087               	movwf	7
  8720  1576  3001               	movlw	1
  8721  1577  0781               	addwf	1,f
  8722  1578  3141               	addfsr 1,1
  8723  1579  1803               	skipnc
  8724  157A  0A81               	incf	1,f
  8725                           
  8726                           ;MCU_16f1518_B1.c: 475: if(Memory->Time == 50)
  8727  157B  087A               	movf	_Memory,w
  8728  157C  3E23               	addlw	35
  8729  157D  0086               	movwf	6
  8730  157E  3001               	movlw	1	; select bank2/3
  8731  157F  0087               	movwf	7
  8732  1580  3F40               	moviw [0]fsr1
  8733  1581  3A32               	xorlw	50
  8734  1582  1D03               	skipz
  8735  1583  2D86               	goto	u9075
  8736  1584  3F41               	moviw [1]fsr1
  8737  1585  3A00               	xorlw	0
  8738  1586                     u9075:	
  8739  1586  1D03               	skipz
  8740  1587  0008               	return
  8741                           
  8742                           ;MCU_16f1518_B1.c: 476: {
  8743                           ;MCU_16f1518_B1.c: 477: Memory->Time=0;
  8744  1588  087A               	movf	_Memory,w
  8745  1589  3E23               	addlw	35
  8746  158A  0086               	movwf	6
  8747  158B  3001               	movlw	1	; select bank2/3
  8748  158C  0087               	movwf	7
  8749  158D  3000               	movlw	0
  8750  158E  3FC0               	movwi [0]fsr1
  8751  158F  3FC1               	movwi [1]fsr1
  8752                           
  8753                           ;MCU_16f1518_B1.c: 478: Memory->Modify=0;
  8754  1590  087A               	movf	_Memory,w
  8755  1591  3E22               	addlw	34
  8756  1592  0086               	movwf	6
  8757  1593  3001               	movlw	1	; select bank2/3
  8758  1594  0087               	movwf	7
  8759  1595  1001               	bcf	1,0
  8760                           
  8761                           ;MCU_16f1518_B1.c: 479: Memory->GO=0;
  8762  1596  087A               	movf	_Memory,w
  8763  1597  3E22               	addlw	34
  8764  1598  0086               	movwf	6
  8765  1599  3001               	movlw	1	; select bank2/3
  8766  159A  0087               	movwf	7
  8767  159B  1081               	bcf	1,1
  8768                           
  8769                           ;MCU_16f1518_B1.c: 480: Flash_Memory_Modify();
  8770  159C  3189  21EB         	fcall	_Flash_Memory_Modify
  8771                           
  8772                           ;MCU_16f1518_B1.c: 481: }
  8773                           ;MCU_16f1518_B1.c: 482: }
  8774  159E  0008               	return
  8775  159F                     l8924:	
  8776                           
  8777                           ;MCU_16f1518_B1.c: 483: else
  8778                           ;MCU_16f1518_B1.c: 484: {
  8779                           ;MCU_16f1518_B1.c: 485: Memory->GO=0;
  8780  159F  087A               	movf	_Memory,w
  8781  15A0  3E22               	addlw	34
  8782  15A1  0086               	movwf	6
  8783  15A2  3001               	movlw	1	; select bank2/3
  8784  15A3  0087               	movwf	7
  8785  15A4  1081               	bcf	1,1
  8786  15A5  0008               	return
  8787  15A6                     __end_of_Flash_Memory_Main:	
  8788                           
  8789                           	psect	text47
  8790  09EB                     __ptext47:	
  8791 ;; *************** function _Flash_Memory_Modify *****************
  8792 ;; Defined at:
  8793 ;;		line 542 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;		None
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  i               1    6[BANK0 ] unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;		None               void
  8800 ;; Registers used:
  8801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;Total ram usage:        3 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:    6
  8814 ;; This function calls:
  8815 ;;		_Flash_Memory_Erasing
  8816 ;;		_Flash_Memory_Read
  8817 ;;		_Flash_Memory_Write
  8818 ;; This function is called by:
  8819 ;;		_Flash_Memory_Main
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           
  8824                           ;psect for function _Flash_Memory_Modify
  8825  09EB                     _Flash_Memory_Modify:	
  8826                           
  8827                           ;MCU_16f1518_B1.c: 544: char i;
  8828                           ;MCU_16f1518_B1.c: 545: for(i=0;i<32;i++)
  8829                           
  8830                           ;incstack = 0
  8831                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8832  09EB  0020               	movlb	0	; select bank0
  8833  09EC  01A6               	clrf	Flash_Memory_Modify@i
  8834  09ED  3020               	movlw	32
  8835  09EE  0226               	subwf	Flash_Memory_Modify@i,w
  8836  09EF  1803               	btfsc	3,0
  8837  09F0  2A08               	goto	l8594
  8838  09F1                     l8588:	
  8839                           
  8840                           ;MCU_16f1518_B1.c: 546: {
  8841                           ;MCU_16f1518_B1.c: 547: Memory->Data[i]=Flash_Memory_Read(i);
  8842  09F1  0826               	movf	Flash_Memory_Modify@i,w
  8843  09F2  3191  2102  3189   	fcall	_Flash_Memory_Read
  8844  09F5  0020               	movlb	0	; select bank0
  8845  09F6  00A4               	movwf	??_Flash_Memory_Modify
  8846  09F7  0826               	movf	Flash_Memory_Modify@i,w
  8847  09F8  077A               	addwf	_Memory,w
  8848  09F9  00A5               	movwf	??_Flash_Memory_Modify+1
  8849  09FA  0825               	movf	??_Flash_Memory_Modify+1,w
  8850  09FB  0086               	movwf	6
  8851  09FC  3001               	movlw	1	; select bank2/3
  8852  09FD  0087               	movwf	7
  8853  09FE  0824               	movf	??_Flash_Memory_Modify,w
  8854  09FF  0081               	movwf	1
  8855  0A00  3001               	movlw	1
  8856  0A01  00A4               	movwf	??_Flash_Memory_Modify
  8857  0A02  0824               	movf	??_Flash_Memory_Modify,w
  8858  0A03  07A6               	addwf	Flash_Memory_Modify@i,f
  8859  0A04  3020               	movlw	32
  8860  0A05  0226               	subwf	Flash_Memory_Modify@i,w
  8861  0A06  1C03               	skipc
  8862  0A07  29F1               	goto	l8588
  8863  0A08                     l8594:	
  8864                           
  8865                           ;MCU_16f1518_B1.c: 548: }
  8866                           ;MCU_16f1518_B1.c: 549: Memory->Data[0]=Product->Data[12];
  8867  0A08  086E               	movf	_Product,w
  8868  0A09  3E0C               	addlw	12
  8869  0A0A  0086               	movwf	6
  8870  0A0B  3001               	movlw	1	; select bank2/3
  8871  0A0C  0087               	movwf	7
  8872  0A0D  0801               	movf	1,w
  8873  0A0E  00A4               	movwf	??_Flash_Memory_Modify
  8874  0A0F  087A               	movf	_Memory,w
  8875  0A10  0086               	movwf	6
  8876  0A11  3001               	movlw	1	; select bank2/3
  8877  0A12  0087               	movwf	7
  8878  0A13  0824               	movf	??_Flash_Memory_Modify,w
  8879  0A14  0081               	movwf	1
  8880                           
  8881                           ;MCU_16f1518_B1.c: 550: Memory->Data[1]=Product->Data[13];
  8882  0A15  086E               	movf	_Product,w
  8883  0A16  3E0D               	addlw	13
  8884  0A17  0086               	movwf	6
  8885  0A18  3001               	movlw	1	; select bank2/3
  8886  0A19  0087               	movwf	7
  8887  0A1A  0801               	movf	1,w
  8888  0A1B  00A4               	movwf	??_Flash_Memory_Modify
  8889  0A1C  0A7A               	incf	_Memory,w
  8890  0A1D  0086               	movwf	6
  8891  0A1E  3001               	movlw	1	; select bank2/3
  8892  0A1F  0087               	movwf	7
  8893  0A20  0824               	movf	??_Flash_Memory_Modify,w
  8894  0A21  0081               	movwf	1
  8895                           
  8896                           ;MCU_16f1518_B1.c: 551: Memory->Data[2]=Product->Data[14];
  8897  0A22  086E               	movf	_Product,w
  8898  0A23  3E0E               	addlw	14
  8899  0A24  0086               	movwf	6
  8900  0A25  3001               	movlw	1	; select bank2/3
  8901  0A26  0087               	movwf	7
  8902  0A27  0801               	movf	1,w
  8903  0A28  00A4               	movwf	??_Flash_Memory_Modify
  8904  0A29  087A               	movf	_Memory,w
  8905  0A2A  3E02               	addlw	2
  8906  0A2B  0086               	movwf	6
  8907  0A2C  3001               	movlw	1	; select bank2/3
  8908  0A2D  0087               	movwf	7
  8909  0A2E  0824               	movf	??_Flash_Memory_Modify,w
  8910  0A2F  0081               	movwf	1
  8911                           
  8912                           ;MCU_16f1518_B1.c: 557: if(Memory->LoopSave)
  8913  0A30  087A               	movf	_Memory,w
  8914  0A31  3E22               	addlw	34
  8915  0A32  0086               	movwf	6
  8916  0A33  3001               	movlw	1	; select bank2/3
  8917  0A34  0087               	movwf	7
  8918  0A35  1D01               	btfss	1,2
  8919  0A36  2A4F               	goto	l8598
  8920                           
  8921                           ;MCU_16f1518_B1.c: 558: {
  8922                           ;MCU_16f1518_B1.c: 559: Memory->LoopSave=0;
  8923  0A37  087A               	movf	_Memory,w
  8924  0A38  3E22               	addlw	34
  8925  0A39  0086               	movwf	6
  8926  0A3A  3001               	movlw	1	; select bank2/3
  8927  0A3B  0087               	movwf	7
  8928  0A3C  1101               	bcf	1,2
  8929                           
  8930                           ;MCU_16f1518_B1.c: 560: TMain->FirstOpen=0;
  8931  0A3D  086F               	movf	_TMain,w
  8932  0A3E  0086               	movwf	6
  8933  0A3F  3001               	movlw	1	; select bank2/3
  8934  0A40  0087               	movwf	7
  8935  0A41  1281               	bcf	1,5
  8936                           
  8937                           ;MCU_16f1518_B1.c: 561: TMain->First=0;
  8938  0A42  086F               	movf	_TMain,w
  8939  0A43  3E03               	addlw	3
  8940  0A44  0086               	movwf	6
  8941  0A45  3001               	movlw	1	; select bank2/3
  8942  0A46  0087               	movwf	7
  8943  0A47  1081               	bcf	1,1
  8944                           
  8945                           ;MCU_16f1518_B1.c: 562: Memory->Data[30]=1;
  8946  0A48  087A               	movf	_Memory,w
  8947  0A49  3E1E               	addlw	30
  8948  0A4A  0086               	movwf	6
  8949  0A4B  3001               	movlw	1	; select bank2/3
  8950  0A4C  0087               	movwf	7
  8951  0A4D  0181               	clrf	1
  8952  0A4E  0A81               	incf	1,f
  8953  0A4F                     l8598:	
  8954                           
  8955                           ;MCU_16f1518_B1.c: 563: }
  8956                           ;MCU_16f1518_B1.c: 564: GIE=0;
  8957  0A4F  138B               	bcf	11,7	;volatile
  8958                           
  8959                           ;MCU_16f1518_B1.c: 565: Flash_Memory_Erasing();
  8960  0A50  319E  26D9  3189   	fcall	_Flash_Memory_Erasing
  8961                           
  8962                           ;MCU_16f1518_B1.c: 566: Flash_Memory_Write();
  8963  0A53  3193  2398         	fcall	_Flash_Memory_Write
  8964                           
  8965                           ;MCU_16f1518_B1.c: 567: GIE=1;
  8966  0A55  178B               	bsf	11,7	;volatile
  8967  0A56  0008               	return
  8968  0A57                     __end_of_Flash_Memory_Modify:	
  8969                           
  8970                           	psect	text48
  8971  1ED9                     __ptext48:	
  8972 ;; *************** function _Flash_Memory_Erasing *****************
  8973 ;; Defined at:
  8974 ;;		line 531 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;		None
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;		None               void
  8981 ;; Registers used:
  8982 ;;		wreg, status,2, status,0, pclath, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;Total ram usage:        0 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:    5
  8995 ;; This function calls:
  8996 ;;		_Flash_Memory_Unlock
  8997 ;; This function is called by:
  8998 ;;		_Flash_Memory_Modify
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           
  9003                           ;psect for function _Flash_Memory_Erasing
  9004  1ED9                     _Flash_Memory_Erasing:	
  9005                           
  9006                           ;MCU_16f1518_B1.c: 533: CFGS=0;
  9007                           
  9008                           ;incstack = 0
  9009                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  9010  1ED9  0023               	movlb	3	; select bank3
  9011  1EDA  1315               	bcf	21,6	;volatile
  9012                           
  9013                           ;MCU_16f1518_B1.c: 534: PMADRH=0x30;
  9014  1EDB  3030               	movlw	48
  9015  1EDC  0092               	movwf	18	;volatile
  9016                           
  9017                           ;MCU_16f1518_B1.c: 535: PMADRL=0x00;
  9018  1EDD  0191               	clrf	17	;volatile
  9019                           
  9020                           ;MCU_16f1518_B1.c: 536: FREE=1;
  9021  1EDE  1615               	bsf	21,4	;volatile
  9022                           
  9023                           ;MCU_16f1518_B1.c: 537: WREN=1;
  9024  1EDF  1515               	bsf	21,2	;volatile
  9025                           
  9026                           ;MCU_16f1518_B1.c: 538: Flash_Memory_Unlock();
  9027  1EE0  319E  2662         	fcall	_Flash_Memory_Unlock
  9028                           
  9029                           ;MCU_16f1518_B1.c: 539: WREN=0;
  9030  1EE2  0023               	movlb	3	; select bank3
  9031  1EE3  1115               	bcf	21,2	;volatile
  9032  1EE4  0008               	return
  9033  1EE5                     __end_of_Flash_Memory_Erasing:	
  9034                           
  9035                           	psect	text49
  9036  0722                     __ptext49:	
  9037 ;; *************** function _Flash_Memory_Initialization *****************
  9038 ;; Defined at:
  9039 ;;		line 429 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;		None
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  i               1   62[BANK0 ] unsigned char 
  9044 ;; Return value:  Size  Location     Type
  9045 ;;		None               void
  9046 ;; Registers used:
  9047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;Total ram usage:        2 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    7
  9060 ;; This function calls:
  9061 ;;		_Flash_Memory_Read
  9062 ;;		_Flash_Memory_Write
  9063 ;;		_setPercentValue
  9064 ;; This function is called by:
  9065 ;;		_main
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           
  9070                           ;psect for function _Flash_Memory_Initialization
  9071  0722                     _Flash_Memory_Initialization:	
  9072                           
  9073                           ;MCU_16f1518_B1.c: 431: char i;
  9074                           ;MCU_16f1518_B1.c: 432: if(Flash_Memory_Read(31) == 0xaa)
  9075                           
  9076                           ;incstack = 0
  9077                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9078  0722  301F               	movlw	31
  9079  0723  3191  2102  3187   	fcall	_Flash_Memory_Read
  9080  0726  3AAA               	xorlw	170
  9081  0727  1D03               	skipz
  9082  0728  2F87               	goto	l8856
  9083                           
  9084                           ;MCU_16f1518_B1.c: 433: {
  9085                           ;MCU_16f1518_B1.c: 434: Product->Data[12]=Flash_Memory_Read(0);
  9086  0729  3000               	movlw	0
  9087  072A  3191  2102  3187   	fcall	_Flash_Memory_Read
  9088  072D  0020               	movlb	0	; select bank0
  9089  072E  00DD               	movwf	??_Flash_Memory_Initialization
  9090  072F  086E               	movf	_Product,w
  9091  0730  3E0C               	addlw	12
  9092  0731  0086               	movwf	6
  9093  0732  3001               	movlw	1	; select bank2/3
  9094  0733  0087               	movwf	7
  9095  0734  085D               	movf	??_Flash_Memory_Initialization,w
  9096  0735  0081               	movwf	1
  9097                           
  9098                           ;MCU_16f1518_B1.c: 435: Product->Data[13]=Flash_Memory_Read(1);
  9099  0736  3001               	movlw	1
  9100  0737  3191  2102  3187   	fcall	_Flash_Memory_Read
  9101  073A  0020               	movlb	0	; select bank0
  9102  073B  00DD               	movwf	??_Flash_Memory_Initialization
  9103  073C  086E               	movf	_Product,w
  9104  073D  3E0D               	addlw	13
  9105  073E  0086               	movwf	6
  9106  073F  3001               	movlw	1	; select bank2/3
  9107  0740  0087               	movwf	7
  9108  0741  085D               	movf	??_Flash_Memory_Initialization,w
  9109  0742  0081               	movwf	1
  9110                           
  9111                           ;MCU_16f1518_B1.c: 436: Product->Data[14]=Flash_Memory_Read(2);
  9112  0743  3002               	movlw	2
  9113  0744  3191  2102  3187   	fcall	_Flash_Memory_Read
  9114  0747  0020               	movlb	0	; select bank0
  9115  0748  00DD               	movwf	??_Flash_Memory_Initialization
  9116  0749  086E               	movf	_Product,w
  9117  074A  3E0E               	addlw	14
  9118  074B  0086               	movwf	6
  9119  074C  3001               	movlw	1	; select bank2/3
  9120  074D  0087               	movwf	7
  9121  074E  085D               	movf	??_Flash_Memory_Initialization,w
  9122  074F  0081               	movwf	1
  9123                           
  9124                           ;MCU_16f1518_B1.c: 442: i=setPercentValue(((char)((100-60)*1.5)));
  9125  0750  303C               	movlw	60
  9126  0751  3196  262D  3187   	fcall	_setPercentValue
  9127  0754  0020               	movlb	0	; select bank0
  9128  0755  00DD               	movwf	??_Flash_Memory_Initialization
  9129  0756  085D               	movf	??_Flash_Memory_Initialization,w
  9130  0757  00DE               	movwf	Flash_Memory_Initialization@i
  9131                           
  9132                           ;MCU_16f1518_B1.c: 443: Product->Data[21]=i;
  9133  0758  085E               	movf	Flash_Memory_Initialization@i,w
  9134  0759  00DD               	movwf	??_Flash_Memory_Initialization
  9135  075A  086E               	movf	_Product,w
  9136  075B  3E15               	addlw	21
  9137  075C  0086               	movwf	6
  9138  075D  3001               	movlw	1	; select bank2/3
  9139  075E  0087               	movwf	7
  9140  075F  085D               	movf	??_Flash_Memory_Initialization,w
  9141  0760  0081               	movwf	1
  9142                           
  9143                           ;MCU_16f1518_B1.c: 444: Product->Data[22]=i;
  9144  0761  085E               	movf	Flash_Memory_Initialization@i,w
  9145  0762  00DD               	movwf	??_Flash_Memory_Initialization
  9146  0763  086E               	movf	_Product,w
  9147  0764  3E16               	addlw	22
  9148  0765  0086               	movwf	6
  9149  0766  3001               	movlw	1	; select bank2/3
  9150  0767  0087               	movwf	7
  9151  0768  085D               	movf	??_Flash_Memory_Initialization,w
  9152  0769  0081               	movwf	1
  9153                           
  9154                           ;MCU_16f1518_B1.c: 445: Product->Data[23]=i;
  9155  076A  085E               	movf	Flash_Memory_Initialization@i,w
  9156  076B  00DD               	movwf	??_Flash_Memory_Initialization
  9157  076C  086E               	movf	_Product,w
  9158  076D  3E17               	addlw	23
  9159  076E  0086               	movwf	6
  9160  076F  3001               	movlw	1	; select bank2/3
  9161  0770  0087               	movwf	7
  9162  0771  085D               	movf	??_Flash_Memory_Initialization,w
  9163  0772  0081               	movwf	1
  9164                           
  9165                           ;MCU_16f1518_B1.c: 447: if(Flash_Memory_Read(30) == 1)
  9166  0773  301E               	movlw	30
  9167  0774  3191  2102  3187   	fcall	_Flash_Memory_Read
  9168  0777  3A01               	xorlw	1
  9169  0778  1D03               	skipz
  9170  0779  0008               	return
  9171                           
  9172                           ;MCU_16f1518_B1.c: 448: {
  9173                           ;MCU_16f1518_B1.c: 449: TMain->FirstOpen=0;
  9174  077A  0020               	movlb	0	; select bank0
  9175  077B  086F               	movf	_TMain,w
  9176  077C  0086               	movwf	6
  9177  077D  3001               	movlw	1	; select bank2/3
  9178  077E  0087               	movwf	7
  9179  077F  1281               	bcf	1,5
  9180                           
  9181                           ;MCU_16f1518_B1.c: 450: TMain->First=0;
  9182  0780  086F               	movf	_TMain,w
  9183  0781  3E03               	addlw	3
  9184  0782  0086               	movwf	6
  9185  0783  3001               	movlw	1	; select bank2/3
  9186  0784  0087               	movwf	7
  9187  0785  1081               	bcf	1,1
  9188                           
  9189                           ;MCU_16f1518_B1.c: 451: }
  9190                           ;MCU_16f1518_B1.c: 452: }
  9191  0786  0008               	return
  9192  0787                     l8856:	
  9193                           
  9194                           ;MCU_16f1518_B1.c: 453: else
  9195                           ;MCU_16f1518_B1.c: 454: {
  9196                           ;MCU_16f1518_B1.c: 455: i=setPercentValue(((char)((100-60)*1.5)));
  9197  0787  303C               	movlw	60
  9198  0788  3196  262D  3187   	fcall	_setPercentValue
  9199  078B  0020               	movlb	0	; select bank0
  9200  078C  00DD               	movwf	??_Flash_Memory_Initialization
  9201  078D  085D               	movf	??_Flash_Memory_Initialization,w
  9202  078E  00DE               	movwf	Flash_Memory_Initialization@i
  9203                           
  9204                           ;MCU_16f1518_B1.c: 456: Memory->Data[3]=i;
  9205  078F  085E               	movf	Flash_Memory_Initialization@i,w
  9206  0790  00DD               	movwf	??_Flash_Memory_Initialization
  9207  0791  087A               	movf	_Memory,w
  9208  0792  3E03               	addlw	3
  9209  0793  0086               	movwf	6
  9210  0794  3001               	movlw	1	; select bank2/3
  9211  0795  0087               	movwf	7
  9212  0796  085D               	movf	??_Flash_Memory_Initialization,w
  9213  0797  0081               	movwf	1
  9214                           
  9215                           ;MCU_16f1518_B1.c: 457: Memory->Data[4]=i;
  9216  0798  085E               	movf	Flash_Memory_Initialization@i,w
  9217  0799  00DD               	movwf	??_Flash_Memory_Initialization
  9218  079A  087A               	movf	_Memory,w
  9219  079B  3E04               	addlw	4
  9220  079C  0086               	movwf	6
  9221  079D  3001               	movlw	1	; select bank2/3
  9222  079E  0087               	movwf	7
  9223  079F  085D               	movf	??_Flash_Memory_Initialization,w
  9224  07A0  0081               	movwf	1
  9225                           
  9226                           ;MCU_16f1518_B1.c: 458: Memory->Data[5]=i;
  9227  07A1  085E               	movf	Flash_Memory_Initialization@i,w
  9228  07A2  00DD               	movwf	??_Flash_Memory_Initialization
  9229  07A3  087A               	movf	_Memory,w
  9230  07A4  3E05               	addlw	5
  9231  07A5  0086               	movwf	6
  9232  07A6  3001               	movlw	1	; select bank2/3
  9233  07A7  0087               	movwf	7
  9234  07A8  085D               	movf	??_Flash_Memory_Initialization,w
  9235  07A9  0081               	movwf	1
  9236                           
  9237                           ;MCU_16f1518_B1.c: 459: Product->Data[21]=i;
  9238  07AA  085E               	movf	Flash_Memory_Initialization@i,w
  9239  07AB  00DD               	movwf	??_Flash_Memory_Initialization
  9240  07AC  086E               	movf	_Product,w
  9241  07AD  3E15               	addlw	21
  9242  07AE  0086               	movwf	6
  9243  07AF  3001               	movlw	1	; select bank2/3
  9244  07B0  0087               	movwf	7
  9245  07B1  085D               	movf	??_Flash_Memory_Initialization,w
  9246  07B2  0081               	movwf	1
  9247                           
  9248                           ;MCU_16f1518_B1.c: 460: Product->Data[22]=i;
  9249  07B3  085E               	movf	Flash_Memory_Initialization@i,w
  9250  07B4  00DD               	movwf	??_Flash_Memory_Initialization
  9251  07B5  086E               	movf	_Product,w
  9252  07B6  3E16               	addlw	22
  9253  07B7  0086               	movwf	6
  9254  07B8  3001               	movlw	1	; select bank2/3
  9255  07B9  0087               	movwf	7
  9256  07BA  085D               	movf	??_Flash_Memory_Initialization,w
  9257  07BB  0081               	movwf	1
  9258                           
  9259                           ;MCU_16f1518_B1.c: 461: Product->Data[23]=i;
  9260  07BC  085E               	movf	Flash_Memory_Initialization@i,w
  9261  07BD  00DD               	movwf	??_Flash_Memory_Initialization
  9262  07BE  086E               	movf	_Product,w
  9263  07BF  3E17               	addlw	23
  9264  07C0  0086               	movwf	6
  9265  07C1  3001               	movlw	1	; select bank2/3
  9266  07C2  0087               	movwf	7
  9267  07C3  085D               	movf	??_Flash_Memory_Initialization,w
  9268  07C4  0081               	movwf	1
  9269                           
  9270                           ;MCU_16f1518_B1.c: 462: GIE=0;
  9271  07C5  138B               	bcf	11,7	;volatile
  9272                           
  9273                           ;MCU_16f1518_B1.c: 463: Flash_Memory_Write();
  9274  07C6  3193  2398         	fcall	_Flash_Memory_Write
  9275                           
  9276                           ;MCU_16f1518_B1.c: 464: GIE=1;
  9277  07C8  178B               	bsf	11,7	;volatile
  9278  07C9  0008               	return
  9279  07CA                     __end_of_Flash_Memory_Initialization:	
  9280                           
  9281                           	psect	text50
  9282  1398                     __ptext50:	
  9283 ;; *************** function _Flash_Memory_Write *****************
  9284 ;; Defined at:
  9285 ;;		line 511 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;		None
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;  i               1    1[BANK0 ] unsigned char 
  9290 ;; Return value:  Size  Location     Type
  9291 ;;		None               void
  9292 ;; Registers used:
  9293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;Total ram usage:        2 bytes
  9304 ;; Hardware stack levels used:    1
  9305 ;; Hardware stack levels required when called:    5
  9306 ;; This function calls:
  9307 ;;		_Flash_Memory_Unlock
  9308 ;; This function is called by:
  9309 ;;		_Flash_Memory_Initialization
  9310 ;;		_Flash_Memory_Modify
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           
  9315                           ;psect for function _Flash_Memory_Write
  9316  1398                     _Flash_Memory_Write:	
  9317                           
  9318                           ;MCU_16f1518_B1.c: 513: char i;
  9319                           ;MCU_16f1518_B1.c: 514: CFGS=0;
  9320                           
  9321                           ;incstack = 0
  9322                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9323  1398  0023               	movlb	3	; select bank3
  9324  1399  1315               	bcf	21,6	;volatile
  9325                           
  9326                           ;MCU_16f1518_B1.c: 515: PMADRH=0x30;
  9327  139A  3030               	movlw	48
  9328  139B  0092               	movwf	18	;volatile
  9329                           
  9330                           ;MCU_16f1518_B1.c: 516: PMDATH=0;
  9331  139C  0194               	clrf	20	;volatile
  9332                           
  9333                           ;MCU_16f1518_B1.c: 517: FREE=0;
  9334  139D  1215               	bcf	21,4	;volatile
  9335                           
  9336                           ;MCU_16f1518_B1.c: 518: LWLO=1;
  9337  139E  1695               	bsf	21,5	;volatile
  9338                           
  9339                           ;MCU_16f1518_B1.c: 519: WREN=1;
  9340  139F  1515               	bsf	21,2	;volatile
  9341                           
  9342                           ;MCU_16f1518_B1.c: 520: for(i=0 ; i<32 ; i++)
  9343  13A0  0020               	movlb	0	; select bank0
  9344  13A1  01A1               	clrf	Flash_Memory_Write@i
  9345  13A2  3020               	movlw	32
  9346  13A3  0221               	subwf	Flash_Memory_Write@i,w
  9347  13A4  1803               	btfsc	3,0
  9348  13A5  2BC0               	goto	l1664
  9349  13A6                     l8186:	
  9350                           
  9351                           ;MCU_16f1518_B1.c: 521: {
  9352                           ;MCU_16f1518_B1.c: 522: PMADRL=i;
  9353  13A6  0821               	movf	Flash_Memory_Write@i,w
  9354  13A7  0023               	movlb	3	; select bank3
  9355  13A8  0091               	movwf	17	;volatile
  9356                           
  9357                           ;MCU_16f1518_B1.c: 523: PMDATL=Memory->Data[i];
  9358  13A9  0020               	movlb	0	; select bank0
  9359  13AA  0821               	movf	Flash_Memory_Write@i,w
  9360  13AB  077A               	addwf	_Memory,w
  9361  13AC  00A0               	movwf	??_Flash_Memory_Write
  9362  13AD  0820               	movf	??_Flash_Memory_Write,w
  9363  13AE  0086               	movwf	6
  9364  13AF  3001               	movlw	1	; select bank2/3
  9365  13B0  0087               	movwf	7
  9366  13B1  0801               	movf	1,w
  9367  13B2  0023               	movlb	3	; select bank3
  9368  13B3  0093               	movwf	19	;volatile
  9369                           
  9370                           ;MCU_16f1518_B1.c: 524: Flash_Memory_Unlock();
  9371  13B4  319E  2662  3193   	fcall	_Flash_Memory_Unlock
  9372  13B7  3001               	movlw	1
  9373  13B8  0020               	movlb	0	; select bank0
  9374  13B9  00A0               	movwf	??_Flash_Memory_Write
  9375  13BA  0820               	movf	??_Flash_Memory_Write,w
  9376  13BB  07A1               	addwf	Flash_Memory_Write@i,f
  9377  13BC  3020               	movlw	32
  9378  13BD  0221               	subwf	Flash_Memory_Write@i,w
  9379  13BE  1C03               	skipc
  9380  13BF  2BA6               	goto	l8186
  9381  13C0                     l1664:	
  9382                           
  9383                           ;MCU_16f1518_B1.c: 525: }
  9384                           ;MCU_16f1518_B1.c: 526: LWLO=0;
  9385  13C0  0023               	movlb	3	; select bank3
  9386  13C1  1295               	bcf	21,5	;volatile
  9387                           
  9388                           ;MCU_16f1518_B1.c: 527: Flash_Memory_Unlock();
  9389  13C2  319E  2662         	fcall	_Flash_Memory_Unlock
  9390                           
  9391                           ;MCU_16f1518_B1.c: 528: WREN=0;
  9392  13C4  0023               	movlb	3	; select bank3
  9393  13C5  1115               	bcf	21,2	;volatile
  9394  13C6  0008               	return
  9395  13C7                     __end_of_Flash_Memory_Write:	
  9396                           
  9397                           	psect	text51
  9398  1E62                     __ptext51:	
  9399 ;; *************** function _Flash_Memory_Unlock *****************
  9400 ;; Defined at:
  9401 ;;		line 490 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;		None               void
  9408 ;; Registers used:
  9409 ;;		wreg
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;Total ram usage:        0 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    4
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_Flash_Memory_Write
  9426 ;;		_Flash_Memory_Erasing
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function _Flash_Memory_Unlock
  9432  1E62                     _Flash_Memory_Unlock:	
  9433                           
  9434                           ;MCU_16f1518_B1.c: 492: PMCON2=0x55;
  9435                           
  9436                           ;incstack = 0
  9437                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  9438  1E62  3055               	movlw	85
  9439  1E63  0023               	movlb	3	; select bank3
  9440  1E64  0096               	movwf	22	;volatile
  9441                           
  9442                           ;MCU_16f1518_B1.c: 493: PMCON2=0xaa;
  9443  1E65  30AA               	movlw	170
  9444  1E66  0096               	movwf	22	;volatile
  9445                           
  9446                           ;MCU_16f1518_B1.c: 494: WR=1;
  9447  1E67  1495               	bsf	21,1	;volatile
  9448                           
  9449                           ;MCU_16f1518_B1.c: 495: __nop();
  9450  1E68  0000               	nop
  9451                           
  9452                           ;MCU_16f1518_B1.c: 496: __nop();
  9453  1E69  0000               	nop
  9454  1E6A  0008               	return
  9455  1E6B                     __end_of_Flash_Memory_Unlock:	
  9456                           
  9457                           	psect	text52
  9458  1102                     __ptext52:	
  9459 ;; *************** function _Flash_Memory_Read *****************
  9460 ;; Defined at:
  9461 ;;		line 499 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  address         1    wreg     unsigned char 
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;  address         1    2[BANK0 ] unsigned char 
  9466 ;;  ret             1    3[BANK0 ] unsigned char 
  9467 ;;  i               1    1[BANK0 ] unsigned char 
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      unsigned char 
  9470 ;; Registers used:
  9471 ;;		wreg, status,2
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;Total ram usage:        4 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    4
  9484 ;; This function calls:
  9485 ;;		Nothing
  9486 ;; This function is called by:
  9487 ;;		_Flash_Memory_Initialization
  9488 ;;		_Flash_Memory_Modify
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           
  9493                           ;psect for function _Flash_Memory_Read
  9494  1102                     _Flash_Memory_Read:	
  9495                           
  9496                           ;incstack = 0
  9497                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  9498                           ;Flash_Memory_Read@address stored from wreg
  9499  1102  0020               	movlb	0	; select bank0
  9500  1103  00A2               	movwf	Flash_Memory_Read@address
  9501                           
  9502                           ;MCU_16f1518_B1.c: 501: char i,ret=0;
  9503  1104  01A3               	clrf	Flash_Memory_Read@ret
  9504                           
  9505                           ;MCU_16f1518_B1.c: 502: PMADRH=0x30;
  9506  1105  3030               	movlw	48
  9507  1106  0023               	movlb	3	; select bank3
  9508  1107  0092               	movwf	18	;volatile
  9509                           
  9510                           ;MCU_16f1518_B1.c: 503: PMADRL=address;
  9511  1108  0020               	movlb	0	; select bank0
  9512  1109  0822               	movf	Flash_Memory_Read@address,w
  9513  110A  0023               	movlb	3	; select bank3
  9514  110B  0091               	movwf	17	;volatile
  9515                           
  9516                           ;MCU_16f1518_B1.c: 504: CFGS=0;
  9517  110C  1315               	bcf	21,6	;volatile
  9518                           
  9519                           ;MCU_16f1518_B1.c: 505: RD=1;
  9520  110D  1415               	bsf	21,0	;volatile
  9521                           
  9522                           ;MCU_16f1518_B1.c: 506: i=PMDATH;
  9523  110E  0814               	movf	20,w	;volatile
  9524  110F  0020               	movlb	0	; select bank0
  9525  1110  00A0               	movwf	??_Flash_Memory_Read
  9526  1111  0820               	movf	??_Flash_Memory_Read,w
  9527  1112  00A1               	movwf	Flash_Memory_Read@i
  9528                           
  9529                           ;MCU_16f1518_B1.c: 507: ret=PMDATL;
  9530  1113  0023               	movlb	3	; select bank3
  9531  1114  0813               	movf	19,w	;volatile
  9532  1115  0020               	movlb	0	; select bank0
  9533  1116  00A0               	movwf	??_Flash_Memory_Read
  9534  1117  0820               	movf	??_Flash_Memory_Read,w
  9535  1118  00A3               	movwf	Flash_Memory_Read@ret
  9536                           
  9537                           ;MCU_16f1518_B1.c: 508: return ret;
  9538  1119  0823               	movf	Flash_Memory_Read@ret,w
  9539  111A  0008               	return
  9540  111B                     __end_of_Flash_Memory_Read:	
  9541                           
  9542                           	psect	text53
  9543  1EAA                     __ptext53:	
  9544 ;; *************** function _DimmerLights_Main *****************
  9545 ;; Defined at:
  9546 ;;		line 98 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;		None
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;		None
  9551 ;; Return value:  Size  Location     Type
  9552 ;;		None               void
  9553 ;; Registers used:
  9554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;Total ram usage:        0 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    9
  9567 ;; This function calls:
  9568 ;;		_DimmerLights_Close
  9569 ;;		_setDimmerLights_Main
  9570 ;; This function is called by:
  9571 ;;		_main
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           
  9576                           ;psect for function _DimmerLights_Main
  9577  1EAA                     _DimmerLights_Main:	
  9578                           
  9579                           ;Dimmer_B1.c: 101: setDimmerLights_Main(1);
  9580                           
  9581                           ;incstack = 0
  9582                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9583  1EAA  3001               	movlw	1
  9584  1EAB  318D  2520  319E   	fcall	_setDimmerLights_Main
  9585                           
  9586                           ;Dimmer_B1.c: 105: setDimmerLights_Main(2);
  9587  1EAE  3002               	movlw	2
  9588  1EAF  318D  2520  319E   	fcall	_setDimmerLights_Main
  9589                           
  9590                           ;Dimmer_B1.c: 112: DimmerLights_Close();
  9591  1EB2  3191  214E         	fcall	_DimmerLights_Close
  9592  1EB4  0008               	return
  9593  1EB5                     __end_of_DimmerLights_Main:	
  9594                           
  9595                           	psect	text54
  9596  0D20                     __ptext54:	
  9597 ;; *************** function _setDimmerLights_Main *****************
  9598 ;; Defined at:
  9599 ;;		line 115 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  lights          1    wreg     unsigned char 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  lights          1   66[BANK0 ] unsigned char 
  9604 ;;  clear           1   65[BANK0 ] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;		None               void
  9607 ;; Registers used:
  9608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;Total ram usage:        2 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    8
  9621 ;; This function calls:
  9622 ;;		_DimmerLightsPointSelect
  9623 ;;		_getDimmerLights_Trigger
  9624 ;;		_setBuz
  9625 ;;		_setDimmerLights
  9626 ;;		_setDimmerLights_Adj
  9627 ;; This function is called by:
  9628 ;;		_DimmerLights_Main
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           
  9633                           ;psect for function _setDimmerLights_Main
  9634  0D20                     _setDimmerLights_Main:	
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9638                           ;setDimmerLights_Main@lights stored from wreg
  9639  0D20  0020               	movlb	0	; select bank0
  9640  0D21  00E2               	movwf	setDimmerLights_Main@lights
  9641                           
  9642                           ;Dimmer_B1.c: 117: char clear=1;
  9643  0D22  01E1               	clrf	setDimmerLights_Main@clear
  9644  0D23  0AE1               	incf	setDimmerLights_Main@clear,f
  9645                           
  9646                           ;Dimmer_B1.c: 118: DimmerLightsPointSelect(lights);
  9647  0D24  0862               	movf	setDimmerLights_Main@lights,w
  9648  0D25  319F  27ED  318D   	fcall	_DimmerLightsPointSelect
  9649                           
  9650                           ;Dimmer_B1.c: 119: if(DimmerLights->Trigger)
  9651  0D28  0020               	movlb	0	; select bank0
  9652  0D29  086B               	movf	_DimmerLights,w
  9653  0D2A  3E09               	addlw	9
  9654  0D2B  0086               	movwf	6
  9655  0D2C  3001               	movlw	1	; select bank2/3
  9656  0D2D  0087               	movwf	7
  9657  0D2E  1C81               	btfss	1,1
  9658  0D2F  2D6B               	goto	l8458
  9659                           
  9660                           ;Dimmer_B1.c: 120: {
  9661                           ;Dimmer_B1.c: 146: if(lights == 1)
  9662  0D30  0862               	movf	setDimmerLights_Main@lights,w
  9663  0D31  3A01               	xorlw	1
  9664  0D32  1D03               	skipz
  9665  0D33  2D36               	goto	l8440
  9666                           
  9667                           ;Dimmer_B1.c: 147: {
  9668                           ;Dimmer_B1.c: 148: if(!DimmerLights22->Clear)
  9669  0D34  086D               	movf	_DimmerLights22,w
  9670  0D35  2D3B               	goto	L8
  9671  0D36                     l8440:	
  9672                           ;Dimmer_B1.c: 151: }
  9673                           ;Dimmer_B1.c: 152: }
  9674                           
  9675                           ;Dimmer_B1.c: 149: {
  9676                           ;Dimmer_B1.c: 150: clear=0;
  9677                           
  9678                           
  9679                           ;Dimmer_B1.c: 153: else if(lights == 2)
  9680  0D36  0862               	movf	setDimmerLights_Main@lights,w
  9681  0D37  3A02               	xorlw	2
  9682  0D38  1D03               	skipz
  9683  0D39  2D41               	goto	l8446
  9684                           
  9685                           ;Dimmer_B1.c: 154: {
  9686                           ;Dimmer_B1.c: 155: if(!DimmerLights11->Clear)
  9687  0D3A  086C               	movf	_DimmerLights11,w
  9688  0D3B                     L8:	
  9689  0D3B  3E0C               	addlw	12
  9690  0D3C  0086               	movwf	6
  9691  0D3D  3001               	movlw	1	; select bank2/3
  9692  0D3E  0087               	movwf	7
  9693  0D3F  1C01               	btfss	1,0
  9694                           
  9695                           ;Dimmer_B1.c: 156: {
  9696                           ;Dimmer_B1.c: 157: clear=0;
  9697  0D40  01E1               	clrf	setDimmerLights_Main@clear
  9698  0D41                     l8446:	
  9699                           
  9700                           ;Dimmer_B1.c: 158: }
  9701                           ;Dimmer_B1.c: 159: }
  9702                           ;Dimmer_B1.c: 162: if(clear)
  9703  0D41  0861               	movf	setDimmerLights_Main@clear,w
  9704  0D42  1903               	btfsc	3,2
  9705  0D43  0008               	return
  9706                           
  9707                           ;Dimmer_B1.c: 163: {
  9708                           ;Dimmer_B1.c: 164: if(DimmerLights->Switch)
  9709  0D44  086B               	movf	_DimmerLights,w
  9710  0D45  3E09               	addlw	9
  9711  0D46  0086               	movwf	6
  9712  0D47  3001               	movlw	1	; select bank2/3
  9713  0D48  0087               	movwf	7
  9714  0D49  1C01               	btfss	1,0
  9715  0D4A  2D5E               	goto	l8454
  9716                           
  9717                           ;Dimmer_B1.c: 165: {
  9718                           ;Dimmer_B1.c: 166: DimmerLights->Trigger=0;
  9719  0D4B  086B               	movf	_DimmerLights,w
  9720  0D4C  3E09               	addlw	9
  9721  0D4D  0086               	movwf	6
  9722  0D4E  3001               	movlw	1	; select bank2/3
  9723  0D4F  0087               	movwf	7
  9724  0D50  1081               	bcf	1,1
  9725                           
  9726                           ;Dimmer_B1.c: 167: DimmerLights->Clear=0;
  9727  0D51  086B               	movf	_DimmerLights,w
  9728  0D52  3E0C               	addlw	12
  9729  0D53  0086               	movwf	6
  9730  0D54  3001               	movlw	1	; select bank2/3
  9731  0D55  0087               	movwf	7
  9732  0D56  1001               	bcf	1,0
  9733                           
  9734                           ;Dimmer_B1.c: 168: setDimmerLights(lights,1);
  9735  0D57  01A4               	clrf	setDimmerLights@status
  9736  0D58  0AA4               	incf	setDimmerLights@status,f
  9737  0D59  0862               	movf	setDimmerLights_Main@lights,w
  9738  0D5A  318B  23AF         	fcall	_setDimmerLights
  9739                           
  9740                           ;Dimmer_B1.c: 173: }
  9741  0D5C  0020               	movlb	0	; select bank0
  9742  0D5D  0008               	return
  9743  0D5E                     l8454:	
  9744                           
  9745                           ;Dimmer_B1.c: 174: else
  9746                           ;Dimmer_B1.c: 175: {
  9747                           ;Dimmer_B1.c: 176: DimmerLights->Trigger=0;
  9748  0D5E  0020               	movlb	0	; select bank0
  9749  0D5F  086B               	movf	_DimmerLights,w
  9750  0D60  3E09               	addlw	9
  9751  0D61  0086               	movwf	6
  9752  0D62  3001               	movlw	1	; select bank2/3
  9753  0D63  0087               	movwf	7
  9754  0D64  1081               	bcf	1,1
  9755                           
  9756                           ;Dimmer_B1.c: 177: setDimmerLights(lights,0);
  9757  0D65  01A4               	clrf	setDimmerLights@status
  9758  0D66  0862               	movf	setDimmerLights_Main@lights,w
  9759  0D67  318B  23AF         	fcall	_setDimmerLights
  9760  0D69  0020               	movlb	0	; select bank0
  9761  0D6A  0008               	return
  9762  0D6B                     l8458:	
  9763                           ;Dimmer_B1.c: 181: }
  9764                           ;Dimmer_B1.c: 182: }
  9765                           ;Dimmer_B1.c: 183: }
  9766                           
  9767                           
  9768                           ;Dimmer_B1.c: 184: else
  9769                           ;Dimmer_B1.c: 185: {
  9770                           ;Dimmer_B1.c: 186: if(DimmerLights->TriggerAdj)
  9771  0D6B  0020               	movlb	0	; select bank0
  9772  0D6C  086B               	movf	_DimmerLights,w
  9773  0D6D  3E09               	addlw	9
  9774  0D6E  0086               	movwf	6
  9775  0D6F  3001               	movlw	1	; select bank2/3
  9776  0D70  0087               	movwf	7
  9777  0D71  1D81               	btfss	1,3
  9778  0D72  0008               	return
  9779                           
  9780                           ;Dimmer_B1.c: 187: {
  9781                           ;Dimmer_B1.c: 188: if(!getDimmerLights_Trigger())
  9782  0D73  3192  221A  318D   	fcall	_getDimmerLights_Trigger
  9783  0D76  3800               	iorlw	0
  9784  0D77  1903               	btfsc	3,2
  9785  0D78  2D7B               	goto	l8462
  9786  0D79  0020               	movlb	0	; select bank0
  9787  0D7A  0008               	return
  9788  0D7B                     l8462:	
  9789                           
  9790                           ;Dimmer_B1.c: 189: {
  9791                           ;Dimmer_B1.c: 190: DimmerLightsPointSelect(lights);
  9792  0D7B  0020               	movlb	0	; select bank0
  9793  0D7C  0862               	movf	setDimmerLights_Main@lights,w
  9794  0D7D  319F  27ED  318D   	fcall	_DimmerLightsPointSelect
  9795                           
  9796                           ;Dimmer_B1.c: 191: DimmerLights->TriggerAdj=0;
  9797  0D80  0020               	movlb	0	; select bank0
  9798  0D81  086B               	movf	_DimmerLights,w
  9799  0D82  3E09               	addlw	9
  9800  0D83  0086               	movwf	6
  9801  0D84  3001               	movlw	1	; select bank2/3
  9802  0D85  0087               	movwf	7
  9803  0D86  1181               	bcf	1,3
  9804                           
  9805                           ;Dimmer_B1.c: 192: if(DimmerLights->AdjGo)
  9806  0D87  086B               	movf	_DimmerLights,w
  9807  0D88  3E09               	addlw	9
  9808  0D89  0086               	movwf	6
  9809  0D8A  3001               	movlw	1	; select bank2/3
  9810  0D8B  0087               	movwf	7
  9811  0D8C  1D01               	btfss	1,2
  9812  0D8D  2D9E               	goto	l8470
  9813                           
  9814                           ;Dimmer_B1.c: 193: {
  9815                           ;Dimmer_B1.c: 194: setDimmerLights_Adj(lights,1);
  9816  0D8E  01DD               	clrf	setDimmerLights_Adj@status
  9817  0D8F  0ADD               	incf	setDimmerLights_Adj@status,f
  9818  0D90  0862               	movf	setDimmerLights_Main@lights,w
  9819  0D91  3197  27A7  318D   	fcall	_setDimmerLights_Adj
  9820                           
  9821                           ;Dimmer_B1.c: 195: setBuz(1,100);
  9822  0D94  3064               	movlw	100
  9823  0D95  0020               	movlb	0	; select bank0
  9824  0D96  00A6               	movwf	setBuz@time
  9825  0D97  3000               	movlw	0
  9826  0D98  00A7               	movwf	setBuz@time+1
  9827  0D99  3001               	movlw	1
  9828  0D9A  318C  2425         	fcall	_setBuz
  9829                           
  9830                           ;Dimmer_B1.c: 196: }
  9831  0D9C  0020               	movlb	0	; select bank0
  9832  0D9D  0008               	return
  9833  0D9E                     l8470:	
  9834                           
  9835                           ;Dimmer_B1.c: 197: else
  9836                           ;Dimmer_B1.c: 198: {
  9837                           ;Dimmer_B1.c: 199: setDimmerLights_Adj(lights,0);
  9838  0D9E  0020               	movlb	0	; select bank0
  9839  0D9F  01DD               	clrf	setDimmerLights_Adj@status
  9840  0DA0  0862               	movf	setDimmerLights_Main@lights,w
  9841  0DA1  3197  27A7         	fcall	_setDimmerLights_Adj
  9842  0DA3  0020               	movlb	0	; select bank0
  9843  0DA4  0008               	return
  9844  0DA5                     __end_of_setDimmerLights_Main:	
  9845                           
  9846                           	psect	text55
  9847  17A7                     __ptext55:	
  9848 ;; *************** function _setDimmerLights_Adj *****************
  9849 ;; Defined at:
  9850 ;;		line 391 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  lights          1    wreg     unsigned char 
  9853 ;;  status          1   61[BANK0 ] unsigned char 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;  lights          1   64[BANK0 ] unsigned char 
  9856 ;; Return value:  Size  Location     Type
  9857 ;;		None               void
  9858 ;; Registers used:
  9859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9865 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;Total ram usage:        4 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:    7
  9872 ;; This function calls:
  9873 ;;		_DimmerLightsPointSelect
  9874 ;;		_setPercentValue
  9875 ;;		_setRF_DimmerLights
  9876 ;;		_setTxData
  9877 ;; This function is called by:
  9878 ;;		_setDimmerLights_Main
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           
  9883                           ;psect for function _setDimmerLights_Adj
  9884  17A7                     _setDimmerLights_Adj:	
  9885                           
  9886                           ;incstack = 0
  9887                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9888                           ;setDimmerLights_Adj@lights stored from wreg
  9889  17A7  0020               	movlb	0	; select bank0
  9890  17A8  00E0               	movwf	setDimmerLights_Adj@lights
  9891                           
  9892                           ;Dimmer_B1.c: 393: DimmerLightsPointSelect(lights);
  9893  17A9  0860               	movf	setDimmerLights_Adj@lights,w
  9894  17AA  319F  27ED  3197   	fcall	_DimmerLightsPointSelect
  9895                           
  9896                           ;Dimmer_B1.c: 394: if(status)
  9897  17AD  0020               	movlb	0	; select bank0
  9898  17AE  085D               	movf	setDimmerLights_Adj@status,w
  9899  17AF  1903               	btfsc	3,2
  9900  17B0  2FBC               	goto	l8142
  9901                           
  9902                           ;Dimmer_B1.c: 395: {
  9903                           ;Dimmer_B1.c: 396: DimmerLights->AdjFlag=1;
  9904  17B1  086B               	movf	_DimmerLights,w
  9905  17B2  0086               	movwf	6
  9906  17B3  3001               	movlw	1	; select bank2/3
  9907  17B4  0087               	movwf	7
  9908  17B5  1581               	bsf	1,3
  9909                           
  9910                           ;Dimmer_B1.c: 397: DimmerLights->Signal=1;
  9911  17B6  086B               	movf	_DimmerLights,w
  9912  17B7  0086               	movwf	6
  9913  17B8  3001               	movlw	1	; select bank2/3
  9914  17B9  0087               	movwf	7
  9915  17BA  1481               	bsf	1,1
  9916                           
  9917                           ;Dimmer_B1.c: 398: }
  9918  17BB  0008               	return
  9919  17BC                     l8142:	
  9920                           
  9921                           ;Dimmer_B1.c: 399: else
  9922                           ;Dimmer_B1.c: 400: {
  9923                           ;Dimmer_B1.c: 401: if(DimmerLights->AdjFlag)
  9924  17BC  086B               	movf	_DimmerLights,w
  9925  17BD  0086               	movwf	6
  9926  17BE  3001               	movlw	1	; select bank2/3
  9927  17BF  0087               	movwf	7
  9928  17C0  1D81               	btfss	1,3
  9929  17C1  0008               	return
  9930                           
  9931                           ;Dimmer_B1.c: 402: {
  9932                           ;Dimmer_B1.c: 403: DimmerLights->Signal=0;
  9933  17C2  086B               	movf	_DimmerLights,w
  9934  17C3  0086               	movwf	6
  9935  17C4  3001               	movlw	1	; select bank2/3
  9936  17C5  0087               	movwf	7
  9937  17C6  1081               	bcf	1,1
  9938                           
  9939                           ;Dimmer_B1.c: 404: DimmerLights->AdjFlag=0;
  9940  17C7  086B               	movf	_DimmerLights,w
  9941  17C8  0086               	movwf	6
  9942  17C9  3001               	movlw	1	; select bank2/3
  9943  17CA  0087               	movwf	7
  9944  17CB  1181               	bcf	1,3
  9945                           
  9946                           ;Dimmer_B1.c: 405: ;;
  9947                           ;Dimmer_B1.c: 406: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
  9948  17CC  086B               	movf	_DimmerLights,w
  9949  17CD  3E04               	addlw	4
  9950  17CE  0086               	movwf	6
  9951  17CF  3001               	movlw	1	; select bank2/3
  9952  17D0  0087               	movwf	7
  9953  17D1  0801               	movf	1,w
  9954  17D2  00DE               	movwf	??_setDimmerLights_Adj
  9955  17D3  086B               	movf	_DimmerLights,w
  9956  17D4  3E05               	addlw	5
  9957  17D5  0086               	movwf	6
  9958  17D6  3001               	movlw	1	; select bank2/3
  9959  17D7  0087               	movwf	7
  9960  17D8  085E               	movf	??_setDimmerLights_Adj,w
  9961  17D9  0081               	movwf	1
  9962                           
  9963                           ;Dimmer_B1.c: 407: setRF_DimmerLights(lights,1);
  9964  17DA  01A0               	clrf	setRF_DimmerLights@on
  9965  17DB  0AA0               	incf	setRF_DimmerLights@on,f
  9966  17DC  0860               	movf	setDimmerLights_Adj@lights,w
  9967  17DD  3188  2015  3197   	fcall	_setRF_DimmerLights
  9968                           
  9969                           ;Dimmer_B1.c: 408: setTxData(1);
  9970  17E0  3001               	movlw	1
  9971  17E1  3194  2467  3197   	fcall	_setTxData
  9972                           
  9973                           ;Dimmer_B1.c: 409: Memory->Modify=1;
  9974  17E4  087A               	movf	_Memory,w
  9975  17E5  3E22               	addlw	34
  9976  17E6  0086               	movwf	6
  9977  17E7  3001               	movlw	1	; select bank2/3
  9978  17E8  0087               	movwf	7
  9979  17E9  1401               	bsf	1,0
  9980                           
  9981                           ;Dimmer_B1.c: 410: Product->Data[(20+lights)]=setPercentValue(DimmerLights->MaxmumValue)
      +                          ;
  9982  17EA  0020               	movlb	0	; select bank0
  9983  17EB  086B               	movf	_DimmerLights,w
  9984  17EC  3E05               	addlw	5
  9985  17ED  0086               	movwf	6
  9986  17EE  3001               	movlw	1	; select bank2/3
  9987  17EF  0087               	movwf	7
  9988  17F0  0801               	movf	1,w
  9989  17F1  3196  262D         	fcall	_setPercentValue
  9990  17F3  0020               	movlb	0	; select bank0
  9991  17F4  00DE               	movwf	??_setDimmerLights_Adj
  9992  17F5  0860               	movf	setDimmerLights_Adj@lights,w
  9993  17F6  3E14               	addlw	20
  9994  17F7  076E               	addwf	_Product,w
  9995  17F8  00DF               	movwf	??_setDimmerLights_Adj+1
  9996  17F9  085F               	movf	??_setDimmerLights_Adj+1,w
  9997  17FA  0086               	movwf	6
  9998  17FB  3001               	movlw	1	; select bank2/3
  9999  17FC  0087               	movwf	7
 10000  17FD  085E               	movf	??_setDimmerLights_Adj,w
 10001  17FE  0081               	movwf	1
 10002  17FF  0008               	return
 10003  1800                     __end_of_setDimmerLights_Adj:	
 10004                           
 10005                           	psect	text56
 10006  162D                     __ptext56:	
 10007 ;; *************** function _setPercentValue *****************
 10008 ;; Defined at:
 10009 ;;		line 503 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  value           1    wreg     unsigned char 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;  value           1   57[BANK0 ] unsigned char 
 10014 ;;  i               3   58[BANK0 ] float 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      unsigned char 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2, status,0, pclath, cstack
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;Total ram usage:        4 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    6
 10031 ;; This function calls:
 10032 ;;		___awtoft
 10033 ;;		___ftdiv
 10034 ;;		___fttol
 10035 ;; This function is called by:
 10036 ;;		_setDimmerLights_Adj
 10037 ;;		_Flash_Memory_Initialization
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           
 10042                           ;psect for function _setPercentValue
 10043  162D                     _setPercentValue:	
 10044                           
 10045                           ;incstack = 0
 10046                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 10047                           ;setPercentValue@value stored from wreg
 10048  162D  0020               	movlb	0	; select bank0
 10049  162E  00D9               	movwf	setPercentValue@value
 10050                           
 10051                           ;Dimmer_B1.c: 506: float i=((char)((100-20)*1.5))-((char)((100-60)*1.5));
 10052  162F  3000               	movlw	0
 10053  1630  00DA               	movwf	setPercentValue@i
 10054  1631  3070               	movlw	112
 10055  1632  00DB               	movwf	setPercentValue@i+1
 10056  1633  3042               	movlw	66
 10057  1634  00DC               	movwf	setPercentValue@i+2
 10058                           
 10059                           ;Dimmer_B1.c: 507: i/=100;
 10060  1635  3000               	movlw	0
 10061  1636  00AE               	movwf	___ftdiv@f2
 10062  1637  30C8               	movlw	200
 10063  1638  00AF               	movwf	___ftdiv@f2+1
 10064  1639  3042               	movlw	66
 10065  163A  00B0               	movwf	___ftdiv@f2+2
 10066  163B  085A               	movf	setPercentValue@i,w
 10067  163C  00B1               	movwf	___ftdiv@f1
 10068  163D  085B               	movf	setPercentValue@i+1,w
 10069  163E  00B2               	movwf	___ftdiv@f1+1
 10070  163F  085C               	movf	setPercentValue@i+2,w
 10071  1640  00B3               	movwf	___ftdiv@f1+2
 10072  1641  3186  2679  3196   	fcall	___ftdiv
 10073  1644  0020               	movlb	0	; select bank0
 10074  1645  082E               	movf	?___ftdiv,w
 10075  1646  00DA               	movwf	setPercentValue@i
 10076  1647  082F               	movf	?___ftdiv+1,w
 10077  1648  00DB               	movwf	setPercentValue@i+1
 10078  1649  0830               	movf	?___ftdiv+2,w
 10079  164A  00DC               	movwf	setPercentValue@i+2
 10080                           
 10081                           ;Dimmer_B1.c: 508: return (100-(char)((value-((char)((100-60)*1.5)))/i));
 10082  164B  0859               	movf	setPercentValue@value,w
 10083  164C  3EC4               	addlw	196
 10084  164D  00A8               	movwf	___awtoft@c
 10085  164E  30FF               	movlw	255
 10086  164F  1803               	skipnc
 10087  1650  3000               	movlw	0
 10088  1651  00A9               	movwf	___awtoft@c+1
 10089  1652  3192  223B  3196   	fcall	___awtoft
 10090  1655  0020               	movlb	0	; select bank0
 10091  1656  0828               	movf	?___awtoft,w
 10092  1657  00B1               	movwf	___ftdiv@f1
 10093  1658  0829               	movf	?___awtoft+1,w
 10094  1659  00B2               	movwf	___ftdiv@f1+1
 10095  165A  082A               	movf	?___awtoft+2,w
 10096  165B  00B3               	movwf	___ftdiv@f1+2
 10097  165C  085A               	movf	setPercentValue@i,w
 10098  165D  00AE               	movwf	___ftdiv@f2
 10099  165E  085B               	movf	setPercentValue@i+1,w
 10100  165F  00AF               	movwf	___ftdiv@f2+1
 10101  1660  085C               	movf	setPercentValue@i+2,w
 10102  1661  00B0               	movwf	___ftdiv@f2+2
 10103  1662  3186  2679  3196   	fcall	___ftdiv
 10104  1665  0020               	movlb	0	; select bank0
 10105  1666  082E               	movf	?___ftdiv,w
 10106  1667  00CB               	movwf	___fttol@f1
 10107  1668  082F               	movf	?___ftdiv+1,w
 10108  1669  00CC               	movwf	___fttol@f1+1
 10109  166A  0830               	movf	?___ftdiv+2,w
 10110  166B  00CD               	movwf	___fttol@f1+2
 10111  166C  318D  25A5         	fcall	___fttol
 10112  166E  0020               	movlb	0	; select bank0
 10113  166F  034B               	decf	?___fttol,w
 10114  1670  3AFF               	xorlw	255
 10115  1671  3E64               	addlw	100
 10116  1672  0008               	return
 10117  1673                     __end_of_setPercentValue:	
 10118                           
 10119                           	psect	text57
 10120  0BAF                     __ptext57:	
 10121 ;; *************** function _setDimmerLights *****************
 10122 ;; Defined at:
 10123 ;;		line 337 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  lights          1    wreg     unsigned char 
 10126 ;;  status          1    4[BANK0 ] unsigned char 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;  lights          1    6[BANK0 ] unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;		None               void
 10131 ;; Registers used:
 10132 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10138 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;Total ram usage:        3 bytes
 10143 ;; Hardware stack levels used:    1
 10144 ;; Hardware stack levels required when called:    6
 10145 ;; This function calls:
 10146 ;;		_DimmerLightsPointSelect
 10147 ;;		_setDimmer_Detect
 10148 ;;		_setLED
 10149 ;; This function is called by:
 10150 ;;		_setDimmerLights_Main
 10151 ;;		_setControl_Lights_Table
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function _setDimmerLights
 10157  0BAF                     _setDimmerLights:	
 10158                           
 10159                           ;incstack = 0
 10160                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10161                           ;setDimmerLights@lights stored from wreg
 10162  0BAF  0020               	movlb	0	; select bank0
 10163  0BB0  00A6               	movwf	setDimmerLights@lights
 10164                           
 10165                           ;Dimmer_B1.c: 339: DimmerLightsPointSelect(lights);
 10166  0BB1  0826               	movf	setDimmerLights@lights,w
 10167  0BB2  319F  27ED  318B   	fcall	_DimmerLightsPointSelect
 10168                           
 10169                           ;Dimmer_B1.c: 340: Dimmer->Load=lights;
 10170  0BB5  0020               	movlb	0	; select bank0
 10171  0BB6  0826               	movf	setDimmerLights@lights,w
 10172  0BB7  00A5               	movwf	??_setDimmerLights
 10173  0BB8  0A6A               	incf	_Dimmer,w
 10174  0BB9  0086               	movwf	6
 10175  0BBA  0187               	clrf	7
 10176  0BBB  0825               	movf	??_setDimmerLights,w
 10177  0BBC  0081               	movwf	1
 10178                           
 10179                           ;Dimmer_B1.c: 341: if(status)
 10180  0BBD  0824               	movf	setDimmerLights@status,w
 10181  0BBE  1903               	btfsc	3,2
 10182  0BBF  2BF9               	goto	l7842
 10183                           
 10184                           ;Dimmer_B1.c: 342: {
 10185                           ;Dimmer_B1.c: 343: DimmerLights->Status=1;
 10186  0BC0  086B               	movf	_DimmerLights,w
 10187  0BC1  0086               	movwf	6
 10188  0BC2  3001               	movlw	1	; select bank2/3
 10189  0BC3  0087               	movwf	7
 10190  0BC4  1681               	bsf	1,5
 10191                           
 10192                           ;Dimmer_B1.c: 344: setLED(lights,0);
 10193  0BC5  01A2               	clrf	setLED@command
 10194  0BC6  0826               	movf	setDimmerLights@lights,w
 10195  0BC7  3188  20CB  318B   	fcall	_setLED
 10196                           
 10197                           ;Dimmer_B1.c: 346: ;;
 10198                           ;Dimmer_B1.c: 348: DimmerLights->Signal=1;
 10199  0BCA  0020               	movlb	0	; select bank0
 10200  0BCB  086B               	movf	_DimmerLights,w
 10201  0BCC  0086               	movwf	6
 10202  0BCD  3001               	movlw	1	; select bank2/3
 10203  0BCE  0087               	movwf	7
 10204  0BCF  1481               	bsf	1,1
 10205                           
 10206                           ;Dimmer_B1.c: 349: DimmerLights->DimmingTimeValue=3;
 10207  0BD0  3003               	movlw	3
 10208  0BD1  00A5               	movwf	??_setDimmerLights
 10209  0BD2  086B               	movf	_DimmerLights,w
 10210  0BD3  3E02               	addlw	2
 10211  0BD4  0086               	movwf	6
 10212  0BD5  3001               	movlw	1	; select bank2/3
 10213  0BD6  0087               	movwf	7
 10214  0BD7  0825               	movf	??_setDimmerLights,w
 10215  0BD8  0081               	movwf	1
 10216                           
 10217                           ;Dimmer_B1.c: 351: if(!DimmerLights->StatusFlag)
 10218  0BD9  086B               	movf	_DimmerLights,w
 10219  0BDA  0086               	movwf	6
 10220  0BDB  3001               	movlw	1	; select bank2/3
 10221  0BDC  0087               	movwf	7
 10222  0BDD  1B01               	btfsc	1,6
 10223  0BDE  0008               	return
 10224                           
 10225                           ;Dimmer_B1.c: 352: {
 10226                           ;Dimmer_B1.c: 353: DimmerLights->StatusFlag=1;
 10227  0BDF  086B               	movf	_DimmerLights,w
 10228  0BE0  0086               	movwf	6
 10229  0BE1  3001               	movlw	1	; select bank2/3
 10230  0BE2  0087               	movwf	7
 10231  0BE3  1701               	bsf	1,6
 10232                           
 10233                           ;Dimmer_B1.c: 354: setDimmer_Detect(1,1);
 10234  0BE4  01A2               	clrf	setDimmer_Detect@command
 10235  0BE5  0AA2               	incf	setDimmer_Detect@command,f
 10236  0BE6  3001               	movlw	1
 10237  0BE7  319F  2724         	fcall	_setDimmer_Detect
 10238                           
 10239                           ;Dimmer_B1.c: 355: ;;
 10240                           ;Dimmer_B1.c: 358: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 10241  0BE9  0020               	movlb	0	; select bank0
 10242  0BEA  086B               	movf	_DimmerLights,w
 10243  0BEB  3E05               	addlw	5
 10244  0BEC  0086               	movwf	6
 10245  0BED  3001               	movlw	1	; select bank2/3
 10246  0BEE  0087               	movwf	7
 10247  0BEF  0801               	movf	1,w
 10248  0BF0  00A5               	movwf	??_setDimmerLights
 10249  0BF1  086B               	movf	_DimmerLights,w
 10250  0BF2  3E04               	addlw	4
 10251  0BF3  0086               	movwf	6
 10252  0BF4  3001               	movlw	1	; select bank2/3
 10253  0BF5  0087               	movwf	7
 10254  0BF6  0825               	movf	??_setDimmerLights,w
 10255  0BF7  0081               	movwf	1
 10256                           
 10257                           ;Dimmer_B1.c: 360: }
 10258                           ;Dimmer_B1.c: 361: }
 10259  0BF8  0008               	return
 10260  0BF9                     l7842:	
 10261                           
 10262                           ;Dimmer_B1.c: 362: else
 10263                           ;Dimmer_B1.c: 363: {
 10264                           ;Dimmer_B1.c: 364: DimmerLights->Status=0;
 10265  0BF9  086B               	movf	_DimmerLights,w
 10266  0BFA  0086               	movwf	6
 10267  0BFB  3001               	movlw	1	; select bank2/3
 10268  0BFC  0087               	movwf	7
 10269  0BFD  1281               	bcf	1,5
 10270                           
 10271                           ;Dimmer_B1.c: 366: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 10272  0BFE  086B               	movf	_DimmerLights,w
 10273  0BFF  3E06               	addlw	6
 10274  0C00  0086               	movwf	6
 10275  0C01  3001               	movlw	1	; select bank2/3
 10276  0C02  0087               	movwf	7
 10277  0C03  0801               	movf	1,w
 10278  0C04  00A5               	movwf	??_setDimmerLights
 10279  0C05  086B               	movf	_DimmerLights,w
 10280  0C06  3E04               	addlw	4
 10281  0C07  0086               	movwf	6
 10282  0C08  3001               	movlw	1	; select bank2/3
 10283  0C09  0087               	movwf	7
 10284  0C0A  0825               	movf	??_setDimmerLights,w
 10285  0C0B  0081               	movwf	1
 10286                           
 10287                           ;Dimmer_B1.c: 373: DimmerLights->Signal=1;
 10288  0C0C  086B               	movf	_DimmerLights,w
 10289  0C0D  0086               	movwf	6
 10290  0C0E  3001               	movlw	1	; select bank2/3
 10291  0C0F  0087               	movwf	7
 10292  0C10  1481               	bsf	1,1
 10293                           
 10294                           ;Dimmer_B1.c: 374: DimmerLights->AdjFlag=0;
 10295  0C11  086B               	movf	_DimmerLights,w
 10296  0C12  0086               	movwf	6
 10297  0C13  3001               	movlw	1	; select bank2/3
 10298  0C14  0087               	movwf	7
 10299  0C15  1181               	bcf	1,3
 10300                           
 10301                           ;Dimmer_B1.c: 375: DimmerLights->AdjStatus=0;
 10302  0C16  086B               	movf	_DimmerLights,w
 10303  0C17  0086               	movwf	6
 10304  0C18  3001               	movlw	1	; select bank2/3
 10305  0C19  0087               	movwf	7
 10306  0C1A  1201               	bcf	1,4
 10307                           
 10308                           ;Dimmer_B1.c: 376: DimmerLights->DimmingTimeValue=3;
 10309  0C1B  3003               	movlw	3
 10310  0C1C  00A5               	movwf	??_setDimmerLights
 10311  0C1D  086B               	movf	_DimmerLights,w
 10312  0C1E  3E02               	addlw	2
 10313  0C1F  0086               	movwf	6
 10314  0C20  3001               	movlw	1	; select bank2/3
 10315  0C21  0087               	movwf	7
 10316  0C22  0825               	movf	??_setDimmerLights,w
 10317  0C23  0081               	movwf	1
 10318  0C24  0008               	return
 10319  0C25                     __end_of_setDimmerLights:	
 10320                           
 10321                           	psect	text58
 10322  08CB                     __ptext58:	
 10323 ;; *************** function _setLED *****************
 10324 ;; Defined at:
 10325 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  led             1    wreg     unsigned char 
 10328 ;;  command         1    2[BANK0 ] unsigned char 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  led             1    3[BANK0 ] unsigned char 
 10331 ;; Return value:  Size  Location     Type
 10332 ;;		None               void
 10333 ;; Registers used:
 10334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10340 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;Total ram usage:        2 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; Hardware stack levels required when called:    5
 10347 ;; This function calls:
 10348 ;;		_LedPointSelect
 10349 ;; This function is called by:
 10350 ;;		_setDimmerLights
 10351 ;;		_setLED_Initialization
 10352 ;;		_setSw_Initialization
 10353 ;;		_setDimmerLights_ERROR
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           
 10358                           ;psect for function _setLED
 10359  08CB                     _setLED:	
 10360                           
 10361                           ;incstack = 0
 10362                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10363                           ;setLED@led stored from wreg
 10364  08CB  0020               	movlb	0	; select bank0
 10365  08CC  00A3               	movwf	setLED@led
 10366                           
 10367                           ;LED_B1.c: 76: LedPointSelect(led);
 10368  08CD  0823               	movf	setLED@led,w
 10369  08CE  3191  2183  3188   	fcall	_LedPointSelect
 10370                           
 10371                           ;LED_B1.c: 77: if(command == 0)
 10372  08D1  0020               	movlb	0	; select bank0
 10373  08D2  08A2               	movf	setLED@command,f
 10374  08D3  1D03               	skipz
 10375  08D4  28E7               	goto	l7730
 10376                           
 10377                           ;LED_B1.c: 78: {
 10378                           ;LED_B1.c: 80: if(led == 1)
 10379  08D5  0823               	movf	setLED@led,w
 10380  08D6  3A01               	xorlw	1
 10381  08D7  1D03               	skipz
 10382  08D8  28DB               	goto	l7722
 10383                           
 10384                           ;LED_B1.c: 81: {
 10385                           ;LED_B1.c: 85: RC7=1;
 10386  08D9  178E               	bsf	14,7	;volatile
 10387                           
 10388                           ;LED_B1.c: 87: }
 10389  08DA  0008               	return
 10390  08DB                     l7722:	
 10391                           
 10392                           ;LED_B1.c: 90: else if(led == 2)
 10393  08DB  0823               	movf	setLED@led,w
 10394  08DC  3A02               	xorlw	2
 10395  08DD  1D03               	skipz
 10396  08DE  28E1               	goto	l7726
 10397                           
 10398                           ;LED_B1.c: 91: {
 10399                           ;LED_B1.c: 95: RA3=1;
 10400  08DF  158C               	bsf	12,3	;volatile
 10401                           
 10402                           ;LED_B1.c: 97: }
 10403  08E0  0008               	return
 10404  08E1                     l7726:	
 10405                           
 10406                           ;LED_B1.c: 110: else if(led == 99)
 10407  08E1  0823               	movf	setLED@led,w
 10408  08E2  3A63               	xorlw	99
 10409  08E3  1D03               	skipz
 10410  08E4  0008               	return
 10411                           
 10412                           ;LED_B1.c: 111: {
 10413                           ;LED_B1.c: 115: RB5=1;
 10414  08E5  168D               	bsf	13,5	;volatile
 10415                           
 10416                           ;LED_B1.c: 117: }
 10417                           ;LED_B1.c: 119: }
 10418  08E6  0008               	return
 10419  08E7                     l7730:	
 10420                           
 10421                           ;LED_B1.c: 120: else if(command == 1)
 10422  08E7  0822               	movf	setLED@command,w
 10423  08E8  3A01               	xorlw	1
 10424  08E9  1D03               	skipz
 10425  08EA  28FD               	goto	l7744
 10426                           
 10427                           ;LED_B1.c: 121: {
 10428                           ;LED_B1.c: 123: if(led == 1)
 10429  08EB  0823               	movf	setLED@led,w
 10430  08EC  3A01               	xorlw	1
 10431  08ED  1D03               	skipz
 10432  08EE  28F1               	goto	l7736
 10433                           
 10434                           ;LED_B1.c: 124: {
 10435                           ;LED_B1.c: 128: RC7=0;
 10436  08EF  138E               	bcf	14,7	;volatile
 10437                           
 10438                           ;LED_B1.c: 130: }
 10439  08F0  0008               	return
 10440  08F1                     l7736:	
 10441                           
 10442                           ;LED_B1.c: 133: else if(led == 2)
 10443  08F1  0823               	movf	setLED@led,w
 10444  08F2  3A02               	xorlw	2
 10445  08F3  1D03               	skipz
 10446  08F4  28F7               	goto	l7740
 10447                           
 10448                           ;LED_B1.c: 134: {
 10449                           ;LED_B1.c: 138: RA3=0;
 10450  08F5  118C               	bcf	12,3	;volatile
 10451                           
 10452                           ;LED_B1.c: 140: }
 10453  08F6  0008               	return
 10454  08F7                     l7740:	
 10455                           
 10456                           ;LED_B1.c: 153: else if(led == 99)
 10457  08F7  0823               	movf	setLED@led,w
 10458  08F8  3A63               	xorlw	99
 10459  08F9  1D03               	skipz
 10460  08FA  0008               	return
 10461                           
 10462                           ;LED_B1.c: 154: {
 10463                           ;LED_B1.c: 158: RB5=0;
 10464  08FB  128D               	bcf	13,5	;volatile
 10465                           
 10466                           ;LED_B1.c: 160: }
 10467                           ;LED_B1.c: 162: }
 10468  08FC  0008               	return
 10469  08FD                     l7744:	
 10470                           
 10471                           ;LED_B1.c: 163: else if(command == 10)
 10472  08FD  0822               	movf	setLED@command,w
 10473  08FE  3A0A               	xorlw	10
 10474  08FF  1D03               	skipz
 10475  0900  291D               	goto	l7760
 10476                           
 10477                           ;LED_B1.c: 164: {
 10478                           ;LED_B1.c: 165: LED->GO=0;
 10479  0901  0878               	movf	_LED,w
 10480  0902  0086               	movwf	6
 10481  0903  0187               	clrf	7
 10482  0904  1081               	bcf	1,1
 10483                           
 10484                           ;LED_B1.c: 166: LED->Time=0;
 10485  0905  0A78               	incf	_LED,w
 10486  0906  0086               	movwf	6
 10487  0907  0187               	clrf	7
 10488  0908  3000               	movlw	0
 10489  0909  3FC0               	movwi [0]fsr1
 10490  090A  3FC1               	movwi [1]fsr1
 10491                           
 10492                           ;LED_B1.c: 168: if(led == 1)
 10493  090B  0823               	movf	setLED@led,w
 10494  090C  3A01               	xorlw	1
 10495  090D  1D03               	skipz
 10496  090E  2911               	goto	l7752
 10497                           
 10498                           ;LED_B1.c: 169: {
 10499                           ;LED_B1.c: 173: RC7=1;
 10500  090F  178E               	bsf	14,7	;volatile
 10501                           
 10502                           ;LED_B1.c: 175: }
 10503  0910  0008               	return
 10504  0911                     l7752:	
 10505                           
 10506                           ;LED_B1.c: 178: else if(led == 2)
 10507  0911  0823               	movf	setLED@led,w
 10508  0912  3A02               	xorlw	2
 10509  0913  1D03               	skipz
 10510  0914  2917               	goto	l7756
 10511                           
 10512                           ;LED_B1.c: 179: {
 10513                           ;LED_B1.c: 183: RA3=1;
 10514  0915  158C               	bsf	12,3	;volatile
 10515                           
 10516                           ;LED_B1.c: 185: }
 10517  0916  0008               	return
 10518  0917                     l7756:	
 10519                           
 10520                           ;LED_B1.c: 198: else if(led == 99)
 10521  0917  0823               	movf	setLED@led,w
 10522  0918  3A63               	xorlw	99
 10523  0919  1D03               	skipz
 10524  091A  0008               	return
 10525                           
 10526                           ;LED_B1.c: 199: {
 10527                           ;LED_B1.c: 203: RB5=1;
 10528  091B  168D               	bsf	13,5	;volatile
 10529                           
 10530                           ;LED_B1.c: 205: }
 10531                           ;LED_B1.c: 207: }
 10532  091C  0008               	return
 10533  091D                     l7760:	
 10534                           
 10535                           ;LED_B1.c: 208: else if(command == 11)
 10536  091D  0822               	movf	setLED@command,w
 10537  091E  3A0B               	xorlw	11
 10538  091F  1D03               	skipz
 10539  0920  0008               	return
 10540                           
 10541                           ;LED_B1.c: 209: {
 10542                           ;LED_B1.c: 210: LED->GO=1;
 10543  0921  0878               	movf	_LED,w
 10544  0922  0086               	movwf	6
 10545  0923  0187               	clrf	7
 10546  0924  1481               	bsf	1,1
 10547  0925  0008               	return
 10548  0926                     __end_of_setLED:	
 10549                           
 10550                           	psect	text59
 10551  1183                     __ptext59:	
 10552 ;; *************** function _LedPointSelect *****************
 10553 ;; Defined at:
 10554 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;  led             1    wreg     unsigned char 
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;  led             1    1[BANK0 ] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;		None               void
 10561 ;; Registers used:
 10562 ;;		wreg
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10570 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10571 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;Total ram usage:        2 bytes
 10573 ;; Hardware stack levels used:    1
 10574 ;; Hardware stack levels required when called:    4
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_setLED_Initialization
 10579 ;;		_setLED
 10580 ;;		_setLED_Main
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           
 10585                           ;psect for function _LedPointSelect
 10586  1183                     _LedPointSelect:	
 10587                           
 10588                           ;incstack = 0
 10589                           ; Regs used in _LedPointSelect: [wreg]
 10590                           ;LedPointSelect@led stored from wreg
 10591  1183  0020               	movlb	0	; select bank0
 10592  1184  00A1               	movwf	LedPointSelect@led
 10593                           
 10594                           ;LED_B1.c: 10: if(led == 1)
 10595  1185  0821               	movf	LedPointSelect@led,w
 10596  1186  3A01               	xorlw	1
 10597  1187  1D03               	skipz
 10598  1188  298E               	goto	l7590
 10599                           
 10600                           ;LED_B1.c: 11: {
 10601                           ;LED_B1.c: 12: LED=&VarLED1;
 10602  1189  30DF               	movlw	_VarLED1& (0+255)
 10603  118A  00A0               	movwf	??_LedPointSelect
 10604  118B  0820               	movf	??_LedPointSelect,w
 10605  118C  00F8               	movwf	_LED
 10606                           
 10607                           ;LED_B1.c: 13: }
 10608  118D  0008               	return
 10609  118E                     l7590:	
 10610                           
 10611                           ;LED_B1.c: 16: else if(led == 2)
 10612  118E  0821               	movf	LedPointSelect@led,w
 10613  118F  3A02               	xorlw	2
 10614  1190  1D03               	skipz
 10615  1191  2997               	goto	l7594
 10616                           
 10617                           ;LED_B1.c: 17: {
 10618                           ;LED_B1.c: 18: LED=&VarLED2;
 10619  1192  30E3               	movlw	_VarLED2& (0+255)
 10620  1193  00A0               	movwf	??_LedPointSelect
 10621  1194  0820               	movf	??_LedPointSelect,w
 10622  1195  00F8               	movwf	_LED
 10623                           
 10624                           ;LED_B1.c: 19: }
 10625  1196  0008               	return
 10626  1197                     l7594:	
 10627                           
 10628                           ;LED_B1.c: 28: else if(led == 99)
 10629  1197  0821               	movf	LedPointSelect@led,w
 10630  1198  3A63               	xorlw	99
 10631  1199  1D03               	skipz
 10632  119A  0008               	return
 10633                           
 10634                           ;LED_B1.c: 29: {
 10635                           ;LED_B1.c: 30: LED=&VarErrLED;
 10636  119B  30DB               	movlw	_VarErrLED& (0+255)
 10637  119C  00A0               	movwf	??_LedPointSelect
 10638  119D  0820               	movf	??_LedPointSelect,w
 10639  119E  00F8               	movwf	_LED
 10640  119F  0008               	return
 10641  11A0                     __end_of_LedPointSelect:	
 10642                           
 10643                           	psect	text60
 10644  121A                     __ptext60:	
 10645 ;; *************** function _getDimmerLights_Trigger *****************
 10646 ;; Defined at:
 10647 ;;		line 231 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10648 ;; Parameters:    Size  Location     Type
 10649 ;;		None
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;  i               1    5[BANK0 ] unsigned char 
 10652 ;;  Status          1    4[BANK0 ] unsigned char 
 10653 ;;  length          1    3[BANK0 ] unsigned char 
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  1    wreg      unsigned char 
 10656 ;; Registers used:
 10657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;Total ram usage:        4 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:    5
 10670 ;; This function calls:
 10671 ;;		_DimmerLightsPointSelect
 10672 ;; This function is called by:
 10673 ;;		_setDimmerLights_Main
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           
 10678                           ;psect for function _getDimmerLights_Trigger
 10679  121A                     _getDimmerLights_Trigger:	
 10680                           
 10681                           ;Dimmer_B1.c: 233: char Status=0,i,length;
 10682                           
 10683                           ;incstack = 0
 10684                           ; Regs used in _getDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10685  121A  0020               	movlb	0	; select bank0
 10686  121B  01A4               	clrf	getDimmerLights_Trigger@Status
 10687                           
 10688                           ;Dimmer_B1.c: 238: length=2;
 10689  121C  3002               	movlw	2
 10690  121D  00A2               	movwf	??_getDimmerLights_Trigger
 10691  121E  0822               	movf	??_getDimmerLights_Trigger,w
 10692  121F  00A3               	movwf	getDimmerLights_Trigger@length
 10693                           
 10694                           ;Dimmer_B1.c: 244: for(i=0 ; i<length ; i++)
 10695  1220  01A5               	clrf	getDimmerLights_Trigger@i
 10696  1221                     l8130:	
 10697  1221  0823               	movf	getDimmerLights_Trigger@length,w
 10698  1222  0225               	subwf	getDimmerLights_Trigger@i,w
 10699  1223  1803               	btfsc	3,0
 10700  1224  2A39               	goto	l8132
 10701                           
 10702                           ;Dimmer_B1.c: 245: {
 10703                           ;Dimmer_B1.c: 246: DimmerLightsPointSelect(i+1);
 10704  1225  0825               	movf	getDimmerLights_Trigger@i,w
 10705  1226  3E01               	addlw	1
 10706  1227  319F  27ED  3192   	fcall	_DimmerLightsPointSelect
 10707                           
 10708                           ;Dimmer_B1.c: 247: if(DimmerLights->Trigger)
 10709  122A  0020               	movlb	0	; select bank0
 10710  122B  086B               	movf	_DimmerLights,w
 10711  122C  3E09               	addlw	9
 10712  122D  0086               	movwf	6
 10713  122E  3001               	movlw	1	; select bank2/3
 10714  122F  0087               	movwf	7
 10715  1230  1C81               	btfss	1,1
 10716  1231  2A34               	goto	l8128
 10717                           
 10718                           ;Dimmer_B1.c: 248: {
 10719                           ;Dimmer_B1.c: 249: Status=1;
 10720  1232  01A4               	clrf	getDimmerLights_Trigger@Status
 10721  1233  0AA4               	incf	getDimmerLights_Trigger@Status,f
 10722  1234                     l8128:	
 10723  1234  3001               	movlw	1
 10724  1235  00A2               	movwf	??_getDimmerLights_Trigger
 10725  1236  0822               	movf	??_getDimmerLights_Trigger,w
 10726  1237  07A5               	addwf	getDimmerLights_Trigger@i,f
 10727  1238  2A21               	goto	l8130
 10728  1239                     l8132:	
 10729                           
 10730                           ;Dimmer_B1.c: 250: }
 10731                           ;Dimmer_B1.c: 251: }
 10732                           ;Dimmer_B1.c: 252: return Status;
 10733  1239  0824               	movf	getDimmerLights_Trigger@Status,w
 10734  123A  0008               	return
 10735  123B                     __end_of_getDimmerLights_Trigger:	
 10736                           
 10737                           	psect	text61
 10738  114E                     __ptext61:	
 10739 ;; *************** function _DimmerLights_Close *****************
 10740 ;; Defined at:
 10741 ;;		line 85 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;		None
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;		None               void
 10748 ;; Registers used:
 10749 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;Total ram usage:        0 bytes
 10760 ;; Hardware stack levels used:    1
 10761 ;; Hardware stack levels required when called:    6
 10762 ;; This function calls:
 10763 ;;		_getDimmerLights_StatusFlag
 10764 ;;		_getDimmer_Detect
 10765 ;;		_setDimmer_Detect
 10766 ;; This function is called by:
 10767 ;;		_DimmerLights_Main
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           
 10772                           ;psect for function _DimmerLights_Close
 10773  114E                     _DimmerLights_Close:	
 10774                           
 10775                           ;Dimmer_B1.c: 87: if(getDimmer_Detect(1))
 10776                           
 10777                           ;incstack = 0
 10778                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10779  114E  3001               	movlw	1
 10780  114F  319F  276C  3191   	fcall	_getDimmer_Detect
 10781  1152  3A00               	xorlw	0
 10782  1153  1903               	skipnz
 10783  1154  0008               	return
 10784                           
 10785                           ;Dimmer_B1.c: 88: {
 10786                           ;Dimmer_B1.c: 89: setDimmer_Detect(1,0);
 10787  1155  0020               	movlb	0	; select bank0
 10788  1156  01A2               	clrf	setDimmer_Detect@command
 10789  1157  3001               	movlw	1
 10790  1158  319F  2724  3191   	fcall	_setDimmer_Detect
 10791                           
 10792                           ;Dimmer_B1.c: 90: if(!getDimmerLights_StatusFlag())
 10793  115B  3191  21FA  3191   	fcall	_getDimmerLights_StatusFlag
 10794  115E  3800               	iorlw	0
 10795  115F  1D03               	skipz
 10796  1160  0008               	return
 10797                           
 10798                           ;Dimmer_B1.c: 91: {
 10799                           ;Dimmer_B1.c: 92: ;;
 10800                           ;Dimmer_B1.c: 93: Memory->GO=1;
 10801  1161  087A               	movf	_Memory,w
 10802  1162  3E22               	addlw	34
 10803  1163  0086               	movwf	6
 10804  1164  3001               	movlw	1	; select bank2/3
 10805  1165  0087               	movwf	7
 10806  1166  1481               	bsf	1,1
 10807  1167  0008               	return
 10808  1168                     __end_of_DimmerLights_Close:	
 10809                           
 10810                           	psect	text62
 10811  1F24                     __ptext62:	
 10812 ;; *************** function _setDimmer_Detect *****************
 10813 ;; Defined at:
 10814 ;;		line 543 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  dimmer          1    wreg     unsigned char 
 10817 ;;  command         1    2[BANK0 ] unsigned char 
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;  dimmer          1    3[BANK0 ] unsigned char 
 10820 ;; Return value:  Size  Location     Type
 10821 ;;		None               void
 10822 ;; Registers used:
 10823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10829 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10833 ;;Total ram usage:        2 bytes
 10834 ;; Hardware stack levels used:    1
 10835 ;; Hardware stack levels required when called:    5
 10836 ;; This function calls:
 10837 ;;		_DimmerPointSelect
 10838 ;; This function is called by:
 10839 ;;		_DimmerLights_Close
 10840 ;;		_setDimmerLights
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           
 10844                           
 10845                           ;psect for function _setDimmer_Detect
 10846  1F24                     _setDimmer_Detect:	
 10847                           
 10848                           ;incstack = 0
 10849                           ; Regs used in _setDimmer_Detect: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10850                           ;setDimmer_Detect@dimmer stored from wreg
 10851  1F24  0020               	movlb	0	; select bank0
 10852  1F25  00A3               	movwf	setDimmer_Detect@dimmer
 10853                           
 10854                           ;Dimmer_B1.c: 545: DimmerPointSelect(dimmer);
 10855  1F26  0823               	movf	setDimmer_Detect@dimmer,w
 10856  1F27  319E  269F         	fcall	_DimmerPointSelect
 10857                           
 10858                           ;Dimmer_B1.c: 546: Dimmer->Detect=command;
 10859  1F29  0020               	movlb	0	; select bank0
 10860  1F2A  086A               	movf	_Dimmer,w
 10861  1F2B  0086               	movwf	6
 10862  1F2C  0187               	clrf	7
 10863  1F2D  0822               	movf	setDimmer_Detect@command,w
 10864  1F2E  1181               	bcf	1,3
 10865  1F2F  1D03               	skipz
 10866  1F30  1581               	bsf	1,3
 10867  1F31  0008               	return
 10868  1F32                     __end_of_setDimmer_Detect:	
 10869                           
 10870                           	psect	text63
 10871  1F6C                     __ptext63:	
 10872 ;; *************** function _getDimmer_Detect *****************
 10873 ;; Defined at:
 10874 ;;		line 563 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;  dimmer          1    wreg     unsigned char 
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;  dimmer          1    3[BANK0 ] unsigned char 
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  1    wreg      unsigned char 
 10881 ;; Registers used:
 10882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10892 ;;Total ram usage:        2 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; Hardware stack levels required when called:    5
 10895 ;; This function calls:
 10896 ;;		_DimmerPointSelect
 10897 ;; This function is called by:
 10898 ;;		_DimmerLights_Close
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           
 10902                           
 10903                           ;psect for function _getDimmer_Detect
 10904  1F6C                     _getDimmer_Detect:	
 10905                           
 10906                           ;incstack = 0
 10907                           ; Regs used in _getDimmer_Detect: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10908                           ;getDimmer_Detect@dimmer stored from wreg
 10909  1F6C  0020               	movlb	0	; select bank0
 10910  1F6D  00A3               	movwf	getDimmer_Detect@dimmer
 10911                           
 10912                           ;Dimmer_B1.c: 565: DimmerPointSelect(dimmer);
 10913  1F6E  0823               	movf	getDimmer_Detect@dimmer,w
 10914  1F6F  319E  269F         	fcall	_DimmerPointSelect
 10915                           
 10916                           ;Dimmer_B1.c: 566: return Dimmer->Detect;
 10917  1F71  0020               	movlb	0	; select bank0
 10918  1F72  086A               	movf	_Dimmer,w
 10919  1F73  0086               	movwf	6
 10920  1F74  0187               	clrf	7
 10921  1F75  0C01               	rrf	1,w
 10922  1F76  00A2               	movwf	??_getDimmer_Detect
 10923  1F77  0CA2               	rrf	??_getDimmer_Detect,f
 10924  1F78  0C22               	rrf	??_getDimmer_Detect,w
 10925  1F79  3901               	andlw	1
 10926  1F7A  0008               	return
 10927  1F7B                     __end_of_getDimmer_Detect:	
 10928                           
 10929                           	psect	text64
 10930  1E9F                     __ptext64:	
 10931 ;; *************** function _DimmerPointSelect *****************
 10932 ;; Defined at:
 10933 ;;		line 518 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;  dimmer          1    wreg     unsigned char 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  dimmer          1    1[BANK0 ] unsigned char 
 10938 ;; Return value:  Size  Location     Type
 10939 ;;		None               void
 10940 ;; Registers used:
 10941 ;;		wreg
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;Total ram usage:        2 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:    4
 10954 ;; This function calls:
 10955 ;;		Nothing
 10956 ;; This function is called by:
 10957 ;;		_setDimmer_Detect
 10958 ;;		_getDimmer_Detect
 10959 ;;		_setDimmer_TempERROR
 10960 ;;		_setDimmer_LoadERROR
 10961 ;;		_setDimmer_PFERROR
 10962 ;;		_getDimmer_TempERROR
 10963 ;;		_getDimmer_LoadERROR
 10964 ;;		_getDimmer_PFERROR
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           
 10969                           ;psect for function _DimmerPointSelect
 10970  1E9F                     _DimmerPointSelect:	
 10971                           
 10972                           ;incstack = 0
 10973                           ; Regs used in _DimmerPointSelect: [wreg]
 10974                           ;DimmerPointSelect@dimmer stored from wreg
 10975  1E9F  0020               	movlb	0	; select bank0
 10976  1EA0  00A1               	movwf	DimmerPointSelect@dimmer
 10977                           
 10978                           ;Dimmer_B1.c: 522: if(dimmer == 1)
 10979  1EA1  0821               	movf	DimmerPointSelect@dimmer,w
 10980  1EA2  3A01               	xorlw	1
 10981  1EA3  1D03               	skipz
 10982  1EA4  0008               	return
 10983                           
 10984                           ;Dimmer_B1.c: 523: {
 10985                           ;Dimmer_B1.c: 524: Dimmer=&Dimmer1;
 10986  1EA5  30E7               	movlw	_Dimmer1& (0+255)
 10987  1EA6  00A0               	movwf	??_DimmerPointSelect
 10988  1EA7  0820               	movf	??_DimmerPointSelect,w
 10989  1EA8  00EA               	movwf	_Dimmer
 10990  1EA9  0008               	return
 10991  1EAA                     __end_of_DimmerPointSelect:	
 10992                           
 10993                           	psect	text65
 10994  11FA                     __ptext65:	
 10995 ;; *************** function _getDimmerLights_StatusFlag *****************
 10996 ;; Defined at:
 10997 ;;		line 206 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;  i               1    5[BANK0 ] unsigned char 
 11002 ;;  Status          1    4[BANK0 ] unsigned char 
 11003 ;;  length          1    3[BANK0 ] unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  1    wreg      unsigned char 
 11006 ;; Registers used:
 11007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;Total ram usage:        4 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:    5
 11020 ;; This function calls:
 11021 ;;		_DimmerLightsPointSelect
 11022 ;; This function is called by:
 11023 ;;		_DimmerLights_Close
 11024 ;;		_DimmerLights_ERROR
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           
 11029                           ;psect for function _getDimmerLights_StatusFlag
 11030  11FA                     _getDimmerLights_StatusFlag:	
 11031                           
 11032                           ;Dimmer_B1.c: 208: char Status=0,i,length;
 11033                           
 11034                           ;incstack = 0
 11035                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11036  11FA  0020               	movlb	0	; select bank0
 11037  11FB  01A4               	clrf	getDimmerLights_StatusFlag@Status
 11038                           
 11039                           ;Dimmer_B1.c: 213: length=2;
 11040  11FC  3002               	movlw	2
 11041  11FD  00A2               	movwf	??_getDimmerLights_StatusFlag
 11042  11FE  0822               	movf	??_getDimmerLights_StatusFlag,w
 11043  11FF  00A3               	movwf	getDimmerLights_StatusFlag@length
 11044                           
 11045                           ;Dimmer_B1.c: 220: for(i=0 ; i<length ; i++)
 11046  1200  01A5               	clrf	getDimmerLights_StatusFlag@i
 11047  1201                     l8110:	
 11048  1201  0823               	movf	getDimmerLights_StatusFlag@length,w
 11049  1202  0225               	subwf	getDimmerLights_StatusFlag@i,w
 11050  1203  1803               	btfsc	3,0
 11051  1204  2A18               	goto	l8112
 11052                           
 11053                           ;Dimmer_B1.c: 221: {
 11054                           ;Dimmer_B1.c: 222: DimmerLightsPointSelect(i+1);
 11055  1205  0825               	movf	getDimmerLights_StatusFlag@i,w
 11056  1206  3E01               	addlw	1
 11057  1207  319F  27ED  3191   	fcall	_DimmerLightsPointSelect
 11058                           
 11059                           ;Dimmer_B1.c: 223: if(DimmerLights->StatusFlag)
 11060  120A  0020               	movlb	0	; select bank0
 11061  120B  086B               	movf	_DimmerLights,w
 11062  120C  0086               	movwf	6
 11063  120D  3001               	movlw	1	; select bank2/3
 11064  120E  0087               	movwf	7
 11065  120F  1F01               	btfss	1,6
 11066  1210  2A13               	goto	l8108
 11067                           
 11068                           ;Dimmer_B1.c: 224: {
 11069                           ;Dimmer_B1.c: 225: Status=1;
 11070  1211  01A4               	clrf	getDimmerLights_StatusFlag@Status
 11071  1212  0AA4               	incf	getDimmerLights_StatusFlag@Status,f
 11072  1213                     l8108:	
 11073  1213  3001               	movlw	1
 11074  1214  00A2               	movwf	??_getDimmerLights_StatusFlag
 11075  1215  0822               	movf	??_getDimmerLights_StatusFlag,w
 11076  1216  07A5               	addwf	getDimmerLights_StatusFlag@i,f
 11077  1217  2A01               	goto	l8110
 11078  1218                     l8112:	
 11079                           
 11080                           ;Dimmer_B1.c: 226: }
 11081                           ;Dimmer_B1.c: 227: }
 11082                           ;Dimmer_B1.c: 228: return Status;
 11083  1218  0824               	movf	getDimmerLights_StatusFlag@Status,w
 11084  1219  0008               	return
 11085  121A                     __end_of_getDimmerLights_StatusFlag:	
 11086                           
 11087                           	psect	text66
 11088  1FDB                     __ptext66:	
 11089 ;; *************** function _DimmerLights_Initialization *****************
 11090 ;; Defined at:
 11091 ;;		line 32 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 11092 ;; Parameters:    Size  Location     Type
 11093 ;;		None
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;		None
 11096 ;; Return value:  Size  Location     Type
 11097 ;;		None               void
 11098 ;; Registers used:
 11099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11107 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;Total ram usage:        1 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:    8
 11112 ;; This function calls:
 11113 ;;		_setDimmerLights_Initialization
 11114 ;; This function is called by:
 11115 ;;		_main
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           
 11120                           ;psect for function _DimmerLights_Initialization
 11121  1FDB                     _DimmerLights_Initialization:	
 11122                           
 11123                           ;Dimmer_B1.c: 35: DimmerLights11=&DimmerLights1;
 11124                           
 11125                           ;incstack = 0
 11126                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11127  1FDB  3030               	movlw	_DimmerLights1& (0+255)
 11128  1FDC  0020               	movlb	0	; select bank0
 11129  1FDD  00E2               	movwf	??_DimmerLights_Initialization
 11130  1FDE  0862               	movf	??_DimmerLights_Initialization,w
 11131  1FDF  00EC               	movwf	_DimmerLights11
 11132                           
 11133                           ;Dimmer_B1.c: 36: setDimmerLights_Initialization(1);
 11134  1FE0  3001               	movlw	1
 11135  1FE1  3195  2521  319F   	fcall	_setDimmerLights_Initialization
 11136                           
 11137                           ;Dimmer_B1.c: 40: DimmerLights22=&DimmerLights2;
 11138  1FE4  303D               	movlw	_DimmerLights2& (0+255)
 11139  1FE5  0020               	movlb	0	; select bank0
 11140  1FE6  00E2               	movwf	??_DimmerLights_Initialization
 11141  1FE7  0862               	movf	??_DimmerLights_Initialization,w
 11142  1FE8  00ED               	movwf	_DimmerLights22
 11143                           
 11144                           ;Dimmer_B1.c: 41: setDimmerLights_Initialization(2);
 11145  1FE9  3002               	movlw	2
 11146  1FEA  3195  2521         	fcall	_setDimmerLights_Initialization
 11147  1FEC  0008               	return
 11148  1FED                     __end_of_DimmerLights_Initialization:	
 11149                           
 11150                           	psect	text67
 11151  1521                     __ptext67:	
 11152 ;; *************** function _setDimmerLights_Initialization *****************
 11153 ;; Defined at:
 11154 ;;		line 49 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;  lights          1    wreg     unsigned char 
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;  lights          1   65[BANK0 ] unsigned char 
 11159 ;; Return value:  Size  Location     Type
 11160 ;;		None               void
 11161 ;; Registers used:
 11162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11169 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;Total ram usage:        3 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    7
 11175 ;; This function calls:
 11176 ;;		_DimmerLightsPointSelect
 11177 ;;		_getPercentValue
 11178 ;; This function is called by:
 11179 ;;		_DimmerLights_Initialization
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           
 11184                           ;psect for function _setDimmerLights_Initialization
 11185  1521                     _setDimmerLights_Initialization:	
 11186                           
 11187                           ;incstack = 0
 11188                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 11189                           ;setDimmerLights_Initialization@lights stored from wreg
 11190  1521  0020               	movlb	0	; select bank0
 11191  1522  00E1               	movwf	setDimmerLights_Initialization@lights
 11192                           
 11193                           ;Dimmer_B1.c: 51: DimmerLightsPointSelect(lights);
 11194  1523  0861               	movf	setDimmerLights_Initialization@lights,w
 11195  1524  319F  27ED  3195   	fcall	_DimmerLightsPointSelect
 11196                           
 11197                           ;Dimmer_B1.c: 53: DimmerLights->MaxmumValue=((char)((100-60)*1.5));
 11198  1527  303C               	movlw	60
 11199  1528  0020               	movlb	0	; select bank0
 11200  1529  00DF               	movwf	??_setDimmerLights_Initialization
 11201  152A  086B               	movf	_DimmerLights,w
 11202  152B  3E05               	addlw	5
 11203  152C  0086               	movwf	6
 11204  152D  3001               	movlw	1	; select bank2/3
 11205  152E  0087               	movwf	7
 11206  152F  085F               	movf	??_setDimmerLights_Initialization,w
 11207  1530  0081               	movwf	1
 11208                           
 11209                           ;Dimmer_B1.c: 54: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 11210  1531  3078               	movlw	120
 11211  1532  00DF               	movwf	??_setDimmerLights_Initialization
 11212  1533  086B               	movf	_DimmerLights,w
 11213  1534  3E06               	addlw	6
 11214  1535  0086               	movwf	6
 11215  1536  3001               	movlw	1	; select bank2/3
 11216  1537  0087               	movwf	7
 11217  1538  085F               	movf	??_setDimmerLights_Initialization,w
 11218  1539  0081               	movwf	1
 11219                           
 11220                           ;Dimmer_B1.c: 55: DimmerLights->Clear=1;
 11221  153A  086B               	movf	_DimmerLights,w
 11222  153B  3E0C               	addlw	12
 11223  153C  0086               	movwf	6
 11224  153D  3001               	movlw	1	; select bank2/3
 11225  153E  0087               	movwf	7
 11226  153F  1401               	bsf	1,0
 11227                           
 11228                           ;Dimmer_B1.c: 61: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 11229  1540  086B               	movf	_DimmerLights,w
 11230  1541  3E06               	addlw	6
 11231  1542  0086               	movwf	6
 11232  1543  3001               	movlw	1	; select bank2/3
 11233  1544  0087               	movwf	7
 11234  1545  0801               	movf	1,w
 11235  1546  00DF               	movwf	??_setDimmerLights_Initialization
 11236  1547  086B               	movf	_DimmerLights,w
 11237  1548  3E04               	addlw	4
 11238  1549  0086               	movwf	6
 11239  154A  3001               	movlw	1	; select bank2/3
 11240  154B  0087               	movwf	7
 11241  154C  085F               	movf	??_setDimmerLights_Initialization,w
 11242  154D  0081               	movwf	1
 11243                           
 11244                           ;Dimmer_B1.c: 79: DimmerLights->MaxmumValue=getPercentValue(Product->Data[(20+lights)]);
 11245  154E  0861               	movf	setDimmerLights_Initialization@lights,w
 11246  154F  3E14               	addlw	20
 11247  1550  076E               	addwf	_Product,w
 11248  1551  00DF               	movwf	??_setDimmerLights_Initialization
 11249  1552  085F               	movf	??_setDimmerLights_Initialization,w
 11250  1553  0086               	movwf	6
 11251  1554  3001               	movlw	1	; select bank2/3
 11252  1555  0087               	movwf	7
 11253  1556  0801               	movf	1,w
 11254  1557  3188  2070         	fcall	_getPercentValue
 11255  1559  0020               	movlb	0	; select bank0
 11256  155A  00E0               	movwf	??_setDimmerLights_Initialization+1
 11257  155B  086B               	movf	_DimmerLights,w
 11258  155C  3E05               	addlw	5
 11259  155D  0086               	movwf	6
 11260  155E  3001               	movlw	1	; select bank2/3
 11261  155F  0087               	movwf	7
 11262  1560  0860               	movf	??_setDimmerLights_Initialization+1,w
 11263  1561  0081               	movwf	1
 11264  1562  0008               	return
 11265  1563                     __end_of_setDimmerLights_Initialization:	
 11266                           
 11267                           	psect	text68
 11268  0870                     __ptext68:	
 11269 ;; *************** function _getPercentValue *****************
 11270 ;; Defined at:
 11271 ;;		line 488 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;  value           1    wreg     unsigned char 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;  value           1   59[BANK0 ] unsigned char 
 11276 ;;  i               3   60[BANK0 ] float 
 11277 ;; Return value:  Size  Location     Type
 11278 ;;                  1    wreg      unsigned char 
 11279 ;; Registers used:
 11280 ;;		wreg, status,2, status,0, pclath, cstack
 11281 ;; Tracked objects:
 11282 ;;		On entry : 0/0
 11283 ;;		On exit  : 0/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11287 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11288 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11289 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;Total ram usage:        6 bytes
 11291 ;; Hardware stack levels used:    1
 11292 ;; Hardware stack levels required when called:    6
 11293 ;; This function calls:
 11294 ;;		___awtoft
 11295 ;;		___ftadd
 11296 ;;		___ftdiv
 11297 ;;		___ftmul
 11298 ;;		___fttol
 11299 ;; This function is called by:
 11300 ;;		_setDimmerLights_Initialization
 11301 ;;		_setDimmerLights_AdjRF
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           
 11306                           ;psect for function _getPercentValue
 11307  0870                     _getPercentValue:	
 11308                           
 11309                           ;incstack = 0
 11310                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
 11311                           ;getPercentValue@value stored from wreg
 11312  0870  0020               	movlb	0	; select bank0
 11313  0871  00DB               	movwf	getPercentValue@value
 11314                           
 11315                           ;Dimmer_B1.c: 491: float i=((char)((100-20)*1.5))-((char)((100-60)*1.5));
 11316  0872  3000               	movlw	0
 11317  0873  00DC               	movwf	getPercentValue@i
 11318  0874  3070               	movlw	112
 11319  0875  00DD               	movwf	getPercentValue@i+1
 11320  0876  3042               	movlw	66
 11321  0877  00DE               	movwf	getPercentValue@i+2
 11322                           
 11323                           ;Dimmer_B1.c: 492: i/=100;
 11324  0878  3000               	movlw	0
 11325  0879  00AE               	movwf	___ftdiv@f2
 11326  087A  30C8               	movlw	200
 11327  087B  00AF               	movwf	___ftdiv@f2+1
 11328  087C  3042               	movlw	66
 11329  087D  00B0               	movwf	___ftdiv@f2+2
 11330  087E  085C               	movf	getPercentValue@i,w
 11331  087F  00B1               	movwf	___ftdiv@f1
 11332  0880  085D               	movf	getPercentValue@i+1,w
 11333  0881  00B2               	movwf	___ftdiv@f1+1
 11334  0882  085E               	movf	getPercentValue@i+2,w
 11335  0883  00B3               	movwf	___ftdiv@f1+2
 11336  0884  3186  2679  3188   	fcall	___ftdiv
 11337  0887  0020               	movlb	0	; select bank0
 11338  0888  082E               	movf	?___ftdiv,w
 11339  0889  00DC               	movwf	getPercentValue@i
 11340  088A  082F               	movf	?___ftdiv+1,w
 11341  088B  00DD               	movwf	getPercentValue@i+1
 11342  088C  0830               	movf	?___ftdiv+2,w
 11343  088D  00DE               	movwf	getPercentValue@i+2
 11344                           
 11345                           ;Dimmer_B1.c: 493: return (char)(((100-value)*i)+((char)((100-60)*1.5)));
 11346  088E  085B               	movf	getPercentValue@value,w
 11347  088F  00D9               	movwf	??_getPercentValue
 11348  0890  01DA               	clrf	??_getPercentValue+1
 11349  0891  09D9               	comf	??_getPercentValue,f
 11350  0892  09DA               	comf	??_getPercentValue+1,f
 11351  0893  0AD9               	incf	??_getPercentValue,f
 11352  0894  1903               	skipnz
 11353  0895  0ADA               	incf	??_getPercentValue+1,f
 11354  0896  0859               	movf	??_getPercentValue,w
 11355  0897  3E64               	addlw	100
 11356  0898  00A8               	movwf	___awtoft@c
 11357  0899  3000               	movlw	0
 11358  089A  3D5A               	addwfc	??_getPercentValue+1,w
 11359  089B  00A9               	movwf	___awtoft@c+1
 11360  089C  3192  223B  3188   	fcall	___awtoft
 11361  089F  0020               	movlb	0	; select bank0
 11362  08A0  0828               	movf	?___awtoft,w
 11363  08A1  00B1               	movwf	___ftmul@f2
 11364  08A2  0829               	movf	?___awtoft+1,w
 11365  08A3  00B2               	movwf	___ftmul@f2+1
 11366  08A4  082A               	movf	?___awtoft+2,w
 11367  08A5  00B3               	movwf	___ftmul@f2+2
 11368  08A6  085C               	movf	getPercentValue@i,w
 11369  08A7  00AE               	movwf	___ftmul@f1
 11370  08A8  085D               	movf	getPercentValue@i+1,w
 11371  08A9  00AF               	movwf	___ftmul@f1+1
 11372  08AA  085E               	movf	getPercentValue@i+2,w
 11373  08AB  00B0               	movwf	___ftmul@f1+2
 11374  08AC  3185  25C5  3188   	fcall	___ftmul
 11375  08AF  0020               	movlb	0	; select bank0
 11376  08B0  082E               	movf	?___ftmul,w
 11377  08B1  00C1               	movwf	___ftadd@f2
 11378  08B2  082F               	movf	?___ftmul+1,w
 11379  08B3  00C2               	movwf	___ftadd@f2+1
 11380  08B4  0830               	movf	?___ftmul+2,w
 11381  08B5  00C3               	movwf	___ftadd@f2+2
 11382  08B6  3000               	movlw	0
 11383  08B7  00BE               	movwf	___ftadd@f1
 11384  08B8  3070               	movlw	112
 11385  08B9  00BF               	movwf	___ftadd@f1+1
 11386  08BA  3042               	movlw	66
 11387  08BB  00C0               	movwf	___ftadd@f1+2
 11388  08BC  3184  24CF  3188   	fcall	___ftadd
 11389  08BF  0020               	movlb	0	; select bank0
 11390  08C0  083E               	movf	?___ftadd,w
 11391  08C1  00CB               	movwf	___fttol@f1
 11392  08C2  083F               	movf	?___ftadd+1,w
 11393  08C3  00CC               	movwf	___fttol@f1+1
 11394  08C4  0840               	movf	?___ftadd+2,w
 11395  08C5  00CD               	movwf	___fttol@f1+2
 11396  08C6  318D  25A5         	fcall	___fttol
 11397  08C8  0020               	movlb	0	; select bank0
 11398  08C9  084B               	movf	?___fttol,w
 11399  08CA  0008               	return
 11400  08CB                     __end_of_getPercentValue:	
 11401                           
 11402                           	psect	text69
 11403  0DA5                     __ptext69:	
 11404 ;; *************** function ___fttol *****************
 11405 ;; Defined at:
 11406 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;  f1              3   43[BANK0 ] float 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  lval            4   52[BANK0 ] unsigned long 
 11411 ;;  exp1            1   56[BANK0 ] unsigned char 
 11412 ;;  sign1           1   51[BANK0 ] unsigned char 
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  4   43[BANK0 ] long 
 11415 ;; Registers used:
 11416 ;;		wreg, status,2, status,0
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11425 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;Total ram usage:       14 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:    4
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_getPercentValue
 11433 ;;		_setPercentValue
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           
 11438                           ;psect for function ___fttol
 11439  0DA5                     ___fttol:	
 11440                           
 11441                           ;incstack = 0
 11442                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 11443  0DA5  0020               	movlb	0	; select bank0
 11444  0DA6  084B               	movf	___fttol@f1,w
 11445  0DA7  00CF               	movwf	??___fttol
 11446  0DA8  084C               	movf	___fttol@f1+1,w
 11447  0DA9  00D0               	movwf	??___fttol+1
 11448  0DAA  084D               	movf	___fttol@f1+2,w
 11449  0DAB  00D1               	movwf	??___fttol+2
 11450  0DAC  1003               	clrc
 11451  0DAD  0D50               	rlf	??___fttol+1,w
 11452  0DAE  0D51               	rlf	??___fttol+2,w
 11453  0DAF  00D2               	movwf	??___fttol+3
 11454  0DB0  0852               	movf	??___fttol+3,w
 11455  0DB1  00D8               	movwf	___fttol@exp1
 11456  0DB2  08D8               	movf	___fttol@exp1,f
 11457  0DB3  1D03               	skipz
 11458  0DB4  2DBE               	goto	l7488
 11459  0DB5  3000               	movlw	0
 11460  0DB6  00CE               	movwf	?___fttol+3
 11461  0DB7  3000               	movlw	0
 11462  0DB8  00CD               	movwf	?___fttol+2
 11463  0DB9  3000               	movlw	0
 11464  0DBA  00CC               	movwf	?___fttol+1
 11465  0DBB  3000               	movlw	0
 11466  0DBC  00CB               	movwf	?___fttol
 11467  0DBD  0008               	return
 11468  0DBE                     l7488:	
 11469  0DBE  084B               	movf	___fttol@f1,w
 11470  0DBF  00CF               	movwf	??___fttol
 11471  0DC0  084C               	movf	___fttol@f1+1,w
 11472  0DC1  00D0               	movwf	??___fttol+1
 11473  0DC2  084D               	movf	___fttol@f1+2,w
 11474  0DC3  00D1               	movwf	??___fttol+2
 11475  0DC4  3017               	movlw	23
 11476  0DC5                     u7055:	
 11477  0DC5  36D1               	lsrf	??___fttol+2,f
 11478  0DC6  0CD0               	rrf	??___fttol+1,f
 11479  0DC7  0CCF               	rrf	??___fttol,f
 11480  0DC8  0B89               	decfsz	9,f
 11481  0DC9  2DC5               	goto	u7055
 11482  0DCA  084F               	movf	??___fttol,w
 11483  0DCB  00D2               	movwf	??___fttol+3
 11484  0DCC  0852               	movf	??___fttol+3,w
 11485  0DCD  00D3               	movwf	___fttol@sign1
 11486  0DCE  17CC               	bsf	___fttol@f1+1,7
 11487  0DCF  30FF               	movlw	255
 11488  0DD0  05CB               	andwf	___fttol@f1,f
 11489  0DD1  30FF               	movlw	255
 11490  0DD2  05CC               	andwf	___fttol@f1+1,f
 11491  0DD3  3000               	movlw	0
 11492  0DD4  05CD               	andwf	___fttol@f1+2,f
 11493  0DD5  084B               	movf	___fttol@f1,w
 11494  0DD6  00D4               	movwf	___fttol@lval
 11495  0DD7  084C               	movf	___fttol@f1+1,w
 11496  0DD8  00D5               	movwf	___fttol@lval+1
 11497  0DD9  084D               	movf	___fttol@f1+2,w
 11498  0DDA  00D6               	movwf	___fttol@lval+2
 11499  0DDB  01D7               	clrf	___fttol@lval+3
 11500  0DDC  308E               	movlw	142
 11501  0DDD  02D8               	subwf	___fttol@exp1,f
 11502  0DDE  1FD8               	btfss	___fttol@exp1,7
 11503  0DDF  2DFC               	goto	l7508
 11504  0DE0  0858               	movf	___fttol@exp1,w
 11505  0DE1  3A80               	xorlw	128
 11506  0DE2  3E8F               	addlw	143
 11507  0DE3  1803               	skipnc
 11508  0DE4  2DEE               	goto	l7506
 11509  0DE5  3000               	movlw	0
 11510  0DE6  00CE               	movwf	?___fttol+3
 11511  0DE7  3000               	movlw	0
 11512  0DE8  00CD               	movwf	?___fttol+2
 11513  0DE9  3000               	movlw	0
 11514  0DEA  00CC               	movwf	?___fttol+1
 11515  0DEB  3000               	movlw	0
 11516  0DEC  00CB               	movwf	?___fttol
 11517  0DED  0008               	return
 11518  0DEE                     l7506:	
 11519  0DEE  3001               	movlw	1
 11520  0DEF                     u7085:	
 11521  0DEF  36D7               	lsrf	___fttol@lval+3,f
 11522  0DF0  0CD6               	rrf	___fttol@lval+2,f
 11523  0DF1  0CD5               	rrf	___fttol@lval+1,f
 11524  0DF2  0CD4               	rrf	___fttol@lval,f
 11525  0DF3  0B89               	decfsz	9,f
 11526  0DF4  2DEF               	goto	u7085
 11527  0DF5  3001               	movlw	1
 11528  0DF6  00CF               	movwf	??___fttol
 11529  0DF7  084F               	movf	??___fttol,w
 11530  0DF8  07D8               	addwf	___fttol@exp1,f
 11531  0DF9  1903               	btfsc	3,2
 11532  0DFA  2E15               	goto	l7518
 11533  0DFB  2DEE               	goto	l7506
 11534  0DFC                     l7508:	
 11535  0DFC  3018               	movlw	24
 11536  0DFD  0258               	subwf	___fttol@exp1,w
 11537  0DFE  1C03               	skipc
 11538  0DFF  2E12               	goto	l7516
 11539  0E00  3000               	movlw	0
 11540  0E01  00CE               	movwf	?___fttol+3
 11541  0E02  3000               	movlw	0
 11542  0E03  00CD               	movwf	?___fttol+2
 11543  0E04  3000               	movlw	0
 11544  0E05  00CC               	movwf	?___fttol+1
 11545  0E06  3000               	movlw	0
 11546  0E07  00CB               	movwf	?___fttol
 11547  0E08  0008               	return
 11548  0E09                     l7514:	
 11549  0E09  3001               	movlw	1
 11550  0E0A                     u7115:	
 11551  0E0A  35D4               	lslf	___fttol@lval,f
 11552  0E0B  0DD5               	rlf	___fttol@lval+1,f
 11553  0E0C  0DD6               	rlf	___fttol@lval+2,f
 11554  0E0D  0DD7               	rlf	___fttol@lval+3,f
 11555  0E0E  0B89               	decfsz	9,f
 11556  0E0F  2E0A               	goto	u7115
 11557  0E10  3001               	movlw	1
 11558  0E11  02D8               	subwf	___fttol@exp1,f
 11559  0E12                     l7516:	
 11560  0E12  08D8               	movf	___fttol@exp1,f
 11561  0E13  1D03               	skipz
 11562  0E14  2E09               	goto	l7514
 11563  0E15                     l7518:	
 11564  0E15  0853               	movf	___fttol@sign1,w
 11565  0E16  1903               	btfsc	3,2
 11566  0E17  2E23               	goto	l7522
 11567  0E18  09D4               	comf	___fttol@lval,f
 11568  0E19  09D5               	comf	___fttol@lval+1,f
 11569  0E1A  09D6               	comf	___fttol@lval+2,f
 11570  0E1B  09D7               	comf	___fttol@lval+3,f
 11571  0E1C  0AD4               	incf	___fttol@lval,f
 11572  0E1D  1903               	skipnz
 11573  0E1E  0AD5               	incf	___fttol@lval+1,f
 11574  0E1F  1903               	skipnz
 11575  0E20  0AD6               	incf	___fttol@lval+2,f
 11576  0E21  1903               	skipnz
 11577  0E22  0AD7               	incf	___fttol@lval+3,f
 11578  0E23                     l7522:	
 11579  0E23  0857               	movf	___fttol@lval+3,w
 11580  0E24  00CE               	movwf	?___fttol+3
 11581  0E25  0856               	movf	___fttol@lval+2,w
 11582  0E26  00CD               	movwf	?___fttol+2
 11583  0E27  0855               	movf	___fttol@lval+1,w
 11584  0E28  00CC               	movwf	?___fttol+1
 11585  0E29  0854               	movf	___fttol@lval,w
 11586  0E2A  00CB               	movwf	?___fttol
 11587  0E2B  0008               	return
 11588  0E2C                     __end_of___fttol:	
 11589                           
 11590                           	psect	text70
 11591  05C5                     __ptext70:	
 11592 ;; *************** function ___ftmul *****************
 11593 ;; Defined at:
 11594 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  f1              3   14[BANK0 ] float 
 11597 ;;  f2              3   17[BANK0 ] float 
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
 11600 ;;  sign            1   29[BANK0 ] unsigned char 
 11601 ;;  cntr            1   28[BANK0 ] unsigned char 
 11602 ;;  exp             1   24[BANK0 ] unsigned char 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  3   14[BANK0 ] float 
 11605 ;; Registers used:
 11606 ;;		wreg, status,2, status,0, pclath, cstack
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;Total ram usage:       16 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; Hardware stack levels required when called:    5
 11619 ;; This function calls:
 11620 ;;		___ftpack
 11621 ;; This function is called by:
 11622 ;;		_getPercentValue
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           
 11627                           ;psect for function ___ftmul
 11628  05C5                     ___ftmul:	
 11629                           
 11630                           ;incstack = 0
 11631                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 11632  05C5  0020               	movlb	0	; select bank0
 11633  05C6  082E               	movf	___ftmul@f1,w
 11634  05C7  00B4               	movwf	??___ftmul
 11635  05C8  082F               	movf	___ftmul@f1+1,w
 11636  05C9  00B5               	movwf	??___ftmul+1
 11637  05CA  0830               	movf	___ftmul@f1+2,w
 11638  05CB  00B6               	movwf	??___ftmul+2
 11639  05CC  1003               	clrc
 11640  05CD  0D35               	rlf	??___ftmul+1,w
 11641  05CE  0D36               	rlf	??___ftmul+2,w
 11642  05CF  00B7               	movwf	??___ftmul+3
 11643  05D0  0837               	movf	??___ftmul+3,w
 11644  05D1  00B8               	movwf	___ftmul@exp
 11645  05D2  08B8               	movf	___ftmul@exp,f
 11646  05D3  1D03               	skipz
 11647  05D4  2DDC               	goto	l7438
 11648  05D5  3000               	movlw	0
 11649  05D6  00AE               	movwf	?___ftmul
 11650  05D7  3000               	movlw	0
 11651  05D8  00AF               	movwf	?___ftmul+1
 11652  05D9  3000               	movlw	0
 11653  05DA  00B0               	movwf	?___ftmul+2
 11654  05DB  0008               	return
 11655  05DC                     l7438:	
 11656  05DC  0831               	movf	___ftmul@f2,w
 11657  05DD  00B4               	movwf	??___ftmul
 11658  05DE  0832               	movf	___ftmul@f2+1,w
 11659  05DF  00B5               	movwf	??___ftmul+1
 11660  05E0  0833               	movf	___ftmul@f2+2,w
 11661  05E1  00B6               	movwf	??___ftmul+2
 11662  05E2  1003               	clrc
 11663  05E3  0D35               	rlf	??___ftmul+1,w
 11664  05E4  0D36               	rlf	??___ftmul+2,w
 11665  05E5  00B7               	movwf	??___ftmul+3
 11666  05E6  0837               	movf	??___ftmul+3,w
 11667  05E7  00BD               	movwf	___ftmul@sign
 11668  05E8  08BD               	movf	___ftmul@sign,f
 11669  05E9  1D03               	skipz
 11670  05EA  2DF2               	goto	l7444
 11671  05EB  3000               	movlw	0
 11672  05EC  00AE               	movwf	?___ftmul
 11673  05ED  3000               	movlw	0
 11674  05EE  00AF               	movwf	?___ftmul+1
 11675  05EF  3000               	movlw	0
 11676  05F0  00B0               	movwf	?___ftmul+2
 11677  05F1  0008               	return
 11678  05F2                     l7444:	
 11679  05F2  083D               	movf	___ftmul@sign,w
 11680  05F3  3E7B               	addlw	123
 11681  05F4  00B4               	movwf	??___ftmul
 11682  05F5  0834               	movf	??___ftmul,w
 11683  05F6  07B8               	addwf	___ftmul@exp,f
 11684  05F7  082E               	movf	___ftmul@f1,w
 11685  05F8  00B4               	movwf	??___ftmul
 11686  05F9  082F               	movf	___ftmul@f1+1,w
 11687  05FA  00B5               	movwf	??___ftmul+1
 11688  05FB  0830               	movf	___ftmul@f1+2,w
 11689  05FC  00B6               	movwf	??___ftmul+2
 11690  05FD  3010               	movlw	16
 11691  05FE                     u6945:	
 11692  05FE  36B6               	lsrf	??___ftmul+2,f
 11693  05FF  0CB5               	rrf	??___ftmul+1,f
 11694  0600  0CB4               	rrf	??___ftmul,f
 11695  0601  0B89               	decfsz	9,f
 11696  0602  2DFE               	goto	u6945
 11697  0603  0834               	movf	??___ftmul,w
 11698  0604  00B7               	movwf	??___ftmul+3
 11699  0605  0837               	movf	??___ftmul+3,w
 11700  0606  00BD               	movwf	___ftmul@sign
 11701  0607  0831               	movf	___ftmul@f2,w
 11702  0608  00B4               	movwf	??___ftmul
 11703  0609  0832               	movf	___ftmul@f2+1,w
 11704  060A  00B5               	movwf	??___ftmul+1
 11705  060B  0833               	movf	___ftmul@f2+2,w
 11706  060C  00B6               	movwf	??___ftmul+2
 11707  060D  3010               	movlw	16
 11708  060E                     u6955:	
 11709  060E  36B6               	lsrf	??___ftmul+2,f
 11710  060F  0CB5               	rrf	??___ftmul+1,f
 11711  0610  0CB4               	rrf	??___ftmul,f
 11712  0611  0B89               	decfsz	9,f
 11713  0612  2E0E               	goto	u6955
 11714  0613  0834               	movf	??___ftmul,w
 11715  0614  00B7               	movwf	??___ftmul+3
 11716  0615  0837               	movf	??___ftmul+3,w
 11717  0616  06BD               	xorwf	___ftmul@sign,f
 11718  0617  3080               	movlw	128
 11719  0618  00B4               	movwf	??___ftmul
 11720  0619  0834               	movf	??___ftmul,w
 11721  061A  05BD               	andwf	___ftmul@sign,f
 11722  061B  17AF               	bsf	___ftmul@f1+1,7
 11723  061C  17B2               	bsf	___ftmul@f2+1,7
 11724  061D  30FF               	movlw	255
 11725  061E  05B1               	andwf	___ftmul@f2,f
 11726  061F  30FF               	movlw	255
 11727  0620  05B2               	andwf	___ftmul@f2+1,f
 11728  0621  3000               	movlw	0
 11729  0622  05B3               	andwf	___ftmul@f2+2,f
 11730  0623  3000               	movlw	0
 11731  0624  00B9               	movwf	___ftmul@f3_as_product
 11732  0625  3000               	movlw	0
 11733  0626  00BA               	movwf	___ftmul@f3_as_product+1
 11734  0627  3000               	movlw	0
 11735  0628  00BB               	movwf	___ftmul@f3_as_product+2
 11736  0629  3007               	movlw	7
 11737  062A  00B4               	movwf	??___ftmul
 11738  062B  0834               	movf	??___ftmul,w
 11739  062C  00BC               	movwf	___ftmul@cntr
 11740  062D                     l7456:	
 11741  062D  1C2E               	btfss	___ftmul@f1,0
 11742  062E  2E35               	goto	l7460
 11743  062F  0831               	movf	___ftmul@f2,w
 11744  0630  07B9               	addwf	___ftmul@f3_as_product,f
 11745  0631  0832               	movf	___ftmul@f2+1,w
 11746  0632  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 11747  0633  0833               	movf	___ftmul@f2+2,w
 11748  0634  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 11749  0635                     l7460:	
 11750  0635  3001               	movlw	1
 11751  0636                     u6975:	
 11752  0636  36B0               	lsrf	___ftmul@f1+2,f
 11753  0637  0CAF               	rrf	___ftmul@f1+1,f
 11754  0638  0CAE               	rrf	___ftmul@f1,f
 11755  0639  0B89               	decfsz	9,f
 11756  063A  2E36               	goto	u6975
 11757  063B  3001               	movlw	1
 11758  063C                     u6985:	
 11759  063C  35B1               	lslf	___ftmul@f2,f
 11760  063D  0DB2               	rlf	___ftmul@f2+1,f
 11761  063E  0DB3               	rlf	___ftmul@f2+2,f
 11762  063F  0B89               	decfsz	9,f
 11763  0640  2E3C               	goto	u6985
 11764  0641  3001               	movlw	1
 11765  0642  02BC               	subwf	___ftmul@cntr,f
 11766  0643  1D03               	btfss	3,2
 11767  0644  2E2D               	goto	l7456
 11768  0645  3009               	movlw	9
 11769  0646  00B4               	movwf	??___ftmul
 11770  0647  0834               	movf	??___ftmul,w
 11771  0648  00BC               	movwf	___ftmul@cntr
 11772  0649                     l7468:	
 11773  0649  1C2E               	btfss	___ftmul@f1,0
 11774  064A  2E51               	goto	l7472
 11775  064B  0831               	movf	___ftmul@f2,w
 11776  064C  07B9               	addwf	___ftmul@f3_as_product,f
 11777  064D  0832               	movf	___ftmul@f2+1,w
 11778  064E  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 11779  064F  0833               	movf	___ftmul@f2+2,w
 11780  0650  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 11781  0651                     l7472:	
 11782  0651  3001               	movlw	1
 11783  0652                     u7015:	
 11784  0652  36B0               	lsrf	___ftmul@f1+2,f
 11785  0653  0CAF               	rrf	___ftmul@f1+1,f
 11786  0654  0CAE               	rrf	___ftmul@f1,f
 11787  0655  0B89               	decfsz	9,f
 11788  0656  2E52               	goto	u7015
 11789  0657  3001               	movlw	1
 11790  0658                     u7025:	
 11791  0658  36BB               	lsrf	___ftmul@f3_as_product+2,f
 11792  0659  0CBA               	rrf	___ftmul@f3_as_product+1,f
 11793  065A  0CB9               	rrf	___ftmul@f3_as_product,f
 11794  065B  0B89               	decfsz	9,f
 11795  065C  2E58               	goto	u7025
 11796  065D  3001               	movlw	1
 11797  065E  02BC               	subwf	___ftmul@cntr,f
 11798  065F  1D03               	btfss	3,2
 11799  0660  2E49               	goto	l7468
 11800  0661  0839               	movf	___ftmul@f3_as_product,w
 11801  0662  00A0               	movwf	___ftpack@arg
 11802  0663  083A               	movf	___ftmul@f3_as_product+1,w
 11803  0664  00A1               	movwf	___ftpack@arg+1
 11804  0665  083B               	movf	___ftmul@f3_as_product+2,w
 11805  0666  00A2               	movwf	___ftpack@arg+2
 11806  0667  0838               	movf	___ftmul@exp,w
 11807  0668  00B4               	movwf	??___ftmul
 11808  0669  0834               	movf	??___ftmul,w
 11809  066A  00A3               	movwf	___ftpack@exp
 11810  066B  083D               	movf	___ftmul@sign,w
 11811  066C  00B5               	movwf	??___ftmul+1
 11812  066D  0835               	movf	??___ftmul+1,w
 11813  066E  00A4               	movwf	___ftpack@sign
 11814  066F  3189  2126         	fcall	___ftpack
 11815  0671  0020               	movlb	0	; select bank0
 11816  0672  0820               	movf	?___ftpack,w
 11817  0673  00AE               	movwf	?___ftmul
 11818  0674  0821               	movf	?___ftpack+1,w
 11819  0675  00AF               	movwf	?___ftmul+1
 11820  0676  0822               	movf	?___ftpack+2,w
 11821  0677  00B0               	movwf	?___ftmul+2
 11822  0678  0008               	return
 11823  0679                     __end_of___ftmul:	
 11824                           
 11825                           	psect	text71
 11826  0679                     __ptext71:	
 11827 ;; *************** function ___ftdiv *****************
 11828 ;; Defined at:
 11829 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;  f2              3   14[BANK0 ] float 
 11832 ;;  f1              3   17[BANK0 ] float 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  f3              3   25[BANK0 ] float 
 11835 ;;  sign            1   29[BANK0 ] unsigned char 
 11836 ;;  exp             1   28[BANK0 ] unsigned char 
 11837 ;;  cntr            1   24[BANK0 ] unsigned char 
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  3   14[BANK0 ] float 
 11840 ;; Registers used:
 11841 ;;		wreg, status,2, status,0, pclath, cstack
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11847 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11851 ;;Total ram usage:       16 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; Hardware stack levels required when called:    5
 11854 ;; This function calls:
 11855 ;;		___ftpack
 11856 ;; This function is called by:
 11857 ;;		_getPercentValue
 11858 ;;		_setPercentValue
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           
 11862                           
 11863                           ;psect for function ___ftdiv
 11864  0679                     ___ftdiv:	
 11865                           
 11866                           ;incstack = 0
 11867                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11868  0679  0020               	movlb	0	; select bank0
 11869  067A  0831               	movf	___ftdiv@f1,w
 11870  067B  00B4               	movwf	??___ftdiv
 11871  067C  0832               	movf	___ftdiv@f1+1,w
 11872  067D  00B5               	movwf	??___ftdiv+1
 11873  067E  0833               	movf	___ftdiv@f1+2,w
 11874  067F  00B6               	movwf	??___ftdiv+2
 11875  0680  1003               	clrc
 11876  0681  0D35               	rlf	??___ftdiv+1,w
 11877  0682  0D36               	rlf	??___ftdiv+2,w
 11878  0683  00B7               	movwf	??___ftdiv+3
 11879  0684  0837               	movf	??___ftdiv+3,w
 11880  0685  00BC               	movwf	___ftdiv@exp
 11881  0686  08BC               	movf	___ftdiv@exp,f
 11882  0687  1D03               	skipz
 11883  0688  2E90               	goto	l7396
 11884  0689  3000               	movlw	0
 11885  068A  00AE               	movwf	?___ftdiv
 11886  068B  3000               	movlw	0
 11887  068C  00AF               	movwf	?___ftdiv+1
 11888  068D  3000               	movlw	0
 11889  068E  00B0               	movwf	?___ftdiv+2
 11890  068F  0008               	return
 11891  0690                     l7396:	
 11892  0690  082E               	movf	___ftdiv@f2,w
 11893  0691  00B4               	movwf	??___ftdiv
 11894  0692  082F               	movf	___ftdiv@f2+1,w
 11895  0693  00B5               	movwf	??___ftdiv+1
 11896  0694  0830               	movf	___ftdiv@f2+2,w
 11897  0695  00B6               	movwf	??___ftdiv+2
 11898  0696  1003               	clrc
 11899  0697  0D35               	rlf	??___ftdiv+1,w
 11900  0698  0D36               	rlf	??___ftdiv+2,w
 11901  0699  00B7               	movwf	??___ftdiv+3
 11902  069A  0837               	movf	??___ftdiv+3,w
 11903  069B  00BD               	movwf	___ftdiv@sign
 11904  069C  08BD               	movf	___ftdiv@sign,f
 11905  069D  1D03               	skipz
 11906  069E  2EA6               	goto	l7402
 11907  069F  3000               	movlw	0
 11908  06A0  00AE               	movwf	?___ftdiv
 11909  06A1  3000               	movlw	0
 11910  06A2  00AF               	movwf	?___ftdiv+1
 11911  06A3  3000               	movlw	0
 11912  06A4  00B0               	movwf	?___ftdiv+2
 11913  06A5  0008               	return
 11914  06A6                     l7402:	
 11915  06A6  3000               	movlw	0
 11916  06A7  00B9               	movwf	___ftdiv@f3
 11917  06A8  3000               	movlw	0
 11918  06A9  00BA               	movwf	___ftdiv@f3+1
 11919  06AA  3000               	movlw	0
 11920  06AB  00BB               	movwf	___ftdiv@f3+2
 11921  06AC  3089               	movlw	137
 11922  06AD  073D               	addwf	___ftdiv@sign,w
 11923  06AE  00B4               	movwf	??___ftdiv
 11924  06AF  0834               	movf	??___ftdiv,w
 11925  06B0  02BC               	subwf	___ftdiv@exp,f
 11926  06B1  0831               	movf	___ftdiv@f1,w
 11927  06B2  00B4               	movwf	??___ftdiv
 11928  06B3  0832               	movf	___ftdiv@f1+1,w
 11929  06B4  00B5               	movwf	??___ftdiv+1
 11930  06B5  0833               	movf	___ftdiv@f1+2,w
 11931  06B6  00B6               	movwf	??___ftdiv+2
 11932  06B7  3010               	movlw	16
 11933  06B8                     u6865:	
 11934  06B8  36B6               	lsrf	??___ftdiv+2,f
 11935  06B9  0CB5               	rrf	??___ftdiv+1,f
 11936  06BA  0CB4               	rrf	??___ftdiv,f
 11937  06BB  0B89               	decfsz	9,f
 11938  06BC  2EB8               	goto	u6865
 11939  06BD  0834               	movf	??___ftdiv,w
 11940  06BE  00B7               	movwf	??___ftdiv+3
 11941  06BF  0837               	movf	??___ftdiv+3,w
 11942  06C0  00BD               	movwf	___ftdiv@sign
 11943  06C1  082E               	movf	___ftdiv@f2,w
 11944  06C2  00B4               	movwf	??___ftdiv
 11945  06C3  082F               	movf	___ftdiv@f2+1,w
 11946  06C4  00B5               	movwf	??___ftdiv+1
 11947  06C5  0830               	movf	___ftdiv@f2+2,w
 11948  06C6  00B6               	movwf	??___ftdiv+2
 11949  06C7  3010               	movlw	16
 11950  06C8                     u6875:	
 11951  06C8  36B6               	lsrf	??___ftdiv+2,f
 11952  06C9  0CB5               	rrf	??___ftdiv+1,f
 11953  06CA  0CB4               	rrf	??___ftdiv,f
 11954  06CB  0B89               	decfsz	9,f
 11955  06CC  2EC8               	goto	u6875
 11956  06CD  0834               	movf	??___ftdiv,w
 11957  06CE  00B7               	movwf	??___ftdiv+3
 11958  06CF  0837               	movf	??___ftdiv+3,w
 11959  06D0  06BD               	xorwf	___ftdiv@sign,f
 11960  06D1  3080               	movlw	128
 11961  06D2  00B4               	movwf	??___ftdiv
 11962  06D3  0834               	movf	??___ftdiv,w
 11963  06D4  05BD               	andwf	___ftdiv@sign,f
 11964  06D5  17B2               	bsf	___ftdiv@f1+1,7
 11965  06D6  30FF               	movlw	255
 11966  06D7  05B1               	andwf	___ftdiv@f1,f
 11967  06D8  30FF               	movlw	255
 11968  06D9  05B2               	andwf	___ftdiv@f1+1,f
 11969  06DA  3000               	movlw	0
 11970  06DB  05B3               	andwf	___ftdiv@f1+2,f
 11971  06DC  17AF               	bsf	___ftdiv@f2+1,7
 11972  06DD  30FF               	movlw	255
 11973  06DE  05AE               	andwf	___ftdiv@f2,f
 11974  06DF  30FF               	movlw	255
 11975  06E0  05AF               	andwf	___ftdiv@f2+1,f
 11976  06E1  3000               	movlw	0
 11977  06E2  05B0               	andwf	___ftdiv@f2+2,f
 11978  06E3  3018               	movlw	24
 11979  06E4  00B4               	movwf	??___ftdiv
 11980  06E5  0834               	movf	??___ftdiv,w
 11981  06E6  00B8               	movwf	___ftdiv@cntr
 11982  06E7                     l7416:	
 11983  06E7  3001               	movlw	1
 11984  06E8                     u6885:	
 11985  06E8  35B9               	lslf	___ftdiv@f3,f
 11986  06E9  0DBA               	rlf	___ftdiv@f3+1,f
 11987  06EA  0DBB               	rlf	___ftdiv@f3+2,f
 11988  06EB  0B89               	decfsz	9,f
 11989  06EC  2EE8               	goto	u6885
 11990  06ED  0830               	movf	___ftdiv@f2+2,w
 11991  06EE  0233               	subwf	___ftdiv@f1+2,w
 11992  06EF  1D03               	skipz
 11993  06F0  2EF7               	goto	u6895
 11994  06F1  082F               	movf	___ftdiv@f2+1,w
 11995  06F2  0232               	subwf	___ftdiv@f1+1,w
 11996  06F3  1D03               	skipz
 11997  06F4  2EF7               	goto	u6895
 11998  06F5  082E               	movf	___ftdiv@f2,w
 11999  06F6  0231               	subwf	___ftdiv@f1,w
 12000  06F7                     u6895:	
 12001  06F7  1C03               	skipc
 12002  06F8  2F00               	goto	l7424
 12003  06F9  082E               	movf	___ftdiv@f2,w
 12004  06FA  02B1               	subwf	___ftdiv@f1,f
 12005  06FB  082F               	movf	___ftdiv@f2+1,w
 12006  06FC  3BB2               	subwfb	___ftdiv@f1+1,f
 12007  06FD  0830               	movf	___ftdiv@f2+2,w
 12008  06FE  3BB3               	subwfb	___ftdiv@f1+2,f
 12009  06FF  1439               	bsf	___ftdiv@f3,0
 12010  0700                     l7424:	
 12011  0700  3001               	movlw	1
 12012  0701                     u6905:	
 12013  0701  35B1               	lslf	___ftdiv@f1,f
 12014  0702  0DB2               	rlf	___ftdiv@f1+1,f
 12015  0703  0DB3               	rlf	___ftdiv@f1+2,f
 12016  0704  0B89               	decfsz	9,f
 12017  0705  2F01               	goto	u6905
 12018  0706  3001               	movlw	1
 12019  0707  02B8               	subwf	___ftdiv@cntr,f
 12020  0708  1D03               	btfss	3,2
 12021  0709  2EE7               	goto	l7416
 12022  070A  0839               	movf	___ftdiv@f3,w
 12023  070B  00A0               	movwf	___ftpack@arg
 12024  070C  083A               	movf	___ftdiv@f3+1,w
 12025  070D  00A1               	movwf	___ftpack@arg+1
 12026  070E  083B               	movf	___ftdiv@f3+2,w
 12027  070F  00A2               	movwf	___ftpack@arg+2
 12028  0710  083C               	movf	___ftdiv@exp,w
 12029  0711  00B4               	movwf	??___ftdiv
 12030  0712  0834               	movf	??___ftdiv,w
 12031  0713  00A3               	movwf	___ftpack@exp
 12032  0714  083D               	movf	___ftdiv@sign,w
 12033  0715  00B5               	movwf	??___ftdiv+1
 12034  0716  0835               	movf	??___ftdiv+1,w
 12035  0717  00A4               	movwf	___ftpack@sign
 12036  0718  3189  2126         	fcall	___ftpack
 12037  071A  0020               	movlb	0	; select bank0
 12038  071B  0820               	movf	?___ftpack,w
 12039  071C  00AE               	movwf	?___ftdiv
 12040  071D  0821               	movf	?___ftpack+1,w
 12041  071E  00AF               	movwf	?___ftdiv+1
 12042  071F  0822               	movf	?___ftpack+2,w
 12043  0720  00B0               	movwf	?___ftdiv+2
 12044  0721  0008               	return
 12045  0722                     __end_of___ftdiv:	
 12046                           
 12047                           	psect	text72
 12048  04CF                     __ptext72:	
 12049 ;; *************** function ___ftadd *****************
 12050 ;; Defined at:
 12051 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  f1              3   30[BANK0 ] float 
 12054 ;;  f2              3   33[BANK0 ] float 
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;  exp1            1   42[BANK0 ] unsigned char 
 12057 ;;  exp2            1   41[BANK0 ] unsigned char 
 12058 ;;  sign            1   40[BANK0 ] unsigned char 
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  3   30[BANK0 ] float 
 12061 ;; Registers used:
 12062 ;;		wreg, status,2, status,0, pclath, cstack
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12068 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12069 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12071 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12072 ;;Total ram usage:       13 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; Hardware stack levels required when called:    5
 12075 ;; This function calls:
 12076 ;;		___ftpack
 12077 ;; This function is called by:
 12078 ;;		_getPercentValue
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           
 12083                           ;psect for function ___ftadd
 12084  04CF                     ___ftadd:	
 12085                           
 12086                           ;incstack = 0
 12087                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 12088  04CF  0020               	movlb	0	; select bank0
 12089  04D0  083E               	movf	___ftadd@f1,w
 12090  04D1  00C4               	movwf	??___ftadd
 12091  04D2  083F               	movf	___ftadd@f1+1,w
 12092  04D3  00C5               	movwf	??___ftadd+1
 12093  04D4  0840               	movf	___ftadd@f1+2,w
 12094  04D5  00C6               	movwf	??___ftadd+2
 12095  04D6  1003               	clrc
 12096  04D7  0D45               	rlf	??___ftadd+1,w
 12097  04D8  0D46               	rlf	??___ftadd+2,w
 12098  04D9  00C7               	movwf	??___ftadd+3
 12099  04DA  0847               	movf	??___ftadd+3,w
 12100  04DB  00CA               	movwf	___ftadd@exp1
 12101  04DC  0841               	movf	___ftadd@f2,w
 12102  04DD  00C4               	movwf	??___ftadd
 12103  04DE  0842               	movf	___ftadd@f2+1,w
 12104  04DF  00C5               	movwf	??___ftadd+1
 12105  04E0  0843               	movf	___ftadd@f2+2,w
 12106  04E1  00C6               	movwf	??___ftadd+2
 12107  04E2  1003               	clrc
 12108  04E3  0D45               	rlf	??___ftadd+1,w
 12109  04E4  0D46               	rlf	??___ftadd+2,w
 12110  04E5  00C7               	movwf	??___ftadd+3
 12111  04E6  0847               	movf	??___ftadd+3,w
 12112  04E7  00C9               	movwf	___ftadd@exp2
 12113  04E8  084A               	movf	___ftadd@exp1,w
 12114  04E9  1903               	btfsc	3,2
 12115  04EA  2CF7               	goto	l7326
 12116  04EB  0849               	movf	___ftadd@exp2,w
 12117  04EC  024A               	subwf	___ftadd@exp1,w
 12118  04ED  1803               	skipnc
 12119  04EE  2CFE               	goto	l7330
 12120  04EF  034A               	decf	___ftadd@exp1,w
 12121  04F0  3AFF               	xorlw	255
 12122  04F1  0749               	addwf	___ftadd@exp2,w
 12123  04F2  00C4               	movwf	??___ftadd
 12124  04F3  3019               	movlw	25
 12125  04F4  0244               	subwf	??___ftadd,w
 12126  04F5  1C03               	skipc
 12127  04F6  2CFE               	goto	l7330
 12128  04F7                     l7326:	
 12129  04F7  0841               	movf	___ftadd@f2,w
 12130  04F8  00BE               	movwf	?___ftadd
 12131  04F9  0842               	movf	___ftadd@f2+1,w
 12132  04FA  00BF               	movwf	?___ftadd+1
 12133  04FB  0843               	movf	___ftadd@f2+2,w
 12134  04FC  00C0               	movwf	?___ftadd+2
 12135  04FD  0008               	return
 12136  04FE                     l7330:	
 12137  04FE  0849               	movf	___ftadd@exp2,w
 12138  04FF  1903               	btfsc	3,2
 12139  0500  0008               	return
 12140  0501  084A               	movf	___ftadd@exp1,w
 12141  0502  0249               	subwf	___ftadd@exp2,w
 12142  0503  1803               	skipnc
 12143  0504  2D0D               	goto	l7336
 12144  0505  0349               	decf	___ftadd@exp2,w
 12145  0506  3AFF               	xorlw	255
 12146  0507  074A               	addwf	___ftadd@exp1,w
 12147  0508  00C4               	movwf	??___ftadd
 12148  0509  3019               	movlw	25
 12149  050A  0244               	subwf	??___ftadd,w
 12150  050B  1803               	btfsc	3,0
 12151  050C  0008               	return
 12152  050D                     l7336:	
 12153  050D  3006               	movlw	6
 12154  050E  00C4               	movwf	??___ftadd
 12155  050F  0844               	movf	??___ftadd,w
 12156  0510  00C8               	movwf	___ftadd@sign
 12157  0511  1BC0               	btfsc	___ftadd@f1+2,7
 12158  0512  17C8               	bsf	___ftadd@sign,7
 12159  0513  1BC3               	btfsc	___ftadd@f2+2,7
 12160  0514  1748               	bsf	___ftadd@sign,6
 12161  0515  17BF               	bsf	___ftadd@f1+1,7
 12162  0516  30FF               	movlw	255
 12163  0517  05BE               	andwf	___ftadd@f1,f
 12164  0518  30FF               	movlw	255
 12165  0519  05BF               	andwf	___ftadd@f1+1,f
 12166  051A  3000               	movlw	0
 12167  051B  05C0               	andwf	___ftadd@f1+2,f
 12168  051C  17C2               	bsf	___ftadd@f2+1,7
 12169  051D  30FF               	movlw	255
 12170  051E  05C1               	andwf	___ftadd@f2,f
 12171  051F  30FF               	movlw	255
 12172  0520  05C2               	andwf	___ftadd@f2+1,f
 12173  0521  3000               	movlw	0
 12174  0522  05C3               	andwf	___ftadd@f2+2,f
 12175  0523  0849               	movf	___ftadd@exp2,w
 12176  0524  024A               	subwf	___ftadd@exp1,w
 12177  0525  1803               	skipnc
 12178  0526  2D49               	goto	l7358
 12179  0527                     l7348:	
 12180  0527  3001               	movlw	1
 12181  0528                     u6705:	
 12182  0528  35C1               	lslf	___ftadd@f2,f
 12183  0529  0DC2               	rlf	___ftadd@f2+1,f
 12184  052A  0DC3               	rlf	___ftadd@f2+2,f
 12185  052B  0B89               	decfsz	9,f
 12186  052C  2D28               	goto	u6705
 12187  052D  3001               	movlw	1
 12188  052E  02C9               	subwf	___ftadd@exp2,f
 12189  052F  0849               	movf	___ftadd@exp2,w
 12190  0530  064A               	xorwf	___ftadd@exp1,w
 12191  0531  1903               	skipnz
 12192  0532  2D44               	goto	l7356
 12193  0533  3001               	movlw	1
 12194  0534  02C8               	subwf	___ftadd@sign,f
 12195  0535  0848               	movf	___ftadd@sign,w
 12196  0536  3907               	andlw	7
 12197  0537  1903               	btfsc	3,2
 12198  0538  2D44               	goto	l7356
 12199  0539  2D27               	goto	l7348
 12200  053A                     l7354:	
 12201  053A  3001               	movlw	1
 12202  053B                     u6735:	
 12203  053B  36C0               	lsrf	___ftadd@f1+2,f
 12204  053C  0CBF               	rrf	___ftadd@f1+1,f
 12205  053D  0CBE               	rrf	___ftadd@f1,f
 12206  053E  0B89               	decfsz	9,f
 12207  053F  2D3B               	goto	u6735
 12208  0540  3001               	movlw	1
 12209  0541  00C4               	movwf	??___ftadd
 12210  0542  0844               	movf	??___ftadd,w
 12211  0543  07CA               	addwf	___ftadd@exp1,f
 12212  0544                     l7356:	
 12213  0544  084A               	movf	___ftadd@exp1,w
 12214  0545  0649               	xorwf	___ftadd@exp2,w
 12215  0546  1903               	btfsc	3,2
 12216  0547  2D6E               	goto	l3017
 12217  0548  2D3A               	goto	l7354
 12218  0549                     l7358:	
 12219  0549  084A               	movf	___ftadd@exp1,w
 12220  054A  0249               	subwf	___ftadd@exp2,w
 12221  054B  1803               	skipnc
 12222  054C  2D6E               	goto	l3017
 12223  054D                     l7360:	
 12224  054D  3001               	movlw	1
 12225  054E                     u6765:	
 12226  054E  35BE               	lslf	___ftadd@f1,f
 12227  054F  0DBF               	rlf	___ftadd@f1+1,f
 12228  0550  0DC0               	rlf	___ftadd@f1+2,f
 12229  0551  0B89               	decfsz	9,f
 12230  0552  2D4E               	goto	u6765
 12231  0553  3001               	movlw	1
 12232  0554  02CA               	subwf	___ftadd@exp1,f
 12233  0555  0849               	movf	___ftadd@exp2,w
 12234  0556  064A               	xorwf	___ftadd@exp1,w
 12235  0557  1903               	skipnz
 12236  0558  2D6A               	goto	l7368
 12237  0559  3001               	movlw	1
 12238  055A  02C8               	subwf	___ftadd@sign,f
 12239  055B  0848               	movf	___ftadd@sign,w
 12240  055C  3907               	andlw	7
 12241  055D  1903               	btfsc	3,2
 12242  055E  2D6A               	goto	l7368
 12243  055F  2D4D               	goto	l7360
 12244  0560                     l7366:	
 12245  0560  3001               	movlw	1
 12246  0561                     u6795:	
 12247  0561  36C3               	lsrf	___ftadd@f2+2,f
 12248  0562  0CC2               	rrf	___ftadd@f2+1,f
 12249  0563  0CC1               	rrf	___ftadd@f2,f
 12250  0564  0B89               	decfsz	9,f
 12251  0565  2D61               	goto	u6795
 12252  0566  3001               	movlw	1
 12253  0567  00C4               	movwf	??___ftadd
 12254  0568  0844               	movf	??___ftadd,w
 12255  0569  07C9               	addwf	___ftadd@exp2,f
 12256  056A                     l7368:	
 12257  056A  084A               	movf	___ftadd@exp1,w
 12258  056B  0649               	xorwf	___ftadd@exp2,w
 12259  056C  1D03               	skipz
 12260  056D  2D60               	goto	l7366
 12261  056E                     l3017:	
 12262  056E  1FC8               	btfss	___ftadd@sign,7
 12263  056F  2D80               	goto	l7372
 12264  0570  30FF               	movlw	255
 12265  0571  06BE               	xorwf	___ftadd@f1,f
 12266  0572  30FF               	movlw	255
 12267  0573  06BF               	xorwf	___ftadd@f1+1,f
 12268  0574  30FF               	movlw	255
 12269  0575  06C0               	xorwf	___ftadd@f1+2,f
 12270  0576  3001               	movlw	1
 12271  0577  07BE               	addwf	___ftadd@f1,f
 12272  0578  3000               	movlw	0
 12273  0579  1803               	skipnc
 12274  057A  3001               	movlw	1
 12275  057B  07BF               	addwf	___ftadd@f1+1,f
 12276  057C  3000               	movlw	0
 12277  057D  1803               	skipnc
 12278  057E  3001               	movlw	1
 12279  057F  07C0               	addwf	___ftadd@f1+2,f
 12280  0580                     l7372:	
 12281  0580  1F48               	btfss	___ftadd@sign,6
 12282  0581  2D92               	goto	l7376
 12283  0582  30FF               	movlw	255
 12284  0583  06C1               	xorwf	___ftadd@f2,f
 12285  0584  30FF               	movlw	255
 12286  0585  06C2               	xorwf	___ftadd@f2+1,f
 12287  0586  30FF               	movlw	255
 12288  0587  06C3               	xorwf	___ftadd@f2+2,f
 12289  0588  3001               	movlw	1
 12290  0589  07C1               	addwf	___ftadd@f2,f
 12291  058A  3000               	movlw	0
 12292  058B  1803               	skipnc
 12293  058C  3001               	movlw	1
 12294  058D  07C2               	addwf	___ftadd@f2+1,f
 12295  058E  3000               	movlw	0
 12296  058F  1803               	skipnc
 12297  0590  3001               	movlw	1
 12298  0591  07C3               	addwf	___ftadd@f2+2,f
 12299  0592                     l7376:	
 12300  0592  01C8               	clrf	___ftadd@sign
 12301  0593  083E               	movf	___ftadd@f1,w
 12302  0594  07C1               	addwf	___ftadd@f2,f
 12303  0595  083F               	movf	___ftadd@f1+1,w
 12304  0596  3DC2               	addwfc	___ftadd@f2+1,f
 12305  0597  0840               	movf	___ftadd@f1+2,w
 12306  0598  3DC3               	addwfc	___ftadd@f2+2,f
 12307  0599  1FC3               	btfss	___ftadd@f2+2,7
 12308  059A  2DAD               	goto	l7386
 12309  059B  30FF               	movlw	255
 12310  059C  06C1               	xorwf	___ftadd@f2,f
 12311  059D  30FF               	movlw	255
 12312  059E  06C2               	xorwf	___ftadd@f2+1,f
 12313  059F  30FF               	movlw	255
 12314  05A0  06C3               	xorwf	___ftadd@f2+2,f
 12315  05A1  3001               	movlw	1
 12316  05A2  07C1               	addwf	___ftadd@f2,f
 12317  05A3  3000               	movlw	0
 12318  05A4  1803               	skipnc
 12319  05A5  3001               	movlw	1
 12320  05A6  07C2               	addwf	___ftadd@f2+1,f
 12321  05A7  3000               	movlw	0
 12322  05A8  1803               	skipnc
 12323  05A9  3001               	movlw	1
 12324  05AA  07C3               	addwf	___ftadd@f2+2,f
 12325  05AB  01C8               	clrf	___ftadd@sign
 12326  05AC  0AC8               	incf	___ftadd@sign,f
 12327  05AD                     l7386:	
 12328  05AD  0841               	movf	___ftadd@f2,w
 12329  05AE  00A0               	movwf	___ftpack@arg
 12330  05AF  0842               	movf	___ftadd@f2+1,w
 12331  05B0  00A1               	movwf	___ftpack@arg+1
 12332  05B1  0843               	movf	___ftadd@f2+2,w
 12333  05B2  00A2               	movwf	___ftpack@arg+2
 12334  05B3  084A               	movf	___ftadd@exp1,w
 12335  05B4  00C4               	movwf	??___ftadd
 12336  05B5  0844               	movf	??___ftadd,w
 12337  05B6  00A3               	movwf	___ftpack@exp
 12338  05B7  0848               	movf	___ftadd@sign,w
 12339  05B8  00C5               	movwf	??___ftadd+1
 12340  05B9  0845               	movf	??___ftadd+1,w
 12341  05BA  00A4               	movwf	___ftpack@sign
 12342  05BB  3189  2126         	fcall	___ftpack
 12343  05BD  0020               	movlb	0	; select bank0
 12344  05BE  0820               	movf	?___ftpack,w
 12345  05BF  00BE               	movwf	?___ftadd
 12346  05C0  0821               	movf	?___ftpack+1,w
 12347  05C1  00BF               	movwf	?___ftadd+1
 12348  05C2  0822               	movf	?___ftpack+2,w
 12349  05C3  00C0               	movwf	?___ftadd+2
 12350  05C4  0008               	return
 12351  05C5                     __end_of___ftadd:	
 12352                           
 12353                           	psect	text73
 12354  123B                     __ptext73:	
 12355 ;; *************** function ___awtoft *****************
 12356 ;; Defined at:
 12357 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  c               2    8[BANK0 ] int 
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;  sign            1   13[BANK0 ] unsigned char 
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  3    8[BANK0 ] float 
 12364 ;; Registers used:
 12365 ;;		wreg, status,2, status,0, pclath, cstack
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12371 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12374 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;Total ram usage:        6 bytes
 12376 ;; Hardware stack levels used:    1
 12377 ;; Hardware stack levels required when called:    5
 12378 ;; This function calls:
 12379 ;;		___ftpack
 12380 ;; This function is called by:
 12381 ;;		_getPercentValue
 12382 ;;		_setPercentValue
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           
 12387                           ;psect for function ___awtoft
 12388  123B                     ___awtoft:	
 12389                           
 12390                           ;incstack = 0
 12391                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 12392  123B  0020               	movlb	0	; select bank0
 12393  123C  01AD               	clrf	___awtoft@sign
 12394  123D  1FA9               	btfss	___awtoft@c+1,7
 12395  123E  2A46               	goto	l7314
 12396  123F  09A8               	comf	___awtoft@c,f
 12397  1240  09A9               	comf	___awtoft@c+1,f
 12398  1241  0AA8               	incf	___awtoft@c,f
 12399  1242  1903               	skipnz
 12400  1243  0AA9               	incf	___awtoft@c+1,f
 12401  1244  01AD               	clrf	___awtoft@sign
 12402  1245  0AAD               	incf	___awtoft@sign,f
 12403  1246                     l7314:	
 12404  1246  0828               	movf	___awtoft@c,w
 12405  1247  00A0               	movwf	___ftpack@arg
 12406  1248  0829               	movf	___awtoft@c+1,w
 12407  1249  00A1               	movwf	___ftpack@arg+1
 12408  124A  01A2               	clrf	___ftpack@arg+2
 12409  124B  308E               	movlw	142
 12410  124C  00AB               	movwf	??___awtoft
 12411  124D  082B               	movf	??___awtoft,w
 12412  124E  00A3               	movwf	___ftpack@exp
 12413  124F  082D               	movf	___awtoft@sign,w
 12414  1250  00AC               	movwf	??___awtoft+1
 12415  1251  082C               	movf	??___awtoft+1,w
 12416  1252  00A4               	movwf	___ftpack@sign
 12417  1253  3189  2126         	fcall	___ftpack
 12418  1255  0020               	movlb	0	; select bank0
 12419  1256  0820               	movf	?___ftpack,w
 12420  1257  00A8               	movwf	?___awtoft
 12421  1258  0821               	movf	?___ftpack+1,w
 12422  1259  00A9               	movwf	?___awtoft+1
 12423  125A  0822               	movf	?___ftpack+2,w
 12424  125B  00AA               	movwf	?___awtoft+2
 12425  125C  0008               	return
 12426  125D                     __end_of___awtoft:	
 12427                           
 12428                           	psect	text74
 12429  0926                     __ptext74:	
 12430 ;; *************** function ___ftpack *****************
 12431 ;; Defined at:
 12432 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;  arg             3    0[BANK0 ] unsigned um
 12435 ;;  exp             1    3[BANK0 ] unsigned char 
 12436 ;;  sign            1    4[BANK0 ] unsigned char 
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;		None
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  3    0[BANK0 ] float 
 12441 ;; Registers used:
 12442 ;;		wreg, status,2, status,0
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12448 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12452 ;;Total ram usage:        8 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    4
 12455 ;; This function calls:
 12456 ;;		Nothing
 12457 ;; This function is called by:
 12458 ;;		___awtoft
 12459 ;;		___ftadd
 12460 ;;		___ftdiv
 12461 ;;		___ftmul
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           
 12466                           ;psect for function ___ftpack
 12467  0926                     ___ftpack:	
 12468                           
 12469                           ;incstack = 0
 12470                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 12471  0926  0020               	movlb	0	; select bank0
 12472  0927  0823               	movf	___ftpack@exp,w
 12473  0928  1903               	btfsc	3,2
 12474  0929  292F               	goto	l7280
 12475  092A  0822               	movf	___ftpack@arg+2,w
 12476  092B  0421               	iorwf	___ftpack@arg+1,w
 12477  092C  0420               	iorwf	___ftpack@arg,w
 12478  092D  1D03               	skipz
 12479  092E  2940               	goto	l7286
 12480  092F                     l7280:	
 12481  092F  3000               	movlw	0
 12482  0930  00A0               	movwf	?___ftpack
 12483  0931  3000               	movlw	0
 12484  0932  00A1               	movwf	?___ftpack+1
 12485  0933  3000               	movlw	0
 12486  0934  00A2               	movwf	?___ftpack+2
 12487  0935  0008               	return
 12488  0936                     l7284:	
 12489  0936  3001               	movlw	1
 12490  0937  00A5               	movwf	??___ftpack
 12491  0938  0825               	movf	??___ftpack,w
 12492  0939  07A3               	addwf	___ftpack@exp,f
 12493  093A  3001               	movlw	1
 12494  093B                     u6515:	
 12495  093B  36A2               	lsrf	___ftpack@arg+2,f
 12496  093C  0CA1               	rrf	___ftpack@arg+1,f
 12497  093D  0CA0               	rrf	___ftpack@arg,f
 12498  093E  0B89               	decfsz	9,f
 12499  093F  293B               	goto	u6515
 12500  0940                     l7286:	
 12501  0940  30FE               	movlw	254
 12502  0941  0522               	andwf	___ftpack@arg+2,w
 12503  0942  1903               	btfsc	3,2
 12504  0943  2959               	goto	l2988
 12505  0944  2936               	goto	l7284
 12506  0945                     l7288:	
 12507  0945  3001               	movlw	1
 12508  0946  00A5               	movwf	??___ftpack
 12509  0947  0825               	movf	??___ftpack,w
 12510  0948  07A3               	addwf	___ftpack@exp,f
 12511  0949  3001               	movlw	1
 12512  094A  07A0               	addwf	___ftpack@arg,f
 12513  094B  3000               	movlw	0
 12514  094C  1803               	skipnc
 12515  094D  3001               	movlw	1
 12516  094E  07A1               	addwf	___ftpack@arg+1,f
 12517  094F  3000               	movlw	0
 12518  0950  1803               	skipnc
 12519  0951  3001               	movlw	1
 12520  0952  07A2               	addwf	___ftpack@arg+2,f
 12521  0953  3001               	movlw	1
 12522  0954                     u6535:	
 12523  0954  36A2               	lsrf	___ftpack@arg+2,f
 12524  0955  0CA1               	rrf	___ftpack@arg+1,f
 12525  0956  0CA0               	rrf	___ftpack@arg,f
 12526  0957  0B89               	decfsz	9,f
 12527  0958  2954               	goto	u6535
 12528  0959                     l2988:	
 12529  0959  30FF               	movlw	255
 12530  095A  0522               	andwf	___ftpack@arg+2,w
 12531  095B  1903               	btfsc	3,2
 12532  095C  2966               	goto	l7296
 12533  095D  2945               	goto	l7288
 12534  095E                     l7294:	
 12535  095E  3001               	movlw	1
 12536  095F  02A3               	subwf	___ftpack@exp,f
 12537  0960  3001               	movlw	1
 12538  0961                     u6555:	
 12539  0961  35A0               	lslf	___ftpack@arg,f
 12540  0962  0DA1               	rlf	___ftpack@arg+1,f
 12541  0963  0DA2               	rlf	___ftpack@arg+2,f
 12542  0964  0B89               	decfsz	9,f
 12543  0965  2961               	goto	u6555
 12544  0966                     l7296:	
 12545  0966  1FA1               	btfss	___ftpack@arg+1,7
 12546  0967  295E               	goto	l7294
 12547  0968  1823               	btfsc	___ftpack@exp,0
 12548  0969  2970               	goto	l2994
 12549  096A  30FF               	movlw	255
 12550  096B  05A0               	andwf	___ftpack@arg,f
 12551  096C  307F               	movlw	127
 12552  096D  05A1               	andwf	___ftpack@arg+1,f
 12553  096E  30FF               	movlw	255
 12554  096F  05A2               	andwf	___ftpack@arg+2,f
 12555  0970                     l2994:	
 12556  0970  1003               	clrc
 12557  0971  0CA3               	rrf	___ftpack@exp,f
 12558  0972  0823               	movf	___ftpack@exp,w
 12559  0973  00A5               	movwf	??___ftpack
 12560  0974  01A6               	clrf	??___ftpack+1
 12561  0975  01A7               	clrf	??___ftpack+2
 12562  0976  3010               	movlw	16
 12563  0977                     u6585:	
 12564  0977  35A5               	lslf	??___ftpack,f
 12565  0978  0DA6               	rlf	??___ftpack+1,f
 12566  0979  0DA7               	rlf	??___ftpack+2,f
 12567  097A  0B89               	decfsz	9,f
 12568  097B  2977               	goto	u6585
 12569  097C  0825               	movf	??___ftpack,w
 12570  097D  04A0               	iorwf	___ftpack@arg,f
 12571  097E  0826               	movf	??___ftpack+1,w
 12572  097F  04A1               	iorwf	___ftpack@arg+1,f
 12573  0980  0827               	movf	??___ftpack+2,w
 12574  0981  04A2               	iorwf	___ftpack@arg+2,f
 12575  0982  0824               	movf	___ftpack@sign,w
 12576  0983  1903               	btfsc	3,2
 12577  0984  0008               	return
 12578  0985  17A2               	bsf	___ftpack@arg+2,7
 12579  0986  0008               	return
 12580  0987                     __end_of___ftpack:	
 12581                           
 12582                           	psect	text75
 12583  1E4A                     __ptext75:	
 12584 ;; *************** function _DelayOff_Main *****************
 12585 ;; Defined at:
 12586 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 12587 ;; Parameters:    Size  Location     Type
 12588 ;;		None
 12589 ;; Auto vars:     Size  Location     Type
 12590 ;;		None
 12591 ;; Return value:  Size  Location     Type
 12592 ;;		None               void
 12593 ;; Registers used:
 12594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12595 ;; Tracked objects:
 12596 ;;		On entry : 0/0
 12597 ;;		On exit  : 0/0
 12598 ;;		Unchanged: 0/0
 12599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;Total ram usage:        0 bytes
 12605 ;; Hardware stack levels used:    1
 12606 ;; Hardware stack levels required when called:    7
 12607 ;; This function calls:
 12608 ;;		_DlyOff_Main
 12609 ;; This function is called by:
 12610 ;;		_main
 12611 ;; This function uses a non-reentrant model
 12612 ;;
 12613                           
 12614                           
 12615                           ;psect for function _DelayOff_Main
 12616  1E4A                     _DelayOff_Main:	
 12617                           
 12618                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 12619                           
 12620                           ;incstack = 0
 12621                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12622  1E4A  3001               	movlw	1
 12623  1E4B  318A  2257  319E   	fcall	_DlyOff_Main
 12624                           
 12625                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 12626  1E4E  3002               	movlw	2
 12627  1E4F  318A  2257         	fcall	_DlyOff_Main
 12628  1E51  0008               	return
 12629  1E52                     __end_of_DelayOff_Main:	
 12630                           
 12631                           	psect	text76
 12632  0A57                     __ptext76:	
 12633 ;; *************** function _DlyOff_Main *****************
 12634 ;; Defined at:
 12635 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 12636 ;; Parameters:    Size  Location     Type
 12637 ;;  sw              1    wreg     unsigned char 
 12638 ;; Auto vars:     Size  Location     Type
 12639 ;;  sw              1   12[BANK0 ] unsigned char 
 12640 ;; Return value:  Size  Location     Type
 12641 ;;		None               void
 12642 ;; Registers used:
 12643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12644 ;; Tracked objects:
 12645 ;;		On entry : 0/0
 12646 ;;		On exit  : 0/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12652 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;Total ram usage:        3 bytes
 12654 ;; Hardware stack levels used:    1
 12655 ;; Hardware stack levels required when called:    6
 12656 ;; This function calls:
 12657 ;;		_DelayOffPointSelect
 12658 ;;		_setBuz
 12659 ;;		_setDimmerLights_Switch
 12660 ;;		_setDimmerLights_Trigger
 12661 ;;		_setRFSW_Status
 12662 ;;		_setRF_DimmerLights
 12663 ;;		_setSw_Status
 12664 ;;		_setTxData
 12665 ;; This function is called by:
 12666 ;;		_DelayOff_Main
 12667 ;; This function uses a non-reentrant model
 12668 ;;
 12669                           
 12670                           
 12671                           ;psect for function _DlyOff_Main
 12672  0A57                     _DlyOff_Main:	
 12673                           
 12674                           ;incstack = 0
 12675                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12676                           ;DlyOff_Main@sw stored from wreg
 12677  0A57  0020               	movlb	0	; select bank0
 12678  0A58  00AC               	movwf	DlyOff_Main@sw
 12679                           
 12680                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 12681  0A59  082C               	movf	DlyOff_Main@sw,w
 12682  0A5A  3190  2066  318A   	fcall	_DelayOffPointSelect
 12683                           
 12684                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 12685  0A5D  0020               	movlb	0	; select bank0
 12686  0A5E  0869               	movf	_DelayOff,w
 12687  0A5F  0086               	movwf	6
 12688  0A60  0187               	clrf	7
 12689  0A61  1C81               	btfss	1,1
 12690  0A62  0008               	return
 12691                           
 12692                           ;DelayOff_B1.c: 70: {
 12693                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 12694  0A63  0869               	movf	_DelayOff,w
 12695  0A64  3E02               	addlw	2
 12696  0A65  0086               	movwf	6
 12697  0A66  0187               	clrf	7
 12698  0A67  3001               	movlw	1
 12699  0A68  0781               	addwf	1,f
 12700  0A69  3141               	addfsr 1,1
 12701  0A6A  1803               	skipnc
 12702  0A6B  0A81               	incf	1,f
 12703                           
 12704                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5400)
 12705  0A6C  0869               	movf	_DelayOff,w
 12706  0A6D  3E02               	addlw	2
 12707  0A6E  0086               	movwf	6
 12708  0A6F  0187               	clrf	7
 12709  0A70  3F40               	moviw [0]fsr1
 12710  0A71  00AA               	movwf	??_DlyOff_Main
 12711  0A72  3F41               	moviw [1]fsr1
 12712  0A73  00AB               	movwf	??_DlyOff_Main+1
 12713  0A74  3015               	movlw	21
 12714  0A75  022B               	subwf	??_DlyOff_Main+1,w
 12715  0A76  3018               	movlw	24
 12716  0A77  1903               	skipnz
 12717  0A78  022A               	subwf	??_DlyOff_Main,w
 12718  0A79  1C03               	skipc
 12719  0A7A  0008               	return
 12720                           
 12721                           ;DelayOff_B1.c: 73: {
 12722                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 12723  0A7B  0869               	movf	_DelayOff,w
 12724  0A7C  3E02               	addlw	2
 12725  0A7D  0086               	movwf	6
 12726  0A7E  0187               	clrf	7
 12727  0A7F  3000               	movlw	0
 12728  0A80  3FC0               	movwi [0]fsr1
 12729  0A81  3FC1               	movwi [1]fsr1
 12730                           
 12731                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 12732  0A82  3001               	movlw	1
 12733  0A83  00AA               	movwf	??_DlyOff_Main
 12734  0A84  0869               	movf	_DelayOff,w
 12735  0A85  3E04               	addlw	4
 12736  0A86  0086               	movwf	6
 12737  0A87  0187               	clrf	7
 12738  0A88  082A               	movf	??_DlyOff_Main,w
 12739  0A89  0781               	addwf	1,f
 12740                           
 12741                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 12742  0A8A  0869               	movf	_DelayOff,w
 12743  0A8B  3E04               	addlw	4
 12744  0A8C  0086               	movwf	6
 12745  0A8D  0187               	clrf	7
 12746  0A8E  0A69               	incf	_DelayOff,w
 12747  0A8F  0084               	movwf	4
 12748  0A90  0185               	clrf	5
 12749  0A91  0800               	movf	0,w
 12750  0A92  0201               	subwf	1,w
 12751  0A93  1C03               	skipc
 12752  0A94  0008               	return
 12753                           
 12754                           ;DelayOff_B1.c: 77: {
 12755                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 12756  0A95  0869               	movf	_DelayOff,w
 12757  0A96  3E04               	addlw	4
 12758  0A97  0086               	movwf	6
 12759  0A98  0187               	clrf	7
 12760  0A99  0181               	clrf	1
 12761                           
 12762                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 12763  0A9A  0869               	movf	_DelayOff,w
 12764  0A9B  0086               	movwf	6
 12765  0A9C  0187               	clrf	7
 12766  0A9D  1081               	bcf	1,1
 12767                           
 12768                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 12769  0A9E  01A1               	clrf	setSw_Status@command
 12770  0A9F  082C               	movf	DlyOff_Main@sw,w
 12771  0AA0  319F  275D  318A   	fcall	_setSw_Status
 12772                           
 12773                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 12774  0AA3  0020               	movlb	0	; select bank0
 12775  0AA4  01A2               	clrf	setRFSW_Status@command
 12776  0AA5  082C               	movf	DlyOff_Main@sw,w
 12777  0AA6  319F  274E  318A   	fcall	_setRFSW_Status
 12778                           
 12779                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 12780  0AA9  0020               	movlb	0	; select bank0
 12781  0AAA  01A0               	clrf	setRF_DimmerLights@on
 12782  0AAB  082C               	movf	DlyOff_Main@sw,w
 12783  0AAC  3188  2015  318A   	fcall	_setRF_DimmerLights
 12784                           
 12785                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 12786  0AAF  0020               	movlb	0	; select bank0
 12787  0AB0  01A2               	clrf	setDimmerLights_Trigger@command
 12788  0AB1  0AA2               	incf	setDimmerLights_Trigger@command,f
 12789  0AB2  082C               	movf	DlyOff_Main@sw,w
 12790  0AB3  319F  279B  318A   	fcall	_setDimmerLights_Trigger
 12791                           
 12792                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 12793  0AB6  0020               	movlb	0	; select bank0
 12794  0AB7  01A2               	clrf	setDimmerLights_Switch@command
 12795  0AB8  082C               	movf	DlyOff_Main@sw,w
 12796  0AB9  319F  278B  318A   	fcall	_setDimmerLights_Switch
 12797                           
 12798                           ;DelayOff_B1.c: 85: setTxData(1);
 12799  0ABC  3001               	movlw	1
 12800  0ABD  3194  2467  318A   	fcall	_setTxData
 12801                           
 12802                           ;DelayOff_B1.c: 86: setBuz(1,100);
 12803  0AC0  3064               	movlw	100
 12804  0AC1  0020               	movlb	0	; select bank0
 12805  0AC2  00A6               	movwf	setBuz@time
 12806  0AC3  3000               	movlw	0
 12807  0AC4  00A7               	movwf	setBuz@time+1
 12808  0AC5  3001               	movlw	1
 12809  0AC6  318C  2425         	fcall	_setBuz
 12810  0AC8  0008               	return
 12811  0AC9                     __end_of_DlyOff_Main:	
 12812                           
 12813                           	psect	text77
 12814  1467                     __ptext77:	
 12815 ;; *************** function _setTxData *****************
 12816 ;; Defined at:
 12817 ;;		line 130 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;  rf              1    wreg     unsigned char 
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;  rf              1    4[BANK0 ] unsigned char 
 12822 ;;  i               1    5[BANK0 ] unsigned char 
 12823 ;; Return value:  Size  Location     Type
 12824 ;;		None               void
 12825 ;; Registers used:
 12826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;Total ram usage:        4 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:    5
 12839 ;; This function calls:
 12840 ;;		_RfPointSelect
 12841 ;; This function is called by:
 12842 ;;		_DlyOff_Main
 12843 ;;		_setDimmerLights_Adj
 12844 ;;		_MainT
 12845 ;;		_setControl_Lights_Table
 12846 ;;		_setRFSW_Control
 12847 ;;		_setRFSW_AdjControl
 12848 ;;		_Sw_DimmerOnFunc
 12849 ;;		_Sw_DimmerOffFunc
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           
 12854                           ;psect for function _setTxData
 12855  1467                     _setTxData:	
 12856                           
 12857                           ;incstack = 0
 12858                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12859                           ;setTxData@rf stored from wreg
 12860  1467  0020               	movlb	0	; select bank0
 12861  1468  00A4               	movwf	setTxData@rf
 12862                           
 12863                           ;RF_Control_B1.c: 132: char i;
 12864                           ;RF_Control_B1.c: 133: RfPointSelect(rf);
 12865  1469  0824               	movf	setTxData@rf,w
 12866  146A  319E  2694  3194   	fcall	_RfPointSelect
 12867                           
 12868                           ;RF_Control_B1.c: 134: if(RF->Enable)
 12869  146D  0879               	movf	_RF,w
 12870  146E  0086               	movwf	6
 12871  146F  0187               	clrf	7
 12872  1470  1C01               	btfss	1,0
 12873  1471  0008               	return
 12874                           
 12875                           ;RF_Control_B1.c: 135: {
 12876                           ;RF_Control_B1.c: 136: if(RF->TransceiveGO == 0 && 1)
 12877  1472  0879               	movf	_RF,w
 12878  1473  0086               	movwf	6
 12879  1474  0187               	clrf	7
 12880  1475  1901               	btfsc	1,2
 12881  1476  0008               	return
 12882                           
 12883                           ;RF_Control_B1.c: 137: {
 12884                           ;RF_Control_B1.c: 139: RF->TransceiveGO=1;
 12885  1477  0879               	movf	_RF,w
 12886  1478  0086               	movwf	6
 12887  1479  0187               	clrf	7
 12888  147A  1501               	bsf	1,2
 12889                           
 12890                           ;RF_Control_B1.c: 140: RF_Data[0]=0x63;
 12891  147B  3063               	movlw	99
 12892  147C  0020               	movlb	0	; select bank0
 12893  147D  00A2               	movwf	??_setTxData
 12894  147E  0822               	movf	??_setTxData,w
 12895  147F  0021               	movlb	1	; select bank1
 12896  1480  00A0               	movwf	_RF_Data^(0+128)
 12897                           
 12898                           ;RF_Control_B1.c: 141: RF_Data[1]=0x02;
 12899  1481  3002               	movlw	2
 12900  1482  0020               	movlb	0	; select bank0
 12901  1483  00A2               	movwf	??_setTxData
 12902  1484  0822               	movf	??_setTxData,w
 12903  1485  0021               	movlb	1	; select bank1
 12904  1486  00A1               	movwf	(_RF_Data^(0+128)+1)
 12905                           
 12906                           ;RF_Control_B1.c: 142: for(i=2 ;i< 21 ;i++)
 12907  1487  3002               	movlw	2
 12908  1488  0020               	movlb	0	; select bank0
 12909  1489  00A2               	movwf	??_setTxData
 12910  148A  0822               	movf	??_setTxData,w
 12911  148B  00A5               	movwf	setTxData@i
 12912  148C                     L9:	
 12913  148C  3015               	movlw	21
 12914  148D  0225               	subwf	setTxData@i,w
 12915  148E  1803               	btfsc	3,0
 12916  148F  0008               	return
 12917                           
 12918                           ;RF_Control_B1.c: 143: {
 12919                           ;RF_Control_B1.c: 144: RF_Data[i]=Product->Data[i];
 12920  1490  0825               	movf	setTxData@i,w
 12921  1491  076E               	addwf	_Product,w
 12922  1492  00A2               	movwf	??_setTxData
 12923  1493  0822               	movf	??_setTxData,w
 12924  1494  0086               	movwf	6
 12925  1495  3001               	movlw	1	; select bank2/3
 12926  1496  0087               	movwf	7
 12927  1497  0801               	movf	1,w
 12928  1498  00A3               	movwf	??_setTxData+1
 12929  1499  0825               	movf	setTxData@i,w
 12930  149A  3EA0               	addlw	_RF_Data& (0+255)
 12931  149B  0086               	movwf	6
 12932  149C  0187               	clrf	7
 12933  149D  0823               	movf	??_setTxData+1,w
 12934  149E  0081               	movwf	1
 12935  149F  3001               	movlw	1
 12936  14A0  00A2               	movwf	??_setTxData
 12937  14A1  0822               	movf	??_setTxData,w
 12938  14A2  07A5               	addwf	setTxData@i,f
 12939  14A3  2C8C               	goto	L9
 12940  14A4                     __end_of_setTxData:	
 12941                           
 12942                           	psect	text78
 12943  1E94                     __ptext78:	
 12944 ;; *************** function _RfPointSelect *****************
 12945 ;; Defined at:
 12946 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 12947 ;; Parameters:    Size  Location     Type
 12948 ;;  rf              1    wreg     unsigned char 
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;  rf              1    1[BANK0 ] unsigned char 
 12951 ;; Return value:  Size  Location     Type
 12952 ;;		None               void
 12953 ;; Registers used:
 12954 ;;		wreg
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12963 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12964 ;;Total ram usage:        2 bytes
 12965 ;; Hardware stack levels used:    1
 12966 ;; Hardware stack levels required when called:    4
 12967 ;; This function calls:
 12968 ;;		Nothing
 12969 ;; This function is called by:
 12970 ;;		_setRF_Learn
 12971 ;;		_setRF_RxStatus
 12972 ;;		_setRF_Main
 12973 ;;		_setTxData
 12974 ;;		_setRF_Enable
 12975 ;;		_RF_RxDisable
 12976 ;;		_getRxData
 12977 ;;		_setLog_Code
 12978 ;;		_setControl_Lights_Table
 12979 ;; This function uses a non-reentrant model
 12980 ;;
 12981                           
 12982                           
 12983                           ;psect for function _RfPointSelect
 12984  1E94                     _RfPointSelect:	
 12985                           
 12986                           ;incstack = 0
 12987                           ; Regs used in _RfPointSelect: [wreg]
 12988                           ;RfPointSelect@rf stored from wreg
 12989  1E94  0020               	movlb	0	; select bank0
 12990  1E95  00A1               	movwf	RfPointSelect@rf
 12991                           
 12992                           ;RF_Control_B1.c: 10: if(rf == 1)
 12993  1E96  0821               	movf	RfPointSelect@rf,w
 12994  1E97  3A01               	xorlw	1
 12995  1E98  1D03               	skipz
 12996  1E99  0008               	return
 12997                           
 12998                           ;RF_Control_B1.c: 11: {
 12999                           ;RF_Control_B1.c: 12: RF=&RF1;
 13000  1E9A  30EA               	movlw	_RF1& (0+255)
 13001  1E9B  00A0               	movwf	??_RfPointSelect
 13002  1E9C  0820               	movf	??_RfPointSelect,w
 13003  1E9D  00F9               	movwf	_RF
 13004  1E9E  0008               	return
 13005  1E9F                     __end_of_RfPointSelect:	
 13006                           
 13007                           	psect	text79
 13008  1F5D                     __ptext79:	
 13009 ;; *************** function _setSw_Status *****************
 13010 ;; Defined at:
 13011 ;;		line 130 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;  sw              1    wreg     unsigned char 
 13014 ;;  command         1    1[BANK0 ] unsigned char 
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;  sw              1    2[BANK0 ] unsigned char 
 13017 ;; Return value:  Size  Location     Type
 13018 ;;		None               void
 13019 ;; Registers used:
 13020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13026 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;Total ram usage:        2 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    5
 13033 ;; This function calls:
 13034 ;;		_SwPointSelect
 13035 ;; This function is called by:
 13036 ;;		_DlyOff_Main
 13037 ;;		_setControl_Lights_Table
 13038 ;;		_setRFSW_Control
 13039 ;;		_setDimmerLights_ERROR
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043                           
 13044                           ;psect for function _setSw_Status
 13045  1F5D                     _setSw_Status:	
 13046                           
 13047                           ;incstack = 0
 13048                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13049                           ;setSw_Status@sw stored from wreg
 13050  1F5D  0020               	movlb	0	; select bank0
 13051  1F5E  00A2               	movwf	setSw_Status@sw
 13052                           
 13053                           ;Switch_B1.c: 132: SwPointSelect(sw);
 13054  1F5F  0822               	movf	setSw_Status@sw,w
 13055  1F60  3190  207A         	fcall	_SwPointSelect
 13056                           
 13057                           ;Switch_B1.c: 133: Sw->Status=command;
 13058  1F62  0876               	movf	_Sw,w
 13059  1F63  0086               	movwf	6
 13060  1F64  0877               	movf	_Sw+1,w
 13061  1F65  0087               	movwf	7
 13062  1F66  0020               	movlb	0	; select bank0
 13063  1F67  0821               	movf	setSw_Status@command,w
 13064  1F68  1301               	bcf	1,6
 13065  1F69  1D03               	skipz
 13066  1F6A  1701               	bsf	1,6
 13067  1F6B  0008               	return
 13068  1F6C                     __end_of_setSw_Status:	
 13069                           
 13070                           	psect	text80
 13071  107A                     __ptext80:	
 13072 ;; *************** function _SwPointSelect *****************
 13073 ;; Defined at:
 13074 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;  sw              1    wreg     unsigned char 
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;  sw              1    0[BANK0 ] unsigned char 
 13079 ;; Return value:  Size  Location     Type
 13080 ;;		None               void
 13081 ;; Registers used:
 13082 ;;		wreg, status,2, status,0
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;Total ram usage:        1 bytes
 13093 ;; Hardware stack levels used:    1
 13094 ;; Hardware stack levels required when called:    4
 13095 ;; This function calls:
 13096 ;;		Nothing
 13097 ;; This function is called by:
 13098 ;;		_setSw_Enable
 13099 ;;		_setSw_Status
 13100 ;;		_setSw_Main
 13101 ;;		_Sw_Detect
 13102 ;; This function uses a non-reentrant model
 13103 ;;
 13104                           
 13105                           
 13106                           ;psect for function _SwPointSelect
 13107  107A                     _SwPointSelect:	
 13108                           
 13109                           ;incstack = 0
 13110                           ; Regs used in _SwPointSelect: [wreg+status,2+status,0]
 13111                           ;SwPointSelect@sw stored from wreg
 13112  107A  0020               	movlb	0	; select bank0
 13113  107B  00A0               	movwf	SwPointSelect@sw
 13114                           
 13115                           ;Switch_B1.c: 19: if(sw == 1)
 13116  107C  0820               	movf	SwPointSelect@sw,w
 13117  107D  3A01               	xorlw	1
 13118  107E  1D03               	skipz
 13119  107F  2885               	goto	l7606
 13120                           
 13121                           ;Switch_B1.c: 20: {
 13122                           ;Switch_B1.c: 21: Sw=&Sw1;
 13123  1080  30C1               	movlw	low _Sw1
 13124  1081  00F6               	movwf	_Sw
 13125  1082  3000               	movlw	high _Sw1
 13126  1083  00F7               	movwf	_Sw+1
 13127                           
 13128                           ;Switch_B1.c: 22: }
 13129  1084  0008               	return
 13130  1085                     l7606:	
 13131                           
 13132                           ;Switch_B1.c: 25: else if(sw == 2)
 13133  1085  0820               	movf	SwPointSelect@sw,w
 13134  1086  3A02               	xorlw	2
 13135  1087  1D03               	skipz
 13136  1088  0008               	return
 13137                           
 13138                           ;Switch_B1.c: 26: {
 13139                           ;Switch_B1.c: 27: Sw=&Sw2;
 13140  1089  3056               	movlw	low _Sw2
 13141  108A  00F6               	movwf	_Sw
 13142  108B  3001               	movlw	high _Sw2
 13143  108C  00F7               	movwf	_Sw+1
 13144  108D  0008               	return
 13145  108E                     __end_of_SwPointSelect:	
 13146                           
 13147                           	psect	text81
 13148  0815                     __ptext81:	
 13149 ;; *************** function _setRF_DimmerLights *****************
 13150 ;; Defined at:
 13151 ;;		line 435 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 13152 ;; Parameters:    Size  Location     Type
 13153 ;;  lights          1    wreg     unsigned char 
 13154 ;;  on              1    0[BANK0 ] unsigned char 
 13155 ;; Auto vars:     Size  Location     Type
 13156 ;;  lights          1    4[BANK0 ] unsigned char 
 13157 ;;  status          1    3[BANK0 ] unsigned char 
 13158 ;; Return value:  Size  Location     Type
 13159 ;;		None               void
 13160 ;; Registers used:
 13161 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13167 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13169 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13170 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13171 ;;Total ram usage:        5 bytes
 13172 ;; Hardware stack levels used:    1
 13173 ;; Hardware stack levels required when called:    4
 13174 ;; This function calls:
 13175 ;;		Nothing
 13176 ;; This function is called by:
 13177 ;;		_DlyOff_Main
 13178 ;;		_setDimmerLights_Adj
 13179 ;;		_setRFSW_Control
 13180 ;;		_Sw_DimmerOnFunc
 13181 ;;		_Sw_DimmerOffFunc
 13182 ;; This function uses a non-reentrant model
 13183 ;;
 13184                           
 13185                           
 13186                           ;psect for function _setRF_DimmerLights
 13187  0815                     _setRF_DimmerLights:	
 13188                           
 13189                           ;incstack = 0
 13190                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0]
 13191                           ;setRF_DimmerLights@lights stored from wreg
 13192  0815  0020               	movlb	0	; select bank0
 13193  0816  00A4               	movwf	setRF_DimmerLights@lights
 13194                           
 13195                           ;RF_Control_B1.c: 437: char status;
 13196                           ;RF_Control_B1.c: 438: status=1;
 13197  0817  01A3               	clrf	setRF_DimmerLights@status
 13198  0818  0AA3               	incf	setRF_DimmerLights@status,f
 13199                           
 13200                           ;RF_Control_B1.c: 439: status<<=(lights-1);
 13201  0819  0824               	movf	setRF_DimmerLights@lights,w
 13202  081A  3EFF               	addlw	-1
 13203  081B  0A89               	incf	9,f
 13204  081C  281F               	goto	u7390
 13205  081D                     u7395:	
 13206  081D  1003               	clrc
 13207  081E  0DA3               	rlf	setRF_DimmerLights@status,f
 13208  081F                     u7390:	
 13209  081F  3EFF               	addlw	-1
 13210  0820  1D03               	skipz
 13211  0821  281D               	goto	u7395
 13212                           
 13213                           ;RF_Control_B1.c: 440: Product->Data[11]=lights;
 13214  0822  0824               	movf	setRF_DimmerLights@lights,w
 13215  0823  00A1               	movwf	??_setRF_DimmerLights
 13216  0824  086E               	movf	_Product,w
 13217  0825  3E0B               	addlw	11
 13218  0826  0086               	movwf	6
 13219  0827  3001               	movlw	1	; select bank2/3
 13220  0828  0087               	movwf	7
 13221  0829  0821               	movf	??_setRF_DimmerLights,w
 13222  082A  0081               	movwf	1
 13223                           
 13224                           ;RF_Control_B1.c: 441: Product->Data[9]=Product->Data[20+lights];
 13225  082B  0824               	movf	setRF_DimmerLights@lights,w
 13226  082C  3E14               	addlw	20
 13227  082D  076E               	addwf	_Product,w
 13228  082E  00A1               	movwf	??_setRF_DimmerLights
 13229  082F  0821               	movf	??_setRF_DimmerLights,w
 13230  0830  0086               	movwf	6
 13231  0831  3001               	movlw	1	; select bank2/3
 13232  0832  0087               	movwf	7
 13233  0833  0801               	movf	1,w
 13234  0834  00A2               	movwf	??_setRF_DimmerLights+1
 13235  0835  086E               	movf	_Product,w
 13236  0836  3E09               	addlw	9
 13237  0837  0086               	movwf	6
 13238  0838  3001               	movlw	1	; select bank2/3
 13239  0839  0087               	movwf	7
 13240  083A  0822               	movf	??_setRF_DimmerLights+1,w
 13241  083B  0081               	movwf	1
 13242                           
 13243                           ;RF_Control_B1.c: 442: Product->Data[17]=Product->Data[26+lights];
 13244  083C  0824               	movf	setRF_DimmerLights@lights,w
 13245  083D  3E1A               	addlw	26
 13246  083E  076E               	addwf	_Product,w
 13247  083F  00A1               	movwf	??_setRF_DimmerLights
 13248  0840  0821               	movf	??_setRF_DimmerLights,w
 13249  0841  0086               	movwf	6
 13250  0842  3001               	movlw	1	; select bank2/3
 13251  0843  0087               	movwf	7
 13252  0844  0801               	movf	1,w
 13253  0845  00A2               	movwf	??_setRF_DimmerLights+1
 13254  0846  086E               	movf	_Product,w
 13255  0847  3E11               	addlw	17
 13256  0848  0086               	movwf	6
 13257  0849  3001               	movlw	1	; select bank2/3
 13258  084A  0087               	movwf	7
 13259  084B  0822               	movf	??_setRF_DimmerLights+1,w
 13260  084C  0081               	movwf	1
 13261                           
 13262                           ;RF_Control_B1.c: 443: if(on)
 13263  084D  0820               	movf	setRF_DimmerLights@on,w
 13264  084E  1903               	btfsc	3,2
 13265  084F  2860               	goto	l7658
 13266                           
 13267                           ;RF_Control_B1.c: 444: {
 13268                           ;RF_Control_B1.c: 445: Product->Data[15]=(Product->Data[15]|status);
 13269  0850  086E               	movf	_Product,w
 13270  0851  3E0F               	addlw	15
 13271  0852  0086               	movwf	6
 13272  0853  3001               	movlw	1	; select bank2/3
 13273  0854  0087               	movwf	7
 13274  0855  0801               	movf	1,w
 13275  0856  0423               	iorwf	setRF_DimmerLights@status,w
 13276  0857  00A1               	movwf	??_setRF_DimmerLights
 13277  0858  086E               	movf	_Product,w
 13278  0859  3E0F               	addlw	15
 13279  085A  0086               	movwf	6
 13280  085B  3001               	movlw	1	; select bank2/3
 13281  085C  0087               	movwf	7
 13282  085D  0821               	movf	??_setRF_DimmerLights,w
 13283  085E  0081               	movwf	1
 13284                           
 13285                           ;RF_Control_B1.c: 446: }
 13286  085F  0008               	return
 13287  0860                     l7658:	
 13288                           
 13289                           ;RF_Control_B1.c: 447: else
 13290                           ;RF_Control_B1.c: 448: {
 13291                           ;RF_Control_B1.c: 449: Product->Data[15]=(Product->Data[15]&(~status));
 13292  0860  086E               	movf	_Product,w
 13293  0861  3E0F               	addlw	15
 13294  0862  0086               	movwf	6
 13295  0863  3001               	movlw	1	; select bank2/3
 13296  0864  0087               	movwf	7
 13297  0865  0923               	comf	setRF_DimmerLights@status,w
 13298  0866  0501               	andwf	1,w
 13299  0867  00A1               	movwf	??_setRF_DimmerLights
 13300  0868  086E               	movf	_Product,w
 13301  0869  3E0F               	addlw	15
 13302  086A  0086               	movwf	6
 13303  086B  3001               	movlw	1	; select bank2/3
 13304  086C  0087               	movwf	7
 13305  086D  0821               	movf	??_setRF_DimmerLights,w
 13306  086E  0081               	movwf	1
 13307  086F  0008               	return
 13308  0870                     __end_of_setRF_DimmerLights:	
 13309                           
 13310                           	psect	text82
 13311  1F4E                     __ptext82:	
 13312 ;; *************** function _setRFSW_Status *****************
 13313 ;; Defined at:
 13314 ;;		line 415 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;  sw              1    wreg     unsigned char 
 13317 ;;  command         1    2[BANK0 ] unsigned char 
 13318 ;; Auto vars:     Size  Location     Type
 13319 ;;  sw              1    3[BANK0 ] unsigned char 
 13320 ;; Return value:  Size  Location     Type
 13321 ;;		None               void
 13322 ;; Registers used:
 13323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13324 ;; Tracked objects:
 13325 ;;		On entry : 0/0
 13326 ;;		On exit  : 0/0
 13327 ;;		Unchanged: 0/0
 13328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13329 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13332 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13333 ;;Total ram usage:        2 bytes
 13334 ;; Hardware stack levels used:    1
 13335 ;; Hardware stack levels required when called:    5
 13336 ;; This function calls:
 13337 ;;		_RfSWPointSelect
 13338 ;; This function is called by:
 13339 ;;		_DlyOff_Main
 13340 ;;		_setControl_Lights_Table
 13341 ;;		_Sw_DimmerOnFunc
 13342 ;;		_Sw_DimmerAdjFunc
 13343 ;;		_setDimmerLights_ERROR
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347                           
 13348                           ;psect for function _setRFSW_Status
 13349  1F4E                     _setRFSW_Status:	
 13350                           
 13351                           ;incstack = 0
 13352                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13353                           ;setRFSW_Status@sw stored from wreg
 13354  1F4E  0020               	movlb	0	; select bank0
 13355  1F4F  00A3               	movwf	setRFSW_Status@sw
 13356                           
 13357                           ;RF_Control_B1.c: 417: RfSWPointSelect(sw);
 13358  1F50  0823               	movf	setRFSW_Status@sw,w
 13359  1F51  3190  20A3         	fcall	_RfSWPointSelect
 13360                           
 13361                           ;RF_Control_B1.c: 418: RFSW->Status=command;
 13362  1F53  0021               	movlb	1	; select bank1
 13363  1F54  0839               	movf	_RFSW^(0+128),w
 13364  1F55  0086               	movwf	6
 13365  1F56  0187               	clrf	7
 13366  1F57  0020               	movlb	0	; select bank0
 13367  1F58  0822               	movf	setRFSW_Status@command,w
 13368  1F59  1001               	bcf	1,0
 13369  1F5A  1D03               	skipz
 13370  1F5B  1401               	bsf	1,0
 13371  1F5C  0008               	return
 13372  1F5D                     __end_of_setRFSW_Status:	
 13373                           
 13374                           	psect	text83
 13375  10A3                     __ptext83:	
 13376 ;; *************** function _RfSWPointSelect *****************
 13377 ;; Defined at:
 13378 ;;		line 338 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  sw              1    wreg     unsigned char 
 13381 ;; Auto vars:     Size  Location     Type
 13382 ;;  sw              1    1[BANK0 ] unsigned char 
 13383 ;; Return value:  Size  Location     Type
 13384 ;;		None               void
 13385 ;; Registers used:
 13386 ;;		wreg
 13387 ;; Tracked objects:
 13388 ;;		On entry : 0/0
 13389 ;;		On exit  : 0/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;Total ram usage:        2 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:    4
 13399 ;; This function calls:
 13400 ;;		Nothing
 13401 ;; This function is called by:
 13402 ;;		_setRFSW_Control
 13403 ;;		_setRFSW_AdjControl
 13404 ;;		_setRFSW_Status
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function _RfSWPointSelect
 13410  10A3                     _RfSWPointSelect:	
 13411                           
 13412                           ;incstack = 0
 13413                           ; Regs used in _RfSWPointSelect: [wreg]
 13414                           ;RfSWPointSelect@sw stored from wreg
 13415  10A3  0020               	movlb	0	; select bank0
 13416  10A4  00A1               	movwf	RfSWPointSelect@sw
 13417                           
 13418                           ;RF_Control_B1.c: 341: if(sw == 1)
 13419  10A5  0821               	movf	RfSWPointSelect@sw,w
 13420  10A6  3A01               	xorlw	1
 13421  10A7  1D03               	skipz
 13422  10A8  28AE               	goto	l2349
 13423                           
 13424                           ;RF_Control_B1.c: 342: {
 13425                           ;RF_Control_B1.c: 343: RFSW=&RFSW1;
 13426  10A9  30EC               	movlw	_RFSW1& (0+255)
 13427  10AA  00A0               	movwf	??_RfSWPointSelect
 13428  10AB  0820               	movf	??_RfSWPointSelect,w
 13429  10AC  0021               	movlb	1	; select bank1
 13430  10AD  00B9               	movwf	_RFSW^(0+128)
 13431  10AE                     l2349:	
 13432                           
 13433                           ;RF_Control_B1.c: 344: }
 13434                           ;RF_Control_B1.c: 347: if(sw == 2)
 13435  10AE  0020               	movlb	0	; select bank0
 13436  10AF  0821               	movf	RfSWPointSelect@sw,w
 13437  10B0  3A02               	xorlw	2
 13438  10B1  1D03               	skipz
 13439  10B2  0008               	return
 13440                           
 13441                           ;RF_Control_B1.c: 348: {
 13442                           ;RF_Control_B1.c: 349: RFSW=&RFSW2;
 13443  10B3  30ED               	movlw	_RFSW2& (0+255)
 13444  10B4  00A0               	movwf	??_RfSWPointSelect
 13445  10B5  0820               	movf	??_RfSWPointSelect,w
 13446  10B6  0021               	movlb	1	; select bank1
 13447  10B7  00B9               	movwf	_RFSW^(0+128)
 13448  10B8  0008               	return
 13449  10B9                     __end_of_RfSWPointSelect:	
 13450                           
 13451                           	psect	text84
 13452  1F9B                     __ptext84:	
 13453 ;; *************** function _setDimmerLights_Trigger *****************
 13454 ;; Defined at:
 13455 ;;		line 443 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13456 ;; Parameters:    Size  Location     Type
 13457 ;;  lights          1    wreg     unsigned char 
 13458 ;;  command         1    2[BANK0 ] unsigned char 
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;  lights          1    3[BANK0 ] unsigned char 
 13461 ;; Return value:  Size  Location     Type
 13462 ;;		None               void
 13463 ;; Registers used:
 13464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13470 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13474 ;;Total ram usage:        2 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; Hardware stack levels required when called:    5
 13477 ;; This function calls:
 13478 ;;		_DimmerLightsPointSelect
 13479 ;; This function is called by:
 13480 ;;		_DlyOff_Main
 13481 ;;		_setRFSW_Control
 13482 ;;		_Sw_DimmerOnFunc
 13483 ;;		_Sw_DimmerOffFunc
 13484 ;; This function uses a non-reentrant model
 13485 ;;
 13486                           
 13487                           
 13488                           ;psect for function _setDimmerLights_Trigger
 13489  1F9B                     _setDimmerLights_Trigger:	
 13490                           
 13491                           ;incstack = 0
 13492                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 13493                           ;setDimmerLights_Trigger@lights stored from wreg
 13494  1F9B  0020               	movlb	0	; select bank0
 13495  1F9C  00A3               	movwf	setDimmerLights_Trigger@lights
 13496                           
 13497                           ;Dimmer_B1.c: 445: DimmerLightsPointSelect(lights);
 13498  1F9D  0823               	movf	setDimmerLights_Trigger@lights,w
 13499  1F9E  319F  27ED         	fcall	_DimmerLightsPointSelect
 13500                           
 13501                           ;Dimmer_B1.c: 446: DimmerLights->Trigger=command;
 13502  1FA0  0020               	movlb	0	; select bank0
 13503  1FA1  086B               	movf	_DimmerLights,w
 13504  1FA2  3E09               	addlw	9
 13505  1FA3  0086               	movwf	6
 13506  1FA4  3001               	movlw	1	; select bank2/3
 13507  1FA5  0087               	movwf	7
 13508  1FA6  0822               	movf	setDimmerLights_Trigger@command,w
 13509  1FA7  1081               	bcf	1,1
 13510  1FA8  1D03               	skipz
 13511  1FA9  1481               	bsf	1,1
 13512  1FAA  0008               	return
 13513  1FAB                     __end_of_setDimmerLights_Trigger:	
 13514                           
 13515                           	psect	text85
 13516  1F8B                     __ptext85:	
 13517 ;; *************** function _setDimmerLights_Switch *****************
 13518 ;; Defined at:
 13519 ;;		line 433 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;  lights          1    wreg     unsigned char 
 13522 ;;  command         1    2[BANK0 ] unsigned char 
 13523 ;; Auto vars:     Size  Location     Type
 13524 ;;  lights          1    3[BANK0 ] unsigned char 
 13525 ;; Return value:  Size  Location     Type
 13526 ;;		None               void
 13527 ;; Registers used:
 13528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13529 ;; Tracked objects:
 13530 ;;		On entry : 0/0
 13531 ;;		On exit  : 0/0
 13532 ;;		Unchanged: 0/0
 13533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13534 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13538 ;;Total ram usage:        2 bytes
 13539 ;; Hardware stack levels used:    1
 13540 ;; Hardware stack levels required when called:    5
 13541 ;; This function calls:
 13542 ;;		_DimmerLightsPointSelect
 13543 ;; This function is called by:
 13544 ;;		_DlyOff_Main
 13545 ;;		_setRFSW_Control
 13546 ;;		_Sw_DimmerOnFunc
 13547 ;;		_Sw_DimmerOffFunc
 13548 ;; This function uses a non-reentrant model
 13549 ;;
 13550                           
 13551                           
 13552                           ;psect for function _setDimmerLights_Switch
 13553  1F8B                     _setDimmerLights_Switch:	
 13554                           
 13555                           ;incstack = 0
 13556                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13557                           ;setDimmerLights_Switch@lights stored from wreg
 13558  1F8B  0020               	movlb	0	; select bank0
 13559  1F8C  00A3               	movwf	setDimmerLights_Switch@lights
 13560                           
 13561                           ;Dimmer_B1.c: 435: DimmerLightsPointSelect(lights);
 13562  1F8D  0823               	movf	setDimmerLights_Switch@lights,w
 13563  1F8E  319F  27ED         	fcall	_DimmerLightsPointSelect
 13564                           
 13565                           ;Dimmer_B1.c: 436: DimmerLights->Switch=command;
 13566  1F90  0020               	movlb	0	; select bank0
 13567  1F91  086B               	movf	_DimmerLights,w
 13568  1F92  3E09               	addlw	9
 13569  1F93  0086               	movwf	6
 13570  1F94  3001               	movlw	1	; select bank2/3
 13571  1F95  0087               	movwf	7
 13572  1F96  0822               	movf	setDimmerLights_Switch@command,w
 13573  1F97  1001               	bcf	1,0
 13574  1F98  1D03               	skipz
 13575  1F99  1401               	bsf	1,0
 13576  1F9A  0008               	return
 13577  1F9B                     __end_of_setDimmerLights_Switch:	
 13578                           
 13579                           	psect	text86
 13580  1FED                     __ptext86:	
 13581 ;; *************** function _DimmerLightsPointSelect *****************
 13582 ;; Defined at:
 13583 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  lights          1    wreg     unsigned char 
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;  lights          1    1[BANK0 ] unsigned char 
 13588 ;; Return value:  Size  Location     Type
 13589 ;;		None               void
 13590 ;; Registers used:
 13591 ;;		wreg
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;Total ram usage:        2 bytes
 13602 ;; Hardware stack levels used:    1
 13603 ;; Hardware stack levels required when called:    4
 13604 ;; This function calls:
 13605 ;;		Nothing
 13606 ;; This function is called by:
 13607 ;;		_setDimmerLights_Initialization
 13608 ;;		_setDimmerLights_Main
 13609 ;;		_getDimmerLights_StatusFlag
 13610 ;;		_getDimmerLights_Trigger
 13611 ;;		_setDimmerLights
 13612 ;;		_setDimmerLights_Adj
 13613 ;;		_setDimmerLights_AdjRF
 13614 ;;		_setDimmerLights_Switch
 13615 ;;		_setDimmerLights_AdjGo
 13616 ;;		_setDimmerLights_Trigger
 13617 ;;		_setDimmerLights_TriggerAdj
 13618 ;;		_setDimmerLights_ERROR
 13619 ;;		_setDimmerLights_TriggerERROR
 13620 ;;		_setDimmerLights_GO
 13621 ;;		_setDimmerLights_MaxmumValue
 13622 ;;		_setDimmerLights_Clear
 13623 ;;		_getDimmerLights_Clear
 13624 ;; This function uses a non-reentrant model
 13625 ;;
 13626                           
 13627                           
 13628                           ;psect for function _DimmerLightsPointSelect
 13629  1FED                     _DimmerLightsPointSelect:	
 13630                           
 13631                           ;incstack = 0
 13632                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 13633                           ;DimmerLightsPointSelect@lights stored from wreg
 13634  1FED  0020               	movlb	0	; select bank0
 13635  1FEE  00A1               	movwf	DimmerLightsPointSelect@lights
 13636                           
 13637                           ;Dimmer_B1.c: 10: if(lights == 1)
 13638  1FEF  0821               	movf	DimmerLightsPointSelect@lights,w
 13639  1FF0  3A01               	xorlw	1
 13640  1FF1  1D03               	skipz
 13641  1FF2  2FF7               	goto	l815
 13642                           
 13643                           ;Dimmer_B1.c: 11: {
 13644                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 13645  1FF3  3030               	movlw	_DimmerLights1& (0+255)
 13646  1FF4  00A0               	movwf	??_DimmerLightsPointSelect
 13647  1FF5  0820               	movf	??_DimmerLightsPointSelect,w
 13648  1FF6  00EB               	movwf	_DimmerLights
 13649  1FF7                     l815:	
 13650                           
 13651                           ;Dimmer_B1.c: 13: }
 13652                           ;Dimmer_B1.c: 17: if(lights == 2)
 13653  1FF7  0821               	movf	DimmerLightsPointSelect@lights,w
 13654  1FF8  3A02               	xorlw	2
 13655  1FF9  1D03               	skipz
 13656  1FFA  0008               	return
 13657                           
 13658                           ;Dimmer_B1.c: 18: {
 13659                           ;Dimmer_B1.c: 19: DimmerLights=&DimmerLights2;
 13660  1FFB  303D               	movlw	_DimmerLights2& (0+255)
 13661  1FFC  00A0               	movwf	??_DimmerLightsPointSelect
 13662  1FFD  0820               	movf	??_DimmerLightsPointSelect,w
 13663  1FFE  00EB               	movwf	_DimmerLights
 13664  1FFF  0008               	return
 13665  2000                     __end_of_DimmerLightsPointSelect:	
 13666                           
 13667                           	psect	text87
 13668  0C25                     __ptext87:	
 13669 ;; *************** function _setBuz *****************
 13670 ;; Defined at:
 13671 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 13672 ;; Parameters:    Size  Location     Type
 13673 ;;  count           1    wreg     unsigned char 
 13674 ;;  time            2    6[BANK0 ] int 
 13675 ;; Auto vars:     Size  Location     Type
 13676 ;;  count           1    9[BANK0 ] unsigned char 
 13677 ;; Return value:  Size  Location     Type
 13678 ;;		None               void
 13679 ;; Registers used:
 13680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13688 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;Total ram usage:        4 bytes
 13691 ;; Hardware stack levels used:    1
 13692 ;; Hardware stack levels required when called:    5
 13693 ;; This function calls:
 13694 ;;		___wmul
 13695 ;; This function is called by:
 13696 ;;		_DlyOff_Main
 13697 ;;		_setDimmerLights_Main
 13698 ;;		_MainT
 13699 ;;		_setLog_Code
 13700 ;;		_setControl_Lights_Table
 13701 ;;		_setRFSW_Control
 13702 ;;		_setSw_Main
 13703 ;;		_DimmerLights_ERROR
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           
 13708                           ;psect for function _setBuz
 13709  0C25                     _setBuz:	
 13710                           
 13711                           ;incstack = 0
 13712                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13713                           ;setBuz@count stored from wreg
 13714  0C25  0020               	movlb	0	; select bank0
 13715  0C26  00A9               	movwf	setBuz@count
 13716                           
 13717                           ;Buzzer_B1.c: 24: time*=20;
 13718  0C27  3014               	movlw	20
 13719  0C28  00A0               	movwf	___wmul@multiplier
 13720  0C29  3000               	movlw	0
 13721  0C2A  00A1               	movwf	___wmul@multiplier+1
 13722  0C2B  0827               	movf	setBuz@time+1,w
 13723  0C2C  01A3               	clrf	___wmul@multiplicand+1
 13724  0C2D  07A3               	addwf	___wmul@multiplicand+1,f
 13725  0C2E  0826               	movf	setBuz@time,w
 13726  0C2F  01A2               	clrf	___wmul@multiplicand
 13727  0C30  07A2               	addwf	___wmul@multiplicand,f
 13728  0C31  3191  21BD  318C   	fcall	___wmul
 13729  0C34  0020               	movlb	0	; select bank0
 13730  0C35  0821               	movf	?___wmul+1,w
 13731  0C36  01A7               	clrf	setBuz@time+1
 13732  0C37  07A7               	addwf	setBuz@time+1,f
 13733  0C38  0820               	movf	?___wmul,w
 13734  0C39  01A6               	clrf	setBuz@time
 13735  0C3A  07A6               	addwf	setBuz@time,f
 13736                           
 13737                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 13738  0C3B  0868               	movf	_Buz,w
 13739  0C3C  0086               	movwf	6
 13740  0C3D  3001               	movlw	1	; select bank2/3
 13741  0C3E  0087               	movwf	7
 13742  0C3F  1C01               	btfss	1,0
 13743  0C40  0008               	return
 13744                           
 13745                           ;Buzzer_B1.c: 26: {
 13746                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 13747  0C41  0868               	movf	_Buz,w
 13748  0C42  0086               	movwf	6
 13749  0C43  3001               	movlw	1	; select bank2/3
 13750  0C44  0087               	movwf	7
 13751  0C45  1881               	btfsc	1,1
 13752  0C46  2C60               	goto	l7632
 13753                           
 13754                           ;Buzzer_B1.c: 28: {
 13755                           ;Buzzer_B1.c: 29: Buz->GO=1;
 13756  0C47  0868               	movf	_Buz,w
 13757  0C48  0086               	movwf	6
 13758  0C49  3001               	movlw	1	; select bank2/3
 13759  0C4A  0087               	movwf	7
 13760  0C4B  1481               	bsf	1,1
 13761                           
 13762                           ;Buzzer_B1.c: 30: Buz->Count=count;
 13763  0C4C  0829               	movf	setBuz@count,w
 13764  0C4D  00A8               	movwf	??_setBuz
 13765  0C4E  0868               	movf	_Buz,w
 13766  0C4F  3E03               	addlw	3
 13767  0C50  0086               	movwf	6
 13768  0C51  3001               	movlw	1	; select bank2/3
 13769  0C52  0087               	movwf	7
 13770  0C53  0828               	movf	??_setBuz,w
 13771  0C54  0081               	movwf	1
 13772                           
 13773                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 13774  0C55  0868               	movf	_Buz,w
 13775  0C56  3E06               	addlw	6
 13776  0C57  0086               	movwf	6
 13777  0C58  3001               	movlw	1	; select bank2/3
 13778  0C59  0087               	movwf	7
 13779  0C5A  0826               	movf	setBuz@time,w
 13780  0C5B  3FC0               	movwi [0]fsr1
 13781  0C5C  0827               	movf	setBuz@time+1,w
 13782  0C5D  3FC1               	movwi [1]fsr1
 13783                           
 13784                           ;Buzzer_B1.c: 33: RB3=1;
 13785  0C5E  158D               	bsf	13,3	;volatile
 13786                           
 13787                           ;Buzzer_B1.c: 34: }
 13788  0C5F  0008               	return
 13789  0C60                     l7632:	
 13790                           
 13791                           ;Buzzer_B1.c: 35: else
 13792                           ;Buzzer_B1.c: 36: {
 13793                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 13794  0C60  0868               	movf	_Buz,w
 13795  0C61  0086               	movwf	6
 13796  0C62  3001               	movlw	1	; select bank2/3
 13797  0C63  0087               	movwf	7
 13798  0C64  1981               	btfsc	1,3
 13799  0C65  2C7E               	goto	l7636
 13800                           
 13801                           ;Buzzer_B1.c: 38: {
 13802                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 13803  0C66  0868               	movf	_Buz,w
 13804  0C67  0086               	movwf	6
 13805  0C68  3001               	movlw	1	; select bank2/3
 13806  0C69  0087               	movwf	7
 13807  0C6A  1581               	bsf	1,3
 13808                           
 13809                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 13810  0C6B  0829               	movf	setBuz@count,w
 13811  0C6C  00A8               	movwf	??_setBuz
 13812  0C6D  0868               	movf	_Buz,w
 13813  0C6E  3E04               	addlw	4
 13814  0C6F  0086               	movwf	6
 13815  0C70  3001               	movlw	1	; select bank2/3
 13816  0C71  0087               	movwf	7
 13817  0C72  0828               	movf	??_setBuz,w
 13818  0C73  0081               	movwf	1
 13819                           
 13820                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 13821  0C74  0868               	movf	_Buz,w
 13822  0C75  3E08               	addlw	8
 13823  0C76  0086               	movwf	6
 13824  0C77  3001               	movlw	1	; select bank2/3
 13825  0C78  0087               	movwf	7
 13826  0C79  0826               	movf	setBuz@time,w
 13827  0C7A  3FC0               	movwi [0]fsr1
 13828  0C7B  0827               	movf	setBuz@time+1,w
 13829  0C7C  3FC1               	movwi [1]fsr1
 13830                           
 13831                           ;Buzzer_B1.c: 42: }
 13832  0C7D  0008               	return
 13833  0C7E                     l7636:	
 13834                           
 13835                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 13836  0C7E  0868               	movf	_Buz,w
 13837  0C7F  0086               	movwf	6
 13838  0C80  3001               	movlw	1	; select bank2/3
 13839  0C81  0087               	movwf	7
 13840  0C82  1A01               	btfsc	1,4
 13841  0C83  0008               	return
 13842                           
 13843                           ;Buzzer_B1.c: 44: {
 13844                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 13845  0C84  0868               	movf	_Buz,w
 13846  0C85  0086               	movwf	6
 13847  0C86  3001               	movlw	1	; select bank2/3
 13848  0C87  0087               	movwf	7
 13849  0C88  1601               	bsf	1,4
 13850                           
 13851                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 13852  0C89  0829               	movf	setBuz@count,w
 13853  0C8A  00A8               	movwf	??_setBuz
 13854  0C8B  0868               	movf	_Buz,w
 13855  0C8C  3E05               	addlw	5
 13856  0C8D  0086               	movwf	6
 13857  0C8E  3001               	movlw	1	; select bank2/3
 13858  0C8F  0087               	movwf	7
 13859  0C90  0828               	movf	??_setBuz,w
 13860  0C91  0081               	movwf	1
 13861                           
 13862                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 13863  0C92  0868               	movf	_Buz,w
 13864  0C93  3E0A               	addlw	10
 13865  0C94  0086               	movwf	6
 13866  0C95  3001               	movlw	1	; select bank2/3
 13867  0C96  0087               	movwf	7
 13868  0C97  0826               	movf	setBuz@time,w
 13869  0C98  3FC0               	movwi [0]fsr1
 13870  0C99  0827               	movf	setBuz@time+1,w
 13871  0C9A  3FC1               	movwi [1]fsr1
 13872  0C9B  0008               	return
 13873  0C9C                     __end_of_setBuz:	
 13874                           
 13875                           	psect	text88
 13876  11BD                     __ptext88:	
 13877 ;; *************** function ___wmul *****************
 13878 ;; Defined at:
 13879 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 13880 ;; Parameters:    Size  Location     Type
 13881 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13882 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;  product         2    4[BANK0 ] unsigned int 
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  2    0[BANK0 ] unsigned int 
 13887 ;; Registers used:
 13888 ;;		wreg, status,2, status,0
 13889 ;; Tracked objects:
 13890 ;;		On entry : 0/0
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;Total ram usage:        6 bytes
 13899 ;; Hardware stack levels used:    1
 13900 ;; Hardware stack levels required when called:    4
 13901 ;; This function calls:
 13902 ;;		Nothing
 13903 ;; This function is called by:
 13904 ;;		_setBuz
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           
 13909                           ;psect for function ___wmul
 13910  11BD                     ___wmul:	
 13911                           
 13912                           ;incstack = 0
 13913                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13914  11BD  0020               	movlb	0	; select bank0
 13915  11BE  01A4               	clrf	___wmul@product
 13916  11BF  01A5               	clrf	___wmul@product+1
 13917  11C0                     l7612:	
 13918  11C0  1C20               	btfss	___wmul@multiplier,0
 13919  11C1  29C6               	goto	l2827
 13920  11C2  0822               	movf	___wmul@multiplicand,w
 13921  11C3  07A4               	addwf	___wmul@product,f
 13922  11C4  0823               	movf	___wmul@multiplicand+1,w
 13923  11C5  3DA5               	addwfc	___wmul@product+1,f
 13924  11C6                     l2827:	
 13925  11C6  3001               	movlw	1
 13926  11C7                     u7325:	
 13927  11C7  35A2               	lslf	___wmul@multiplicand,f
 13928  11C8  0DA3               	rlf	___wmul@multiplicand+1,f
 13929  11C9  0B89               	decfsz	9,f
 13930  11CA  29C7               	goto	u7325
 13931  11CB  3001               	movlw	1
 13932  11CC                     u7335:	
 13933  11CC  36A1               	lsrf	___wmul@multiplier+1,f
 13934  11CD  0CA0               	rrf	___wmul@multiplier,f
 13935  11CE  0B89               	decfsz	9,f
 13936  11CF  29CC               	goto	u7335
 13937  11D0  0821               	movf	___wmul@multiplier+1,w
 13938  11D1  0420               	iorwf	___wmul@multiplier,w
 13939  11D2  1D03               	skipz
 13940  11D3  29C0               	goto	l7612
 13941  11D4  0825               	movf	___wmul@product+1,w
 13942  11D5  01A1               	clrf	?___wmul+1
 13943  11D6  07A1               	addwf	?___wmul+1,f
 13944  11D7  0824               	movf	___wmul@product,w
 13945  11D8  01A0               	clrf	?___wmul
 13946  11D9  07A0               	addwf	?___wmul,f
 13947  11DA  0008               	return
 13948  11DB                     __end_of___wmul:	
 13949                           
 13950                           	psect	text89
 13951  1E42                     __ptext89:	
 13952 ;; *************** function _DelayOff_Initialization *****************
 13953 ;; Defined at:
 13954 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 13955 ;; Parameters:    Size  Location     Type
 13956 ;;		None
 13957 ;; Auto vars:     Size  Location     Type
 13958 ;;		None
 13959 ;; Return value:  Size  Location     Type
 13960 ;;		None               void
 13961 ;; Registers used:
 13962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13963 ;; Tracked objects:
 13964 ;;		On entry : 0/0
 13965 ;;		On exit  : 0/0
 13966 ;;		Unchanged: 0/0
 13967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13972 ;;Total ram usage:        0 bytes
 13973 ;; Hardware stack levels used:    1
 13974 ;; Hardware stack levels required when called:    6
 13975 ;; This function calls:
 13976 ;;		_DlyOff_Initialization
 13977 ;; This function is called by:
 13978 ;;		_main
 13979 ;; This function uses a non-reentrant model
 13980 ;;
 13981                           
 13982                           
 13983                           ;psect for function _DelayOff_Initialization
 13984  1E42                     _DelayOff_Initialization:	
 13985                           
 13986                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 13987                           
 13988                           ;incstack = 0
 13989                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 13990  1E42  3001               	movlw	1
 13991  1E43  319E  2689  319E   	fcall	_DlyOff_Initialization
 13992                           
 13993                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 13994  1E46  3002               	movlw	2
 13995  1E47  319E  2689         	fcall	_DlyOff_Initialization
 13996  1E49  0008               	return
 13997  1E4A                     __end_of_DelayOff_Initialization:	
 13998                           
 13999                           	psect	text90
 14000  1E89                     __ptext90:	
 14001 ;; *************** function _DlyOff_Initialization *****************
 14002 ;; Defined at:
 14003 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;  sw              1    wreg     unsigned char 
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;  sw              1    2[BANK0 ] unsigned char 
 14008 ;; Return value:  Size  Location     Type
 14009 ;;		None               void
 14010 ;; Registers used:
 14011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14021 ;;Total ram usage:        1 bytes
 14022 ;; Hardware stack levels used:    1
 14023 ;; Hardware stack levels required when called:    5
 14024 ;; This function calls:
 14025 ;;		_DelayOffPointSelect
 14026 ;; This function is called by:
 14027 ;;		_DelayOff_Initialization
 14028 ;; This function uses a non-reentrant model
 14029 ;;
 14030                           
 14031                           
 14032                           ;psect for function _DlyOff_Initialization
 14033  1E89                     _DlyOff_Initialization:	
 14034                           
 14035                           ;incstack = 0
 14036                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14037                           ;DlyOff_Initialization@sw stored from wreg
 14038  1E89  0020               	movlb	0	; select bank0
 14039  1E8A  00A2               	movwf	DlyOff_Initialization@sw
 14040                           
 14041                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 14042  1E8B  0822               	movf	DlyOff_Initialization@sw,w
 14043  1E8C  3190  2066         	fcall	_DelayOffPointSelect
 14044                           
 14045                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 14046  1E8E  0020               	movlb	0	; select bank0
 14047  1E8F  0869               	movf	_DelayOff,w
 14048  1E90  0086               	movwf	6
 14049  1E91  0187               	clrf	7
 14050  1E92  1401               	bsf	1,0
 14051  1E93  0008               	return
 14052  1E94                     __end_of_DlyOff_Initialization:	
 14053                           
 14054                           	psect	text91
 14055  1066                     __ptext91:	
 14056 ;; *************** function _DelayOffPointSelect *****************
 14057 ;; Defined at:
 14058 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14059 ;; Parameters:    Size  Location     Type
 14060 ;;  sw              1    wreg     unsigned char 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;  sw              1    1[BANK0 ] unsigned char 
 14063 ;; Return value:  Size  Location     Type
 14064 ;;		None               void
 14065 ;; Registers used:
 14066 ;;		wreg
 14067 ;; Tracked objects:
 14068 ;;		On entry : 0/0
 14069 ;;		On exit  : 0/0
 14070 ;;		Unchanged: 0/0
 14071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;Total ram usage:        2 bytes
 14077 ;; Hardware stack levels used:    1
 14078 ;; Hardware stack levels required when called:    4
 14079 ;; This function calls:
 14080 ;;		Nothing
 14081 ;; This function is called by:
 14082 ;;		_DlyOff_Initialization
 14083 ;;		_DlyOff_Main
 14084 ;;		_setDelayOff_GO
 14085 ;; This function uses a non-reentrant model
 14086 ;;
 14087                           
 14088                           
 14089                           ;psect for function _DelayOffPointSelect
 14090  1066                     _DelayOffPointSelect:	
 14091                           
 14092                           ;incstack = 0
 14093                           ; Regs used in _DelayOffPointSelect: [wreg]
 14094                           ;DelayOffPointSelect@sw stored from wreg
 14095  1066  0020               	movlb	0	; select bank0
 14096  1067  00A1               	movwf	DelayOffPointSelect@sw
 14097                           
 14098                           ;DelayOff_B1.c: 11: if(sw == 1)
 14099  1068  0821               	movf	DelayOffPointSelect@sw,w
 14100  1069  3A01               	xorlw	1
 14101  106A  1D03               	skipz
 14102  106B  2871               	goto	l7544
 14103                           
 14104                           ;DelayOff_B1.c: 12: {
 14105                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 14106  106C  30D1               	movlw	_DlySw1& (0+255)
 14107  106D  00A0               	movwf	??_DelayOffPointSelect
 14108  106E  0820               	movf	??_DelayOffPointSelect,w
 14109  106F  00E9               	movwf	_DelayOff
 14110                           
 14111                           ;DelayOff_B1.c: 14: }
 14112  1070  0008               	return
 14113  1071                     l7544:	
 14114                           
 14115                           ;DelayOff_B1.c: 17: else if(sw == 2)
 14116  1071  0821               	movf	DelayOffPointSelect@sw,w
 14117  1072  3A02               	xorlw	2
 14118  1073  1D03               	skipz
 14119  1074  0008               	return
 14120                           
 14121                           ;DelayOff_B1.c: 18: {
 14122                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 14123  1075  30D6               	movlw	_DlySw2& (0+255)
 14124  1076  00A0               	movwf	??_DelayOffPointSelect
 14125  1077  0820               	movf	??_DelayOffPointSelect,w
 14126  1078  00E9               	movwf	_DelayOff
 14127  1079  0008               	return
 14128  107A                     __end_of_DelayOffPointSelect:	
 14129                           
 14130                           	psect	text92
 14131  108E                     __ptext92:	
 14132 ;; *************** function _CC2500_PowerOnInitial *****************
 14133 ;; Defined at:
 14134 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14135 ;; Parameters:    Size  Location     Type
 14136 ;;		None
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;		None
 14139 ;; Return value:  Size  Location     Type
 14140 ;;		None               void
 14141 ;; Registers used:
 14142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14143 ;; Tracked objects:
 14144 ;;		On entry : 0/0
 14145 ;;		On exit  : 0/0
 14146 ;;		Unchanged: 0/0
 14147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;Total ram usage:        0 bytes
 14153 ;; Hardware stack levels used:    1
 14154 ;; Hardware stack levels required when called:    7
 14155 ;; This function calls:
 14156 ;;		_CC2500_ClearRXFIFO
 14157 ;;		_CC2500_ClearTXFIFO
 14158 ;;		_CC2500_FrequencyCabr
 14159 ;;		_CC2500_InitPATable
 14160 ;;		_CC2500_InitSetREG
 14161 ;;		_CC2500_PowerRST
 14162 ;;		_CC2500_SIDLEMode
 14163 ;; This function is called by:
 14164 ;;		_main
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           
 14169                           ;psect for function _CC2500_PowerOnInitial
 14170  108E                     _CC2500_PowerOnInitial:	
 14171                           
 14172                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 14173                           
 14174                           ;incstack = 0
 14175                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14176  108E  3193  23C7  3190   	fcall	_CC2500_PowerRST
 14177                           
 14178                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 14179  1091  3193  2314  3190   	fcall	_CC2500_InitSetREG
 14180                           
 14181                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 14182  1094  3191  21DB  3190   	fcall	_CC2500_InitPATable
 14183                           
 14184                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 14185  1097  319E  260E  3190   	fcall	_CC2500_ClearTXFIFO
 14186                           
 14187                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 14188  109A  319E  260A  3190   	fcall	_CC2500_ClearRXFIFO
 14189                           
 14190                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 14191  109D  319E  26CD  3190   	fcall	_CC2500_FrequencyCabr
 14192                           
 14193                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 14194  10A0  319E  2612         	fcall	_CC2500_SIDLEMode
 14195  10A2  0008               	return
 14196  10A3                     __end_of_CC2500_PowerOnInitial:	
 14197                           
 14198                           	psect	text93
 14199  1E12                     __ptext93:	
 14200 ;; *************** function _CC2500_SIDLEMode *****************
 14201 ;; Defined at:
 14202 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14203 ;; Parameters:    Size  Location     Type
 14204 ;;		None
 14205 ;; Auto vars:     Size  Location     Type
 14206 ;;		None
 14207 ;; Return value:  Size  Location     Type
 14208 ;;		None               void
 14209 ;; Registers used:
 14210 ;;		wreg, status,2, status,0, pclath, cstack
 14211 ;; Tracked objects:
 14212 ;;		On entry : 0/0
 14213 ;;		On exit  : 0/0
 14214 ;;		Unchanged: 0/0
 14215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14220 ;;Total ram usage:        0 bytes
 14221 ;; Hardware stack levels used:    1
 14222 ;; Hardware stack levels required when called:    6
 14223 ;; This function calls:
 14224 ;;		_CC2500_WriteCommand
 14225 ;; This function is called by:
 14226 ;;		_CC2500_PowerOnInitial
 14227 ;; This function uses a non-reentrant model
 14228 ;;
 14229                           
 14230                           
 14231                           ;psect for function _CC2500_SIDLEMode
 14232  1E12                     _CC2500_SIDLEMode:	
 14233                           
 14234                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 14235                           
 14236                           ;incstack = 0
 14237                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 14238  1E12  3036               	movlw	54
 14239  1E13  319F  277B         	fcall	_CC2500_WriteCommand
 14240  1E15  0008               	return
 14241  1E16                     __end_of_CC2500_SIDLEMode:	
 14242                           
 14243                           	psect	text94
 14244  13C7                     __ptext94:	
 14245 ;; *************** function _CC2500_PowerRST *****************
 14246 ;; Defined at:
 14247 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;		None
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;		None
 14252 ;; Return value:  Size  Location     Type
 14253 ;;		None               void
 14254 ;; Registers used:
 14255 ;;		wreg, status,2, status,0, pclath, cstack
 14256 ;; Tracked objects:
 14257 ;;		On entry : 0/0
 14258 ;;		On exit  : 0/0
 14259 ;;		Unchanged: 0/0
 14260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14265 ;;Total ram usage:        1 bytes
 14266 ;; Hardware stack levels used:    1
 14267 ;; Hardware stack levels required when called:    5
 14268 ;; This function calls:
 14269 ;;		_CC2500_WriteByte
 14270 ;;		_DelayTime_1us
 14271 ;; This function is called by:
 14272 ;;		_CC2500_PowerOnInitial
 14273 ;; This function uses a non-reentrant model
 14274 ;;
 14275                           
 14276                           
 14277                           ;psect for function _CC2500_PowerRST
 14278  13C7                     _CC2500_PowerRST:	
 14279                           
 14280                           ;CC2500_B1.c: 112: RC1=0;
 14281                           
 14282                           ;incstack = 0
 14283                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 14284  13C7  0020               	movlb	0	; select bank0
 14285  13C8  108E               	bcf	14,1	;volatile
 14286                           
 14287                           ;CC2500_B1.c: 113: RC0=0;
 14288  13C9  100E               	bcf	14,0	;volatile
 14289                           
 14290                           ;CC2500_B1.c: 114: RC4=1;
 14291  13CA  160E               	bsf	14,4	;volatile
 14292                           
 14293                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 14294  13CB  300A               	movlw	10
 14295  13CC  00A0               	movwf	DelayTime_1us@count
 14296  13CD  3000               	movlw	0
 14297  13CE  00A1               	movwf	DelayTime_1us@count+1
 14298  13CF  3192  22C7  3193   	fcall	_DelayTime_1us
 14299                           
 14300                           ;CC2500_B1.c: 116: RC4=0;
 14301  13D2  0020               	movlb	0	; select bank0
 14302  13D3  120E               	bcf	14,4	;volatile
 14303                           
 14304                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 14305  13D4  300A               	movlw	10
 14306  13D5  00A0               	movwf	DelayTime_1us@count
 14307  13D6  3000               	movlw	0
 14308  13D7  00A1               	movwf	DelayTime_1us@count+1
 14309  13D8  3192  22C7  3193   	fcall	_DelayTime_1us
 14310                           
 14311                           ;CC2500_B1.c: 118: RC4=1;
 14312  13DB  0020               	movlb	0	; select bank0
 14313  13DC  160E               	bsf	14,4	;volatile
 14314                           
 14315                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 14316  13DD  3028               	movlw	40
 14317  13DE  00A0               	movwf	DelayTime_1us@count
 14318  13DF  3000               	movlw	0
 14319  13E0  00A1               	movwf	DelayTime_1us@count+1
 14320  13E1  3192  22C7  3193   	fcall	_DelayTime_1us
 14321                           
 14322                           ;CC2500_B1.c: 120: RC4=0;
 14323  13E4  0020               	movlb	0	; select bank0
 14324  13E5  120E               	bcf	14,4	;volatile
 14325                           
 14326                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 14327  13E6  3030               	movlw	48
 14328  13E7  00A6               	movwf	??_CC2500_PowerRST
 14329  13E8  0826               	movf	??_CC2500_PowerRST,w
 14330  13E9  0021               	movlb	1	; select bank1
 14331  13EA  00BC               	movwf	_SPI0Buffer^(0+128)
 14332  13EB                     l316:	
 14333                           ;CC2500_B1.c: 122: while(RC2==1);
 14334                           
 14335  13EB  0020               	movlb	0	; select bank0
 14336  13EC  190E               	btfsc	14,2	;volatile
 14337  13ED  2BEB               	goto	l316
 14338                           
 14339                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 14340  13EE  3190  20D0  3193   	fcall	_CC2500_WriteByte
 14341  13F1                     l319:	
 14342                           ;CC2500_B1.c: 124: while(RC2==1);
 14343                           
 14344  13F1  0020               	movlb	0	; select bank0
 14345  13F2  190E               	btfsc	14,2	;volatile
 14346  13F3  2BF1               	goto	l319
 14347                           
 14348                           ;CC2500_B1.c: 125: RC0=0;
 14349  13F4  100E               	bcf	14,0	;volatile
 14350                           
 14351                           ;CC2500_B1.c: 126: RC4=1;
 14352  13F5  160E               	bsf	14,4	;volatile
 14353  13F6  0008               	return
 14354  13F7                     __end_of_CC2500_PowerRST:	
 14355                           
 14356                           	psect	text95
 14357  1314                     __ptext95:	
 14358 ;; *************** function _CC2500_InitSetREG *****************
 14359 ;; Defined at:
 14360 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;		None
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;  loop_c          1    8[BANK0 ] unsigned char 
 14365 ;;  temp2           1    7[BANK0 ] unsigned char 
 14366 ;;  temp1           1    6[BANK0 ] unsigned char 
 14367 ;; Return value:  Size  Location     Type
 14368 ;;		None               void
 14369 ;; Registers used:
 14370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/0
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;Total ram usage:        4 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; Hardware stack levels required when called:    6
 14383 ;; This function calls:
 14384 ;;		_CC2500_WriteREG
 14385 ;; This function is called by:
 14386 ;;		_CC2500_PowerOnInitial
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           
 14391                           ;psect for function _CC2500_InitSetREG
 14392  1314                     _CC2500_InitSetREG:	
 14393                           
 14394                           ;CC2500_B1.c: 133: unsigned char loop_c;
 14395                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 14396                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 14397                           
 14398                           ;incstack = 0
 14399                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14400  1314  0020               	movlb	0	; select bank0
 14401  1315  01A8               	clrf	CC2500_InitSetREG@loop_c
 14402  1316                     L10:	
 14403  1316  302F               	movlw	47
 14404  1317  0228               	subwf	CC2500_InitSetREG@loop_c,w
 14405  1318  1803               	btfsc	3,0
 14406  1319  0008               	return
 14407                           
 14408                           ;CC2500_B1.c: 137: {
 14409                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 14410  131A  0828               	movf	CC2500_InitSetREG@loop_c,w
 14411  131B  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 14412  131C  0084               	movwf	4
 14413  131D  3090               	movlw	high (_CC2500_registers_address| (0+32768))
 14414  131E  1803               	skipnc
 14415  131F  3E01               	addlw	1
 14416  1320  0085               	movwf	5
 14417  1321  0800               	movf	0,w	;code access
 14418  1322  00A5               	movwf	??_CC2500_InitSetREG
 14419  1323  0825               	movf	??_CC2500_InitSetREG,w
 14420  1324  00A6               	movwf	CC2500_InitSetREG@temp1
 14421                           
 14422                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 14423  1325  0828               	movf	CC2500_InitSetREG@loop_c,w
 14424  1326  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 14425  1327  0084               	movwf	4
 14426  1328  3090               	movlw	high (_CC2500_rfSettings| (0+32768))
 14427  1329  1803               	skipnc
 14428  132A  3E01               	addlw	1
 14429  132B  0085               	movwf	5
 14430  132C  0800               	movf	0,w	;code access
 14431  132D  00A5               	movwf	??_CC2500_InitSetREG
 14432  132E  0825               	movf	??_CC2500_InitSetREG,w
 14433  132F  00A7               	movwf	CC2500_InitSetREG@temp2
 14434                           
 14435                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 14436  1330  0827               	movf	CC2500_InitSetREG@temp2,w
 14437  1331  00A5               	movwf	??_CC2500_InitSetREG
 14438  1332  0825               	movf	??_CC2500_InitSetREG,w
 14439  1333  00A2               	movwf	CC2500_WriteREG@value
 14440  1334  0826               	movf	CC2500_InitSetREG@temp1,w
 14441  1335  3190  20E9  3193   	fcall	_CC2500_WriteREG
 14442  1338  3001               	movlw	1
 14443  1339  0020               	movlb	0	; select bank0
 14444  133A  00A5               	movwf	??_CC2500_InitSetREG
 14445  133B  0825               	movf	??_CC2500_InitSetREG,w
 14446  133C  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 14447  133D  2B16               	goto	L10
 14448  133E                     __end_of_CC2500_InitSetREG:	
 14449                           
 14450                           	psect	text96
 14451  11DB                     __ptext96:	
 14452 ;; *************** function _CC2500_InitPATable *****************
 14453 ;; Defined at:
 14454 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;		None
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;  loop_d          1    7[BANK0 ] unsigned char 
 14459 ;;  temp            1    6[BANK0 ] unsigned char 
 14460 ;; Return value:  Size  Location     Type
 14461 ;;		None               void
 14462 ;; Registers used:
 14463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14464 ;; Tracked objects:
 14465 ;;		On entry : 0/0
 14466 ;;		On exit  : 0/0
 14467 ;;		Unchanged: 0/0
 14468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14472 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14473 ;;Total ram usage:        3 bytes
 14474 ;; Hardware stack levels used:    1
 14475 ;; Hardware stack levels required when called:    6
 14476 ;; This function calls:
 14477 ;;		_CC2500_WriteREG
 14478 ;; This function is called by:
 14479 ;;		_CC2500_PowerOnInitial
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           
 14484                           ;psect for function _CC2500_InitPATable
 14485  11DB                     _CC2500_InitPATable:	
 14486                           
 14487                           ;CC2500_B1.c: 149: unsigned char loop_d;
 14488                           ;CC2500_B1.c: 150: unsigned char temp;
 14489                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 14490                           
 14491                           ;incstack = 0
 14492                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14493  11DB  0020               	movlb	0	; select bank0
 14494  11DC  01A7               	clrf	CC2500_InitPATable@loop_d
 14495  11DD                     L11:	
 14496  11DD  3008               	movlw	8
 14497  11DE  0227               	subwf	CC2500_InitPATable@loop_d,w
 14498  11DF  1803               	btfsc	3,0
 14499  11E0  0008               	return
 14500                           
 14501                           ;CC2500_B1.c: 153: {
 14502                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 14503  11E1  0827               	movf	CC2500_InitPATable@loop_d,w
 14504  11E2  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 14505  11E3  0084               	movwf	4
 14506  11E4  3090               	movlw	high (_CC2500_patable_vaule| (0+32768))
 14507  11E5  1803               	skipnc
 14508  11E6  3E01               	addlw	1
 14509  11E7  0085               	movwf	5
 14510  11E8  0800               	movf	0,w	;code access
 14511  11E9  00A5               	movwf	??_CC2500_InitPATable
 14512  11EA  0825               	movf	??_CC2500_InitPATable,w
 14513  11EB  00A6               	movwf	CC2500_InitPATable@temp
 14514                           
 14515                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 14516  11EC  0826               	movf	CC2500_InitPATable@temp,w
 14517  11ED  00A5               	movwf	??_CC2500_InitPATable
 14518  11EE  0825               	movf	??_CC2500_InitPATable,w
 14519  11EF  00A2               	movwf	CC2500_WriteREG@value
 14520  11F0  303E               	movlw	62
 14521  11F1  3190  20E9  3191   	fcall	_CC2500_WriteREG
 14522  11F4  3001               	movlw	1
 14523  11F5  0020               	movlb	0	; select bank0
 14524  11F6  00A5               	movwf	??_CC2500_InitPATable
 14525  11F7  0825               	movf	??_CC2500_InitPATable,w
 14526  11F8  07A7               	addwf	CC2500_InitPATable@loop_d,f
 14527  11F9  29DD               	goto	L11
 14528  11FA                     __end_of_CC2500_InitPATable:	
 14529                           
 14530                           	psect	text97
 14531  10E9                     __ptext97:	
 14532 ;; *************** function _CC2500_WriteREG *****************
 14533 ;; Defined at:
 14534 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;  w_addr          1    wreg     unsigned char 
 14537 ;;  value           1    2[BANK0 ] unsigned char 
 14538 ;; Auto vars:     Size  Location     Type
 14539 ;;  w_addr          1    4[BANK0 ] unsigned char 
 14540 ;; Return value:  Size  Location     Type
 14541 ;;		None               void
 14542 ;; Registers used:
 14543 ;;		wreg, status,2, status,0, pclath, cstack
 14544 ;; Tracked objects:
 14545 ;;		On entry : 0/0
 14546 ;;		On exit  : 0/0
 14547 ;;		Unchanged: 0/0
 14548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14549 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14552 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14553 ;;Total ram usage:        3 bytes
 14554 ;; Hardware stack levels used:    1
 14555 ;; Hardware stack levels required when called:    5
 14556 ;; This function calls:
 14557 ;;		_CC2500_WriteByte
 14558 ;; This function is called by:
 14559 ;;		_CC2500_InitSetREG
 14560 ;;		_CC2500_InitPATable
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           
 14565                           ;psect for function _CC2500_WriteREG
 14566  10E9                     _CC2500_WriteREG:	
 14567                           
 14568                           ;incstack = 0
 14569                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 14570                           ;CC2500_WriteREG@w_addr stored from wreg
 14571  10E9  0020               	movlb	0	; select bank0
 14572  10EA  00A4               	movwf	CC2500_WriteREG@w_addr
 14573                           
 14574                           ;CC2500_B1.c: 229: RC4=0;
 14575  10EB  120E               	bcf	14,4	;volatile
 14576                           
 14577                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 14578  10EC  0824               	movf	CC2500_WriteREG@w_addr,w
 14579  10ED  00A3               	movwf	??_CC2500_WriteREG
 14580  10EE  0823               	movf	??_CC2500_WriteREG,w
 14581  10EF  0021               	movlb	1	; select bank1
 14582  10F0  00BC               	movwf	_SPI0Buffer^(0+128)
 14583  10F1                     l361:	
 14584                           ;CC2500_B1.c: 231: while(RC2==1);
 14585                           
 14586  10F1  0020               	movlb	0	; select bank0
 14587  10F2  190E               	btfsc	14,2	;volatile
 14588  10F3  28F1               	goto	l361
 14589                           
 14590                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 14591  10F4  3190  20D0  3190   	fcall	_CC2500_WriteByte
 14592                           
 14593                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 14594  10F7  0020               	movlb	0	; select bank0
 14595  10F8  0822               	movf	CC2500_WriteREG@value,w
 14596  10F9  00A3               	movwf	??_CC2500_WriteREG
 14597  10FA  0823               	movf	??_CC2500_WriteREG,w
 14598  10FB  0021               	movlb	1	; select bank1
 14599  10FC  00BC               	movwf	_SPI0Buffer^(0+128)
 14600                           
 14601                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 14602  10FD  3190  20D0         	fcall	_CC2500_WriteByte
 14603                           
 14604                           ;CC2500_B1.c: 235: RC4=1;
 14605  10FF  0020               	movlb	0	; select bank0
 14606  1100  160E               	bsf	14,4	;volatile
 14607  1101  0008               	return
 14608  1102                     __end_of_CC2500_WriteREG:	
 14609                           
 14610                           	psect	text98
 14611  1ECD                     __ptext98:	
 14612 ;; *************** function _CC2500_FrequencyCabr *****************
 14613 ;; Defined at:
 14614 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14615 ;; Parameters:    Size  Location     Type
 14616 ;;		None
 14617 ;; Auto vars:     Size  Location     Type
 14618 ;;		None
 14619 ;; Return value:  Size  Location     Type
 14620 ;;		None               void
 14621 ;; Registers used:
 14622 ;;		wreg, status,2, status,0, pclath, cstack
 14623 ;; Tracked objects:
 14624 ;;		On entry : 0/0
 14625 ;;		On exit  : 0/0
 14626 ;;		Unchanged: 0/0
 14627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14632 ;;Total ram usage:        0 bytes
 14633 ;; Hardware stack levels used:    1
 14634 ;; Hardware stack levels required when called:    6
 14635 ;; This function calls:
 14636 ;;		_CC2500_WriteCommand
 14637 ;;		_DelayTime_1us
 14638 ;; This function is called by:
 14639 ;;		_CC2500_PowerOnInitial
 14640 ;; This function uses a non-reentrant model
 14641 ;;
 14642                           
 14643                           
 14644                           ;psect for function _CC2500_FrequencyCabr
 14645  1ECD                     _CC2500_FrequencyCabr:	
 14646                           
 14647                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 14648                           
 14649                           ;incstack = 0
 14650                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 14651  1ECD  3033               	movlw	51
 14652  1ECE  319F  277B  319E   	fcall	_CC2500_WriteCommand
 14653                           
 14654                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 14655  1ED1  30E8               	movlw	232
 14656  1ED2  0020               	movlb	0	; select bank0
 14657  1ED3  00A0               	movwf	DelayTime_1us@count
 14658  1ED4  3003               	movlw	3
 14659  1ED5  00A1               	movwf	DelayTime_1us@count+1
 14660  1ED6  3192  22C7         	fcall	_DelayTime_1us
 14661  1ED8  0008               	return
 14662  1ED9                     __end_of_CC2500_FrequencyCabr:	
 14663                           
 14664                           	psect	text99
 14665  12C7                     __ptext99:	
 14666 ;; *************** function _DelayTime_1us *****************
 14667 ;; Defined at:
 14668 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14669 ;; Parameters:    Size  Location     Type
 14670 ;;  count           2    0[BANK0 ] int 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;  j               2    4[BANK0 ] unsigned int 
 14673 ;;  i               2    2[BANK0 ] unsigned int 
 14674 ;; Return value:  Size  Location     Type
 14675 ;;		None               void
 14676 ;; Registers used:
 14677 ;;		wreg, status,2
 14678 ;; Tracked objects:
 14679 ;;		On entry : 0/0
 14680 ;;		On exit  : 0/0
 14681 ;;		Unchanged: 0/0
 14682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14683 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14684 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14686 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14687 ;;Total ram usage:        6 bytes
 14688 ;; Hardware stack levels used:    1
 14689 ;; Hardware stack levels required when called:    4
 14690 ;; This function calls:
 14691 ;;		Nothing
 14692 ;; This function is called by:
 14693 ;;		_CC2500_PowerRST
 14694 ;;		_CC2500_FrequencyCabr
 14695 ;; This function uses a non-reentrant model
 14696 ;;
 14697                           
 14698                           
 14699                           ;psect for function _DelayTime_1us
 14700  12C7                     _DelayTime_1us:	
 14701                           
 14702                           ;CC2500_B1.c: 285: unsigned int i,j;
 14703                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 14704                           
 14705                           ;incstack = 0
 14706                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 14707  12C7  3001               	movlw	1
 14708  12C8  0020               	movlb	0	; select bank0
 14709  12C9  00A2               	movwf	DelayTime_1us@i
 14710  12CA  3000               	movlw	0
 14711  12CB  00A3               	movwf	DelayTime_1us@i+1
 14712  12CC                     l385:	
 14713  12CC  0821               	movf	DelayTime_1us@count+1,w
 14714  12CD  0223               	subwf	DelayTime_1us@i+1,w
 14715  12CE  1D03               	skipz
 14716  12CF  2AD2               	goto	u7995
 14717  12D0  0820               	movf	DelayTime_1us@count,w
 14718  12D1  0222               	subwf	DelayTime_1us@i,w
 14719  12D2                     u7995:	
 14720  12D2  1803               	btfsc	3,0
 14721  12D3  0008               	return
 14722                           
 14723                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 14724  12D4  01A4               	clrf	DelayTime_1us@j
 14725  12D5  01A5               	clrf	DelayTime_1us@j+1
 14726  12D6  3000               	movlw	0
 14727  12D7  0225               	subwf	DelayTime_1us@j+1,w
 14728  12D8  3002               	movlw	2
 14729  12D9  1903               	skipnz
 14730  12DA  0224               	subwf	DelayTime_1us@j,w
 14731  12DB  1803               	btfsc	3,0
 14732  12DC  2AE8               	goto	l8076
 14733  12DD                     l8074:	
 14734  12DD  3001               	movlw	1
 14735  12DE  07A4               	addwf	DelayTime_1us@j,f
 14736  12DF  3000               	movlw	0
 14737  12E0  3DA5               	addwfc	DelayTime_1us@j+1,f
 14738  12E1  3000               	movlw	0
 14739  12E2  0225               	subwf	DelayTime_1us@j+1,w
 14740  12E3  3002               	movlw	2
 14741  12E4  1903               	skipnz
 14742  12E5  0224               	subwf	DelayTime_1us@j,w
 14743  12E6  1C03               	skipc
 14744  12E7  2ADD               	goto	l8074
 14745  12E8                     l8076:	
 14746  12E8  3001               	movlw	1
 14747  12E9  07A2               	addwf	DelayTime_1us@i,f
 14748  12EA  3000               	movlw	0
 14749  12EB  3DA3               	addwfc	DelayTime_1us@i+1,f
 14750  12EC  2ACC               	goto	l385
 14751  12ED                     __end_of_DelayTime_1us:	
 14752                           
 14753                           	psect	text100
 14754  1E0E                     __ptext100:	
 14755 ;; *************** function _CC2500_ClearTXFIFO *****************
 14756 ;; Defined at:
 14757 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14758 ;; Parameters:    Size  Location     Type
 14759 ;;		None
 14760 ;; Auto vars:     Size  Location     Type
 14761 ;;		None
 14762 ;; Return value:  Size  Location     Type
 14763 ;;		None               void
 14764 ;; Registers used:
 14765 ;;		wreg, status,2, status,0, pclath, cstack
 14766 ;; Tracked objects:
 14767 ;;		On entry : 0/0
 14768 ;;		On exit  : 0/0
 14769 ;;		Unchanged: 0/0
 14770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14775 ;;Total ram usage:        0 bytes
 14776 ;; Hardware stack levels used:    1
 14777 ;; Hardware stack levels required when called:    6
 14778 ;; This function calls:
 14779 ;;		_CC2500_WriteCommand
 14780 ;; This function is called by:
 14781 ;;		_CC2500_PowerOnInitial
 14782 ;; This function uses a non-reentrant model
 14783 ;;
 14784                           
 14785                           
 14786                           ;psect for function _CC2500_ClearTXFIFO
 14787  1E0E                     _CC2500_ClearTXFIFO:	
 14788                           
 14789                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 14790                           
 14791                           ;incstack = 0
 14792                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 14793  1E0E  303B               	movlw	59
 14794  1E0F  319F  277B         	fcall	_CC2500_WriteCommand
 14795  1E11  0008               	return
 14796  1E12                     __end_of_CC2500_ClearTXFIFO:	
 14797                           
 14798                           	psect	text101
 14799  1E0A                     __ptext101:	
 14800 ;; *************** function _CC2500_ClearRXFIFO *****************
 14801 ;; Defined at:
 14802 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;		None
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;		None
 14807 ;; Return value:  Size  Location     Type
 14808 ;;		None               void
 14809 ;; Registers used:
 14810 ;;		wreg, status,2, status,0, pclath, cstack
 14811 ;; Tracked objects:
 14812 ;;		On entry : 0/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;Total ram usage:        0 bytes
 14821 ;; Hardware stack levels used:    1
 14822 ;; Hardware stack levels required when called:    6
 14823 ;; This function calls:
 14824 ;;		_CC2500_WriteCommand
 14825 ;; This function is called by:
 14826 ;;		_CC2500_PowerOnInitial
 14827 ;; This function uses a non-reentrant model
 14828 ;;
 14829                           
 14830                           
 14831                           ;psect for function _CC2500_ClearRXFIFO
 14832  1E0A                     _CC2500_ClearRXFIFO:	
 14833                           
 14834                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 14835                           
 14836                           ;incstack = 0
 14837                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 14838  1E0A  303A               	movlw	58
 14839  1E0B  319F  277B         	fcall	_CC2500_WriteCommand
 14840  1E0D  0008               	return
 14841  1E0E                     __end_of_CC2500_ClearRXFIFO:	
 14842                           
 14843                           	psect	text102
 14844  1F7B                     __ptext102:	
 14845 ;; *************** function _CC2500_WriteCommand *****************
 14846 ;; Defined at:
 14847 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;  command         1    wreg     unsigned char 
 14850 ;; Auto vars:     Size  Location     Type
 14851 ;;  command         1    3[BANK0 ] unsigned char 
 14852 ;; Return value:  Size  Location     Type
 14853 ;;		None               void
 14854 ;; Registers used:
 14855 ;;		wreg, status,2, status,0, pclath, cstack
 14856 ;; Tracked objects:
 14857 ;;		On entry : 0/0
 14858 ;;		On exit  : 0/0
 14859 ;;		Unchanged: 0/0
 14860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14863 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;Total ram usage:        2 bytes
 14866 ;; Hardware stack levels used:    1
 14867 ;; Hardware stack levels required when called:    5
 14868 ;; This function calls:
 14869 ;;		_CC2500_WriteByte
 14870 ;; This function is called by:
 14871 ;;		_CC2500_TxData
 14872 ;;		_CC2500_RxData
 14873 ;;		_CC2500_ClearTXFIFO
 14874 ;;		_CC2500_ClearRXFIFO
 14875 ;;		_CC2500_FrequencyCabr
 14876 ;;		_CC2500_SIDLEMode
 14877 ;;		_setRF_Main
 14878 ;;		_setRF_Enable
 14879 ;;		_RF_RxDisable
 14880 ;; This function uses a non-reentrant model
 14881 ;;
 14882                           
 14883                           
 14884                           ;psect for function _CC2500_WriteCommand
 14885  1F7B                     _CC2500_WriteCommand:	
 14886                           
 14887                           ;incstack = 0
 14888                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 14889                           ;CC2500_WriteCommand@command stored from wreg
 14890  1F7B  0020               	movlb	0	; select bank0
 14891  1F7C  00A3               	movwf	CC2500_WriteCommand@command
 14892                           
 14893                           ;CC2500_B1.c: 255: RC4=0;
 14894  1F7D  120E               	bcf	14,4	;volatile
 14895                           
 14896                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 14897  1F7E  0823               	movf	CC2500_WriteCommand@command,w
 14898  1F7F  00A2               	movwf	??_CC2500_WriteCommand
 14899  1F80  0822               	movf	??_CC2500_WriteCommand,w
 14900  1F81  0021               	movlb	1	; select bank1
 14901  1F82  00BC               	movwf	_SPI0Buffer^(0+128)
 14902  1F83                     l373:	
 14903                           ;CC2500_B1.c: 258: while(RC2==1);
 14904                           
 14905  1F83  0020               	movlb	0	; select bank0
 14906  1F84  190E               	btfsc	14,2	;volatile
 14907  1F85  2F83               	goto	l373
 14908                           
 14909                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 14910  1F86  3190  20D0         	fcall	_CC2500_WriteByte
 14911                           
 14912                           ;CC2500_B1.c: 261: RC4=1;
 14913  1F88  0020               	movlb	0	; select bank0
 14914  1F89  160E               	bsf	14,4	;volatile
 14915  1F8A  0008               	return
 14916  1F8B                     __end_of_CC2500_WriteCommand:	
 14917                           
 14918                           	psect	text103
 14919  10D0                     __ptext103:	
 14920 ;; *************** function _CC2500_WriteByte *****************
 14921 ;; Defined at:
 14922 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;		None
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;  loop_a          1    1[BANK0 ] unsigned char 
 14927 ;; Return value:  Size  Location     Type
 14928 ;;		None               void
 14929 ;; Registers used:
 14930 ;;		wreg, status,2, status,0
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;Total ram usage:        2 bytes
 14941 ;; Hardware stack levels used:    1
 14942 ;; Hardware stack levels required when called:    4
 14943 ;; This function calls:
 14944 ;;		Nothing
 14945 ;; This function is called by:
 14946 ;;		_CC2500_TxData
 14947 ;;		_CC2500_RxData
 14948 ;;		_CC2500_PowerRST
 14949 ;;		_CC2500_WriteREG
 14950 ;;		_CC2500_WriteCommand
 14951 ;;		_CC2500_ReadStatus
 14952 ;;		_CC2500_ReadREG
 14953 ;; This function uses a non-reentrant model
 14954 ;;
 14955                           
 14956                           
 14957                           ;psect for function _CC2500_WriteByte
 14958  10D0                     _CC2500_WriteByte:	
 14959                           
 14960                           ;CC2500_B1.c: 195: unsigned char loop_a;
 14961                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 14962                           
 14963                           ;incstack = 0
 14964                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 14965  10D0  0020               	movlb	0	; select bank0
 14966  10D1  01A1               	clrf	CC2500_WriteByte@loop_a
 14967  10D2                     L12:	
 14968  10D2  3008               	movlw	8
 14969  10D3  0221               	subwf	CC2500_WriteByte@loop_a,w
 14970  10D4  1803               	btfsc	3,0
 14971  10D5  0008               	return
 14972                           
 14973                           ;CC2500_B1.c: 197: {
 14974                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 14975  10D6  0021               	movlb	1	; select bank1
 14976  10D7  1FBC               	btfss	_SPI0Buffer^(0+128),7
 14977  10D8  28DC               	goto	l349
 14978                           
 14979                           ;CC2500_B1.c: 199: RC0=1;
 14980  10D9  0020               	movlb	0	; select bank0
 14981  10DA  140E               	bsf	14,0	;volatile
 14982  10DB  28DE               	goto	l350
 14983  10DC                     l349:	
 14984                           
 14985                           ;CC2500_B1.c: 200: else
 14986                           ;CC2500_B1.c: 201: RC0=0;
 14987  10DC  0020               	movlb	0	; select bank0
 14988  10DD  100E               	bcf	14,0	;volatile
 14989  10DE                     l350:	
 14990                           
 14991                           ;CC2500_B1.c: 202: RC1=1;
 14992  10DE  148E               	bsf	14,1	;volatile
 14993                           
 14994                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 14995  10DF  1003               	clrc
 14996  10E0  0021               	movlb	1	; select bank1
 14997  10E1  0DBC               	rlf	_SPI0Buffer^(0+128),f
 14998                           
 14999                           ;CC2500_B1.c: 204: RC1=0;
 15000  10E2  0020               	movlb	0	; select bank0
 15001  10E3  108E               	bcf	14,1	;volatile
 15002  10E4  3001               	movlw	1
 15003  10E5  00A0               	movwf	??_CC2500_WriteByte
 15004  10E6  0820               	movf	??_CC2500_WriteByte,w
 15005  10E7  07A1               	addwf	CC2500_WriteByte@loop_a,f
 15006  10E8  28D2               	goto	L12
 15007  10E9                     __end_of_CC2500_WriteByte:	
 15008                           
 15009                           	psect	text104
 15010  0F58                     __ptext104:	
 15011 ;; *************** function _Buzzer_Main *****************
 15012 ;; Defined at:
 15013 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;		None
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;		None               void
 15020 ;; Registers used:
 15021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15030 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15031 ;;Total ram usage:        4 bytes
 15032 ;; Hardware stack levels used:    1
 15033 ;; Hardware stack levels required when called:    4
 15034 ;; This function calls:
 15035 ;;		Nothing
 15036 ;; This function is called by:
 15037 ;;		_main
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041                           
 15042                           ;psect for function _Buzzer_Main
 15043  0F58                     _Buzzer_Main:	
 15044                           
 15045                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 15046                           
 15047                           ;incstack = 0
 15048                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 15049  0F58  0020               	movlb	0	; select bank0
 15050  0F59  0868               	movf	_Buz,w
 15051  0F5A  0086               	movwf	6
 15052  0F5B  3001               	movlw	1	; select bank2/3
 15053  0F5C  0087               	movwf	7
 15054  0F5D  1281               	bcf	1,5
 15055  0F5E  198D               	btfsc	13,3	;volatile
 15056  0F5F  1681               	bsf	1,5
 15057                           
 15058                           ;Buzzer_B1.c: 57: if(Buz->GO)
 15059  0F60  0020               	movlb	0	; select bank0
 15060  0F61  0868               	movf	_Buz,w
 15061  0F62  0086               	movwf	6
 15062  0F63  3001               	movlw	1	; select bank2/3
 15063  0F64  0087               	movwf	7
 15064  0F65  1C81               	btfss	1,1
 15065  0F66  0008               	return
 15066                           
 15067                           ;Buzzer_B1.c: 58: {
 15068                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 15069  0F67  0868               	movf	_Buz,w
 15070  0F68  3E06               	addlw	6
 15071  0F69  0086               	movwf	6
 15072  0F6A  3001               	movlw	1	; select bank2/3
 15073  0F6B  0087               	movwf	7
 15074  0F6C  3F40               	moviw [0]fsr1
 15075  0F6D  00A0               	movwf	??_Buzzer_Main
 15076  0F6E  3F41               	moviw [1]fsr1
 15077  0F6F  00A1               	movwf	??_Buzzer_Main+1
 15078  0F70  0A68               	incf	_Buz,w
 15079  0F71  0086               	movwf	6
 15080  0F72  3001               	movlw	1	; select bank2/3
 15081  0F73  0087               	movwf	7
 15082  0F74  3F40               	moviw [0]fsr1
 15083  0F75  00A2               	movwf	??_Buzzer_Main+2
 15084  0F76  3F41               	moviw [1]fsr1
 15085  0F77  00A3               	movwf	??_Buzzer_Main+3
 15086  0F78  0821               	movf	??_Buzzer_Main+1,w
 15087  0F79  0223               	subwf	??_Buzzer_Main+3,w
 15088  0F7A  1D03               	skipz
 15089  0F7B  2F7E               	goto	u8945
 15090  0F7C  0820               	movf	??_Buzzer_Main,w
 15091  0F7D  0222               	subwf	??_Buzzer_Main+2,w
 15092  0F7E                     u8945:	
 15093  0F7E  1C03               	skipc
 15094  0F7F  0008               	return
 15095                           
 15096                           ;Buzzer_B1.c: 61: {
 15097                           ;Buzzer_B1.c: 62: Buz->Time=0;
 15098  0F80  0A68               	incf	_Buz,w
 15099  0F81  0086               	movwf	6
 15100  0F82  3001               	movlw	1	; select bank2/3
 15101  0F83  0087               	movwf	7
 15102  0F84  3000               	movlw	0
 15103  0F85  3FC0               	movwi [0]fsr1
 15104  0F86  3FC1               	movwi [1]fsr1
 15105                           
 15106                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 15107  0F87  0868               	movf	_Buz,w
 15108  0F88  0086               	movwf	6
 15109  0F89  3001               	movlw	1	; select bank2/3
 15110  0F8A  0087               	movwf	7
 15111  0F8B  1A81               	btfsc	1,5
 15112  0F8C  2FF2               	goto	l8796
 15113                           
 15114                           ;Buzzer_B1.c: 64: {
 15115                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 15116  0F8D  0868               	movf	_Buz,w
 15117  0F8E  3E03               	addlw	3
 15118  0F8F  0086               	movwf	6
 15119  0F90  3001               	movlw	1	; select bank2/3
 15120  0F91  0087               	movwf	7
 15121  0F92  0881               	movf	1,f
 15122  0F93  1D03               	skipz
 15123  0F94  2FEB               	goto	l8792
 15124                           
 15125                           ;Buzzer_B1.c: 66: {
 15126                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 15127  0F95  0868               	movf	_Buz,w
 15128  0F96  0086               	movwf	6
 15129  0F97  3001               	movlw	1	; select bank2/3
 15130  0F98  0087               	movwf	7
 15131  0F99  1D81               	btfss	1,3
 15132  0F9A  2FBD               	goto	l8784
 15133                           
 15134                           ;Buzzer_B1.c: 68: {
 15135                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 15136  0F9B  0868               	movf	_Buz,w
 15137  0F9C  0086               	movwf	6
 15138  0F9D  3001               	movlw	1	; select bank2/3
 15139  0F9E  0087               	movwf	7
 15140  0F9F  1181               	bcf	1,3
 15141                           
 15142                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 15143  0FA0  0868               	movf	_Buz,w
 15144  0FA1  3E04               	addlw	4
 15145  0FA2  0086               	movwf	6
 15146  0FA3  3001               	movlw	1	; select bank2/3
 15147  0FA4  0087               	movwf	7
 15148  0FA5  0801               	movf	1,w
 15149  0FA6  00A0               	movwf	??_Buzzer_Main
 15150  0FA7  0868               	movf	_Buz,w
 15151  0FA8  3E03               	addlw	3
 15152  0FA9  0086               	movwf	6
 15153  0FAA  3001               	movlw	1	; select bank2/3
 15154  0FAB  0087               	movwf	7
 15155  0FAC  0820               	movf	??_Buzzer_Main,w
 15156  0FAD  0081               	movwf	1
 15157                           
 15158                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 15159  0FAE  0868               	movf	_Buz,w
 15160  0FAF  3E08               	addlw	8
 15161  0FB0  0086               	movwf	6
 15162  0FB1  3001               	movlw	1	; select bank2/3
 15163  0FB2  0087               	movwf	7
 15164  0FB3  0868               	movf	_Buz,w
 15165  0FB4  3E06               	addlw	6
 15166  0FB5  0084               	movwf	4
 15167  0FB6  3001               	movlw	1	; select bank2/3
 15168  0FB7  0085               	movwf	5
 15169  0FB8  3F40               	moviw [0]fsr1
 15170  0FB9  3F80               	movwi [0]fsr0
 15171  0FBA  3F41               	moviw [1]fsr1
 15172  0FBB  3F81               	movwi [1]fsr0
 15173                           
 15174                           ;Buzzer_B1.c: 72: }
 15175  0FBC  0008               	return
 15176  0FBD                     l8784:	
 15177                           
 15178                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 15179  0FBD  0868               	movf	_Buz,w
 15180  0FBE  0086               	movwf	6
 15181  0FBF  3001               	movlw	1	; select bank2/3
 15182  0FC0  0087               	movwf	7
 15183  0FC1  1E01               	btfss	1,4
 15184  0FC2  2FE5               	goto	l8790
 15185                           
 15186                           ;Buzzer_B1.c: 74: {
 15187                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 15188  0FC3  0868               	movf	_Buz,w
 15189  0FC4  0086               	movwf	6
 15190  0FC5  3001               	movlw	1	; select bank2/3
 15191  0FC6  0087               	movwf	7
 15192  0FC7  1201               	bcf	1,4
 15193                           
 15194                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 15195  0FC8  0868               	movf	_Buz,w
 15196  0FC9  3E05               	addlw	5
 15197  0FCA  0086               	movwf	6
 15198  0FCB  3001               	movlw	1	; select bank2/3
 15199  0FCC  0087               	movwf	7
 15200  0FCD  0801               	movf	1,w
 15201  0FCE  00A0               	movwf	??_Buzzer_Main
 15202  0FCF  0868               	movf	_Buz,w
 15203  0FD0  3E03               	addlw	3
 15204  0FD1  0086               	movwf	6
 15205  0FD2  3001               	movlw	1	; select bank2/3
 15206  0FD3  0087               	movwf	7
 15207  0FD4  0820               	movf	??_Buzzer_Main,w
 15208  0FD5  0081               	movwf	1
 15209                           
 15210                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 15211  0FD6  0868               	movf	_Buz,w
 15212  0FD7  3E0A               	addlw	10
 15213  0FD8  0086               	movwf	6
 15214  0FD9  3001               	movlw	1	; select bank2/3
 15215  0FDA  0087               	movwf	7
 15216  0FDB  0868               	movf	_Buz,w
 15217  0FDC  3E06               	addlw	6
 15218  0FDD  0084               	movwf	4
 15219  0FDE  3001               	movlw	1	; select bank2/3
 15220  0FDF  0085               	movwf	5
 15221  0FE0  3F40               	moviw [0]fsr1
 15222  0FE1  3F80               	movwi [0]fsr0
 15223  0FE2  3F41               	moviw [1]fsr1
 15224  0FE3  3F81               	movwi [1]fsr0
 15225                           
 15226                           ;Buzzer_B1.c: 78: }
 15227  0FE4  0008               	return
 15228  0FE5                     l8790:	
 15229                           
 15230                           ;Buzzer_B1.c: 79: else
 15231                           ;Buzzer_B1.c: 80: {
 15232                           ;Buzzer_B1.c: 81: Buz->GO=0;
 15233  0FE5  0868               	movf	_Buz,w
 15234  0FE6  0086               	movwf	6
 15235  0FE7  3001               	movlw	1	; select bank2/3
 15236  0FE8  0087               	movwf	7
 15237  0FE9  1081               	bcf	1,1
 15238                           
 15239                           ;Buzzer_B1.c: 82: }
 15240                           ;Buzzer_B1.c: 83: }
 15241  0FEA  0008               	return
 15242  0FEB                     l8792:	
 15243                           
 15244                           ;Buzzer_B1.c: 84: else
 15245                           ;Buzzer_B1.c: 85: {
 15246                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 15247  0FEB  0868               	movf	_Buz,w
 15248  0FEC  0086               	movwf	6
 15249  0FED  3001               	movlw	1	; select bank2/3
 15250  0FEE  0087               	movwf	7
 15251  0FEF  1681               	bsf	1,5
 15252                           
 15253                           ;Buzzer_B1.c: 88: RB3=1;
 15254  0FF0  158D               	bsf	13,3	;volatile
 15255                           
 15256                           ;Buzzer_B1.c: 89: }
 15257                           ;Buzzer_B1.c: 90: }
 15258  0FF1  0008               	return
 15259  0FF2                     l8796:	
 15260                           
 15261                           ;Buzzer_B1.c: 91: else
 15262                           ;Buzzer_B1.c: 92: {
 15263                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 15264  0FF2  0868               	movf	_Buz,w
 15265  0FF3  0086               	movwf	6
 15266  0FF4  3001               	movlw	1	; select bank2/3
 15267  0FF5  0087               	movwf	7
 15268  0FF6  1281               	bcf	1,5
 15269                           
 15270                           ;Buzzer_B1.c: 95: RB3=0;
 15271  0FF7  118D               	bcf	13,3	;volatile
 15272                           
 15273                           ;Buzzer_B1.c: 97: Buz->Count--;
 15274  0FF8  0868               	movf	_Buz,w
 15275  0FF9  3E03               	addlw	3
 15276  0FFA  0086               	movwf	6
 15277  0FFB  3001               	movlw	1	; select bank2/3
 15278  0FFC  0087               	movwf	7
 15279  0FFD  3001               	movlw	1
 15280  0FFE  0281               	subwf	1,f
 15281  0FFF  0008               	return
 15282  1000                     __end_of_Buzzer_Main:	
 15283                           
 15284                           	psect	text105
 15285  1E7E                     __ptext105:	
 15286 ;; *************** function _Buzzer_Initialization *****************
 15287 ;; Defined at:
 15288 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 15289 ;; Parameters:    Size  Location     Type
 15290 ;;		None
 15291 ;; Auto vars:     Size  Location     Type
 15292 ;;		None
 15293 ;; Return value:  Size  Location     Type
 15294 ;;		None               void
 15295 ;; Registers used:
 15296 ;;		wreg, fsr1l, fsr1h
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15305 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15306 ;;Total ram usage:        1 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:    4
 15309 ;; This function calls:
 15310 ;;		Nothing
 15311 ;; This function is called by:
 15312 ;;		_main
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           
 15317                           ;psect for function _Buzzer_Initialization
 15318  1E7E                     _Buzzer_Initialization:	
 15319                           
 15320                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 15321                           
 15322                           ;incstack = 0
 15323                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 15324  1E7E  304A               	movlw	_Buz1& (0+255)
 15325  1E7F  0020               	movlb	0	; select bank0
 15326  1E80  00A0               	movwf	??_Buzzer_Initialization
 15327  1E81  0820               	movf	??_Buzzer_Initialization,w
 15328  1E82  00E8               	movwf	_Buz
 15329                           
 15330                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 15331  1E83  0868               	movf	_Buz,w
 15332  1E84  0086               	movwf	6
 15333  1E85  3001               	movlw	1	; select bank2/3
 15334  1E86  0087               	movwf	7
 15335  1E87  1401               	bsf	1,0
 15336  1E88  0008               	return
 15337  1E89                     __end_of_Buzzer_Initialization:	
 15338                           
 15339                           	psect	intentry
 15340  0004                     __pintentry:	
 15341 ;; *************** function _ISR *****************
 15342 ;; Defined at:
 15343 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;		None
 15346 ;; Auto vars:     Size  Location     Type
 15347 ;;		None
 15348 ;; Return value:  Size  Location     Type
 15349 ;;		None               void
 15350 ;; Registers used:
 15351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15352 ;; Tracked objects:
 15353 ;;		On entry : 0/0
 15354 ;;		On exit  : 0/0
 15355 ;;		Unchanged: 0/0
 15356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15360 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15361 ;;Total ram usage:        1 bytes
 15362 ;; Hardware stack levels used:    1
 15363 ;; Hardware stack levels required when called:    3
 15364 ;; This function calls:
 15365 ;;		_INT_ISR
 15366 ;;		_IOC_ISR
 15367 ;;		_TMR0_ISR
 15368 ;; This function is called by:
 15369 ;;		Interrupt level 1
 15370 ;; This function uses a non-reentrant model
 15371 ;;
 15372                           
 15373  0004                     _ISR:	
 15374                           
 15375                           ;incstack = 0
 15376                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15377  0004  147E               	bsf	126,0	;set compiler interrupt flag
 15378  0005  3180               	pagesel	$
 15379  0006  0020               	movlb	0	; select bank0
 15380  0007  087F               	movf	127,w
 15381  0008  00F5               	movwf	??_ISR
 15382                           
 15383                           ;MCU_16f1518_B1.c: 58: IOC_ISR();
 15384  0009  3192  225D  3180   	fcall	_IOC_ISR
 15385                           
 15386                           ;MCU_16f1518_B1.c: 60: TMR0_ISR();
 15387  000C  3180  2042  3180   	fcall	_TMR0_ISR
 15388                           
 15389                           ;MCU_16f1518_B1.c: 62: ;;
 15390                           ;MCU_16f1518_B1.c: 66: INT_ISR();
 15391  000F  319E  26C1         	fcall	_INT_ISR
 15392  0011  0875               	movf	??_ISR,w
 15393  0012  0020               	movlb	0	; select bank0
 15394  0013  00FF               	movwf	127
 15395  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 15396  0015  0009               	retfie
 15397  0016                     __end_of_ISR:	
 15398                           
 15399                           	psect	text107
 15400  0042                     __ptext107:	
 15401 ;; *************** function _TMR0_ISR *****************
 15402 ;; Defined at:
 15403 ;;		line 82 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;		None               void
 15410 ;; Registers used:
 15411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15419 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15421 ;;Total ram usage:        4 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; This function calls:
 15424 ;;		Nothing
 15425 ;; This function is called by:
 15426 ;;		_ISR
 15427 ;; This function uses a non-reentrant model
 15428 ;;
 15429                           
 15430                           
 15431                           ;psect for function _TMR0_ISR
 15432  0042                     _TMR0_ISR:	
 15433                           
 15434                           ;MCU_16f1518_B1.c: 84: if(TMR0IE && TMR0IF)
 15435                           
 15436                           ;incstack = 0
 15437                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0]
 15438  0042  1E8B               	btfss	11,5	;volatile
 15439  0043  0008               	return
 15440  0044  1D0B               	btfss	11,2	;volatile
 15441  0045  0008               	return
 15442                           
 15443                           ;MCU_16f1518_B1.c: 85: {
 15444                           ;MCU_16f1518_B1.c: 86: TMR0=(256-90);
 15445  0046  30A6               	movlw	166
 15446  0047  0020               	movlb	0	; select bank0
 15447  0048  0095               	movwf	21	;volatile
 15448                           
 15449                           ;MCU_16f1518_B1.c: 87: TMR0IF=0;
 15450  0049  110B               	bcf	11,2	;volatile
 15451                           
 15452                           ;MCU_16f1518_B1.c: 100: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLight
      +                          s11->Count >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count
      +                          =0; DimmerLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RB4=1
      +                          ; ;; } } }
 15453  004A  086C               	movf	_DimmerLights11,w
 15454  004B  0086               	movwf	6
 15455  004C  3001               	movlw	1	; select bank2/3
 15456  004D  0087               	movwf	7
 15457  004E  1C01               	btfss	1,0
 15458  004F  2899               	goto	i1l6962
 15459  0050  3001               	movlw	1
 15460  0051  00F1               	movwf	??_TMR0_ISR
 15461  0052  086C               	movf	_DimmerLights11,w
 15462  0053  3E03               	addlw	3
 15463  0054  0086               	movwf	6
 15464  0055  3001               	movlw	1	; select bank2/3
 15465  0056  0087               	movwf	7
 15466  0057  0871               	movf	??_TMR0_ISR,w
 15467  0058  0781               	addwf	1,f
 15468  0059  086A               	movf	_Dimmer,w
 15469  005A  3E02               	addlw	2
 15470  005B  0086               	movwf	6
 15471  005C  0187               	clrf	7
 15472  005D  0801               	movf	1,w
 15473  005E  00F1               	movwf	??_TMR0_ISR
 15474  005F  01F2               	clrf	??_TMR0_ISR+1
 15475  0060  09F1               	comf	??_TMR0_ISR,f
 15476  0061  09F2               	comf	??_TMR0_ISR+1,f
 15477  0062  0AF1               	incf	??_TMR0_ISR,f
 15478  0063  1903               	skipnz
 15479  0064  0AF2               	incf	??_TMR0_ISR+1,f
 15480  0065  086C               	movf	_DimmerLights11,w
 15481  0066  3E04               	addlw	4
 15482  0067  0086               	movwf	6
 15483  0068  3001               	movlw	1	; select bank2/3
 15484  0069  0087               	movwf	7
 15485  006A  0801               	movf	1,w
 15486  006B  0771               	addwf	??_TMR0_ISR,w
 15487  006C  00F3               	movwf	??_TMR0_ISR+2
 15488  006D  0872               	movf	??_TMR0_ISR+1,w
 15489  006E  1803               	skipnc
 15490  006F  0A72               	incf	??_TMR0_ISR+1,w
 15491  0070  00F4               	movwf	??_TMR0_ISR+3
 15492  0071  086C               	movf	_DimmerLights11,w
 15493  0072  3E03               	addlw	3
 15494  0073  0086               	movwf	6
 15495  0074  3001               	movlw	1	; select bank2/3
 15496  0075  0087               	movwf	7
 15497  0076  0874               	movf	??_TMR0_ISR+3,w
 15498  0077  3A80               	xorlw	128
 15499  0078  3C80               	sublw	128
 15500  0079  1D03               	skipz
 15501  007A  287D               	goto	u595_25
 15502  007B  0873               	movf	??_TMR0_ISR+2,w
 15503  007C  0201               	subwf	1,w
 15504  007D                     u595_25:	
 15505  007D  1C03               	skipc
 15506  007E  29CA               	goto	i1l7026
 15507  007F  0020               	movlb	0	; select bank0
 15508  0080  086C               	movf	_DimmerLights11,w
 15509  0081  3E03               	addlw	3
 15510  0082  0086               	movwf	6
 15511  0083  3001               	movlw	1	; select bank2/3
 15512  0084  0087               	movwf	7
 15513  0085  0181               	clrf	1
 15514  0086  086C               	movf	_DimmerLights11,w
 15515  0087  0086               	movwf	6
 15516  0088  3001               	movlw	1	; select bank2/3
 15517  0089  0087               	movwf	7
 15518  008A  1001               	bcf	1,0
 15519  008B  086C               	movf	_DimmerLights11,w
 15520  008C  3E07               	addlw	7
 15521  008D  0086               	movwf	6
 15522  008E  3001               	movlw	1	; select bank2/3
 15523  008F  0087               	movwf	7
 15524  0090  1401               	bsf	1,0
 15525  0091  086C               	movf	_DimmerLights11,w
 15526  0092  0086               	movwf	6
 15527  0093  3001               	movlw	1	; select bank2/3
 15528  0094  0087               	movwf	7
 15529  0095  1F01               	btfss	1,6
 15530  0096  29CA               	goto	i1l7026
 15531  0097  160D               	bsf	13,4	;volatile
 15532  0098  29CA               	goto	i1l7026
 15533  0099                     i1l6962:	
 15534  0099  086C               	movf	_DimmerLights11,w
 15535  009A  3E07               	addlw	7
 15536  009B  0086               	movwf	6
 15537  009C  3001               	movlw	1	; select bank2/3
 15538  009D  0087               	movwf	7
 15539  009E  1C01               	btfss	1,0
 15540  009F  2996               	goto	i1l7018
 15541  00A0  086C               	movf	_DimmerLights11,w
 15542  00A1  3E07               	addlw	7
 15543  00A2  0086               	movwf	6
 15544  00A3  3001               	movlw	1	; select bank2/3
 15545  00A4  0087               	movwf	7
 15546  00A5  1001               	bcf	1,0
 15547  00A6  086C               	movf	_DimmerLights11,w
 15548  00A7  0086               	movwf	6
 15549  00A8  3001               	movlw	1	; select bank2/3
 15550  00A9  0087               	movwf	7
 15551  00AA  1C81               	btfss	1,1
 15552  00AB  2996               	goto	i1l7018
 15553  00AC  3001               	movlw	1
 15554  00AD  00F1               	movwf	??_TMR0_ISR
 15555  00AE  0A6C               	incf	_DimmerLights11,w
 15556  00AF  0086               	movwf	6
 15557  00B0  3001               	movlw	1	; select bank2/3
 15558  00B1  0087               	movwf	7
 15559  00B2  0871               	movf	??_TMR0_ISR,w
 15560  00B3  0781               	addwf	1,f
 15561  00B4  0A6C               	incf	_DimmerLights11,w
 15562  00B5  0086               	movwf	6
 15563  00B6  3001               	movlw	1	; select bank2/3
 15564  00B7  0087               	movwf	7
 15565  00B8  086C               	movf	_DimmerLights11,w
 15566  00B9  3E02               	addlw	2
 15567  00BA  0084               	movwf	4
 15568  00BB  3001               	movlw	1	; select bank2/3
 15569  00BC  0085               	movwf	5
 15570  00BD  0800               	movf	0,w
 15571  00BE  0201               	subwf	1,w
 15572  00BF  1C03               	skipc
 15573  00C0  2996               	goto	i1l7018
 15574  00C1  0A6C               	incf	_DimmerLights11,w
 15575  00C2  0086               	movwf	6
 15576  00C3  3001               	movlw	1	; select bank2/3
 15577  00C4  0087               	movwf	7
 15578  00C5  0181               	clrf	1
 15579  00C6  086C               	movf	_DimmerLights11,w
 15580  00C7  0086               	movwf	6
 15581  00C8  3001               	movlw	1	; select bank2/3
 15582  00C9  0087               	movwf	7
 15583  00CA  1D81               	btfss	1,3
 15584  00CB  2902               	goto	i1l6988
 15585  00CC  086C               	movf	_DimmerLights11,w
 15586  00CD  0086               	movwf	6
 15587  00CE  3001               	movlw	1	; select bank2/3
 15588  00CF  0087               	movwf	7
 15589  00D0  1A01               	btfsc	1,4
 15590  00D1  28E9               	goto	i1l6982
 15591  00D2  086C               	movf	_DimmerLights11,w
 15592  00D3  3E04               	addlw	4
 15593  00D4  0086               	movwf	6
 15594  00D5  3001               	movlw	1	; select bank2/3
 15595  00D6  0087               	movwf	7
 15596  00D7  303D               	movlw	61
 15597  00D8  0201               	subwf	1,w
 15598  00D9  1C03               	skipc
 15599  00DA  28E3               	goto	i1l6980
 15600  00DB  086C               	movf	_DimmerLights11,w
 15601  00DC  3E04               	addlw	4
 15602  00DD  0086               	movwf	6
 15603  00DE  3001               	movlw	1	; select bank2/3
 15604  00DF  0087               	movwf	7
 15605  00E0  3001               	movlw	1
 15606  00E1  0281               	subwf	1,f
 15607  00E2  2996               	goto	i1l7018
 15608  00E3                     i1l6980:	
 15609  00E3  086C               	movf	_DimmerLights11,w
 15610  00E4  0086               	movwf	6
 15611  00E5  3001               	movlw	1	; select bank2/3
 15612  00E6  0087               	movwf	7
 15613  00E7  1601               	bsf	1,4
 15614  00E8  2996               	goto	i1l7018
 15615  00E9                     i1l6982:	
 15616  00E9  086C               	movf	_DimmerLights11,w
 15617  00EA  3E04               	addlw	4
 15618  00EB  0086               	movwf	6
 15619  00EC  3001               	movlw	1	; select bank2/3
 15620  00ED  0087               	movwf	7
 15621  00EE  3078               	movlw	120
 15622  00EF  0201               	subwf	1,w
 15623  00F0  1803               	skipnc
 15624  00F1  28FC               	goto	i1l6986
 15625  00F2  3001               	movlw	1
 15626  00F3  00F1               	movwf	??_TMR0_ISR
 15627  00F4  086C               	movf	_DimmerLights11,w
 15628  00F5  3E04               	addlw	4
 15629  00F6  0086               	movwf	6
 15630  00F7  3001               	movlw	1	; select bank2/3
 15631  00F8  0087               	movwf	7
 15632  00F9  0871               	movf	??_TMR0_ISR,w
 15633  00FA  0781               	addwf	1,f
 15634  00FB  2996               	goto	i1l7018
 15635  00FC                     i1l6986:	
 15636  00FC  086C               	movf	_DimmerLights11,w
 15637  00FD  0086               	movwf	6
 15638  00FE  3001               	movlw	1	; select bank2/3
 15639  00FF  0087               	movwf	7
 15640  0100  1201               	bcf	1,4
 15641  0101  2996               	goto	i1l7018
 15642  0102                     i1l6988:	
 15643  0102  086C               	movf	_DimmerLights11,w
 15644  0103  0086               	movwf	6
 15645  0104  3001               	movlw	1	; select bank2/3
 15646  0105  0087               	movwf	7
 15647  0106  1D01               	btfss	1,2
 15648  0107  2949               	goto	i1l7002
 15649  0108  086C               	movf	_DimmerLights11,w
 15650  0109  3E05               	addlw	5
 15651  010A  0086               	movwf	6
 15652  010B  3001               	movlw	1	; select bank2/3
 15653  010C  0087               	movwf	7
 15654  010D  086C               	movf	_DimmerLights11,w
 15655  010E  3E04               	addlw	4
 15656  010F  0084               	movwf	4
 15657  0110  3001               	movlw	1	; select bank2/3
 15658  0111  0085               	movwf	5
 15659  0112  0800               	movf	0,w
 15660  0113  0201               	subwf	1,w
 15661  0114  1803               	skipnc
 15662  0115  291E               	goto	i1l6994
 15663  0116  086C               	movf	_DimmerLights11,w
 15664  0117  3E04               	addlw	4
 15665  0118  0086               	movwf	6
 15666  0119  3001               	movlw	1	; select bank2/3
 15667  011A  0087               	movwf	7
 15668  011B  3001               	movlw	1
 15669  011C  0281               	subwf	1,f
 15670  011D  2935               	goto	i1l6998
 15671  011E                     i1l6994:	
 15672  011E  086C               	movf	_DimmerLights11,w
 15673  011F  3E04               	addlw	4
 15674  0120  0086               	movwf	6
 15675  0121  3001               	movlw	1	; select bank2/3
 15676  0122  0087               	movwf	7
 15677  0123  086C               	movf	_DimmerLights11,w
 15678  0124  3E05               	addlw	5
 15679  0125  0084               	movwf	4
 15680  0126  3001               	movlw	1	; select bank2/3
 15681  0127  0085               	movwf	5
 15682  0128  0800               	movf	0,w
 15683  0129  0201               	subwf	1,w
 15684  012A  1803               	skipnc
 15685  012B  2935               	goto	i1l6998
 15686  012C  3001               	movlw	1
 15687  012D  00F1               	movwf	??_TMR0_ISR
 15688  012E  086C               	movf	_DimmerLights11,w
 15689  012F  3E04               	addlw	4
 15690  0130  0086               	movwf	6
 15691  0131  3001               	movlw	1	; select bank2/3
 15692  0132  0087               	movwf	7
 15693  0133  0871               	movf	??_TMR0_ISR,w
 15694  0134  0781               	addwf	1,f
 15695  0135                     i1l6998:	
 15696  0135  086C               	movf	_DimmerLights11,w
 15697  0136  3E05               	addlw	5
 15698  0137  0086               	movwf	6
 15699  0138  3001               	movlw	1	; select bank2/3
 15700  0139  0087               	movwf	7
 15701  013A  086C               	movf	_DimmerLights11,w
 15702  013B  3E04               	addlw	4
 15703  013C  0084               	movwf	4
 15704  013D  3001               	movlw	1	; select bank2/3
 15705  013E  0085               	movwf	5
 15706  013F  0800               	movf	0,w
 15707  0140  0601               	xorwf	1,w
 15708  0141  1D03               	skipz
 15709  0142  2996               	goto	i1l7018
 15710  0143  086C               	movf	_DimmerLights11,w
 15711  0144  0086               	movwf	6
 15712  0145  3001               	movlw	1	; select bank2/3
 15713  0146  0087               	movwf	7
 15714  0147  1101               	bcf	1,2
 15715  0148  2964               	goto	i1l7008
 15716  0149                     i1l7002:	
 15717  0149  086C               	movf	_DimmerLights11,w
 15718  014A  0086               	movwf	6
 15719  014B  3001               	movlw	1	; select bank2/3
 15720  014C  0087               	movwf	7
 15721  014D  1E81               	btfss	1,5
 15722  014E  296A               	goto	i1l7010
 15723  014F  086C               	movf	_DimmerLights11,w
 15724  0150  3E04               	addlw	4
 15725  0151  0086               	movwf	6
 15726  0152  3001               	movlw	1	; select bank2/3
 15727  0153  0087               	movwf	7
 15728  0154  3001               	movlw	1
 15729  0155  0281               	subwf	1,f
 15730  0156  086C               	movf	_DimmerLights11,w
 15731  0157  3E05               	addlw	5
 15732  0158  0086               	movwf	6
 15733  0159  3001               	movlw	1	; select bank2/3
 15734  015A  0087               	movwf	7
 15735  015B  086C               	movf	_DimmerLights11,w
 15736  015C  3E04               	addlw	4
 15737  015D  0084               	movwf	4
 15738  015E  3001               	movlw	1	; select bank2/3
 15739  015F  0085               	movwf	5
 15740  0160  0800               	movf	0,w
 15741  0161  0201               	subwf	1,w
 15742  0162  1C03               	skipc
 15743  0163  2996               	goto	i1l7018
 15744  0164                     i1l7008:	
 15745  0164  086C               	movf	_DimmerLights11,w
 15746  0165  0086               	movwf	6
 15747  0166  3001               	movlw	1	; select bank2/3
 15748  0167  0087               	movwf	7
 15749  0168  1081               	bcf	1,1
 15750  0169  2996               	goto	i1l7018
 15751  016A                     i1l7010:	
 15752  016A  3001               	movlw	1
 15753  016B  00F1               	movwf	??_TMR0_ISR
 15754  016C  086C               	movf	_DimmerLights11,w
 15755  016D  3E04               	addlw	4
 15756  016E  0086               	movwf	6
 15757  016F  3001               	movlw	1	; select bank2/3
 15758  0170  0087               	movwf	7
 15759  0171  0871               	movf	??_TMR0_ISR,w
 15760  0172  0781               	addwf	1,f
 15761  0173  086C               	movf	_DimmerLights11,w
 15762  0174  3E04               	addlw	4
 15763  0175  0086               	movwf	6
 15764  0176  3001               	movlw	1	; select bank2/3
 15765  0177  0087               	movwf	7
 15766  0178  086C               	movf	_DimmerLights11,w
 15767  0179  3E06               	addlw	6
 15768  017A  0084               	movwf	4
 15769  017B  3001               	movlw	1	; select bank2/3
 15770  017C  0085               	movwf	5
 15771  017D  0800               	movf	0,w
 15772  017E  0201               	subwf	1,w
 15773  017F  1C03               	skipc
 15774  0180  2996               	goto	i1l7018
 15775  0181  086C               	movf	_DimmerLights11,w
 15776  0182  0086               	movwf	6
 15777  0183  3001               	movlw	1	; select bank2/3
 15778  0184  0087               	movwf	7
 15779  0185  1081               	bcf	1,1
 15780  0186  086C               	movf	_DimmerLights11,w
 15781  0187  0086               	movwf	6
 15782  0188  3001               	movlw	1	; select bank2/3
 15783  0189  0087               	movwf	7
 15784  018A  1301               	bcf	1,6
 15785  018B  086C               	movf	_DimmerLights11,w
 15786  018C  3E0C               	addlw	12
 15787  018D  0086               	movwf	6
 15788  018E  3001               	movlw	1	; select bank2/3
 15789  018F  0087               	movwf	7
 15790  0190  1401               	bsf	1,0
 15791  0191  086A               	movf	_Dimmer,w
 15792  0192  0086               	movwf	6
 15793  0193  0187               	clrf	7
 15794  0194  1581               	bsf	1,3
 15795  0195  138E               	bcf	14,7	;volatile
 15796  0196                     i1l7018:	
 15797  0196  1E0D               	btfss	13,4	;volatile
 15798  0197  29CA               	goto	i1l7026
 15799  0198  3001               	movlw	1
 15800  0199  00F1               	movwf	??_TMR0_ISR
 15801  019A  086C               	movf	_DimmerLights11,w
 15802  019B  3E08               	addlw	8
 15803  019C  0086               	movwf	6
 15804  019D  3001               	movlw	1	; select bank2/3
 15805  019E  0087               	movwf	7
 15806  019F  0871               	movf	??_TMR0_ISR,w
 15807  01A0  0781               	addwf	1,f
 15808  01A1  086C               	movf	_DimmerLights11,w
 15809  01A2  3E04               	addlw	4
 15810  01A3  0086               	movwf	6
 15811  01A4  3001               	movlw	1	; select bank2/3
 15812  01A5  0087               	movwf	7
 15813  01A6  0801               	movf	1,w
 15814  01A7  00F1               	movwf	??_TMR0_ISR
 15815  01A8  01F2               	clrf	??_TMR0_ISR+1
 15816  01A9  09F1               	comf	??_TMR0_ISR,f
 15817  01AA  09F2               	comf	??_TMR0_ISR+1,f
 15818  01AB  0AF1               	incf	??_TMR0_ISR,f
 15819  01AC  1903               	skipnz
 15820  01AD  0AF2               	incf	??_TMR0_ISR+1,f
 15821  01AE  0871               	movf	??_TMR0_ISR,w
 15822  01AF  3E78               	addlw	120
 15823  01B0  00F3               	movwf	??_TMR0_ISR+2
 15824  01B1  3000               	movlw	0
 15825  01B2  3D72               	addwfc	??_TMR0_ISR+1,w
 15826  01B3  00F4               	movwf	??_TMR0_ISR+3
 15827  01B4  086C               	movf	_DimmerLights11,w
 15828  01B5  3E08               	addlw	8
 15829  01B6  0086               	movwf	6
 15830  01B7  3001               	movlw	1	; select bank2/3
 15831  01B8  0087               	movwf	7
 15832  01B9  0874               	movf	??_TMR0_ISR+3,w
 15833  01BA  3A80               	xorlw	128
 15834  01BB  3C80               	sublw	128
 15835  01BC  1D03               	skipz
 15836  01BD  29C0               	goto	u612_25
 15837  01BE  0873               	movf	??_TMR0_ISR+2,w
 15838  01BF  0201               	subwf	1,w
 15839  01C0                     u612_25:	
 15840  01C0  1C03               	skipc
 15841  01C1  29CA               	goto	i1l7026
 15842  01C2  0020               	movlb	0	; select bank0
 15843  01C3  086C               	movf	_DimmerLights11,w
 15844  01C4  3E08               	addlw	8
 15845  01C5  0086               	movwf	6
 15846  01C6  3001               	movlw	1	; select bank2/3
 15847  01C7  0087               	movwf	7
 15848  01C8  0181               	clrf	1
 15849  01C9  120D               	bcf	13,4	;volatile
 15850  01CA                     i1l7026:	
 15851                           
 15852                           ;MCU_16f1518_B1.c: 104: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLight
      +                          s22->Count >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count
      +                          =0; DimmerLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RA7=1
      +                          ; } } } el
 15853  01CA  0020               	movlb	0	; select bank0
 15854  01CB  086D               	movf	_DimmerLights22,w
 15855  01CC  0086               	movwf	6
 15856  01CD  3001               	movlw	1	; select bank2/3
 15857  01CE  0087               	movwf	7
 15858  01CF  1C01               	btfss	1,0
 15859  01D0  2A1A               	goto	i1l7040
 15860  01D1  3001               	movlw	1
 15861  01D2  00F1               	movwf	??_TMR0_ISR
 15862  01D3  086D               	movf	_DimmerLights22,w
 15863  01D4  3E03               	addlw	3
 15864  01D5  0086               	movwf	6
 15865  01D6  3001               	movlw	1	; select bank2/3
 15866  01D7  0087               	movwf	7
 15867  01D8  0871               	movf	??_TMR0_ISR,w
 15868  01D9  0781               	addwf	1,f
 15869  01DA  086A               	movf	_Dimmer,w
 15870  01DB  3E02               	addlw	2
 15871  01DC  0086               	movwf	6
 15872  01DD  0187               	clrf	7
 15873  01DE  0801               	movf	1,w
 15874  01DF  00F1               	movwf	??_TMR0_ISR
 15875  01E0  01F2               	clrf	??_TMR0_ISR+1
 15876  01E1  09F1               	comf	??_TMR0_ISR,f
 15877  01E2  09F2               	comf	??_TMR0_ISR+1,f
 15878  01E3  0AF1               	incf	??_TMR0_ISR,f
 15879  01E4  1903               	skipnz
 15880  01E5  0AF2               	incf	??_TMR0_ISR+1,f
 15881  01E6  086D               	movf	_DimmerLights22,w
 15882  01E7  3E04               	addlw	4
 15883  01E8  0086               	movwf	6
 15884  01E9  3001               	movlw	1	; select bank2/3
 15885  01EA  0087               	movwf	7
 15886  01EB  0801               	movf	1,w
 15887  01EC  0771               	addwf	??_TMR0_ISR,w
 15888  01ED  00F3               	movwf	??_TMR0_ISR+2
 15889  01EE  0872               	movf	??_TMR0_ISR+1,w
 15890  01EF  1803               	skipnc
 15891  01F0  0A72               	incf	??_TMR0_ISR+1,w
 15892  01F1  00F4               	movwf	??_TMR0_ISR+3
 15893  01F2  086D               	movf	_DimmerLights22,w
 15894  01F3  3E03               	addlw	3
 15895  01F4  0086               	movwf	6
 15896  01F5  3001               	movlw	1	; select bank2/3
 15897  01F6  0087               	movwf	7
 15898  01F7  0874               	movf	??_TMR0_ISR+3,w
 15899  01F8  3A80               	xorlw	128
 15900  01F9  3C80               	sublw	128
 15901  01FA  1D03               	skipz
 15902  01FB  29FE               	goto	u614_25
 15903  01FC  0873               	movf	??_TMR0_ISR+2,w
 15904  01FD  0201               	subwf	1,w
 15905  01FE                     u614_25:	
 15906  01FE  1C03               	skipc
 15907  01FF  2B4B               	goto	i1l7104
 15908  0200  0020               	movlb	0	; select bank0
 15909  0201  086D               	movf	_DimmerLights22,w
 15910  0202  3E03               	addlw	3
 15911  0203  0086               	movwf	6
 15912  0204  3001               	movlw	1	; select bank2/3
 15913  0205  0087               	movwf	7
 15914  0206  0181               	clrf	1
 15915  0207  086D               	movf	_DimmerLights22,w
 15916  0208  0086               	movwf	6
 15917  0209  3001               	movlw	1	; select bank2/3
 15918  020A  0087               	movwf	7
 15919  020B  1001               	bcf	1,0
 15920  020C  086D               	movf	_DimmerLights22,w
 15921  020D  3E07               	addlw	7
 15922  020E  0086               	movwf	6
 15923  020F  3001               	movlw	1	; select bank2/3
 15924  0210  0087               	movwf	7
 15925  0211  1401               	bsf	1,0
 15926  0212  086D               	movf	_DimmerLights22,w
 15927  0213  0086               	movwf	6
 15928  0214  3001               	movlw	1	; select bank2/3
 15929  0215  0087               	movwf	7
 15930  0216  1F01               	btfss	1,6
 15931  0217  2B4B               	goto	i1l7104
 15932  0218  178C               	bsf	12,7	;volatile
 15933  0219  2B4B               	goto	i1l7104
 15934  021A                     i1l7040:	
 15935  021A  086D               	movf	_DimmerLights22,w
 15936  021B  3E07               	addlw	7
 15937  021C  0086               	movwf	6
 15938  021D  3001               	movlw	1	; select bank2/3
 15939  021E  0087               	movwf	7
 15940  021F  1C01               	btfss	1,0
 15941  0220  2B17               	goto	i1l7096
 15942  0221  086D               	movf	_DimmerLights22,w
 15943  0222  3E07               	addlw	7
 15944  0223  0086               	movwf	6
 15945  0224  3001               	movlw	1	; select bank2/3
 15946  0225  0087               	movwf	7
 15947  0226  1001               	bcf	1,0
 15948  0227  086D               	movf	_DimmerLights22,w
 15949  0228  0086               	movwf	6
 15950  0229  3001               	movlw	1	; select bank2/3
 15951  022A  0087               	movwf	7
 15952  022B  1C81               	btfss	1,1
 15953  022C  2B17               	goto	i1l7096
 15954  022D  3001               	movlw	1
 15955  022E  00F1               	movwf	??_TMR0_ISR
 15956  022F  0A6D               	incf	_DimmerLights22,w
 15957  0230  0086               	movwf	6
 15958  0231  3001               	movlw	1	; select bank2/3
 15959  0232  0087               	movwf	7
 15960  0233  0871               	movf	??_TMR0_ISR,w
 15961  0234  0781               	addwf	1,f
 15962  0235  0A6D               	incf	_DimmerLights22,w
 15963  0236  0086               	movwf	6
 15964  0237  3001               	movlw	1	; select bank2/3
 15965  0238  0087               	movwf	7
 15966  0239  086D               	movf	_DimmerLights22,w
 15967  023A  3E02               	addlw	2
 15968  023B  0084               	movwf	4
 15969  023C  3001               	movlw	1	; select bank2/3
 15970  023D  0085               	movwf	5
 15971  023E  0800               	movf	0,w
 15972  023F  0201               	subwf	1,w
 15973  0240  1C03               	skipc
 15974  0241  2B17               	goto	i1l7096
 15975  0242  0A6D               	incf	_DimmerLights22,w
 15976  0243  0086               	movwf	6
 15977  0244  3001               	movlw	1	; select bank2/3
 15978  0245  0087               	movwf	7
 15979  0246  0181               	clrf	1
 15980  0247  086D               	movf	_DimmerLights22,w
 15981  0248  0086               	movwf	6
 15982  0249  3001               	movlw	1	; select bank2/3
 15983  024A  0087               	movwf	7
 15984  024B  1D81               	btfss	1,3
 15985  024C  2A83               	goto	i1l7066
 15986  024D  086D               	movf	_DimmerLights22,w
 15987  024E  0086               	movwf	6
 15988  024F  3001               	movlw	1	; select bank2/3
 15989  0250  0087               	movwf	7
 15990  0251  1A01               	btfsc	1,4
 15991  0252  2A6A               	goto	i1l7060
 15992  0253  086D               	movf	_DimmerLights22,w
 15993  0254  3E04               	addlw	4
 15994  0255  0086               	movwf	6
 15995  0256  3001               	movlw	1	; select bank2/3
 15996  0257  0087               	movwf	7
 15997  0258  303D               	movlw	61
 15998  0259  0201               	subwf	1,w
 15999  025A  1C03               	skipc
 16000  025B  2A64               	goto	i1l7058
 16001  025C  086D               	movf	_DimmerLights22,w
 16002  025D  3E04               	addlw	4
 16003  025E  0086               	movwf	6
 16004  025F  3001               	movlw	1	; select bank2/3
 16005  0260  0087               	movwf	7
 16006  0261  3001               	movlw	1
 16007  0262  0281               	subwf	1,f
 16008  0263  2B17               	goto	i1l7096
 16009  0264                     i1l7058:	
 16010  0264  086D               	movf	_DimmerLights22,w
 16011  0265  0086               	movwf	6
 16012  0266  3001               	movlw	1	; select bank2/3
 16013  0267  0087               	movwf	7
 16014  0268  1601               	bsf	1,4
 16015  0269  2B17               	goto	i1l7096
 16016  026A                     i1l7060:	
 16017  026A  086D               	movf	_DimmerLights22,w
 16018  026B  3E04               	addlw	4
 16019  026C  0086               	movwf	6
 16020  026D  3001               	movlw	1	; select bank2/3
 16021  026E  0087               	movwf	7
 16022  026F  3078               	movlw	120
 16023  0270  0201               	subwf	1,w
 16024  0271  1803               	skipnc
 16025  0272  2A7D               	goto	i1l7064
 16026  0273  3001               	movlw	1
 16027  0274  00F1               	movwf	??_TMR0_ISR
 16028  0275  086D               	movf	_DimmerLights22,w
 16029  0276  3E04               	addlw	4
 16030  0277  0086               	movwf	6
 16031  0278  3001               	movlw	1	; select bank2/3
 16032  0279  0087               	movwf	7
 16033  027A  0871               	movf	??_TMR0_ISR,w
 16034  027B  0781               	addwf	1,f
 16035  027C  2B17               	goto	i1l7096
 16036  027D                     i1l7064:	
 16037  027D  086D               	movf	_DimmerLights22,w
 16038  027E  0086               	movwf	6
 16039  027F  3001               	movlw	1	; select bank2/3
 16040  0280  0087               	movwf	7
 16041  0281  1201               	bcf	1,4
 16042  0282  2B17               	goto	i1l7096
 16043  0283                     i1l7066:	
 16044  0283  086D               	movf	_DimmerLights22,w
 16045  0284  0086               	movwf	6
 16046  0285  3001               	movlw	1	; select bank2/3
 16047  0286  0087               	movwf	7
 16048  0287  1D01               	btfss	1,2
 16049  0288  2ACA               	goto	i1l7080
 16050  0289  086D               	movf	_DimmerLights22,w
 16051  028A  3E05               	addlw	5
 16052  028B  0086               	movwf	6
 16053  028C  3001               	movlw	1	; select bank2/3
 16054  028D  0087               	movwf	7
 16055  028E  086D               	movf	_DimmerLights22,w
 16056  028F  3E04               	addlw	4
 16057  0290  0084               	movwf	4
 16058  0291  3001               	movlw	1	; select bank2/3
 16059  0292  0085               	movwf	5
 16060  0293  0800               	movf	0,w
 16061  0294  0201               	subwf	1,w
 16062  0295  1803               	skipnc
 16063  0296  2A9F               	goto	i1l7072
 16064  0297  086D               	movf	_DimmerLights22,w
 16065  0298  3E04               	addlw	4
 16066  0299  0086               	movwf	6
 16067  029A  3001               	movlw	1	; select bank2/3
 16068  029B  0087               	movwf	7
 16069  029C  3001               	movlw	1
 16070  029D  0281               	subwf	1,f
 16071  029E  2AB6               	goto	i1l7076
 16072  029F                     i1l7072:	
 16073  029F  086D               	movf	_DimmerLights22,w
 16074  02A0  3E04               	addlw	4
 16075  02A1  0086               	movwf	6
 16076  02A2  3001               	movlw	1	; select bank2/3
 16077  02A3  0087               	movwf	7
 16078  02A4  086D               	movf	_DimmerLights22,w
 16079  02A5  3E05               	addlw	5
 16080  02A6  0084               	movwf	4
 16081  02A7  3001               	movlw	1	; select bank2/3
 16082  02A8  0085               	movwf	5
 16083  02A9  0800               	movf	0,w
 16084  02AA  0201               	subwf	1,w
 16085  02AB  1803               	skipnc
 16086  02AC  2AB6               	goto	i1l7076
 16087  02AD  3001               	movlw	1
 16088  02AE  00F1               	movwf	??_TMR0_ISR
 16089  02AF  086D               	movf	_DimmerLights22,w
 16090  02B0  3E04               	addlw	4
 16091  02B1  0086               	movwf	6
 16092  02B2  3001               	movlw	1	; select bank2/3
 16093  02B3  0087               	movwf	7
 16094  02B4  0871               	movf	??_TMR0_ISR,w
 16095  02B5  0781               	addwf	1,f
 16096  02B6                     i1l7076:	
 16097  02B6  086D               	movf	_DimmerLights22,w
 16098  02B7  3E05               	addlw	5
 16099  02B8  0086               	movwf	6
 16100  02B9  3001               	movlw	1	; select bank2/3
 16101  02BA  0087               	movwf	7
 16102  02BB  086D               	movf	_DimmerLights22,w
 16103  02BC  3E04               	addlw	4
 16104  02BD  0084               	movwf	4
 16105  02BE  3001               	movlw	1	; select bank2/3
 16106  02BF  0085               	movwf	5
 16107  02C0  0800               	movf	0,w
 16108  02C1  0601               	xorwf	1,w
 16109  02C2  1D03               	skipz
 16110  02C3  2B17               	goto	i1l7096
 16111  02C4  086D               	movf	_DimmerLights22,w
 16112  02C5  0086               	movwf	6
 16113  02C6  3001               	movlw	1	; select bank2/3
 16114  02C7  0087               	movwf	7
 16115  02C8  1101               	bcf	1,2
 16116  02C9  2AE5               	goto	i1l7086
 16117  02CA                     i1l7080:	
 16118  02CA  086D               	movf	_DimmerLights22,w
 16119  02CB  0086               	movwf	6
 16120  02CC  3001               	movlw	1	; select bank2/3
 16121  02CD  0087               	movwf	7
 16122  02CE  1E81               	btfss	1,5
 16123  02CF  2AEB               	goto	i1l7088
 16124  02D0  086D               	movf	_DimmerLights22,w
 16125  02D1  3E04               	addlw	4
 16126  02D2  0086               	movwf	6
 16127  02D3  3001               	movlw	1	; select bank2/3
 16128  02D4  0087               	movwf	7
 16129  02D5  3001               	movlw	1
 16130  02D6  0281               	subwf	1,f
 16131  02D7  086D               	movf	_DimmerLights22,w
 16132  02D8  3E05               	addlw	5
 16133  02D9  0086               	movwf	6
 16134  02DA  3001               	movlw	1	; select bank2/3
 16135  02DB  0087               	movwf	7
 16136  02DC  086D               	movf	_DimmerLights22,w
 16137  02DD  3E04               	addlw	4
 16138  02DE  0084               	movwf	4
 16139  02DF  3001               	movlw	1	; select bank2/3
 16140  02E0  0085               	movwf	5
 16141  02E1  0800               	movf	0,w
 16142  02E2  0201               	subwf	1,w
 16143  02E3  1C03               	skipc
 16144  02E4  2B17               	goto	i1l7096
 16145  02E5                     i1l7086:	
 16146  02E5  086D               	movf	_DimmerLights22,w
 16147  02E6  0086               	movwf	6
 16148  02E7  3001               	movlw	1	; select bank2/3
 16149  02E8  0087               	movwf	7
 16150  02E9  1081               	bcf	1,1
 16151  02EA  2B17               	goto	i1l7096
 16152  02EB                     i1l7088:	
 16153  02EB  3001               	movlw	1
 16154  02EC  00F1               	movwf	??_TMR0_ISR
 16155  02ED  086D               	movf	_DimmerLights22,w
 16156  02EE  3E04               	addlw	4
 16157  02EF  0086               	movwf	6
 16158  02F0  3001               	movlw	1	; select bank2/3
 16159  02F1  0087               	movwf	7
 16160  02F2  0871               	movf	??_TMR0_ISR,w
 16161  02F3  0781               	addwf	1,f
 16162  02F4  086D               	movf	_DimmerLights22,w
 16163  02F5  3E04               	addlw	4
 16164  02F6  0086               	movwf	6
 16165  02F7  3001               	movlw	1	; select bank2/3
 16166  02F8  0087               	movwf	7
 16167  02F9  086D               	movf	_DimmerLights22,w
 16168  02FA  3E06               	addlw	6
 16169  02FB  0084               	movwf	4
 16170  02FC  3001               	movlw	1	; select bank2/3
 16171  02FD  0085               	movwf	5
 16172  02FE  0800               	movf	0,w
 16173  02FF  0201               	subwf	1,w
 16174  0300  1C03               	skipc
 16175  0301  2B17               	goto	i1l7096
 16176  0302  086D               	movf	_DimmerLights22,w
 16177  0303  0086               	movwf	6
 16178  0304  3001               	movlw	1	; select bank2/3
 16179  0305  0087               	movwf	7
 16180  0306  1081               	bcf	1,1
 16181  0307  086D               	movf	_DimmerLights22,w
 16182  0308  0086               	movwf	6
 16183  0309  3001               	movlw	1	; select bank2/3
 16184  030A  0087               	movwf	7
 16185  030B  1301               	bcf	1,6
 16186  030C  086D               	movf	_DimmerLights22,w
 16187  030D  3E0C               	addlw	12
 16188  030E  0086               	movwf	6
 16189  030F  3001               	movlw	1	; select bank2/3
 16190  0310  0087               	movwf	7
 16191  0311  1401               	bsf	1,0
 16192  0312  086A               	movf	_Dimmer,w
 16193  0313  0086               	movwf	6
 16194  0314  0187               	clrf	7
 16195  0315  1581               	bsf	1,3
 16196  0316  118C               	bcf	12,3	;volatile
 16197  0317                     i1l7096:	
 16198  0317  1F8C               	btfss	12,7	;volatile
 16199  0318  2B4B               	goto	i1l7104
 16200  0319  3001               	movlw	1
 16201  031A  00F1               	movwf	??_TMR0_ISR
 16202  031B  086D               	movf	_DimmerLights22,w
 16203  031C  3E08               	addlw	8
 16204  031D  0086               	movwf	6
 16205  031E  3001               	movlw	1	; select bank2/3
 16206  031F  0087               	movwf	7
 16207  0320  0871               	movf	??_TMR0_ISR,w
 16208  0321  0781               	addwf	1,f
 16209  0322  086D               	movf	_DimmerLights22,w
 16210  0323  3E04               	addlw	4
 16211  0324  0086               	movwf	6
 16212  0325  3001               	movlw	1	; select bank2/3
 16213  0326  0087               	movwf	7
 16214  0327  0801               	movf	1,w
 16215  0328  00F1               	movwf	??_TMR0_ISR
 16216  0329  01F2               	clrf	??_TMR0_ISR+1
 16217  032A  09F1               	comf	??_TMR0_ISR,f
 16218  032B  09F2               	comf	??_TMR0_ISR+1,f
 16219  032C  0AF1               	incf	??_TMR0_ISR,f
 16220  032D  1903               	skipnz
 16221  032E  0AF2               	incf	??_TMR0_ISR+1,f
 16222  032F  0871               	movf	??_TMR0_ISR,w
 16223  0330  3E78               	addlw	120
 16224  0331  00F3               	movwf	??_TMR0_ISR+2
 16225  0332  3000               	movlw	0
 16226  0333  3D72               	addwfc	??_TMR0_ISR+1,w
 16227  0334  00F4               	movwf	??_TMR0_ISR+3
 16228  0335  086D               	movf	_DimmerLights22,w
 16229  0336  3E08               	addlw	8
 16230  0337  0086               	movwf	6
 16231  0338  3001               	movlw	1	; select bank2/3
 16232  0339  0087               	movwf	7
 16233  033A  0874               	movf	??_TMR0_ISR+3,w
 16234  033B  3A80               	xorlw	128
 16235  033C  3C80               	sublw	128
 16236  033D  1D03               	skipz
 16237  033E  2B41               	goto	u631_25
 16238  033F  0873               	movf	??_TMR0_ISR+2,w
 16239  0340  0201               	subwf	1,w
 16240  0341                     u631_25:	
 16241  0341  1C03               	skipc
 16242  0342  2B4B               	goto	i1l7104
 16243  0343  0020               	movlb	0	; select bank0
 16244  0344  086D               	movf	_DimmerLights22,w
 16245  0345  3E08               	addlw	8
 16246  0346  0086               	movwf	6
 16247  0347  3001               	movlw	1	; select bank2/3
 16248  0348  0087               	movwf	7
 16249  0349  0181               	clrf	1
 16250  034A  138C               	bcf	12,7	;volatile
 16251  034B                     i1l7104:	
 16252                           
 16253                           ;MCU_16f1518_B1.c: 113: Timer0->Count++;
 16254  034B  0021               	movlb	1	; select bank1
 16255  034C  0A6E               	incf	_Timer0^(0+128),w
 16256  034D  0086               	movwf	6
 16257  034E  0187               	clrf	7
 16258  034F  3001               	movlw	1
 16259  0350  0781               	addwf	1,f
 16260  0351  3141               	addfsr 1,1
 16261  0352  1803               	skipnc
 16262  0353  0A81               	incf	1,f
 16263                           
 16264                           ;MCU_16f1518_B1.c: 114: if(Timer0->Count == 200)
 16265  0354  0A6E               	incf	_Timer0^(0+128),w
 16266  0355  0086               	movwf	6
 16267  0356  0187               	clrf	7
 16268  0357  3F40               	moviw [0]fsr1
 16269  0358  3AC8               	xorlw	200
 16270  0359  1D03               	skipz
 16271  035A  2B5D               	goto	u632_25
 16272  035B  3F41               	moviw [1]fsr1
 16273  035C  3A00               	xorlw	0
 16274  035D                     u632_25:	
 16275  035D  1D03               	skipz
 16276  035E  2B6B               	goto	i1l1599
 16277                           
 16278                           ;MCU_16f1518_B1.c: 115: {
 16279                           ;MCU_16f1518_B1.c: 116: Timer0->Count=0;
 16280  035F  0A6E               	incf	_Timer0^(0+128),w
 16281  0360  0086               	movwf	6
 16282  0361  0187               	clrf	7
 16283  0362  3000               	movlw	0
 16284  0363  3FC0               	movwi [0]fsr1
 16285  0364  3FC1               	movwi [1]fsr1
 16286                           
 16287                           ;MCU_16f1518_B1.c: 117: TMain->T0_Timerout=1;
 16288  0365  0020               	movlb	0	; select bank0
 16289  0366  086F               	movf	_TMain,w
 16290  0367  0086               	movwf	6
 16291  0368  3001               	movlw	1	; select bank2/3
 16292  0369  0087               	movwf	7
 16293  036A  1481               	bsf	1,1
 16294  036B                     i1l1599:	
 16295                           
 16296                           ;MCU_16f1518_B1.c: 118: }
 16297                           ;MCU_16f1518_B1.c: 121: if(Buz->GO)
 16298  036B  0020               	movlb	0	; select bank0
 16299  036C  0868               	movf	_Buz,w
 16300  036D  0086               	movwf	6
 16301  036E  3001               	movlw	1	; select bank2/3
 16302  036F  0087               	movwf	7
 16303  0370  1C81               	btfss	1,1
 16304  0371  0008               	return
 16305                           
 16306                           ;MCU_16f1518_B1.c: 122: {
 16307                           ;MCU_16f1518_B1.c: 123: Buz->Time++;
 16308  0372  0A68               	incf	_Buz,w
 16309  0373  0086               	movwf	6
 16310  0374  3001               	movlw	1	; select bank2/3
 16311  0375  0087               	movwf	7
 16312  0376  3001               	movlw	1
 16313  0377  0781               	addwf	1,f
 16314  0378  3141               	addfsr 1,1
 16315  0379  1803               	skipnc
 16316  037A  0A81               	incf	1,f
 16317  037B  0008               	return
 16318  037C                     __end_of_TMR0_ISR:	
 16319                           
 16320                           	psect	text108
 16321  125D                     __ptext108:	
 16322 ;; *************** function _IOC_ISR *****************
 16323 ;; Defined at:
 16324 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 16325 ;; Parameters:    Size  Location     Type
 16326 ;;		None
 16327 ;; Auto vars:     Size  Location     Type
 16328 ;;		None
 16329 ;; Return value:  Size  Location     Type
 16330 ;;		None               void
 16331 ;; Registers used:
 16332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16333 ;; Tracked objects:
 16334 ;;		On entry : 0/0
 16335 ;;		On exit  : 0/0
 16336 ;;		Unchanged: 0/0
 16337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;Total ram usage:        1 bytes
 16343 ;; Hardware stack levels used:    1
 16344 ;; Hardware stack levels required when called:    1
 16345 ;; This function calls:
 16346 ;;		_setDimmerReClock
 16347 ;; This function is called by:
 16348 ;;		_ISR
 16349 ;; This function uses a non-reentrant model
 16350 ;;
 16351                           
 16352                           
 16353                           ;psect for function _IOC_ISR
 16354  125D                     _IOC_ISR:	
 16355                           
 16356                           ;MCU_16f1518_B1.c: 269: if(IOCIE && IOCBF2)
 16357                           
 16358                           ;incstack = 0
 16359                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16360  125D  1D8B               	btfss	11,3	;volatile
 16361  125E  0008               	return
 16362  125F  0027               	movlb	7	; select bank7
 16363  1260  1D16               	btfss	22,2	;volatile
 16364  1261  0008               	return
 16365                           
 16366                           ;MCU_16f1518_B1.c: 270: {
 16367                           ;MCU_16f1518_B1.c: 271: IOCBF2=0;
 16368  1262  1116               	bcf	22,2	;volatile
 16369                           
 16370                           ;MCU_16f1518_B1.c: 272: IOCIF=0;
 16371  1263  100B               	bcf	11,0	;volatile
 16372                           
 16373                           ;MCU_16f1518_B1.c: 273: if(TMain->PowerON)
 16374  1264  0020               	movlb	0	; select bank0
 16375  1265  086F               	movf	_TMain,w
 16376  1266  0086               	movwf	6
 16377  1267  3001               	movlw	1	; select bank2/3
 16378  1268  0087               	movwf	7
 16379  1269  1C01               	btfss	1,0
 16380  126A  0008               	return
 16381                           
 16382                           ;MCU_16f1518_B1.c: 274: {
 16383                           ;MCU_16f1518_B1.c: 278: setDimmerReClock();
 16384  126B  3191  2134  3192   	fcall	_setDimmerReClock
 16385                           
 16386                           ;MCU_16f1518_B1.c: 279: if(RB2)
 16387  126E  0020               	movlb	0	; select bank0
 16388  126F  1D0D               	btfss	13,2	;volatile
 16389  1270  2A77               	goto	i1l6938
 16390                           
 16391                           ;MCU_16f1518_B1.c: 280: {
 16392                           ;MCU_16f1518_B1.c: 281: Dimmer->Correction=0;
 16393  1271  086A               	movf	_Dimmer,w
 16394  1272  3E02               	addlw	2
 16395  1273  0086               	movwf	6
 16396  1274  0187               	clrf	7
 16397  1275  0181               	clrf	1
 16398                           
 16399                           ;MCU_16f1518_B1.c: 282: }
 16400  1276  0008               	return
 16401  1277                     i1l6938:	
 16402                           
 16403                           ;MCU_16f1518_B1.c: 283: else
 16404                           ;MCU_16f1518_B1.c: 284: {
 16405                           ;MCU_16f1518_B1.c: 285: Dimmer->Correction=8;
 16406  1277  3008               	movlw	8
 16407  1278  00F1               	movwf	??_IOC_ISR
 16408  1279  086A               	movf	_Dimmer,w
 16409  127A  3E02               	addlw	2
 16410  127B  0086               	movwf	6
 16411  127C  0187               	clrf	7
 16412  127D  0871               	movf	??_IOC_ISR,w
 16413  127E  0081               	movwf	1
 16414  127F  0008               	return
 16415  1280                     __end_of_IOC_ISR:	
 16416                           
 16417                           	psect	text109
 16418  1134                     __ptext109:	
 16419 ;; *************** function _setDimmerReClock *****************
 16420 ;; Defined at:
 16421 ;;		line 129 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 16422 ;; Parameters:    Size  Location     Type
 16423 ;;		None
 16424 ;; Auto vars:     Size  Location     Type
 16425 ;;		None
 16426 ;; Return value:  Size  Location     Type
 16427 ;;		None               void
 16428 ;; Registers used:
 16429 ;;		wreg, fsr1l, fsr1h
 16430 ;; Tracked objects:
 16431 ;;		On entry : 0/0
 16432 ;;		On exit  : 0/0
 16433 ;;		Unchanged: 0/0
 16434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;Total ram usage:        0 bytes
 16440 ;; Hardware stack levels used:    1
 16441 ;; This function calls:
 16442 ;;		Nothing
 16443 ;; This function is called by:
 16444 ;;		_IOC_ISR
 16445 ;; This function uses a non-reentrant model
 16446 ;;
 16447                           
 16448                           
 16449                           ;psect for function _setDimmerReClock
 16450  1134                     _setDimmerReClock:	
 16451                           
 16452                           ;MCU_16f1518_B1.c: 131: TMR0=255;
 16453                           
 16454                           ;incstack = 0
 16455                           ; Regs used in _setDimmerReClock: [wregfsr1]
 16456  1134  30FF               	movlw	255
 16457  1135  0020               	movlb	0	; select bank0
 16458  1136  0095               	movwf	21	;volatile
 16459                           
 16460                           ;MCU_16f1518_B1.c: 136: if(!DimmerLights11->GO)
 16461  1137  086C               	movf	_DimmerLights11,w
 16462  1138  0086               	movwf	6
 16463  1139  3001               	movlw	1	; select bank2/3
 16464  113A  0087               	movwf	7
 16465  113B  1801               	btfsc	1,0
 16466  113C  2942               	goto	i1l1604
 16467                           
 16468                           ;MCU_16f1518_B1.c: 137: {
 16469                           ;MCU_16f1518_B1.c: 138: DimmerLights11->GO=1;
 16470  113D  086C               	movf	_DimmerLights11,w
 16471  113E  0086               	movwf	6
 16472  113F  3001               	movlw	1	; select bank2/3
 16473  1140  0087               	movwf	7
 16474  1141  1401               	bsf	1,0
 16475  1142                     i1l1604:	
 16476                           
 16477                           ;MCU_16f1518_B1.c: 139: }
 16478                           ;MCU_16f1518_B1.c: 158: if(!DimmerLights22->GO)
 16479  1142  086D               	movf	_DimmerLights22,w
 16480  1143  0086               	movwf	6
 16481  1144  3001               	movlw	1	; select bank2/3
 16482  1145  0087               	movwf	7
 16483  1146  1801               	btfsc	1,0
 16484  1147  0008               	return
 16485                           
 16486                           ;MCU_16f1518_B1.c: 159: {
 16487                           ;MCU_16f1518_B1.c: 160: DimmerLights22->GO=1;
 16488  1148  086D               	movf	_DimmerLights22,w
 16489  1149  0086               	movwf	6
 16490  114A  3001               	movlw	1	; select bank2/3
 16491  114B  0087               	movwf	7
 16492  114C  1401               	bsf	1,0
 16493  114D  0008               	return
 16494  114E                     __end_of_setDimmerReClock:	
 16495                           
 16496                           	psect	text110
 16497  1EC1                     __ptext110:	
 16498 ;; *************** function _INT_ISR *****************
 16499 ;; Defined at:
 16500 ;;		line 225 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;		None
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;		None               void
 16507 ;; Registers used:
 16508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;Total ram usage:        0 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    2
 16521 ;; This function calls:
 16522 ;;		_setRF_ReceiveGO
 16523 ;; This function is called by:
 16524 ;;		_ISR
 16525 ;; This function uses a non-reentrant model
 16526 ;;
 16527                           
 16528                           
 16529                           ;psect for function _INT_ISR
 16530  1EC1                     _INT_ISR:	
 16531                           
 16532                           ;MCU_16f1518_B1.c: 227: if(INTE && INTF)
 16533                           
 16534                           ;incstack = 0
 16535                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16536  1EC1  1E0B               	btfss	11,4	;volatile
 16537  1EC2  0008               	return
 16538  1EC3  1C8B               	btfss	11,1	;volatile
 16539  1EC4  0008               	return
 16540                           
 16541                           ;MCU_16f1518_B1.c: 228: {
 16542                           ;MCU_16f1518_B1.c: 229: INTF=0;
 16543  1EC5  108B               	bcf	11,1	;volatile
 16544                           
 16545                           ;MCU_16f1518_B1.c: 230: INTE=0;
 16546  1EC6  120B               	bcf	11,4	;volatile
 16547                           
 16548                           ;MCU_16f1518_B1.c: 231: setRF_ReceiveGO(1,1);
 16549  1EC7  01F3               	clrf	setRF_ReceiveGO@command
 16550  1EC8  0AF3               	incf	setRF_ReceiveGO@command,f
 16551  1EC9  3001               	movlw	1
 16552  1ECA  319E  26B5         	fcall	_setRF_ReceiveGO
 16553  1ECC  0008               	return
 16554  1ECD                     __end_of_INT_ISR:	
 16555                           
 16556                           	psect	text111
 16557  1EB5                     __ptext111:	
 16558 ;; *************** function _setRF_ReceiveGO *****************
 16559 ;; Defined at:
 16560 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16561 ;; Parameters:    Size  Location     Type
 16562 ;;  rf              1    wreg     unsigned char 
 16563 ;;  command         1    2[COMMON] unsigned char 
 16564 ;; Auto vars:     Size  Location     Type
 16565 ;;  rf              1    3[COMMON] unsigned char 
 16566 ;; Return value:  Size  Location     Type
 16567 ;;		None               void
 16568 ;; Registers used:
 16569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16570 ;; Tracked objects:
 16571 ;;		On entry : 0/0
 16572 ;;		On exit  : 0/0
 16573 ;;		Unchanged: 0/0
 16574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16579 ;;Total ram usage:        2 bytes
 16580 ;; Hardware stack levels used:    1
 16581 ;; Hardware stack levels required when called:    1
 16582 ;; This function calls:
 16583 ;;		i1_RfPointSelect
 16584 ;; This function is called by:
 16585 ;;		_INT_ISR
 16586 ;; This function uses a non-reentrant model
 16587 ;;
 16588                           
 16589                           
 16590                           ;psect for function _setRF_ReceiveGO
 16591  1EB5                     _setRF_ReceiveGO:	
 16592                           
 16593                           ;incstack = 0
 16594                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16595                           ;setRF_ReceiveGO@rf stored from wreg
 16596  1EB5  00F4               	movwf	setRF_ReceiveGO@rf
 16597                           
 16598                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 16599  1EB6  0874               	movf	setRF_ReceiveGO@rf,w
 16600  1EB7  319E  2674         	fcall	i1_RfPointSelect
 16601                           
 16602                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 16603  1EB9  0879               	movf	_RF,w
 16604  1EBA  0086               	movwf	6
 16605  1EBB  0187               	clrf	7
 16606  1EBC  0873               	movf	setRF_ReceiveGO@command,w
 16607  1EBD  1081               	bcf	1,1
 16608  1EBE  1D03               	skipz
 16609  1EBF  1481               	bsf	1,1
 16610  1EC0  0008               	return
 16611  1EC1                     __end_of_setRF_ReceiveGO:	
 16612                           
 16613                           	psect	text112
 16614  1E74                     __ptext112:	
 16615 ;; *************** function i1_RfPointSelect *****************
 16616 ;; Defined at:
 16617 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16618 ;; Parameters:    Size  Location     Type
 16619 ;;  rf              1    wreg     unsigned char 
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;  rf              1    1[COMMON] unsigned char 
 16622 ;; Return value:  Size  Location     Type
 16623 ;;		None               void
 16624 ;; Registers used:
 16625 ;;		wreg
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 0/0
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16635 ;;Total ram usage:        2 bytes
 16636 ;; Hardware stack levels used:    1
 16637 ;; This function calls:
 16638 ;;		Nothing
 16639 ;; This function is called by:
 16640 ;;		_setRF_ReceiveGO
 16641 ;; This function uses a non-reentrant model
 16642 ;;
 16643                           
 16644                           
 16645                           ;psect for function i1_RfPointSelect
 16646  1E74                     i1_RfPointSelect:	
 16647                           
 16648                           ;incstack = 0
 16649                           ; Regs used in i1_RfPointSelect: [wreg]
 16650                           ;i1RfPointSelect@rf stored from wreg
 16651  1E74  00F2               	movwf	i1RfPointSelect@rf
 16652                           
 16653                           ;RF_Control_B1.c: 10: if(rf == 1)
 16654  1E75  0872               	movf	i1RfPointSelect@rf,w
 16655  1E76  3A01               	xorlw	1
 16656  1E77  1D03               	skipz
 16657  1E78  0008               	return
 16658                           
 16659                           ;RF_Control_B1.c: 11: {
 16660                           ;RF_Control_B1.c: 12: RF=&RF1;
 16661  1E79  30EA               	movlw	_RF1& (0+255)
 16662  1E7A  00F1               	movwf	??i1_RfPointSelect
 16663  1E7B  0871               	movf	??i1_RfPointSelect,w
 16664  1E7C  00F9               	movwf	_RF
 16665  1E7D  0008               	return
 16666  1E7E                     __end_ofi1_RfPointSelect:	
 16667  007E                     btemp	set	126	;btemp
 16668  007E                     pic14e$flags	set	126
 16669  007E                     wtemp	set	126
 16670  007E                     wtemp0	set	126
 16671  0080                     wtemp1	set	128
 16672  0082                     wtemp2	set	130
 16673  0084                     wtemp3	set	132
 16674  0086                     wtemp4	set	134
 16675  0088                     wtemp5	set	136
 16676  007F                     wtemp6	set	127
 16677  007E                     ttemp	set	126
 16678  007E                     ttemp0	set	126
 16679  0081                     ttemp1	set	129
 16680  0084                     ttemp2	set	132
 16681  0087                     ttemp3	set	135
 16682  007F                     ttemp4	set	127
 16683  007E                     ltemp	set	126
 16684  007E                     ltemp0	set	126
 16685  0082                     ltemp1	set	130
 16686  0086                     ltemp2	set	134
 16687  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        67
    BSS         151
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80     72      80
    BANK1            80      1      80
    BANK2            80      3      66
    BANK3            80      0      67
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(2) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK1[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 2
		 -> NULL(NULL[0]), RF1(BANK1[2]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 7
		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 16
		 -> NULL(NULL[0]), VarTMain(BANK2[16]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK3[37]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights1(BANK2[13]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), DimmerLights1(BANK2[13]), 

    Product	PTR struct Product size(1) Largest target is 30
		 -> NULL(NULL[0]), VarProduct(BANK3[30]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _setSw_Main->_setBuz
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setTxData
    _Sw_DimmerOffFunc->_setDelayOff_GO
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setBuz
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RF_RxDisable
    _RF_RxDisable->_CC2500_WriteCommand
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setPercentValue
    _setPercentValue->___fttol
    _setDimmerLights->_setDimmer_Detect
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _getDimmerLights_Trigger->_DimmerLightsPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _setDimmer_Detect->_DimmerPointSelect
    _getDimmer_Detect->_DimmerPointSelect
    _getDimmerLights_StatusFlag->_DimmerLightsPointSelect
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_getPercentValue
    _getPercentValue->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setBuz
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _setRF_Main->_getRxData

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _RF_Main->_setRF_Main

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   71845
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                              _MainT
               _MainT_Initialization
                 _Mcu_Initialization
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    8893
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0    8893
                                             10 BANK0      5     5      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     288
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      1     1      0    2567
                                              6 BANK0      1     1      0
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    3465
                                              7 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     1     1      0    1180
                                              4 BANK0      1     1      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     818
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     818
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   23560
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   23560
                                              0 BANK2      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   22276
                                              0 BANK1      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1133
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   21081
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      3     3      0    4759
                                             10 BANK0      3     3      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       4     2      2     876
                                              3 BANK0      4     2      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     238
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   12448
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   12070
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11977
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     235
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     628
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     158
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     167
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    1836
                             _setBuz
                       _setRF_Enable
                       _setSw_Enable
                          _setTxData
 ---------------------------------------------------------------------------------
 (2) _setSw_Enable                                         1     1      0     124
                                              1 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (2) _setRF_Enable                                         2     1      1     449
                                              5 BANK0      2     1      1
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     192
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     942
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     942
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     331
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     331
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    6233
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      71
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   10562
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0   10076
                                             65 BANK0      2     2      0
            _DimmerLightsPointSelect
            _getDimmerLights_Trigger
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  4     3      1    6998
                                             61 BANK0      4     3      1
            _DimmerLightsPointSelect
                    _setPercentValue
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    5747
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1456
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                   _setDimmer_Detect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     787
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Trigger                              4     4      0     201
                                              2 BANK0      4     4      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0     486
         _getDimmerLights_StatusFlag
                   _getDimmer_Detect
                   _setDimmer_Detect
 ---------------------------------------------------------------------------------
 (6) _setDimmer_Detect                                     2     1      1     223
                                              2 BANK0      2     1      1
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (3) _getDimmer_Detect                                     2     2      0      62
                                              2 BANK0      2     2      0
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (7) _DimmerPointSelect                                    2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_StatusFlag                           4     4      0     201
                                              2 BANK0      4     4      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0   12008
                                             66 BANK0      1     1      0
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       3     3      0   12008
                                             63 BANK0      3     3      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11884
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___fttol                                             14    10      4     501
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2655
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftdiv                                             16    10      6    2847
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3482
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___awtoft                                             6     3      3    2300
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___ftpack                                            8     3      5    2037
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    4245
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    4245
                                             10 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            4     4      0     192
                                              2 BANK0      4     4      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _RfPointSelect                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _setSw_Status                                         2     1      1     514
                                              1 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1     743
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (4) _setRFSW_Status                                       2     1      1     579
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfSWPointSelect                                      2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _DimmerLightsPointSelect                              2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setBuz                                               4     2      2    1071
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      93
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      93
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    2107
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     464
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     458
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     393
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     260
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     495
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     396
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      99
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     119
                                              4 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     119
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     119
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
       _getPercentValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
         _DimmerLightsPointSelect
       _getDimmer_Detect
         _DimmerPointSelect
       _setDimmer_Detect
         _DimmerPointSelect
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _getDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setDimmer_Detect
           _DimmerPointSelect
         _setLED
           _LedPointSelect
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _MainT
     _setBuz
       ___wmul
     _setRF_Enable
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
     _setSw_Enable
       _SwPointSelect
     _setTxData
       _RfPointSelect
   _MainT_Initialization
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setDimmer_Detect
               _DimmerPointSelect
             _setLED
               _LedPointSelect
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      1      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      3      42       9       82.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     130      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     130      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Sep 09 17:30:26 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _RD 0CA8  
                                     _RF 0079                  __end_of_CC2500_WriteREG 1102  
                                     _WR 0CA9                                       _Sw 0076  
     __end_of_getDimmerLights_StatusFlag 121A               _getDimmerLights_StatusFlag 11FA  
                    ___wmul@multiplicand 0022                   __end_of_setDelayOff_GO 1467  
                           ___ftadd@exp1 004A                             ___ftadd@exp2 0049  
              setDimmerLights_Adj@lights 0060                     _setDimmerLights_Main 0D20  
                           ___ftadd@sign 0048                                      l303 099A  
                                    l316 13EB                                      l350 10DE  
                                    l319 13F1                                      l361 10F1  
                                    l283 15F0                                      l292 1622  
                                    l349 10DC                                      l373 1F83  
                                    l288 161A                                      l385 12CC  
                                    l289 161F                                      l379 1171  
                                    l299 0989                                      l654 1396  
                                    l815 1FF7                                      _GIE 005F  
                                    _CRC 00B7                                      _RA0 0060  
                                    _RB0 0068     __size_of_DimmerLights_Initialization 0012  
                                    _RB1 0069                                      _RA3 0063  
                                    _RC0 0070                                      _RB2 006A  
                                    _RA4 0064                                      _LED 0078  
                                    _RC1 0071                                      _RB3 006B  
                                    _RC2 0072                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC4 0074  
                                    _RC5 0075                                      _RC7 0077  
                                    _RF1 00EA                                      _ISR 0004  
                                    _Sw1 00C1                                      _Sw2 0156  
                                    _Buz 0068                setDimmerLights_Adj@status 005D  
               __end_of_CC2500_WriteByte 10E9                    _Buzzer_Initialization 1E7E  
                        __end_of_ADC_Set 1E3B                          ?_DelayTimejudge 0071  
                                    wreg 0009     setDimmerLights_Initialization@lights 0061  
                        _setDimmerLights 0BAF                    _setDimmerLights_AdjRF 1280  
                  _setDimmerLights_AdjGo 1FBB                                     ?_ISR 0071  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 1280  
                           ___ftdiv@sign 003D                                     l3017 056E  
               ?_DimmerLightsPointSelect 0071                                     l2331 16B4  
                                   l2363 150B                                     l2349 10AE  
                        __end_of_IOC_Set 1F0A                                     l2551 1401  
                                   l1664 13C0                                     l2529 1E23  
                                   l2556 141A                                     l2827 11C6  
                                   l8110 1201                                     l8112 1218  
                                   l8016 1602                                     l2994 0970  
                                   l7314 1246                                     l7330 04FE  
                                   l7402 06A6                                     l8130 1221  
                                   l8050 09C4                                     l2988 0959  
                                   l8108 1213                                     l8132 1239  
                                   l7326 04F7                                     l8142 17BC  
                                   l8062 09DD                                     l7280 092F  
                                   l7360 054D                                     l7336 050D  
                                   l7424 0700                                     l7416 06E7  
                                   l8128 1234                                     l8224 134E  
                                   l8048 09AC                                     l8074 12DD  
                                   l7354 053A                                     l7522 0E23  
                                   l7514 0E09                                     l7506 0DEE  
                                   l8322 0B8A                                     l9050 172C  
                                   l8076 12E8                                     l7612 11C0  
                                   l7284 0936                                     l7372 0580  
                                   l7356 0544                                     l7348 0527  
                                   l7460 0635                                     l7444 05F2  
                                   l7516 0E12                                     l7508 0DFC  
                                   l7606 1085                                     l7294 095E  
                                   l7286 0940                                     l7366 0560  
                                   l7358 0549                                     l7438 05DC  
                                   l7518 0E15                                     l8510 1412  
                                   l7702 144E                                     l8246 176C  
                                   l9046 1722                                     l7544 1071  
                                   l7632 0C60                                     l7296 0966  
                                   l7288 0945                                     l7376 0592  
                                   l7368 056A                                     l7472 0651  
                                   l7456 062D                                     l8440 0D36  
                                   l7560 1382                                     l7552 1376  
                                   l7386 05AD                                     l7722 08DB  
                                   l7730 08E7                                     l8186 13A6  
                                   l7810 11B0                                     l7706 145A  
                                   l8258 1782                                     l8290 16F2  
                                   l7636 0C7E                                     l7396 0690  
                                   l7468 0649                                     l7740 08F7  
                                   l8508 140D                                     l7812 11B6  
                                   l7564 1388                                     l7556 137C  
                                   l7590 118E                                     l7726 08E1  
                                   l8470 0D9E                                     l8462 0D7B  
                                   l8454 0D5E                                     l8446 0D41  
                                   l8526 12B2                                     l8518 1426  
                                   l8630 0CCA                                     l8622 0CB1  
                                   l8710 03E1                                     l7488 0DBE  
                                   l7752 0911                                     l7760 091D  
                                   l7736 08F1                                     l7744 08FD  
                                   l7568 138E                                     l8720 0413  
                                   l7658 0860                                     l7594 1197  
                                   l7842 0BF9                                     l8458 0D6B  
                                   l8626 0CB9                                     l8730 0447  
                                   l7756 0917                                     l8492 14D3  
                                   l7852 0EE5                                     l8652 0D00  
                                   l8740 047A                                     l7774 07D7  
                                   l8638 0CDA                                     l8496 14DA  
                                   l7880 0F4B                                     l7864 0F12  
                                   l8656 0D0B                                     l8594 0A08  
                                   l8682 0393                                     l8588 09F1  
                                   l8924 159F                                     l7892 14F9  
                                   l7868 0F1F                                     l8692 03A3  
                                   l8684 0399                                     l8790 0FE5  
                                   l8598 0A4F                                     l7990 0EAD  
                                   l7982 0E9B                                     l8694 03AB  
                                   l8784 0FBD                                     l8792 0FEB  
                                   l8856 0787                                     l7976 0E7F  
                                   _CFGS 0CAE                                     l7994 0EB6  
                                   l7986 0EA4                                     l8796 0FF2  
                                   l8898 0B0B                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 1ECD                                     _LATC 010E  
                                   _PEIE 005E                                     _INTE 005C  
                                   _INTF 0059                                     u7015 0652  
                                   u7025 0658                                     u7115 0E0A  
                                   u7055 0DC5                                     u6515 093B  
                                   u7325 11C7                                     u7085 0DEF  
                                   u7335 11CC                                     u6535 0954  
                                   u6705 0528                                     u9025 0AE3  
                                   u6555 0961                                     u9035 0B21  
                                   u7390 081F                                     u6735 053B  
                                   u6585 0977                                     u6905 0701  
                                   u7395 081D                                     u9075 1586  
                                   u6765 054E                                     u6865 06B8  
                                   u6945 05FE                                     u6795 0561  
                                   u6875 06C8                                     u6955 060E  
                                   u7780 1E72                                     u6885 06E8  
                                   u6895 06F7                                     u6975 0636  
                                   u6985 063C                                     u8945 0F7E  
                                   u7995 12D2                                     _LWLO 0CAD  
                                   _RFSW 00B9                                     _TMR0 0015  
                        __end_of_INT_Set 1E23                                     _RSSI 00BA  
                                   _WREN 0CAA                                     _Buz1 014A  
                                   _main 1704                             ___ftpack@arg 0020  
                    __end_of_DlyOff_Main 0AC9                          __end_of_RF_Main 1E1E  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                                     ltemp 007E  
          __size_of_setRF_Initialization 0007                         _setDimmerReClock 1134  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                      DelayTimejudge@value 0022  
                          _RfPointSelect 1E94               __end_of_setRFSW_AdjControl 1521  
                       _setDimmer_Detect 1F24                             ___ftmul@cntr 003C  
                      ?_getDimmer_Detect 0071                             ___ftmul@sign 003D  
                                  ??_ISR 0075                             ___fttol@exp1 0058  
                     ??_getDimmer_Detect 0022                             ___fttol@lval 0054  
                       __end_of_LED_Main 1EFD                    ?_setDimmerLights_Main 0071  
                        ?_setDelayOff_GO 0023                                    ?_main 0071  
              setControl_Lights_Table@rf 0067                          __end_of___ftadd 05C5  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0722  
                        __end_of___ftmul 0679                          __end_of___fttol 0E2C  
           setDimmerLights_AdjGo@command 0022                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                 _setDimmerLights_Switch 1F8B            __size_of_CC2500_FrequencyCabr 000C  
                                  _RFSW1 00EC                                    _RFSW2 00ED  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0071  
                     setRF_Learn@command 0022                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _WPUB0 1068                                    _WPUB1 1069  
                                  _WPUB2 106A                                    _TMain 006F  
                          setRF_Learn@rf 0023                                    _MainT 0AC9  
                          __CFG_WRT$BOOT 0000                         __end_of_TMR0_ISR 037C  
           __size_of_CC2500_WriteCommand 0010                         __end_of_TMR0_Set 1F17  
                          ___awtoft@sign 002D                            ___ftpack@sign 0024  
            __size_of_CC2500_ClearRXFIFO 0004                            ??_Buzzer_Main 0020  
            __size_of_CC2500_ClearTXFIFO 0004                      CC2500_RxData@loop_f 0025  
                         __pbitbssCOMMON 0380                           __CFG_BOREN$OFF 0000  
                     Flash_Memory_Read@i 0021                         ?_CC2500_ReadByte 0071  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
         __size_of_setLED_Initialization 0010            __end_of_setLED_Initialization 1FBB  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                             ?_setRF_Learn 0022  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                     _setRF_DimmerLights 0815              __size_of_Flash_Memory_Write 002F  
                 ??_MainT_Initialization 0020                        ?_CC2500_SIDLEMode 0071  
             __size_of_RF_Initialization 0004                           ?_RfPointSelect 0071  
                         setSw_Status@sw 0022         __size_of_DelayOff_Initialization 0008  
              setDimmerLights_Main@clear 0061                   ??_Flash_Memory_Erasing 0020  
                        _getPercentValue 0870                       ??_CC2500_SIDLEMode 0024  
                        __initialization 0018                         ?_CC2500_PowerRST 0071  
                      ??_Sw_DimmerOnFunc 0026                        ??_setPercentValue 0059  
                           __end_of_main 1755                      ?_setRF_DimmerLights 0020  
                       ?_CC2500_WriteREG 0022                                ??_ADC_Set 0020  
                __end_of_setDimmerLights 0C25                     _setSw_Initialization 1E52  
                                 ??_main 0068                            ___fttol@sign1 0053  
                _getDimmerLights_Trigger 121A                             ?_setLog_Code 0071  
                _setControl_Lights_Table 0E2C                   ?_Buzzer_Initialization 0071  
                ??_DlyOff_Initialization 0022                               _Receive_GO 0381  
                             _Receive_OK 0382                                ??_IOC_ISR 0071  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 2000  
                                 ?_MainT 0071                   ?_setDimmerLights_AdjRF 0071  
                              ??_INT_ISR 0075                   ?_setDimmerLights_AdjGo 0022  
               __size_of_setRFSW_Control 0099                         ??_setRFSW_Status 0023  
                              ??_INT_Set 0020                  ??_Switch_Initialization 0025  
                      i1RfPointSelect@rf 0072                     ??_setRF_DimmerLights 0021  
                            _DlyOff_Main 0A57                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 0068  
                                 _ADRESH 009C                                   _ADRESL 009B  
                         setRF_Enable@rf 0026                         __end_of___awtoft 125D  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 0987  
                                 _IOCBF2 1CB2                  _setDimmerLights_Trigger 1F9B  
                                 i1l1604 1142                                   i1l1599 036B  
                                 i1l7010 016A                                   i1l7002 0149  
                                 i1l7104 034B                                   i1l7040 021A  
                                 i1l7008 0164                                   i1l7018 0196  
                                 i1l7026 01CA                                   i1l7060 026A  
                                 i1l7072 029F                                   i1l7080 02CA  
                                 i1l7064 027D                                   i1l7058 0264  
                                 i1l7066 0283                                   i1l7076 02B6  
                                 i1l7086 02E5                                   i1l7088 02EB  
                                 i1l7096 0317                                   i1l6938 1277  
                                 i1l6962 0099                                   i1l6980 00E3  
                                 i1l6982 00E9                                   i1l6994 011E  
                                 i1l6986 00FC                                   i1l6988 0102  
                                 i1l6998 0135                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 _PMCON2 0196                                   u612_25 01C0  
                                 u614_25 01FE                                   u631_25 0341  
                                 u632_25 035D                                   _OSCCON 0099  
                                 u595_25 007D                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 111B  
                     DelayTime_1us@count 0020                               _VarProduct 01C5  
         __size_of_CC2500_PowerOnInitial 0015            __end_of_CC2500_PowerOnInitial 10A3  
                                 _Dimmer 006A                                   _DlySw1 00D1  
                                 _DlySw2 00D6               __end_of_Mcu_Initialization 10D0  
                    __end_of_Buzzer_Main 1000                                   _Memory 007A  
                                 _Timer0 00EE       __end_of_setDimmerLights_TriggerAdj 1FDB  
             _setDimmerLights_TriggerAdj 1FCB            setDimmerLights_Switch@command 0022  
                                 ___wmul 11BD                                ??___ftadd 0044  
           __size_of_DelayOffPointSelect 0014                                ??___ftdiv 0034  
                  setDimmerLights@lights 0026                                ??___ftmul 0034  
                              ??___fttol 004F             ?_Flash_Memory_Initialization 0071  
                        i1_RfPointSelect 1E74              setDimmerLights_AdjRF@lights 0060  
                 ??_setDimmerLights_Main 0061                                   _r_data 00BF  
                                 _s_data 00C0                                   _setLED 08CB  
                       _DimmerLightsIntr 00B8                    ?_setSw_Initialization 0071  
                  setDimmerLights@status 0024                                   _setBuz 0C25  
       ??_setDimmerLights_Initialization 005F          ?_setDimmerLights_Initialization 0071  
                  ___ftmul@f3_as_product 0039             ??_getDimmerLights_StatusFlag 0022  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                    __end_of_SwPointSelect 108E  
                          ?_setRF_Enable 0025                          _RfSWPointSelect 10A3  
           __size_of_Flash_Memory_Modify 006C              __size_of_DimmerLights_Close 001A  
                __size_of_LedPointSelect 001D                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 1E23  
                      ?_Sw_DimmerAdjFunc 0071              __size_of_CC2500_InitPATable 001F  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 08CB  
       __end_of_CC2500_registers_address 102F                  __end_of__initialization 003E  
                        ??_RfPointSelect 0020              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0071                               ___ftadd@f1 003E  
                             ___ftadd@f2 0041                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0021                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0071                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0071                               ___ftmul@f1 002E  
                             ___ftmul@f2 0031                            __end_of_MainT 0B3C  
                             ___fttol@f1 004B                           __pcstackCOMMON 0071  
                     ??_Sw_DimmerOffFunc 0027                             __pidataBANK3 15A6  
                              ?_TMR0_ISR 0071                                ?_TMR0_Set 0071  
           __size_of_setDimmerLights_Adj 0059                       _LED_Initialization 1EE5  
              ??_getDimmerLights_Trigger 0022                ??_setControl_Lights_Table 0067  
                       ??_DelayTimejudge 0020              ?_getDimmerLights_StatusFlag 0071  
          ??_Flash_Memory_Initialization 005D                 __size_of_setRF_ReceiveGO 000C  
                       ?_setDimmerLights 0024                 __end_of_setDimmerReClock 114E  
                     __size_of_getRxData 0052                      ?_LED_Initialization 0071  
                      ?_CC2500_WriteByte 0071                                  ??_MainT 002A  
               __end_of_setDimmer_Detect 1F32                           ??_setRF_Enable 0026  
                         _DimmerLights11 006C                           _DimmerLights22 006D  
                   __size_of_setLED_Main 003D                ??_setDimmerLights_Trigger 0023  
                     ??_CC2500_WriteByte 0020             setDimmerLights_Switch@lights 0023  
                             __pbssBANK0 0068                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                              _Buzzer_Main 0F58  
                      ??_setRFSW_Control 002A                                  ?_IO_Set 0071  
                             ??_LED_Main 0025                  _DelayOff_Initialization 1E42  
                             __pnvCOMMON 007A                            ??_Switch_Main 002F  
                         DelayTime_1us@i 0022                           DelayTime_1us@j 0024  
                   ??_LED_Initialization 0025                             _DimmerLights 006B  
                      LedPointSelect@led 0021                  __end_ofi1_RfPointSelect 1E7E  
                     __size_of_setINT_GO 0009                   __size_of_DelayOff_Main 0008  
                   __size_of_setRF_Learn 000E                              setBuz@count 0029  
                             __pmaintext 1704                      _CC2500_WriteCommand 1F7B  
       __size_of_DimmerLightsPointSelect 0013                         ??_setDelayOff_GO 0025  
          ??_DimmerLights_Initialization 0062                                  ?___wmul 0020  
                             ??_TMR0_ISR 0071                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0071                       __size_of_setTxData 003D  
                ?_setDimmerLights_Switch 0022                                  ?_setLED 0022  
                 __size_of_DelayTime_1us 0026                                  _ADC_Set 1E34  
                                ?_setBuz 0026                                ?___awtoft 0028  
                              ?___ftpack 0020             __end_of_setRF_Initialization 1E42  
                          ?_setSw_Status 0021                       _setRFSW_AdjControl 14E1  
                __end_of_RfSWPointSelect 10B9                        Sw_DimmerOnFunc@sw 0026  
                                _IOC_ISR 125D                                  _IOC_Set 1EFD  
                   __size_of_setLog_Code 0048                                  _INT_ISR 1EC1  
              __size_of_getDimmer_Detect 000F                                  _INT_Set 1E1E  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 1563  
                      _Flash_Memory_Read 1102                   __size_of_CC2500_RxData 0064  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0071  
                            setTxData@rf 0024                                  _RF_Data 00A0  
                                _RF_Main 1E1A                       ?_Flash_Memory_Main 0071  
                     ?_Flash_Memory_Read 0071          __end_of_getDimmerLights_Trigger 123B  
        __end_of_setControl_Lights_Table 0EBF                              ?_TouchPower 0071  
                        _Sw_DimmerOnFunc 16BB                          _setPercentValue 162D  
                          setLog_Code@rf 002B                         ?_getPercentValue 0071  
                                _Dimmer1 00E7             __end_of_CC2500_FrequencyCabr 1ED9  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00DF  
                                _VarLED2 00E3                        __end_of_getRxData 17A7  
               _CC2500_registers_address 1000                           RF_RxDisable@rf 0024  
        __end_of_setDimmerLights_Trigger 1FAB                                  _Product 006E  
                   ??_setRFSW_AdjControl 0064           __end_of_setDimmerLights_Switch 1F9B  
                                ___ftadd 04CF                           ??_setSw_Enable 0021  
                                ___ftdiv 0679                          __size_of___wmul 001E  
                                ___ftmul 05C5                                  ___fttol 0DA5  
                    __end_of_Switch_Main 1E62                  ??_Buzzer_Initialization 0020  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005B                     setRFSW_AdjControl@sw 0066  
                        __size_of_setBuz 0077                           ??_setSw_Status 0022  
                                __ptext1 1E5A                                  __ptext2 037C  
                                __ptext3 1F40                                  __ptext4 16BB  
                                __ptext5 0B3C                                  __ptext6 12ED  
                                __ptext7 1FCB                                  __ptext8 1FBB  
                                __ptext9 1F17                  ??_setDimmerLights_AdjRF 005F  
                ??_setDimmerLights_AdjGo 0023                __size_of_CC2500_SIDLEMode 0004  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 15A6  
              __end_of_Flash_Memory_Read 111B                               _setRF_Main 0C9C  
                          _DelayOff_Main 1E4A                        _DimmerLights_Main 1EAA  
                      __end_of_setINT_GO 1E74           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 1E94  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 1E0E  
             __end_of_CC2500_ClearTXFIFO 1E12            DimmerLightsPointSelect@lights 0021  
                           ?_DlyOff_Main 0071                       ?_DimmerLights_Main 0071  
                         _LedPointSelect 1183                      _DelayOffPointSelect 1066  
                                clrloop0 1E2F           __size_of_Switch_Initialization 000D  
          __end_of_Switch_Initialization 1F24                     end_of_initialization 003E  
              ??_DelayOff_Initialization 0023                        _CC2500_InitSetREG 1314  
                          _DelayTime_1us 12C7                        __end_of_setTxData 14A4  
             __end_of_Flash_Memory_Write 13C7                                  init_ram 1E28  
                     ?_CC2500_InitSetREG 0071                      ??_DimmerLights_Main 0063  
                   Flash_Memory_Read@ret 0023                                  initloop 1E29  
                             _setSw_Main 037C                    CC2500_ReadByte@loop_b 0021  
                      _CC2500_ReadStatus 1168                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 1FAB                            _CC2500_Enable 0380  
                 getDimmer_Detect@dimmer 0023                         ?i1_RfPointSelect 0071  
                     ?_CC2500_ReadStatus 0071                         setRFSW_Status@sw 0023  
          __size_of_MainT_Initialization 0015                 __size_of_CC2500_ReadByte 001D  
                          _CC2500_RxData 0987                            _CC2500_TxData 15E9  
                    ??_CC2500_InitSetREG 0025                     __end_of_setRF_Enable 12C7  
            ?_setDimmerLights_TriggerAdj 0022            __size_of_Flash_Memory_Erasing 000C  
                   ?_DelayOffPointSelect 0071                      _Flash_Memory_Modify 09EB  
                           __pstringtext 1000                      _Flash_Memory_Unlock 1E62  
                    ??_CC2500_ReadStatus 0022                   setRF_Initialization@rf 0071  
       getDimmerLights_StatusFlag@Status 0024                  CC2500_InitSetREG@loop_c 0028  
                    __size_of_TouchPower 0005                 setLED_Initialization@led 0024  
                 setDimmer_Detect@dimmer 0023                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 1EB5                       _Mcu_Initialization 10B9  
               __size_of_CC2500_PowerRST 0030                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                          _setSw_Main$3642 002C  
                        _setSw_Main$3643 002D         getDimmerLights_StatusFlag@length 0023  
                       __CFG_FOSC$INTOSC 0000                   __end_of_LedPointSelect 11A0  
                __end_of_Sw_DimmerOnFunc 1704                  __end_of_setPercentValue 1673  
               __size_of_CC2500_WriteREG 0019                __end_of_CC2500_InitSetREG 133E  
                    ?_Mcu_Initialization 0071                     ?_Flash_Memory_Modify 0071  
            __size_of_setRF_DimmerLights 005B                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 17A7                     ?_Flash_Memory_Unlock 0071  
            getDimmerLights_StatusFlag@i 0025                __end_of_CC2500_ReadStatus 1183  
                          ?_RF_RxDisable 0071                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 1134                     _setRF_Initialization 1E3B  
                            _Switch_Main 1E5A                        __size_of_LED_Main 000C  
                         ?_CC2500_RxData 0071                           ?_CC2500_TxData 0071  
                _DimmerLightsPointSelect 1FED                              ___ftmul@exp 0038  
                  _CC2500_PowerOnInitial 108E                     ??_Mcu_Initialization 0021  
                  ??_DelayOffPointSelect 0020                     ?_setDimmerLights_Adj 005D  
              __size_of_Sw_DimmerAdjFunc 0027                     setRF_DimmerLights@on 0020  
                         __end_of___wmul 11DB                             setRF_Main@rf 0160  
                      __size_of_TMR0_ISR 033A                        __size_of_TMR0_Set 000D  
          __size_of_setDimmerLights_Main 0085                           __end_of_setLED 0926  
                         __end_of_setBuz 0C9C                        _DimmerPointSelect 1E9F  
                   _CC2500_FrequencyCabr 1ECD                __size_of_Sw_DimmerOffFunc 0073  
             __size_of_Flash_Memory_Main 0043               __size_of_Flash_Memory_Read 0019  
                            ?_setRF_Main 0071                          _setRFSW_Control 0EBF  
          getDimmerLights_Trigger@Status 0024                        ?_setDimmerReClock 0071  
                    start_initialization 0018                        _setRF_DimmerValue 07CA  
                        ?_LedPointSelect 0071                         _getDimmer_Detect 1F6C  
             __end_of_DimmerLights_Close 1168                       ?_DimmerPointSelect 0071  
                            __end_of_ISR 0016                        ?_setDimmer_Detect 0022  
                  ??_Flash_Memory_Modify 0024                       ??_setDimmerReClock 0071  
                     ?_setRF_DimmerValue 0071               __end_of_CC2500_InitPATable 11FA  
          getDimmerLights_Trigger@length 0023                    ??_Flash_Memory_Unlock 0020  
                     ??_setDimmer_Detect 0023                           ??_RF_RxDisable 0024  
                   __end_of_setSw_Enable 142C                          RfPointSelect@rf 0021  
                           ?_Buzzer_Main 0071                      ??_DimmerPointSelect 0020  
                               ??_IO_Set 0020                                _VarErrLED 00DB  
                            ?_setSw_Main 0071                      ??_setRF_DimmerValue 0061  
                 ?_setLED_Initialization 0071                     __end_of_setSw_Status 1F6C  
                     Sw_DimmerAdjFunc@sw 0024                    ?_setRF_Initialization 0071  
                              _VarMemory 01A0                  __size_of_setRFSW_Status 000F  
                  __end_of_RfPointSelect 1E9F                __size_of_CC2500_WriteByte 0019  
                              _VarTimer0 00CA                                _Rx_Length 00BB  
                setRF_DimmerValue@lights 0063                    ??_setDimmerLights_Adj 005E  
                               ??___wmul 0024                   __size_of_SwPointSelect 0014  
                              _Tx_Length 00BD                              __pdataBANK3 01A0  
                               ??_setLED 0023                                 ?_ADC_Set 0071  
                               ??_setBuz 0028                __end_of_DimmerPointSelect 1EAA  
                        ??_DelayOff_Main 002D                        ??_CC2500_ReadByte 0020  
                       _CC2500_SIDLEMode 1E12               __size_of_DimmerLights_Main 000B  
              __end_of_setRF_DimmerValue 07FF                    ?_CC2500_FrequencyCabr 0071  
                       setINT_GO@command 0020                            ??_setLED_Main 0022  
                      __size_of___awtoft 0022                        __size_of___ftpack 0061  
                               ?_IOC_ISR 0071                          _setRF_Main$3353 0161  
                            __pbssCOMMON 0076                                 ?_IOC_Set 0071  
                              ___latbits 0003                                 ?_INT_ISR 0071  
                    setRF_Enable@command 0025                         ?_Sw_DimmerOnFunc 0071  
                          __pcstackBANK0 0020                            __pcstackBANK1 00EF  
                          __pcstackBANK2 015F                                 ?_INT_Set 0071  
                       ?_setPercentValue 0071                          ??_DelayTime_1us 0022  
             __size_of_CC2500_InitSetREG 002A                 __size_of_setDimmerLights 0076  
                          DlyOff_Main@sw 002C                        ??_CC2500_PowerRST 0026  
                               ?_RF_Main 0071                             ??_TouchPower 0020  
                   __size_of_DlyOff_Main 0072               __size_of_CC2500_ReadStatus 001B  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 0130                            _DimmerLights2 013D  
                  CC2500_WriteREG@w_addr 0024                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020                    __size_of_setRF_Enable 0024  
                        ??_CC2500_RxData 0024                  __size_of_setRF_RxStatus 000E  
                        ??_CC2500_TxData 0024                                __pnvBANK0 006E  
                              __pnvBANK1 00EE              __size_of_LED_Initialization 000C  
                 ?_CC2500_PowerOnInitial 0071                      __size_of_setRF_Main 0084  
                  DelayOffPointSelect@sw 0021                 ?_getDimmerLights_Trigger 0071  
                             setBuz@time 0026                      setDelayOff_GO@value 0024  
               ?_setControl_Lights_Table 0071      __end_of_Flash_Memory_Initialization 07CA  
            _Flash_Memory_Initialization 0722                                __ptext100 1E0E  
                              __ptext101 1E0A                                __ptext110 1EC1  
                              __ptext102 1F7B                                __ptext111 1EB5  
                              __ptext103 10D0                                __ptext112 1E74  
                              __ptext104 0F58                                __ptext105 1E7E  
                              __ptext107 0042                                __ptext108 125D  
                              __ptext109 1134                                 ?___ftadd 003E  
                              _getRxData 1755                                 ?___ftdiv 002E  
                               ?___ftmul 002E                                 ?___fttol 004B  
                __end_of_setRFSW_Control 0F58                          _setRF_ReceiveGO 1EB5  
          __size_of_setSw_Initialization 0008           __size_of_Buzzer_Initialization 000B  
          __end_of_Buzzer_Initialization 1E89                               setTxData@i 0025  
                       getPercentValue@i 005C                         setPercentValue@i 005A  
                          ??_setLog_Code 002A                       __end_of_TouchPower 1E28  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0021  
                    __size_of_setSw_Main 0153             CC2500_ReadStatus@status_addr 0023  
         __size_of_setDimmerLights_AdjRF 0023           __size_of_setDimmerLights_AdjGo 0010  
          __end_of_setDimmerLights_AdjRF 12A3            __end_of_setDimmerLights_AdjGo 1FCB  
                 CC2500_WriteByte@loop_a 0021                           __size_of_MainT 0073  
                              _r_address 00BE             __end_of_CC2500_patable_vaule 1066  
                           _setRF_Enable 12A3                  __size_of_DelayTimejudge 002E  
                          _SwPointSelect 107A                       Sw_DimmerOffFunc@sw 0029  
                              _setINT_GO 1E6B                      __end_of_setLED_Main 14E1  
                 ??_setRF_Initialization 0020                        _CC2500_rfSettings 102F  
                         ___wmul@product 0024                                 _LED_Main 1EF1  
                        SwPointSelect@sw 0020                                clear_ram0 1E2E  
               CC2500_InitPATable@loop_d 0027                                _setTxData 1467  
    __end_of_DimmerLights_Initialization 1FED              _DimmerLights_Initialization 1FDB  
                     _CC2500_ClearRXFIFO 1E0A                       _CC2500_ClearTXFIFO 1E0E  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0024  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 1F4E  
               __size_of_getPercentValue 005B                 setRF_DimmerLights@status 0023  
                 setRF_ReceiveGO@command 0073              __size_of_setRFSW_AdjControl 0040  
                     _Flash_Memory_Write 1398                               ?_getRxData 0071  
                               _TMR0_ISR 0042                   CC2500_InitSetREG@temp1 0026  
                 CC2500_InitSetREG@temp2 0027                        setRF_ReceiveGO@rf 0074  
                               _TMR0_Set 1F0A                         _Sw_DimmerAdjFunc 12ED  
                    ?_CC2500_ClearRXFIFO 0071                 getDimmerLights_Trigger@i 0025  
                    ?_CC2500_ClearTXFIFO 0071        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 136A  
             __size_of_DimmerPointSelect 000B              __end_of_CC2500_WriteCommand 1F8B  
                 ??_CC2500_FrequencyCabr 0026                  DlyOff_Initialization@sw 0022  
                       __size_of_ADC_Set 0007                        ___wmul@multiplier 0020  
             __size_of_setRF_DimmerValue 0035                      ?_Flash_Memory_Write 0071  
                       _Sw_DimmerOffFunc 0B3C             __end_of_MainT_Initialization 0815  
                __size_of_setDelayOff_GO 003B                    __size_of_setSw_Enable 0035  
                               _DelayOff 0069                             setSw_Main@sw 002E  
                       __size_of_IOC_ISR 0023                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 1EE5                           ?_SwPointSelect 0071  
                       __size_of_INT_ISR 000C                           setLED_Main@led 0024  
                       __size_of_INT_Set 0005                      __end_of_setLog_Code 16BB  
                  _DlyOff_Initialization 1E89                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 105E  
                       __size_of_RF_Main 0004                    _Switch_Initialization 1F17  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                         _setRFSW_Status 1F4E                     __size_of_Buzzer_Main 00A8  
                             ?_setTxData 0071                             ?_Switch_Main 0071  
                       _CC2500_WriteByte 10D0                                 _VarTMain 0120  
           Flash_Memory_Initialization@i 005E                  __end_of_setRF_ReceiveGO 1EC1  
               __end_of_getDimmer_Detect 1F7B                        setRFSW_Control@sw 002C  
                              setLED@led 0023                                 _RxStatus 0383  
                               _TxStatus 0386                         __size_of___ftadd 00F6  
                       ?_setRFSW_Control 0071                         __size_of___ftdiv 00A9  
                           _setSw_Enable 13F7                         __size_of___ftmul 00B4  
                       __size_of___fttol 0087                 __size_ofi1_RfPointSelect 000A  
                               ___awtoft 123B                         ??_LedPointSelect 0020  
                               ___ftpack 0926                             _setSw_Status 1F5D  
                           ??_setRF_Main 015F                     CC2500_WriteREG@value 0022  
                            _setLED_Main 14A4                    setRFSW_Status@command 0022  
             __end_of_setRF_DimmerLights 0870                 ?_DelayOff_Initialization 0071  
                       setDelayOff_GO@sw 0026                                 __ptext10 1E52  
                               __ptext11 1E23                                 __ptext20 14E1  
                               __ptext12 1E1A                                 __ptext21 07CA  
                               __ptext13 0C9C                                 __ptext30 10B9  
                               __ptext22 1280                                 __ptext14 1755  
                               __ptext31 1F0A                                 __ptext23 15E9  
                               __ptext15 1673                                 __ptext40 133E  
                               __ptext32 111B                                 __ptext24 0987  
                               __ptext16 0E2C                                 __ptext41 1E6B  
                               __ptext33 1EFD                                 __ptext25 1F32  
                               __ptext17 0EBF                                 __ptext50 1398  
                               __ptext42 1EF1                                 __ptext34 1E1E  
                               __ptext26 1168                                 __ptext18 142C  
                               __ptext51 1E62                                 __ptext43 14A4  
                               __ptext35 1E34                                 __ptext27 11A0  
                               __ptext19 136A                                 __ptext60 121A  
                               __ptext52 1102                                 __ptext44 1EE5  
                               __ptext36 0800                                 __ptext28 1E16  
                               __ptext61 114E                                 __ptext53 1EAA  
                               __ptext45 1FAB                                 __ptext37 0AC9  
                               __ptext29 1E3B                                 __ptext70 05C5  
                               __ptext62 1F24                                 __ptext54 0D20  
                               __ptext46 1563                                 __ptext38 13F7  
                               __ptext71 0679                                 __ptext63 1F6C  
                               __ptext55 17A7                                 __ptext47 09EB  
                               __ptext39 12A3                                 __ptext80 107A  
                               __ptext72 04CF                                 __ptext64 1E9F  
                               __ptext56 162D                                 __ptext48 1ED9  
                               __ptext81 0815                                 __ptext73 123B  
                               __ptext65 11FA                                 __ptext57 0BAF  
                               __ptext49 0722                                 __ptext90 1E89  
                               __ptext82 1F4E                                 __ptext74 0926  
                               __ptext66 1FDB                                 __ptext58 08CB  
                               __ptext91 1066                                 __ptext83 10A3  
                               __ptext75 1E4A                                 __ptext67 1521  
                               __ptext59 1183                                 __ptext92 108E  
                               __ptext84 1F9B                                 __ptext76 0A57  
                               __ptext68 0870                                 __ptext93 1E12  
                               __ptext85 1F8B                                 __ptext77 1467  
                               __ptext69 0DA5                                 __ptext94 13C7  
                               __ptext86 1FED                                 __ptext78 1E94  
                               __ptext95 1314                                 __ptext87 0C25  
                               __ptext79 1F5D                                 __ptext96 11DB  
                               __ptext88 11BD                                 __ptext97 10E9  
                               __ptext89 1E42                                 __ptext98 1ECD  
                               __ptext99 12C7                  ??_setLED_Initialization 0024  
               __size_of_RfSWPointSelect 0016                   __end_of_setRFSW_Status 1F5D  
           __end_of_setDimmerLights_Main 0DA5                             ??_setSw_Main 002A  
                          setLED@command 0022                            __size_of_main 0051  
                            _setRF_Learn 1F40                 __end_of_CC2500_SIDLEMode 1E16  
                         _setRF_RxStatus 1F32               setDimmerLights_Main@lights 0062  
            __end_of_DelayOffPointSelect 107A               CC2500_WriteCommand@command 0023  
                     _DimmerLights_Close 114E                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 001A                          _CC2500_ReadByte 11A0  
                     _CC2500_InitPATable 11DB                __size_of_setDimmer_Detect 000E  
    __size_of_getDimmerLights_StatusFlag 0020            setDimmerLights_Trigger@lights 0023  
                     __end_of_setRF_Main 0D20              __size_of_Mcu_Initialization 0017  
                   _CC2500_patable_vaule 105E                              ??_getRxData 0068  
                    ?_DimmerLights_Close 0071         setDimmerLights_TriggerAdj@lights 0023  
                    ?_CC2500_InitPATable 0071                          _CC2500_PowerRST 13C7  
            __end_of_Flash_Memory_Modify 0A57                        ??_getPercentValue 0059  
                            _setLog_Code 1673                    setRF_RxStatus@command 0022  
            __end_of_Flash_Memory_Unlock 1E6B                          ??_SwPointSelect 0020  
                DimmerPointSelect@dimmer 0021                          _CC2500_WriteREG 10E9  
                     __end_of_setSw_Main 04CF                            _Transceive_GO 0384  
                          _Transceive_OK 0385                   ?_DlyOff_Initialization 0071  
                         _DelayTimejudge 136A                              pic14e$flags 007E  
                   ??_DimmerLights_Close 0026                              ??_setINT_GO 0020  
                               intlevel1 0000                     ??_CC2500_InitPATable 0025  
                 ?_Switch_Initialization 0071                   __end_of_setRF_RxStatus 1F40  
                        ?_setRFSW_Status 0022                  ??_CC2500_PowerOnInitial 0029  
 __end_of_setDimmerLights_Initialization 1563  __size_of_setDimmerLights_Initialization 0042  
         _setDimmerLights_Initialization 1521              __end_of_setDimmerLights_Adj 1800  
                            ??_setTxData 0022                         ?_setRF_ReceiveGO 0073  
                 CC2500_InitPATable@temp 0026                     _MainT_Initialization 0800  
                  __size_of_RF_RxDisable 002C                        _RF_Initialization 1E16  
                   _Flash_Memory_Erasing 1ED9                       ?_RF_Initialization 0071  
                             _SPI0Buffer 00BC          __end_of_DelayOff_Initialization 1E4A  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 1E52  
                    ??_RF_Initialization 0021                              getRxData@rf 00EF  
                         _setDelayOff_GO 142C         __size_of_getDimmerLights_Trigger 0021  
       __size_of_setControl_Lights_Table 0093                   __end_of_DelayTimejudge 1398  
                 __size_of_RfPointSelect 000B                        ??i1_RfPointSelect 0071  
   __size_of_Flash_Memory_Initialization 00A8                            ??_DlyOff_Main 002A  
                setDimmer_Detect@command 0022                    __end_of_DelayTime_1us 12ED  
               __end_of_Sw_DimmerAdjFunc 1314                  __end_of_CC2500_ReadByte 11BD  
           __end_of_setSw_Initialization 1E5A                          ?_setRF_RxStatus 0022  
                   getPercentValue@value 005B                             _RF_RxDisable 133E  
             __end_of_LED_Initialization 1EF1         __size_of_setDimmerLights_Trigger 0010  
               __size_of_Sw_DimmerOnFunc 0049                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 1E1A  
               __end_of_Sw_DimmerOffFunc 0BAF          __size_of_setDimmerLights_Switch 0010  
                      ??_RfSWPointSelect 0020                    ?_MainT_Initialization 0071  
                       setRF_RxStatus@rf 0023                    __end_of_CC2500_RxData 09EB  
                  __end_of_CC2500_TxData 162D                      setSw_Status@command 0021  
                __end_of_CC2500_PowerRST 13F7  
