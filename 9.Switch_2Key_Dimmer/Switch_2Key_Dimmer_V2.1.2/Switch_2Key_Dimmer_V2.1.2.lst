

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Sep 10 17:32:54 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,delta=2
   141                           	psect	text119,local,class=CODE,merge=1,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,delta=2
   145                           	psect	text123,local,class=CODE,merge=1,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	text125,local,class=CODE,merge=1,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	psect	text127,local,class=CODE,merge=1,delta=2
   150                           	psect	text128,local,class=CODE,merge=1,delta=2
   151                           	psect	text129,local,class=CODE,merge=1,delta=2
   152                           	psect	text130,local,class=CODE,merge=1,delta=2
   153                           	psect	text131,local,class=CODE,merge=1,delta=2
   154                           	psect	text132,local,class=CODE,merge=1,delta=2
   155                           	psect	text133,local,class=CODE,merge=1,delta=2
   156                           	psect	text134,local,class=CODE,merge=1,delta=2
   157                           	psect	text135,local,class=CODE,merge=1,delta=2
   158                           	psect	intentry,global,class=CODE,delta=2
   159                           	psect	text137,local,class=CODE,merge=1,delta=2
   160                           	psect	text138,local,class=CODE,merge=1,delta=2
   161                           	psect	text139,local,class=CODE,merge=1,delta=2
   162                           	psect	text140,local,class=CODE,merge=1,delta=2
   163                           	psect	text141,local,class=CODE,merge=1,delta=2
   164                           	psect	text142,local,class=CODE,merge=1,delta=2
   165                           	psect	text143,local,class=CODE,merge=1,delta=2
   166                           	dabs	1,0x7E,2
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  0116                     	;# 
   214  0117                     	;# 
   215  011D                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  018E                     	;# 
   219  0191                     	;# 
   220  0191                     	;# 
   221  0192                     	;# 
   222  0193                     	;# 
   223  0193                     	;# 
   224  0194                     	;# 
   225  0195                     	;# 
   226  0196                     	;# 
   227  0197                     	;# 
   228  0199                     	;# 
   229  019A                     	;# 
   230  019B                     	;# 
   231  019B                     	;# 
   232  019B                     	;# 
   233  019B                     	;# 
   234  019C                     	;# 
   235  019C                     	;# 
   236  019D                     	;# 
   237  019E                     	;# 
   238  019F                     	;# 
   239  020D                     	;# 
   240  0210                     	;# 
   241  0211                     	;# 
   242  0211                     	;# 
   243  0212                     	;# 
   244  0212                     	;# 
   245  0213                     	;# 
   246  0213                     	;# 
   247  0214                     	;# 
   248  0214                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0215                     	;# 
   252  0216                     	;# 
   253  0216                     	;# 
   254  0217                     	;# 
   255  0217                     	;# 
   256  0291                     	;# 
   257  0291                     	;# 
   258  0292                     	;# 
   259  0293                     	;# 
   260  0298                     	;# 
   261  0298                     	;# 
   262  0299                     	;# 
   263  029A                     	;# 
   264  0394                     	;# 
   265  0395                     	;# 
   266  0396                     	;# 
   267  0FE4                     	;# 
   268  0FE5                     	;# 
   269  0FE6                     	;# 
   270  0FE7                     	;# 
   271  0FE8                     	;# 
   272  0FE9                     	;# 
   273  0FEA                     	;# 
   274  0FEB                     	;# 
   275  0FED                     	;# 
   276  0FEE                     	;# 
   277  0FEF                     	;# 
   278  0000                     	;# 
   279  0001                     	;# 
   280  0002                     	;# 
   281  0003                     	;# 
   282  0004                     	;# 
   283  0005                     	;# 
   284  0006                     	;# 
   285  0007                     	;# 
   286  0008                     	;# 
   287  0009                     	;# 
   288  000A                     	;# 
   289  000B                     	;# 
   290  000C                     	;# 
   291  000D                     	;# 
   292  000E                     	;# 
   293  0010                     	;# 
   294  0011                     	;# 
   295  0012                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0016                     	;# 
   299  0017                     	;# 
   300  0018                     	;# 
   301  0019                     	;# 
   302  001A                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0090                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0095                     	;# 
   312  0096                     	;# 
   313  0097                     	;# 
   314  0099                     	;# 
   315  009A                     	;# 
   316  009B                     	;# 
   317  009B                     	;# 
   318  009C                     	;# 
   319  009D                     	;# 
   320  009E                     	;# 
   321  010C                     	;# 
   322  010D                     	;# 
   323  010E                     	;# 
   324  0116                     	;# 
   325  0117                     	;# 
   326  011D                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  018E                     	;# 
   330  0191                     	;# 
   331  0191                     	;# 
   332  0192                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0194                     	;# 
   336  0195                     	;# 
   337  0196                     	;# 
   338  0197                     	;# 
   339  0199                     	;# 
   340  019A                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019C                     	;# 
   346  019C                     	;# 
   347  019D                     	;# 
   348  019E                     	;# 
   349  019F                     	;# 
   350  020D                     	;# 
   351  0210                     	;# 
   352  0211                     	;# 
   353  0211                     	;# 
   354  0212                     	;# 
   355  0212                     	;# 
   356  0213                     	;# 
   357  0213                     	;# 
   358  0214                     	;# 
   359  0214                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0216                     	;# 
   364  0216                     	;# 
   365  0217                     	;# 
   366  0217                     	;# 
   367  0291                     	;# 
   368  0291                     	;# 
   369  0292                     	;# 
   370  0293                     	;# 
   371  0298                     	;# 
   372  0298                     	;# 
   373  0299                     	;# 
   374  029A                     	;# 
   375  0394                     	;# 
   376  0395                     	;# 
   377  0396                     	;# 
   378  0FE4                     	;# 
   379  0FE5                     	;# 
   380  0FE6                     	;# 
   381  0FE7                     	;# 
   382  0FE8                     	;# 
   383  0FE9                     	;# 
   384  0FEA                     	;# 
   385  0FEB                     	;# 
   386  0FED                     	;# 
   387  0FEE                     	;# 
   388  0FEF                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  010E                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  011D                     	;# 
   438  018C                     	;# 
   439  018D                     	;# 
   440  018E                     	;# 
   441  0191                     	;# 
   442  0191                     	;# 
   443  0192                     	;# 
   444  0193                     	;# 
   445  0193                     	;# 
   446  0194                     	;# 
   447  0195                     	;# 
   448  0196                     	;# 
   449  0197                     	;# 
   450  0199                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019C                     	;# 
   457  019C                     	;# 
   458  019D                     	;# 
   459  019E                     	;# 
   460  019F                     	;# 
   461  020D                     	;# 
   462  0210                     	;# 
   463  0211                     	;# 
   464  0211                     	;# 
   465  0212                     	;# 
   466  0212                     	;# 
   467  0213                     	;# 
   468  0213                     	;# 
   469  0214                     	;# 
   470  0214                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0216                     	;# 
   475  0216                     	;# 
   476  0217                     	;# 
   477  0217                     	;# 
   478  0291                     	;# 
   479  0291                     	;# 
   480  0292                     	;# 
   481  0293                     	;# 
   482  0298                     	;# 
   483  0298                     	;# 
   484  0299                     	;# 
   485  029A                     	;# 
   486  0394                     	;# 
   487  0395                     	;# 
   488  0396                     	;# 
   489  0FE4                     	;# 
   490  0FE5                     	;# 
   491  0FE6                     	;# 
   492  0FE7                     	;# 
   493  0FE8                     	;# 
   494  0FE9                     	;# 
   495  0FEA                     	;# 
   496  0FEB                     	;# 
   497  0FED                     	;# 
   498  0FEE                     	;# 
   499  0FEF                     	;# 
   500  0000                     	;# 
   501  0001                     	;# 
   502  0002                     	;# 
   503  0003                     	;# 
   504  0004                     	;# 
   505  0005                     	;# 
   506  0006                     	;# 
   507  0007                     	;# 
   508  0008                     	;# 
   509  0009                     	;# 
   510  000A                     	;# 
   511  000B                     	;# 
   512  000C                     	;# 
   513  000D                     	;# 
   514  000E                     	;# 
   515  0010                     	;# 
   516  0011                     	;# 
   517  0012                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  008C                     	;# 
   528  008D                     	;# 
   529  008E                     	;# 
   530  0090                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0099                     	;# 
   537  009A                     	;# 
   538  009B                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  0116                     	;# 
   547  0117                     	;# 
   548  011D                     	;# 
   549  018C                     	;# 
   550  018D                     	;# 
   551  018E                     	;# 
   552  0191                     	;# 
   553  0191                     	;# 
   554  0192                     	;# 
   555  0193                     	;# 
   556  0193                     	;# 
   557  0194                     	;# 
   558  0195                     	;# 
   559  0196                     	;# 
   560  0197                     	;# 
   561  0199                     	;# 
   562  019A                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019B                     	;# 
   567  019C                     	;# 
   568  019C                     	;# 
   569  019D                     	;# 
   570  019E                     	;# 
   571  019F                     	;# 
   572  020D                     	;# 
   573  0210                     	;# 
   574  0211                     	;# 
   575  0211                     	;# 
   576  0212                     	;# 
   577  0212                     	;# 
   578  0213                     	;# 
   579  0213                     	;# 
   580  0214                     	;# 
   581  0214                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0215                     	;# 
   585  0216                     	;# 
   586  0216                     	;# 
   587  0217                     	;# 
   588  0217                     	;# 
   589  0291                     	;# 
   590  0291                     	;# 
   591  0292                     	;# 
   592  0293                     	;# 
   593  0298                     	;# 
   594  0298                     	;# 
   595  0299                     	;# 
   596  029A                     	;# 
   597  0394                     	;# 
   598  0395                     	;# 
   599  0396                     	;# 
   600  0FE4                     	;# 
   601  0FE5                     	;# 
   602  0FE6                     	;# 
   603  0FE7                     	;# 
   604  0FE8                     	;# 
   605  0FE9                     	;# 
   606  0FEA                     	;# 
   607  0FEB                     	;# 
   608  0FED                     	;# 
   609  0FEE                     	;# 
   610  0FEF                     	;# 
   611  0000                     	;# 
   612  0001                     	;# 
   613  0002                     	;# 
   614  0003                     	;# 
   615  0004                     	;# 
   616  0005                     	;# 
   617  0006                     	;# 
   618  0007                     	;# 
   619  0008                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000D                     	;# 
   625  000E                     	;# 
   626  0010                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0015                     	;# 
   630  0016                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001C                     	;# 
   638  008C                     	;# 
   639  008D                     	;# 
   640  008E                     	;# 
   641  0090                     	;# 
   642  0091                     	;# 
   643  0092                     	;# 
   644  0095                     	;# 
   645  0096                     	;# 
   646  0097                     	;# 
   647  0099                     	;# 
   648  009A                     	;# 
   649  009B                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  010C                     	;# 
   655  010D                     	;# 
   656  010E                     	;# 
   657  0116                     	;# 
   658  0117                     	;# 
   659  011D                     	;# 
   660  018C                     	;# 
   661  018D                     	;# 
   662  018E                     	;# 
   663  0191                     	;# 
   664  0191                     	;# 
   665  0192                     	;# 
   666  0193                     	;# 
   667  0193                     	;# 
   668  0194                     	;# 
   669  0195                     	;# 
   670  0196                     	;# 
   671  0197                     	;# 
   672  0199                     	;# 
   673  019A                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019B                     	;# 
   677  019B                     	;# 
   678  019C                     	;# 
   679  019C                     	;# 
   680  019D                     	;# 
   681  019E                     	;# 
   682  019F                     	;# 
   683  020D                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0213                     	;# 
   691  0214                     	;# 
   692  0214                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0215                     	;# 
   696  0216                     	;# 
   697  0216                     	;# 
   698  0217                     	;# 
   699  0217                     	;# 
   700  0291                     	;# 
   701  0291                     	;# 
   702  0292                     	;# 
   703  0293                     	;# 
   704  0298                     	;# 
   705  0298                     	;# 
   706  0299                     	;# 
   707  029A                     	;# 
   708  0394                     	;# 
   709  0395                     	;# 
   710  0396                     	;# 
   711  0FE4                     	;# 
   712  0FE5                     	;# 
   713  0FE6                     	;# 
   714  0FE7                     	;# 
   715  0FE8                     	;# 
   716  0FE9                     	;# 
   717  0FEA                     	;# 
   718  0FEB                     	;# 
   719  0FED                     	;# 
   720  0FEE                     	;# 
   721  0FEF                     	;# 
   722  0000                     	;# 
   723  0001                     	;# 
   724  0002                     	;# 
   725  0003                     	;# 
   726  0004                     	;# 
   727  0005                     	;# 
   728  0006                     	;# 
   729  0007                     	;# 
   730  0008                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  0010                     	;# 
   738  0011                     	;# 
   739  0012                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  008C                     	;# 
   750  008D                     	;# 
   751  008E                     	;# 
   752  0090                     	;# 
   753  0091                     	;# 
   754  0092                     	;# 
   755  0095                     	;# 
   756  0096                     	;# 
   757  0097                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  0116                     	;# 
   769  0117                     	;# 
   770  011D                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  018E                     	;# 
   774  0191                     	;# 
   775  0191                     	;# 
   776  0192                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0194                     	;# 
   780  0195                     	;# 
   781  0196                     	;# 
   782  0197                     	;# 
   783  0199                     	;# 
   784  019A                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019C                     	;# 
   790  019C                     	;# 
   791  019D                     	;# 
   792  019E                     	;# 
   793  019F                     	;# 
   794  020D                     	;# 
   795  0210                     	;# 
   796  0211                     	;# 
   797  0211                     	;# 
   798  0212                     	;# 
   799  0212                     	;# 
   800  0213                     	;# 
   801  0213                     	;# 
   802  0214                     	;# 
   803  0214                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0216                     	;# 
   808  0216                     	;# 
   809  0217                     	;# 
   810  0217                     	;# 
   811  0291                     	;# 
   812  0291                     	;# 
   813  0292                     	;# 
   814  0293                     	;# 
   815  0298                     	;# 
   816  0298                     	;# 
   817  0299                     	;# 
   818  029A                     	;# 
   819  0394                     	;# 
   820  0395                     	;# 
   821  0396                     	;# 
   822  0FE4                     	;# 
   823  0FE5                     	;# 
   824  0FE6                     	;# 
   825  0FE7                     	;# 
   826  0FE8                     	;# 
   827  0FE9                     	;# 
   828  0FEA                     	;# 
   829  0FEB                     	;# 
   830  0FED                     	;# 
   831  0FEE                     	;# 
   832  0FEF                     	;# 
   833  0000                     	;# 
   834  0001                     	;# 
   835  0002                     	;# 
   836  0003                     	;# 
   837  0004                     	;# 
   838  0005                     	;# 
   839  0006                     	;# 
   840  0007                     	;# 
   841  0008                     	;# 
   842  0009                     	;# 
   843  000A                     	;# 
   844  000B                     	;# 
   845  000C                     	;# 
   846  000D                     	;# 
   847  000E                     	;# 
   848  0010                     	;# 
   849  0011                     	;# 
   850  0012                     	;# 
   851  0015                     	;# 
   852  0016                     	;# 
   853  0016                     	;# 
   854  0017                     	;# 
   855  0018                     	;# 
   856  0019                     	;# 
   857  001A                     	;# 
   858  001B                     	;# 
   859  001C                     	;# 
   860  008C                     	;# 
   861  008D                     	;# 
   862  008E                     	;# 
   863  0090                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0095                     	;# 
   867  0096                     	;# 
   868  0097                     	;# 
   869  0099                     	;# 
   870  009A                     	;# 
   871  009B                     	;# 
   872  009B                     	;# 
   873  009C                     	;# 
   874  009D                     	;# 
   875  009E                     	;# 
   876  010C                     	;# 
   877  010D                     	;# 
   878  010E                     	;# 
   879  0116                     	;# 
   880  0117                     	;# 
   881  011D                     	;# 
   882  018C                     	;# 
   883  018D                     	;# 
   884  018E                     	;# 
   885  0191                     	;# 
   886  0191                     	;# 
   887  0192                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0194                     	;# 
   891  0195                     	;# 
   892  0196                     	;# 
   893  0197                     	;# 
   894  0199                     	;# 
   895  019A                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019C                     	;# 
   902  019D                     	;# 
   903  019E                     	;# 
   904  019F                     	;# 
   905  020D                     	;# 
   906  0210                     	;# 
   907  0211                     	;# 
   908  0211                     	;# 
   909  0212                     	;# 
   910  0212                     	;# 
   911  0213                     	;# 
   912  0213                     	;# 
   913  0214                     	;# 
   914  0214                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0216                     	;# 
   919  0216                     	;# 
   920  0217                     	;# 
   921  0217                     	;# 
   922  0291                     	;# 
   923  0291                     	;# 
   924  0292                     	;# 
   925  0293                     	;# 
   926  0298                     	;# 
   927  0298                     	;# 
   928  0299                     	;# 
   929  029A                     	;# 
   930  0394                     	;# 
   931  0395                     	;# 
   932  0396                     	;# 
   933  0FE4                     	;# 
   934  0FE5                     	;# 
   935  0FE6                     	;# 
   936  0FE7                     	;# 
   937  0FE8                     	;# 
   938  0FE9                     	;# 
   939  0FEA                     	;# 
   940  0FEB                     	;# 
   941  0FED                     	;# 
   942  0FEE                     	;# 
   943  0FEF                     	;# 
   944  0000                     	;# 
   945  0001                     	;# 
   946  0002                     	;# 
   947  0003                     	;# 
   948  0004                     	;# 
   949  0005                     	;# 
   950  0006                     	;# 
   951  0007                     	;# 
   952  0008                     	;# 
   953  0009                     	;# 
   954  000A                     	;# 
   955  000B                     	;# 
   956  000C                     	;# 
   957  000D                     	;# 
   958  000E                     	;# 
   959  0010                     	;# 
   960  0011                     	;# 
   961  0012                     	;# 
   962  0015                     	;# 
   963  0016                     	;# 
   964  0016                     	;# 
   965  0017                     	;# 
   966  0018                     	;# 
   967  0019                     	;# 
   968  001A                     	;# 
   969  001B                     	;# 
   970  001C                     	;# 
   971  008C                     	;# 
   972  008D                     	;# 
   973  008E                     	;# 
   974  0090                     	;# 
   975  0091                     	;# 
   976  0092                     	;# 
   977  0095                     	;# 
   978  0096                     	;# 
   979  0097                     	;# 
   980  0099                     	;# 
   981  009A                     	;# 
   982  009B                     	;# 
   983  009B                     	;# 
   984  009C                     	;# 
   985  009D                     	;# 
   986  009E                     	;# 
   987  010C                     	;# 
   988  010D                     	;# 
   989  010E                     	;# 
   990  0116                     	;# 
   991  0117                     	;# 
   992  011D                     	;# 
   993  018C                     	;# 
   994  018D                     	;# 
   995  018E                     	;# 
   996  0191                     	;# 
   997  0191                     	;# 
   998  0192                     	;# 
   999  0193                     	;# 
  1000  0193                     	;# 
  1001  0194                     	;# 
  1002  0195                     	;# 
  1003  0196                     	;# 
  1004  0197                     	;# 
  1005  0199                     	;# 
  1006  019A                     	;# 
  1007  019B                     	;# 
  1008  019B                     	;# 
  1009  019B                     	;# 
  1010  019B                     	;# 
  1011  019C                     	;# 
  1012  019C                     	;# 
  1013  019D                     	;# 
  1014  019E                     	;# 
  1015  019F                     	;# 
  1016  020D                     	;# 
  1017  0210                     	;# 
  1018  0211                     	;# 
  1019  0211                     	;# 
  1020  0212                     	;# 
  1021  0212                     	;# 
  1022  0213                     	;# 
  1023  0213                     	;# 
  1024  0214                     	;# 
  1025  0214                     	;# 
  1026  0215                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0216                     	;# 
  1030  0216                     	;# 
  1031  0217                     	;# 
  1032  0217                     	;# 
  1033  0291                     	;# 
  1034  0291                     	;# 
  1035  0292                     	;# 
  1036  0293                     	;# 
  1037  0298                     	;# 
  1038  0298                     	;# 
  1039  0299                     	;# 
  1040  029A                     	;# 
  1041  0394                     	;# 
  1042  0395                     	;# 
  1043  0396                     	;# 
  1044  0FE4                     	;# 
  1045  0FE5                     	;# 
  1046  0FE6                     	;# 
  1047  0FE7                     	;# 
  1048  0FE8                     	;# 
  1049  0FE9                     	;# 
  1050  0FEA                     	;# 
  1051  0FEB                     	;# 
  1052  0FED                     	;# 
  1053  0FEE                     	;# 
  1054  0FEF                     	;# 
  1055  0000                     	;# 
  1056  0001                     	;# 
  1057  0002                     	;# 
  1058  0003                     	;# 
  1059  0004                     	;# 
  1060  0005                     	;# 
  1061  0006                     	;# 
  1062  0007                     	;# 
  1063  0008                     	;# 
  1064  0009                     	;# 
  1065  000A                     	;# 
  1066  000B                     	;# 
  1067  000C                     	;# 
  1068  000D                     	;# 
  1069  000E                     	;# 
  1070  0010                     	;# 
  1071  0011                     	;# 
  1072  0012                     	;# 
  1073  0015                     	;# 
  1074  0016                     	;# 
  1075  0016                     	;# 
  1076  0017                     	;# 
  1077  0018                     	;# 
  1078  0019                     	;# 
  1079  001A                     	;# 
  1080  001B                     	;# 
  1081  001C                     	;# 
  1082  008C                     	;# 
  1083  008D                     	;# 
  1084  008E                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0095                     	;# 
  1089  0096                     	;# 
  1090  0097                     	;# 
  1091  0099                     	;# 
  1092  009A                     	;# 
  1093  009B                     	;# 
  1094  009B                     	;# 
  1095  009C                     	;# 
  1096  009D                     	;# 
  1097  009E                     	;# 
  1098  010C                     	;# 
  1099  010D                     	;# 
  1100  010E                     	;# 
  1101  0116                     	;# 
  1102  0117                     	;# 
  1103  011D                     	;# 
  1104  018C                     	;# 
  1105  018D                     	;# 
  1106  018E                     	;# 
  1107  0191                     	;# 
  1108  0191                     	;# 
  1109  0192                     	;# 
  1110  0193                     	;# 
  1111  0193                     	;# 
  1112  0194                     	;# 
  1113  0195                     	;# 
  1114  0196                     	;# 
  1115  0197                     	;# 
  1116  0199                     	;# 
  1117  019A                     	;# 
  1118  019B                     	;# 
  1119  019B                     	;# 
  1120  019B                     	;# 
  1121  019B                     	;# 
  1122  019C                     	;# 
  1123  019C                     	;# 
  1124  019D                     	;# 
  1125  019E                     	;# 
  1126  019F                     	;# 
  1127  020D                     	;# 
  1128  0210                     	;# 
  1129  0211                     	;# 
  1130  0211                     	;# 
  1131  0212                     	;# 
  1132  0212                     	;# 
  1133  0213                     	;# 
  1134  0213                     	;# 
  1135  0214                     	;# 
  1136  0214                     	;# 
  1137  0215                     	;# 
  1138  0215                     	;# 
  1139  0215                     	;# 
  1140  0216                     	;# 
  1141  0216                     	;# 
  1142  0217                     	;# 
  1143  0217                     	;# 
  1144  0291                     	;# 
  1145  0291                     	;# 
  1146  0292                     	;# 
  1147  0293                     	;# 
  1148  0298                     	;# 
  1149  0298                     	;# 
  1150  0299                     	;# 
  1151  029A                     	;# 
  1152  0394                     	;# 
  1153  0395                     	;# 
  1154  0396                     	;# 
  1155  0FE4                     	;# 
  1156  0FE5                     	;# 
  1157  0FE6                     	;# 
  1158  0FE7                     	;# 
  1159  0FE8                     	;# 
  1160  0FE9                     	;# 
  1161  0FEA                     	;# 
  1162  0FEB                     	;# 
  1163  0FED                     	;# 
  1164  0FEE                     	;# 
  1165  0FEF                     	;# 
  1166  0000                     	;# 
  1167  0001                     	;# 
  1168  0002                     	;# 
  1169  0003                     	;# 
  1170  0004                     	;# 
  1171  0005                     	;# 
  1172  0006                     	;# 
  1173  0007                     	;# 
  1174  0008                     	;# 
  1175  0009                     	;# 
  1176  000A                     	;# 
  1177  000B                     	;# 
  1178  000C                     	;# 
  1179  000D                     	;# 
  1180  000E                     	;# 
  1181  0010                     	;# 
  1182  0011                     	;# 
  1183  0012                     	;# 
  1184  0015                     	;# 
  1185  0016                     	;# 
  1186  0016                     	;# 
  1187  0017                     	;# 
  1188  0018                     	;# 
  1189  0019                     	;# 
  1190  001A                     	;# 
  1191  001B                     	;# 
  1192  001C                     	;# 
  1193  008C                     	;# 
  1194  008D                     	;# 
  1195  008E                     	;# 
  1196  0090                     	;# 
  1197  0091                     	;# 
  1198  0092                     	;# 
  1199  0095                     	;# 
  1200  0096                     	;# 
  1201  0097                     	;# 
  1202  0099                     	;# 
  1203  009A                     	;# 
  1204  009B                     	;# 
  1205  009B                     	;# 
  1206  009C                     	;# 
  1207  009D                     	;# 
  1208  009E                     	;# 
  1209  010C                     	;# 
  1210  010D                     	;# 
  1211  010E                     	;# 
  1212  0116                     	;# 
  1213  0117                     	;# 
  1214  011D                     	;# 
  1215  018C                     	;# 
  1216  018D                     	;# 
  1217  018E                     	;# 
  1218  0191                     	;# 
  1219  0191                     	;# 
  1220  0192                     	;# 
  1221  0193                     	;# 
  1222  0193                     	;# 
  1223  0194                     	;# 
  1224  0195                     	;# 
  1225  0196                     	;# 
  1226  0197                     	;# 
  1227  0199                     	;# 
  1228  019A                     	;# 
  1229  019B                     	;# 
  1230  019B                     	;# 
  1231  019B                     	;# 
  1232  019B                     	;# 
  1233  019C                     	;# 
  1234  019C                     	;# 
  1235  019D                     	;# 
  1236  019E                     	;# 
  1237  019F                     	;# 
  1238  020D                     	;# 
  1239  0210                     	;# 
  1240  0211                     	;# 
  1241  0211                     	;# 
  1242  0212                     	;# 
  1243  0212                     	;# 
  1244  0213                     	;# 
  1245  0213                     	;# 
  1246  0214                     	;# 
  1247  0214                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0216                     	;# 
  1252  0216                     	;# 
  1253  0217                     	;# 
  1254  0217                     	;# 
  1255  0291                     	;# 
  1256  0291                     	;# 
  1257  0292                     	;# 
  1258  0293                     	;# 
  1259  0298                     	;# 
  1260  0298                     	;# 
  1261  0299                     	;# 
  1262  029A                     	;# 
  1263  0394                     	;# 
  1264  0395                     	;# 
  1265  0396                     	;# 
  1266  0FE4                     	;# 
  1267  0FE5                     	;# 
  1268  0FE6                     	;# 
  1269  0FE7                     	;# 
  1270  0FE8                     	;# 
  1271  0FE9                     	;# 
  1272  0FEA                     	;# 
  1273  0FEB                     	;# 
  1274  0FED                     	;# 
  1275  0FEE                     	;# 
  1276  0FEF                     	;# 
  1277  0000                     	;# 
  1278  0001                     	;# 
  1279  0002                     	;# 
  1280  0003                     	;# 
  1281  0004                     	;# 
  1282  0005                     	;# 
  1283  0006                     	;# 
  1284  0007                     	;# 
  1285  0008                     	;# 
  1286  0009                     	;# 
  1287  000A                     	;# 
  1288  000B                     	;# 
  1289  000C                     	;# 
  1290  000D                     	;# 
  1291  000E                     	;# 
  1292  0010                     	;# 
  1293  0011                     	;# 
  1294  0012                     	;# 
  1295  0015                     	;# 
  1296  0016                     	;# 
  1297  0016                     	;# 
  1298  0017                     	;# 
  1299  0018                     	;# 
  1300  0019                     	;# 
  1301  001A                     	;# 
  1302  001B                     	;# 
  1303  001C                     	;# 
  1304  008C                     	;# 
  1305  008D                     	;# 
  1306  008E                     	;# 
  1307  0090                     	;# 
  1308  0091                     	;# 
  1309  0092                     	;# 
  1310  0095                     	;# 
  1311  0096                     	;# 
  1312  0097                     	;# 
  1313  0099                     	;# 
  1314  009A                     	;# 
  1315  009B                     	;# 
  1316  009B                     	;# 
  1317  009C                     	;# 
  1318  009D                     	;# 
  1319  009E                     	;# 
  1320  010C                     	;# 
  1321  010D                     	;# 
  1322  010E                     	;# 
  1323  0116                     	;# 
  1324  0117                     	;# 
  1325  011D                     	;# 
  1326  018C                     	;# 
  1327  018D                     	;# 
  1328  018E                     	;# 
  1329  0191                     	;# 
  1330  0191                     	;# 
  1331  0192                     	;# 
  1332  0193                     	;# 
  1333  0193                     	;# 
  1334  0194                     	;# 
  1335  0195                     	;# 
  1336  0196                     	;# 
  1337  0197                     	;# 
  1338  0199                     	;# 
  1339  019A                     	;# 
  1340  019B                     	;# 
  1341  019B                     	;# 
  1342  019B                     	;# 
  1343  019B                     	;# 
  1344  019C                     	;# 
  1345  019C                     	;# 
  1346  019D                     	;# 
  1347  019E                     	;# 
  1348  019F                     	;# 
  1349  020D                     	;# 
  1350  0210                     	;# 
  1351  0211                     	;# 
  1352  0211                     	;# 
  1353  0212                     	;# 
  1354  0212                     	;# 
  1355  0213                     	;# 
  1356  0213                     	;# 
  1357  0214                     	;# 
  1358  0214                     	;# 
  1359  0215                     	;# 
  1360  0215                     	;# 
  1361  0215                     	;# 
  1362  0216                     	;# 
  1363  0216                     	;# 
  1364  0217                     	;# 
  1365  0217                     	;# 
  1366  0291                     	;# 
  1367  0291                     	;# 
  1368  0292                     	;# 
  1369  0293                     	;# 
  1370  0298                     	;# 
  1371  0298                     	;# 
  1372  0299                     	;# 
  1373  029A                     	;# 
  1374  0394                     	;# 
  1375  0395                     	;# 
  1376  0396                     	;# 
  1377  0FE4                     	;# 
  1378  0FE5                     	;# 
  1379  0FE6                     	;# 
  1380  0FE7                     	;# 
  1381  0FE8                     	;# 
  1382  0FE9                     	;# 
  1383  0FEA                     	;# 
  1384  0FEB                     	;# 
  1385  0FED                     	;# 
  1386  0FEE                     	;# 
  1387  0FEF                     	;# 
  1388  0000                     	;# 
  1389  0001                     	;# 
  1390  0002                     	;# 
  1391  0003                     	;# 
  1392  0004                     	;# 
  1393  0005                     	;# 
  1394  0006                     	;# 
  1395  0007                     	;# 
  1396  0008                     	;# 
  1397  0009                     	;# 
  1398  000A                     	;# 
  1399  000B                     	;# 
  1400  000C                     	;# 
  1401  000D                     	;# 
  1402  000E                     	;# 
  1403  0010                     	;# 
  1404  0011                     	;# 
  1405  0012                     	;# 
  1406  0015                     	;# 
  1407  0016                     	;# 
  1408  0016                     	;# 
  1409  0017                     	;# 
  1410  0018                     	;# 
  1411  0019                     	;# 
  1412  001A                     	;# 
  1413  001B                     	;# 
  1414  001C                     	;# 
  1415  008C                     	;# 
  1416  008D                     	;# 
  1417  008E                     	;# 
  1418  0090                     	;# 
  1419  0091                     	;# 
  1420  0092                     	;# 
  1421  0095                     	;# 
  1422  0096                     	;# 
  1423  0097                     	;# 
  1424  0099                     	;# 
  1425  009A                     	;# 
  1426  009B                     	;# 
  1427  009B                     	;# 
  1428  009C                     	;# 
  1429  009D                     	;# 
  1430  009E                     	;# 
  1431  010C                     	;# 
  1432  010D                     	;# 
  1433  010E                     	;# 
  1434  0116                     	;# 
  1435  0117                     	;# 
  1436  011D                     	;# 
  1437  018C                     	;# 
  1438  018D                     	;# 
  1439  018E                     	;# 
  1440  0191                     	;# 
  1441  0191                     	;# 
  1442  0192                     	;# 
  1443  0193                     	;# 
  1444  0193                     	;# 
  1445  0194                     	;# 
  1446  0195                     	;# 
  1447  0196                     	;# 
  1448  0197                     	;# 
  1449  0199                     	;# 
  1450  019A                     	;# 
  1451  019B                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019C                     	;# 
  1456  019C                     	;# 
  1457  019D                     	;# 
  1458  019E                     	;# 
  1459  019F                     	;# 
  1460  020D                     	;# 
  1461  0210                     	;# 
  1462  0211                     	;# 
  1463  0211                     	;# 
  1464  0212                     	;# 
  1465  0212                     	;# 
  1466  0213                     	;# 
  1467  0213                     	;# 
  1468  0214                     	;# 
  1469  0214                     	;# 
  1470  0215                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0216                     	;# 
  1474  0216                     	;# 
  1475  0217                     	;# 
  1476  0217                     	;# 
  1477  0291                     	;# 
  1478  0291                     	;# 
  1479  0292                     	;# 
  1480  0293                     	;# 
  1481  0298                     	;# 
  1482  0298                     	;# 
  1483  0299                     	;# 
  1484  029A                     	;# 
  1485  0394                     	;# 
  1486  0395                     	;# 
  1487  0396                     	;# 
  1488  0FE4                     	;# 
  1489  0FE5                     	;# 
  1490  0FE6                     	;# 
  1491  0FE7                     	;# 
  1492  0FE8                     	;# 
  1493  0FE9                     	;# 
  1494  0FEA                     	;# 
  1495  0FEB                     	;# 
  1496  0FED                     	;# 
  1497  0FEE                     	;# 
  1498  0FEF                     	;# 
  1499  0000                     	;# 
  1500  0001                     	;# 
  1501  0002                     	;# 
  1502  0003                     	;# 
  1503  0004                     	;# 
  1504  0005                     	;# 
  1505  0006                     	;# 
  1506  0007                     	;# 
  1507  0008                     	;# 
  1508  0009                     	;# 
  1509  000A                     	;# 
  1510  000B                     	;# 
  1511  000C                     	;# 
  1512  000D                     	;# 
  1513  000E                     	;# 
  1514  0010                     	;# 
  1515  0011                     	;# 
  1516  0012                     	;# 
  1517  0015                     	;# 
  1518  0016                     	;# 
  1519  0016                     	;# 
  1520  0017                     	;# 
  1521  0018                     	;# 
  1522  0019                     	;# 
  1523  001A                     	;# 
  1524  001B                     	;# 
  1525  001C                     	;# 
  1526  008C                     	;# 
  1527  008D                     	;# 
  1528  008E                     	;# 
  1529  0090                     	;# 
  1530  0091                     	;# 
  1531  0092                     	;# 
  1532  0095                     	;# 
  1533  0096                     	;# 
  1534  0097                     	;# 
  1535  0099                     	;# 
  1536  009A                     	;# 
  1537  009B                     	;# 
  1538  009B                     	;# 
  1539  009C                     	;# 
  1540  009D                     	;# 
  1541  009E                     	;# 
  1542  010C                     	;# 
  1543  010D                     	;# 
  1544  010E                     	;# 
  1545  0116                     	;# 
  1546  0117                     	;# 
  1547  011D                     	;# 
  1548  018C                     	;# 
  1549  018D                     	;# 
  1550  018E                     	;# 
  1551  0191                     	;# 
  1552  0191                     	;# 
  1553  0192                     	;# 
  1554  0193                     	;# 
  1555  0193                     	;# 
  1556  0194                     	;# 
  1557  0195                     	;# 
  1558  0196                     	;# 
  1559  0197                     	;# 
  1560  0199                     	;# 
  1561  019A                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019B                     	;# 
  1565  019B                     	;# 
  1566  019C                     	;# 
  1567  019C                     	;# 
  1568  019D                     	;# 
  1569  019E                     	;# 
  1570  019F                     	;# 
  1571  020D                     	;# 
  1572  0210                     	;# 
  1573  0211                     	;# 
  1574  0211                     	;# 
  1575  0212                     	;# 
  1576  0212                     	;# 
  1577  0213                     	;# 
  1578  0213                     	;# 
  1579  0214                     	;# 
  1580  0214                     	;# 
  1581  0215                     	;# 
  1582  0215                     	;# 
  1583  0215                     	;# 
  1584  0216                     	;# 
  1585  0216                     	;# 
  1586  0217                     	;# 
  1587  0217                     	;# 
  1588  0291                     	;# 
  1589  0291                     	;# 
  1590  0292                     	;# 
  1591  0293                     	;# 
  1592  0298                     	;# 
  1593  0298                     	;# 
  1594  0299                     	;# 
  1595  029A                     	;# 
  1596  0394                     	;# 
  1597  0395                     	;# 
  1598  0396                     	;# 
  1599  0FE4                     	;# 
  1600  0FE5                     	;# 
  1601  0FE6                     	;# 
  1602  0FE7                     	;# 
  1603  0FE8                     	;# 
  1604  0FE9                     	;# 
  1605  0FEA                     	;# 
  1606  0FEB                     	;# 
  1607  0FED                     	;# 
  1608  0FEE                     	;# 
  1609  0FEF                     	;# 
  1610  0000                     	;# 
  1611  0001                     	;# 
  1612  0002                     	;# 
  1613  0003                     	;# 
  1614  0004                     	;# 
  1615  0005                     	;# 
  1616  0006                     	;# 
  1617  0007                     	;# 
  1618  0008                     	;# 
  1619  0009                     	;# 
  1620  000A                     	;# 
  1621  000B                     	;# 
  1622  000C                     	;# 
  1623  000D                     	;# 
  1624  000E                     	;# 
  1625  0010                     	;# 
  1626  0011                     	;# 
  1627  0012                     	;# 
  1628  0015                     	;# 
  1629  0016                     	;# 
  1630  0016                     	;# 
  1631  0017                     	;# 
  1632  0018                     	;# 
  1633  0019                     	;# 
  1634  001A                     	;# 
  1635  001B                     	;# 
  1636  001C                     	;# 
  1637  008C                     	;# 
  1638  008D                     	;# 
  1639  008E                     	;# 
  1640  0090                     	;# 
  1641  0091                     	;# 
  1642  0092                     	;# 
  1643  0095                     	;# 
  1644  0096                     	;# 
  1645  0097                     	;# 
  1646  0099                     	;# 
  1647  009A                     	;# 
  1648  009B                     	;# 
  1649  009B                     	;# 
  1650  009C                     	;# 
  1651  009D                     	;# 
  1652  009E                     	;# 
  1653  010C                     	;# 
  1654  010D                     	;# 
  1655  010E                     	;# 
  1656  0116                     	;# 
  1657  0117                     	;# 
  1658  011D                     	;# 
  1659  018C                     	;# 
  1660  018D                     	;# 
  1661  018E                     	;# 
  1662  0191                     	;# 
  1663  0191                     	;# 
  1664  0192                     	;# 
  1665  0193                     	;# 
  1666  0193                     	;# 
  1667  0194                     	;# 
  1668  0195                     	;# 
  1669  0196                     	;# 
  1670  0197                     	;# 
  1671  0199                     	;# 
  1672  019A                     	;# 
  1673  019B                     	;# 
  1674  019B                     	;# 
  1675  019B                     	;# 
  1676  019B                     	;# 
  1677  019C                     	;# 
  1678  019C                     	;# 
  1679  019D                     	;# 
  1680  019E                     	;# 
  1681  019F                     	;# 
  1682  020D                     	;# 
  1683  0210                     	;# 
  1684  0211                     	;# 
  1685  0211                     	;# 
  1686  0212                     	;# 
  1687  0212                     	;# 
  1688  0213                     	;# 
  1689  0213                     	;# 
  1690  0214                     	;# 
  1691  0214                     	;# 
  1692  0215                     	;# 
  1693  0215                     	;# 
  1694  0215                     	;# 
  1695  0216                     	;# 
  1696  0216                     	;# 
  1697  0217                     	;# 
  1698  0217                     	;# 
  1699  0291                     	;# 
  1700  0291                     	;# 
  1701  0292                     	;# 
  1702  0293                     	;# 
  1703  0298                     	;# 
  1704  0298                     	;# 
  1705  0299                     	;# 
  1706  029A                     	;# 
  1707  0394                     	;# 
  1708  0395                     	;# 
  1709  0396                     	;# 
  1710  0FE4                     	;# 
  1711  0FE5                     	;# 
  1712  0FE6                     	;# 
  1713  0FE7                     	;# 
  1714  0FE8                     	;# 
  1715  0FE9                     	;# 
  1716  0FEA                     	;# 
  1717  0FEB                     	;# 
  1718  0FED                     	;# 
  1719  0FEE                     	;# 
  1720  0FEF                     	;# 
  1721  0000                     	;# 
  1722  0001                     	;# 
  1723  0002                     	;# 
  1724  0003                     	;# 
  1725  0004                     	;# 
  1726  0005                     	;# 
  1727  0006                     	;# 
  1728  0007                     	;# 
  1729  0008                     	;# 
  1730  0009                     	;# 
  1731  000A                     	;# 
  1732  000B                     	;# 
  1733  000C                     	;# 
  1734  000D                     	;# 
  1735  000E                     	;# 
  1736  0010                     	;# 
  1737  0011                     	;# 
  1738  0012                     	;# 
  1739  0015                     	;# 
  1740  0016                     	;# 
  1741  0016                     	;# 
  1742  0017                     	;# 
  1743  0018                     	;# 
  1744  0019                     	;# 
  1745  001A                     	;# 
  1746  001B                     	;# 
  1747  001C                     	;# 
  1748  008C                     	;# 
  1749  008D                     	;# 
  1750  008E                     	;# 
  1751  0090                     	;# 
  1752  0091                     	;# 
  1753  0092                     	;# 
  1754  0095                     	;# 
  1755  0096                     	;# 
  1756  0097                     	;# 
  1757  0099                     	;# 
  1758  009A                     	;# 
  1759  009B                     	;# 
  1760  009B                     	;# 
  1761  009C                     	;# 
  1762  009D                     	;# 
  1763  009E                     	;# 
  1764  010C                     	;# 
  1765  010D                     	;# 
  1766  010E                     	;# 
  1767  0116                     	;# 
  1768  0117                     	;# 
  1769  011D                     	;# 
  1770  018C                     	;# 
  1771  018D                     	;# 
  1772  018E                     	;# 
  1773  0191                     	;# 
  1774  0191                     	;# 
  1775  0192                     	;# 
  1776  0193                     	;# 
  1777  0193                     	;# 
  1778  0194                     	;# 
  1779  0195                     	;# 
  1780  0196                     	;# 
  1781  0197                     	;# 
  1782  0199                     	;# 
  1783  019A                     	;# 
  1784  019B                     	;# 
  1785  019B                     	;# 
  1786  019B                     	;# 
  1787  019B                     	;# 
  1788  019C                     	;# 
  1789  019C                     	;# 
  1790  019D                     	;# 
  1791  019E                     	;# 
  1792  019F                     	;# 
  1793  020D                     	;# 
  1794  0210                     	;# 
  1795  0211                     	;# 
  1796  0211                     	;# 
  1797  0212                     	;# 
  1798  0212                     	;# 
  1799  0213                     	;# 
  1800  0213                     	;# 
  1801  0214                     	;# 
  1802  0214                     	;# 
  1803  0215                     	;# 
  1804  0215                     	;# 
  1805  0215                     	;# 
  1806  0216                     	;# 
  1807  0216                     	;# 
  1808  0217                     	;# 
  1809  0217                     	;# 
  1810  0291                     	;# 
  1811  0291                     	;# 
  1812  0292                     	;# 
  1813  0293                     	;# 
  1814  0298                     	;# 
  1815  0298                     	;# 
  1816  0299                     	;# 
  1817  029A                     	;# 
  1818  0394                     	;# 
  1819  0395                     	;# 
  1820  0396                     	;# 
  1821  0FE4                     	;# 
  1822  0FE5                     	;# 
  1823  0FE6                     	;# 
  1824  0FE7                     	;# 
  1825  0FE8                     	;# 
  1826  0FE9                     	;# 
  1827  0FEA                     	;# 
  1828  0FEB                     	;# 
  1829  0FED                     	;# 
  1830  0FEE                     	;# 
  1831  0FEF                     	;# 
  1832  0000                     	;# 
  1833  0001                     	;# 
  1834  0002                     	;# 
  1835  0003                     	;# 
  1836  0004                     	;# 
  1837  0005                     	;# 
  1838  0006                     	;# 
  1839  0007                     	;# 
  1840  0008                     	;# 
  1841  0009                     	;# 
  1842  000A                     	;# 
  1843  000B                     	;# 
  1844  000C                     	;# 
  1845  000D                     	;# 
  1846  000E                     	;# 
  1847  0010                     	;# 
  1848  0011                     	;# 
  1849  0012                     	;# 
  1850  0015                     	;# 
  1851  0016                     	;# 
  1852  0016                     	;# 
  1853  0017                     	;# 
  1854  0018                     	;# 
  1855  0019                     	;# 
  1856  001A                     	;# 
  1857  001B                     	;# 
  1858  001C                     	;# 
  1859  008C                     	;# 
  1860  008D                     	;# 
  1861  008E                     	;# 
  1862  0090                     	;# 
  1863  0091                     	;# 
  1864  0092                     	;# 
  1865  0095                     	;# 
  1866  0096                     	;# 
  1867  0097                     	;# 
  1868  0099                     	;# 
  1869  009A                     	;# 
  1870  009B                     	;# 
  1871  009B                     	;# 
  1872  009C                     	;# 
  1873  009D                     	;# 
  1874  009E                     	;# 
  1875  010C                     	;# 
  1876  010D                     	;# 
  1877  010E                     	;# 
  1878  0116                     	;# 
  1879  0117                     	;# 
  1880  011D                     	;# 
  1881  018C                     	;# 
  1882  018D                     	;# 
  1883  018E                     	;# 
  1884  0191                     	;# 
  1885  0191                     	;# 
  1886  0192                     	;# 
  1887  0193                     	;# 
  1888  0193                     	;# 
  1889  0194                     	;# 
  1890  0195                     	;# 
  1891  0196                     	;# 
  1892  0197                     	;# 
  1893  0199                     	;# 
  1894  019A                     	;# 
  1895  019B                     	;# 
  1896  019B                     	;# 
  1897  019B                     	;# 
  1898  019B                     	;# 
  1899  019C                     	;# 
  1900  019C                     	;# 
  1901  019D                     	;# 
  1902  019E                     	;# 
  1903  019F                     	;# 
  1904  020D                     	;# 
  1905  0210                     	;# 
  1906  0211                     	;# 
  1907  0211                     	;# 
  1908  0212                     	;# 
  1909  0212                     	;# 
  1910  0213                     	;# 
  1911  0213                     	;# 
  1912  0214                     	;# 
  1913  0214                     	;# 
  1914  0215                     	;# 
  1915  0215                     	;# 
  1916  0215                     	;# 
  1917  0216                     	;# 
  1918  0216                     	;# 
  1919  0217                     	;# 
  1920  0217                     	;# 
  1921  0291                     	;# 
  1922  0291                     	;# 
  1923  0292                     	;# 
  1924  0293                     	;# 
  1925  0298                     	;# 
  1926  0298                     	;# 
  1927  0299                     	;# 
  1928  029A                     	;# 
  1929  0394                     	;# 
  1930  0395                     	;# 
  1931  0396                     	;# 
  1932  0FE4                     	;# 
  1933  0FE5                     	;# 
  1934  0FE6                     	;# 
  1935  0FE7                     	;# 
  1936  0FE8                     	;# 
  1937  0FE9                     	;# 
  1938  0FEA                     	;# 
  1939  0FEB                     	;# 
  1940  0FED                     	;# 
  1941  0FEE                     	;# 
  1942  0FEF                     	;# 
  1943                           
  1944                           	psect	idataBANK3
  1945  2755                     __pidataBANK3:	
  1946                           
  1947                           ;initializer for _VarProduct
  1948  2755  3463               	retlw	99
  1949  2756  3402               	retlw	2
  1950  2757  3400               	retlw	0
  1951  2758  3400               	retlw	0
  1952  2759  3400               	retlw	0
  1953  275A  3400               	retlw	0
  1954  275B  3400               	retlw	0
  1955  275C  3400               	retlw	0
  1956  275D  3400               	retlw	0
  1957  275E  3400               	retlw	0
  1958  275F  3400               	retlw	0
  1959  2760  3400               	retlw	0
  1960  2761  34FF               	retlw	255
  1961  2762  34FF               	retlw	255
  1962  2763  34FF               	retlw	255
  1963  2764  3400               	retlw	0
  1964  2765  3400               	retlw	0
  1965  2766  3400               	retlw	0
  1966  2767  3400               	retlw	0
  1967  2768  3400               	retlw	0
  1968  2769  3402               	retlw	2
  1969  276A  3400               	retlw	0
  1970  276B  3400               	retlw	0
  1971  276C  3400               	retlw	0
  1972  276D  3400               	retlw	0
  1973  276E  3400               	retlw	0
  1974  276F  3400               	retlw	0
  1975  2770  3400               	retlw	0
  1976  2771  3400               	retlw	0
  1977  2772  3400               	retlw	0
  1978  2773  3400               	retlw	0
  1979  2774  3400               	retlw	0
  1980                           
  1981                           	psect	stringtext
  1982  1800                     __pstringtext:	
  1983  1800                     _CC2500_registers_address:	
  1984  1800  3403               	retlw	3
  1985  1801  3416               	retlw	22
  1986  1802  3417               	retlw	23
  1987  1803  341E               	retlw	30
  1988  1804  341F               	retlw	31
  1989  1805  3420               	retlw	32
  1990  1806  342A               	retlw	42
  1991  1807  342B               	retlw	43
  1992  1808  340B               	retlw	11
  1993  1809  340C               	retlw	12
  1994  180A  340D               	retlw	13
  1995  180B  340E               	retlw	14
  1996  180C  340F               	retlw	15
  1997  180D  3410               	retlw	16
  1998  180E  3411               	retlw	17
  1999  180F  3412               	retlw	18
  2000  1810  3413               	retlw	19
  2001  1811  3414               	retlw	20
  2002  1812  340A               	retlw	10
  2003  1813  3415               	retlw	21
  2004  1814  3421               	retlw	33
  2005  1815  3422               	retlw	34
  2006  1816  3418               	retlw	24
  2007  1817  3419               	retlw	25
  2008  1818  341A               	retlw	26
  2009  1819  341B               	retlw	27
  2010  181A  341C               	retlw	28
  2011  181B  341D               	retlw	29
  2012  181C  3423               	retlw	35
  2013  181D  3424               	retlw	36
  2014  181E  3425               	retlw	37
  2015  181F  3426               	retlw	38
  2016  1820  3429               	retlw	41
  2017  1821  342C               	retlw	44
  2018  1822  342D               	retlw	45
  2019  1823  342E               	retlw	46
  2020  1824  3400               	retlw	0
  2021  1825  3401               	retlw	1
  2022  1826  3402               	retlw	2
  2023  1827  3407               	retlw	7
  2024  1828  3408               	retlw	8
  2025  1829  3409               	retlw	9
  2026  182A  3406               	retlw	6
  2027  182B  3404               	retlw	4
  2028  182C  3405               	retlw	5
  2029  182D  3427               	retlw	39
  2030  182E  3428               	retlw	40
  2031  182F                     __end_of_CC2500_registers_address:	
  2032  182F                     _CC2500_rfSettings:	
  2033  182F  3407               	retlw	7
  2034  1830  3407               	retlw	7
  2035  1831  3430               	retlw	48
  2036  1832  3487               	retlw	135
  2037  1833  346B               	retlw	107
  2038  1834  34F8               	retlw	248
  2039  1835  347F               	retlw	127
  2040  1836  343F               	retlw	63
  2041  1837  3409               	retlw	9
  2042  1838  3400               	retlw	0
  2043  1839  345C               	retlw	92
  2044  183A  34A7               	retlw	167
  2045  183B  3462               	retlw	98
  2046  183C  3486               	retlw	134
  2047  183D  3483               	retlw	131
  2048  183E  3403               	retlw	3
  2049  183F  3422               	retlw	34
  2050  1840  34F8               	retlw	248
  2051  1841  3400               	retlw	0
  2052  1842  3444               	retlw	68
  2053  1843  34B6               	retlw	182
  2054  1844  3410               	retlw	16
  2055  1845  3418               	retlw	24
  2056  1846  341D               	retlw	29
  2057  1847  341C               	retlw	28
  2058  1848  34C7               	retlw	199
  2059  1849  3400               	retlw	0
  2060  184A  34B2               	retlw	178
  2061  184B  34EA               	retlw	234
  2062  184C  340A               	retlw	10
  2063  184D  3400               	retlw	0
  2064  184E  3411               	retlw	17
  2065  184F  3459               	retlw	89
  2066  1850  3488               	retlw	136
  2067  1851  3431               	retlw	49
  2068  1852  340B               	retlw	11
  2069  1853  342F               	retlw	47
  2070  1854  342E               	retlw	46
  2071  1855  3406               	retlw	6
  2072  1856  3404               	retlw	4
  2073  1857  3405               	retlw	5
  2074  1858  3400               	retlw	0
  2075  1859  3430               	retlw	48
  2076  185A  34D3               	retlw	211
  2077  185B  3491               	retlw	145
  2078  185C  3441               	retlw	65
  2079  185D  3400               	retlw	0
  2080  185E                     __end_of_CC2500_rfSettings:	
  2081  185E                     _CC2500_patable_vaule:	
  2082  185E  34FE               	retlw	254
  2083  185F  34FE               	retlw	254
  2084  1860  34FE               	retlw	254
  2085  1861  34FE               	retlw	254
  2086  1862  34FE               	retlw	254
  2087  1863  34FE               	retlw	254
  2088  1864  34FE               	retlw	254
  2089  1865  34FE               	retlw	254
  2090  1866                     __end_of_CC2500_patable_vaule:	
  2091                           
  2092                           	psect	nvBANK0
  2093  006F                     __pnvBANK0:	
  2094  006F                     _Product:	
  2095  006F                     	ds	1
  2096                           
  2097                           	psect	nvBANK1
  2098  00E8                     __pnvBANK1:	
  2099  00E8                     _Memory:	
  2100  00E8                     	ds	1
  2101  00E9                     _TMain:	
  2102  00E9                     	ds	1
  2103  00EA                     _Timer0:	
  2104  00EA                     	ds	1
  2105  000C                     _PORTA	set	12
  2106  000D                     _PORTB	set	13
  2107  000E                     _PORTC	set	14
  2108  0015                     _TMR0	set	21
  2109  005F                     _GIE	set	95
  2110  005C                     _INTE	set	92
  2111  0059                     _INTF	set	89
  2112  005B                     _IOCIE	set	91
  2113  0058                     _IOCIF	set	88
  2114  005E                     _PEIE	set	94
  2115  0060                     _RA0	set	96
  2116  0063                     _RA3	set	99
  2117  0064                     _RA4	set	100
  2118  0066                     _RA6	set	102
  2119  0067                     _RA7	set	103
  2120  0068                     _RB0	set	104
  2121  0069                     _RB1	set	105
  2122  006A                     _RB2	set	106
  2123  006B                     _RB3	set	107
  2124  006C                     _RB4	set	108
  2125  006D                     _RB5	set	109
  2126  0070                     _RC0	set	112
  2127  0071                     _RC1	set	113
  2128  0072                     _RC2	set	114
  2129  0074                     _RC4	set	116
  2130  0075                     _RC5	set	117
  2131  0077                     _RC7	set	119
  2132  005D                     _TMR0IE	set	93
  2133  005A                     _TMR0IF	set	90
  2134  009D                     _ADCON0	set	157
  2135  009E                     _ADCON1	set	158
  2136  009C                     _ADRESH	set	156
  2137  009B                     _ADRESL	set	155
  2138  0095                     _OPTION_REG	set	149
  2139  0099                     _OSCCON	set	153
  2140  008C                     _TRISA	set	140
  2141  008D                     _TRISB	set	141
  2142  008E                     _TRISC	set	142
  2143  04E9                     _GO_nDONE	set	1257
  2144  0117                     _FVRCON	set	279
  2145  010C                     _LATA	set	268
  2146  010D                     _LATB	set	269
  2147  010E                     _LATC	set	270
  2148  018C                     _ANSELA	set	396
  2149  018D                     _ANSELB	set	397
  2150  018E                     _ANSELC	set	398
  2151  0192                     _PMADRH	set	402
  2152  0191                     _PMADRL	set	401
  2153  0196                     _PMCON2	set	406
  2154  0194                     _PMDATH	set	404
  2155  0193                     _PMDATL	set	403
  2156  0CAE                     _CFGS	set	3246
  2157  0CAC                     _FREE	set	3244
  2158  0CAD                     _LWLO	set	3245
  2159  0CA8                     _RD	set	3240
  2160  0CA9                     _WR	set	3241
  2161  0CAA                     _WREN	set	3242
  2162  1068                     _WPUB0	set	4200
  2163  1069                     _WPUB1	set	4201
  2164  106A                     _WPUB2	set	4202
  2165  0396                     _IOCBF	set	918
  2166  0395                     _IOCBN	set	917
  2167  0394                     _IOCBP	set	916
  2168  1CB2                     _IOCBF2	set	7346
  2169                           
  2170                           ; #config settings
  2171  0000                     
  2172                           	psect	cinit
  2173  0018                     start_initialization:	
  2174  0018                     __initialization:	
  2175                           
  2176                           ; Clear objects allocated to BITCOMMON
  2177  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2178                           
  2179                           ; Clear objects allocated to COMMON
  2180  0019  01F8               	clrf	__pbssCOMMON& (0+127)
  2181  001A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2182  001B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2183  001C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2184  001D  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2185  001E  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  2186                           
  2187                           ; Clear objects allocated to BANK0
  2188  001F  01EC               	clrf	__pbssBANK0& (0+127)
  2189  0020  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2190  0021  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2191                           
  2192                           ; Clear objects allocated to BANK1
  2193  0022  30A0               	movlw	low __pbssBANK1
  2194  0023  0084               	movwf	4
  2195  0024  3000               	movlw	high __pbssBANK1
  2196  0025  0085               	movwf	5
  2197  0026  3048               	movlw	72
  2198  0027  31A3  234E  3180   	fcall	clear_ram0
  2199                           
  2200                           ; Clear objects allocated to BANK2
  2201  002A  3020               	movlw	low __pbssBANK2
  2202  002B  0084               	movwf	4
  2203  002C  3001               	movlw	high __pbssBANK2
  2204  002D  0085               	movwf	5
  2205  002E  304E               	movlw	78
  2206  002F  31A3  234E  3180   	fcall	clear_ram0
  2207                           
  2208                           ; Clear objects allocated to BANK3
  2209  0032  30C0               	movlw	low __pbssBANK3
  2210  0033  0084               	movwf	4
  2211  0034  3001               	movlw	high __pbssBANK3
  2212  0035  0085               	movwf	5
  2213  0036  3010               	movlw	16
  2214  0037  31A3  234E  3180   	fcall	clear_ram0
  2215                           
  2216                           ; Clear objects allocated to BANK4
  2217  003A  3020               	movlw	low __pbssBANK4
  2218  003B  0084               	movwf	4
  2219  003C  3002               	movlw	high __pbssBANK4
  2220  003D  0085               	movwf	5
  2221  003E  3025               	movlw	37
  2222  003F  31A3  234E  3180   	fcall	clear_ram0
  2223                           
  2224                           ; Clear objects allocated to BANK5
  2225  0042  30A0               	movlw	low __pbssBANK5
  2226  0043  0084               	movwf	4
  2227  0044  3002               	movlw	high __pbssBANK5
  2228  0045  0085               	movwf	5
  2229  0046  3047               	movlw	71
  2230  0047  31A3  234E  3180   	fcall	clear_ram0
  2231                           
  2232                           ; Initialize objects allocated to BANK3
  2233  004A  3055               	movlw	low __pidataBANK3
  2234  004B  0084               	movwf	4
  2235  004C  30A7               	movlw	(high __pidataBANK3)| (0+128)
  2236  004D  0085               	movwf	5
  2237  004E  30A0               	movlw	low __pdataBANK3
  2238  004F  0086               	movwf	6
  2239  0050  3001               	movlw	high __pdataBANK3
  2240  0051  0087               	movwf	7
  2241  0052  3020               	movlw	32
  2242  0053  31A3  2348         	fcall	init_ram
  2243  0055                     end_of_initialization:	
  2244                           ;End of C runtime variable initialization code
  2245                           
  2246  0055                     __end_of__initialization:	
  2247  0055  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2248  0056  0020               	movlb	0
  2249  0057  3187  2F91         	ljmp	_main	;jump to C main() function
  2250                           
  2251                           	psect	bitbssCOMMON
  2252  0380                     __pbitbssCOMMON:	
  2253  0380                     _CC2500_Enable:	
  2254  0380                     	ds	1
  2255  0381                     _Receive_GO:	
  2256  0381                     	ds	1
  2257  0382                     _Receive_OK:	
  2258  0382                     	ds	1
  2259  0383                     _RxStatus:	
  2260  0383                     	ds	1
  2261  0384                     _Transceive_GO:	
  2262  0384                     	ds	1
  2263  0385                     _Transceive_OK:	
  2264  0385                     	ds	1
  2265  0386                     _TxStatus:	
  2266  0386                     	ds	1
  2267                           
  2268                           	psect	bssCOMMON
  2269  0078                     __pbssCOMMON:	
  2270  0078                     _Buz:	
  2271  0078                     	ds	1
  2272  0079                     _DimmerLights11:	
  2273  0079                     	ds	1
  2274  007A                     _DimmerLights22:	
  2275  007A                     	ds	1
  2276  007B                     _PF:	
  2277  007B                     	ds	1
  2278  007C                     _RF:	
  2279  007C                     	ds	1
  2280  007D                     _Temp:	
  2281  007D                     	ds	1
  2282                           
  2283                           	psect	bssBANK0
  2284  006C                     __pbssBANK0:	
  2285  006C                     _DimmerLights:	
  2286  006C                     	ds	1
  2287  006D                     _Sw:	
  2288  006D                     	ds	1
  2289  006E                     _Load:	
  2290  006E                     	ds	1
  2291                           
  2292                           	psect	bssBANK1
  2293  00A0                     __pbssBANK1:	
  2294  00A0                     _RF_Data:	
  2295  00A0                     	ds	21
  2296  00B5                     _RF_Count:	
  2297  00B5                     	ds	2
  2298  00B7                     _CRC:	
  2299  00B7                     	ds	1
  2300  00B8                     _DelayOff:	
  2301  00B8                     	ds	1
  2302  00B9                     _Dimmer:	
  2303  00B9                     	ds	1
  2304  00BA                     _DimmerLightsIntr:	
  2305  00BA                     	ds	1
  2306  00BB                     _LED:	
  2307  00BB                     	ds	1
  2308  00BC                     _RFSW:	
  2309  00BC                     	ds	1
  2310  00BD                     _RSSI:	
  2311  00BD                     	ds	1
  2312  00BE                     _Rx_Length:	
  2313  00BE                     	ds	1
  2314  00BF                     _SPI0Buffer:	
  2315  00BF                     	ds	1
  2316  00C0                     _Tx_Length:	
  2317  00C0                     	ds	1
  2318  00C1                     _r_address:	
  2319  00C1                     	ds	1
  2320  00C2                     _r_data:	
  2321  00C2                     	ds	1
  2322  00C3                     _s_data:	
  2323  00C3                     	ds	1
  2324  00C4                     _VarTimer0:	
  2325  00C4                     	ds	7
  2326  00CB                     _DlySw1:	
  2327  00CB                     	ds	5
  2328  00D0                     _DlySw2:	
  2329  00D0                     	ds	5
  2330  00D5                     _VarErrLED:	
  2331  00D5                     	ds	4
  2332  00D9                     _VarLED1:	
  2333  00D9                     	ds	4
  2334  00DD                     _VarLED2:	
  2335  00DD                     	ds	4
  2336  00E1                     _Dimmer1:	
  2337  00E1                     	ds	3
  2338  00E4                     _RF1:	
  2339  00E4                     	ds	2
  2340  00E6                     _RFSW1:	
  2341  00E6                     	ds	1
  2342  00E7                     _RFSW2:	
  2343  00E7                     	ds	1
  2344                           
  2345                           	psect	bssBANK2
  2346  0120                     __pbssBANK2:	
  2347  0120                     _Temp1:	
  2348  0120                     	ds	14
  2349  012E                     _DimmerLights1:	
  2350  012E                     	ds	13
  2351  013B                     _DimmerLights2:	
  2352  013B                     	ds	13
  2353  0148                     _Buz1:	
  2354  0148                     	ds	12
  2355  0154                     _Sw1:	
  2356  0154                     	ds	9
  2357  015D                     _Sw2:	
  2358  015D                     	ds	9
  2359  0166                     _PF1:	
  2360  0166                     	ds	8
  2361                           
  2362                           	psect	bssBANK3
  2363  01C0                     __pbssBANK3:	
  2364  01C0                     _VarTMain:	
  2365  01C0                     	ds	16
  2366                           
  2367                           	psect	dataBANK3
  2368  01A0                     __pdataBANK3:	
  2369  01A0                     _VarProduct:	
  2370  01A0                     	ds	32
  2371                           
  2372                           	psect	bssBANK4
  2373  0220                     __pbssBANK4:	
  2374  0220                     _VarMemory:	
  2375  0220                     	ds	37
  2376                           
  2377                           	psect	bssBANK5
  2378  02A0                     __pbssBANK5:	
  2379  02A0                     _Load1:	
  2380  02A0                     	ds	71
  2381                           
  2382                           	psect	clrtext
  2383  234E                     clear_ram0:	
  2384                           ;	Called with FSR0 containing the base address, and
  2385                           ;	WREG with the size to clear
  2386                           
  2387  234E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2388  234F                     clrloop0:	
  2389  234F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2390  2350  3101               	addfsr 0,1
  2391  2351  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2392  2352  2B4F               	goto	clrloop0	;have we reached the end yet?
  2393  2353  3400               	retlw	0	;all done for this memory range, return
  2394                           
  2395                           	psect	inittext
  2396  2348                     init_ram:	
  2397  2348  00FE               	movwf	126
  2398  2349                     initloop:	
  2399  2349  0012               	moviw fsr0++
  2400  234A  001E               	movwi fsr1++
  2401  234B  0BFE               	decfsz	126,f
  2402  234C  2B49               	goto	initloop
  2403  234D  3400               	retlw	0
  2404                           
  2405                           	psect	cstackCOMMON
  2406  0071                     __pcstackCOMMON:	
  2407  0071                     ?_CC2500_WriteByte:	
  2408  0071                     ?_CC2500_WriteCommand:	
  2409                           ; 0 bytes @ 0x0
  2410                           
  2411  0071                     ?_CC2500_ReadStatus:	
  2412                           ; 0 bytes @ 0x0
  2413                           
  2414  0071                     ?_CC2500_ReadByte:	
  2415                           ; 0 bytes @ 0x0
  2416                           
  2417  0071                     ?_CC2500_PowerRST:	
  2418                           ; 0 bytes @ 0x0
  2419                           
  2420  0071                     ?_CC2500_InitSetREG:	
  2421                           ; 0 bytes @ 0x0
  2422                           
  2423  0071                     ?_CC2500_InitPATable:	
  2424                           ; 0 bytes @ 0x0
  2425                           
  2426  0071                     ?_CC2500_ClearTXFIFO:	
  2427                           ; 0 bytes @ 0x0
  2428                           
  2429  0071                     ?_CC2500_ClearRXFIFO:	
  2430                           ; 0 bytes @ 0x0
  2431                           
  2432  0071                     ?_CC2500_FrequencyCabr:	
  2433                           ; 0 bytes @ 0x0
  2434                           
  2435  0071                     ?_CC2500_SIDLEMode:	
  2436                           ; 0 bytes @ 0x0
  2437                           
  2438  0071                     ?_DlyOff_Initialization:	
  2439                           ; 0 bytes @ 0x0
  2440                           
  2441  0071                     ?_DlyOff_Main:	
  2442                           ; 0 bytes @ 0x0
  2443                           
  2444  0071                     ?_setTxData:	
  2445                           ; 0 bytes @ 0x0
  2446                           
  2447  0071                     ?_setDimmerLights_Initialization:	
  2448                           ; 0 bytes @ 0x0
  2449                           
  2450  0071                     ?_Dimmer_Initialization:	
  2451                           ; 0 bytes @ 0x0
  2452                           
  2453  0071                     ?_setLoad_GO:	
  2454                           ; 0 bytes @ 0x0
  2455                           
  2456  0071                     ?_setDimmerLights_Main:	
  2457                           ; 0 bytes @ 0x0
  2458                           
  2459  0071                     ?_setDimmerLights_ERROR:	
  2460                           ; 0 bytes @ 0x0
  2461                           
  2462  0071                     ?_setLoad_Count:	
  2463                           ; 0 bytes @ 0x0
  2464                           
  2465  0071                     ?_setLED_Initialization:	
  2466                           ; 0 bytes @ 0x0
  2467                           
  2468  0071                     ?_setLED_Main:	
  2469                           ; 0 bytes @ 0x0
  2470                           
  2471  0071                     ?_MainT_Initialization:	
  2472                           ; 0 bytes @ 0x0
  2473                           
  2474  0071                     ?_Mcu_Initialization:	
  2475                           ; 0 bytes @ 0x0
  2476                           
  2477  0071                     ?_Flash_Memory_Initialization:	
  2478                           ; 0 bytes @ 0x0
  2479                           
  2480  0071                     ?_Temp_Initialization:	
  2481                           ; 0 bytes @ 0x0
  2482                           
  2483  0071                     ?_Load_Initialization:	
  2484                           ; 0 bytes @ 0x0
  2485                           
  2486  0071                     ?_PowerFault_Initialization:	
  2487                           ; 0 bytes @ 0x0
  2488                           
  2489  0071                     ?_Switch_Initialization:	
  2490                           ; 0 bytes @ 0x0
  2491                           
  2492  0071                     ?_RF_Initialization:	
  2493                           ; 0 bytes @ 0x0
  2494                           
  2495  0071                     ?_getLoad_AD:	
  2496                           ; 0 bytes @ 0x0
  2497                           
  2498  0071                     ?_getTemp_AD:	
  2499                           ; 0 bytes @ 0x0
  2500                           
  2501  0071                     ?_getPowerFault_AD:	
  2502                           ; 0 bytes @ 0x0
  2503                           
  2504  0071                     ?_MainT:	
  2505                           ; 0 bytes @ 0x0
  2506                           
  2507  0071                     ?_Flash_Memory_Main:	
  2508                           ; 0 bytes @ 0x0
  2509                           
  2510  0071                     ?_Temp_Main:	
  2511                           ; 0 bytes @ 0x0
  2512                           
  2513  0071                     ?_Load_Main:	
  2514                           ; 0 bytes @ 0x0
  2515                           
  2516  0071                     ?_PowerFault_Main:	
  2517                           ; 0 bytes @ 0x0
  2518                           
  2519  0071                     ?_Switch_Main:	
  2520                           ; 0 bytes @ 0x0
  2521                           
  2522  0071                     ?_RF_Main:	
  2523                           ; 0 bytes @ 0x0
  2524                           
  2525  0071                     ?_setTemp_Enable:	
  2526                           ; 0 bytes @ 0x0
  2527                           
  2528  0071                     ?_setLoad_Enable:	
  2529                           ; 0 bytes @ 0x0
  2530                           
  2531  0071                     ?_setSw_Enable:	
  2532                           ; 0 bytes @ 0x0
  2533                           
  2534  0071                     ?_IO_Set:	
  2535                           ; 0 bytes @ 0x0
  2536                           
  2537  0071                     ?_TMR0_Set:	
  2538                           ; 0 bytes @ 0x0
  2539                           
  2540  0071                     ?_ADC_Set:	
  2541                           ; 0 bytes @ 0x0
  2542                           
  2543  0071                     ?_INT_Set:	
  2544                           ; 0 bytes @ 0x0
  2545                           
  2546  0071                     ?_IOC_Set:	
  2547                           ; 0 bytes @ 0x0
  2548                           
  2549  0071                     ?_IOC_ISR:	
  2550                           ; 0 bytes @ 0x0
  2551                           
  2552  0071                     ??_IOC_ISR:	
  2553                           ; 0 bytes @ 0x0
  2554                           
  2555  0071                     ?_TMR0_ISR:	
  2556                           ; 0 bytes @ 0x0
  2557                           
  2558  0071                     ?_INT_ISR:	
  2559                           ; 0 bytes @ 0x0
  2560                           
  2561  0071                     ?_Flash_Memory_Write:	
  2562                           ; 0 bytes @ 0x0
  2563                           
  2564  0071                     ?_Flash_Memory_Modify:	
  2565                           ; 0 bytes @ 0x0
  2566                           
  2567  0071                     ?_setLoad_AH_AL_Restore:	
  2568                           ; 0 bytes @ 0x0
  2569                           
  2570  0071                     ?_setLoad_Exceptions:	
  2571                           ; 0 bytes @ 0x0
  2572                           
  2573  0071                     ?_setTemp_Initialization:	
  2574                           ; 0 bytes @ 0x0
  2575                           
  2576  0071                     ?_setTemp_Main:	
  2577                           ; 0 bytes @ 0x0
  2578                           
  2579  0071                     ?_setOverTemp_Exceptions:	
  2580                           ; 0 bytes @ 0x0
  2581                           
  2582  0071                     ?_setPowerFault_Initialization:	
  2583                           ; 0 bytes @ 0x0
  2584                           
  2585  0071                     ?_setPowerFault_Main:	
  2586                           ; 0 bytes @ 0x0
  2587                           
  2588  0071                     ?_setPowerFault_Exceptions:	
  2589                           ; 0 bytes @ 0x0
  2590                           
  2591  0071                     ?_setRF_Initialization:	
  2592                           ; 0 bytes @ 0x0
  2593                           
  2594  0071                     ?_setRF_Main:	
  2595                           ; 0 bytes @ 0x0
  2596                           
  2597  0071                     ?_RF_RxDisable:	
  2598                           ; 0 bytes @ 0x0
  2599                           
  2600  0071                     ?_getRxData:	
  2601                           ; 0 bytes @ 0x0
  2602                           
  2603  0071                     ?_setLog_Code:	
  2604                           ; 0 bytes @ 0x0
  2605                           
  2606  0071                     ?_setControl_Lights_Table:	
  2607                           ; 0 bytes @ 0x0
  2608                           
  2609  0071                     ?_setRFSW_Control:	
  2610                           ; 0 bytes @ 0x0
  2611                           
  2612  0071                     ?_setRFSW_AdjControl:	
  2613                           ; 0 bytes @ 0x0
  2614                           
  2615  0071                     ?_setRF_DimmerValue:	
  2616                           ; 0 bytes @ 0x0
  2617                           
  2618  0071                     ?_setSw_Initialization:	
  2619                           ; 0 bytes @ 0x0
  2620                           
  2621  0071                     ?_setSw_Main:	
  2622                           ; 0 bytes @ 0x0
  2623                           
  2624  0071                     ?_Sw_DimmerOnFunc:	
  2625                           ; 0 bytes @ 0x0
  2626                           
  2627  0071                     ?_Sw_DimmerAdjFunc:	
  2628                           ; 0 bytes @ 0x0
  2629                           
  2630  0071                     ?_Sw_DimmerOffFunc:	
  2631                           ; 0 bytes @ 0x0
  2632                           
  2633  0071                     ?_Buzzer_Initialization:	
  2634                           ; 0 bytes @ 0x0
  2635                           
  2636  0071                     ?_Buzzer_Main:	
  2637                           ; 0 bytes @ 0x0
  2638                           
  2639  0071                     ?_CC2500_TxData:	
  2640                           ; 0 bytes @ 0x0
  2641                           
  2642  0071                     ?_CC2500_RxData:	
  2643                           ; 0 bytes @ 0x0
  2644                           
  2645  0071                     ?_CC2500_PowerOnInitial:	
  2646                           ; 0 bytes @ 0x0
  2647                           
  2648  0071                     ?_DelayOffPointSelect:	
  2649                           ; 0 bytes @ 0x0
  2650                           
  2651  0071                     ?_DelayOff_Initialization:	
  2652                           ; 0 bytes @ 0x0
  2653                           
  2654  0071                     ?_DelayOff_Main:	
  2655                           ; 0 bytes @ 0x0
  2656                           
  2657  0071                     ?_DimmerLightsPointSelect:	
  2658                           ; 0 bytes @ 0x0
  2659                           
  2660  0071                     ?_DimmerLights_Initialization:	
  2661                           ; 0 bytes @ 0x0
  2662                           
  2663  0071                     ?_DimmerLights_Close:	
  2664                           ; 0 bytes @ 0x0
  2665                           
  2666  0071                     ?_DimmerLights_Main:	
  2667                           ; 0 bytes @ 0x0
  2668                           
  2669  0071                     ?_DimmerLights_Exceptions:	
  2670                           ; 0 bytes @ 0x0
  2671                           
  2672  0071                     ?_setDimmerLights_AdjRF:	
  2673                           ; 0 bytes @ 0x0
  2674                           
  2675  0071                     ?_LedPointSelect:	
  2676                           ; 0 bytes @ 0x0
  2677                           
  2678  0071                     ?_LED_Initialization:	
  2679                           ; 0 bytes @ 0x0
  2680                           
  2681  0071                     ?_LED_Main:	
  2682                           ; 0 bytes @ 0x0
  2683                           
  2684  0071                     ?_main:	
  2685                           ; 0 bytes @ 0x0
  2686                           
  2687  0071                     ?_ISR:	
  2688                           ; 0 bytes @ 0x0
  2689                           
  2690  0071                     ?_setDimmerReClock:	
  2691                           ; 0 bytes @ 0x0
  2692                           
  2693  0071                     ??_setDimmerReClock:	
  2694                           ; 0 bytes @ 0x0
  2695                           
  2696  0071                     ?_setINT_GO:	
  2697                           ; 0 bytes @ 0x0
  2698                           
  2699  0071                     ?_Flash_Memory_Unlock:	
  2700                           ; 0 bytes @ 0x0
  2701                           
  2702  0071                     ?_Flash_Memory_Erasing:	
  2703                           ; 0 bytes @ 0x0
  2704                           
  2705  0071                     ?_RfPointSelect:	
  2706                           ; 0 bytes @ 0x0
  2707                           
  2708  0071                     ?_RfSWPointSelect:	
  2709                           ; 0 bytes @ 0x0
  2710                           
  2711  0071                     ?_TouchPower:	
  2712                           ; 0 bytes @ 0x0
  2713                           
  2714  0071                     ?_SwPointSelect:	
  2715                           ; 0 bytes @ 0x0
  2716                           
  2717  0071                     ?i1_setLoad_StatusOff:	
  2718                           ; 0 bytes @ 0x0
  2719                           
  2720  0071                     ?i1_RfPointSelect:	
  2721                           ; 0 bytes @ 0x0
  2722                           
  2723  0071                     ??i1_RfPointSelect:	
  2724                           ; 0 bytes @ 0x0
  2725                           
  2726  0071                     ?_DelayTimejudge:	
  2727                           ; 0 bytes @ 0x0
  2728                           
  2729  0071                     ?_getPercentValue:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0071                     ?_getDimmerLights_StatusFlag:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0071                     ?_getDimmerLights_Trigger:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0071                     ?_setPercentValue:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0071                     ?_Flash_Memory_Read:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0071                     ?_getTemp_Safe:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0071                     ?_getPF_Safe:	
  2748                           ; 1 bytes @ 0x0
  2749                           
  2750  0071                     ?_getLoad_Safe:	
  2751                           ; 1 bytes @ 0x0
  2752                           
  2753  0071                     setRF_Initialization@rf:	
  2754                           ; 1 bytes @ 0x0
  2755                           
  2756  0071                     i1setLoad_StatusOff@command:	
  2757                           ; 1 bytes @ 0x0
  2758                           
  2759                           
  2760                           ; 1 bytes @ 0x0
  2761  0071                     	ds	1
  2762  0072                     ??i1_setLoad_StatusOff:	
  2763  0072                     i1setLoad_StatusOff@lights:	
  2764                           ; 0 bytes @ 0x1
  2765                           
  2766  0072                     i1RfPointSelect@rf:	
  2767                           ; 1 bytes @ 0x1
  2768                           
  2769                           
  2770                           ; 1 bytes @ 0x1
  2771  0072                     	ds	1
  2772  0073                     ??_TMR0_ISR:	
  2773  0073                     ?_setRF_ReceiveGO:	
  2774                           ; 0 bytes @ 0x2
  2775                           
  2776  0073                     setRF_ReceiveGO@command:	
  2777                           ; 0 bytes @ 0x2
  2778                           
  2779                           
  2780                           ; 1 bytes @ 0x2
  2781  0073                     	ds	1
  2782  0074                     ??_setRF_ReceiveGO:	
  2783  0074                     setRF_ReceiveGO@rf:	
  2784                           ; 0 bytes @ 0x3
  2785                           
  2786                           
  2787                           ; 1 bytes @ 0x3
  2788  0074                     	ds	1
  2789  0075                     ??_INT_ISR:	
  2790                           
  2791                           ; 0 bytes @ 0x4
  2792  0075                     	ds	2
  2793  0077                     ??_ISR:	
  2794                           
  2795                           ; 0 bytes @ 0x6
  2796  0077                     	ds	1
  2797                           
  2798                           	psect	cstackBANK0
  2799  0020                     __pcstackBANK0:	
  2800  0020                     ??_CC2500_WriteByte:	
  2801  0020                     ??_CC2500_ReadByte:	
  2802                           ; 0 bytes @ 0x0
  2803                           
  2804  0020                     ?_DelayTime_1us:	
  2805                           ; 0 bytes @ 0x0
  2806                           
  2807  0020                     ?_setRF_DimmerLights:	
  2808                           ; 0 bytes @ 0x0
  2809                           
  2810  0020                     ??_DelayTimejudge:	
  2811                           ; 0 bytes @ 0x0
  2812                           
  2813  0020                     ??_Dimmer_Initialization:	
  2814                           ; 0 bytes @ 0x0
  2815                           
  2816  0020                     ??_getDimmerLights_StatusFlag:	
  2817                           ; 0 bytes @ 0x0
  2818                           
  2819  0020                     ??_setLoad_GO:	
  2820                           ; 0 bytes @ 0x0
  2821                           
  2822  0020                     ??_getDimmerLights_Trigger:	
  2823                           ; 0 bytes @ 0x0
  2824                           
  2825  0020                     ?_setLoad_StatusOff:	
  2826                           ; 0 bytes @ 0x0
  2827                           
  2828  0020                     ??_setLoad_Count:	
  2829                           ; 0 bytes @ 0x0
  2830                           
  2831  0020                     ?_setLoad_StatusOn:	
  2832                           ; 0 bytes @ 0x0
  2833                           
  2834  0020                     ??_MainT_Initialization:	
  2835                           ; 0 bytes @ 0x0
  2836                           
  2837  0020                     ??_setTemp_Enable:	
  2838                           ; 0 bytes @ 0x0
  2839                           
  2840  0020                     ??_setLoad_Enable:	
  2841                           ; 0 bytes @ 0x0
  2842                           
  2843  0020                     ??_IO_Set:	
  2844                           ; 0 bytes @ 0x0
  2845                           
  2846  0020                     ??_TMR0_Set:	
  2847                           ; 0 bytes @ 0x0
  2848                           
  2849  0020                     ??_ADC_Set:	
  2850                           ; 0 bytes @ 0x0
  2851                           
  2852  0020                     ??_INT_Set:	
  2853                           ; 0 bytes @ 0x0
  2854                           
  2855  0020                     ??_IOC_Set:	
  2856                           ; 0 bytes @ 0x0
  2857                           
  2858  0020                     ??_Flash_Memory_Read:	
  2859                           ; 0 bytes @ 0x0
  2860                           
  2861  0020                     ??_Flash_Memory_Write:	
  2862                           ; 0 bytes @ 0x0
  2863                           
  2864  0020                     ??_setLoad_AH_AL_Restore:	
  2865                           ; 0 bytes @ 0x0
  2866                           
  2867  0020                     ??_getTemp_Safe:	
  2868                           ; 0 bytes @ 0x0
  2869                           
  2870  0020                     ??_getPF_Safe:	
  2871                           ; 0 bytes @ 0x0
  2872                           
  2873  0020                     ??_setTemp_Initialization:	
  2874                           ; 0 bytes @ 0x0
  2875                           
  2876  0020                     ??_setPowerFault_Initialization:	
  2877                           ; 0 bytes @ 0x0
  2878                           
  2879  0020                     ??_setRF_Initialization:	
  2880                           ; 0 bytes @ 0x0
  2881                           
  2882  0020                     ??_Buzzer_Initialization:	
  2883                           ; 0 bytes @ 0x0
  2884                           
  2885  0020                     ??_Buzzer_Main:	
  2886                           ; 0 bytes @ 0x0
  2887                           
  2888  0020                     ??_DelayOffPointSelect:	
  2889                           ; 0 bytes @ 0x0
  2890                           
  2891  0020                     ??_DimmerLightsPointSelect:	
  2892                           ; 0 bytes @ 0x0
  2893                           
  2894  0020                     ??_LedPointSelect:	
  2895                           ; 0 bytes @ 0x0
  2896                           
  2897  0020                     ??_setINT_GO:	
  2898                           ; 0 bytes @ 0x0
  2899                           
  2900  0020                     ??_Flash_Memory_Unlock:	
  2901                           ; 0 bytes @ 0x0
  2902                           
  2903  0020                     ??_Flash_Memory_Erasing:	
  2904                           ; 0 bytes @ 0x0
  2905                           
  2906  0020                     ??_getLoad_Safe:	
  2907                           ; 0 bytes @ 0x0
  2908                           
  2909  0020                     ??_RfPointSelect:	
  2910                           ; 0 bytes @ 0x0
  2911                           
  2912  0020                     ??_RfSWPointSelect:	
  2913                           ; 0 bytes @ 0x0
  2914                           
  2915  0020                     ??_TouchPower:	
  2916                           ; 0 bytes @ 0x0
  2917                           
  2918  0020                     ??_SwPointSelect:	
  2919                           ; 0 bytes @ 0x0
  2920                           
  2921  0020                     ?_getAD:	
  2922                           ; 0 bytes @ 0x0
  2923                           
  2924  0020                     ?___wmul:	
  2925                           ; 2 bytes @ 0x0
  2926                           
  2927  0020                     ?___lwdiv:	
  2928                           ; 2 bytes @ 0x0
  2929                           
  2930  0020                     ?___ftpack:	
  2931                           ; 2 bytes @ 0x0
  2932                           
  2933  0020                     getDimmerLights_StatusFlag@Status:	
  2934                           ; 3 bytes @ 0x0
  2935                           
  2936  0020                     getDimmerLights_Trigger@Status:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0020                     setINT_GO@command:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0020                     getAD@adcon1:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  0020                     setLoad_Enable@command:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948  0020                     setLoad_GO@command:	
  2949                           ; 1 bytes @ 0x0
  2950                           
  2951  0020                     setLoad_StatusOn@command:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  0020                     setLoad_StatusOff@command:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0020                     setTemp_Enable@command:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  0020                     setRF_DimmerLights@on:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  0020                     DelayTime_1us@count:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  0020                     ___wmul@multiplier:	
  2967                           ; 2 bytes @ 0x0
  2968                           
  2969  0020                     ___lwdiv@divisor:	
  2970                           ; 2 bytes @ 0x0
  2971                           
  2972  0020                     ___ftpack@arg:	
  2973                           ; 2 bytes @ 0x0
  2974                           
  2975                           
  2976                           ; 3 bytes @ 0x0
  2977  0020                     	ds	1
  2978  0021                     ??_setRF_DimmerLights:	
  2979  0021                     ??_setLoad_StatusOff:	
  2980                           ; 0 bytes @ 0x1
  2981                           
  2982  0021                     ??_setLoad_StatusOn:	
  2983                           ; 0 bytes @ 0x1
  2984                           
  2985  0021                     ??_Mcu_Initialization:	
  2986                           ; 0 bytes @ 0x1
  2987                           
  2988  0021                     ??_Temp_Initialization:	
  2989                           ; 0 bytes @ 0x1
  2990                           
  2991  0021                     ??_PowerFault_Initialization:	
  2992                           ; 0 bytes @ 0x1
  2993                           
  2994  0021                     ??_RF_Initialization:	
  2995                           ; 0 bytes @ 0x1
  2996                           
  2997  0021                     ??_DimmerLights_Close:	
  2998                           ; 0 bytes @ 0x1
  2999                           
  3000  0021                     CC2500_WriteByte@loop_a:	
  3001                           ; 0 bytes @ 0x1
  3002                           
  3003  0021                     CC2500_ReadByte@loop_b:	
  3004                           ; 1 bytes @ 0x1
  3005                           
  3006  0021                     DelayOffPointSelect@sw:	
  3007                           ; 1 bytes @ 0x1
  3008                           
  3009  0021                     DelayTimejudge@i:	
  3010                           ; 1 bytes @ 0x1
  3011                           
  3012  0021                     DimmerLightsPointSelect@lights:	
  3013                           ; 1 bytes @ 0x1
  3014                           
  3015  0021                     LedPointSelect@led:	
  3016                           ; 1 bytes @ 0x1
  3017                           
  3018  0021                     Flash_Memory_Read@i:	
  3019                           ; 1 bytes @ 0x1
  3020                           
  3021  0021                     Flash_Memory_Write@i:	
  3022                           ; 1 bytes @ 0x1
  3023                           
  3024  0021                     setLoad_Count@command:	
  3025                           ; 1 bytes @ 0x1
  3026                           
  3027  0021                     setLoad_StatusOn@lights:	
  3028                           ; 1 bytes @ 0x1
  3029                           
  3030  0021                     setLoad_StatusOff@lights:	
  3031                           ; 1 bytes @ 0x1
  3032                           
  3033  0021                     setLoad_AH_AL_Restore@i:	
  3034                           ; 1 bytes @ 0x1
  3035                           
  3036  0021                     RfPointSelect@rf:	
  3037                           ; 1 bytes @ 0x1
  3038                           
  3039  0021                     RfSWPointSelect@sw:	
  3040                           ; 1 bytes @ 0x1
  3041                           
  3042  0021                     SwPointSelect@sw:	
  3043                           ; 1 bytes @ 0x1
  3044                           
  3045                           
  3046                           ; 1 bytes @ 0x1
  3047  0021                     	ds	1
  3048  0022                     ??_CC2500_WriteCommand:	
  3049  0022                     ??_CC2500_ReadStatus:	
  3050                           ; 0 bytes @ 0x2
  3051                           
  3052  0022                     ?_setRF_RxStatus:	
  3053                           ; 0 bytes @ 0x2
  3054                           
  3055  0022                     ??_DelayTime_1us:	
  3056                           ; 0 bytes @ 0x2
  3057                           
  3058  0022                     ?_CC2500_WriteREG:	
  3059                           ; 0 bytes @ 0x2
  3060                           
  3061  0022                     ??_DlyOff_Initialization:	
  3062                           ; 0 bytes @ 0x2
  3063                           
  3064  0022                     ?_setSw_Status:	
  3065                           ; 0 bytes @ 0x2
  3066                           
  3067  0022                     ?_setRFSW_Status:	
  3068                           ; 0 bytes @ 0x2
  3069                           
  3070  0022                     ?_setDimmerLights_Trigger:	
  3071                           ; 0 bytes @ 0x2
  3072                           
  3073  0022                     ?_setDimmerLights_Switch:	
  3074                           ; 0 bytes @ 0x2
  3075                           
  3076  0022                     ??_setTxData:	
  3077                           ; 0 bytes @ 0x2
  3078                           
  3079  0022                     ?_setDimmerLights_TriggerERROR:	
  3080                           ; 0 bytes @ 0x2
  3081                           
  3082  0022                     ?_setLED:	
  3083                           ; 0 bytes @ 0x2
  3084                           
  3085  0022                     ??_setLED_Main:	
  3086                           ; 0 bytes @ 0x2
  3087                           
  3088  0022                     ??_Load_Initialization:	
  3089                           ; 0 bytes @ 0x2
  3090                           
  3091  0022                     ??_setSw_Enable:	
  3092                           ; 0 bytes @ 0x2
  3093                           
  3094  0022                     ?_setDimmerLights_AdjGo:	
  3095                           ; 0 bytes @ 0x2
  3096                           
  3097  0022                     ?_setDimmerLights_TriggerAdj:	
  3098                           ; 0 bytes @ 0x2
  3099                           
  3100  0022                     ?_setDimmerLights_Clear:	
  3101                           ; 0 bytes @ 0x2
  3102                           
  3103  0022                     ?_setRF_Learn:	
  3104                           ; 0 bytes @ 0x2
  3105                           
  3106  0022                     CC2500_WriteREG@value:	
  3107                           ; 0 bytes @ 0x2
  3108                           
  3109  0022                     DlyOff_Initialization@sw:	
  3110                           ; 1 bytes @ 0x2
  3111                           
  3112  0022                     DelayTimejudge@value:	
  3113                           ; 1 bytes @ 0x2
  3114                           
  3115  0022                     setDimmerLights_TriggerERROR@command:	
  3116                           ; 1 bytes @ 0x2
  3117                           
  3118  0022                     setDimmerLights_Switch@command:	
  3119                           ; 1 bytes @ 0x2
  3120                           
  3121  0022                     setDimmerLights_AdjGo@command:	
  3122                           ; 1 bytes @ 0x2
  3123                           
  3124  0022                     setDimmerLights_Trigger@command:	
  3125                           ; 1 bytes @ 0x2
  3126                           
  3127  0022                     setDimmerLights_TriggerAdj@command:	
  3128                           ; 1 bytes @ 0x2
  3129                           
  3130  0022                     setDimmerLights_Clear@command:	
  3131                           ; 1 bytes @ 0x2
  3132                           
  3133  0022                     setLED@command:	
  3134                           ; 1 bytes @ 0x2
  3135                           
  3136  0022                     Flash_Memory_Read@address:	
  3137                           ; 1 bytes @ 0x2
  3138                           
  3139  0022                     setRF_Learn@command:	
  3140                           ; 1 bytes @ 0x2
  3141                           
  3142  0022                     setRF_RxStatus@command:	
  3143                           ; 1 bytes @ 0x2
  3144                           
  3145  0022                     setRFSW_Status@command:	
  3146                           ; 1 bytes @ 0x2
  3147                           
  3148  0022                     setSw_Enable@command:	
  3149                           ; 1 bytes @ 0x2
  3150                           
  3151  0022                     setSw_Status@command:	
  3152                           ; 1 bytes @ 0x2
  3153                           
  3154  0022                     DelayTime_1us@i:	
  3155                           ; 1 bytes @ 0x2
  3156                           
  3157  0022                     ___wmul@multiplicand:	
  3158                           ; 2 bytes @ 0x2
  3159                           
  3160  0022                     ___lwdiv@dividend:	
  3161                           ; 2 bytes @ 0x2
  3162                           
  3163                           
  3164                           ; 2 bytes @ 0x2
  3165  0022                     	ds	1
  3166  0023                     ??_setRF_RxStatus:	
  3167  0023                     ??_CC2500_WriteREG:	
  3168                           ; 0 bytes @ 0x3
  3169                           
  3170  0023                     ??_setSw_Status:	
  3171                           ; 0 bytes @ 0x3
  3172                           
  3173  0023                     ??_setRFSW_Status:	
  3174                           ; 0 bytes @ 0x3
  3175                           
  3176  0023                     ??_setDimmerLights_Trigger:	
  3177                           ; 0 bytes @ 0x3
  3178                           
  3179  0023                     ??_setDimmerLights_Switch:	
  3180                           ; 0 bytes @ 0x3
  3181                           
  3182  0023                     ??_setDimmerLights_TriggerERROR:	
  3183                           ; 0 bytes @ 0x3
  3184                           
  3185  0023                     ??_setLED:	
  3186                           ; 0 bytes @ 0x3
  3187                           
  3188  0023                     ??_DelayOff_Initialization:	
  3189                           ; 0 bytes @ 0x3
  3190                           
  3191  0023                     ?_setDelayOff_GO:	
  3192                           ; 0 bytes @ 0x3
  3193                           
  3194  0023                     ??_setDimmerLights_AdjGo:	
  3195                           ; 0 bytes @ 0x3
  3196                           
  3197  0023                     ??_setDimmerLights_TriggerAdj:	
  3198                           ; 0 bytes @ 0x3
  3199                           
  3200  0023                     ??_setDimmerLights_Clear:	
  3201                           ; 0 bytes @ 0x3
  3202                           
  3203  0023                     ??_getAD:	
  3204                           ; 0 bytes @ 0x3
  3205                           
  3206  0023                     ??_setRF_Learn:	
  3207                           ; 0 bytes @ 0x3
  3208                           
  3209  0023                     CC2500_WriteCommand@command:	
  3210                           ; 0 bytes @ 0x3
  3211                           
  3212  0023                     CC2500_ReadStatus@status_addr:	
  3213                           ; 1 bytes @ 0x3
  3214                           
  3215  0023                     setDelayOff_GO@command:	
  3216                           ; 1 bytes @ 0x3
  3217                           
  3218  0023                     setDimmerLights_TriggerERROR@lights:	
  3219                           ; 1 bytes @ 0x3
  3220                           
  3221  0023                     setDimmerLights_Switch@lights:	
  3222                           ; 1 bytes @ 0x3
  3223                           
  3224  0023                     setDimmerLights_AdjGo@lights:	
  3225                           ; 1 bytes @ 0x3
  3226                           
  3227  0023                     setDimmerLights_Trigger@lights:	
  3228                           ; 1 bytes @ 0x3
  3229                           
  3230  0023                     setDimmerLights_TriggerAdj@lights:	
  3231                           ; 1 bytes @ 0x3
  3232                           
  3233  0023                     setDimmerLights_Clear@lights:	
  3234                           ; 1 bytes @ 0x3
  3235                           
  3236  0023                     setLED@led:	
  3237                           ; 1 bytes @ 0x3
  3238                           
  3239  0023                     getAD@adcon0:	
  3240                           ; 1 bytes @ 0x3
  3241                           
  3242  0023                     Flash_Memory_Read@ret:	
  3243                           ; 1 bytes @ 0x3
  3244                           
  3245  0023                     setRF_Learn@rf:	
  3246                           ; 1 bytes @ 0x3
  3247                           
  3248  0023                     setRF_RxStatus@rf:	
  3249                           ; 1 bytes @ 0x3
  3250                           
  3251  0023                     setRFSW_Status@sw:	
  3252                           ; 1 bytes @ 0x3
  3253                           
  3254  0023                     setRF_DimmerLights@status:	
  3255                           ; 1 bytes @ 0x3
  3256                           
  3257  0023                     setSw_Status@sw:	
  3258                           ; 1 bytes @ 0x3
  3259                           
  3260  0023                     ___ftpack@exp:	
  3261                           ; 1 bytes @ 0x3
  3262                           
  3263                           
  3264                           ; 1 bytes @ 0x3
  3265  0023                     	ds	1
  3266  0024                     ??_CC2500_ClearTXFIFO:	
  3267  0024                     ??_CC2500_ClearRXFIFO:	
  3268                           ; 0 bytes @ 0x4
  3269                           
  3270  0024                     ??_CC2500_SIDLEMode:	
  3271                           ; 0 bytes @ 0x4
  3272                           
  3273  0024                     ?_setDimmerLights:	
  3274                           ; 0 bytes @ 0x4
  3275                           
  3276  0024                     ??_setDimmerLights_ERROR:	
  3277                           ; 0 bytes @ 0x4
  3278                           
  3279  0024                     ??_setLED_Initialization:	
  3280                           ; 0 bytes @ 0x4
  3281                           
  3282  0024                     ??_getLoad_AD:	
  3283                           ; 0 bytes @ 0x4
  3284                           
  3285  0024                     ??_getTemp_AD:	
  3286                           ; 0 bytes @ 0x4
  3287                           
  3288  0024                     ??_getPowerFault_AD:	
  3289                           ; 0 bytes @ 0x4
  3290                           
  3291  0024                     ?_setRF_Enable:	
  3292                           ; 0 bytes @ 0x4
  3293                           
  3294  0024                     ??_Flash_Memory_Modify:	
  3295                           ; 0 bytes @ 0x4
  3296                           
  3297  0024                     ??_RF_RxDisable:	
  3298                           ; 0 bytes @ 0x4
  3299                           
  3300  0024                     ??_setSw_Initialization:	
  3301                           ; 0 bytes @ 0x4
  3302                           
  3303  0024                     ??_Sw_DimmerAdjFunc:	
  3304                           ; 0 bytes @ 0x4
  3305                           
  3306  0024                     ??_CC2500_TxData:	
  3307                           ; 0 bytes @ 0x4
  3308                           
  3309  0024                     ??_CC2500_RxData:	
  3310                           ; 0 bytes @ 0x4
  3311                           
  3312  0024                     ??___wmul:	
  3313                           ; 0 bytes @ 0x4
  3314                           
  3315  0024                     ??___lwdiv:	
  3316                           ; 0 bytes @ 0x4
  3317                           
  3318  0024                     CC2500_WriteREG@w_addr:	
  3319                           ; 0 bytes @ 0x4
  3320                           
  3321  0024                     setDelayOff_GO@value:	
  3322                           ; 1 bytes @ 0x4
  3323                           
  3324  0024                     setDimmerLights@status:	
  3325                           ; 1 bytes @ 0x4
  3326                           
  3327  0024                     setLED_Initialization@led:	
  3328                           ; 1 bytes @ 0x4
  3329                           
  3330  0024                     setLED_Main@led:	
  3331                           ; 1 bytes @ 0x4
  3332                           
  3333  0024                     setTxData@rf:	
  3334                           ; 1 bytes @ 0x4
  3335                           
  3336  0024                     setRF_Enable@command:	
  3337                           ; 1 bytes @ 0x4
  3338                           
  3339  0024                     RF_RxDisable@rf:	
  3340                           ; 1 bytes @ 0x4
  3341                           
  3342  0024                     setRF_DimmerLights@lights:	
  3343                           ; 1 bytes @ 0x4
  3344                           
  3345  0024                     setSw_Initialization@sw:	
  3346                           ; 1 bytes @ 0x4
  3347                           
  3348  0024                     Sw_DimmerAdjFunc@sw:	
  3349                           ; 1 bytes @ 0x4
  3350                           
  3351  0024                     ___ftpack@sign:	
  3352                           ; 1 bytes @ 0x4
  3353                           
  3354  0024                     DelayTime_1us@j:	
  3355                           ; 1 bytes @ 0x4
  3356                           
  3357  0024                     ___wmul@product:	
  3358                           ; 2 bytes @ 0x4
  3359                           
  3360                           
  3361                           ; 2 bytes @ 0x4
  3362  0024                     	ds	1
  3363  0025                     ??_CC2500_InitSetREG:	
  3364  0025                     ??_CC2500_InitPATable:	
  3365                           ; 0 bytes @ 0x5
  3366                           
  3367  0025                     ??_setDimmerLights:	
  3368                           ; 0 bytes @ 0x5
  3369                           
  3370  0025                     ??_Switch_Initialization:	
  3371                           ; 0 bytes @ 0x5
  3372                           
  3373  0025                     ??_setRF_Enable:	
  3374                           ; 0 bytes @ 0x5
  3375                           
  3376  0025                     ??___ftpack:	
  3377                           ; 0 bytes @ 0x5
  3378                           
  3379  0025                     ??_setDelayOff_GO:	
  3380                           ; 0 bytes @ 0x5
  3381                           
  3382  0025                     ??_LED_Initialization:	
  3383                           ; 0 bytes @ 0x5
  3384                           
  3385  0025                     ??_LED_Main:	
  3386                           ; 0 bytes @ 0x5
  3387                           
  3388  0025                     CC2500_TxData@loop_e:	
  3389                           ; 0 bytes @ 0x5
  3390                           
  3391  0025                     CC2500_RxData@loop_f:	
  3392                           ; 1 bytes @ 0x5
  3393                           
  3394  0025                     setDimmerLights_ERROR@lights:	
  3395                           ; 1 bytes @ 0x5
  3396                           
  3397  0025                     setTxData@i:	
  3398                           ; 1 bytes @ 0x5
  3399                           
  3400  0025                     setRF_Enable@rf:	
  3401                           ; 1 bytes @ 0x5
  3402                           
  3403  0025                     ___lwdiv@quotient:	
  3404                           ; 1 bytes @ 0x5
  3405                           
  3406                           
  3407                           ; 2 bytes @ 0x5
  3408  0025                     	ds	1
  3409  0026                     ??_CC2500_PowerRST:	
  3410  0026                     ??_CC2500_FrequencyCabr:	
  3411                           ; 0 bytes @ 0x6
  3412                           
  3413  0026                     ??_Sw_DimmerOnFunc:	
  3414                           ; 0 bytes @ 0x6
  3415                           
  3416  0026                     ?_setBuz:	
  3417                           ; 0 bytes @ 0x6
  3418                           
  3419  0026                     CC2500_InitSetREG@temp1:	
  3420                           ; 0 bytes @ 0x6
  3421                           
  3422  0026                     CC2500_InitPATable@temp:	
  3423                           ; 1 bytes @ 0x6
  3424                           
  3425  0026                     setDelayOff_GO@sw:	
  3426                           ; 1 bytes @ 0x6
  3427                           
  3428  0026                     setDimmerLights@lights:	
  3429                           ; 1 bytes @ 0x6
  3430                           
  3431  0026                     Flash_Memory_Modify@i:	
  3432                           ; 1 bytes @ 0x6
  3433                           
  3434  0026                     Sw_DimmerOnFunc@sw:	
  3435                           ; 1 bytes @ 0x6
  3436                           
  3437  0026                     setBuz@time:	
  3438                           ; 1 bytes @ 0x6
  3439                           
  3440                           
  3441                           ; 2 bytes @ 0x6
  3442  0026                     	ds	1
  3443  0027                     ??_Flash_Memory_Main:	
  3444  0027                     ??_Sw_DimmerOffFunc:	
  3445                           ; 0 bytes @ 0x7
  3446                           
  3447  0027                     CC2500_InitSetREG@temp2:	
  3448                           ; 0 bytes @ 0x7
  3449                           
  3450  0027                     CC2500_InitPATable@loop_d:	
  3451                           ; 1 bytes @ 0x7
  3452                           
  3453  0027                     ___lwdiv@counter:	
  3454                           ; 1 bytes @ 0x7
  3455                           
  3456                           
  3457                           ; 1 bytes @ 0x7
  3458  0027                     	ds	1
  3459  0028                     ??_setBuz:	
  3460  0028                     ?___awtoft:	
  3461                           ; 0 bytes @ 0x8
  3462                           
  3463  0028                     CC2500_InitSetREG@loop_c:	
  3464                           ; 3 bytes @ 0x8
  3465                           
  3466  0028                     getTemp_AD@channel:	
  3467                           ; 1 bytes @ 0x8
  3468                           
  3469  0028                     getPowerFault_AD@channel:	
  3470                           ; 1 bytes @ 0x8
  3471                           
  3472  0028                     ___awtoft@c:	
  3473                           ; 1 bytes @ 0x8
  3474                           
  3475                           
  3476                           ; 2 bytes @ 0x8
  3477  0028                     	ds	1
  3478  0029                     ??_CC2500_PowerOnInitial:	
  3479  0029                     setBuz@count:	
  3480                           ; 0 bytes @ 0x9
  3481                           
  3482  0029                     getLoad_AD@channel:	
  3483                           ; 1 bytes @ 0x9
  3484                           
  3485  0029                     Sw_DimmerOffFunc@sw:	
  3486                           ; 1 bytes @ 0x9
  3487                           
  3488                           
  3489                           ; 1 bytes @ 0x9
  3490  0029                     	ds	1
  3491  002A                     ??_DlyOff_Main:	
  3492  002A                     ??_MainT:	
  3493                           ; 0 bytes @ 0xA
  3494                           
  3495  002A                     ??_setLog_Code:	
  3496                           ; 0 bytes @ 0xA
  3497                           
  3498  002A                     ??_setRFSW_Control:	
  3499                           ; 0 bytes @ 0xA
  3500                           
  3501  002A                     ??_setSw_Main:	
  3502                           ; 0 bytes @ 0xA
  3503                           
  3504  002A                     ??_DimmerLights_Exceptions:	
  3505                           ; 0 bytes @ 0xA
  3506                           
  3507  002A                     DimmerLights_Exceptions@status:	
  3508                           ; 0 bytes @ 0xA
  3509                           
  3510  002A                     getLoad_AD@j:	
  3511                           ; 1 bytes @ 0xA
  3512                           
  3513                           
  3514                           ; 1 bytes @ 0xA
  3515  002A                     	ds	1
  3516  002B                     ??_setLoad_Exceptions:	
  3517  002B                     ??_setOverTemp_Exceptions:	
  3518                           ; 0 bytes @ 0xB
  3519                           
  3520  002B                     ??_setPowerFault_Exceptions:	
  3521                           ; 0 bytes @ 0xB
  3522                           
  3523  002B                     ??___awtoft:	
  3524                           ; 0 bytes @ 0xB
  3525                           
  3526  002B                     getLoad_AD@i:	
  3527                           ; 0 bytes @ 0xB
  3528                           
  3529  002B                     setLog_Code@rf:	
  3530                           ; 1 bytes @ 0xB
  3531                           
  3532                           
  3533                           ; 1 bytes @ 0xB
  3534  002B                     	ds	1
  3535  002C                     DlyOff_Main@sw:	
  3536  002C                     setLoad_Exceptions@command:	
  3537                           ; 1 bytes @ 0xC
  3538                           
  3539  002C                     setOverTemp_Exceptions@command:	
  3540                           ; 1 bytes @ 0xC
  3541                           
  3542  002C                     setPowerFault_Exceptions@command:	
  3543                           ; 1 bytes @ 0xC
  3544                           
  3545  002C                     setRFSW_Control@sw:	
  3546                           ; 1 bytes @ 0xC
  3547                           
  3548  002C                     _setSw_Main$4710:	
  3549                           ; 1 bytes @ 0xC
  3550                           
  3551                           
  3552                           ; 1 bytes @ 0xC
  3553  002C                     	ds	1
  3554  002D                     ??_Load_Main:	
  3555  002D                     ??_setTemp_Main:	
  3556                           ; 0 bytes @ 0xD
  3557                           
  3558  002D                     ??_setPowerFault_Main:	
  3559                           ; 0 bytes @ 0xD
  3560                           
  3561  002D                     ??_DelayOff_Main:	
  3562                           ; 0 bytes @ 0xD
  3563                           
  3564  002D                     _setSw_Main$4711:	
  3565                           ; 0 bytes @ 0xD
  3566                           
  3567  002D                     ___awtoft@sign:	
  3568                           ; 1 bytes @ 0xD
  3569                           
  3570                           
  3571                           ; 1 bytes @ 0xD
  3572  002D                     	ds	1
  3573  002E                     ?___ftdiv:	
  3574  002E                     ?___ftmul:	
  3575                           ; 3 bytes @ 0xE
  3576                           
  3577  002E                     setSw_Main@sw:	
  3578                           ; 3 bytes @ 0xE
  3579                           
  3580  002E                     ___ftdiv@f2:	
  3581                           ; 1 bytes @ 0xE
  3582                           
  3583  002E                     ___ftmul@f1:	
  3584                           ; 3 bytes @ 0xE
  3585                           
  3586                           
  3587                           ; 3 bytes @ 0xE
  3588  002E                     	ds	1
  3589  002F                     ??_PowerFault_Main:	
  3590  002F                     ??_Switch_Main:	
  3591                           ; 0 bytes @ 0xF
  3592                           
  3593                           
  3594                           ; 0 bytes @ 0xF
  3595  002F                     	ds	1
  3596  0030                     ??_Temp_Main:	
  3597                           
  3598                           ; 0 bytes @ 0x10
  3599  0030                     	ds	1
  3600  0031                     Load_Main@i:	
  3601  0031                     ___ftdiv@f1:	
  3602                           ; 1 bytes @ 0x11
  3603                           
  3604  0031                     ___ftmul@f2:	
  3605                           ; 3 bytes @ 0x11
  3606                           
  3607                           
  3608                           ; 3 bytes @ 0x11
  3609  0031                     	ds	3
  3610  0034                     ??___ftdiv:	
  3611  0034                     ??___ftmul:	
  3612                           ; 0 bytes @ 0x14
  3613                           
  3614                           
  3615                           ; 0 bytes @ 0x14
  3616  0034                     	ds	4
  3617  0038                     ___ftdiv@cntr:	
  3618  0038                     ___ftmul@exp:	
  3619                           ; 1 bytes @ 0x18
  3620                           
  3621                           
  3622                           ; 1 bytes @ 0x18
  3623  0038                     	ds	1
  3624  0039                     ___ftdiv@f3:	
  3625  0039                     ___ftmul@f3_as_product:	
  3626                           ; 3 bytes @ 0x19
  3627                           
  3628                           
  3629                           ; 3 bytes @ 0x19
  3630  0039                     	ds	3
  3631  003C                     ___ftdiv@exp:	
  3632  003C                     ___ftmul@cntr:	
  3633                           ; 1 bytes @ 0x1C
  3634                           
  3635                           
  3636                           ; 1 bytes @ 0x1C
  3637  003C                     	ds	1
  3638  003D                     ___ftdiv@sign:	
  3639  003D                     ___ftmul@sign:	
  3640                           ; 1 bytes @ 0x1D
  3641                           
  3642                           
  3643                           ; 1 bytes @ 0x1D
  3644  003D                     	ds	1
  3645  003E                     ?___ftadd:	
  3646  003E                     ___ftadd@f1:	
  3647                           ; 3 bytes @ 0x1E
  3648                           
  3649                           
  3650                           ; 3 bytes @ 0x1E
  3651  003E                     	ds	3
  3652  0041                     ___ftadd@f2:	
  3653                           
  3654                           ; 3 bytes @ 0x21
  3655  0041                     	ds	3
  3656  0044                     ??___ftadd:	
  3657                           
  3658                           ; 0 bytes @ 0x24
  3659  0044                     	ds	4
  3660  0048                     ___ftadd@sign:	
  3661                           
  3662                           ; 1 bytes @ 0x28
  3663  0048                     	ds	1
  3664  0049                     ___ftadd@exp2:	
  3665                           
  3666                           ; 1 bytes @ 0x29
  3667  0049                     	ds	1
  3668  004A                     ___ftadd@exp1:	
  3669                           
  3670                           ; 1 bytes @ 0x2A
  3671  004A                     	ds	1
  3672  004B                     ?___fttol:	
  3673  004B                     ___fttol@f1:	
  3674                           ; 4 bytes @ 0x2B
  3675                           
  3676                           
  3677                           ; 3 bytes @ 0x2B
  3678  004B                     	ds	4
  3679  004F                     ??___fttol:	
  3680                           
  3681                           ; 0 bytes @ 0x2F
  3682  004F                     	ds	4
  3683  0053                     ___fttol@sign1:	
  3684                           
  3685                           ; 1 bytes @ 0x33
  3686  0053                     	ds	1
  3687  0054                     ___fttol@lval:	
  3688                           
  3689                           ; 4 bytes @ 0x34
  3690  0054                     	ds	4
  3691  0058                     ___fttol@exp1:	
  3692                           
  3693                           ; 1 bytes @ 0x38
  3694  0058                     	ds	1
  3695  0059                     ??_getPercentValue:	
  3696  0059                     ??_setPercentValue:	
  3697                           ; 0 bytes @ 0x39
  3698                           
  3699  0059                     setPercentValue@value:	
  3700                           ; 0 bytes @ 0x39
  3701                           
  3702                           
  3703                           ; 1 bytes @ 0x39
  3704  0059                     	ds	1
  3705  005A                     setPercentValue@i:	
  3706                           
  3707                           ; 3 bytes @ 0x3A
  3708  005A                     	ds	1
  3709  005B                     getPercentValue@value:	
  3710                           
  3711                           ; 1 bytes @ 0x3B
  3712  005B                     	ds	1
  3713  005C                     getPercentValue@i:	
  3714                           
  3715                           ; 3 bytes @ 0x3C
  3716  005C                     	ds	1
  3717  005D                     ?_setDimmerLights_Adj:	
  3718  005D                     ??_Flash_Memory_Initialization:	
  3719                           ; 0 bytes @ 0x3D
  3720                           
  3721  005D                     setDimmerLights_Adj@status:	
  3722                           ; 0 bytes @ 0x3D
  3723                           
  3724                           
  3725                           ; 1 bytes @ 0x3D
  3726  005D                     	ds	1
  3727  005E                     ??_setDimmerLights_Adj:	
  3728  005E                     Flash_Memory_Initialization@i:	
  3729                           ; 0 bytes @ 0x3E
  3730                           
  3731                           
  3732                           ; 1 bytes @ 0x3E
  3733  005E                     	ds	1
  3734  005F                     ??_setDimmerLights_Initialization:	
  3735  005F                     ??_setDimmerLights_AdjRF:	
  3736                           ; 0 bytes @ 0x3F
  3737                           
  3738                           
  3739                           ; 0 bytes @ 0x3F
  3740  005F                     	ds	1
  3741  0060                     setDimmerLights_Adj@lights:	
  3742  0060                     setDimmerLights_AdjRF@lights:	
  3743                           ; 1 bytes @ 0x40
  3744                           
  3745                           
  3746                           ; 1 bytes @ 0x40
  3747  0060                     	ds	1
  3748  0061                     ??_setDimmerLights_Main:	
  3749  0061                     ??_setRF_DimmerValue:	
  3750                           ; 0 bytes @ 0x41
  3751                           
  3752  0061                     setDimmerLights_Initialization@lights:	
  3753                           ; 0 bytes @ 0x41
  3754                           
  3755  0061                     setDimmerLights_Main@clear:	
  3756                           ; 1 bytes @ 0x41
  3757                           
  3758                           
  3759                           ; 1 bytes @ 0x41
  3760  0061                     	ds	1
  3761  0062                     ??_DimmerLights_Initialization:	
  3762  0062                     setDimmerLights_Main@lights:	
  3763                           ; 0 bytes @ 0x42
  3764                           
  3765                           
  3766                           ; 1 bytes @ 0x42
  3767  0062                     	ds	1
  3768  0063                     ??_DimmerLights_Main:	
  3769  0063                     setRF_DimmerValue@lights:	
  3770                           ; 0 bytes @ 0x43
  3771                           
  3772                           
  3773                           ; 1 bytes @ 0x43
  3774  0063                     	ds	1
  3775  0064                     ??_setRFSW_AdjControl:	
  3776                           
  3777                           ; 0 bytes @ 0x44
  3778  0064                     	ds	2
  3779  0066                     setRFSW_AdjControl@sw:	
  3780                           
  3781                           ; 1 bytes @ 0x46
  3782  0066                     	ds	1
  3783  0067                     ??_setControl_Lights_Table:	
  3784  0067                     setControl_Lights_Table@rf:	
  3785                           ; 0 bytes @ 0x47
  3786                           
  3787                           
  3788                           ; 1 bytes @ 0x47
  3789  0067                     	ds	1
  3790  0068                     ??_getRxData:	
  3791  0068                     getRxData@rf:	
  3792                           ; 0 bytes @ 0x48
  3793                           
  3794                           
  3795                           ; 1 bytes @ 0x48
  3796  0068                     	ds	1
  3797  0069                     ??_setRF_Main:	
  3798                           
  3799                           ; 0 bytes @ 0x49
  3800  0069                     	ds	1
  3801  006A                     setRF_Main@rf:	
  3802                           
  3803                           ; 1 bytes @ 0x4A
  3804  006A                     	ds	1
  3805  006B                     _setRF_Main$4359:	
  3806                           
  3807                           ; 1 bytes @ 0x4B
  3808  006B                     	ds	1
  3809  006C                     ??_RF_Main:	
  3810  006C                     ??_main:	
  3811                           ; 0 bytes @ 0x4C
  3812                           
  3813                           
  3814                           	psect	maintext
  3815  0791                     __pmaintext:	
  3816                           ; 0 bytes @ 0x4C
  3817 ;;
  3818 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3819 ;;
  3820 ;; *************** function _main *****************
  3821 ;; Defined at:
  3822 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;		None               void
  3829 ;; Registers used:
  3830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 17F/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels required when called:   14
  3842 ;; This function calls:
  3843 ;;		_Buzzer_Initialization
  3844 ;;		_Buzzer_Main
  3845 ;;		_CC2500_PowerOnInitial
  3846 ;;		_DelayOff_Initialization
  3847 ;;		_DelayOff_Main
  3848 ;;		_DimmerLights_Initialization
  3849 ;;		_DimmerLights_Main
  3850 ;;		_Flash_Memory_Initialization
  3851 ;;		_Flash_Memory_Main
  3852 ;;		_LED_Initialization
  3853 ;;		_LED_Main
  3854 ;;		_Load_Initialization
  3855 ;;		_Load_Main
  3856 ;;		_MainT
  3857 ;;		_MainT_Initialization
  3858 ;;		_Mcu_Initialization
  3859 ;;		_PowerFault_Initialization
  3860 ;;		_PowerFault_Main
  3861 ;;		_RF_Initialization
  3862 ;;		_RF_Main
  3863 ;;		_Switch_Initialization
  3864 ;;		_Switch_Main
  3865 ;;		_Temp_Initialization
  3866 ;;		_Temp_Main
  3867 ;;		_getLoad_AD
  3868 ;;		_getPowerFault_AD
  3869 ;;		_getTemp_AD
  3870 ;; This function is called by:
  3871 ;;		Startup code after reset
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _main
  3877  0791                     _main:	
  3878                           
  3879                           ;main.c: 9: MainT_Initialization();
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3883  0791  31A5  25D0  3187   	fcall	_MainT_Initialization
  3884                           
  3885                           ;main.c: 10: Mcu_Initialization();
  3886  0794  31A6  2613  3187   	fcall	_Mcu_Initialization
  3887                           
  3888                           ;main.c: 11: Flash_Memory_Initialization();
  3889  0797  318A  22AE  3187   	fcall	_Flash_Memory_Initialization
  3890                           
  3891                           ;main.c: 12: LED_Initialization();
  3892  079A  31A4  243C  3187   	fcall	_LED_Initialization
  3893                           
  3894                           ;main.c: 13: Buzzer_Initialization();
  3895  079D  31A3  23B4  3187   	fcall	_Buzzer_Initialization
  3896                           
  3897                           ;main.c: 15: ;;
  3898                           ;main.c: 16: Temp_Initialization();
  3899  07A0  31A3  2324  3187   	fcall	_Temp_Initialization
  3900                           
  3901                           ;main.c: 17: Load_Initialization();
  3902  07A3  31A4  2454  3187   	fcall	_Load_Initialization
  3903                           
  3904                           ;main.c: 18: PowerFault_Initialization();
  3905  07A6  31A3  231E  3187   	fcall	_PowerFault_Initialization
  3906                           
  3907                           ;main.c: 19: DelayOff_Initialization();
  3908  07A9  31A3  2370  3187   	fcall	_DelayOff_Initialization
  3909                           
  3910                           ;main.c: 21: DimmerLights_Initialization();
  3911  07AC  31A5  25A5  3187   	fcall	_DimmerLights_Initialization
  3912                           
  3913                           ;main.c: 22: ;;
  3914                           ;main.c: 23: ;;
  3915                           ;main.c: 24: ;;
  3916                           ;main.c: 26: Switch_Initialization();
  3917  07AF  31A4  247B  3187   	fcall	_Switch_Initialization
  3918                           
  3919                           ;main.c: 27: RF_Initialization();
  3920  07B2  31A3  2336  3187   	fcall	_RF_Initialization
  3921                           
  3922                           ;main.c: 28: CC2500_PowerOnInitial();
  3923  07B5  31A5  2590  3187   	fcall	_CC2500_PowerOnInitial
  3924  07B8                     l10179:	
  3925                           ;main.c: 30: while(1)
  3926                           
  3927                           
  3928                           ;main.c: 31: {
  3929                           ;main.c: 32: if(TMain->PowerON)
  3930  07B8  0021               	movlb	1	; select bank1
  3931  07B9  0869               	movf	_TMain^(0+128),w
  3932  07BA  0086               	movwf	6
  3933  07BB  3001               	movlw	1	; select bank2/3
  3934  07BC  0087               	movwf	7
  3935  07BD  1C01               	btfss	1,0
  3936  07BE  2FCE               	goto	l10183
  3937                           
  3938                           ;main.c: 33: {
  3939                           ;main.c: 35: ;;
  3940                           ;main.c: 39: getLoad_AD(0x05);
  3941  07BF  3005               	movlw	5
  3942  07C0  3197  276A  3187   	fcall	_getLoad_AD
  3943                           
  3944                           ;main.c: 43: getTemp_AD(0x09);
  3945  07C3  3009               	movlw	9
  3946  07C4  3192  220C  3187   	fcall	_getTemp_AD
  3947                           
  3948                           ;main.c: 47: getPowerFault_AD(0x11);
  3949  07C7  3011               	movlw	17
  3950  07C8  319C  2471  3187   	fcall	_getPowerFault_AD
  3951                           
  3952                           ;main.c: 59: Buzzer_Main();
  3953  07CB  3188  20A9  3187   	fcall	_Buzzer_Main
  3954  07CE                     l10183:	
  3955                           
  3956                           ;main.c: 61: }
  3957                           ;main.c: 63: if(TMain->T0_Timerout)
  3958  07CE  0021               	movlb	1	; select bank1
  3959  07CF  0869               	movf	_TMain^(0+128),w
  3960  07D0  0086               	movwf	6
  3961  07D1  3001               	movlw	1	; select bank2/3
  3962  07D2  0087               	movwf	7
  3963  07D3  1C81               	btfss	1,1
  3964  07D4  2FB8               	goto	l10179
  3965                           
  3966                           ;main.c: 64: {
  3967                           ;main.c: 65: TMain->T0_Timerout = 0;
  3968  07D5  0869               	movf	_TMain^(0+128),w
  3969  07D6  0086               	movwf	6
  3970  07D7  3001               	movlw	1	; select bank2/3
  3971  07D8  0087               	movwf	7
  3972  07D9  1081               	bcf	1,1
  3973                           
  3974                           ;main.c: 66: MainT();
  3975  07DA  3194  24CA  3187   	fcall	_MainT
  3976                           
  3977                           ;main.c: 67: if(TMain->PowerON)
  3978  07DD  0021               	movlb	1	; select bank1
  3979  07DE  0869               	movf	_TMain^(0+128),w
  3980  07DF  0086               	movwf	6
  3981  07E0  3001               	movlw	1	; select bank2/3
  3982  07E1  0087               	movwf	7
  3983  07E2  1C01               	btfss	1,0
  3984  07E3  2FB8               	goto	l10179
  3985                           
  3986                           ;main.c: 68: {
  3987                           ;main.c: 69: Flash_Memory_Main();
  3988  07E4  319E  2653  3187   	fcall	_Flash_Memory_Main
  3989                           
  3990                           ;main.c: 71: LED_Main();
  3991  07E7  31A4  2448  3187   	fcall	_LED_Main
  3992                           
  3993                           ;main.c: 73: ;;
  3994                           ;main.c: 74: Temp_Main();
  3995  07EA  31A3  2327  3187   	fcall	_Temp_Main
  3996                           
  3997                           ;main.c: 75: Load_Main();
  3998  07ED  3180  2059  3187   	fcall	_Load_Main
  3999                           
  4000                           ;main.c: 76: PowerFault_Main();
  4001  07F0  31A3  2321  3187   	fcall	_PowerFault_Main
  4002                           
  4003                           ;main.c: 78: ;;
  4004                           ;main.c: 79: DimmerLights_Main();
  4005  07F3  31A3  23E0  3187   	fcall	_DimmerLights_Main
  4006                           
  4007                           ;main.c: 80: Switch_Main();
  4008  07F6  31A3  2390  3187   	fcall	_Switch_Main
  4009                           
  4010                           ;main.c: 81: ;;
  4011                           ;main.c: 82: ;;
  4012                           ;main.c: 84: RF_Main();
  4013  07F9  31A3  233A  3187   	fcall	_RF_Main
  4014                           
  4015                           ;main.c: 85: DelayOff_Main();
  4016  07FC  31A3  2378  3187   	fcall	_DelayOff_Main
  4017  07FF  2FB8               	goto	l10179
  4018  0800                     __end_of_main:	
  4019                           
  4020                           	psect	text1
  4021  120C                     __ptext1:	
  4022 ;; *************** function _getTemp_AD *****************
  4023 ;; Defined at:
  4024 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  channel         1    wreg     unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  channel         1    8[BANK0 ] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4040 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4042 ;;Total ram usage:        5 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    5
  4045 ;; This function calls:
  4046 ;;		_getAD
  4047 ;; This function is called by:
  4048 ;;		_main
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _getTemp_AD
  4054  120C                     _getTemp_AD:	
  4055                           
  4056                           ;incstack = 0
  4057                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4058                           ;getTemp_AD@channel stored from wreg
  4059  120C  0020               	movlb	0	; select bank0
  4060  120D  00A8               	movwf	getTemp_AD@channel
  4061                           
  4062                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  4063  120E  087D               	movf	_Temp,w
  4064  120F  0086               	movwf	6
  4065  1210  3001               	movlw	1	; select bank2/3
  4066  1211  0087               	movwf	7
  4067  1212  1D01               	btfss	1,2
  4068  1213  0008               	return
  4069                           
  4070                           ;OverTemperature_B1.c: 38: {
  4071                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  4072  1214  30F0               	movlw	240
  4073  1215  00A4               	movwf	??_getTemp_AD
  4074  1216  0824               	movf	??_getTemp_AD,w
  4075  1217  00A0               	movwf	getAD@adcon1
  4076  1218  0828               	movf	getTemp_AD@channel,w
  4077  1219  31A5  25E6  3192   	fcall	_getAD
  4078  121C  087D               	movf	_Temp,w
  4079  121D  3E0A               	addlw	10
  4080  121E  0086               	movwf	6
  4081  121F  3001               	movlw	1	; select bank2/3
  4082  1220  0087               	movwf	7
  4083  1221  0020               	movlb	0	; select bank0
  4084  1222  0820               	movf	?_getAD,w
  4085  1223  3FC0               	movwi [0]fsr1
  4086  1224  0821               	movf	?_getAD+1,w
  4087  1225  3FC1               	movwi [1]fsr1
  4088                           
  4089                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  4090  1226  087D               	movf	_Temp,w
  4091  1227  3E0A               	addlw	10
  4092  1228  0086               	movwf	6
  4093  1229  3001               	movlw	1	; select bank2/3
  4094  122A  0087               	movwf	7
  4095  122B  3F40               	moviw [0]fsr1
  4096  122C  00A4               	movwf	??_getTemp_AD
  4097  122D  3F41               	moviw [1]fsr1
  4098  122E  00A5               	movwf	??_getTemp_AD+1
  4099  122F  087D               	movf	_Temp,w
  4100  1230  3E06               	addlw	6
  4101  1231  0086               	movwf	6
  4102  1232  3001               	movlw	1	; select bank2/3
  4103  1233  0087               	movwf	7
  4104  1234  3F40               	moviw [0]fsr1
  4105  1235  00A6               	movwf	??_getTemp_AD+2
  4106  1236  3F41               	moviw [1]fsr1
  4107  1237  00A7               	movwf	??_getTemp_AD+3
  4108  1238  0825               	movf	??_getTemp_AD+1,w
  4109  1239  0227               	subwf	??_getTemp_AD+3,w
  4110  123A  1D03               	skipz
  4111  123B  2A3E               	goto	u9885
  4112  123C  0824               	movf	??_getTemp_AD,w
  4113  123D  0226               	subwf	??_getTemp_AD+2,w
  4114  123E                     u9885:	
  4115  123E  1803               	skipnc
  4116  123F  2A4F               	goto	l9921
  4117                           
  4118                           ;OverTemperature_B1.c: 41: {
  4119                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  4120  1240  087D               	movf	_Temp,w
  4121  1241  3E0A               	addlw	10
  4122  1242  0086               	movwf	6
  4123  1243  3001               	movlw	1	; select bank2/3
  4124  1244  0087               	movwf	7
  4125  1245  087D               	movf	_Temp,w
  4126  1246  3E06               	addlw	6
  4127  1247  0084               	movwf	4
  4128  1248  3001               	movlw	1	; select bank2/3
  4129  1249  0085               	movwf	5
  4130  124A  3F40               	moviw [0]fsr1
  4131  124B  3F80               	movwi [0]fsr0
  4132  124C  3F41               	moviw [1]fsr1
  4133  124D  3F81               	movwi [1]fsr0
  4134                           
  4135                           ;OverTemperature_B1.c: 43: }
  4136  124E  0008               	return
  4137  124F                     l9921:	
  4138                           
  4139                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  4140  124F  087D               	movf	_Temp,w
  4141  1250  3E0A               	addlw	10
  4142  1251  0086               	movwf	6
  4143  1252  3001               	movlw	1	; select bank2/3
  4144  1253  0087               	movwf	7
  4145  1254  3F40               	moviw [0]fsr1
  4146  1255  00A4               	movwf	??_getTemp_AD
  4147  1256  3F41               	moviw [1]fsr1
  4148  1257  00A5               	movwf	??_getTemp_AD+1
  4149  1258  087D               	movf	_Temp,w
  4150  1259  3E08               	addlw	8
  4151  125A  0086               	movwf	6
  4152  125B  3001               	movlw	1	; select bank2/3
  4153  125C  0087               	movwf	7
  4154  125D  3F40               	moviw [0]fsr1
  4155  125E  00A6               	movwf	??_getTemp_AD+2
  4156  125F  3F41               	moviw [1]fsr1
  4157  1260  00A7               	movwf	??_getTemp_AD+3
  4158  1261  0825               	movf	??_getTemp_AD+1,w
  4159  1262  0227               	subwf	??_getTemp_AD+3,w
  4160  1263  1D03               	skipz
  4161  1264  2A67               	goto	u9895
  4162  1265  0824               	movf	??_getTemp_AD,w
  4163  1266  0226               	subwf	??_getTemp_AD+2,w
  4164  1267                     u9895:	
  4165  1267  1803               	skipnc
  4166  1268  0008               	return
  4167                           
  4168                           ;OverTemperature_B1.c: 45: {
  4169                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  4170  1269  087D               	movf	_Temp,w
  4171  126A  3E0A               	addlw	10
  4172  126B  0086               	movwf	6
  4173  126C  3001               	movlw	1	; select bank2/3
  4174  126D  0087               	movwf	7
  4175  126E  087D               	movf	_Temp,w
  4176  126F  3E08               	addlw	8
  4177  1270  0084               	movwf	4
  4178  1271  3001               	movlw	1	; select bank2/3
  4179  1272  0085               	movwf	5
  4180  1273  3F40               	moviw [0]fsr1
  4181  1274  3F80               	movwi [0]fsr0
  4182  1275  3F41               	moviw [1]fsr1
  4183  1276  3F81               	movwi [1]fsr0
  4184  1277  0008               	return
  4185  1278                     __end_of_getTemp_AD:	
  4186                           
  4187                           	psect	text2
  4188  1C71                     __ptext2:	
  4189 ;; *************** function _getPowerFault_AD *****************
  4190 ;; Defined at:
  4191 ;;		line 49 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  channel         1    wreg     unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  channel         1    8[BANK0 ] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;		None               void
  4198 ;; Registers used:
  4199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4208 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;Total ram usage:        5 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    5
  4212 ;; This function calls:
  4213 ;;		_getAD
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _getPowerFault_AD
  4221  1C71                     _getPowerFault_AD:	
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4225                           ;getPowerFault_AD@channel stored from wreg
  4226  1C71  0020               	movlb	0	; select bank0
  4227  1C72  00A8               	movwf	getPowerFault_AD@channel
  4228                           
  4229                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
  4230  1C73  087B               	movf	_PF,w
  4231  1C74  0086               	movwf	6
  4232  1C75  3001               	movlw	1	; select bank2/3
  4233  1C76  0087               	movwf	7
  4234  1C77  1D81               	btfss	1,3
  4235  1C78  0008               	return
  4236                           
  4237                           ;PowerFault_B1.c: 52: {
  4238                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
  4239  1C79  30F0               	movlw	240
  4240  1C7A  00A4               	movwf	??_getPowerFault_AD
  4241  1C7B  0824               	movf	??_getPowerFault_AD,w
  4242  1C7C  00A0               	movwf	getAD@adcon1
  4243  1C7D  0828               	movf	getPowerFault_AD@channel,w
  4244  1C7E  31A5  25E6  319C   	fcall	_getAD
  4245  1C81  087B               	movf	_PF,w
  4246  1C82  3E03               	addlw	3
  4247  1C83  0086               	movwf	6
  4248  1C84  3001               	movlw	1	; select bank2/3
  4249  1C85  0087               	movwf	7
  4250  1C86  0020               	movlb	0	; select bank0
  4251  1C87  0820               	movf	?_getAD,w
  4252  1C88  3FC0               	movwi [0]fsr1
  4253  1C89  0821               	movf	?_getAD+1,w
  4254  1C8A  3FC1               	movwi [1]fsr1
  4255                           
  4256                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
  4257  1C8B  087B               	movf	_PF,w
  4258  1C8C  3E03               	addlw	3
  4259  1C8D  0086               	movwf	6
  4260  1C8E  3001               	movlw	1	; select bank2/3
  4261  1C8F  0087               	movwf	7
  4262  1C90  3F40               	moviw [0]fsr1
  4263  1C91  00A4               	movwf	??_getPowerFault_AD
  4264  1C92  3F41               	moviw [1]fsr1
  4265  1C93  00A5               	movwf	??_getPowerFault_AD+1
  4266  1C94  0A7B               	incf	_PF,w
  4267  1C95  0086               	movwf	6
  4268  1C96  3001               	movlw	1	; select bank2/3
  4269  1C97  0087               	movwf	7
  4270  1C98  3F40               	moviw [0]fsr1
  4271  1C99  00A6               	movwf	??_getPowerFault_AD+2
  4272  1C9A  3F41               	moviw [1]fsr1
  4273  1C9B  00A7               	movwf	??_getPowerFault_AD+3
  4274  1C9C  0825               	movf	??_getPowerFault_AD+1,w
  4275  1C9D  0227               	subwf	??_getPowerFault_AD+3,w
  4276  1C9E  1D03               	skipz
  4277  1C9F  2CA2               	goto	u9915
  4278  1CA0  0824               	movf	??_getPowerFault_AD,w
  4279  1CA1  0226               	subwf	??_getPowerFault_AD+2,w
  4280  1CA2                     u9915:	
  4281  1CA2  1803               	skipnc
  4282  1CA3  0008               	return
  4283                           
  4284                           ;PowerFault_B1.c: 55: {
  4285                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
  4286  1CA4  087B               	movf	_PF,w
  4287  1CA5  3E03               	addlw	3
  4288  1CA6  0086               	movwf	6
  4289  1CA7  3001               	movlw	1	; select bank2/3
  4290  1CA8  0087               	movwf	7
  4291  1CA9  0A7B               	incf	_PF,w
  4292  1CAA  0084               	movwf	4
  4293  1CAB  3001               	movlw	1	; select bank2/3
  4294  1CAC  0085               	movwf	5
  4295  1CAD  3F40               	moviw [0]fsr1
  4296  1CAE  3F80               	movwi [0]fsr0
  4297  1CAF  3F41               	moviw [1]fsr1
  4298  1CB0  3F81               	movwi [1]fsr0
  4299  1CB1  0008               	return
  4300  1CB2                     __end_of_getPowerFault_AD:	
  4301                           
  4302                           	psect	text3
  4303  176A                     __ptext3:	
  4304 ;; *************** function _getLoad_AD *****************
  4305 ;; Defined at:
  4306 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  channel         1    wreg     unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  channel         1    9[BANK0 ] unsigned char 
  4311 ;;  i               1   11[BANK0 ] unsigned char 
  4312 ;;  j               1   10[BANK0 ] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;		None               void
  4315 ;; Registers used:
  4316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;Total ram usage:        8 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    5
  4329 ;; This function calls:
  4330 ;;		_getAD
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           
  4337                           ;psect for function _getLoad_AD
  4338  176A                     _getLoad_AD:	
  4339                           
  4340                           ;incstack = 0
  4341                           ; Regs used in _getLoad_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4342                           ;getLoad_AD@channel stored from wreg
  4343  176A  0020               	movlb	0	; select bank0
  4344  176B  00A9               	movwf	getLoad_AD@channel
  4345                           
  4346                           ;OverLoad_B1.c: 17: char i=0,j=0;
  4347  176C  01AB               	clrf	getLoad_AD@i
  4348  176D  01AA               	clrf	getLoad_AD@j
  4349                           
  4350                           ;OverLoad_B1.c: 19: if(Load->ADtoGO)
  4351  176E  086E               	movf	_Load,w
  4352  176F  0086               	movwf	6
  4353  1770  3002               	movlw	2	; select bank4/5
  4354  1771  0087               	movwf	7
  4355  1772  1E01               	btfss	1,4
  4356  1773  0008               	return
  4357                           
  4358                           ;OverLoad_B1.c: 20: {
  4359                           ;OverLoad_B1.c: 21: Load->ADRES=getAD(channel,0xc0);
  4360  1774  30C0               	movlw	192
  4361  1775  00A4               	movwf	??_getLoad_AD
  4362  1776  0824               	movf	??_getLoad_AD,w
  4363  1777  00A0               	movwf	getAD@adcon1
  4364  1778  0829               	movf	getLoad_AD@channel,w
  4365  1779  31A5  25E6  3197   	fcall	_getAD
  4366  177C  0020               	movlb	0	; select bank0
  4367  177D  086E               	movf	_Load,w
  4368  177E  3E32               	addlw	50
  4369  177F  0086               	movwf	6
  4370  1780  3002               	movlw	2	; select bank4/5
  4371  1781  0087               	movwf	7
  4372  1782  0820               	movf	?_getAD,w
  4373  1783  3FC0               	movwi [0]fsr1
  4374  1784  0821               	movf	?_getAD+1,w
  4375  1785  3FC1               	movwi [1]fsr1
  4376                           
  4377                           ;OverLoad_B1.c: 22: for(i=0 ; i<5 ;i++)
  4378  1786  01AB               	clrf	getLoad_AD@i
  4379  1787  3005               	movlw	5
  4380  1788  022B               	subwf	getLoad_AD@i,w
  4381  1789  1803               	btfsc	3,0
  4382  178A  2FC4               	goto	l9897
  4383  178B                     l9887:	
  4384                           
  4385                           ;OverLoad_B1.c: 23: {
  4386                           ;OverLoad_B1.c: 24: if(Load->AH[i] < Load->ADRES)
  4387  178B  086E               	movf	_Load,w
  4388  178C  3E32               	addlw	50
  4389  178D  0086               	movwf	6
  4390  178E  3002               	movlw	2	; select bank4/5
  4391  178F  0087               	movwf	7
  4392  1790  3F40               	moviw [0]fsr1
  4393  1791  00A4               	movwf	??_getLoad_AD
  4394  1792  3F41               	moviw [1]fsr1
  4395  1793  00A5               	movwf	??_getLoad_AD+1
  4396  1794  352B               	lslf	getLoad_AD@i,w
  4397  1795  3E08               	addlw	8
  4398  1796  076E               	addwf	_Load,w
  4399  1797  00A6               	movwf	??_getLoad_AD+2
  4400  1798  0826               	movf	??_getLoad_AD+2,w
  4401  1799  0086               	movwf	6
  4402  179A  3002               	movlw	2	; select bank4/5
  4403  179B  0087               	movwf	7
  4404  179C  3F40               	moviw [0]fsr1
  4405  179D  00A7               	movwf	??_getLoad_AD+3
  4406  179E  3F41               	moviw [1]fsr1
  4407  179F  00A8               	movwf	??_getLoad_AD+4
  4408  17A0  0825               	movf	??_getLoad_AD+1,w
  4409  17A1  0228               	subwf	??_getLoad_AD+4,w
  4410  17A2  1D03               	skipz
  4411  17A3  2FA6               	goto	u9815
  4412  17A4  0824               	movf	??_getLoad_AD,w
  4413  17A5  0227               	subwf	??_getLoad_AD+3,w
  4414  17A6                     u9815:	
  4415  17A6  1803               	skipnc
  4416  17A7  2FBC               	goto	l9893
  4417                           
  4418                           ;OverLoad_B1.c: 25: {
  4419                           ;OverLoad_B1.c: 26: Load->AH[i]=Load->ADRES;
  4420  17A8  086E               	movf	_Load,w
  4421  17A9  3E32               	addlw	50
  4422  17AA  0086               	movwf	6
  4423  17AB  3002               	movlw	2	; select bank4/5
  4424  17AC  0087               	movwf	7
  4425  17AD  352B               	lslf	getLoad_AD@i,w
  4426  17AE  3E08               	addlw	8
  4427  17AF  076E               	addwf	_Load,w
  4428  17B0  00A4               	movwf	??_getLoad_AD
  4429  17B1  0824               	movf	??_getLoad_AD,w
  4430  17B2  0084               	movwf	4
  4431  17B3  3002               	movlw	2	; select bank4/5
  4432  17B4  0085               	movwf	5
  4433  17B5  3F40               	moviw [0]fsr1
  4434  17B6  3F80               	movwi [0]fsr0
  4435  17B7  3F41               	moviw [1]fsr1
  4436  17B8  3F81               	movwi [1]fsr0
  4437                           
  4438                           ;OverLoad_B1.c: 27: j=1;
  4439  17B9  01AA               	clrf	getLoad_AD@j
  4440  17BA  0AAA               	incf	getLoad_AD@j,f
  4441                           
  4442                           ;OverLoad_B1.c: 28: break;
  4443  17BB  2FC4               	goto	l9897
  4444  17BC                     l9893:	
  4445  17BC  3001               	movlw	1
  4446  17BD  00A4               	movwf	??_getLoad_AD
  4447  17BE  0824               	movf	??_getLoad_AD,w
  4448  17BF  07AB               	addwf	getLoad_AD@i,f
  4449  17C0  3005               	movlw	5
  4450  17C1  022B               	subwf	getLoad_AD@i,w
  4451  17C2  1C03               	skipc
  4452  17C3  2F8B               	goto	l9887
  4453  17C4                     l9897:	
  4454                           
  4455                           ;OverLoad_B1.c: 29: }
  4456                           ;OverLoad_B1.c: 30: }
  4457                           ;OverLoad_B1.c: 31: if(!j)
  4458  17C4  08AA               	movf	getLoad_AD@j,f
  4459  17C5  1D03               	skipz
  4460  17C6  0008               	return
  4461                           
  4462                           ;OverLoad_B1.c: 32: {
  4463                           ;OverLoad_B1.c: 33: for(i=0 ; i<5 ;i++)
  4464  17C7  01AB               	clrf	getLoad_AD@i
  4465  17C8                     L1:	
  4466  17C8  3005               	movlw	5
  4467  17C9  022B               	subwf	getLoad_AD@i,w
  4468  17CA  1803               	btfsc	3,0
  4469  17CB  0008               	return
  4470                           
  4471                           ;OverLoad_B1.c: 34: {
  4472                           ;OverLoad_B1.c: 35: if(Load->AL[i] > Load->ADRES)
  4473  17CC  352B               	lslf	getLoad_AD@i,w
  4474  17CD  3E1A               	addlw	26
  4475  17CE  076E               	addwf	_Load,w
  4476  17CF  00A4               	movwf	??_getLoad_AD
  4477  17D0  0824               	movf	??_getLoad_AD,w
  4478  17D1  0086               	movwf	6
  4479  17D2  3002               	movlw	2	; select bank4/5
  4480  17D3  0087               	movwf	7
  4481  17D4  3F40               	moviw [0]fsr1
  4482  17D5  00A5               	movwf	??_getLoad_AD+1
  4483  17D6  3F41               	moviw [1]fsr1
  4484  17D7  00A6               	movwf	??_getLoad_AD+2
  4485  17D8  086E               	movf	_Load,w
  4486  17D9  3E32               	addlw	50
  4487  17DA  0086               	movwf	6
  4488  17DB  3002               	movlw	2	; select bank4/5
  4489  17DC  0087               	movwf	7
  4490  17DD  3F40               	moviw [0]fsr1
  4491  17DE  00A7               	movwf	??_getLoad_AD+3
  4492  17DF  3F41               	moviw [1]fsr1
  4493  17E0  00A8               	movwf	??_getLoad_AD+4
  4494  17E1  0826               	movf	??_getLoad_AD+2,w
  4495  17E2  0228               	subwf	??_getLoad_AD+4,w
  4496  17E3  1D03               	skipz
  4497  17E4  2FE7               	goto	u9855
  4498  17E5  0825               	movf	??_getLoad_AD+1,w
  4499  17E6  0227               	subwf	??_getLoad_AD+3,w
  4500  17E7                     u9855:	
  4501  17E7  1803               	skipnc
  4502  17E8  2FFB               	goto	l9909
  4503                           
  4504                           ;OverLoad_B1.c: 36: {
  4505                           ;OverLoad_B1.c: 37: Load->AL[i]=Load->ADRES;
  4506  17E9  086E               	movf	_Load,w
  4507  17EA  3E32               	addlw	50
  4508  17EB  0086               	movwf	6
  4509  17EC  3002               	movlw	2	; select bank4/5
  4510  17ED  0087               	movwf	7
  4511  17EE  352B               	lslf	getLoad_AD@i,w
  4512  17EF  3E1A               	addlw	26
  4513  17F0  076E               	addwf	_Load,w
  4514  17F1  00A4               	movwf	??_getLoad_AD
  4515  17F2  0824               	movf	??_getLoad_AD,w
  4516  17F3  0084               	movwf	4
  4517  17F4  3002               	movlw	2	; select bank4/5
  4518  17F5  0085               	movwf	5
  4519  17F6  3F40               	moviw [0]fsr1
  4520  17F7  3F80               	movwi [0]fsr0
  4521  17F8  3F41               	moviw [1]fsr1
  4522  17F9  3F81               	movwi [1]fsr0
  4523                           
  4524                           ;OverLoad_B1.c: 38: break;
  4525  17FA  0008               	return
  4526  17FB                     l9909:	
  4527  17FB  3001               	movlw	1
  4528  17FC  00A4               	movwf	??_getLoad_AD
  4529  17FD  0824               	movf	??_getLoad_AD,w
  4530  17FE  07AB               	addwf	getLoad_AD@i,f
  4531  17FF  2FC8               	goto	L1
  4532  1800                     __end_of_getLoad_AD:	
  4533                           
  4534                           	psect	text4
  4535  25E6                     __ptext4:	
  4536 ;; *************** function _getAD *****************
  4537 ;; Defined at:
  4538 ;;		line 309 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  adcon0          1    wreg     unsigned char 
  4541 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  2    0[BANK0 ] int 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2, status,0
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4553 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;Total ram usage:        4 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    4
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_getLoad_AD
  4564 ;;		_getTemp_AD
  4565 ;;		_getPowerFault_AD
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           
  4570                           ;psect for function _getAD
  4571  25E6                     _getAD:	
  4572                           
  4573                           ;incstack = 0
  4574                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4575                           ;getAD@adcon0 stored from wreg
  4576  25E6  0020               	movlb	0	; select bank0
  4577  25E7  00A3               	movwf	getAD@adcon0
  4578                           
  4579                           ;MCU_16f1518_B1.c: 311: ADCON0=adcon0;
  4580  25E8  0823               	movf	getAD@adcon0,w
  4581  25E9  0021               	movlb	1	; select bank1
  4582  25EA  009D               	movwf	29	;volatile
  4583                           
  4584                           ;MCU_16f1518_B1.c: 312: ADCON1=adcon1;
  4585  25EB  0020               	movlb	0	; select bank0
  4586  25EC  0820               	movf	getAD@adcon1,w
  4587  25ED  0021               	movlb	1	; select bank1
  4588  25EE  009E               	movwf	30	;volatile
  4589                           
  4590                           ;MCU_16f1518_B1.c: 313: GO_nDONE=1;
  4591  25EF  149D               	bsf	29,1	;volatile
  4592  25F0                     l1724:	
  4593                           ;MCU_16f1518_B1.c: 314: while(GO_nDONE);
  4594                           
  4595  25F0  189D               	btfsc	29,1	;volatile
  4596  25F1  2DF0               	goto	l1724
  4597                           
  4598                           ;MCU_16f1518_B1.c: 315: return ((ADRESH*256)+ADRESL);
  4599  25F2  081C               	movf	28,w	;volatile
  4600  25F3  0020               	movlb	0	; select bank0
  4601  25F4  01A1               	clrf	?_getAD+1
  4602  25F5  07A1               	addwf	?_getAD+1,f
  4603  25F6  0021               	movlb	1	; select bank1
  4604  25F7  081B               	movf	27,w	;volatile
  4605  25F8  0020               	movlb	0	; select bank0
  4606  25F9  01A0               	clrf	?_getAD
  4607  25FA  07A0               	addwf	?_getAD,f
  4608  25FB  0008               	return
  4609  25FC                     __end_of_getAD:	
  4610                           
  4611                           	psect	text5
  4612  2327                     __ptext5:	
  4613 ;; *************** function _Temp_Main *****************
  4614 ;; Defined at:
  4615 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;		None               void
  4622 ;; Registers used:
  4623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:   10
  4636 ;; This function calls:
  4637 ;;		_setTemp_Main
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _Temp_Main
  4645  2327                     _Temp_Main:	
  4646                           
  4647                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4651  2327  318D  258A         	fcall	_setTemp_Main
  4652  2329  0008               	return
  4653  232A                     __end_of_Temp_Main:	
  4654                           
  4655                           	psect	text6
  4656  0D8A                     __ptext6:	
  4657 ;; *************** function _setTemp_Main *****************
  4658 ;; Defined at:
  4659 ;;		line 64 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;		None               void
  4666 ;; Registers used:
  4667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;Total ram usage:        3 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    9
  4680 ;; This function calls:
  4681 ;;		_getLoad_Safe
  4682 ;;		_getPF_Safe
  4683 ;;		_setOverTemp_Exceptions
  4684 ;; This function is called by:
  4685 ;;		_Temp_Main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _setTemp_Main
  4691  0D8A                     _setTemp_Main:	
  4692                           
  4693                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  4694                           
  4695                           ;incstack = 0
  4696                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4697  0D8A  087D               	movf	_Temp,w
  4698  0D8B  0086               	movwf	6
  4699  0D8C  3001               	movlw	1	; select bank2/3
  4700  0D8D  0087               	movwf	7
  4701  0D8E  1C01               	btfss	1,0
  4702  0D8F  0008               	return
  4703                           
  4704                           ;OverTemperature_B1.c: 67: {
  4705                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  4706  0D90  087D               	movf	_Temp,w
  4707  0D91  0086               	movwf	6
  4708  0D92  3001               	movlw	1	; select bank2/3
  4709  0D93  0087               	movwf	7
  4710  0D94  1901               	btfsc	1,2
  4711  0D95  2DD6               	goto	l9533
  4712                           
  4713                           ;OverTemperature_B1.c: 69: {
  4714                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4715  0D96  0A7D               	incf	_Temp,w
  4716  0D97  0086               	movwf	6
  4717  0D98  3001               	movlw	1	; select bank2/3
  4718  0D99  0087               	movwf	7
  4719  0D9A  3001               	movlw	1
  4720  0D9B  0781               	addwf	1,f
  4721  0D9C  3141               	addfsr 1,1
  4722  0D9D  1803               	skipnc
  4723  0D9E  0A81               	incf	1,f
  4724                           
  4725                           ;OverTemperature_B1.c: 71: if(Temp->Time >= 500)
  4726  0D9F  0A7D               	incf	_Temp,w
  4727  0DA0  0086               	movwf	6
  4728  0DA1  3001               	movlw	1	; select bank2/3
  4729  0DA2  0087               	movwf	7
  4730  0DA3  3F40               	moviw [0]fsr1
  4731  0DA4  0020               	movlb	0	; select bank0
  4732  0DA5  00AD               	movwf	??_setTemp_Main
  4733  0DA6  3F41               	moviw [1]fsr1
  4734  0DA7  00AE               	movwf	??_setTemp_Main+1
  4735  0DA8  3001               	movlw	1
  4736  0DA9  022E               	subwf	??_setTemp_Main+1,w
  4737  0DAA  30F4               	movlw	244
  4738  0DAB  1903               	skipnz
  4739  0DAC  022D               	subwf	??_setTemp_Main,w
  4740  0DAD  1C03               	skipc
  4741  0DAE  0008               	return
  4742                           
  4743                           ;OverTemperature_B1.c: 72: {
  4744                           ;OverTemperature_B1.c: 73: if(getLoad_Safe() && getPF_Safe())
  4745  0DAF  31A3  23F6  318D   	fcall	_getLoad_Safe
  4746  0DB2  3A00               	xorlw	0
  4747  0DB3  1903               	skipnz
  4748  0DB4  2DCD               	goto	l9531
  4749  0DB5  31A3  2380  318D   	fcall	_getPF_Safe
  4750  0DB8  3A00               	xorlw	0
  4751  0DB9  1903               	skipnz
  4752  0DBA  2DCD               	goto	l9531
  4753                           
  4754                           ;OverTemperature_B1.c: 74: {
  4755                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4756  0DBB  0A7D               	incf	_Temp,w
  4757  0DBC  0086               	movwf	6
  4758  0DBD  3001               	movlw	1	; select bank2/3
  4759  0DBE  0087               	movwf	7
  4760  0DBF  3000               	movlw	0
  4761  0DC0  3FC0               	movwi [0]fsr1
  4762  0DC1  3FC1               	movwi [1]fsr1
  4763                           
  4764                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4765  0DC2  087D               	movf	_Temp,w
  4766  0DC3  0086               	movwf	6
  4767  0DC4  3001               	movlw	1	; select bank2/3
  4768  0DC5  0087               	movwf	7
  4769  0DC6  1501               	bsf	1,2
  4770                           
  4771                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4772  0DC7  087D               	movf	_Temp,w
  4773  0DC8  0086               	movwf	6
  4774  0DC9  3001               	movlw	1	; select bank2/3
  4775  0DCA  0087               	movwf	7
  4776  0DCB  1201               	bcf	1,4
  4777                           
  4778                           ;OverTemperature_B1.c: 78: }
  4779  0DCC  0008               	return
  4780  0DCD                     l9531:	
  4781                           
  4782                           ;OverTemperature_B1.c: 79: else
  4783                           ;OverTemperature_B1.c: 80: {
  4784                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4785  0DCD  0A7D               	incf	_Temp,w
  4786  0DCE  0086               	movwf	6
  4787  0DCF  3001               	movlw	1	; select bank2/3
  4788  0DD0  0087               	movwf	7
  4789  0DD1  30E8               	movlw	232
  4790  0DD2  3FC0               	movwi [0]fsr1
  4791  0DD3  3003               	movlw	3
  4792  0DD4  3FC1               	movwi [1]fsr1
  4793                           
  4794                           ;OverTemperature_B1.c: 82: }
  4795                           ;OverTemperature_B1.c: 83: }
  4796                           ;OverTemperature_B1.c: 84: }
  4797  0DD5  0008               	return
  4798  0DD6                     l9533:	
  4799                           
  4800                           ;OverTemperature_B1.c: 85: else
  4801                           ;OverTemperature_B1.c: 86: {
  4802                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4803  0DD6  0A7D               	incf	_Temp,w
  4804  0DD7  0086               	movwf	6
  4805  0DD8  3001               	movlw	1	; select bank2/3
  4806  0DD9  0087               	movwf	7
  4807  0DDA  3001               	movlw	1
  4808  0DDB  0781               	addwf	1,f
  4809  0DDC  3141               	addfsr 1,1
  4810  0DDD  1803               	skipnc
  4811  0DDE  0A81               	incf	1,f
  4812                           
  4813                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4814  0DDF  0A7D               	incf	_Temp,w
  4815  0DE0  0086               	movwf	6
  4816  0DE1  3001               	movlw	1	; select bank2/3
  4817  0DE2  0087               	movwf	7
  4818  0DE3  3F40               	moviw [0]fsr1
  4819  0DE4  0020               	movlb	0	; select bank0
  4820  0DE5  00AD               	movwf	??_setTemp_Main
  4821  0DE6  3F41               	moviw [1]fsr1
  4822  0DE7  00AE               	movwf	??_setTemp_Main+1
  4823  0DE8  3000               	movlw	0
  4824  0DE9  022E               	subwf	??_setTemp_Main+1,w
  4825  0DEA  3004               	movlw	4
  4826  0DEB  1903               	skipnz
  4827  0DEC  022D               	subwf	??_setTemp_Main,w
  4828  0DED  1C03               	skipc
  4829  0DEE  0008               	return
  4830                           
  4831                           ;OverTemperature_B1.c: 89: {
  4832                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4833  0DEF  0A7D               	incf	_Temp,w
  4834  0DF0  0086               	movwf	6
  4835  0DF1  3001               	movlw	1	; select bank2/3
  4836  0DF2  0087               	movwf	7
  4837  0DF3  3000               	movlw	0
  4838  0DF4  3FC0               	movwi [0]fsr1
  4839  0DF5  3FC1               	movwi [1]fsr1
  4840                           
  4841                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4842  0DF6  087D               	movf	_Temp,w
  4843  0DF7  0086               	movwf	6
  4844  0DF8  3001               	movlw	1	; select bank2/3
  4845  0DF9  0087               	movwf	7
  4846  0DFA  1101               	bcf	1,2
  4847                           
  4848                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4849  0DFB  087D               	movf	_Temp,w
  4850  0DFC  3E08               	addlw	8
  4851  0DFD  0086               	movwf	6
  4852  0DFE  3001               	movlw	1	; select bank2/3
  4853  0DFF  0087               	movwf	7
  4854  0E00  087D               	movf	_Temp,w
  4855  0E01  3E04               	addlw	4
  4856  0E02  0084               	movwf	4
  4857  0E03  3001               	movlw	1	; select bank2/3
  4858  0E04  0085               	movwf	5
  4859  0E05  3F40               	moviw [0]fsr1
  4860  0E06  3F80               	movwi [0]fsr0
  4861  0E07  3F41               	moviw [1]fsr1
  4862  0E08  3F81               	movwi [1]fsr0
  4863                           
  4864                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4865  0E09  087D               	movf	_Temp,w
  4866  0E0A  0086               	movwf	6
  4867  0E0B  3001               	movlw	1	; select bank2/3
  4868  0E0C  0087               	movwf	7
  4869  0E0D  1C81               	btfss	1,1
  4870  0E0E  2E3C               	goto	l9555
  4871                           
  4872                           ;OverTemperature_B1.c: 94: {
  4873                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 540)
  4874  0E0F  087D               	movf	_Temp,w
  4875  0E10  3E04               	addlw	4
  4876  0E11  0086               	movwf	6
  4877  0E12  3001               	movlw	1	; select bank2/3
  4878  0E13  0087               	movwf	7
  4879  0E14  3F40               	moviw [0]fsr1
  4880  0E15  00AD               	movwf	??_setTemp_Main
  4881  0E16  3F41               	moviw [1]fsr1
  4882  0E17  00AE               	movwf	??_setTemp_Main+1
  4883  0E18  3002               	movlw	2
  4884  0E19  022E               	subwf	??_setTemp_Main+1,w
  4885  0E1A  301C               	movlw	28
  4886  0E1B  1903               	skipnz
  4887  0E1C  022D               	subwf	??_setTemp_Main,w
  4888  0E1D  1C03               	skipc
  4889  0E1E  2E6A               	goto	l9565
  4890                           
  4891                           ;OverTemperature_B1.c: 96: {
  4892                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4893  0E1F  3001               	movlw	1
  4894  0E20  00AD               	movwf	??_setTemp_Main
  4895  0E21  087D               	movf	_Temp,w
  4896  0E22  3E03               	addlw	3
  4897  0E23  0086               	movwf	6
  4898  0E24  3001               	movlw	1	; select bank2/3
  4899  0E25  0087               	movwf	7
  4900  0E26  082D               	movf	??_setTemp_Main,w
  4901  0E27  0781               	addwf	1,f
  4902                           
  4903                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4904  0E28  087D               	movf	_Temp,w
  4905  0E29  3E03               	addlw	3
  4906  0E2A  0086               	movwf	6
  4907  0E2B  3001               	movlw	1	; select bank2/3
  4908  0E2C  0087               	movwf	7
  4909  0E2D  3003               	movlw	3
  4910  0E2E  0201               	subwf	1,w
  4911  0E2F  1C03               	skipc
  4912  0E30  2E70               	goto	l9567
  4913                           
  4914                           ;OverTemperature_B1.c: 99: {
  4915                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4916  0E31  087D               	movf	_Temp,w
  4917  0E32  3E03               	addlw	3
  4918  0E33  0086               	movwf	6
  4919  0E34  3001               	movlw	1	; select bank2/3
  4920  0E35  0087               	movwf	7
  4921  0E36  0181               	clrf	1
  4922                           
  4923                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4924  0E37  3000               	movlw	0
  4925  0E38  319B  2305  318D   	fcall	_setOverTemp_Exceptions
  4926                           
  4927                           ;OverTemperature_B1.c: 102: }
  4928                           ;OverTemperature_B1.c: 103: }
  4929  0E3B  2E70               	goto	l9567
  4930  0E3C                     l9555:	
  4931                           ;OverTemperature_B1.c: 107: }
  4932                           ;OverTemperature_B1.c: 108: }
  4933                           
  4934                           ;OverTemperature_B1.c: 104: else
  4935                           ;OverTemperature_B1.c: 105: {
  4936                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4937                           
  4938                           
  4939                           ;OverTemperature_B1.c: 109: else
  4940                           ;OverTemperature_B1.c: 110: {
  4941                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 475)
  4942  0E3C  087D               	movf	_Temp,w
  4943  0E3D  3E04               	addlw	4
  4944  0E3E  0086               	movwf	6
  4945  0E3F  3001               	movlw	1	; select bank2/3
  4946  0E40  0087               	movwf	7
  4947  0E41  3F40               	moviw [0]fsr1
  4948  0E42  0020               	movlb	0	; select bank0
  4949  0E43  00AD               	movwf	??_setTemp_Main
  4950  0E44  3F41               	moviw [1]fsr1
  4951  0E45  00AE               	movwf	??_setTemp_Main+1
  4952  0E46  3001               	movlw	1
  4953  0E47  022E               	subwf	??_setTemp_Main+1,w
  4954  0E48  30DC               	movlw	220
  4955  0E49  1903               	skipnz
  4956  0E4A  022D               	subwf	??_setTemp_Main,w
  4957  0E4B  1803               	skipnc
  4958  0E4C  2E6A               	goto	l9565
  4959                           
  4960                           ;OverTemperature_B1.c: 112: {
  4961                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4962  0E4D  3001               	movlw	1
  4963  0E4E  00AD               	movwf	??_setTemp_Main
  4964  0E4F  087D               	movf	_Temp,w
  4965  0E50  3E03               	addlw	3
  4966  0E51  0086               	movwf	6
  4967  0E52  3001               	movlw	1	; select bank2/3
  4968  0E53  0087               	movwf	7
  4969  0E54  082D               	movf	??_setTemp_Main,w
  4970  0E55  0781               	addwf	1,f
  4971                           
  4972                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4973  0E56  087D               	movf	_Temp,w
  4974  0E57  3E03               	addlw	3
  4975  0E58  0086               	movwf	6
  4976  0E59  3001               	movlw	1	; select bank2/3
  4977  0E5A  0087               	movwf	7
  4978  0E5B  3003               	movlw	3
  4979  0E5C  0201               	subwf	1,w
  4980  0E5D  1C03               	skipc
  4981  0E5E  2E70               	goto	l9567
  4982                           
  4983                           ;OverTemperature_B1.c: 115: {
  4984                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4985  0E5F  087D               	movf	_Temp,w
  4986  0E60  3E03               	addlw	3
  4987  0E61  0086               	movwf	6
  4988  0E62  3001               	movlw	1	; select bank2/3
  4989  0E63  0087               	movwf	7
  4990  0E64  0181               	clrf	1
  4991                           
  4992                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4993  0E65  3001               	movlw	1
  4994  0E66  319B  2305  318D   	fcall	_setOverTemp_Exceptions
  4995                           
  4996                           ;OverTemperature_B1.c: 118: }
  4997                           ;OverTemperature_B1.c: 119: }
  4998  0E69  2E70               	goto	l9567
  4999  0E6A                     l9565:	
  5000                           
  5001                           ;OverTemperature_B1.c: 120: else
  5002                           ;OverTemperature_B1.c: 121: {
  5003                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  5004  0E6A  087D               	movf	_Temp,w
  5005  0E6B  3E03               	addlw	3
  5006  0E6C  0086               	movwf	6
  5007  0E6D  3001               	movlw	1	; select bank2/3
  5008  0E6E  0087               	movwf	7
  5009  0E6F  0181               	clrf	1
  5010  0E70                     l9567:	
  5011                           
  5012                           ;OverTemperature_B1.c: 123: }
  5013                           ;OverTemperature_B1.c: 124: }
  5014                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  5015  0E70  087D               	movf	_Temp,w
  5016  0E71  0086               	movwf	6
  5017  0E72  3001               	movlw	1	; select bank2/3
  5018  0E73  0087               	movwf	7
  5019  0E74  1881               	btfsc	1,1
  5020  0E75  2E7B               	goto	l9571
  5021                           
  5022                           ;OverTemperature_B1.c: 126: {
  5023                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  5024  0E76  087D               	movf	_Temp,w
  5025  0E77  0086               	movwf	6
  5026  0E78  3001               	movlw	1	; select bank2/3
  5027  0E79  0087               	movwf	7
  5028  0E7A  1601               	bsf	1,4
  5029  0E7B                     l9571:	
  5030                           
  5031                           ;OverTemperature_B1.c: 128: }
  5032                           ;OverTemperature_B1.c: 129: Product->Data[24]=Temp->AD >> 8;
  5033  0E7B  087D               	movf	_Temp,w
  5034  0E7C  3E04               	addlw	4
  5035  0E7D  0086               	movwf	6
  5036  0E7E  3001               	movlw	1	; select bank2/3
  5037  0E7F  0087               	movwf	7
  5038  0E80  3F40               	moviw [0]fsr1
  5039  0E81  0020               	movlb	0	; select bank0
  5040  0E82  00AD               	movwf	??_setTemp_Main
  5041  0E83  3F41               	moviw [1]fsr1
  5042  0E84  00AE               	movwf	??_setTemp_Main+1
  5043  0E85  082E               	movf	??_setTemp_Main+1,w
  5044  0E86  00AF               	movwf	??_setTemp_Main+2
  5045  0E87  086F               	movf	_Product,w
  5046  0E88  3E18               	addlw	24
  5047  0E89  0086               	movwf	6
  5048  0E8A  3001               	movlw	1	; select bank2/3
  5049  0E8B  0087               	movwf	7
  5050  0E8C  082F               	movf	??_setTemp_Main+2,w
  5051  0E8D  0081               	movwf	1
  5052                           
  5053                           ;OverTemperature_B1.c: 130: Product->Data[25]=Temp->AD;
  5054  0E8E  087D               	movf	_Temp,w
  5055  0E8F  3E04               	addlw	4
  5056  0E90  0086               	movwf	6
  5057  0E91  3001               	movlw	1	; select bank2/3
  5058  0E92  0087               	movwf	7
  5059  0E93  0801               	movf	1,w
  5060  0E94  00AD               	movwf	??_setTemp_Main
  5061  0E95  086F               	movf	_Product,w
  5062  0E96  3E19               	addlw	25
  5063  0E97  0086               	movwf	6
  5064  0E98  3001               	movlw	1	; select bank2/3
  5065  0E99  0087               	movwf	7
  5066  0E9A  082D               	movf	??_setTemp_Main,w
  5067  0E9B  0081               	movwf	1
  5068                           
  5069                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  5070  0E9C  087D               	movf	_Temp,w
  5071  0E9D  3E06               	addlw	6
  5072  0E9E  0086               	movwf	6
  5073  0E9F  3001               	movlw	1	; select bank2/3
  5074  0EA0  0087               	movwf	7
  5075  0EA1  3000               	movlw	0
  5076  0EA2  3FC0               	movwi [0]fsr1
  5077  0EA3  3FC1               	movwi [1]fsr1
  5078                           
  5079                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  5080  0EA4  087D               	movf	_Temp,w
  5081  0EA5  3E08               	addlw	8
  5082  0EA6  0086               	movwf	6
  5083  0EA7  3001               	movlw	1	; select bank2/3
  5084  0EA8  0087               	movwf	7
  5085  0EA9  3000               	movlw	0
  5086  0EAA  3FC0               	movwi [0]fsr1
  5087  0EAB  3FC1               	movwi [1]fsr1
  5088  0EAC  0008               	return
  5089  0EAD                     __end_of_setTemp_Main:	
  5090                           
  5091                           	psect	text7
  5092  1B05                     __ptext7:	
  5093 ;; *************** function _setOverTemp_Exceptions *****************
  5094 ;; Defined at:
  5095 ;;		line 138 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  command         1    wreg     unsigned char 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  command         1   12[BANK0 ] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;		None               void
  5102 ;; Registers used:
  5103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;Total ram usage:        2 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    8
  5116 ;; This function calls:
  5117 ;;		_DimmerLights_Exceptions
  5118 ;;		_setLED
  5119 ;;		_setRF_Enable
  5120 ;;		_setSw_Enable
  5121 ;; This function is called by:
  5122 ;;		_setTemp_Main
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function _setOverTemp_Exceptions
  5128  1B05                     _setOverTemp_Exceptions:	
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5132                           ;setOverTemp_Exceptions@command stored from wreg
  5133  1B05  0020               	movlb	0	; select bank0
  5134  1B06  00AC               	movwf	setOverTemp_Exceptions@command
  5135                           
  5136                           ;OverTemperature_B1.c: 140: if(command)
  5137  1B07  082C               	movf	setOverTemp_Exceptions@command,w
  5138  1B08  1903               	btfsc	3,2
  5139  1B09  2B0F               	goto	l9171
  5140                           
  5141                           ;OverTemperature_B1.c: 141: {
  5142                           ;OverTemperature_B1.c: 142: DimmerLights_Exceptions(1);
  5143  1B0A  3001               	movlw	1
  5144  1B0B  3191  21A7  319B   	fcall	_DimmerLights_Exceptions
  5145  1B0E  0020               	movlb	0	; select bank0
  5146  1B0F                     l9171:	
  5147                           
  5148                           ;OverTemperature_B1.c: 143: }
  5149                           ;OverTemperature_B1.c: 144: Temp->ERROR=command;
  5150  1B0F  087D               	movf	_Temp,w
  5151  1B10  0086               	movwf	6
  5152  1B11  3001               	movlw	1	; select bank2/3
  5153  1B12  0087               	movwf	7
  5154  1B13  0020               	movlb	0	; select bank0
  5155  1B14  082C               	movf	setOverTemp_Exceptions@command,w
  5156  1B15  1081               	bcf	1,1
  5157  1B16  1D03               	skipz
  5158  1B17  1481               	bsf	1,1
  5159                           
  5160                           ;OverTemperature_B1.c: 146: setLED(99,command+10);
  5161  1B18  082C               	movf	setOverTemp_Exceptions@command,w
  5162  1B19  3E0A               	addlw	10
  5163  1B1A  00AB               	movwf	??_setOverTemp_Exceptions
  5164  1B1B  082B               	movf	??_setOverTemp_Exceptions,w
  5165  1B1C  00A2               	movwf	setLED@command
  5166  1B1D  3063               	movlw	99
  5167  1B1E  3190  2023  319B   	fcall	_setLED
  5168                           
  5169                           ;OverTemperature_B1.c: 148: Temp->Safe=(~command) & 0x01;
  5170  1B21  0020               	movlb	0	; select bank0
  5171  1B22  092C               	comf	setOverTemp_Exceptions@command,w
  5172  1B23  3901               	andlw	1
  5173  1B24  00AB               	movwf	??_setOverTemp_Exceptions
  5174  1B25  087D               	movf	_Temp,w
  5175  1B26  0086               	movwf	6
  5176  1B27  3001               	movlw	1	; select bank2/3
  5177  1B28  0087               	movwf	7
  5178  1B29  0EAB               	swapf	??_setOverTemp_Exceptions,f
  5179  1B2A  0801               	movf	1,w
  5180  1B2B  062B               	xorwf	??_setOverTemp_Exceptions,w
  5181  1B2C  39EF               	andlw	-17
  5182  1B2D  062B               	xorwf	??_setOverTemp_Exceptions,w
  5183  1B2E  0081               	movwf	1
  5184                           
  5185                           ;OverTemperature_B1.c: 149: setSw_Enable((~command) & 0x01);
  5186  1B2F  092C               	comf	setOverTemp_Exceptions@command,w
  5187  1B30  3901               	andlw	1
  5188  1B31  31A6  26DF  319B   	fcall	_setSw_Enable
  5189                           
  5190                           ;OverTemperature_B1.c: 152: setRF_Enable(1,(~command) & 0x01);
  5191  1B34  0020               	movlb	0	; select bank0
  5192  1B35  092C               	comf	setOverTemp_Exceptions@command,w
  5193  1B36  3901               	andlw	1
  5194  1B37  00AB               	movwf	??_setOverTemp_Exceptions
  5195  1B38  082B               	movf	??_setOverTemp_Exceptions,w
  5196  1B39  00A4               	movwf	setRF_Enable@command
  5197  1B3A  3001               	movlw	1
  5198  1B3B  319B  233E         	fcall	_setRF_Enable
  5199  1B3D  0008               	return
  5200  1B3E                     __end_of_setOverTemp_Exceptions:	
  5201                           
  5202                           	psect	text8
  5203  2324                     __ptext8:	
  5204 ;; *************** function _Temp_Initialization *****************
  5205 ;; Defined at:
  5206 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;		None               void
  5213 ;; Registers used:
  5214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;Total ram usage:        0 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    5
  5227 ;; This function calls:
  5228 ;;		_setTemp_Initialization
  5229 ;; This function is called by:
  5230 ;;		_main
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           
  5235                           ;psect for function _Temp_Initialization
  5236  2324                     _Temp_Initialization:	
  5237                           
  5238                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  5239                           
  5240                           ;incstack = 0
  5241                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5242  2324  31A4  2401         	fcall	_setTemp_Initialization
  5243  2326  0008               	return
  5244  2327                     __end_of_Temp_Initialization:	
  5245                           
  5246                           	psect	text9
  5247  2401                     __ptext9:	
  5248 ;; *************** function _setTemp_Initialization *****************
  5249 ;; Defined at:
  5250 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;		None               void
  5257 ;; Registers used:
  5258 ;;		wreg, fsr1l, fsr1h
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;Total ram usage:        1 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    4
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_Temp_Initialization
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           
  5279                           ;psect for function _setTemp_Initialization
  5280  2401                     _setTemp_Initialization:	
  5281                           
  5282                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  5283                           
  5284                           ;incstack = 0
  5285                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  5286  2401  3020               	movlw	_Temp1& (0+255)
  5287  2402  0020               	movlb	0	; select bank0
  5288  2403  00A0               	movwf	??_setTemp_Initialization
  5289  2404  0820               	movf	??_setTemp_Initialization,w
  5290  2405  00FD               	movwf	_Temp
  5291                           
  5292                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  5293  2406  087D               	movf	_Temp,w
  5294  2407  0086               	movwf	6
  5295  2408  3001               	movlw	1	; select bank2/3
  5296  2409  0087               	movwf	7
  5297  240A  1601               	bsf	1,4
  5298  240B  0008               	return
  5299  240C                     __end_of_setTemp_Initialization:	
  5300                           
  5301                           	psect	text10
  5302  2390                     __ptext10:	
  5303 ;; *************** function _Switch_Main *****************
  5304 ;; Defined at:
  5305 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;		None               void
  5312 ;; Registers used:
  5313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;Total ram usage:        0 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    8
  5326 ;; This function calls:
  5327 ;;		_setSw_Main
  5328 ;; This function is called by:
  5329 ;;		_main
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           
  5334                           ;psect for function _Switch_Main
  5335  2390                     _Switch_Main:	
  5336                           
  5337                           ;Switch_B1.c: 65: setSw_Main(1);
  5338                           
  5339                           ;incstack = 0
  5340                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5341  2390  3001               	movlw	1
  5342  2391  318E  26AD  31A3   	fcall	_setSw_Main
  5343                           
  5344                           ;Switch_B1.c: 69: setSw_Main(2);
  5345  2394  3002               	movlw	2
  5346  2395  318E  26AD         	fcall	_setSw_Main
  5347  2397  0008               	return
  5348  2398                     __end_of_Switch_Main:	
  5349                           
  5350                           	psect	text11
  5351  0EAD                     __ptext11:	
  5352 ;; *************** function _setSw_Main *****************
  5353 ;; Defined at:
  5354 ;;		line 112 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  sw              1    wreg     unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  sw              1   14[BANK0 ] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;		None               void
  5361 ;; Registers used:
  5362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;Total ram usage:        5 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    7
  5375 ;; This function calls:
  5376 ;;		_SwPointSelect
  5377 ;;		_Sw_DimmerAdjFunc
  5378 ;;		_Sw_DimmerOffFunc
  5379 ;;		_Sw_DimmerOnFunc
  5380 ;;		_setBuz
  5381 ;;		_setRF_Learn
  5382 ;; This function is called by:
  5383 ;;		_Switch_Main
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _setSw_Main
  5389  0EAD                     _setSw_Main:	
  5390                           
  5391                           ;incstack = 0
  5392                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5393                           ;setSw_Main@sw stored from wreg
  5394  0EAD  0020               	movlb	0	; select bank0
  5395  0EAE  00AE               	movwf	setSw_Main@sw
  5396                           
  5397                           ;Switch_B1.c: 114: if(Sw->Enable)
  5398  0EAF  086D               	movf	_Sw,w
  5399  0EB0  0086               	movwf	6
  5400  0EB1  3001               	movlw	1	; select bank2/3
  5401  0EB2  0087               	movwf	7
  5402  0EB3  1C01               	btfss	1,0
  5403  0EB4  0008               	return
  5404                           
  5405                           ;Switch_B1.c: 115: {
  5406                           ;Switch_B1.c: 116: SwPointSelect(sw);
  5407  0EB5  082E               	movf	setSw_Main@sw,w
  5408  0EB6  31A5  2568  318E   	fcall	_SwPointSelect
  5409                           
  5410                           ;Switch_B1.c: 133: if(sw == 1)
  5411  0EB9  0020               	movlb	0	; select bank0
  5412  0EBA  082E               	movf	setSw_Main@sw,w
  5413  0EBB  3A01               	xorlw	1
  5414  0EBC  1D03               	skipz
  5415  0EBD  2ECA               	goto	l9709
  5416                           
  5417                           ;Switch_B1.c: 134: {
  5418                           ;Switch_B1.c: 135: Sw->Touch=(RA0 || RB1)?1:0;
  5419  0EBE  01AC               	clrf	_setSw_Main$4710
  5420  0EBF  0AAC               	incf	_setSw_Main$4710,f
  5421  0EC0  1C0C               	btfss	12,0	;volatile
  5422  0EC1  188D               	btfsc	13,1	;volatile
  5423  0EC2  2EC4               	goto	l9707
  5424  0EC3  01AC               	clrf	_setSw_Main$4710
  5425  0EC4                     l9707:	
  5426  0EC4  086D               	movf	_Sw,w
  5427  0EC5  0086               	movwf	6
  5428  0EC6  3001               	movlw	1	; select bank2/3
  5429  0EC7  0087               	movwf	7
  5430  0EC8  082C               	movf	_setSw_Main$4710,w
  5431  0EC9  2ED9               	goto	L2
  5432  0ECA                     l9709:	
  5433                           ;Switch_B1.c: 136: }
  5434                           
  5435                           
  5436                           ;Switch_B1.c: 137: else if(sw == 2)
  5437  0ECA  082E               	movf	setSw_Main@sw,w
  5438  0ECB  3A02               	xorlw	2
  5439  0ECC  1D03               	skipz
  5440  0ECD  2EDC               	goto	l9719
  5441                           
  5442                           ;Switch_B1.c: 138: {
  5443                           ;Switch_B1.c: 139: Sw->Touch=(RA6 || RA4)?1:0;
  5444  0ECE  01AD               	clrf	_setSw_Main$4711
  5445  0ECF  0AAD               	incf	_setSw_Main$4711,f
  5446  0ED0  1F0C               	btfss	12,6	;volatile
  5447  0ED1  1A0C               	btfsc	12,4	;volatile
  5448  0ED2  2ED4               	goto	l9717
  5449  0ED3  01AD               	clrf	_setSw_Main$4711
  5450  0ED4                     l9717:	
  5451  0ED4  086D               	movf	_Sw,w
  5452  0ED5  0086               	movwf	6
  5453  0ED6  3001               	movlw	1	; select bank2/3
  5454  0ED7  0087               	movwf	7
  5455  0ED8  082D               	movf	_setSw_Main$4711,w
  5456  0ED9                     L2:	
  5457  0ED9  1081               	bcf	1,1
  5458  0EDA  1D03               	skipz
  5459  0EDB  1481               	bsf	1,1
  5460  0EDC                     l9719:	
  5461                           
  5462                           ;Switch_B1.c: 140: }
  5463                           ;Switch_B1.c: 148: if(Sw->Touch)
  5464  0EDC  086D               	movf	_Sw,w
  5465  0EDD  0086               	movwf	6
  5466  0EDE  3001               	movlw	1	; select bank2/3
  5467  0EDF  0087               	movwf	7
  5468  0EE0  1C81               	btfss	1,1
  5469  0EE1  2FAB               	goto	l9765
  5470                           
  5471                           ;Switch_B1.c: 149: {
  5472                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  5473  0EE2  086D               	movf	_Sw,w
  5474  0EE3  0086               	movwf	6
  5475  0EE4  3001               	movlw	1	; select bank2/3
  5476  0EE5  0087               	movwf	7
  5477  0EE6  1901               	btfsc	1,2
  5478  0EE7  2F12               	goto	l9735
  5479                           
  5480                           ;Switch_B1.c: 151: {
  5481                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  5482  0EE8  3001               	movlw	1
  5483  0EE9  00AA               	movwf	??_setSw_Main
  5484  0EEA  086D               	movf	_Sw,w
  5485  0EEB  3E02               	addlw	2
  5486  0EEC  0086               	movwf	6
  5487  0EED  3001               	movlw	1	; select bank2/3
  5488  0EEE  0087               	movwf	7
  5489  0EEF  082A               	movf	??_setSw_Main,w
  5490  0EF0  0781               	addwf	1,f
  5491                           
  5492                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  5493  0EF1  086D               	movf	_Sw,w
  5494  0EF2  3E02               	addlw	2
  5495  0EF3  0086               	movwf	6
  5496  0EF4  3001               	movlw	1	; select bank2/3
  5497  0EF5  0087               	movwf	7
  5498  0EF6  3005               	movlw	5
  5499  0EF7  0201               	subwf	1,w
  5500  0EF8  1C03               	skipc
  5501  0EF9  0008               	return
  5502                           
  5503                           ;Switch_B1.c: 154: {
  5504                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  5505  0EFA  086D               	movf	_Sw,w
  5506  0EFB  3E02               	addlw	2
  5507  0EFC  0086               	movwf	6
  5508  0EFD  3001               	movlw	1	; select bank2/3
  5509  0EFE  0087               	movwf	7
  5510  0EFF  0181               	clrf	1
  5511                           
  5512                           ;Switch_B1.c: 156: Sw->Debounce=1;
  5513  0F00  086D               	movf	_Sw,w
  5514  0F01  0086               	movwf	6
  5515  0F02  3001               	movlw	1	; select bank2/3
  5516  0F03  0087               	movwf	7
  5517  0F04  1501               	bsf	1,2
  5518                           
  5519                           ;Switch_B1.c: 157: setBuz(1,100);
  5520  0F05  3064               	movlw	100
  5521  0F06  00A6               	movwf	setBuz@time
  5522  0F07  3000               	movlw	0
  5523  0F08  00A7               	movwf	setBuz@time+1
  5524  0F09  3001               	movlw	1
  5525  0F0A  3193  235E  318E   	fcall	_setBuz
  5526                           
  5527                           ;Switch_B1.c: 160: Sw_DimmerOnFunc(sw);
  5528  0F0D  0020               	movlb	0	; select bank0
  5529  0F0E  082E               	movf	setSw_Main@sw,w
  5530  0F0F  319E  260A         	fcall	_Sw_DimmerOnFunc
  5531                           
  5532                           ;Switch_B1.c: 163: }
  5533                           ;Switch_B1.c: 164: }
  5534  0F11  0008               	return
  5535  0F12                     l9735:	
  5536                           
  5537                           ;Switch_B1.c: 165: else
  5538                           ;Switch_B1.c: 166: {
  5539                           ;Switch_B1.c: 167: if(!Sw->Hold1)
  5540  0F12  0020               	movlb	0	; select bank0
  5541  0F13  086D               	movf	_Sw,w
  5542  0F14  0086               	movwf	6
  5543  0F15  3001               	movlw	1	; select bank2/3
  5544  0F16  0087               	movwf	7
  5545  0F17  1981               	btfsc	1,3
  5546  0F18  2F44               	goto	l9745
  5547                           
  5548                           ;Switch_B1.c: 168: {
  5549                           ;Switch_B1.c: 169: Sw->Hold1Time++;
  5550  0F19  086D               	movf	_Sw,w
  5551  0F1A  3E03               	addlw	3
  5552  0F1B  0086               	movwf	6
  5553  0F1C  3001               	movlw	1	; select bank2/3
  5554  0F1D  0087               	movwf	7
  5555  0F1E  3001               	movlw	1
  5556  0F1F  0781               	addwf	1,f
  5557  0F20  3141               	addfsr 1,1
  5558  0F21  1803               	skipnc
  5559  0F22  0A81               	incf	1,f
  5560                           
  5561                           ;Switch_B1.c: 170: if(Sw->Hold1Time >= 150)
  5562  0F23  086D               	movf	_Sw,w
  5563  0F24  3E03               	addlw	3
  5564  0F25  0086               	movwf	6
  5565  0F26  3001               	movlw	1	; select bank2/3
  5566  0F27  0087               	movwf	7
  5567  0F28  3F40               	moviw [0]fsr1
  5568  0F29  00AA               	movwf	??_setSw_Main
  5569  0F2A  3F41               	moviw [1]fsr1
  5570  0F2B  00AB               	movwf	??_setSw_Main+1
  5571  0F2C  3000               	movlw	0
  5572  0F2D  022B               	subwf	??_setSw_Main+1,w
  5573  0F2E  3096               	movlw	150
  5574  0F2F  1903               	skipnz
  5575  0F30  022A               	subwf	??_setSw_Main,w
  5576  0F31  1C03               	skipc
  5577  0F32  0008               	return
  5578                           
  5579                           ;Switch_B1.c: 171: {
  5580                           ;Switch_B1.c: 172: Sw->Hold1Time=0;
  5581  0F33  086D               	movf	_Sw,w
  5582  0F34  3E03               	addlw	3
  5583  0F35  0086               	movwf	6
  5584  0F36  3001               	movlw	1	; select bank2/3
  5585  0F37  0087               	movwf	7
  5586  0F38  3000               	movlw	0
  5587  0F39  3FC0               	movwi [0]fsr1
  5588  0F3A  3FC1               	movwi [1]fsr1
  5589                           
  5590                           ;Switch_B1.c: 173: Sw->Hold1=1;
  5591  0F3B  086D               	movf	_Sw,w
  5592  0F3C  0086               	movwf	6
  5593  0F3D  3001               	movlw	1	; select bank2/3
  5594  0F3E  0087               	movwf	7
  5595  0F3F  1581               	bsf	1,3
  5596                           
  5597                           ;Switch_B1.c: 176: Sw_DimmerAdjFunc(sw);
  5598  0F40  082E               	movf	setSw_Main@sw,w
  5599  0F41  3198  20A1         	fcall	_Sw_DimmerAdjFunc
  5600                           
  5601                           ;Switch_B1.c: 179: }
  5602                           ;Switch_B1.c: 180: }
  5603  0F43  0008               	return
  5604  0F44                     l9745:	
  5605                           
  5606                           ;Switch_B1.c: 181: else
  5607                           ;Switch_B1.c: 182: {
  5608                           ;Switch_B1.c: 183: if(!Sw->Hold2)
  5609  0F44  0020               	movlb	0	; select bank0
  5610  0F45  086D               	movf	_Sw,w
  5611  0F46  0086               	movwf	6
  5612  0F47  3001               	movlw	1	; select bank2/3
  5613  0F48  0087               	movwf	7
  5614  0F49  1A01               	btfsc	1,4
  5615  0F4A  2F78               	goto	l9755
  5616                           
  5617                           ;Switch_B1.c: 184: {
  5618                           ;Switch_B1.c: 185: Sw->Hold2Time++;
  5619  0F4B  086D               	movf	_Sw,w
  5620  0F4C  3E05               	addlw	5
  5621  0F4D  0086               	movwf	6
  5622  0F4E  3001               	movlw	1	; select bank2/3
  5623  0F4F  0087               	movwf	7
  5624  0F50  3001               	movlw	1
  5625  0F51  0781               	addwf	1,f
  5626  0F52  3141               	addfsr 1,1
  5627  0F53  1803               	skipnc
  5628  0F54  0A81               	incf	1,f
  5629                           
  5630                           ;Switch_B1.c: 186: if(Sw->Hold2Time >= 150)
  5631  0F55  086D               	movf	_Sw,w
  5632  0F56  3E05               	addlw	5
  5633  0F57  0086               	movwf	6
  5634  0F58  3001               	movlw	1	; select bank2/3
  5635  0F59  0087               	movwf	7
  5636  0F5A  3F40               	moviw [0]fsr1
  5637  0F5B  00AA               	movwf	??_setSw_Main
  5638  0F5C  3F41               	moviw [1]fsr1
  5639  0F5D  00AB               	movwf	??_setSw_Main+1
  5640  0F5E  3000               	movlw	0
  5641  0F5F  022B               	subwf	??_setSw_Main+1,w
  5642  0F60  3096               	movlw	150
  5643  0F61  1903               	skipnz
  5644  0F62  022A               	subwf	??_setSw_Main,w
  5645  0F63  1C03               	skipc
  5646  0F64  0008               	return
  5647                           
  5648                           ;Switch_B1.c: 187: {
  5649                           ;Switch_B1.c: 188: Sw->Hold2Time=0;
  5650  0F65  086D               	movf	_Sw,w
  5651  0F66  3E05               	addlw	5
  5652  0F67  0086               	movwf	6
  5653  0F68  3001               	movlw	1	; select bank2/3
  5654  0F69  0087               	movwf	7
  5655  0F6A  3000               	movlw	0
  5656  0F6B  3FC0               	movwi [0]fsr1
  5657  0F6C  3FC1               	movwi [1]fsr1
  5658                           
  5659                           ;Switch_B1.c: 189: Sw->Hold2=1;
  5660  0F6D  086D               	movf	_Sw,w
  5661  0F6E  0086               	movwf	6
  5662  0F6F  3001               	movlw	1	; select bank2/3
  5663  0F70  0087               	movwf	7
  5664  0F71  1601               	bsf	1,4
  5665                           
  5666                           ;Switch_B1.c: 191: setRF_Learn(1,1);
  5667  0F72  01A2               	clrf	setRF_Learn@command
  5668  0F73  0AA2               	incf	setRF_Learn@command,f
  5669  0F74  3001               	movlw	1
  5670  0F75  31A4  2496         	fcall	_setRF_Learn
  5671                           
  5672                           ;Switch_B1.c: 199: }
  5673                           ;Switch_B1.c: 200: }
  5674  0F77  0008               	return
  5675  0F78                     l9755:	
  5676                           
  5677                           ;Switch_B1.c: 201: else
  5678                           ;Switch_B1.c: 202: {
  5679                           ;Switch_B1.c: 203: if(!Sw->Hold3)
  5680  0F78  0020               	movlb	0	; select bank0
  5681  0F79  086D               	movf	_Sw,w
  5682  0F7A  0086               	movwf	6
  5683  0F7B  3001               	movlw	1	; select bank2/3
  5684  0F7C  0087               	movwf	7
  5685  0F7D  1A81               	btfsc	1,5
  5686  0F7E  0008               	return
  5687                           
  5688                           ;Switch_B1.c: 204: {
  5689                           ;Switch_B1.c: 205: Sw->Hold3Time++;
  5690  0F7F  086D               	movf	_Sw,w
  5691  0F80  3E07               	addlw	7
  5692  0F81  0086               	movwf	6
  5693  0F82  3001               	movlw	1	; select bank2/3
  5694  0F83  0087               	movwf	7
  5695  0F84  3001               	movlw	1
  5696  0F85  0781               	addwf	1,f
  5697  0F86  3141               	addfsr 1,1
  5698  0F87  1803               	skipnc
  5699  0F88  0A81               	incf	1,f
  5700                           
  5701                           ;Switch_B1.c: 206: if(Sw->Hold3Time >= 300)
  5702  0F89  086D               	movf	_Sw,w
  5703  0F8A  3E07               	addlw	7
  5704  0F8B  0086               	movwf	6
  5705  0F8C  3001               	movlw	1	; select bank2/3
  5706  0F8D  0087               	movwf	7
  5707  0F8E  3F40               	moviw [0]fsr1
  5708  0F8F  00AA               	movwf	??_setSw_Main
  5709  0F90  3F41               	moviw [1]fsr1
  5710  0F91  00AB               	movwf	??_setSw_Main+1
  5711  0F92  3001               	movlw	1
  5712  0F93  022B               	subwf	??_setSw_Main+1,w
  5713  0F94  302C               	movlw	44
  5714  0F95  1903               	skipnz
  5715  0F96  022A               	subwf	??_setSw_Main,w
  5716  0F97  1C03               	skipc
  5717  0F98  0008               	return
  5718                           
  5719                           ;Switch_B1.c: 207: {
  5720                           ;Switch_B1.c: 208: Sw->Hold3Time=0;
  5721  0F99  086D               	movf	_Sw,w
  5722  0F9A  3E07               	addlw	7
  5723  0F9B  0086               	movwf	6
  5724  0F9C  3001               	movlw	1	; select bank2/3
  5725  0F9D  0087               	movwf	7
  5726  0F9E  3000               	movlw	0
  5727  0F9F  3FC0               	movwi [0]fsr1
  5728  0FA0  3FC1               	movwi [1]fsr1
  5729                           
  5730                           ;Switch_B1.c: 209: Sw->Hold3=1;
  5731  0FA1  086D               	movf	_Sw,w
  5732  0FA2  0086               	movwf	6
  5733  0FA3  3001               	movlw	1	; select bank2/3
  5734  0FA4  0087               	movwf	7
  5735  0FA5  1681               	bsf	1,5
  5736                           
  5737                           ;Switch_B1.c: 211: setRF_Learn(1,0);
  5738  0FA6  01A2               	clrf	setRF_Learn@command
  5739  0FA7  3001               	movlw	1
  5740  0FA8  31A4  2496         	fcall	_setRF_Learn
  5741                           
  5742                           ;Switch_B1.c: 213: }
  5743                           ;Switch_B1.c: 214: }
  5744                           ;Switch_B1.c: 215: }
  5745                           ;Switch_B1.c: 216: }
  5746                           ;Switch_B1.c: 217: }
  5747                           ;Switch_B1.c: 218: }
  5748  0FAA  0008               	return
  5749  0FAB                     l9765:	
  5750                           
  5751                           ;Switch_B1.c: 219: else
  5752                           ;Switch_B1.c: 220: {
  5753                           ;Switch_B1.c: 221: if(Sw->Debounce)
  5754  0FAB  0020               	movlb	0	; select bank0
  5755  0FAC  086D               	movf	_Sw,w
  5756  0FAD  0086               	movwf	6
  5757  0FAE  3001               	movlw	1	; select bank2/3
  5758  0FAF  0087               	movwf	7
  5759  0FB0  1D01               	btfss	1,2
  5760  0FB1  0008               	return
  5761                           
  5762                           ;Switch_B1.c: 222: {
  5763                           ;Switch_B1.c: 223: Sw->DebounceTime++;
  5764  0FB2  3001               	movlw	1
  5765  0FB3  00AA               	movwf	??_setSw_Main
  5766  0FB4  086D               	movf	_Sw,w
  5767  0FB5  3E02               	addlw	2
  5768  0FB6  0086               	movwf	6
  5769  0FB7  3001               	movlw	1	; select bank2/3
  5770  0FB8  0087               	movwf	7
  5771  0FB9  082A               	movf	??_setSw_Main,w
  5772  0FBA  0781               	addwf	1,f
  5773                           
  5774                           ;Switch_B1.c: 224: if(Sw->DebounceTime >= 5)
  5775  0FBB  086D               	movf	_Sw,w
  5776  0FBC  3E02               	addlw	2
  5777  0FBD  0086               	movwf	6
  5778  0FBE  3001               	movlw	1	; select bank2/3
  5779  0FBF  0087               	movwf	7
  5780  0FC0  3005               	movlw	5
  5781  0FC1  0201               	subwf	1,w
  5782  0FC2  1C03               	skipc
  5783  0FC3  0008               	return
  5784                           
  5785                           ;Switch_B1.c: 225: {
  5786                           ;Switch_B1.c: 226: Sw->DebounceTime=0;
  5787  0FC4  086D               	movf	_Sw,w
  5788  0FC5  3E02               	addlw	2
  5789  0FC6  0086               	movwf	6
  5790  0FC7  3001               	movlw	1	; select bank2/3
  5791  0FC8  0087               	movwf	7
  5792  0FC9  0181               	clrf	1
  5793                           
  5794                           ;Switch_B1.c: 227: Sw->Debounce=0;
  5795  0FCA  086D               	movf	_Sw,w
  5796  0FCB  0086               	movwf	6
  5797  0FCC  3001               	movlw	1	; select bank2/3
  5798  0FCD  0087               	movwf	7
  5799  0FCE  1101               	bcf	1,2
  5800                           
  5801                           ;Switch_B1.c: 228: Sw->Hold1Time=0;
  5802  0FCF  086D               	movf	_Sw,w
  5803  0FD0  3E03               	addlw	3
  5804  0FD1  0086               	movwf	6
  5805  0FD2  3001               	movlw	1	; select bank2/3
  5806  0FD3  0087               	movwf	7
  5807  0FD4  3000               	movlw	0
  5808  0FD5  3FC0               	movwi [0]fsr1
  5809  0FD6  3FC1               	movwi [1]fsr1
  5810                           
  5811                           ;Switch_B1.c: 229: Sw->Hold1=0;
  5812  0FD7  086D               	movf	_Sw,w
  5813  0FD8  0086               	movwf	6
  5814  0FD9  3001               	movlw	1	; select bank2/3
  5815  0FDA  0087               	movwf	7
  5816  0FDB  1181               	bcf	1,3
  5817                           
  5818                           ;Switch_B1.c: 230: Sw->Hold2Time=0;
  5819  0FDC  086D               	movf	_Sw,w
  5820  0FDD  3E05               	addlw	5
  5821  0FDE  0086               	movwf	6
  5822  0FDF  3001               	movlw	1	; select bank2/3
  5823  0FE0  0087               	movwf	7
  5824  0FE1  3000               	movlw	0
  5825  0FE2  3FC0               	movwi [0]fsr1
  5826  0FE3  3FC1               	movwi [1]fsr1
  5827                           
  5828                           ;Switch_B1.c: 231: Sw->Hold2=0;
  5829  0FE4  086D               	movf	_Sw,w
  5830  0FE5  0086               	movwf	6
  5831  0FE6  3001               	movlw	1	; select bank2/3
  5832  0FE7  0087               	movwf	7
  5833  0FE8  1201               	bcf	1,4
  5834                           
  5835                           ;Switch_B1.c: 232: Sw->Hold3Time=0;
  5836  0FE9  086D               	movf	_Sw,w
  5837  0FEA  3E07               	addlw	7
  5838  0FEB  0086               	movwf	6
  5839  0FEC  3001               	movlw	1	; select bank2/3
  5840  0FED  0087               	movwf	7
  5841  0FEE  3000               	movlw	0
  5842  0FEF  3FC0               	movwi [0]fsr1
  5843  0FF0  3FC1               	movwi [1]fsr1
  5844                           
  5845                           ;Switch_B1.c: 233: Sw->Hold3=0;
  5846  0FF1  086D               	movf	_Sw,w
  5847  0FF2  0086               	movwf	6
  5848  0FF3  3001               	movlw	1	; select bank2/3
  5849  0FF4  0087               	movwf	7
  5850  0FF5  1281               	bcf	1,5
  5851                           
  5852                           ;Switch_B1.c: 234: setRF_Learn(1,0);
  5853  0FF6  01A2               	clrf	setRF_Learn@command
  5854  0FF7  3001               	movlw	1
  5855  0FF8  31A4  2496  318E   	fcall	_setRF_Learn
  5856                           
  5857                           ;Switch_B1.c: 237: Sw_DimmerOffFunc(sw);
  5858  0FFB  0020               	movlb	0	; select bank0
  5859  0FFC  082E               	movf	setSw_Main@sw,w
  5860  0FFD  3192  2278         	fcall	_Sw_DimmerOffFunc
  5861  0FFF  0008               	return
  5862  1000                     __end_of_setSw_Main:	
  5863                           
  5864                           	psect	text12
  5865  2496                     __ptext12:	
  5866 ;; *************** function _setRF_Learn *****************
  5867 ;; Defined at:
  5868 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  rf              1    wreg     unsigned char 
  5871 ;;  command         1    2[BANK0 ] unsigned char 
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  rf              1    3[BANK0 ] unsigned char 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;		None               void
  5876 ;; Registers used:
  5877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5883 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;Total ram usage:        2 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    5
  5890 ;; This function calls:
  5891 ;;		_RfPointSelect
  5892 ;; This function is called by:
  5893 ;;		_setSw_Main
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function _setRF_Learn
  5899  2496                     _setRF_Learn:	
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5903                           ;setRF_Learn@rf stored from wreg
  5904  2496  0020               	movlb	0	; select bank0
  5905  2497  00A3               	movwf	setRF_Learn@rf
  5906                           
  5907                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  5908  2498  0823               	movf	setRF_Learn@rf,w
  5909  2499  31A3  23CA         	fcall	_RfPointSelect
  5910                           
  5911                           ;RF_Control_B1.c: 34: RF->Learn=command;
  5912  249B  087C               	movf	_RF,w
  5913  249C  0086               	movwf	6
  5914  249D  0187               	clrf	7
  5915  249E  0020               	movlb	0	; select bank0
  5916  249F  0822               	movf	setRF_Learn@command,w
  5917  24A0  1301               	bcf	1,6
  5918  24A1  1D03               	skipz
  5919  24A2  1701               	bsf	1,6
  5920  24A3  0008               	return
  5921  24A4                     __end_of_setRF_Learn:	
  5922                           
  5923                           	psect	text13
  5924  1E0A                     __ptext13:	
  5925 ;; *************** function _Sw_DimmerOnFunc *****************
  5926 ;; Defined at:
  5927 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  sw              1    wreg     unsigned char 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  sw              1    6[BANK0 ] unsigned char 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;		None               void
  5934 ;; Registers used:
  5935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;Total ram usage:        1 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    6
  5948 ;; This function calls:
  5949 ;;		_setDimmerLights_Switch
  5950 ;;		_setDimmerLights_Trigger
  5951 ;;		_setRFSW_Status
  5952 ;;		_setRF_DimmerLights
  5953 ;;		_setTxData
  5954 ;; This function is called by:
  5955 ;;		_setSw_Main
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function _Sw_DimmerOnFunc
  5961  1E0A                     _Sw_DimmerOnFunc:	
  5962                           
  5963                           ;incstack = 0
  5964                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5965                           ;Sw_DimmerOnFunc@sw stored from wreg
  5966  1E0A  0020               	movlb	0	; select bank0
  5967  1E0B  00A6               	movwf	Sw_DimmerOnFunc@sw
  5968                           
  5969                           ;Switch_B1.c: 248: Sw->Flag=1;
  5970  1E0C  086D               	movf	_Sw,w
  5971  1E0D  0086               	movwf	6
  5972  1E0E  3001               	movlw	1	; select bank2/3
  5973  1E0F  0087               	movwf	7
  5974  1E10  1781               	bsf	1,7
  5975                           
  5976                           ;Switch_B1.c: 249: if(!Sw->Status)
  5977  1E11  086D               	movf	_Sw,w
  5978  1E12  0086               	movwf	6
  5979  1E13  3001               	movlw	1	; select bank2/3
  5980  1E14  0087               	movwf	7
  5981  1E15  1B01               	btfsc	1,6
  5982  1E16  2E41               	goto	l9271
  5983                           
  5984                           ;Switch_B1.c: 250: {
  5985                           ;Switch_B1.c: 251: Sw->Status=1;
  5986  1E17  086D               	movf	_Sw,w
  5987  1E18  0086               	movwf	6
  5988  1E19  3001               	movlw	1	; select bank2/3
  5989  1E1A  0087               	movwf	7
  5990  1E1B  1701               	bsf	1,6
  5991                           
  5992                           ;Switch_B1.c: 252: setRFSW_Status(sw,1);
  5993  1E1C  01A2               	clrf	setRFSW_Status@command
  5994  1E1D  0AA2               	incf	setRFSW_Status@command,f
  5995  1E1E  0826               	movf	Sw_DimmerOnFunc@sw,w
  5996  1E1F  31A4  24A4  319E   	fcall	_setRFSW_Status
  5997                           
  5998                           ;Switch_B1.c: 254: setDimmerLights_Trigger(sw,1);
  5999  1E22  0020               	movlb	0	; select bank0
  6000  1E23  01A2               	clrf	setDimmerLights_Trigger@command
  6001  1E24  0AA2               	incf	setDimmerLights_Trigger@command,f
  6002  1E25  0826               	movf	Sw_DimmerOnFunc@sw,w
  6003  1E26  31A4  24E2  319E   	fcall	_setDimmerLights_Trigger
  6004                           
  6005                           ;Switch_B1.c: 255: setDimmerLights_Switch(sw,1);
  6006  1E29  0020               	movlb	0	; select bank0
  6007  1E2A  01A2               	clrf	setDimmerLights_Switch@command
  6008  1E2B  0AA2               	incf	setDimmerLights_Switch@command,f
  6009  1E2C  0826               	movf	Sw_DimmerOnFunc@sw,w
  6010  1E2D  31A4  24D2  319E   	fcall	_setDimmerLights_Switch
  6011                           
  6012                           ;Switch_B1.c: 257: setRF_DimmerLights(sw,Sw->Status);
  6013  1E30  0020               	movlb	0	; select bank0
  6014  1E31  086D               	movf	_Sw,w
  6015  1E32  0086               	movwf	6
  6016  1E33  3001               	movlw	1	; select bank2/3
  6017  1E34  0087               	movwf	7
  6018  1E35  3000               	movlw	0
  6019  1E36  1B01               	btfsc	1,6
  6020  1E37  3001               	movlw	1
  6021  1E38  00A0               	movwf	setRF_DimmerLights@on
  6022  1E39  0826               	movf	Sw_DimmerOnFunc@sw,w
  6023  1E3A  319F  274A  319E   	fcall	_setRF_DimmerLights
  6024                           
  6025                           ;Switch_B1.c: 258: setTxData(1);
  6026  1E3D  3001               	movlw	1
  6027  1E3E  3199  2148         	fcall	_setTxData
  6028                           
  6029                           ;Switch_B1.c: 259: }
  6030  1E40  0008               	return
  6031  1E41                     l9271:	
  6032                           
  6033                           ;Switch_B1.c: 260: else
  6034                           ;Switch_B1.c: 261: {
  6035                           ;Switch_B1.c: 262: Sw->Status=0;
  6036  1E41  0020               	movlb	0	; select bank0
  6037  1E42  086D               	movf	_Sw,w
  6038  1E43  0086               	movwf	6
  6039  1E44  3001               	movlw	1	; select bank2/3
  6040  1E45  0087               	movwf	7
  6041  1E46  1301               	bcf	1,6
  6042                           
  6043                           ;Switch_B1.c: 263: setRFSW_Status(sw,Sw->Status);
  6044  1E47  086D               	movf	_Sw,w
  6045  1E48  0086               	movwf	6
  6046  1E49  3001               	movlw	1	; select bank2/3
  6047  1E4A  0087               	movwf	7
  6048  1E4B  3000               	movlw	0
  6049  1E4C  1B01               	btfsc	1,6
  6050  1E4D  3001               	movlw	1
  6051  1E4E  00A2               	movwf	setRFSW_Status@command
  6052  1E4F  0826               	movf	Sw_DimmerOnFunc@sw,w
  6053  1E50  31A4  24A4         	fcall	_setRFSW_Status
  6054  1E52  0008               	return
  6055  1E53                     __end_of_Sw_DimmerOnFunc:	
  6056                           
  6057                           	psect	text14
  6058  1278                     __ptext14:	
  6059 ;; *************** function _Sw_DimmerOffFunc *****************
  6060 ;; Defined at:
  6061 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  sw              1    wreg     unsigned char 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  sw              1    9[BANK0 ] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;		None               void
  6068 ;; Registers used:
  6069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;Total ram usage:        3 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    6
  6082 ;; This function calls:
  6083 ;;		_setDelayOff_GO
  6084 ;;		_setDimmerLights_AdjGo
  6085 ;;		_setDimmerLights_Switch
  6086 ;;		_setDimmerLights_Trigger
  6087 ;;		_setDimmerLights_TriggerAdj
  6088 ;;		_setRF_DimmerLights
  6089 ;;		_setTxData
  6090 ;; This function is called by:
  6091 ;;		_setSw_Main
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           
  6096                           ;psect for function _Sw_DimmerOffFunc
  6097  1278                     _Sw_DimmerOffFunc:	
  6098                           
  6099                           ;incstack = 0
  6100                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6101                           ;Sw_DimmerOffFunc@sw stored from wreg
  6102  1278  0020               	movlb	0	; select bank0
  6103  1279  00A9               	movwf	Sw_DimmerOffFunc@sw
  6104                           
  6105                           ;Switch_B1.c: 269: if(Sw->Flag)
  6106  127A  086D               	movf	_Sw,w
  6107  127B  0086               	movwf	6
  6108  127C  3001               	movlw	1	; select bank2/3
  6109  127D  0087               	movwf	7
  6110  127E  1F81               	btfss	1,7
  6111  127F  0008               	return
  6112                           
  6113                           ;Switch_B1.c: 270: {
  6114                           ;Switch_B1.c: 271: Sw->Flag=0;
  6115  1280  086D               	movf	_Sw,w
  6116  1281  0086               	movwf	6
  6117  1282  3001               	movlw	1	; select bank2/3
  6118  1283  0087               	movwf	7
  6119  1284  1381               	bcf	1,7
  6120                           
  6121                           ;Switch_B1.c: 272: if(Sw->Status)
  6122  1285  086D               	movf	_Sw,w
  6123  1286  0086               	movwf	6
  6124  1287  3001               	movlw	1	; select bank2/3
  6125  1288  0087               	movwf	7
  6126  1289  1F01               	btfss	1,6
  6127  128A  2AC4               	goto	l9303
  6128                           
  6129                           ;Switch_B1.c: 273: {
  6130                           ;Switch_B1.c: 274: if(Sw->Adj)
  6131  128B  0A6D               	incf	_Sw,w
  6132  128C  0086               	movwf	6
  6133  128D  3001               	movlw	1	; select bank2/3
  6134  128E  0087               	movwf	7
  6135  128F  1C01               	btfss	1,0
  6136  1290  0008               	return
  6137                           
  6138                           ;Switch_B1.c: 275: {
  6139                           ;Switch_B1.c: 276: Sw->Adj=0;
  6140  1291  0A6D               	incf	_Sw,w
  6141  1292  0086               	movwf	6
  6142  1293  3001               	movlw	1	; select bank2/3
  6143  1294  0087               	movwf	7
  6144  1295  1001               	bcf	1,0
  6145                           
  6146                           ;Switch_B1.c: 277: setDimmerLights_TriggerAdj(sw,1);
  6147  1296  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6148  1297  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6149  1298  0829               	movf	Sw_DimmerOffFunc@sw,w
  6150  1299  3188  2000  3192   	fcall	_setDimmerLights_TriggerAdj
  6151                           
  6152                           ;Switch_B1.c: 278: setDimmerLights_AdjGo(sw,0);
  6153  129C  0020               	movlb	0	; select bank0
  6154  129D  01A2               	clrf	setDimmerLights_AdjGo@command
  6155  129E  0829               	movf	Sw_DimmerOffFunc@sw,w
  6156  129F  31A5  2522  3192   	fcall	_setDimmerLights_AdjGo
  6157                           
  6158                           ;Switch_B1.c: 280: Product->Data[17]=Product->Data[26+sw];
  6159  12A2  0020               	movlb	0	; select bank0
  6160  12A3  0829               	movf	Sw_DimmerOffFunc@sw,w
  6161  12A4  3E1A               	addlw	26
  6162  12A5  076F               	addwf	_Product,w
  6163  12A6  00A7               	movwf	??_Sw_DimmerOffFunc
  6164  12A7  0827               	movf	??_Sw_DimmerOffFunc,w
  6165  12A8  0086               	movwf	6
  6166  12A9  3001               	movlw	1	; select bank2/3
  6167  12AA  0087               	movwf	7
  6168  12AB  0801               	movf	1,w
  6169  12AC  00A8               	movwf	??_Sw_DimmerOffFunc+1
  6170  12AD  086F               	movf	_Product,w
  6171  12AE  3E11               	addlw	17
  6172  12AF  0086               	movwf	6
  6173  12B0  3001               	movlw	1	; select bank2/3
  6174  12B1  0087               	movwf	7
  6175  12B2  0828               	movf	??_Sw_DimmerOffFunc+1,w
  6176  12B3  0081               	movwf	1
  6177                           
  6178                           ;Switch_B1.c: 281: setRF_DimmerLights(sw,Sw->Status);
  6179  12B4  086D               	movf	_Sw,w
  6180  12B5  0086               	movwf	6
  6181  12B6  3001               	movlw	1	; select bank2/3
  6182  12B7  0087               	movwf	7
  6183  12B8  3000               	movlw	0
  6184  12B9  1B01               	btfsc	1,6
  6185  12BA  3001               	movlw	1
  6186  12BB  00A0               	movwf	setRF_DimmerLights@on
  6187  12BC  0829               	movf	Sw_DimmerOffFunc@sw,w
  6188  12BD  319F  274A  3192   	fcall	_setRF_DimmerLights
  6189                           
  6190                           ;Switch_B1.c: 282: setTxData(1);
  6191  12C0  3001               	movlw	1
  6192  12C1  3199  2148         	fcall	_setTxData
  6193                           
  6194                           ;Switch_B1.c: 284: }
  6195                           ;Switch_B1.c: 285: }
  6196  12C3  0008               	return
  6197  12C4                     l9303:	
  6198                           
  6199                           ;Switch_B1.c: 286: else
  6200                           ;Switch_B1.c: 287: {
  6201                           ;Switch_B1.c: 288: setDimmerLights_Trigger(sw,1);
  6202  12C4  0020               	movlb	0	; select bank0
  6203  12C5  01A2               	clrf	setDimmerLights_Trigger@command
  6204  12C6  0AA2               	incf	setDimmerLights_Trigger@command,f
  6205  12C7  0829               	movf	Sw_DimmerOffFunc@sw,w
  6206  12C8  31A4  24E2  3192   	fcall	_setDimmerLights_Trigger
  6207                           
  6208                           ;Switch_B1.c: 289: setDimmerLights_Switch(sw,0);
  6209  12CB  0020               	movlb	0	; select bank0
  6210  12CC  01A2               	clrf	setDimmerLights_Switch@command
  6211  12CD  0829               	movf	Sw_DimmerOffFunc@sw,w
  6212  12CE  31A4  24D2  3192   	fcall	_setDimmerLights_Switch
  6213                           
  6214                           ;Switch_B1.c: 291: setRF_DimmerLights(sw,Sw->Status);
  6215  12D1  0020               	movlb	0	; select bank0
  6216  12D2  086D               	movf	_Sw,w
  6217  12D3  0086               	movwf	6
  6218  12D4  3001               	movlw	1	; select bank2/3
  6219  12D5  0087               	movwf	7
  6220  12D6  3000               	movlw	0
  6221  12D7  1B01               	btfsc	1,6
  6222  12D8  3001               	movlw	1
  6223  12D9  00A0               	movwf	setRF_DimmerLights@on
  6224  12DA  0829               	movf	Sw_DimmerOffFunc@sw,w
  6225  12DB  319F  274A  3192   	fcall	_setRF_DimmerLights
  6226                           
  6227                           ;Switch_B1.c: 292: setDelayOff_GO(sw,0,0);
  6228  12DE  0020               	movlb	0	; select bank0
  6229  12DF  01A3               	clrf	setDelayOff_GO@command
  6230  12E0  01A4               	clrf	setDelayOff_GO@value
  6231  12E1  0829               	movf	Sw_DimmerOffFunc@sw,w
  6232  12E2  319B  23B2  3192   	fcall	_setDelayOff_GO
  6233                           
  6234                           ;Switch_B1.c: 293: setTxData(1);
  6235  12E5  3001               	movlw	1
  6236  12E6  3199  2148         	fcall	_setTxData
  6237  12E8  0008               	return
  6238  12E9                     __end_of_Sw_DimmerOffFunc:	
  6239                           
  6240                           	psect	text15
  6241  18A1                     __ptext15:	
  6242 ;; *************** function _Sw_DimmerAdjFunc *****************
  6243 ;; Defined at:
  6244 ;;		line 298 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  sw              1    wreg     unsigned char 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  sw              1    4[BANK0 ] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;Total ram usage:        1 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    6
  6265 ;; This function calls:
  6266 ;;		_setDimmerLights_AdjGo
  6267 ;;		_setDimmerLights_TriggerAdj
  6268 ;;		_setRFSW_Status
  6269 ;; This function is called by:
  6270 ;;		_setSw_Main
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           
  6275                           ;psect for function _Sw_DimmerAdjFunc
  6276  18A1                     _Sw_DimmerAdjFunc:	
  6277                           
  6278                           ;incstack = 0
  6279                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6280                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6281  18A1  0020               	movlb	0	; select bank0
  6282  18A2  00A4               	movwf	Sw_DimmerAdjFunc@sw
  6283                           
  6284                           ;Switch_B1.c: 300: if(Sw->Flag)
  6285  18A3  086D               	movf	_Sw,w
  6286  18A4  0086               	movwf	6
  6287  18A5  3001               	movlw	1	; select bank2/3
  6288  18A6  0087               	movwf	7
  6289  18A7  1F81               	btfss	1,7
  6290  18A8  0008               	return
  6291                           
  6292                           ;Switch_B1.c: 301: {
  6293                           ;Switch_B1.c: 302: Sw->Adj=1;
  6294  18A9  0A6D               	incf	_Sw,w
  6295  18AA  0086               	movwf	6
  6296  18AB  3001               	movlw	1	; select bank2/3
  6297  18AC  0087               	movwf	7
  6298  18AD  1401               	bsf	1,0
  6299                           
  6300                           ;Switch_B1.c: 303: Sw->Status=1;
  6301  18AE  086D               	movf	_Sw,w
  6302  18AF  0086               	movwf	6
  6303  18B0  3001               	movlw	1	; select bank2/3
  6304  18B1  0087               	movwf	7
  6305  18B2  1701               	bsf	1,6
  6306                           
  6307                           ;Switch_B1.c: 304: setRFSW_Status(sw,1);
  6308  18B3  01A2               	clrf	setRFSW_Status@command
  6309  18B4  0AA2               	incf	setRFSW_Status@command,f
  6310  18B5  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6311  18B6  31A4  24A4  3198   	fcall	_setRFSW_Status
  6312                           
  6313                           ;Switch_B1.c: 306: setDimmerLights_TriggerAdj(sw,1);
  6314  18B9  0020               	movlb	0	; select bank0
  6315  18BA  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6316  18BB  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6317  18BC  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6318  18BD  3188  2000  3198   	fcall	_setDimmerLights_TriggerAdj
  6319                           
  6320                           ;Switch_B1.c: 307: setDimmerLights_AdjGo(sw,1);
  6321  18C0  0020               	movlb	0	; select bank0
  6322  18C1  01A2               	clrf	setDimmerLights_AdjGo@command
  6323  18C2  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6324  18C3  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6325  18C4  31A5  2522         	fcall	_setDimmerLights_AdjGo
  6326  18C6  0008               	return
  6327  18C7                     __end_of_Sw_DimmerAdjFunc:	
  6328                           
  6329                           	psect	text16
  6330  0800                     __ptext16:	
  6331 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6332 ;; Defined at:
  6333 ;;		line 460 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  lights          1    wreg     unsigned char 
  6336 ;;  command         1    2[BANK0 ] unsigned char 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  lights          1    3[BANK0 ] unsigned char 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;		None               void
  6341 ;; Registers used:
  6342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6348 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;Total ram usage:        2 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    5
  6355 ;; This function calls:
  6356 ;;		_DimmerLightsPointSelect
  6357 ;; This function is called by:
  6358 ;;		_Sw_DimmerOffFunc
  6359 ;;		_Sw_DimmerAdjFunc
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           
  6364                           ;psect for function _setDimmerLights_TriggerAdj
  6365  0800                     _setDimmerLights_TriggerAdj:	
  6366                           
  6367                           ;incstack = 0
  6368                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6369                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6370  0800  0020               	movlb	0	; select bank0
  6371  0801  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6372                           
  6373                           ;Dimmer_B1.c: 462: DimmerLightsPointSelect(lights);
  6374  0802  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6375  0803  31A5  2555         	fcall	_DimmerLightsPointSelect
  6376                           
  6377                           ;Dimmer_B1.c: 463: DimmerLights->TriggerAdj=command;
  6378  0805  0020               	movlb	0	; select bank0
  6379  0806  086C               	movf	_DimmerLights,w
  6380  0807  3E09               	addlw	9
  6381  0808  0086               	movwf	6
  6382  0809  3001               	movlw	1	; select bank2/3
  6383  080A  0087               	movwf	7
  6384  080B  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6385  080C  1181               	bcf	1,3
  6386  080D  1D03               	skipz
  6387  080E  1581               	bsf	1,3
  6388  080F  0008               	return
  6389  0810                     __end_of_setDimmerLights_TriggerAdj:	
  6390                           
  6391                           	psect	text17
  6392  2522                     __ptext17:	
  6393 ;; *************** function _setDimmerLights_AdjGo *****************
  6394 ;; Defined at:
  6395 ;;		line 450 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  lights          1    wreg     unsigned char 
  6398 ;;  command         1    2[BANK0 ] unsigned char 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  lights          1    3[BANK0 ] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;		None               void
  6403 ;; Registers used:
  6404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6410 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;Total ram usage:        2 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    5
  6417 ;; This function calls:
  6418 ;;		_DimmerLightsPointSelect
  6419 ;; This function is called by:
  6420 ;;		_Sw_DimmerOffFunc
  6421 ;;		_Sw_DimmerAdjFunc
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           
  6426                           ;psect for function _setDimmerLights_AdjGo
  6427  2522                     _setDimmerLights_AdjGo:	
  6428                           
  6429                           ;incstack = 0
  6430                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6431                           ;setDimmerLights_AdjGo@lights stored from wreg
  6432  2522  0020               	movlb	0	; select bank0
  6433  2523  00A3               	movwf	setDimmerLights_AdjGo@lights
  6434                           
  6435                           ;Dimmer_B1.c: 452: DimmerLightsPointSelect(lights);
  6436  2524  0823               	movf	setDimmerLights_AdjGo@lights,w
  6437  2525  31A5  2555         	fcall	_DimmerLightsPointSelect
  6438                           
  6439                           ;Dimmer_B1.c: 453: DimmerLights->AdjGo=command;
  6440  2527  0020               	movlb	0	; select bank0
  6441  2528  086C               	movf	_DimmerLights,w
  6442  2529  3E09               	addlw	9
  6443  252A  0086               	movwf	6
  6444  252B  3001               	movlw	1	; select bank2/3
  6445  252C  0087               	movwf	7
  6446  252D  0822               	movf	setDimmerLights_AdjGo@command,w
  6447  252E  1101               	bcf	1,2
  6448  252F  1D03               	skipz
  6449  2530  1501               	bsf	1,2
  6450  2531  0008               	return
  6451  2532                     __end_of_setDimmerLights_AdjGo:	
  6452                           
  6453                           	psect	text18
  6454  247B                     __ptext18:	
  6455 ;; *************** function _Switch_Initialization *****************
  6456 ;; Defined at:
  6457 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;		None               void
  6464 ;; Registers used:
  6465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6475 ;;Total ram usage:        0 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    7
  6478 ;; This function calls:
  6479 ;;		_TouchPower
  6480 ;;		_setSw_Initialization
  6481 ;; This function is called by:
  6482 ;;		_main
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           
  6487                           ;psect for function _Switch_Initialization
  6488  247B                     _Switch_Initialization:	
  6489                           
  6490                           ;Switch_B1.c: 40: TouchPower();
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6494  247B  31A3  2343  31A4   	fcall	_TouchPower
  6495                           
  6496                           ;Switch_B1.c: 42: WPUB1=0;
  6497  247E  0024               	movlb	4	; select bank4
  6498  247F  108D               	bcf	13,1	;volatile
  6499                           
  6500                           ;Switch_B1.c: 51: setSw_Initialization(1);
  6501  2480  3001               	movlw	1
  6502  2481  31A3  2388  31A4   	fcall	_setSw_Initialization
  6503                           
  6504                           ;Switch_B1.c: 54: setSw_Initialization(2);
  6505  2484  3002               	movlw	2
  6506  2485  31A3  2388         	fcall	_setSw_Initialization
  6507  2487  0008               	return
  6508  2488                     __end_of_Switch_Initialization:	
  6509                           
  6510                           	psect	text19
  6511  2388                     __ptext19:	
  6512 ;; *************** function _setSw_Initialization *****************
  6513 ;; Defined at:
  6514 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  sw              1    wreg     unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  sw              1    4[BANK0 ] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;		None               void
  6521 ;; Registers used:
  6522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;Total ram usage:        1 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    6
  6535 ;; This function calls:
  6536 ;;		_setLED
  6537 ;; This function is called by:
  6538 ;;		_Switch_Initialization
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           
  6543                           ;psect for function _setSw_Initialization
  6544  2388                     _setSw_Initialization:	
  6545                           
  6546                           ;incstack = 0
  6547                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6548                           ;setSw_Initialization@sw stored from wreg
  6549  2388  0020               	movlb	0	; select bank0
  6550  2389  00A4               	movwf	setSw_Initialization@sw
  6551                           
  6552                           ;Switch_B1.c: 80: setLED(sw,1);
  6553  238A  01A2               	clrf	setLED@command
  6554  238B  0AA2               	incf	setLED@command,f
  6555  238C  0824               	movf	setSw_Initialization@sw,w
  6556  238D  3190  2023         	fcall	_setLED
  6557  238F  0008               	return
  6558  2390                     __end_of_setSw_Initialization:	
  6559                           
  6560                           	psect	text20
  6561  2343                     __ptext20:	
  6562 ;; *************** function _TouchPower *****************
  6563 ;; Defined at:
  6564 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;		None               void
  6571 ;; Registers used:
  6572 ;;		None
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    4
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_Switch_Initialization
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function _TouchPower
  6594  2343                     _TouchPower:	
  6595  2343                     l2928:	
  6596                           ;Switch_B1.c: 11: while(RC5 == 0)
  6597                           
  6598                           ;incstack = 0
  6599                           ; Regs used in _TouchPower: []
  6600                           
  6601  2343  0020               	movlb	0	; select bank0
  6602  2344  1A8E               	btfsc	14,5	;volatile
  6603  2345  0008               	return
  6604                           
  6605                           ;Switch_B1.c: 12: RC5=1;
  6606  2346  168E               	bsf	14,5	;volatile
  6607  2347  2B43               	goto	l2928
  6608  2348                     __end_of_TouchPower:	
  6609                           
  6610                           	psect	text21
  6611  233A                     __ptext21:	
  6612 ;; *************** function _RF_Main *****************
  6613 ;; Defined at:
  6614 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;		None
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;		None
  6619 ;; Return value:  Size  Location     Type
  6620 ;;		None               void
  6621 ;; Registers used:
  6622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6632 ;;Total ram usage:        0 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:   13
  6635 ;; This function calls:
  6636 ;;		_setRF_Main
  6637 ;; This function is called by:
  6638 ;;		_main
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           
  6643                           ;psect for function _RF_Main
  6644  233A                     _RF_Main:	
  6645                           
  6646                           ;RF_Control_B1.c: 27: setRF_Main(1);
  6647                           
  6648                           ;incstack = 0
  6649                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6650  233A  3001               	movlw	1
  6651  233B  3195  2546         	fcall	_setRF_Main
  6652  233D  0008               	return
  6653  233E                     __end_of_RF_Main:	
  6654                           
  6655                           	psect	text22
  6656  1546                     __ptext22:	
  6657 ;; *************** function _setRF_Main *****************
  6658 ;; Defined at:
  6659 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  rf              1    wreg     unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  rf              1   74[BANK0 ] unsigned char 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;		None               void
  6666 ;; Registers used:
  6667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;Total ram usage:        3 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:   12
  6680 ;; This function calls:
  6681 ;;		_CC2500_RxData
  6682 ;;		_CC2500_TxData
  6683 ;;		_CC2500_WriteCommand
  6684 ;;		_RF_RxDisable
  6685 ;;		_RfPointSelect
  6686 ;;		_getRxData
  6687 ;;		_setINT_GO
  6688 ;; This function is called by:
  6689 ;;		_RF_Main
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           
  6694                           ;psect for function _setRF_Main
  6695  1546                     _setRF_Main:	
  6696                           
  6697                           ;incstack = 0
  6698                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6699                           ;setRF_Main@rf stored from wreg
  6700  1546  0020               	movlb	0	; select bank0
  6701  1547  00EA               	movwf	setRF_Main@rf
  6702                           
  6703                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  6704  1548  086A               	movf	setRF_Main@rf,w
  6705  1549  31A3  23CA  3195   	fcall	_RfPointSelect
  6706                           
  6707                           ;RF_Control_B1.c: 61: if(RF->Enable)
  6708  154C  087C               	movf	_RF,w
  6709  154D  0086               	movwf	6
  6710  154E  0187               	clrf	7
  6711  154F  1C01               	btfss	1,0
  6712  1550  0008               	return
  6713                           
  6714                           ;RF_Control_B1.c: 62: {
  6715                           ;RF_Control_B1.c: 68: RF->Key=((RA0 || RB1 || RA6 || RA4 ) && RF->Learn == 0)?1:0;
  6716  1551  0020               	movlb	0	; select bank0
  6717  1552  01EB               	clrf	_setRF_Main$4359
  6718  1553  1C0C               	btfss	12,0	;volatile
  6719  1554  188D               	btfsc	13,1	;volatile
  6720  1555  2D5A               	goto	l9647
  6721  1556  1B0C               	btfsc	12,6	;volatile
  6722  1557  2D5A               	goto	l9647
  6723  1558  1E0C               	btfss	12,4	;volatile
  6724  1559  2D61               	goto	l9651
  6725  155A                     l9647:	
  6726  155A  087C               	movf	_RF,w
  6727  155B  0086               	movwf	6
  6728  155C  0187               	clrf	7
  6729  155D  1B01               	btfsc	1,6
  6730  155E  2D61               	goto	l9651
  6731  155F  01EB               	clrf	_setRF_Main$4359
  6732  1560  0AEB               	incf	_setRF_Main$4359,f
  6733  1561                     l9651:	
  6734  1561  087C               	movf	_RF,w
  6735  1562  0086               	movwf	6
  6736  1563  0187               	clrf	7
  6737  1564  086B               	movf	_setRF_Main$4359,w
  6738  1565  1381               	bcf	1,7
  6739  1566  1D03               	skipz
  6740  1567  1781               	bsf	1,7
  6741                           
  6742                           ;RF_Control_B1.c: 75: if(RF->Key)
  6743  1568  087C               	movf	_RF,w
  6744  1569  0086               	movwf	6
  6745  156A  0187               	clrf	7
  6746  156B  1F81               	btfss	1,7
  6747  156C  2D71               	goto	l9655
  6748                           
  6749                           ;RF_Control_B1.c: 76: {
  6750                           ;RF_Control_B1.c: 77: RF_RxDisable(1);
  6751  156D  3001               	movlw	1
  6752  156E  3199  211C         	fcall	_RF_RxDisable
  6753                           
  6754                           ;RF_Control_B1.c: 78: }
  6755  1570  0008               	return
  6756  1571                     l9655:	
  6757                           
  6758                           ;RF_Control_B1.c: 79: else
  6759                           ;RF_Control_B1.c: 80: {
  6760                           ;RF_Control_B1.c: 81: if(RF->ReceiveGO)
  6761  1571  087C               	movf	_RF,w
  6762  1572  0086               	movwf	6
  6763  1573  0187               	clrf	7
  6764  1574  1C81               	btfss	1,1
  6765  1575  2D81               	goto	l9663
  6766                           
  6767                           ;RF_Control_B1.c: 82: {
  6768                           ;RF_Control_B1.c: 83: RF->ReceiveGO=0;
  6769  1576  087C               	movf	_RF,w
  6770  1577  0086               	movwf	6
  6771  1578  0187               	clrf	7
  6772  1579  1081               	bcf	1,1
  6773                           
  6774                           ;RF_Control_B1.c: 84: CC2500_RxData();
  6775  157A  3191  2143  3195   	fcall	_CC2500_RxData
  6776                           
  6777                           ;RF_Control_B1.c: 90: getRxData(1);
  6778  157D  3001               	movlw	1
  6779  157E  319E  26A1         	fcall	_getRxData
  6780                           
  6781                           ;RF_Control_B1.c: 93: }
  6782  1580  0008               	return
  6783  1581                     l9663:	
  6784                           
  6785                           ;RF_Control_B1.c: 94: else
  6786                           ;RF_Control_B1.c: 95: {
  6787                           ;RF_Control_B1.c: 96: if(RF->TransceiveGO)
  6788  1581  087C               	movf	_RF,w
  6789  1582  0086               	movwf	6
  6790  1583  0187               	clrf	7
  6791  1584  1D01               	btfss	1,2
  6792  1585  2DB2               	goto	l9681
  6793                           
  6794                           ;RF_Control_B1.c: 97: {
  6795                           ;RF_Control_B1.c: 98: RF_RxDisable(1);
  6796  1586  3001               	movlw	1
  6797  1587  3199  211C  3195   	fcall	_RF_RxDisable
  6798                           
  6799                           ;RF_Control_B1.c: 99: if(RF->Debounce == 0)
  6800  158A  087C               	movf	_RF,w
  6801  158B  0086               	movwf	6
  6802  158C  0187               	clrf	7
  6803  158D  1A81               	btfsc	1,5
  6804  158E  2DA7               	goto	l9677
  6805                           
  6806                           ;RF_Control_B1.c: 100: {
  6807                           ;RF_Control_B1.c: 101: RF->DebounceTime++;
  6808  158F  3001               	movlw	1
  6809  1590  0020               	movlb	0	; select bank0
  6810  1591  00E9               	movwf	??_setRF_Main
  6811  1592  0A7C               	incf	_RF,w
  6812  1593  0086               	movwf	6
  6813  1594  0187               	clrf	7
  6814  1595  0869               	movf	??_setRF_Main,w
  6815  1596  0781               	addwf	1,f
  6816                           
  6817                           ;RF_Control_B1.c: 102: if(RF->DebounceTime == 25)
  6818  1597  0A7C               	incf	_RF,w
  6819  1598  0086               	movwf	6
  6820  1599  0187               	clrf	7
  6821  159A  0801               	movf	1,w
  6822  159B  3A19               	xorlw	25
  6823  159C  1D03               	skipz
  6824  159D  0008               	return
  6825                           
  6826                           ;RF_Control_B1.c: 103: {
  6827                           ;RF_Control_B1.c: 104: RF->DebounceTime=0;
  6828  159E  0A7C               	incf	_RF,w
  6829  159F  0086               	movwf	6
  6830  15A0  0187               	clrf	7
  6831  15A1  0181               	clrf	1
  6832                           
  6833                           ;RF_Control_B1.c: 105: RF->Debounce=1;
  6834  15A2  087C               	movf	_RF,w
  6835  15A3  0086               	movwf	6
  6836  15A4  0187               	clrf	7
  6837  15A5  1681               	bsf	1,5
  6838                           
  6839                           ;RF_Control_B1.c: 106: }
  6840                           ;RF_Control_B1.c: 107: }
  6841  15A6  0008               	return
  6842  15A7                     l9677:	
  6843                           
  6844                           ;RF_Control_B1.c: 108: else
  6845                           ;RF_Control_B1.c: 109: {
  6846                           ;RF_Control_B1.c: 110: RF->Debounce=0;
  6847  15A7  087C               	movf	_RF,w
  6848  15A8  0086               	movwf	6
  6849  15A9  0187               	clrf	7
  6850  15AA  1281               	bcf	1,5
  6851                           
  6852                           ;RF_Control_B1.c: 111: RF->TransceiveGO=0;
  6853  15AB  087C               	movf	_RF,w
  6854  15AC  0086               	movwf	6
  6855  15AD  0187               	clrf	7
  6856  15AE  1101               	bcf	1,2
  6857                           
  6858                           ;RF_Control_B1.c: 112: CC2500_TxData();
  6859  15AF  319D  2538         	fcall	_CC2500_TxData
  6860                           
  6861                           ;RF_Control_B1.c: 113: }
  6862                           ;RF_Control_B1.c: 114: }
  6863  15B1  0008               	return
  6864  15B2                     l9681:	
  6865                           
  6866                           ;RF_Control_B1.c: 115: else
  6867                           ;RF_Control_B1.c: 116: {
  6868                           ;RF_Control_B1.c: 117: if(!RF->RxStatus && 1)
  6869  15B2  087C               	movf	_RF,w
  6870  15B3  0086               	movwf	6
  6871  15B4  0187               	clrf	7
  6872  15B5  1981               	btfsc	1,3
  6873  15B6  0008               	return
  6874                           
  6875                           ;RF_Control_B1.c: 118: {
  6876                           ;RF_Control_B1.c: 119: RF->RxStatus=1;
  6877  15B7  087C               	movf	_RF,w
  6878  15B8  0086               	movwf	6
  6879  15B9  0187               	clrf	7
  6880  15BA  1581               	bsf	1,3
  6881                           
  6882                           ;RF_Control_B1.c: 120: CC2500_WriteCommand(0x36);
  6883  15BB  3036               	movlw	54
  6884  15BC  31A4  24C2  3195   	fcall	_CC2500_WriteCommand
  6885                           
  6886                           ;RF_Control_B1.c: 121: CC2500_WriteCommand(0x34);
  6887  15BF  3034               	movlw	52
  6888  15C0  31A4  24C2  3195   	fcall	_CC2500_WriteCommand
  6889                           
  6890                           ;RF_Control_B1.c: 122: setINT_GO(1);
  6891  15C3  3001               	movlw	1
  6892  15C4  31A3  23A1         	fcall	_setINT_GO
  6893  15C6  0008               	return
  6894  15C7                     __end_of_setRF_Main:	
  6895                           
  6896                           	psect	text23
  6897  1EA1                     __ptext23:	
  6898 ;; *************** function _getRxData *****************
  6899 ;; Defined at:
  6900 ;;		line 208 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  rf              1    wreg     unsigned char 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  rf              1   72[BANK0 ] unsigned char 
  6905 ;;  i               1    0        unsigned char 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;		None               void
  6908 ;; Registers used:
  6909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;Total ram usage:        1 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:   11
  6922 ;; This function calls:
  6923 ;;		_RfPointSelect
  6924 ;;		_setControl_Lights_Table
  6925 ;;		_setLog_Code
  6926 ;; This function is called by:
  6927 ;;		_setRF_Main
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _getRxData
  6933  1EA1                     _getRxData:	
  6934                           
  6935                           ;incstack = 0
  6936                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6937                           ;getRxData@rf stored from wreg
  6938  1EA1  0020               	movlb	0	; select bank0
  6939  1EA2  00E8               	movwf	getRxData@rf
  6940                           
  6941                           ;RF_Control_B1.c: 210: unsigned char i;
  6942                           ;RF_Control_B1.c: 211: RfPointSelect(rf);
  6943  1EA3  0868               	movf	getRxData@rf,w
  6944  1EA4  31A3  23CA  319E   	fcall	_RfPointSelect
  6945                           
  6946                           ;RF_Control_B1.c: 212: if(RF->Learn)
  6947  1EA7  087C               	movf	_RF,w
  6948  1EA8  0086               	movwf	6
  6949  1EA9  0187               	clrf	7
  6950  1EAA  1F01               	btfss	1,6
  6951  1EAB  2EB8               	goto	l9227
  6952                           
  6953                           ;RF_Control_B1.c: 213: {
  6954                           ;RF_Control_B1.c: 214: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  6955  1EAC  0021               	movlb	1	; select bank1
  6956  1EAD  08A0               	movf	_RF_Data^(0+128),f
  6957  1EAE  1D03               	skipz
  6958  1EAF  0008               	return
  6959  1EB0  0821               	movf	(_RF_Data^(0+128)+1),w
  6960  1EB1  3A64               	xorlw	100
  6961  1EB2  1D03               	skipz
  6962  1EB3  0008               	return
  6963                           
  6964                           ;RF_Control_B1.c: 215: {
  6965                           ;RF_Control_B1.c: 216: setLog_Code(1);
  6966  1EB4  3001               	movlw	1
  6967  1EB5  319D  25C2         	fcall	_setLog_Code
  6968                           
  6969                           ;RF_Control_B1.c: 217: }
  6970                           ;RF_Control_B1.c: 218: }
  6971  1EB7  0008               	return
  6972  1EB8                     l9227:	
  6973                           
  6974                           ;RF_Control_B1.c: 219: else
  6975                           ;RF_Control_B1.c: 220: {
  6976                           ;RF_Control_B1.c: 221: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  6977  1EB8  0021               	movlb	1	; select bank1
  6978  1EB9  08A0               	movf	_RF_Data^(0+128),f
  6979  1EBA  1D03               	skipz
  6980  1EBB  0008               	return
  6981  1EBC  0821               	movf	(_RF_Data^(0+128)+1),w
  6982  1EBD  3A02               	xorlw	2
  6983  1EBE  1D03               	skipz
  6984  1EBF  0008               	return
  6985                           
  6986                           ;RF_Control_B1.c: 222: {
  6987                           ;RF_Control_B1.c: 223: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  6988  1EC0  082C               	movf	(_RF_Data^(0+128)+12),w
  6989  1EC1  3AFF               	xorlw	255
  6990  1EC2  1D03               	skipz
  6991  1EC3  2ECE               	goto	l9239
  6992  1EC4  082D               	movf	(_RF_Data^(0+128)+13),w
  6993  1EC5  3AFF               	xorlw	255
  6994  1EC6  1D03               	skipz
  6995  1EC7  2ECE               	goto	l9239
  6996  1EC8  082E               	movf	(_RF_Data^(0+128)+14),w
  6997  1EC9  3AFF               	xorlw	255
  6998  1ECA  1D03               	skipz
  6999  1ECB  2ECE               	goto	l9239
  7000                           
  7001                           ;RF_Control_B1.c: 224: {
  7002                           ;RF_Control_B1.c: 225: __nop();
  7003  1ECC  0000               	nop
  7004                           
  7005                           ;RF_Control_B1.c: 226: }
  7006  1ECD  0008               	return
  7007  1ECE                     l9239:	
  7008                           
  7009                           ;RF_Control_B1.c: 227: else
  7010                           ;RF_Control_B1.c: 228: {
  7011                           ;RF_Control_B1.c: 229: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  7012  1ECE  0020               	movlb	0	; select bank0
  7013  1ECF  086F               	movf	_Product,w
  7014  1ED0  3E0C               	addlw	12
  7015  1ED1  0086               	movwf	6
  7016  1ED2  3001               	movlw	1	; select bank2/3
  7017  1ED3  0087               	movwf	7
  7018  1ED4  0021               	movlb	1	; select bank1
  7019  1ED5  082C               	movf	(_RF_Data^(0+128)+12),w
  7020  1ED6  0601               	xorwf	1,w
  7021  1ED7  1D03               	skipz
  7022  1ED8  0008               	return
  7023  1ED9  0020               	movlb	0	; select bank0
  7024  1EDA  086F               	movf	_Product,w
  7025  1EDB  3E0D               	addlw	13
  7026  1EDC  0086               	movwf	6
  7027  1EDD  3001               	movlw	1	; select bank2/3
  7028  1EDE  0087               	movwf	7
  7029  1EDF  0021               	movlb	1	; select bank1
  7030  1EE0  082D               	movf	(_RF_Data^(0+128)+13),w
  7031  1EE1  0601               	xorwf	1,w
  7032  1EE2  1D03               	skipz
  7033  1EE3  0008               	return
  7034  1EE4  0020               	movlb	0	; select bank0
  7035  1EE5  086F               	movf	_Product,w
  7036  1EE6  3E0E               	addlw	14
  7037  1EE7  0086               	movwf	6
  7038  1EE8  3001               	movlw	1	; select bank2/3
  7039  1EE9  0087               	movwf	7
  7040  1EEA  0021               	movlb	1	; select bank1
  7041  1EEB  082E               	movf	(_RF_Data^(0+128)+14),w
  7042  1EEC  0601               	xorwf	1,w
  7043  1EED  1D03               	skipz
  7044  1EEE  0008               	return
  7045                           
  7046                           ;RF_Control_B1.c: 230: {
  7047                           ;RF_Control_B1.c: 231: setControl_Lights_Table(1);
  7048  1EEF  3001               	movlw	1
  7049  1EF0  3196  26D7         	fcall	_setControl_Lights_Table
  7050                           
  7051                           ;RF_Control_B1.c: 240: {
  7052                           ;RF_Control_B1.c: 241: ;
  7053                           
  7054                           ;RF_Control_B1.c: 236: {
  7055                           ;RF_Control_B1.c: 237: ;
  7056                           ;RF_Control_B1.c: 238: }
  7057                           
  7058                           ;RF_Control_B1.c: 232: }
  7059                           ;RF_Control_B1.c: 233: }
  7060                           ;RF_Control_B1.c: 234: }
  7061  1EF2  0008               	return
  7062  1EF3                     __end_of_getRxData:	
  7063                           
  7064                           	psect	text24
  7065  1DC2                     __ptext24:	
  7066 ;; *************** function _setLog_Code *****************
  7067 ;; Defined at:
  7068 ;;		line 250 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  rf              1    wreg     unsigned char 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  rf              1   11[BANK0 ] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;		None               void
  7075 ;; Registers used:
  7076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;Total ram usage:        2 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    6
  7089 ;; This function calls:
  7090 ;;		_RfPointSelect
  7091 ;;		_setBuz
  7092 ;; This function is called by:
  7093 ;;		_getRxData
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           
  7098                           ;psect for function _setLog_Code
  7099  1DC2                     _setLog_Code:	
  7100                           
  7101                           ;incstack = 0
  7102                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7103                           ;setLog_Code@rf stored from wreg
  7104  1DC2  0020               	movlb	0	; select bank0
  7105  1DC3  00AB               	movwf	setLog_Code@rf
  7106                           
  7107                           ;RF_Control_B1.c: 252: RfPointSelect(rf);
  7108  1DC4  082B               	movf	setLog_Code@rf,w
  7109  1DC5  31A3  23CA  319D   	fcall	_RfPointSelect
  7110                           
  7111                           ;RF_Control_B1.c: 253: Product->Data[12]=RF_Data[12];
  7112  1DC8  0021               	movlb	1	; select bank1
  7113  1DC9  082C               	movf	(_RF_Data^(0+128)+12),w
  7114  1DCA  0020               	movlb	0	; select bank0
  7115  1DCB  00AA               	movwf	??_setLog_Code
  7116  1DCC  086F               	movf	_Product,w
  7117  1DCD  3E0C               	addlw	12
  7118  1DCE  0086               	movwf	6
  7119  1DCF  3001               	movlw	1	; select bank2/3
  7120  1DD0  0087               	movwf	7
  7121  1DD1  082A               	movf	??_setLog_Code,w
  7122  1DD2  0081               	movwf	1
  7123                           
  7124                           ;RF_Control_B1.c: 254: Product->Data[13]=RF_Data[13];
  7125  1DD3  0021               	movlb	1	; select bank1
  7126  1DD4  082D               	movf	(_RF_Data^(0+128)+13),w
  7127  1DD5  0020               	movlb	0	; select bank0
  7128  1DD6  00AA               	movwf	??_setLog_Code
  7129  1DD7  086F               	movf	_Product,w
  7130  1DD8  3E0D               	addlw	13
  7131  1DD9  0086               	movwf	6
  7132  1DDA  3001               	movlw	1	; select bank2/3
  7133  1DDB  0087               	movwf	7
  7134  1DDC  082A               	movf	??_setLog_Code,w
  7135  1DDD  0081               	movwf	1
  7136                           
  7137                           ;RF_Control_B1.c: 255: Product->Data[14]=RF_Data[14];
  7138  1DDE  0021               	movlb	1	; select bank1
  7139  1DDF  082E               	movf	(_RF_Data^(0+128)+14),w
  7140  1DE0  0020               	movlb	0	; select bank0
  7141  1DE1  00AA               	movwf	??_setLog_Code
  7142  1DE2  086F               	movf	_Product,w
  7143  1DE3  3E0E               	addlw	14
  7144  1DE4  0086               	movwf	6
  7145  1DE5  3001               	movlw	1	; select bank2/3
  7146  1DE6  0087               	movwf	7
  7147  1DE7  082A               	movf	??_setLog_Code,w
  7148  1DE8  0081               	movwf	1
  7149                           
  7150                           ;RF_Control_B1.c: 256: setBuz(1,100);
  7151  1DE9  3064               	movlw	100
  7152  1DEA  00A6               	movwf	setBuz@time
  7153  1DEB  3000               	movlw	0
  7154  1DEC  00A7               	movwf	setBuz@time+1
  7155  1DED  3001               	movlw	1
  7156  1DEE  3193  235E  319D   	fcall	_setBuz
  7157                           
  7158                           ;RF_Control_B1.c: 257: RF->Learn=0;
  7159  1DF1  087C               	movf	_RF,w
  7160  1DF2  0086               	movwf	6
  7161  1DF3  0187               	clrf	7
  7162  1DF4  1301               	bcf	1,6
  7163                           
  7164                           ;RF_Control_B1.c: 258: if(TMain->First)
  7165  1DF5  0021               	movlb	1	; select bank1
  7166  1DF6  0869               	movf	_TMain^(0+128),w
  7167  1DF7  3E03               	addlw	3
  7168  1DF8  0086               	movwf	6
  7169  1DF9  3001               	movlw	1	; select bank2/3
  7170  1DFA  0087               	movwf	7
  7171  1DFB  1C81               	btfss	1,1
  7172  1DFC  2E03               	goto	l2712
  7173                           
  7174                           ;RF_Control_B1.c: 259: {
  7175                           ;RF_Control_B1.c: 260: Memory->LoopSave=1;
  7176  1DFD  0868               	movf	_Memory^(0+128),w
  7177  1DFE  3E22               	addlw	34
  7178  1DFF  0086               	movwf	6
  7179  1E00  3002               	movlw	2	; select bank4/5
  7180  1E01  0087               	movwf	7
  7181  1E02  1501               	bsf	1,2
  7182  1E03                     l2712:	
  7183                           
  7184                           ;RF_Control_B1.c: 261: }
  7185                           ;RF_Control_B1.c: 262: Memory->Modify=1;
  7186  1E03  0868               	movf	_Memory^(0+128),w
  7187  1E04  3E22               	addlw	34
  7188  1E05  0086               	movwf	6
  7189  1E06  3002               	movlw	2	; select bank4/5
  7190  1E07  0087               	movwf	7
  7191  1E08  1401               	bsf	1,0
  7192  1E09  0008               	return
  7193  1E0A                     __end_of_setLog_Code:	
  7194                           
  7195                           	psect	text25
  7196  16D7                     __ptext25:	
  7197 ;; *************** function _setControl_Lights_Table *****************
  7198 ;; Defined at:
  7199 ;;		line 265 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  rf              1    wreg     unsigned char 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  rf              1   71[BANK0 ] unsigned char 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;		None               void
  7206 ;; Registers used:
  7207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;Total ram usage:        1 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:   10
  7220 ;; This function calls:
  7221 ;;		_RfPointSelect
  7222 ;;		_setBuz
  7223 ;;		_setDimmerLights
  7224 ;;		_setRFSW_AdjControl
  7225 ;;		_setRFSW_Control
  7226 ;;		_setRFSW_Status
  7227 ;;		_setSw_Status
  7228 ;;		_setTxData
  7229 ;; This function is called by:
  7230 ;;		_getRxData
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           
  7235                           ;psect for function _setControl_Lights_Table
  7236  16D7                     _setControl_Lights_Table:	
  7237                           
  7238                           ;incstack = 0
  7239                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7240                           ;setControl_Lights_Table@rf stored from wreg
  7241  16D7  0020               	movlb	0	; select bank0
  7242  16D8  00E7               	movwf	setControl_Lights_Table@rf
  7243                           
  7244                           ;RF_Control_B1.c: 267: RfPointSelect(rf);
  7245  16D9  0867               	movf	setControl_Lights_Table@rf,w
  7246  16DA  31A3  23CA  3196   	fcall	_RfPointSelect
  7247                           
  7248                           ;RF_Control_B1.c: 268: if(RF_Data[15] == 0x00)
  7249  16DD  0021               	movlb	1	; select bank1
  7250  16DE  08AF               	movf	(_RF_Data^(0+128)+15),f
  7251  16DF  1D03               	skipz
  7252  16E0  2F2A               	goto	l9009
  7253                           
  7254                           ;RF_Control_B1.c: 269: {
  7255                           ;RF_Control_B1.c: 271: setDimmerLights(1,0);
  7256  16E1  0020               	movlb	0	; select bank0
  7257  16E2  01A4               	clrf	setDimmerLights@status
  7258  16E3  3001               	movlw	1
  7259  16E4  3194  244E  3196   	fcall	_setDimmerLights
  7260                           
  7261                           ;RF_Control_B1.c: 272: setRFSW_Status(1,0);
  7262  16E7  0020               	movlb	0	; select bank0
  7263  16E8  01A2               	clrf	setRFSW_Status@command
  7264  16E9  3001               	movlw	1
  7265  16EA  31A4  24A4  3196   	fcall	_setRFSW_Status
  7266                           
  7267                           ;RF_Control_B1.c: 273: setSw_Status(1,0);
  7268  16ED  0020               	movlb	0	; select bank0
  7269  16EE  01A2               	clrf	setSw_Status@command
  7270  16EF  3001               	movlw	1
  7271  16F0  31A4  24B3  3196   	fcall	_setSw_Status
  7272                           
  7273                           ;RF_Control_B1.c: 276: setDimmerLights(2,0);
  7274  16F3  0020               	movlb	0	; select bank0
  7275  16F4  01A4               	clrf	setDimmerLights@status
  7276  16F5  3002               	movlw	2
  7277  16F6  3194  244E  3196   	fcall	_setDimmerLights
  7278                           
  7279                           ;RF_Control_B1.c: 277: setRFSW_Status(2,0);
  7280  16F9  0020               	movlb	0	; select bank0
  7281  16FA  01A2               	clrf	setRFSW_Status@command
  7282  16FB  3002               	movlw	2
  7283  16FC  31A4  24A4  3196   	fcall	_setRFSW_Status
  7284                           
  7285                           ;RF_Control_B1.c: 278: setSw_Status(2,0);
  7286  16FF  0020               	movlb	0	; select bank0
  7287  1700  01A2               	clrf	setSw_Status@command
  7288  1701  3002               	movlw	2
  7289  1702  31A4  24B3  3196   	fcall	_setSw_Status
  7290                           
  7291                           ;RF_Control_B1.c: 286: Product->Data[9]=0;
  7292  1705  0020               	movlb	0	; select bank0
  7293  1706  086F               	movf	_Product,w
  7294  1707  3E09               	addlw	9
  7295  1708  0086               	movwf	6
  7296  1709  3001               	movlw	1	; select bank2/3
  7297  170A  0087               	movwf	7
  7298  170B  0181               	clrf	1
  7299                           
  7300                           ;RF_Control_B1.c: 287: Product->Data[11]=0;
  7301  170C  086F               	movf	_Product,w
  7302  170D  3E0B               	addlw	11
  7303  170E  0086               	movwf	6
  7304  170F  3001               	movlw	1	; select bank2/3
  7305  1710  0087               	movwf	7
  7306  1711  0181               	clrf	1
  7307                           
  7308                           ;RF_Control_B1.c: 288: Product->Data[15]=0;
  7309  1712  086F               	movf	_Product,w
  7310  1713  3E0F               	addlw	15
  7311  1714  0086               	movwf	6
  7312  1715  3001               	movlw	1	; select bank2/3
  7313  1716  0087               	movwf	7
  7314  1717  0181               	clrf	1
  7315                           
  7316                           ;RF_Control_B1.c: 289: Product->Data[17]=0;
  7317  1718  086F               	movf	_Product,w
  7318  1719  3E11               	addlw	17
  7319  171A  0086               	movwf	6
  7320  171B  3001               	movlw	1	; select bank2/3
  7321  171C  0087               	movwf	7
  7322  171D  0181               	clrf	1
  7323                           
  7324                           ;RF_Control_B1.c: 290: setBuz(1,100);
  7325  171E  3064               	movlw	100
  7326  171F  00A6               	movwf	setBuz@time
  7327  1720  3000               	movlw	0
  7328  1721  00A7               	movwf	setBuz@time+1
  7329  1722  3001               	movlw	1
  7330  1723  3193  235E  3196   	fcall	_setBuz
  7331                           
  7332                           ;RF_Control_B1.c: 291: setTxData(1);
  7333  1726  3001               	movlw	1
  7334  1727  3199  2148         	fcall	_setTxData
  7335                           
  7336                           ;RF_Control_B1.c: 292: }
  7337  1729  0008               	return
  7338  172A                     l9009:	
  7339                           
  7340                           ;RF_Control_B1.c: 293: else if(RF_Data[15] == 0x20)
  7341  172A  0021               	movlb	1	; select bank1
  7342  172B  082F               	movf	(_RF_Data^(0+128)+15),w
  7343  172C  3A20               	xorlw	32
  7344  172D  1D03               	skipz
  7345  172E  2F46               	goto	l9015
  7346                           
  7347                           ;RF_Control_B1.c: 294: {
  7348                           ;RF_Control_B1.c: 295: Product->Data[9]=0;
  7349  172F  0020               	movlb	0	; select bank0
  7350  1730  086F               	movf	_Product,w
  7351  1731  3E09               	addlw	9
  7352  1732  0086               	movwf	6
  7353  1733  3001               	movlw	1	; select bank2/3
  7354  1734  0087               	movwf	7
  7355  1735  0181               	clrf	1
  7356                           
  7357                           ;RF_Control_B1.c: 296: Product->Data[11]=0;
  7358  1736  086F               	movf	_Product,w
  7359  1737  3E0B               	addlw	11
  7360  1738  0086               	movwf	6
  7361  1739  3001               	movlw	1	; select bank2/3
  7362  173A  0087               	movwf	7
  7363  173B  0181               	clrf	1
  7364                           
  7365                           ;RF_Control_B1.c: 297: Product->Data[17]=0;
  7366  173C  086F               	movf	_Product,w
  7367  173D  3E11               	addlw	17
  7368  173E  0086               	movwf	6
  7369  173F  3001               	movlw	1	; select bank2/3
  7370  1740  0087               	movwf	7
  7371  1741  0181               	clrf	1
  7372                           
  7373                           ;RF_Control_B1.c: 298: setTxData(1);
  7374  1742  3001               	movlw	1
  7375  1743  3199  2148         	fcall	_setTxData
  7376                           
  7377                           ;RF_Control_B1.c: 299: }
  7378  1745  0008               	return
  7379  1746                     l9015:	
  7380                           
  7381                           ;RF_Control_B1.c: 301: else if(RF_Data[15] == 0x01)
  7382  1746  0021               	movlb	1	; select bank1
  7383  1747  082F               	movf	(_RF_Data^(0+128)+15),w
  7384  1748  3A01               	xorlw	1
  7385  1749  1D03               	skipz
  7386  174A  2F4F               	goto	l9019
  7387                           
  7388                           ;RF_Control_B1.c: 302: {
  7389                           ;RF_Control_B1.c: 303: setRFSW_Control(1);
  7390  174B  3001               	movlw	1
  7391  174C  3188  2010         	fcall	_setRFSW_Control
  7392                           
  7393                           ;RF_Control_B1.c: 304: }
  7394  174E  0008               	return
  7395  174F                     l9019:	
  7396                           
  7397                           ;RF_Control_B1.c: 306: else if(RF_Data[15] == 0x11)
  7398  174F  0021               	movlb	1	; select bank1
  7399  1750  082F               	movf	(_RF_Data^(0+128)+15),w
  7400  1751  3A11               	xorlw	17
  7401  1752  1D03               	skipz
  7402  1753  2F58               	goto	l9023
  7403                           
  7404                           ;RF_Control_B1.c: 307: {
  7405                           ;RF_Control_B1.c: 308: setRFSW_AdjControl(1);
  7406  1754  3001               	movlw	1
  7407  1755  319C  2431         	fcall	_setRFSW_AdjControl
  7408                           
  7409                           ;RF_Control_B1.c: 309: }
  7410  1757  0008               	return
  7411  1758                     l9023:	
  7412                           
  7413                           ;RF_Control_B1.c: 314: else if(RF_Data[15] == 0x02)
  7414  1758  0021               	movlb	1	; select bank1
  7415  1759  082F               	movf	(_RF_Data^(0+128)+15),w
  7416  175A  3A02               	xorlw	2
  7417  175B  1D03               	skipz
  7418  175C  2F61               	goto	l9027
  7419                           
  7420                           ;RF_Control_B1.c: 315: {
  7421                           ;RF_Control_B1.c: 316: setRFSW_Control(2);
  7422  175D  3002               	movlw	2
  7423  175E  3188  2010         	fcall	_setRFSW_Control
  7424                           
  7425                           ;RF_Control_B1.c: 317: }
  7426  1760  0008               	return
  7427  1761                     l9027:	
  7428                           
  7429                           ;RF_Control_B1.c: 319: else if(RF_Data[15] == 0x21)
  7430  1761  0021               	movlb	1	; select bank1
  7431  1762  082F               	movf	(_RF_Data^(0+128)+15),w
  7432  1763  3A21               	xorlw	33
  7433  1764  1D03               	skipz
  7434  1765  0008               	return
  7435                           
  7436                           ;RF_Control_B1.c: 320: {
  7437                           ;RF_Control_B1.c: 321: setRFSW_AdjControl(2);
  7438  1766  3002               	movlw	2
  7439  1767  319C  2431         	fcall	_setRFSW_AdjControl
  7440  1769  0008               	return
  7441  176A                     __end_of_setControl_Lights_Table:	
  7442                           
  7443                           	psect	text26
  7444  0810                     __ptext26:	
  7445 ;; *************** function _setRFSW_Control *****************
  7446 ;; Defined at:
  7447 ;;		line 362 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  sw              1    wreg     unsigned char 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;  sw              1   12[BANK0 ] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;		None               void
  7454 ;; Registers used:
  7455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;Total ram usage:        3 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:    6
  7468 ;; This function calls:
  7469 ;;		_RfSWPointSelect
  7470 ;;		_setBuz
  7471 ;;		_setDelayOff_GO
  7472 ;;		_setDimmerLights_Switch
  7473 ;;		_setDimmerLights_Trigger
  7474 ;;		_setRF_DimmerLights
  7475 ;;		_setSw_Status
  7476 ;;		_setTxData
  7477 ;; This function is called by:
  7478 ;;		_setControl_Lights_Table
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           
  7483                           ;psect for function _setRFSW_Control
  7484  0810                     _setRFSW_Control:	
  7485                           
  7486                           ;incstack = 0
  7487                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7488                           ;setRFSW_Control@sw stored from wreg
  7489  0810  0020               	movlb	0	; select bank0
  7490  0811  00AC               	movwf	setRFSW_Control@sw
  7491                           
  7492                           ;RF_Control_B1.c: 364: RfSWPointSelect(sw);
  7493  0812  082C               	movf	setRFSW_Control@sw,w
  7494  0813  31A5  25BA  3188   	fcall	_RfSWPointSelect
  7495                           
  7496                           ;RF_Control_B1.c: 365: if(RF_Data[16] == 0x80)
  7497  0816  0021               	movlb	1	; select bank1
  7498  0817  0830               	movf	(_RF_Data^(0+128)+16),w
  7499  0818  3A80               	xorlw	128
  7500  0819  1D03               	skipz
  7501  081A  2836               	goto	l8871
  7502                           
  7503                           ;RF_Control_B1.c: 366: {
  7504                           ;RF_Control_B1.c: 367: setDelayOff_GO(sw,1,RF_Data[17]);
  7505  081B  0020               	movlb	0	; select bank0
  7506  081C  01A3               	clrf	setDelayOff_GO@command
  7507  081D  0AA3               	incf	setDelayOff_GO@command,f
  7508  081E  0021               	movlb	1	; select bank1
  7509  081F  0831               	movf	(_RF_Data^(0+128)+17),w
  7510  0820  0020               	movlb	0	; select bank0
  7511  0821  00AA               	movwf	??_setRFSW_Control
  7512  0822  082A               	movf	??_setRFSW_Control,w
  7513  0823  00A4               	movwf	setDelayOff_GO@value
  7514  0824  082C               	movf	setRFSW_Control@sw,w
  7515  0825  319B  23B2  3188   	fcall	_setDelayOff_GO
  7516                           
  7517                           ;RF_Control_B1.c: 368: Product->Data[26+sw]=RF_Data[17];
  7518  0828  0021               	movlb	1	; select bank1
  7519  0829  0831               	movf	(_RF_Data^(0+128)+17),w
  7520  082A  0020               	movlb	0	; select bank0
  7521  082B  00AA               	movwf	??_setRFSW_Control
  7522  082C  082C               	movf	setRFSW_Control@sw,w
  7523  082D  3E1A               	addlw	26
  7524  082E  076F               	addwf	_Product,w
  7525  082F  00AB               	movwf	??_setRFSW_Control+1
  7526  0830  082B               	movf	??_setRFSW_Control+1,w
  7527  0831  0086               	movwf	6
  7528  0832  3001               	movlw	1	; select bank2/3
  7529  0833  0087               	movwf	7
  7530  0834  082A               	movf	??_setRFSW_Control,w
  7531  0835  0081               	movwf	1
  7532  0836                     l8871:	
  7533                           
  7534                           ;RF_Control_B1.c: 369: }
  7535                           ;RF_Control_B1.c: 370: if(RFSW->Status == 0)
  7536  0836  0021               	movlb	1	; select bank1
  7537  0837  083C               	movf	_RFSW^(0+128),w
  7538  0838  0086               	movwf	6
  7539  0839  0187               	clrf	7
  7540  083A  1801               	btfsc	1,0
  7541  083B  2863               	goto	l8883
  7542                           
  7543                           ;RF_Control_B1.c: 371: {
  7544                           ;RF_Control_B1.c: 372: RFSW->Status=1;
  7545  083C  083C               	movf	_RFSW^(0+128),w
  7546  083D  0086               	movwf	6
  7547  083E  0187               	clrf	7
  7548  083F  1401               	bsf	1,0
  7549                           
  7550                           ;RF_Control_B1.c: 373: setSw_Status(sw,1);
  7551  0840  0020               	movlb	0	; select bank0
  7552  0841  01A2               	clrf	setSw_Status@command
  7553  0842  0AA2               	incf	setSw_Status@command,f
  7554  0843  082C               	movf	setRFSW_Control@sw,w
  7555  0844  31A4  24B3  3188   	fcall	_setSw_Status
  7556                           
  7557                           ;RF_Control_B1.c: 375: setDimmerLights_Trigger(sw,1);
  7558  0847  0020               	movlb	0	; select bank0
  7559  0848  01A2               	clrf	setDimmerLights_Trigger@command
  7560  0849  0AA2               	incf	setDimmerLights_Trigger@command,f
  7561  084A  082C               	movf	setRFSW_Control@sw,w
  7562  084B  31A4  24E2  3188   	fcall	_setDimmerLights_Trigger
  7563                           
  7564                           ;RF_Control_B1.c: 376: setDimmerLights_Switch(sw,1);
  7565  084E  0020               	movlb	0	; select bank0
  7566  084F  01A2               	clrf	setDimmerLights_Switch@command
  7567  0850  0AA2               	incf	setDimmerLights_Switch@command,f
  7568  0851  082C               	movf	setRFSW_Control@sw,w
  7569  0852  31A4  24D2  3188   	fcall	_setDimmerLights_Switch
  7570                           
  7571                           ;RF_Control_B1.c: 377: setRF_DimmerLights(sw,RFSW->Status);
  7572  0855  0021               	movlb	1	; select bank1
  7573  0856  083C               	movf	_RFSW^(0+128),w
  7574  0857  0086               	movwf	6
  7575  0858  0187               	clrf	7
  7576  0859  3000               	movlw	0
  7577  085A  1801               	btfsc	1,0
  7578  085B  3001               	movlw	1
  7579  085C  0020               	movlb	0	; select bank0
  7580  085D  00A0               	movwf	setRF_DimmerLights@on
  7581  085E  082C               	movf	setRFSW_Control@sw,w
  7582  085F  319F  274A  3188   	fcall	_setRF_DimmerLights
  7583                           
  7584                           ;RF_Control_B1.c: 378: }
  7585  0862  289C               	goto	l8899
  7586  0863                     l8883:	
  7587                           
  7588                           ;RF_Control_B1.c: 379: else
  7589                           ;RF_Control_B1.c: 380: {
  7590                           ;RF_Control_B1.c: 381: if(RF_Data[16] == 0x80)
  7591  0863  0021               	movlb	1	; select bank1
  7592  0864  0830               	movf	(_RF_Data^(0+128)+16),w
  7593  0865  3A80               	xorlw	128
  7594  0866  1D03               	skipz
  7595  0867  2870               	goto	l8887
  7596                           
  7597                           ;RF_Control_B1.c: 382: {
  7598                           ;RF_Control_B1.c: 383: setRF_DimmerLights(sw,1);
  7599  0868  0020               	movlb	0	; select bank0
  7600  0869  01A0               	clrf	setRF_DimmerLights@on
  7601  086A  0AA0               	incf	setRF_DimmerLights@on,f
  7602  086B  082C               	movf	setRFSW_Control@sw,w
  7603  086C  319F  274A  3188   	fcall	_setRF_DimmerLights
  7604                           
  7605                           ;RF_Control_B1.c: 384: }
  7606  086F  289C               	goto	l8899
  7607  0870                     l8887:	
  7608                           
  7609                           ;RF_Control_B1.c: 385: else
  7610                           ;RF_Control_B1.c: 386: {
  7611                           ;RF_Control_B1.c: 387: RFSW->Status=0;
  7612  0870  0021               	movlb	1	; select bank1
  7613  0871  083C               	movf	_RFSW^(0+128),w
  7614  0872  0086               	movwf	6
  7615  0873  0187               	clrf	7
  7616  0874  1001               	bcf	1,0
  7617                           
  7618                           ;RF_Control_B1.c: 388: setSw_Status(sw,0);
  7619  0875  0020               	movlb	0	; select bank0
  7620  0876  01A2               	clrf	setSw_Status@command
  7621  0877  082C               	movf	setRFSW_Control@sw,w
  7622  0878  31A4  24B3  3188   	fcall	_setSw_Status
  7623                           
  7624                           ;RF_Control_B1.c: 390: setDimmerLights_Trigger(sw,1);
  7625  087B  0020               	movlb	0	; select bank0
  7626  087C  01A2               	clrf	setDimmerLights_Trigger@command
  7627  087D  0AA2               	incf	setDimmerLights_Trigger@command,f
  7628  087E  082C               	movf	setRFSW_Control@sw,w
  7629  087F  31A4  24E2  3188   	fcall	_setDimmerLights_Trigger
  7630                           
  7631                           ;RF_Control_B1.c: 391: setDimmerLights_Switch(sw,RFSW->Status);
  7632  0882  0021               	movlb	1	; select bank1
  7633  0883  083C               	movf	_RFSW^(0+128),w
  7634  0884  0086               	movwf	6
  7635  0885  0187               	clrf	7
  7636  0886  3000               	movlw	0
  7637  0887  1801               	btfsc	1,0
  7638  0888  3001               	movlw	1
  7639  0889  0020               	movlb	0	; select bank0
  7640  088A  00A2               	movwf	setDimmerLights_Switch@command
  7641  088B  082C               	movf	setRFSW_Control@sw,w
  7642  088C  31A4  24D2  3188   	fcall	_setDimmerLights_Switch
  7643                           
  7644                           ;RF_Control_B1.c: 393: setRF_DimmerLights(sw,0);
  7645  088F  0020               	movlb	0	; select bank0
  7646  0890  01A0               	clrf	setRF_DimmerLights@on
  7647  0891  082C               	movf	setRFSW_Control@sw,w
  7648  0892  319F  274A  3188   	fcall	_setRF_DimmerLights
  7649                           
  7650                           ;RF_Control_B1.c: 394: setDelayOff_GO(sw,0,0);
  7651  0895  0020               	movlb	0	; select bank0
  7652  0896  01A3               	clrf	setDelayOff_GO@command
  7653  0897  01A4               	clrf	setDelayOff_GO@value
  7654  0898  082C               	movf	setRFSW_Control@sw,w
  7655  0899  319B  23B2  3188   	fcall	_setDelayOff_GO
  7656  089C                     l8899:	
  7657                           
  7658                           ;RF_Control_B1.c: 395: }
  7659                           ;RF_Control_B1.c: 396: }
  7660                           ;RF_Control_B1.c: 397: setBuz(1,100);
  7661  089C  3064               	movlw	100
  7662  089D  0020               	movlb	0	; select bank0
  7663  089E  00A6               	movwf	setBuz@time
  7664  089F  3000               	movlw	0
  7665  08A0  00A7               	movwf	setBuz@time+1
  7666  08A1  3001               	movlw	1
  7667  08A2  3193  235E  3188   	fcall	_setBuz
  7668                           
  7669                           ;RF_Control_B1.c: 398: setTxData(1);
  7670  08A5  3001               	movlw	1
  7671  08A6  3199  2148         	fcall	_setTxData
  7672  08A8  0008               	return
  7673  08A9                     __end_of_setRFSW_Control:	
  7674                           
  7675                           	psect	text27
  7676  1BB2                     __ptext27:	
  7677 ;; *************** function _setDelayOff_GO *****************
  7678 ;; Defined at:
  7679 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  sw              1    wreg     unsigned char 
  7682 ;;  command         1    3[BANK0 ] unsigned char 
  7683 ;;  value           1    4[BANK0 ] unsigned char 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;  sw              1    6[BANK0 ] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;		None               void
  7688 ;; Registers used:
  7689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;Total ram usage:        4 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:    5
  7702 ;; This function calls:
  7703 ;;		_DelayOffPointSelect
  7704 ;;		_DelayTimejudge
  7705 ;; This function is called by:
  7706 ;;		_setRFSW_Control
  7707 ;;		_Sw_DimmerOffFunc
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function _setDelayOff_GO
  7713  1BB2                     _setDelayOff_GO:	
  7714                           
  7715                           ;incstack = 0
  7716                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7717                           ;setDelayOff_GO@sw stored from wreg
  7718  1BB2  0020               	movlb	0	; select bank0
  7719  1BB3  00A6               	movwf	setDelayOff_GO@sw
  7720                           
  7721                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  7722  1BB4  0826               	movf	setDelayOff_GO@sw,w
  7723  1BB5  31A5  25FC  319B   	fcall	_DelayOffPointSelect
  7724                           
  7725                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  7726  1BB8  0021               	movlb	1	; select bank1
  7727  1BB9  0838               	movf	_DelayOff^(0+128),w
  7728  1BBA  0086               	movwf	6
  7729  1BBB  0187               	clrf	7
  7730  1BBC  1C01               	btfss	1,0
  7731  1BBD  0008               	return
  7732                           
  7733                           ;DelayOff_B1.c: 96: {
  7734                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  7735  1BBE  0838               	movf	_DelayOff^(0+128),w
  7736  1BBF  0086               	movwf	6
  7737  1BC0  0187               	clrf	7
  7738  1BC1  0020               	movlb	0	; select bank0
  7739  1BC2  0823               	movf	setDelayOff_GO@command,w
  7740  1BC3  1081               	bcf	1,1
  7741  1BC4  1D03               	skipz
  7742  1BC5  1481               	bsf	1,1
  7743                           
  7744                           ;DelayOff_B1.c: 98: if(command)
  7745  1BC6  0823               	movf	setDelayOff_GO@command,w
  7746  1BC7  1903               	btfsc	3,2
  7747  1BC8  2BD7               	goto	l6601
  7748                           
  7749                           ;DelayOff_B1.c: 99: {
  7750                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  7751  1BC9  0824               	movf	setDelayOff_GO@value,w
  7752  1BCA  3199  2176  319B   	fcall	_DelayTimejudge
  7753  1BCD  0020               	movlb	0	; select bank0
  7754  1BCE  00A5               	movwf	??_setDelayOff_GO
  7755  1BCF  0021               	movlb	1	; select bank1
  7756  1BD0  0A38               	incf	_DelayOff^(0+128),w
  7757  1BD1  0086               	movwf	6
  7758  1BD2  0187               	clrf	7
  7759  1BD3  0020               	movlb	0	; select bank0
  7760  1BD4  0825               	movf	??_setDelayOff_GO,w
  7761  1BD5  0081               	movwf	1
  7762                           
  7763                           ;DelayOff_B1.c: 101: }
  7764  1BD6  2BE3               	goto	l6605
  7765  1BD7                     l6601:	
  7766                           
  7767                           ;DelayOff_B1.c: 102: else if(command == 0)
  7768  1BD7  08A3               	movf	setDelayOff_GO@command,f
  7769  1BD8  1D03               	skipz
  7770  1BD9  2BE3               	goto	l6605
  7771                           
  7772                           ;DelayOff_B1.c: 103: {
  7773                           ;DelayOff_B1.c: 104: Product->Data[sw+26]=0;
  7774  1BDA  0826               	movf	setDelayOff_GO@sw,w
  7775  1BDB  3E1A               	addlw	26
  7776  1BDC  076F               	addwf	_Product,w
  7777  1BDD  00A5               	movwf	??_setDelayOff_GO
  7778  1BDE  0825               	movf	??_setDelayOff_GO,w
  7779  1BDF  0086               	movwf	6
  7780  1BE0  3001               	movlw	1	; select bank2/3
  7781  1BE1  0087               	movwf	7
  7782  1BE2  0181               	clrf	1
  7783  1BE3                     l6605:	
  7784                           
  7785                           ;DelayOff_B1.c: 105: }
  7786                           ;DelayOff_B1.c: 106: DelayOff->SecondTime=0;
  7787  1BE3  0021               	movlb	1	; select bank1
  7788  1BE4  0838               	movf	_DelayOff^(0+128),w
  7789  1BE5  3E02               	addlw	2
  7790  1BE6  0086               	movwf	6
  7791  1BE7  0187               	clrf	7
  7792  1BE8  3000               	movlw	0
  7793  1BE9  3FC0               	movwi [0]fsr1
  7794  1BEA  3FC1               	movwi [1]fsr1
  7795                           
  7796                           ;DelayOff_B1.c: 107: DelayOff->MinuteTime=0;
  7797  1BEB  0838               	movf	_DelayOff^(0+128),w
  7798  1BEC  3E04               	addlw	4
  7799  1BED  0086               	movwf	6
  7800  1BEE  0187               	clrf	7
  7801  1BEF  0181               	clrf	1
  7802  1BF0  0008               	return
  7803  1BF1                     __end_of_setDelayOff_GO:	
  7804                           
  7805                           	psect	text28
  7806  1976                     __ptext28:	
  7807 ;; *************** function _DelayTimejudge *****************
  7808 ;; Defined at:
  7809 ;;		line 111 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  value           1    wreg     unsigned char 
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  value           1    2[BANK0 ] unsigned char 
  7814 ;;  i               1    1[BANK0 ] unsigned char 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      unsigned char 
  7817 ;; Registers used:
  7818 ;;		wreg
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;Total ram usage:        3 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    4
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_setDelayOff_GO
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           
  7839                           ;psect for function _DelayTimejudge
  7840  1976                     _DelayTimejudge:	
  7841                           
  7842                           ;incstack = 0
  7843                           ; Regs used in _DelayTimejudge: [wreg]
  7844                           ;DelayTimejudge@value stored from wreg
  7845  1976  0020               	movlb	0	; select bank0
  7846  1977  00A2               	movwf	DelayTimejudge@value
  7847                           
  7848                           ;DelayOff_B1.c: 113: char i=5;
  7849  1978  3005               	movlw	5
  7850  1979  00A0               	movwf	??_DelayTimejudge
  7851  197A  0820               	movf	??_DelayTimejudge,w
  7852  197B  00A1               	movwf	DelayTimejudge@i
  7853                           
  7854                           ;DelayOff_B1.c: 114: if(value == 0x05)
  7855  197C  0822               	movf	DelayTimejudge@value,w
  7856  197D  3A05               	xorlw	5
  7857  197E  1D03               	skipz
  7858  197F  2982               	goto	l6433
  7859                           
  7860                           ;DelayOff_B1.c: 115: {
  7861                           ;DelayOff_B1.c: 116: i=5;
  7862  1980  3005               	movlw	5
  7863  1981  299F               	goto	L7
  7864  1982                     l6433:	
  7865                           ;DelayOff_B1.c: 117: }
  7866                           
  7867                           
  7868                           ;DelayOff_B1.c: 118: else if(value == 0x10)
  7869  1982  0822               	movf	DelayTimejudge@value,w
  7870  1983  3A10               	xorlw	16
  7871  1984  1D03               	skipz
  7872  1985  2988               	goto	l6437
  7873                           
  7874                           ;DelayOff_B1.c: 119: {
  7875                           ;DelayOff_B1.c: 120: i=10;
  7876  1986  300A               	movlw	10
  7877  1987  299F               	goto	L7
  7878  1988                     l6437:	
  7879                           ;DelayOff_B1.c: 121: }
  7880                           
  7881                           
  7882                           ;DelayOff_B1.c: 122: else if(value == 0x15)
  7883  1988  0822               	movf	DelayTimejudge@value,w
  7884  1989  3A15               	xorlw	21
  7885  198A  1D03               	skipz
  7886  198B  298E               	goto	l6441
  7887                           
  7888                           ;DelayOff_B1.c: 123: {
  7889                           ;DelayOff_B1.c: 124: i=15;
  7890  198C  300F               	movlw	15
  7891  198D  299F               	goto	L7
  7892  198E                     l6441:	
  7893                           ;DelayOff_B1.c: 125: }
  7894                           
  7895                           
  7896                           ;DelayOff_B1.c: 126: else if(value == 0x20)
  7897  198E  0822               	movf	DelayTimejudge@value,w
  7898  198F  3A20               	xorlw	32
  7899  1990  1D03               	skipz
  7900  1991  2994               	goto	l6445
  7901                           
  7902                           ;DelayOff_B1.c: 127: {
  7903                           ;DelayOff_B1.c: 128: i=20;
  7904  1992  3014               	movlw	20
  7905  1993  299F               	goto	L7
  7906  1994                     l6445:	
  7907                           ;DelayOff_B1.c: 129: }
  7908                           
  7909                           
  7910                           ;DelayOff_B1.c: 130: else if(value == 0x25)
  7911  1994  0822               	movf	DelayTimejudge@value,w
  7912  1995  3A25               	xorlw	37
  7913  1996  1D03               	skipz
  7914  1997  299A               	goto	l6449
  7915                           
  7916                           ;DelayOff_B1.c: 131: {
  7917                           ;DelayOff_B1.c: 132: i=25;
  7918  1998  3019               	movlw	25
  7919  1999  299F               	goto	L7
  7920  199A                     l6449:	
  7921                           ;DelayOff_B1.c: 133: }
  7922                           
  7923                           
  7924                           ;DelayOff_B1.c: 134: else if(value == 0x30)
  7925  199A  0822               	movf	DelayTimejudge@value,w
  7926  199B  3A30               	xorlw	48
  7927  199C  1D03               	skipz
  7928  199D  29A2               	goto	l702
  7929                           
  7930                           ;DelayOff_B1.c: 135: {
  7931                           ;DelayOff_B1.c: 136: i=30;
  7932  199E  301E               	movlw	30
  7933  199F                     L7:	
  7934  199F  00A0               	movwf	??_DelayTimejudge
  7935  19A0  0820               	movf	??_DelayTimejudge,w
  7936  19A1  00A1               	movwf	DelayTimejudge@i
  7937  19A2                     l702:	
  7938                           
  7939                           ;DelayOff_B1.c: 137: }
  7940                           ;DelayOff_B1.c: 138: return i;
  7941  19A2  0821               	movf	DelayTimejudge@i,w
  7942  19A3  0008               	return
  7943  19A4                     __end_of_DelayTimejudge:	
  7944                           
  7945                           	psect	text29
  7946  1C31                     __ptext29:	
  7947 ;; *************** function _setRFSW_AdjControl *****************
  7948 ;; Defined at:
  7949 ;;		line 401 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  sw              1    wreg     unsigned char 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  sw              1   70[BANK0 ] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;		None               void
  7956 ;; Registers used:
  7957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;Total ram usage:        3 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    9
  7970 ;; This function calls:
  7971 ;;		_RfSWPointSelect
  7972 ;;		_setRF_DimmerValue
  7973 ;;		_setTxData
  7974 ;; This function is called by:
  7975 ;;		_setControl_Lights_Table
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           
  7980                           ;psect for function _setRFSW_AdjControl
  7981  1C31                     _setRFSW_AdjControl:	
  7982                           
  7983                           ;incstack = 0
  7984                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7985                           ;setRFSW_AdjControl@sw stored from wreg
  7986  1C31  0020               	movlb	0	; select bank0
  7987  1C32  00E6               	movwf	setRFSW_AdjControl@sw
  7988                           
  7989                           ;RF_Control_B1.c: 403: RfSWPointSelect(sw);
  7990  1C33  0866               	movf	setRFSW_AdjControl@sw,w
  7991  1C34  31A5  25BA  319C   	fcall	_RfSWPointSelect
  7992                           
  7993                           ;RF_Control_B1.c: 404: if(RFSW->Status)
  7994  1C37  0021               	movlb	1	; select bank1
  7995  1C38  083C               	movf	_RFSW^(0+128),w
  7996  1C39  0086               	movwf	6
  7997  1C3A  0187               	clrf	7
  7998  1C3B  1C01               	btfss	1,0
  7999  1C3C  2C49               	goto	l6835
  8000                           
  8001                           ;RF_Control_B1.c: 405: {
  8002                           ;RF_Control_B1.c: 406: Memory->Modify=1;
  8003  1C3D  0868               	movf	_Memory^(0+128),w
  8004  1C3E  3E22               	addlw	34
  8005  1C3F  0086               	movwf	6
  8006  1C40  3002               	movlw	2	; select bank4/5
  8007  1C41  0087               	movwf	7
  8008  1C42  1401               	bsf	1,0
  8009                           
  8010                           ;RF_Control_B1.c: 407: setRF_DimmerValue(sw);
  8011  1C43  0020               	movlb	0	; select bank0
  8012  1C44  0866               	movf	setRFSW_AdjControl@sw,w
  8013  1C45  319A  2299  319C   	fcall	_setRF_DimmerValue
  8014                           
  8015                           ;RF_Control_B1.c: 408: }
  8016  1C48  2C5B               	goto	l2744
  8017  1C49                     l6835:	
  8018                           
  8019                           ;RF_Control_B1.c: 409: else
  8020                           ;RF_Control_B1.c: 410: {
  8021                           ;RF_Control_B1.c: 411: Product->Data[9]=Product->Data[20+sw];
  8022  1C49  0020               	movlb	0	; select bank0
  8023  1C4A  0866               	movf	setRFSW_AdjControl@sw,w
  8024  1C4B  3E14               	addlw	20
  8025  1C4C  076F               	addwf	_Product,w
  8026  1C4D  00E4               	movwf	??_setRFSW_AdjControl
  8027  1C4E  0864               	movf	??_setRFSW_AdjControl,w
  8028  1C4F  0086               	movwf	6
  8029  1C50  3001               	movlw	1	; select bank2/3
  8030  1C51  0087               	movwf	7
  8031  1C52  0801               	movf	1,w
  8032  1C53  00E5               	movwf	??_setRFSW_AdjControl+1
  8033  1C54  086F               	movf	_Product,w
  8034  1C55  3E09               	addlw	9
  8035  1C56  0086               	movwf	6
  8036  1C57  3001               	movlw	1	; select bank2/3
  8037  1C58  0087               	movwf	7
  8038  1C59  0865               	movf	??_setRFSW_AdjControl+1,w
  8039  1C5A  0081               	movwf	1
  8040  1C5B                     l2744:	
  8041                           
  8042                           ;RF_Control_B1.c: 412: }
  8043                           ;RF_Control_B1.c: 413: Product->Data[17]=Product->Data[26+sw];
  8044  1C5B  0020               	movlb	0	; select bank0
  8045  1C5C  0866               	movf	setRFSW_AdjControl@sw,w
  8046  1C5D  3E1A               	addlw	26
  8047  1C5E  076F               	addwf	_Product,w
  8048  1C5F  00E4               	movwf	??_setRFSW_AdjControl
  8049  1C60  0864               	movf	??_setRFSW_AdjControl,w
  8050  1C61  0086               	movwf	6
  8051  1C62  3001               	movlw	1	; select bank2/3
  8052  1C63  0087               	movwf	7
  8053  1C64  0801               	movf	1,w
  8054  1C65  00E5               	movwf	??_setRFSW_AdjControl+1
  8055  1C66  086F               	movf	_Product,w
  8056  1C67  3E11               	addlw	17
  8057  1C68  0086               	movwf	6
  8058  1C69  3001               	movlw	1	; select bank2/3
  8059  1C6A  0087               	movwf	7
  8060  1C6B  0865               	movf	??_setRFSW_AdjControl+1,w
  8061  1C6C  0081               	movwf	1
  8062                           
  8063                           ;RF_Control_B1.c: 414: setTxData(1);
  8064  1C6D  3001               	movlw	1
  8065  1C6E  3199  2148         	fcall	_setTxData
  8066  1C70  0008               	return
  8067  1C71                     __end_of_setRFSW_AdjControl:	
  8068                           
  8069                           	psect	text30
  8070  1A99                     __ptext30:	
  8071 ;; *************** function _setRF_DimmerValue *****************
  8072 ;; Defined at:
  8073 ;;		line 425 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  lights          1    wreg     unsigned char 
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;  lights          1   67[BANK0 ] unsigned char 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;		None               void
  8080 ;; Registers used:
  8081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;Total ram usage:        3 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:    8
  8094 ;; This function calls:
  8095 ;;		_setDimmerLights_AdjRF
  8096 ;; This function is called by:
  8097 ;;		_setRFSW_AdjControl
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           
  8102                           ;psect for function _setRF_DimmerValue
  8103  1A99                     _setRF_DimmerValue:	
  8104                           
  8105                           ;incstack = 0
  8106                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8107                           ;setRF_DimmerValue@lights stored from wreg
  8108  1A99  0020               	movlb	0	; select bank0
  8109  1A9A  00E3               	movwf	setRF_DimmerValue@lights
  8110                           
  8111                           ;RF_Control_B1.c: 427: if(RF_Data[9] > 0x64)
  8112  1A9B  3065               	movlw	101
  8113  1A9C  0021               	movlb	1	; select bank1
  8114  1A9D  0229               	subwf	(_RF_Data^(0+128)+9),w
  8115  1A9E  1C03               	skipc
  8116  1A9F  2AA6               	goto	l6695
  8117                           
  8118                           ;RF_Control_B1.c: 428: {
  8119                           ;RF_Control_B1.c: 429: RF_Data[9]=0x64;
  8120  1AA0  3064               	movlw	100
  8121  1AA1  0020               	movlb	0	; select bank0
  8122  1AA2  00E1               	movwf	??_setRF_DimmerValue
  8123  1AA3  0861               	movf	??_setRF_DimmerValue,w
  8124  1AA4  0021               	movlb	1	; select bank1
  8125  1AA5  00A9               	movwf	(_RF_Data^(0+128)+9)
  8126  1AA6                     l6695:	
  8127                           
  8128                           ;RF_Control_B1.c: 430: }
  8129                           ;RF_Control_B1.c: 431: Product->Data[9]=RF_Data[9];
  8130  1AA6  0829               	movf	(_RF_Data^(0+128)+9),w
  8131  1AA7  0020               	movlb	0	; select bank0
  8132  1AA8  00E1               	movwf	??_setRF_DimmerValue
  8133  1AA9  086F               	movf	_Product,w
  8134  1AAA  3E09               	addlw	9
  8135  1AAB  0086               	movwf	6
  8136  1AAC  3001               	movlw	1	; select bank2/3
  8137  1AAD  0087               	movwf	7
  8138  1AAE  0861               	movf	??_setRF_DimmerValue,w
  8139  1AAF  0081               	movwf	1
  8140                           
  8141                           ;RF_Control_B1.c: 432: Product->Data[11]=lights;
  8142  1AB0  0863               	movf	setRF_DimmerValue@lights,w
  8143  1AB1  00E1               	movwf	??_setRF_DimmerValue
  8144  1AB2  086F               	movf	_Product,w
  8145  1AB3  3E0B               	addlw	11
  8146  1AB4  0086               	movwf	6
  8147  1AB5  3001               	movlw	1	; select bank2/3
  8148  1AB6  0087               	movwf	7
  8149  1AB7  0861               	movf	??_setRF_DimmerValue,w
  8150  1AB8  0081               	movwf	1
  8151                           
  8152                           ;RF_Control_B1.c: 433: Product->Data[(20+lights)]=Product->Data[9];
  8153  1AB9  086F               	movf	_Product,w
  8154  1ABA  3E09               	addlw	9
  8155  1ABB  0086               	movwf	6
  8156  1ABC  3001               	movlw	1	; select bank2/3
  8157  1ABD  0087               	movwf	7
  8158  1ABE  0801               	movf	1,w
  8159  1ABF  00E1               	movwf	??_setRF_DimmerValue
  8160  1AC0  0863               	movf	setRF_DimmerValue@lights,w
  8161  1AC1  3E14               	addlw	20
  8162  1AC2  076F               	addwf	_Product,w
  8163  1AC3  00E2               	movwf	??_setRF_DimmerValue+1
  8164  1AC4  0862               	movf	??_setRF_DimmerValue+1,w
  8165  1AC5  0086               	movwf	6
  8166  1AC6  3001               	movlw	1	; select bank2/3
  8167  1AC7  0087               	movwf	7
  8168  1AC8  0861               	movf	??_setRF_DimmerValue,w
  8169  1AC9  0081               	movwf	1
  8170                           
  8171                           ;RF_Control_B1.c: 434: setDimmerLights_AdjRF(lights);
  8172  1ACA  0863               	movf	setRF_DimmerValue@lights,w
  8173  1ACB  3190  2000         	fcall	_setDimmerLights_AdjRF
  8174  1ACD  0008               	return
  8175  1ACE                     __end_of_setRF_DimmerValue:	
  8176                           
  8177                           	psect	text31
  8178  1000                     __ptext31:	
  8179 ;; *************** function _setDimmerLights_AdjRF *****************
  8180 ;; Defined at:
  8181 ;;		line 433 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  lights          1    wreg     unsigned char 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  lights          1   64[BANK0 ] unsigned char 
  8186 ;; Return value:  Size  Location     Type
  8187 ;;		None               void
  8188 ;; Registers used:
  8189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8197 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8198 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8199 ;;Total ram usage:        2 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; Hardware stack levels required when called:    7
  8202 ;; This function calls:
  8203 ;;		_DimmerLightsPointSelect
  8204 ;;		_getPercentValue
  8205 ;; This function is called by:
  8206 ;;		_setRF_DimmerValue
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           
  8211                           ;psect for function _setDimmerLights_AdjRF
  8212  1000                     _setDimmerLights_AdjRF:	
  8213                           
  8214                           ;incstack = 0
  8215                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8216                           ;setDimmerLights_AdjRF@lights stored from wreg
  8217  1000  0020               	movlb	0	; select bank0
  8218  1001  00E0               	movwf	setDimmerLights_AdjRF@lights
  8219                           
  8220                           ;Dimmer_B1.c: 435: DimmerLightsPointSelect(lights);
  8221  1002  0860               	movf	setDimmerLights_AdjRF@lights,w
  8222  1003  31A5  2555  3190   	fcall	_DimmerLightsPointSelect
  8223                           
  8224                           ;Dimmer_B1.c: 436: DimmerLights->AdjRF=1;
  8225  1006  0020               	movlb	0	; select bank0
  8226  1007  086C               	movf	_DimmerLights,w
  8227  1008  0086               	movwf	6
  8228  1009  3001               	movlw	1	; select bank2/3
  8229  100A  0087               	movwf	7
  8230  100B  1501               	bsf	1,2
  8231                           
  8232                           ;Dimmer_B1.c: 437: DimmerLights->Signal=1;
  8233  100C  086C               	movf	_DimmerLights,w
  8234  100D  0086               	movwf	6
  8235  100E  3001               	movlw	1	; select bank2/3
  8236  100F  0087               	movwf	7
  8237  1010  1481               	bsf	1,1
  8238                           
  8239                           ;Dimmer_B1.c: 438: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  8240  1011  086F               	movf	_Product,w
  8241  1012  3E09               	addlw	9
  8242  1013  0086               	movwf	6
  8243  1014  3001               	movlw	1	; select bank2/3
  8244  1015  0087               	movwf	7
  8245  1016  0801               	movf	1,w
  8246  1017  319F  27A5         	fcall	_getPercentValue
  8247  1019  0020               	movlb	0	; select bank0
  8248  101A  00DF               	movwf	??_setDimmerLights_AdjRF
  8249  101B  086C               	movf	_DimmerLights,w
  8250  101C  3E05               	addlw	5
  8251  101D  0086               	movwf	6
  8252  101E  3001               	movlw	1	; select bank2/3
  8253  101F  0087               	movwf	7
  8254  1020  085F               	movf	??_setDimmerLights_AdjRF,w
  8255  1021  0081               	movwf	1
  8256  1022  0008               	return
  8257  1023                     __end_of_setDimmerLights_AdjRF:	
  8258                           
  8259                           	psect	text32
  8260  191C                     __ptext32:	
  8261 ;; *************** function _RF_RxDisable *****************
  8262 ;; Defined at:
  8263 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  rf              1    wreg     unsigned char 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  rf              1    4[BANK0 ] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;		None               void
  8270 ;; Registers used:
  8271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;Total ram usage:        1 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    6
  8284 ;; This function calls:
  8285 ;;		_CC2500_WriteCommand
  8286 ;;		_RfPointSelect
  8287 ;;		_setINT_GO
  8288 ;; This function is called by:
  8289 ;;		_setRF_Main
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function _RF_RxDisable
  8295  191C                     _RF_RxDisable:	
  8296                           
  8297                           ;incstack = 0
  8298                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8299                           ;RF_RxDisable@rf stored from wreg
  8300  191C  0020               	movlb	0	; select bank0
  8301  191D  00A4               	movwf	RF_RxDisable@rf
  8302                           
  8303                           ;RF_Control_B1.c: 195: RfPointSelect(rf);
  8304  191E  0824               	movf	RF_RxDisable@rf,w
  8305  191F  31A3  23CA  3199   	fcall	_RfPointSelect
  8306                           
  8307                           ;RF_Control_B1.c: 196: if(RF->RxStatus || RF->ReceiveGO)
  8308  1922  087C               	movf	_RF,w
  8309  1923  0086               	movwf	6
  8310  1924  0187               	clrf	7
  8311  1925  1981               	btfsc	1,3
  8312  1926  292C               	goto	l9205
  8313  1927  087C               	movf	_RF,w
  8314  1928  0086               	movwf	6
  8315  1929  0187               	clrf	7
  8316  192A  1C81               	btfss	1,1
  8317  192B  0008               	return
  8318  192C                     l9205:	
  8319                           
  8320                           ;RF_Control_B1.c: 197: {
  8321                           ;RF_Control_B1.c: 198: RF->RxStatus=0;
  8322  192C  087C               	movf	_RF,w
  8323  192D  0086               	movwf	6
  8324  192E  0187               	clrf	7
  8325  192F  1181               	bcf	1,3
  8326                           
  8327                           ;RF_Control_B1.c: 199: RF->ReceiveGO=0;
  8328  1930  087C               	movf	_RF,w
  8329  1931  0086               	movwf	6
  8330  1932  0187               	clrf	7
  8331  1933  1081               	bcf	1,1
  8332                           
  8333                           ;RF_Control_B1.c: 200: RF->DebounceTime=0;
  8334  1934  0A7C               	incf	_RF,w
  8335  1935  0086               	movwf	6
  8336  1936  0187               	clrf	7
  8337  1937  0181               	clrf	1
  8338                           
  8339                           ;RF_Control_B1.c: 201: RF->Debounce=0;
  8340  1938  087C               	movf	_RF,w
  8341  1939  0086               	movwf	6
  8342  193A  0187               	clrf	7
  8343  193B  1281               	bcf	1,5
  8344                           
  8345                           ;RF_Control_B1.c: 202: CC2500_WriteCommand(0x36);
  8346  193C  3036               	movlw	54
  8347  193D  31A4  24C2  3199   	fcall	_CC2500_WriteCommand
  8348                           
  8349                           ;RF_Control_B1.c: 203: CC2500_WriteCommand(0x3A);
  8350  1940  303A               	movlw	58
  8351  1941  31A4  24C2  3199   	fcall	_CC2500_WriteCommand
  8352                           
  8353                           ;RF_Control_B1.c: 204: setINT_GO(0);
  8354  1944  3000               	movlw	0
  8355  1945  31A3  23A1         	fcall	_setINT_GO
  8356  1947  0008               	return
  8357  1948                     __end_of_RF_RxDisable:	
  8358                           
  8359                           	psect	text33
  8360  1D38                     __ptext33:	
  8361 ;; *************** function _CC2500_TxData *****************
  8362 ;; Defined at:
  8363 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  loop_e          1    5[BANK0 ] unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;		None               void
  8370 ;; Registers used:
  8371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;Total ram usage:        2 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    6
  8384 ;; This function calls:
  8385 ;;		_CC2500_WriteByte
  8386 ;;		_CC2500_WriteCommand
  8387 ;; This function is called by:
  8388 ;;		_setRF_Main
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           
  8393                           ;psect for function _CC2500_TxData
  8394  1D38                     _CC2500_TxData:	
  8395                           
  8396                           ;CC2500_B1.c: 32: unsigned char loop_e;
  8397                           ;CC2500_B1.c: 34: RC4=0;
  8398                           
  8399                           ;incstack = 0
  8400                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8401  1D38  0020               	movlb	0	; select bank0
  8402  1D39  120E               	bcf	14,4	;volatile
  8403                           
  8404                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  8405  1D3A  307F               	movlw	127
  8406  1D3B  00A4               	movwf	??_CC2500_TxData
  8407  1D3C  0824               	movf	??_CC2500_TxData,w
  8408  1D3D  0021               	movlb	1	; select bank1
  8409  1D3E  00BF               	movwf	_SPI0Buffer^(0+128)
  8410  1D3F                     l307:	
  8411                           ;CC2500_B1.c: 36: while(RC2==1);
  8412                           
  8413  1D3F  0020               	movlb	0	; select bank0
  8414  1D40  190E               	btfsc	14,2	;volatile
  8415  1D41  2D3F               	goto	l307
  8416                           
  8417                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  8418  1D42  31A6  262B  319D   	fcall	_CC2500_WriteByte
  8419                           
  8420                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  8421  1D45  0021               	movlb	1	; select bank1
  8422  1D46  0840               	movf	_Tx_Length^(0+128),w
  8423  1D47  0020               	movlb	0	; select bank0
  8424  1D48  00A4               	movwf	??_CC2500_TxData
  8425  1D49  0824               	movf	??_CC2500_TxData,w
  8426  1D4A  0021               	movlb	1	; select bank1
  8427  1D4B  00BF               	movwf	_SPI0Buffer^(0+128)
  8428                           
  8429                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  8430  1D4C  31A6  262B  319D   	fcall	_CC2500_WriteByte
  8431                           
  8432                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  8433  1D4F  0020               	movlb	0	; select bank0
  8434  1D50  01A5               	clrf	CC2500_TxData@loop_e
  8435  1D51                     l6995:	
  8436  1D51  0021               	movlb	1	; select bank1
  8437  1D52  0840               	movf	_Tx_Length^(0+128),w
  8438  1D53  0020               	movlb	0	; select bank0
  8439  1D54  0225               	subwf	CC2500_TxData@loop_e,w
  8440  1D55  1803               	btfsc	3,0
  8441  1D56  2D69               	goto	l312
  8442                           
  8443                           ;CC2500_B1.c: 41: {
  8444                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  8445  1D57  0825               	movf	CC2500_TxData@loop_e,w
  8446  1D58  3EA0               	addlw	_RF_Data& (0+255)
  8447  1D59  0086               	movwf	6
  8448  1D5A  0187               	clrf	7
  8449  1D5B  0801               	movf	1,w
  8450  1D5C  00A4               	movwf	??_CC2500_TxData
  8451  1D5D  0824               	movf	??_CC2500_TxData,w
  8452  1D5E  0021               	movlb	1	; select bank1
  8453  1D5F  00BF               	movwf	_SPI0Buffer^(0+128)
  8454                           
  8455                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  8456  1D60  31A6  262B  319D   	fcall	_CC2500_WriteByte
  8457  1D63  3001               	movlw	1
  8458  1D64  0020               	movlb	0	; select bank0
  8459  1D65  00A4               	movwf	??_CC2500_TxData
  8460  1D66  0824               	movf	??_CC2500_TxData,w
  8461  1D67  07A5               	addwf	CC2500_TxData@loop_e,f
  8462  1D68  2D51               	goto	l6995
  8463  1D69                     l312:	
  8464                           
  8465                           ;CC2500_B1.c: 44: }
  8466                           ;CC2500_B1.c: 45: RC4=1;
  8467  1D69  160E               	bsf	14,4	;volatile
  8468                           
  8469                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  8470  1D6A  3035               	movlw	53
  8471  1D6B  31A4  24C2  319D   	fcall	_CC2500_WriteCommand
  8472  1D6E                     l313:	
  8473                           ;CC2500_B1.c: 47: while(RB0==0);
  8474                           
  8475  1D6E  0020               	movlb	0	; select bank0
  8476  1D6F  1C0D               	btfss	13,0	;volatile
  8477  1D70  2D6E               	goto	l313
  8478  1D71                     l316:	
  8479                           ;CC2500_B1.c: 48: while(RB0==1);
  8480                           
  8481  1D71  180D               	btfsc	13,0	;volatile
  8482  1D72  2D71               	goto	l316
  8483                           
  8484                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  8485  1D73  3036               	movlw	54
  8486  1D74  31A4  24C2  319D   	fcall	_CC2500_WriteCommand
  8487                           
  8488                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  8489  1D77  303B               	movlw	59
  8490  1D78  31A4  24C2         	fcall	_CC2500_WriteCommand
  8491                           
  8492                           ;CC2500_B1.c: 51: Transceive_OK=1;
  8493  1D7A  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  8494  1D7B  0008               	return
  8495  1D7C                     __end_of_CC2500_TxData:	
  8496                           
  8497                           	psect	text34
  8498  1143                     __ptext34:	
  8499 ;; *************** function _CC2500_RxData *****************
  8500 ;; Defined at:
  8501 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;		None
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  loop_f          1    5[BANK0 ] unsigned char 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;		None               void
  8508 ;; Registers used:
  8509 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;Total ram usage:        2 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    6
  8522 ;; This function calls:
  8523 ;;		_CC2500_ReadByte
  8524 ;;		_CC2500_ReadStatus
  8525 ;;		_CC2500_WriteByte
  8526 ;;		_CC2500_WriteCommand
  8527 ;;		_setRF_RxStatus
  8528 ;; This function is called by:
  8529 ;;		_setRF_Main
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           
  8534                           ;psect for function _CC2500_RxData
  8535  1143                     _CC2500_RxData:	
  8536                           
  8537                           ;CC2500_B1.c: 58: unsigned char loop_f;
  8538                           ;CC2500_B1.c: 62: if(RB0 == 1)
  8539                           
  8540                           ;incstack = 0
  8541                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8542  1143  0020               	movlb	0	; select bank0
  8543  1144  180D               	btfsc	13,0	;volatile
  8544  1145                     l323:	
  8545                           ;CC2500_B1.c: 63: {
  8546                           ;CC2500_B1.c: 64: while(RB0 == 1);
  8547                           
  8548  1145  180D               	btfsc	13,0	;volatile
  8549  1146  2945               	goto	l323
  8550                           
  8551                           ;CC2500_B1.c: 65: }
  8552                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  8553  1147  303B               	movlw	59
  8554  1148  31A6  26C4  3191   	fcall	_CC2500_ReadStatus
  8555                           
  8556                           ;CC2500_B1.c: 67: if(s_data != 0)
  8557  114B  0021               	movlb	1	; select bank1
  8558  114C  0843               	movf	_s_data^(0+128),w
  8559  114D  1903               	btfsc	3,2
  8560  114E  2999               	goto	l9069
  8561                           
  8562                           ;CC2500_B1.c: 69: {
  8563                           ;CC2500_B1.c: 70: RC4=0;
  8564  114F  0020               	movlb	0	; select bank0
  8565  1150  120E               	bcf	14,4	;volatile
  8566                           
  8567                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  8568  1151  30FF               	movlw	255
  8569  1152  00A4               	movwf	??_CC2500_RxData
  8570  1153  0824               	movf	??_CC2500_RxData,w
  8571  1154  0021               	movlb	1	; select bank1
  8572  1155  00BF               	movwf	_SPI0Buffer^(0+128)
  8573  1156                     l327:	
  8574                           ;CC2500_B1.c: 72: while(RC2==1);
  8575                           
  8576  1156  0020               	movlb	0	; select bank0
  8577  1157  190E               	btfsc	14,2	;volatile
  8578  1158  2956               	goto	l327
  8579                           
  8580                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  8581  1159  31A6  262B  3191   	fcall	_CC2500_WriteByte
  8582                           
  8583                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  8584  115C  31A6  26FB  3191   	fcall	_CC2500_ReadByte
  8585                           
  8586                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  8587  115F  0021               	movlb	1	; select bank1
  8588  1160  083F               	movf	_SPI0Buffer^(0+128),w
  8589  1161  0020               	movlb	0	; select bank0
  8590  1162  00A4               	movwf	??_CC2500_RxData
  8591  1163  0824               	movf	??_CC2500_RxData,w
  8592  1164  0021               	movlb	1	; select bank1
  8593  1165  00BE               	movwf	_Rx_Length^(0+128)
  8594                           
  8595                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  8596  1166  0020               	movlb	0	; select bank0
  8597  1167  01A5               	clrf	CC2500_RxData@loop_f
  8598  1168                     l9055:	
  8599  1168  0021               	movlb	1	; select bank1
  8600  1169  083E               	movf	_Rx_Length^(0+128),w
  8601  116A  0020               	movlb	0	; select bank0
  8602  116B  0225               	subwf	CC2500_RxData@loop_f,w
  8603  116C  1803               	btfsc	3,0
  8604  116D  2980               	goto	l9057
  8605                           
  8606                           ;CC2500_B1.c: 78: {
  8607                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  8608  116E  31A6  26FB  3191   	fcall	_CC2500_ReadByte
  8609                           
  8610                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  8611  1171  0021               	movlb	1	; select bank1
  8612  1172  083F               	movf	_SPI0Buffer^(0+128),w
  8613  1173  0020               	movlb	0	; select bank0
  8614  1174  00A4               	movwf	??_CC2500_RxData
  8615  1175  0825               	movf	CC2500_RxData@loop_f,w
  8616  1176  3EA0               	addlw	_RF_Data& (0+255)
  8617  1177  0086               	movwf	6
  8618  1178  0187               	clrf	7
  8619  1179  0824               	movf	??_CC2500_RxData,w
  8620  117A  0081               	movwf	1
  8621  117B  3001               	movlw	1
  8622  117C  00A4               	movwf	??_CC2500_RxData
  8623  117D  0824               	movf	??_CC2500_RxData,w
  8624  117E  07A5               	addwf	CC2500_RxData@loop_f,f
  8625  117F  2968               	goto	l9055
  8626  1180                     l9057:	
  8627                           
  8628                           ;CC2500_B1.c: 81: }
  8629                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  8630  1180  31A6  26FB  3191   	fcall	_CC2500_ReadByte
  8631                           
  8632                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  8633  1183  0021               	movlb	1	; select bank1
  8634  1184  083F               	movf	_SPI0Buffer^(0+128),w
  8635  1185  0020               	movlb	0	; select bank0
  8636  1186  00A4               	movwf	??_CC2500_RxData
  8637  1187  0824               	movf	??_CC2500_RxData,w
  8638  1188  0021               	movlb	1	; select bank1
  8639  1189  00BD               	movwf	_RSSI^(0+128)
  8640                           
  8641                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  8642  118A  31A6  26FB  3191   	fcall	_CC2500_ReadByte
  8643                           
  8644                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  8645  118D  0021               	movlb	1	; select bank1
  8646  118E  083F               	movf	_SPI0Buffer^(0+128),w
  8647  118F  0020               	movlb	0	; select bank0
  8648  1190  00A4               	movwf	??_CC2500_RxData
  8649  1191  0824               	movf	??_CC2500_RxData,w
  8650  1192  0021               	movlb	1	; select bank1
  8651  1193  00B7               	movwf	_CRC^(0+128)
  8652                           
  8653                           ;CC2500_B1.c: 86: RC4=1;
  8654  1194  0020               	movlb	0	; select bank0
  8655  1195  160E               	bsf	14,4	;volatile
  8656                           
  8657                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  8658  1196  0021               	movlb	1	; select bank1
  8659  1197  1BB7               	btfsc	_CRC^(0+128),7
  8660                           
  8661                           ;CC2500_B1.c: 88: Receive_OK=1;
  8662  1198  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  8663  1199                     l9069:	
  8664                           
  8665                           ;CC2500_B1.c: 89: }
  8666                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  8667  1199  3036               	movlw	54
  8668  119A  31A4  24C2  3191   	fcall	_CC2500_WriteCommand
  8669                           
  8670                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  8671  119D  303A               	movlw	58
  8672  119E  31A4  24C2  3191   	fcall	_CC2500_WriteCommand
  8673                           
  8674                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  8675  11A1  0020               	movlb	0	; select bank0
  8676  11A2  01A2               	clrf	setRF_RxStatus@command
  8677  11A3  3001               	movlw	1
  8678  11A4  31A4  2488         	fcall	_setRF_RxStatus
  8679  11A6  0008               	return
  8680  11A7                     __end_of_CC2500_RxData:	
  8681                           
  8682                           	psect	text35
  8683  2488                     __ptext35:	
  8684 ;; *************** function _setRF_RxStatus *****************
  8685 ;; Defined at:
  8686 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  rf              1    wreg     unsigned char 
  8689 ;;  command         1    2[BANK0 ] unsigned char 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  rf              1    3[BANK0 ] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;		None               void
  8694 ;; Registers used:
  8695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8701 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8705 ;;Total ram usage:        2 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    5
  8708 ;; This function calls:
  8709 ;;		_RfPointSelect
  8710 ;; This function is called by:
  8711 ;;		_CC2500_RxData
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function _setRF_RxStatus
  8717  2488                     _setRF_RxStatus:	
  8718                           
  8719                           ;incstack = 0
  8720                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8721                           ;setRF_RxStatus@rf stored from wreg
  8722  2488  0020               	movlb	0	; select bank0
  8723  2489  00A3               	movwf	setRF_RxStatus@rf
  8724                           
  8725                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  8726  248A  0823               	movf	setRF_RxStatus@rf,w
  8727  248B  31A3  23CA         	fcall	_RfPointSelect
  8728                           
  8729                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  8730  248D  087C               	movf	_RF,w
  8731  248E  0086               	movwf	6
  8732  248F  0187               	clrf	7
  8733  2490  0020               	movlb	0	; select bank0
  8734  2491  0822               	movf	setRF_RxStatus@command,w
  8735  2492  1181               	bcf	1,3
  8736  2493  1D03               	skipz
  8737  2494  1581               	bsf	1,3
  8738  2495  0008               	return
  8739  2496                     __end_of_setRF_RxStatus:	
  8740                           
  8741                           	psect	text36
  8742  26C4                     __ptext36:	
  8743 ;; *************** function _CC2500_ReadStatus *****************
  8744 ;; Defined at:
  8745 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  status_addr     1    wreg     unsigned char 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;  status_addr     1    3[BANK0 ] unsigned char 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;		None               void
  8752 ;; Registers used:
  8753 ;;		wreg, status,2, status,0, pclath, cstack
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;Total ram usage:        2 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:    5
  8766 ;; This function calls:
  8767 ;;		_CC2500_ReadByte
  8768 ;;		_CC2500_WriteByte
  8769 ;; This function is called by:
  8770 ;;		_CC2500_RxData
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           
  8775                           ;psect for function _CC2500_ReadStatus
  8776  26C4                     _CC2500_ReadStatus:	
  8777                           
  8778                           ;incstack = 0
  8779                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  8780                           ;CC2500_ReadStatus@status_addr stored from wreg
  8781  26C4  0020               	movlb	0	; select bank0
  8782  26C5  00A3               	movwf	CC2500_ReadStatus@status_addr
  8783                           
  8784                           ;CC2500_B1.c: 269: RC4=0;
  8785  26C6  120E               	bcf	14,4	;volatile
  8786                           
  8787                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  8788  26C7  0823               	movf	CC2500_ReadStatus@status_addr,w
  8789  26C8  3EC0               	addlw	192
  8790  26C9  00A2               	movwf	??_CC2500_ReadStatus
  8791  26CA  0822               	movf	??_CC2500_ReadStatus,w
  8792  26CB  0021               	movlb	1	; select bank1
  8793  26CC  00BF               	movwf	_SPI0Buffer^(0+128)
  8794  26CD                     l403:	
  8795                           ;CC2500_B1.c: 272: while(RC2==1);
  8796                           
  8797  26CD  0020               	movlb	0	; select bank0
  8798  26CE  190E               	btfsc	14,2	;volatile
  8799  26CF  2ECD               	goto	l403
  8800                           
  8801                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  8802  26D0  31A6  262B  31A6   	fcall	_CC2500_WriteByte
  8803                           
  8804                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  8805  26D3  31A6  26FB         	fcall	_CC2500_ReadByte
  8806                           
  8807                           ;CC2500_B1.c: 276: RC4=1;
  8808  26D5  0020               	movlb	0	; select bank0
  8809  26D6  160E               	bsf	14,4	;volatile
  8810                           
  8811                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  8812  26D7  0021               	movlb	1	; select bank1
  8813  26D8  083F               	movf	_SPI0Buffer^(0+128),w
  8814  26D9  0020               	movlb	0	; select bank0
  8815  26DA  00A2               	movwf	??_CC2500_ReadStatus
  8816  26DB  0822               	movf	??_CC2500_ReadStatus,w
  8817  26DC  0021               	movlb	1	; select bank1
  8818  26DD  00C3               	movwf	_s_data^(0+128)
  8819  26DE  0008               	return
  8820  26DF                     __end_of_CC2500_ReadStatus:	
  8821                           
  8822                           	psect	text37
  8823  26FB                     __ptext37:	
  8824 ;; *************** function _CC2500_ReadByte *****************
  8825 ;; Defined at:
  8826 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;		None
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  loop_b          1    1[BANK0 ] unsigned char 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;		None               void
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;Total ram usage:        2 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:    4
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_CC2500_RxData
  8851 ;;		_CC2500_ReadStatus
  8852 ;;		_CC2500_ReadREG
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           
  8857                           ;psect for function _CC2500_ReadByte
  8858  26FB                     _CC2500_ReadByte:	
  8859                           
  8860                           ;CC2500_B1.c: 212: unsigned char loop_b;
  8861                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  8862                           
  8863                           ;incstack = 0
  8864                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  8865  26FB  0020               	movlb	0	; select bank0
  8866  26FC  01A1               	clrf	CC2500_ReadByte@loop_b
  8867  26FD                     L8:	
  8868  26FD  3008               	movlw	8
  8869  26FE  0221               	subwf	CC2500_ReadByte@loop_b,w
  8870  26FF  1803               	btfsc	3,0
  8871  2700  0008               	return
  8872                           
  8873                           ;CC2500_B1.c: 214: {
  8874                           ;CC2500_B1.c: 215: RC1=1;
  8875  2701  148E               	bsf	14,1	;volatile
  8876                           
  8877                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  8878  2702  1003               	clrc
  8879  2703  0021               	movlb	1	; select bank1
  8880  2704  0DBF               	rlf	_SPI0Buffer^(0+128),f
  8881                           
  8882                           ;CC2500_B1.c: 217: if(RC2 == 1)
  8883  2705  0020               	movlb	0	; select bank0
  8884  2706  1D0E               	btfss	14,2	;volatile
  8885  2707  2F0B               	goto	l6723
  8886                           
  8887                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  8888  2708  0021               	movlb	1	; select bank1
  8889  2709  143F               	bsf	_SPI0Buffer^(0+128),0
  8890  270A  2F11               	goto	l6725
  8891  270B                     l6723:	
  8892                           
  8893                           ;CC2500_B1.c: 219: else
  8894                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  8895  270B  30FE               	movlw	254
  8896  270C  0020               	movlb	0	; select bank0
  8897  270D  00A0               	movwf	??_CC2500_ReadByte
  8898  270E  0820               	movf	??_CC2500_ReadByte,w
  8899  270F  0021               	movlb	1	; select bank1
  8900  2710  05BF               	andwf	_SPI0Buffer^(0+128),f
  8901  2711                     l6725:	
  8902                           
  8903                           ;CC2500_B1.c: 221: RC1=0;
  8904  2711  0020               	movlb	0	; select bank0
  8905  2712  108E               	bcf	14,1	;volatile
  8906  2713  3001               	movlw	1
  8907  2714  00A0               	movwf	??_CC2500_ReadByte
  8908  2715  0820               	movf	??_CC2500_ReadByte,w
  8909  2716  07A1               	addwf	CC2500_ReadByte@loop_b,f
  8910  2717  2EFD               	goto	L8
  8911  2718                     __end_of_CC2500_ReadByte:	
  8912                           
  8913                           	psect	text38
  8914  2336                     __ptext38:	
  8915 ;; *************** function _RF_Initialization *****************
  8916 ;; Defined at:
  8917 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;		None
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;		None               void
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, pclath, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;Total ram usage:        0 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    5
  8938 ;; This function calls:
  8939 ;;		_setRF_Initialization
  8940 ;; This function is called by:
  8941 ;;		_main
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           
  8946                           ;psect for function _RF_Initialization
  8947  2336                     _RF_Initialization:	
  8948                           
  8949                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  8950                           
  8951                           ;incstack = 0
  8952                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  8953  2336  3001               	movlw	1
  8954  2337  31A3  2369         	fcall	_setRF_Initialization
  8955  2339  0008               	return
  8956  233A                     __end_of_RF_Initialization:	
  8957                           
  8958                           	psect	text39
  8959  2369                     __ptext39:	
  8960 ;; *************** function _setRF_Initialization *****************
  8961 ;; Defined at:
  8962 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;  rf              1    wreg     unsigned char 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;  rf              1    0[COMMON] unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;		None               void
  8969 ;; Registers used:
  8970 ;;		wreg
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8979 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8980 ;;Total ram usage:        1 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    4
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_RF_Initialization
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function _setRF_Initialization
  8992  2369                     _setRF_Initialization:	
  8993                           
  8994                           ;RF_Control_B1.c: 54: Tx_Length=21;
  8995                           
  8996                           ;incstack = 0
  8997                           ; Regs used in _setRF_Initialization: [wreg]
  8998  2369  3015               	movlw	21
  8999  236A  0020               	movlb	0	; select bank0
  9000  236B  00A0               	movwf	??_setRF_Initialization
  9001  236C  0820               	movf	??_setRF_Initialization,w
  9002  236D  0021               	movlb	1	; select bank1
  9003  236E  00C0               	movwf	_Tx_Length^(0+128)
  9004  236F  0008               	return
  9005  2370                     __end_of_setRF_Initialization:	
  9006                           
  9007                           	psect	text40
  9008  2321                     __ptext40:	
  9009 ;; *************** function _PowerFault_Main *****************
  9010 ;; Defined at:
  9011 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;		None
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;		None
  9016 ;; Return value:  Size  Location     Type
  9017 ;;		None               void
  9018 ;; Registers used:
  9019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;Total ram usage:        0 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:   10
  9032 ;; This function calls:
  9033 ;;		_setPowerFault_Main
  9034 ;; This function is called by:
  9035 ;;		_main
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           
  9040                           ;psect for function _PowerFault_Main
  9041  2321                     _PowerFault_Main:	
  9042                           
  9043                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  9044                           
  9045                           ;incstack = 0
  9046                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9047  2321  318C  247C         	fcall	_setPowerFault_Main
  9048  2323  0008               	return
  9049  2324                     __end_of_PowerFault_Main:	
  9050                           
  9051                           	psect	text41
  9052  0C7C                     __ptext41:	
  9053 ;; *************** function _setPowerFault_Main *****************
  9054 ;; Defined at:
  9055 ;;		line 61 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;		None
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;		None
  9060 ;; Return value:  Size  Location     Type
  9061 ;;		None               void
  9062 ;; Registers used:
  9063 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;Total ram usage:        2 bytes
  9074 ;; Hardware stack levels used:    1
  9075 ;; Hardware stack levels required when called:    9
  9076 ;; This function calls:
  9077 ;;		_getLoad_Safe
  9078 ;;		_getTemp_Safe
  9079 ;;		_setPowerFault_Exceptions
  9080 ;; This function is called by:
  9081 ;;		_PowerFault_Main
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           
  9086                           ;psect for function _setPowerFault_Main
  9087  0C7C                     _setPowerFault_Main:	
  9088                           
  9089                           ;PowerFault_B1.c: 63: if(PF->Enable)
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9093  0C7C  087B               	movf	_PF,w
  9094  0C7D  0086               	movwf	6
  9095  0C7E  3001               	movlw	1	; select bank2/3
  9096  0C7F  0087               	movwf	7
  9097  0C80  1C01               	btfss	1,0
  9098  0C81  0008               	return
  9099                           
  9100                           ;PowerFault_B1.c: 64: {
  9101                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  9102  0C82  087B               	movf	_PF,w
  9103  0C83  0086               	movwf	6
  9104  0C84  3001               	movlw	1	; select bank2/3
  9105  0C85  0087               	movwf	7
  9106  0C86  1981               	btfsc	1,3
  9107  0C87  2CCC               	goto	l9595
  9108                           
  9109                           ;PowerFault_B1.c: 66: {
  9110                           ;PowerFault_B1.c: 67: PF->Time++;
  9111  0C88  087B               	movf	_PF,w
  9112  0C89  3E06               	addlw	6
  9113  0C8A  0086               	movwf	6
  9114  0C8B  3001               	movlw	1	; select bank2/3
  9115  0C8C  0087               	movwf	7
  9116  0C8D  3001               	movlw	1
  9117  0C8E  0781               	addwf	1,f
  9118  0C8F  3141               	addfsr 1,1
  9119  0C90  1803               	skipnc
  9120  0C91  0A81               	incf	1,f
  9121                           
  9122                           ;PowerFault_B1.c: 68: if(PF->Time >= 700)
  9123  0C92  087B               	movf	_PF,w
  9124  0C93  3E06               	addlw	6
  9125  0C94  0086               	movwf	6
  9126  0C95  3001               	movlw	1	; select bank2/3
  9127  0C96  0087               	movwf	7
  9128  0C97  3F40               	moviw [0]fsr1
  9129  0C98  0020               	movlb	0	; select bank0
  9130  0C99  00AD               	movwf	??_setPowerFault_Main
  9131  0C9A  3F41               	moviw [1]fsr1
  9132  0C9B  00AE               	movwf	??_setPowerFault_Main+1
  9133  0C9C  3002               	movlw	2
  9134  0C9D  022E               	subwf	??_setPowerFault_Main+1,w
  9135  0C9E  30BC               	movlw	188
  9136  0C9F  1903               	skipnz
  9137  0CA0  022D               	subwf	??_setPowerFault_Main,w
  9138  0CA1  1C03               	skipc
  9139  0CA2  0008               	return
  9140                           
  9141                           ;PowerFault_B1.c: 69: {
  9142                           ;PowerFault_B1.c: 70: if(getLoad_Safe() && getTemp_Safe())
  9143  0CA3  31A3  23F6  318C   	fcall	_getLoad_Safe
  9144  0CA6  3A00               	xorlw	0
  9145  0CA7  1903               	skipnz
  9146  0CA8  2CC2               	goto	l9593
  9147  0CA9  31A3  235B  318C   	fcall	_getTemp_Safe
  9148  0CAC  3A00               	xorlw	0
  9149  0CAD  1903               	skipnz
  9150  0CAE  2CC2               	goto	l9593
  9151                           
  9152                           ;PowerFault_B1.c: 71: {
  9153                           ;PowerFault_B1.c: 72: PF->Time=0;
  9154  0CAF  087B               	movf	_PF,w
  9155  0CB0  3E06               	addlw	6
  9156  0CB1  0086               	movwf	6
  9157  0CB2  3001               	movlw	1	; select bank2/3
  9158  0CB3  0087               	movwf	7
  9159  0CB4  3000               	movlw	0
  9160  0CB5  3FC0               	movwi [0]fsr1
  9161  0CB6  3FC1               	movwi [1]fsr1
  9162                           
  9163                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  9164  0CB7  087B               	movf	_PF,w
  9165  0CB8  0086               	movwf	6
  9166  0CB9  3001               	movlw	1	; select bank2/3
  9167  0CBA  0087               	movwf	7
  9168  0CBB  1581               	bsf	1,3
  9169                           
  9170                           ;PowerFault_B1.c: 74: PF->Safe=0;
  9171  0CBC  087B               	movf	_PF,w
  9172  0CBD  0086               	movwf	6
  9173  0CBE  3001               	movlw	1	; select bank2/3
  9174  0CBF  0087               	movwf	7
  9175  0CC0  1101               	bcf	1,2
  9176                           
  9177                           ;PowerFault_B1.c: 75: }
  9178  0CC1  0008               	return
  9179  0CC2                     l9593:	
  9180                           
  9181                           ;PowerFault_B1.c: 76: else
  9182                           ;PowerFault_B1.c: 77: {
  9183                           ;PowerFault_B1.c: 78: PF->Time=700;
  9184  0CC2  087B               	movf	_PF,w
  9185  0CC3  3E06               	addlw	6
  9186  0CC4  0086               	movwf	6
  9187  0CC5  3001               	movlw	1	; select bank2/3
  9188  0CC6  0087               	movwf	7
  9189  0CC7  30BC               	movlw	188
  9190  0CC8  3FC0               	movwi [0]fsr1
  9191  0CC9  3002               	movlw	2
  9192  0CCA  3FC1               	movwi [1]fsr1
  9193                           
  9194                           ;PowerFault_B1.c: 79: }
  9195                           ;PowerFault_B1.c: 80: }
  9196                           ;PowerFault_B1.c: 81: }
  9197  0CCB  0008               	return
  9198  0CCC                     l9595:	
  9199                           
  9200                           ;PowerFault_B1.c: 82: else
  9201                           ;PowerFault_B1.c: 83: {
  9202                           ;PowerFault_B1.c: 84: PF->Time++;
  9203  0CCC  087B               	movf	_PF,w
  9204  0CCD  3E06               	addlw	6
  9205  0CCE  0086               	movwf	6
  9206  0CCF  3001               	movlw	1	; select bank2/3
  9207  0CD0  0087               	movwf	7
  9208  0CD1  3001               	movlw	1
  9209  0CD2  0781               	addwf	1,f
  9210  0CD3  3141               	addfsr 1,1
  9211  0CD4  1803               	skipnc
  9212  0CD5  0A81               	incf	1,f
  9213                           
  9214                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
  9215  0CD6  087B               	movf	_PF,w
  9216  0CD7  3E06               	addlw	6
  9217  0CD8  0086               	movwf	6
  9218  0CD9  3001               	movlw	1	; select bank2/3
  9219  0CDA  0087               	movwf	7
  9220  0CDB  3F40               	moviw [0]fsr1
  9221  0CDC  0020               	movlb	0	; select bank0
  9222  0CDD  00AD               	movwf	??_setPowerFault_Main
  9223  0CDE  3F41               	moviw [1]fsr1
  9224  0CDF  00AE               	movwf	??_setPowerFault_Main+1
  9225  0CE0  3000               	movlw	0
  9226  0CE1  022E               	subwf	??_setPowerFault_Main+1,w
  9227  0CE2  3002               	movlw	2
  9228  0CE3  1903               	skipnz
  9229  0CE4  022D               	subwf	??_setPowerFault_Main,w
  9230  0CE5  1C03               	skipc
  9231  0CE6  0008               	return
  9232                           
  9233                           ;PowerFault_B1.c: 86: {
  9234                           ;PowerFault_B1.c: 87: PF->Time=0;
  9235  0CE7  087B               	movf	_PF,w
  9236  0CE8  3E06               	addlw	6
  9237  0CE9  0086               	movwf	6
  9238  0CEA  3001               	movlw	1	; select bank2/3
  9239  0CEB  0087               	movwf	7
  9240  0CEC  3000               	movlw	0
  9241  0CED  3FC0               	movwi [0]fsr1
  9242  0CEE  3FC1               	movwi [1]fsr1
  9243                           
  9244                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
  9245  0CEF  087B               	movf	_PF,w
  9246  0CF0  0086               	movwf	6
  9247  0CF1  3001               	movlw	1	; select bank2/3
  9248  0CF2  0087               	movwf	7
  9249  0CF3  1181               	bcf	1,3
  9250                           
  9251                           ;PowerFault_B1.c: 90: if(PF->ERROR)
  9252  0CF4  087B               	movf	_PF,w
  9253  0CF5  0086               	movwf	6
  9254  0CF6  3001               	movlw	1	; select bank2/3
  9255  0CF7  0087               	movwf	7
  9256  0CF8  1C81               	btfss	1,1
  9257  0CF9  2D35               	goto	l9615
  9258                           
  9259                           ;PowerFault_B1.c: 91: {
  9260                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  9261  0CFA  0A7B               	incf	_PF,w
  9262  0CFB  0086               	movwf	6
  9263  0CFC  3001               	movlw	1	; select bank2/3
  9264  0CFD  0087               	movwf	7
  9265  0CFE  3F40               	moviw [0]fsr1
  9266  0CFF  00AD               	movwf	??_setPowerFault_Main
  9267  0D00  3F41               	moviw [1]fsr1
  9268  0D01  00AE               	movwf	??_setPowerFault_Main+1
  9269  0D02  3001               	movlw	1
  9270  0D03  022E               	subwf	??_setPowerFault_Main+1,w
  9271  0D04  3091               	movlw	145
  9272  0D05  1903               	skipnz
  9273  0D06  022D               	subwf	??_setPowerFault_Main,w
  9274  0D07  1803               	skipnc
  9275  0D08  2D71               	goto	l9627
  9276  0D09  0A7B               	incf	_PF,w
  9277  0D0A  0086               	movwf	6
  9278  0D0B  3001               	movlw	1	; select bank2/3
  9279  0D0C  0087               	movwf	7
  9280  0D0D  3F40               	moviw [0]fsr1
  9281  0D0E  00AD               	movwf	??_setPowerFault_Main
  9282  0D0F  3F41               	moviw [1]fsr1
  9283  0D10  00AE               	movwf	??_setPowerFault_Main+1
  9284  0D11  3000               	movlw	0
  9285  0D12  022E               	subwf	??_setPowerFault_Main+1,w
  9286  0D13  30C8               	movlw	200
  9287  0D14  1903               	skipnz
  9288  0D15  022D               	subwf	??_setPowerFault_Main,w
  9289  0D16  1C03               	skipc
  9290  0D17  2D71               	goto	l9627
  9291                           
  9292                           ;PowerFault_B1.c: 93: {
  9293                           ;PowerFault_B1.c: 94: PF->Count++;
  9294  0D18  3001               	movlw	1
  9295  0D19  00AD               	movwf	??_setPowerFault_Main
  9296  0D1A  087B               	movf	_PF,w
  9297  0D1B  3E05               	addlw	5
  9298  0D1C  0086               	movwf	6
  9299  0D1D  3001               	movlw	1	; select bank2/3
  9300  0D1E  0087               	movwf	7
  9301  0D1F  082D               	movf	??_setPowerFault_Main,w
  9302  0D20  0781               	addwf	1,f
  9303                           
  9304                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
  9305  0D21  087B               	movf	_PF,w
  9306  0D22  3E05               	addlw	5
  9307  0D23  0086               	movwf	6
  9308  0D24  3001               	movlw	1	; select bank2/3
  9309  0D25  0087               	movwf	7
  9310  0D26  3002               	movlw	2
  9311  0D27  0201               	subwf	1,w
  9312  0D28  1C03               	skipc
  9313  0D29  2D77               	goto	l9629
  9314                           
  9315                           ;PowerFault_B1.c: 96: {
  9316                           ;PowerFault_B1.c: 97: PF->Count=0;
  9317  0D2A  087B               	movf	_PF,w
  9318  0D2B  3E05               	addlw	5
  9319  0D2C  0086               	movwf	6
  9320  0D2D  3001               	movlw	1	; select bank2/3
  9321  0D2E  0087               	movwf	7
  9322  0D2F  0181               	clrf	1
  9323                           
  9324                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
  9325  0D30  3000               	movlw	0
  9326  0D31  319B  2378  318C   	fcall	_setPowerFault_Exceptions
  9327                           
  9328                           ;PowerFault_B1.c: 99: }
  9329                           ;PowerFault_B1.c: 100: }
  9330  0D34  2D77               	goto	l9629
  9331  0D35                     l9615:	
  9332                           ;PowerFault_B1.c: 104: }
  9333                           ;PowerFault_B1.c: 105: }
  9334                           
  9335                           ;PowerFault_B1.c: 101: else
  9336                           ;PowerFault_B1.c: 102: {
  9337                           ;PowerFault_B1.c: 103: PF->Count=0;
  9338                           
  9339                           
  9340                           ;PowerFault_B1.c: 106: else
  9341                           ;PowerFault_B1.c: 107: {
  9342                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  9343  0D35  0A7B               	incf	_PF,w
  9344  0D36  0086               	movwf	6
  9345  0D37  3001               	movlw	1	; select bank2/3
  9346  0D38  0087               	movwf	7
  9347  0D39  3F40               	moviw [0]fsr1
  9348  0D3A  0020               	movlb	0	; select bank0
  9349  0D3B  00AD               	movwf	??_setPowerFault_Main
  9350  0D3C  3F41               	moviw [1]fsr1
  9351  0D3D  00AE               	movwf	??_setPowerFault_Main+1
  9352  0D3E  3001               	movlw	1
  9353  0D3F  022E               	subwf	??_setPowerFault_Main+1,w
  9354  0D40  3090               	movlw	144
  9355  0D41  1903               	skipnz
  9356  0D42  022D               	subwf	??_setPowerFault_Main,w
  9357  0D43  1803               	skipnc
  9358  0D44  2D54               	goto	l9619
  9359  0D45  0A7B               	incf	_PF,w
  9360  0D46  0086               	movwf	6
  9361  0D47  3001               	movlw	1	; select bank2/3
  9362  0D48  0087               	movwf	7
  9363  0D49  3F40               	moviw [0]fsr1
  9364  0D4A  00AD               	movwf	??_setPowerFault_Main
  9365  0D4B  3F41               	moviw [1]fsr1
  9366  0D4C  00AE               	movwf	??_setPowerFault_Main+1
  9367  0D4D  3000               	movlw	0
  9368  0D4E  022E               	subwf	??_setPowerFault_Main+1,w
  9369  0D4F  30D3               	movlw	211
  9370  0D50  1903               	skipnz
  9371  0D51  022D               	subwf	??_setPowerFault_Main,w
  9372  0D52  1803               	skipnc
  9373  0D53  2D71               	goto	l9627
  9374  0D54                     l9619:	
  9375                           
  9376                           ;PowerFault_B1.c: 109: {
  9377                           ;PowerFault_B1.c: 110: PF->Count++;
  9378  0D54  3001               	movlw	1
  9379  0D55  00AD               	movwf	??_setPowerFault_Main
  9380  0D56  087B               	movf	_PF,w
  9381  0D57  3E05               	addlw	5
  9382  0D58  0086               	movwf	6
  9383  0D59  3001               	movlw	1	; select bank2/3
  9384  0D5A  0087               	movwf	7
  9385  0D5B  082D               	movf	??_setPowerFault_Main,w
  9386  0D5C  0781               	addwf	1,f
  9387                           
  9388                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
  9389  0D5D  087B               	movf	_PF,w
  9390  0D5E  3E05               	addlw	5
  9391  0D5F  0086               	movwf	6
  9392  0D60  3001               	movlw	1	; select bank2/3
  9393  0D61  0087               	movwf	7
  9394  0D62  3002               	movlw	2
  9395  0D63  0201               	subwf	1,w
  9396  0D64  1C03               	skipc
  9397  0D65  2D77               	goto	l9629
  9398                           
  9399                           ;PowerFault_B1.c: 112: {
  9400                           ;PowerFault_B1.c: 113: PF->Count=0;
  9401  0D66  087B               	movf	_PF,w
  9402  0D67  3E05               	addlw	5
  9403  0D68  0086               	movwf	6
  9404  0D69  3001               	movlw	1	; select bank2/3
  9405  0D6A  0087               	movwf	7
  9406  0D6B  0181               	clrf	1
  9407                           
  9408                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
  9409  0D6C  3001               	movlw	1
  9410  0D6D  319B  2378  318C   	fcall	_setPowerFault_Exceptions
  9411                           
  9412                           ;PowerFault_B1.c: 115: }
  9413                           ;PowerFault_B1.c: 116: }
  9414  0D70  2D77               	goto	l9629
  9415  0D71                     l9627:	
  9416                           
  9417                           ;PowerFault_B1.c: 117: else
  9418                           ;PowerFault_B1.c: 118: {
  9419                           ;PowerFault_B1.c: 119: PF->Count=0;
  9420  0D71  087B               	movf	_PF,w
  9421  0D72  3E05               	addlw	5
  9422  0D73  0086               	movwf	6
  9423  0D74  3001               	movlw	1	; select bank2/3
  9424  0D75  0087               	movwf	7
  9425  0D76  0181               	clrf	1
  9426  0D77                     l9629:	
  9427                           
  9428                           ;PowerFault_B1.c: 120: }
  9429                           ;PowerFault_B1.c: 122: }
  9430                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
  9431  0D77  087B               	movf	_PF,w
  9432  0D78  0086               	movwf	6
  9433  0D79  3001               	movlw	1	; select bank2/3
  9434  0D7A  0087               	movwf	7
  9435  0D7B  1881               	btfsc	1,1
  9436  0D7C  2D82               	goto	l2463
  9437                           
  9438                           ;PowerFault_B1.c: 124: {
  9439                           ;PowerFault_B1.c: 125: PF->Safe=1;
  9440  0D7D  087B               	movf	_PF,w
  9441  0D7E  0086               	movwf	6
  9442  0D7F  3001               	movlw	1	; select bank2/3
  9443  0D80  0087               	movwf	7
  9444  0D81  1501               	bsf	1,2
  9445  0D82                     l2463:	
  9446                           
  9447                           ;PowerFault_B1.c: 126: }
  9448                           ;PowerFault_B1.c: 127: PF->AD=0;
  9449  0D82  0A7B               	incf	_PF,w
  9450  0D83  0086               	movwf	6
  9451  0D84  3001               	movlw	1	; select bank2/3
  9452  0D85  0087               	movwf	7
  9453  0D86  3000               	movlw	0
  9454  0D87  3FC0               	movwi [0]fsr1
  9455  0D88  3FC1               	movwi [1]fsr1
  9456  0D89  0008               	return
  9457  0D8A                     __end_of_setPowerFault_Main:	
  9458                           
  9459                           	psect	text42
  9460  1B78                     __ptext42:	
  9461 ;; *************** function _setPowerFault_Exceptions *****************
  9462 ;; Defined at:
  9463 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  command         1    wreg     unsigned char 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;  command         1   12[BANK0 ] unsigned char 
  9468 ;; Return value:  Size  Location     Type
  9469 ;;		None               void
  9470 ;; Registers used:
  9471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;Total ram usage:        2 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    8
  9484 ;; This function calls:
  9485 ;;		_DimmerLights_Exceptions
  9486 ;;		_setLED
  9487 ;;		_setRF_Enable
  9488 ;;		_setSw_Enable
  9489 ;; This function is called by:
  9490 ;;		_setPowerFault_Main
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           
  9495                           ;psect for function _setPowerFault_Exceptions
  9496  1B78                     _setPowerFault_Exceptions:	
  9497                           
  9498                           ;incstack = 0
  9499                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9500                           ;setPowerFault_Exceptions@command stored from wreg
  9501  1B78  0020               	movlb	0	; select bank0
  9502  1B79  00AC               	movwf	setPowerFault_Exceptions@command
  9503                           
  9504                           ;PowerFault_B1.c: 135: if(command == 1)
  9505  1B7A  082C               	movf	setPowerFault_Exceptions@command,w
  9506  1B7B  3A01               	xorlw	1
  9507  1B7C  1D03               	skipz
  9508  1B7D  2B82               	goto	l9185
  9509                           
  9510                           ;PowerFault_B1.c: 136: {
  9511                           ;PowerFault_B1.c: 137: DimmerLights_Exceptions(3);
  9512  1B7E  3003               	movlw	3
  9513  1B7F  3191  21A7  319B   	fcall	_DimmerLights_Exceptions
  9514  1B82                     l9185:	
  9515                           
  9516                           ;PowerFault_B1.c: 138: }
  9517                           ;PowerFault_B1.c: 139: PF->ERROR=command;
  9518  1B82  087B               	movf	_PF,w
  9519  1B83  0086               	movwf	6
  9520  1B84  3001               	movlw	1	; select bank2/3
  9521  1B85  0087               	movwf	7
  9522  1B86  0020               	movlb	0	; select bank0
  9523  1B87  082C               	movf	setPowerFault_Exceptions@command,w
  9524  1B88  1081               	bcf	1,1
  9525  1B89  1D03               	skipz
  9526  1B8A  1481               	bsf	1,1
  9527                           
  9528                           ;PowerFault_B1.c: 141: setLED(99,command+10);
  9529  1B8B  082C               	movf	setPowerFault_Exceptions@command,w
  9530  1B8C  3E0A               	addlw	10
  9531  1B8D  00AB               	movwf	??_setPowerFault_Exceptions
  9532  1B8E  082B               	movf	??_setPowerFault_Exceptions,w
  9533  1B8F  00A2               	movwf	setLED@command
  9534  1B90  3063               	movlw	99
  9535  1B91  3190  2023  319B   	fcall	_setLED
  9536                           
  9537                           ;PowerFault_B1.c: 143: PF->Safe=(~command) & 0x01;
  9538  1B94  0020               	movlb	0	; select bank0
  9539  1B95  092C               	comf	setPowerFault_Exceptions@command,w
  9540  1B96  3901               	andlw	1
  9541  1B97  00AB               	movwf	??_setPowerFault_Exceptions
  9542  1B98  087B               	movf	_PF,w
  9543  1B99  0086               	movwf	6
  9544  1B9A  3001               	movlw	1	; select bank2/3
  9545  1B9B  0087               	movwf	7
  9546  1B9C  0DAB               	rlf	??_setPowerFault_Exceptions,f
  9547  1B9D  0DAB               	rlf	??_setPowerFault_Exceptions,f
  9548  1B9E  0801               	movf	1,w
  9549  1B9F  062B               	xorwf	??_setPowerFault_Exceptions,w
  9550  1BA0  39FB               	andlw	-5
  9551  1BA1  062B               	xorwf	??_setPowerFault_Exceptions,w
  9552  1BA2  0081               	movwf	1
  9553                           
  9554                           ;PowerFault_B1.c: 144: setSw_Enable((~command) & 0x01);
  9555  1BA3  092C               	comf	setPowerFault_Exceptions@command,w
  9556  1BA4  3901               	andlw	1
  9557  1BA5  31A6  26DF  319B   	fcall	_setSw_Enable
  9558                           
  9559                           ;PowerFault_B1.c: 147: setRF_Enable(1,(~command) & 0x01);
  9560  1BA8  0020               	movlb	0	; select bank0
  9561  1BA9  092C               	comf	setPowerFault_Exceptions@command,w
  9562  1BAA  3901               	andlw	1
  9563  1BAB  00AB               	movwf	??_setPowerFault_Exceptions
  9564  1BAC  082B               	movf	??_setPowerFault_Exceptions,w
  9565  1BAD  00A4               	movwf	setRF_Enable@command
  9566  1BAE  3001               	movlw	1
  9567  1BAF  319B  233E         	fcall	_setRF_Enable
  9568  1BB1  0008               	return
  9569  1BB2                     __end_of_setPowerFault_Exceptions:	
  9570                           
  9571                           	psect	text43
  9572  23F6                     __ptext43:	
  9573 ;; *************** function _getLoad_Safe *****************
  9574 ;; Defined at:
  9575 ;;		line 296 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;		None
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;		None
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      unsigned char 
  9582 ;; Registers used:
  9583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9591 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9592 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;Total ram usage:        1 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    4
  9596 ;; This function calls:
  9597 ;;		Nothing
  9598 ;; This function is called by:
  9599 ;;		_setTemp_Main
  9600 ;;		_setPowerFault_Main
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           
  9605                           ;psect for function _getLoad_Safe
  9606  23F6                     _getLoad_Safe:	
  9607                           
  9608                           ;OverLoad_B1.c: 298: return Load->Safe;
  9609                           
  9610                           ;incstack = 0
  9611                           ; Regs used in _getLoad_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
  9612  23F6  0020               	movlb	0	; select bank0
  9613  23F7  086E               	movf	_Load,w
  9614  23F8  0086               	movwf	6
  9615  23F9  3002               	movlw	2	; select bank4/5
  9616  23FA  0087               	movwf	7
  9617  23FB  0C01               	rrf	1,w
  9618  23FC  00A0               	movwf	??_getLoad_Safe
  9619  23FD  0CA0               	rrf	??_getLoad_Safe,f
  9620  23FE  0C20               	rrf	??_getLoad_Safe,w
  9621  23FF  3901               	andlw	1
  9622  2400  0008               	return
  9623  2401                     __end_of_getLoad_Safe:	
  9624                           
  9625                           	psect	text44
  9626  231E                     __ptext44:	
  9627 ;; *************** function _PowerFault_Initialization *****************
  9628 ;; Defined at:
  9629 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;		None
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;		None               void
  9636 ;; Registers used:
  9637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;Total ram usage:        0 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    5
  9650 ;; This function calls:
  9651 ;;		_setPowerFault_Initialization
  9652 ;; This function is called by:
  9653 ;;		_main
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           
  9658                           ;psect for function _PowerFault_Initialization
  9659  231E                     _PowerFault_Initialization:	
  9660                           
  9661                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
  9662                           
  9663                           ;incstack = 0
  9664                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  9665  231E  31A5  2512         	fcall	_setPowerFault_Initialization
  9666  2320  0008               	return
  9667  2321                     __end_of_PowerFault_Initialization:	
  9668                           
  9669                           	psect	text45
  9670  2512                     __ptext45:	
  9671 ;; *************** function _setPowerFault_Initialization *****************
  9672 ;; Defined at:
  9673 ;;		line 29 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;		None
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;		None
  9678 ;; Return value:  Size  Location     Type
  9679 ;;		None               void
  9680 ;; Registers used:
  9681 ;;		wreg, fsr1l, fsr1h
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9690 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;Total ram usage:        1 bytes
  9692 ;; Hardware stack levels used:    1
  9693 ;; Hardware stack levels required when called:    4
  9694 ;; This function calls:
  9695 ;;		Nothing
  9696 ;; This function is called by:
  9697 ;;		_PowerFault_Initialization
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           
  9702                           ;psect for function _setPowerFault_Initialization
  9703  2512                     _setPowerFault_Initialization:	
  9704                           
  9705                           ;PowerFault_B1.c: 31: PF=&PF1;
  9706                           
  9707                           ;incstack = 0
  9708                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
  9709  2512  3066               	movlw	_PF1& (0+255)
  9710  2513  0020               	movlb	0	; select bank0
  9711  2514  00A0               	movwf	??_setPowerFault_Initialization
  9712  2515  0820               	movf	??_setPowerFault_Initialization,w
  9713  2516  00FB               	movwf	_PF
  9714                           
  9715                           ;PowerFault_B1.c: 32: PF->Enable=1;
  9716  2517  087B               	movf	_PF,w
  9717  2518  0086               	movwf	6
  9718  2519  3001               	movlw	1	; select bank2/3
  9719  251A  0087               	movwf	7
  9720  251B  1401               	bsf	1,0
  9721                           
  9722                           ;PowerFault_B1.c: 33: PF->Safe=1;
  9723  251C  087B               	movf	_PF,w
  9724  251D  0086               	movwf	6
  9725  251E  3001               	movlw	1	; select bank2/3
  9726  251F  0087               	movwf	7
  9727  2520  1501               	bsf	1,2
  9728  2521  0008               	return
  9729  2522                     __end_of_setPowerFault_Initialization:	
  9730                           
  9731                           	psect	text46
  9732  2613                     __ptext46:	
  9733 ;; *************** function _Mcu_Initialization *****************
  9734 ;; Defined at:
  9735 ;;		line 11 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;		None
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;		None               void
  9742 ;; Registers used:
  9743 ;;		wreg, status,2, status,0, pclath, cstack
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;Total ram usage:        1 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:    5
  9756 ;; This function calls:
  9757 ;;		_ADC_Set
  9758 ;;		_INT_Set
  9759 ;;		_IOC_Set
  9760 ;;		_IO_Set
  9761 ;;		_TMR0_Set
  9762 ;; This function is called by:
  9763 ;;		_main
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           
  9768                           ;psect for function _Mcu_Initialization
  9769  2613                     _Mcu_Initialization:	
  9770                           
  9771                           ;MCU_16f1518_B1.c: 14: OSCCON=0x78; ;;
  9772                           
  9773                           ;incstack = 0
  9774                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9775  2613  3078               	movlw	120
  9776  2614  0021               	movlb	1	; select bank1
  9777  2615  0099               	movwf	25	;volatile
  9778                           
  9779                           ;MCU_16f1518_B1.c: 16: IO_Set();
  9780  2616  31A6  2676  31A6   	fcall	_IO_Set
  9781                           
  9782                           ;MCU_16f1518_B1.c: 18: TMR0_Set();
  9783  2619  31A4  246E  31A6   	fcall	_TMR0_Set
  9784                           
  9785                           ;MCU_16f1518_B1.c: 20: ;;
  9786                           ;MCU_16f1518_B1.c: 22: ADC_Set();
  9787  261C  31A3  2362  31A6   	fcall	_ADC_Set
  9788                           
  9789                           ;MCU_16f1518_B1.c: 26: INT_Set();
  9790  261F  31A3  233E  31A6   	fcall	_INT_Set
  9791                           
  9792                           ;MCU_16f1518_B1.c: 28: IOC_Set();
  9793  2622  31A4  2461         	fcall	_IOC_Set
  9794                           
  9795                           ;MCU_16f1518_B1.c: 30: ;;
  9796                           ;MCU_16f1518_B1.c: 32: ;;
  9797                           ;MCU_16f1518_B1.c: 34: Memory=&VarMemory;
  9798  2624  3020               	movlw	_VarMemory& (0+255)
  9799  2625  0020               	movlb	0	; select bank0
  9800  2626  00A1               	movwf	??_Mcu_Initialization
  9801  2627  0821               	movf	??_Mcu_Initialization,w
  9802  2628  0021               	movlb	1	; select bank1
  9803  2629  00E8               	movwf	_Memory^(0+128)
  9804  262A  0008               	return
  9805  262B                     __end_of_Mcu_Initialization:	
  9806                           
  9807                           	psect	text47
  9808  246E                     __ptext47:	
  9809 ;; *************** function _TMR0_Set *****************
  9810 ;; Defined at:
  9811 ;;		line 73 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;		None
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;		None               void
  9818 ;; Registers used:
  9819 ;;		wreg, status,2
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;Total ram usage:        1 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; Hardware stack levels required when called:    4
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		_Mcu_Initialization
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           
  9840                           ;psect for function _TMR0_Set
  9841  246E                     _TMR0_Set:	
  9842                           
  9843                           ;MCU_16f1518_B1.c: 75: Timer0=&VarTimer0;
  9844                           
  9845                           ;incstack = 0
  9846                           ; Regs used in _TMR0_Set: [wreg+status,2]
  9847  246E  30C4               	movlw	_VarTimer0& (0+255)
  9848  246F  0020               	movlb	0	; select bank0
  9849  2470  00A0               	movwf	??_TMR0_Set
  9850  2471  0820               	movf	??_TMR0_Set,w
  9851  2472  0021               	movlb	1	; select bank1
  9852  2473  00EA               	movwf	_Timer0^(0+128)
  9853                           
  9854                           ;MCU_16f1518_B1.c: 76: OPTION_REG=0x00;
  9855  2474  0195               	clrf	21	;volatile
  9856                           
  9857                           ;MCU_16f1518_B1.c: 77: TMR0=(256-90);
  9858  2475  30A6               	movlw	166
  9859  2476  0020               	movlb	0	; select bank0
  9860  2477  0095               	movwf	21	;volatile
  9861                           
  9862                           ;MCU_16f1518_B1.c: 78: TMR0IE=1;
  9863  2478  168B               	bsf	11,5	;volatile
  9864                           
  9865                           ;MCU_16f1518_B1.c: 79: GIE=1;
  9866  2479  178B               	bsf	11,7	;volatile
  9867  247A  0008               	return
  9868  247B                     __end_of_TMR0_Set:	
  9869                           
  9870                           	psect	text48
  9871  2676                     __ptext48:	
  9872 ;; *************** function _IO_Set *****************
  9873 ;; Defined at:
  9874 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;		None
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;		None
  9879 ;; Return value:  Size  Location     Type
  9880 ;;		None               void
  9881 ;; Registers used:
  9882 ;;		wreg, status,2
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;Total ram usage:        0 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:    4
  9895 ;; This function calls:
  9896 ;;		Nothing
  9897 ;; This function is called by:
  9898 ;;		_Mcu_Initialization
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           
  9903                           ;psect for function _IO_Set
  9904  2676                     _IO_Set:	
  9905                           
  9906                           ;MCU_16f1518_B1.c: 39: TRISA=0b01110111;;
  9907                           
  9908                           ;incstack = 0
  9909                           ; Regs used in _IO_Set: [wreg+status,2]
  9910  2676  3077               	movlw	119
  9911  2677  0021               	movlb	1	; select bank1
  9912  2678  008C               	movwf	12	;volatile
  9913                           
  9914                           ;MCU_16f1518_B1.c: 40: TRISB=0b00000111;;
  9915  2679  3007               	movlw	7
  9916  267A  008D               	movwf	13	;volatile
  9917                           
  9918                           ;MCU_16f1518_B1.c: 41: TRISC=0b00001100;;
  9919  267B  300C               	movlw	12
  9920  267C  008E               	movwf	14	;volatile
  9921                           
  9922                           ;MCU_16f1518_B1.c: 42: LATA=0b00000000;;
  9923  267D  0022               	movlb	2	; select bank2
  9924  267E  018C               	clrf	12	;volatile
  9925                           
  9926                           ;MCU_16f1518_B1.c: 43: LATB=0b00000010;;
  9927  267F  3002               	movlw	2
  9928  2680  008D               	movwf	13	;volatile
  9929                           
  9930                           ;MCU_16f1518_B1.c: 44: LATC=0b00000000;;
  9931  2681  018E               	clrf	14	;volatile
  9932                           
  9933                           ;MCU_16f1518_B1.c: 45: ANSELA=0b00100010;;
  9934  2682  3022               	movlw	34
  9935  2683  0023               	movlb	3	; select bank3
  9936  2684  008C               	movwf	12	;volatile
  9937                           
  9938                           ;MCU_16f1518_B1.c: 46: ANSELB=0b00000000;;
  9939  2685  018D               	clrf	13	;volatile
  9940                           
  9941                           ;MCU_16f1518_B1.c: 47: ANSELC=0b00000000;;
  9942  2686  018E               	clrf	14	;volatile
  9943                           
  9944                           ;MCU_16f1518_B1.c: 48: PORTA=0b01110111;;
  9945  2687  3077               	movlw	119
  9946  2688  0020               	movlb	0	; select bank0
  9947  2689  008C               	movwf	12	;volatile
  9948                           
  9949                           ;MCU_16f1518_B1.c: 49: PORTB=0b00000111;;
  9950  268A  3007               	movlw	7
  9951  268B  008D               	movwf	13	;volatile
  9952                           
  9953                           ;MCU_16f1518_B1.c: 50: PORTC=0b00001100;;
  9954  268C  300C               	movlw	12
  9955  268D  008E               	movwf	14	;volatile
  9956  268E  0008               	return
  9957  268F                     __end_of_IO_Set:	
  9958                           
  9959                           	psect	text49
  9960  2461                     __ptext49:	
  9961 ;; *************** function _IOC_Set *****************
  9962 ;; Defined at:
  9963 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;		None
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;		None               void
  9970 ;; Registers used:
  9971 ;;		wreg, status,2
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;Total ram usage:        0 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; Hardware stack levels required when called:    4
  9984 ;; This function calls:
  9985 ;;		Nothing
  9986 ;; This function is called by:
  9987 ;;		_Mcu_Initialization
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           
  9992                           ;psect for function _IOC_Set
  9993  2461                     _IOC_Set:	
  9994                           
  9995                           ;MCU_16f1518_B1.c: 248: WPUB2=0;
  9996                           
  9997                           ;incstack = 0
  9998                           ; Regs used in _IOC_Set: [wreg+status,2]
  9999  2461  0024               	movlb	4	; select bank4
 10000  2462  110D               	bcf	13,2	;volatile
 10001                           
 10002                           ;MCU_16f1518_B1.c: 250: IOCBP=0b00000100;
 10003  2463  3004               	movlw	4
 10004  2464  0027               	movlb	7	; select bank7
 10005  2465  0094               	movwf	20	;volatile
 10006                           
 10007                           ;MCU_16f1518_B1.c: 251: IOCBN=0b00000100;
 10008  2466  3004               	movlw	4
 10009  2467  0095               	movwf	21	;volatile
 10010                           
 10011                           ;MCU_16f1518_B1.c: 259: IOCBF=0b00000000;
 10012  2468  0196               	clrf	22	;volatile
 10013                           
 10014                           ;MCU_16f1518_B1.c: 261: IOCIE=1;
 10015  2469  158B               	bsf	11,3	;volatile
 10016                           
 10017                           ;MCU_16f1518_B1.c: 262: IOCIF=0;
 10018  246A  100B               	bcf	11,0	;volatile
 10019                           
 10020                           ;MCU_16f1518_B1.c: 263: PEIE=1;
 10021  246B  170B               	bsf	11,6	;volatile
 10022                           
 10023                           ;MCU_16f1518_B1.c: 264: GIE=1;
 10024  246C  178B               	bsf	11,7	;volatile
 10025  246D  0008               	return
 10026  246E                     __end_of_IOC_Set:	
 10027                           
 10028                           	psect	text50
 10029  233E                     __ptext50:	
 10030 ;; *************** function _INT_Set *****************
 10031 ;; Defined at:
 10032 ;;		line 217 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;		None
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;		None               void
 10039 ;; Registers used:
 10040 ;;		None
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;Total ram usage:        0 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    4
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_Mcu_Initialization
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           
 10061                           ;psect for function _INT_Set
 10062  233E                     _INT_Set:	
 10063                           
 10064                           ;MCU_16f1518_B1.c: 219: WPUB0=0;
 10065                           
 10066                           ;incstack = 0
 10067                           ; Regs used in _INT_Set: []
 10068  233E  0024               	movlb	4	; select bank4
 10069  233F  100D               	bcf	13,0	;volatile
 10070                           
 10071                           ;MCU_16f1518_B1.c: 221: PEIE=1;
 10072  2340  170B               	bsf	11,6	;volatile
 10073                           
 10074                           ;MCU_16f1518_B1.c: 222: GIE=1;
 10075  2341  178B               	bsf	11,7	;volatile
 10076  2342  0008               	return
 10077  2343                     __end_of_INT_Set:	
 10078                           
 10079                           	psect	text51
 10080  2362                     __ptext51:	
 10081 ;; *************** function _ADC_Set *****************
 10082 ;; Defined at:
 10083 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;		None
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;		None
 10088 ;; Return value:  Size  Location     Type
 10089 ;;		None               void
 10090 ;; Registers used:
 10091 ;;		wreg
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;Total ram usage:        0 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    4
 10104 ;; This function calls:
 10105 ;;		Nothing
 10106 ;; This function is called by:
 10107 ;;		_Mcu_Initialization
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           
 10112                           ;psect for function _ADC_Set
 10113  2362                     _ADC_Set:	
 10114                           
 10115                           ;MCU_16f1518_B1.c: 305: ADCON1=0xf2;
 10116                           
 10117                           ;incstack = 0
 10118                           ; Regs used in _ADC_Set: [wreg]
 10119  2362  30F2               	movlw	242
 10120  2363  0021               	movlb	1	; select bank1
 10121  2364  009E               	movwf	30	;volatile
 10122                           
 10123                           ;MCU_16f1518_B1.c: 306: FVRCON=0xc0;
 10124  2365  30C0               	movlw	192
 10125  2366  0022               	movlb	2	; select bank2
 10126  2367  0097               	movwf	23	;volatile
 10127  2368  0008               	return
 10128  2369                     __end_of_ADC_Set:	
 10129                           
 10130                           	psect	text52
 10131  25D0                     __ptext52:	
 10132 ;; *************** function _MainT_Initialization *****************
 10133 ;; Defined at:
 10134 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;		None
 10137 ;; Auto vars:     Size  Location     Type
 10138 ;;		None
 10139 ;; Return value:  Size  Location     Type
 10140 ;;		None               void
 10141 ;; Registers used:
 10142 ;;		wreg, fsr1l, fsr1h
 10143 ;; Tracked objects:
 10144 ;;		On entry : 0/0
 10145 ;;		On exit  : 0/0
 10146 ;;		Unchanged: 0/0
 10147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10152 ;;Total ram usage:        1 bytes
 10153 ;; Hardware stack levels used:    1
 10154 ;; Hardware stack levels required when called:    4
 10155 ;; This function calls:
 10156 ;;		Nothing
 10157 ;; This function is called by:
 10158 ;;		_main
 10159 ;; This function uses a non-reentrant model
 10160 ;;
 10161                           
 10162                           
 10163                           ;psect for function _MainT_Initialization
 10164  25D0                     _MainT_Initialization:	
 10165                           
 10166                           ;main.c: 95: Product=&VarProduct;
 10167                           
 10168                           ;incstack = 0
 10169                           ; Regs used in _MainT_Initialization: [wregfsr1]
 10170  25D0  30A0               	movlw	_VarProduct& (0+255)
 10171  25D1  0020               	movlb	0	; select bank0
 10172  25D2  00A0               	movwf	??_MainT_Initialization
 10173  25D3  0820               	movf	??_MainT_Initialization,w
 10174  25D4  00EF               	movwf	_Product
 10175                           
 10176                           ;main.c: 98: TMain=&VarTMain;
 10177  25D5  30C0               	movlw	_VarTMain& (0+255)
 10178  25D6  00A0               	movwf	??_MainT_Initialization
 10179  25D7  0820               	movf	??_MainT_Initialization,w
 10180  25D8  0021               	movlb	1	; select bank1
 10181  25D9  00E9               	movwf	_TMain^(0+128)
 10182                           
 10183                           ;main.c: 99: TMain->FirstOpen=1;
 10184  25DA  0869               	movf	_TMain^(0+128),w
 10185  25DB  0086               	movwf	6
 10186  25DC  3001               	movlw	1	; select bank2/3
 10187  25DD  0087               	movwf	7
 10188  25DE  1681               	bsf	1,5
 10189                           
 10190                           ;main.c: 100: TMain->First=1;
 10191  25DF  0869               	movf	_TMain^(0+128),w
 10192  25E0  3E03               	addlw	3
 10193  25E1  0086               	movwf	6
 10194  25E2  3001               	movlw	1	; select bank2/3
 10195  25E3  0087               	movwf	7
 10196  25E4  1481               	bsf	1,1
 10197  25E5  0008               	return
 10198  25E6                     __end_of_MainT_Initialization:	
 10199                           
 10200                           	psect	text53
 10201  14CA                     __ptext53:	
 10202 ;; *************** function _MainT *****************
 10203 ;; Defined at:
 10204 ;;		line 103 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;		None               void
 10211 ;; Registers used:
 10212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;Total ram usage:        0 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    7
 10225 ;; This function calls:
 10226 ;;		_setBuz
 10227 ;;		_setLoad_Enable
 10228 ;;		_setRF_Enable
 10229 ;;		_setSw_Enable
 10230 ;;		_setTemp_Enable
 10231 ;;		_setTxData
 10232 ;; This function is called by:
 10233 ;;		_main
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           
 10238                           ;psect for function _MainT
 10239  14CA                     _MainT:	
 10240                           
 10241                           ;main.c: 106: if(!TMain->PowerON)
 10242                           
 10243                           ;incstack = 0
 10244                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10245  14CA  0021               	movlb	1	; select bank1
 10246  14CB  0869               	movf	_TMain^(0+128),w
 10247  14CC  0086               	movwf	6
 10248  14CD  3001               	movlw	1	; select bank2/3
 10249  14CE  0087               	movwf	7
 10250  14CF  1801               	btfsc	1,0
 10251  14D0  2D15               	goto	l9949
 10252                           
 10253                           ;main.c: 107: {
 10254                           ;main.c: 108: TMain->PowerCount++;
 10255  14D1  0A69               	incf	_TMain^(0+128),w
 10256  14D2  0086               	movwf	6
 10257  14D3  3001               	movlw	1	; select bank2/3
 10258  14D4  0087               	movwf	7
 10259  14D5  3001               	movlw	1
 10260  14D6  0781               	addwf	1,f
 10261  14D7  3141               	addfsr 1,1
 10262  14D8  1803               	skipnc
 10263  14D9  0A81               	incf	1,f
 10264                           
 10265                           ;main.c: 109: if(TMain->PowerCount == 150)
 10266  14DA  0A69               	incf	_TMain^(0+128),w
 10267  14DB  0086               	movwf	6
 10268  14DC  3001               	movlw	1	; select bank2/3
 10269  14DD  0087               	movwf	7
 10270  14DE  3F40               	moviw [0]fsr1
 10271  14DF  3A96               	xorlw	150
 10272  14E0  1D03               	skipz
 10273  14E1  2CE4               	goto	u9935
 10274  14E2  3F41               	moviw [1]fsr1
 10275  14E3  3A00               	xorlw	0
 10276  14E4                     u9935:	
 10277  14E4  1D03               	skipz
 10278  14E5  0008               	return
 10279                           
 10280                           ;main.c: 110: {
 10281                           ;main.c: 111: TMain->PowerCount=0;
 10282  14E6  0A69               	incf	_TMain^(0+128),w
 10283  14E7  0086               	movwf	6
 10284  14E8  3001               	movlw	1	; select bank2/3
 10285  14E9  0087               	movwf	7
 10286  14EA  3000               	movlw	0
 10287  14EB  3FC0               	movwi [0]fsr1
 10288  14EC  3FC1               	movwi [1]fsr1
 10289                           
 10290                           ;main.c: 112: TMain->PowerON=1;
 10291  14ED  0869               	movf	_TMain^(0+128),w
 10292  14EE  0086               	movwf	6
 10293  14EF  3001               	movlw	1	; select bank2/3
 10294  14F0  0087               	movwf	7
 10295  14F1  1401               	bsf	1,0
 10296                           
 10297                           ;main.c: 115: setTemp_Enable(1);
 10298  14F2  3001               	movlw	1
 10299  14F3  31A3  23EB  3194   	fcall	_setTemp_Enable
 10300                           
 10301                           ;main.c: 119: setLoad_Enable(1);
 10302  14F6  3001               	movlw	1
 10303  14F7  31A5  2502  3194   	fcall	_setLoad_Enable
 10304                           
 10305                           ;main.c: 125: setBuz(3,50);
 10306  14FA  3032               	movlw	50
 10307  14FB  0020               	movlb	0	; select bank0
 10308  14FC  00A6               	movwf	setBuz@time
 10309  14FD  3000               	movlw	0
 10310  14FE  00A7               	movwf	setBuz@time+1
 10311  14FF  3003               	movlw	3
 10312  1500  3193  235E  3194   	fcall	_setBuz
 10313                           
 10314                           ;main.c: 126: TMain->SelfTest=1;
 10315  1503  0021               	movlb	1	; select bank1
 10316  1504  0869               	movf	_TMain^(0+128),w
 10317  1505  3E03               	addlw	3
 10318  1506  0086               	movwf	6
 10319  1507  3001               	movlw	1	; select bank2/3
 10320  1508  0087               	movwf	7
 10321  1509  1401               	bsf	1,0
 10322                           
 10323                           ;main.c: 128: setSw_Enable(1);
 10324  150A  3001               	movlw	1
 10325  150B  31A6  26DF  3194   	fcall	_setSw_Enable
 10326                           
 10327                           ;main.c: 131: setRF_Enable(1,1);
 10328  150E  0020               	movlb	0	; select bank0
 10329  150F  01A4               	clrf	setRF_Enable@command
 10330  1510  0AA4               	incf	setRF_Enable@command,f
 10331  1511  3001               	movlw	1
 10332  1512  319B  233E         	fcall	_setRF_Enable
 10333                           
 10334                           ;main.c: 135: }
 10335                           ;main.c: 136: }
 10336  1514  0008               	return
 10337  1515                     l9949:	
 10338                           
 10339                           ;main.c: 137: else
 10340                           ;main.c: 138: {
 10341                           ;main.c: 146: TMain->Count1++;
 10342  1515  0021               	movlb	1	; select bank1
 10343  1516  0869               	movf	_TMain^(0+128),w
 10344  1517  3E06               	addlw	6
 10345  1518  0086               	movwf	6
 10346  1519  3001               	movlw	1	; select bank2/3
 10347  151A  0087               	movwf	7
 10348  151B  3001               	movlw	1
 10349  151C  0781               	addwf	1,f
 10350  151D  3141               	addfsr 1,1
 10351  151E  1803               	skipnc
 10352  151F  0A81               	incf	1,f
 10353                           
 10354                           ;main.c: 147: if(TMain->Count1 == 100)
 10355  1520  0869               	movf	_TMain^(0+128),w
 10356  1521  3E06               	addlw	6
 10357  1522  0086               	movwf	6
 10358  1523  3001               	movlw	1	; select bank2/3
 10359  1524  0087               	movwf	7
 10360  1525  3F40               	moviw [0]fsr1
 10361  1526  3A64               	xorlw	100
 10362  1527  1D03               	skipz
 10363  1528  2D2B               	goto	u9945
 10364  1529  3F41               	moviw [1]fsr1
 10365  152A  3A00               	xorlw	0
 10366  152B                     u9945:	
 10367  152B  1D03               	skipz
 10368  152C  0008               	return
 10369                           
 10370                           ;main.c: 148: {
 10371                           ;main.c: 149: TMain->Count1=0;
 10372  152D  0869               	movf	_TMain^(0+128),w
 10373  152E  3E06               	addlw	6
 10374  152F  0086               	movwf	6
 10375  1530  3001               	movlw	1	; select bank2/3
 10376  1531  0087               	movwf	7
 10377  1532  3000               	movlw	0
 10378  1533  3FC0               	movwi [0]fsr1
 10379  1534  3FC1               	movwi [1]fsr1
 10380                           
 10381                           ;main.c: 150: setTxData(1);
 10382  1535  3001               	movlw	1
 10383  1536  3199  2148  3194   	fcall	_setTxData
 10384                           
 10385                           ;main.c: 160: if(TMain->Flag)
 10386  1539  0021               	movlb	1	; select bank1
 10387  153A  0869               	movf	_TMain^(0+128),w
 10388  153B  0086               	movwf	6
 10389  153C  3001               	movlw	1	; select bank2/3
 10390  153D  0087               	movwf	7
 10391  153E  1981               	btfsc	1,3
 10392  153F  0008               	return
 10393                           
 10394                           ;main.c: 170: else
 10395                           ;main.c: 171: {
 10396                           ;main.c: 172: TMain->Flag=1;
 10397                           
 10398                           ;main.c: 161: {
 10399                           ;main.c: 169: }
 10400  1540  0869               	movf	_TMain^(0+128),w
 10401  1541  0086               	movwf	6
 10402  1542  3001               	movlw	1	; select bank2/3
 10403  1543  0087               	movwf	7
 10404  1544  1581               	bsf	1,3
 10405  1545  0008               	return
 10406  1546                     __end_of_MainT:	
 10407                           
 10408                           	psect	text54
 10409  23EB                     __ptext54:	
 10410 ;; *************** function _setTemp_Enable *****************
 10411 ;; Defined at:
 10412 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;  command         1    wreg     unsigned char 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  command         1    0[BANK0 ] unsigned char 
 10417 ;; Return value:  Size  Location     Type
 10418 ;;		None               void
 10419 ;; Registers used:
 10420 ;;		wreg, fsr1l, fsr1h
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;Total ram usage:        1 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:    4
 10433 ;; This function calls:
 10434 ;;		Nothing
 10435 ;; This function is called by:
 10436 ;;		_MainT
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           
 10441                           ;psect for function _setTemp_Enable
 10442  23EB                     _setTemp_Enable:	
 10443                           
 10444                           ;incstack = 0
 10445                           ; Regs used in _setTemp_Enable: [wregfsr1]
 10446                           ;setTemp_Enable@command stored from wreg
 10447  23EB  0020               	movlb	0	; select bank0
 10448  23EC  00A0               	movwf	setTemp_Enable@command
 10449                           
 10450                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
 10451  23ED  087D               	movf	_Temp,w
 10452  23EE  0086               	movwf	6
 10453  23EF  3001               	movlw	1	; select bank2/3
 10454  23F0  0087               	movwf	7
 10455  23F1  0820               	movf	setTemp_Enable@command,w
 10456  23F2  1001               	bcf	1,0
 10457  23F3  1D03               	skipz
 10458  23F4  1401               	bsf	1,0
 10459  23F5  0008               	return
 10460  23F6                     __end_of_setTemp_Enable:	
 10461                           
 10462                           	psect	text55
 10463  2502                     __ptext55:	
 10464 ;; *************** function _setLoad_Enable *****************
 10465 ;; Defined at:
 10466 ;;		line 252 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  command         1    wreg     unsigned char 
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;  command         1    0[BANK0 ] unsigned char 
 10471 ;; Return value:  Size  Location     Type
 10472 ;;		None               void
 10473 ;; Registers used:
 10474 ;;		wreg, fsr1l, fsr1h
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;Total ram usage:        1 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; Hardware stack levels required when called:    4
 10487 ;; This function calls:
 10488 ;;		Nothing
 10489 ;; This function is called by:
 10490 ;;		_MainT
 10491 ;; This function uses a non-reentrant model
 10492 ;;
 10493                           
 10494                           
 10495                           ;psect for function _setLoad_Enable
 10496  2502                     _setLoad_Enable:	
 10497                           
 10498                           ;incstack = 0
 10499                           ; Regs used in _setLoad_Enable: [wregfsr1]
 10500                           ;setLoad_Enable@command stored from wreg
 10501  2502  0020               	movlb	0	; select bank0
 10502  2503  00A0               	movwf	setLoad_Enable@command
 10503                           
 10504                           ;OverLoad_B1.c: 254: Load->Enable=command;
 10505  2504  086E               	movf	_Load,w
 10506  2505  0086               	movwf	6
 10507  2506  3002               	movlw	2	; select bank4/5
 10508  2507  0087               	movwf	7
 10509  2508  0820               	movf	setLoad_Enable@command,w
 10510  2509  1001               	bcf	1,0
 10511  250A  1D03               	skipz
 10512  250B  1401               	bsf	1,0
 10513                           
 10514                           ;OverLoad_B1.c: 255: Load->GO=0;
 10515  250C  086E               	movf	_Load,w
 10516  250D  0086               	movwf	6
 10517  250E  3002               	movlw	2	; select bank4/5
 10518  250F  0087               	movwf	7
 10519  2510  1081               	bcf	1,1
 10520  2511  0008               	return
 10521  2512                     __end_of_setLoad_Enable:	
 10522                           
 10523                           	psect	text56
 10524  0059                     __ptext56:	
 10525 ;; *************** function _Load_Main *****************
 10526 ;; Defined at:
 10527 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  i               1   17[BANK0 ] unsigned char 
 10532 ;; Return value:  Size  Location     Type
 10533 ;;		None               void
 10534 ;; Registers used:
 10535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10544 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10545 ;;Total ram usage:        5 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; Hardware stack levels required when called:    9
 10548 ;; This function calls:
 10549 ;;		___lwdiv
 10550 ;;		___wmul
 10551 ;;		_getPF_Safe
 10552 ;;		_getTemp_Safe
 10553 ;;		_setDimmerLights_Clear
 10554 ;;		_setLoad_AH_AL_Restore
 10555 ;;		_setLoad_Exceptions
 10556 ;; This function is called by:
 10557 ;;		_main
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           
 10562                           ;psect for function _Load_Main
 10563  0059                     _Load_Main:	
 10564                           
 10565                           ;OverLoad_B1.c: 47: char i;
 10566                           ;OverLoad_B1.c: 48: if(Load->ERROR)
 10567                           
 10568                           ;incstack = 0
 10569                           ; Regs used in _Load_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10570  0059  0020               	movlb	0	; select bank0
 10571  005A  086E               	movf	_Load,w
 10572  005B  0086               	movwf	6
 10573  005C  3002               	movlw	2	; select bank4/5
 10574  005D  0087               	movwf	7
 10575  005E  1E81               	btfss	1,5
 10576  005F  2886               	goto	l9991
 10577                           
 10578                           ;OverLoad_B1.c: 49: {
 10579                           ;OverLoad_B1.c: 50: Load->ErrorTime++;
 10580  0060  086E               	movf	_Load,w
 10581  0061  3E03               	addlw	3
 10582  0062  0086               	movwf	6
 10583  0063  3002               	movlw	2	; select bank4/5
 10584  0064  0087               	movwf	7
 10585  0065  3001               	movlw	1
 10586  0066  0781               	addwf	1,f
 10587  0067  3141               	addfsr 1,1
 10588  0068  1803               	skipnc
 10589  0069  0A81               	incf	1,f
 10590                           
 10591                           ;OverLoad_B1.c: 51: if(Load->ErrorTime >= 1000)
 10592  006A  086E               	movf	_Load,w
 10593  006B  3E03               	addlw	3
 10594  006C  0086               	movwf	6
 10595  006D  3002               	movlw	2	; select bank4/5
 10596  006E  0087               	movwf	7
 10597  006F  3F40               	moviw [0]fsr1
 10598  0070  00AD               	movwf	??_Load_Main
 10599  0071  3F41               	moviw [1]fsr1
 10600  0072  00AE               	movwf	??_Load_Main+1
 10601  0073  3003               	movlw	3
 10602  0074  022E               	subwf	??_Load_Main+1,w
 10603  0075  30E8               	movlw	232
 10604  0076  1903               	skipnz
 10605  0077  022D               	subwf	??_Load_Main,w
 10606  0078  1C03               	skipc
 10607  0079  0008               	return
 10608                           
 10609                           ;OverLoad_B1.c: 52: {
 10610                           ;OverLoad_B1.c: 53: Load->ErrorTime=0;
 10611  007A  086E               	movf	_Load,w
 10612  007B  3E03               	addlw	3
 10613  007C  0086               	movwf	6
 10614  007D  3002               	movlw	2	; select bank4/5
 10615  007E  0087               	movwf	7
 10616  007F  3000               	movlw	0
 10617  0080  3FC0               	movwi [0]fsr1
 10618  0081  3FC1               	movwi [1]fsr1
 10619                           
 10620                           ;OverLoad_B1.c: 54: setLoad_Exceptions(0);
 10621  0082  3000               	movlw	0
 10622  0083  319C  24F4         	fcall	_setLoad_Exceptions
 10623                           
 10624                           ;OverLoad_B1.c: 55: }
 10625                           ;OverLoad_B1.c: 56: }
 10626  0085  0008               	return
 10627  0086                     l9991:	
 10628                           
 10629                           ;OverLoad_B1.c: 57: else
 10630                           ;OverLoad_B1.c: 58: {
 10631                           ;OverLoad_B1.c: 59: if(Load->ADtoGO)
 10632  0086  0020               	movlb	0	; select bank0
 10633  0087  086E               	movf	_Load,w
 10634  0088  0086               	movwf	6
 10635  0089  3002               	movlw	2	; select bank4/5
 10636  008A  0087               	movwf	7
 10637  008B  1E01               	btfss	1,4
 10638  008C  2B54               	goto	l10099
 10639                           
 10640                           ;OverLoad_B1.c: 60: {
 10641                           ;OverLoad_B1.c: 61: Load->Time++;
 10642  008D  0A6E               	incf	_Load,w
 10643  008E  0086               	movwf	6
 10644  008F  3002               	movlw	2	; select bank4/5
 10645  0090  0087               	movwf	7
 10646  0091  3001               	movlw	1
 10647  0092  0781               	addwf	1,f
 10648  0093  3141               	addfsr 1,1
 10649  0094  1803               	skipnc
 10650  0095  0A81               	incf	1,f
 10651                           
 10652                           ;OverLoad_B1.c: 62: if(Load->Time >= 5)
 10653  0096  0A6E               	incf	_Load,w
 10654  0097  0086               	movwf	6
 10655  0098  3002               	movlw	2	; select bank4/5
 10656  0099  0087               	movwf	7
 10657  009A  3F40               	moviw [0]fsr1
 10658  009B  00AD               	movwf	??_Load_Main
 10659  009C  3F41               	moviw [1]fsr1
 10660  009D  00AE               	movwf	??_Load_Main+1
 10661  009E  3000               	movlw	0
 10662  009F  022E               	subwf	??_Load_Main+1,w
 10663  00A0  3005               	movlw	5
 10664  00A1  1903               	skipnz
 10665  00A2  022D               	subwf	??_Load_Main,w
 10666  00A3  1C03               	skipc
 10667  00A4  0008               	return
 10668                           
 10669                           ;OverLoad_B1.c: 63: {
 10670                           ;OverLoad_B1.c: 64: Load->Time=0;
 10671  00A5  0A6E               	incf	_Load,w
 10672  00A6  0086               	movwf	6
 10673  00A7  3002               	movlw	2	; select bank4/5
 10674  00A8  0087               	movwf	7
 10675  00A9  3000               	movlw	0
 10676  00AA  3FC0               	movwi [0]fsr1
 10677  00AB  3FC1               	movwi [1]fsr1
 10678                           
 10679                           ;OverLoad_B1.c: 65: Load->ADtoGO=0;
 10680  00AC  086E               	movf	_Load,w
 10681  00AD  0086               	movwf	6
 10682  00AE  3002               	movlw	2	; select bank4/5
 10683  00AF  0087               	movwf	7
 10684  00B0  1201               	bcf	1,4
 10685                           
 10686                           ;OverLoad_B1.c: 66: Load->LightsCount=Load->Lights1Status+Load->Lights2Status+Load->Ligh
      +                          ts3Status;
 10687  00B1  086E               	movf	_Load,w
 10688  00B2  3E45               	addlw	69
 10689  00B3  0086               	movwf	6
 10690  00B4  3002               	movlw	2	; select bank4/5
 10691  00B5  0087               	movwf	7
 10692  00B6  086E               	movf	_Load,w
 10693  00B7  3E44               	addlw	68
 10694  00B8  0084               	movwf	4
 10695  00B9  3002               	movlw	2	; select bank4/5
 10696  00BA  0085               	movwf	5
 10697  00BB  0800               	movf	0,w
 10698  00BC  00AD               	movwf	??_Load_Main
 10699  00BD  086E               	movf	_Load,w
 10700  00BE  3E43               	addlw	67
 10701  00BF  0084               	movwf	4
 10702  00C0  3002               	movlw	2	; select bank4/5
 10703  00C1  0085               	movwf	5
 10704  00C2  0800               	movf	0,w
 10705  00C3  072D               	addwf	??_Load_Main,w
 10706  00C4  0701               	addwf	1,w
 10707  00C5  00AE               	movwf	??_Load_Main+1
 10708  00C6  086E               	movf	_Load,w
 10709  00C7  3E3E               	addlw	62
 10710  00C8  0086               	movwf	6
 10711  00C9  3002               	movlw	2	; select bank4/5
 10712  00CA  0087               	movwf	7
 10713  00CB  082E               	movf	??_Load_Main+1,w
 10714  00CC  0081               	movwf	1
 10715                           
 10716                           ;OverLoad_B1.c: 67: for(i=1 ; i<4 ; i++)
 10717  00CD  01B1               	clrf	Load_Main@i
 10718  00CE  0AB1               	incf	Load_Main@i,f
 10719  00CF  3004               	movlw	4
 10720  00D0  0231               	subwf	Load_Main@i,w
 10721  00D1  1803               	btfsc	3,0
 10722  00D2  2901               	goto	l10013
 10723  00D3                     l10007:	
 10724                           
 10725                           ;OverLoad_B1.c: 68: {
 10726                           ;OverLoad_B1.c: 69: Load->ADH+=Load->AH[i];
 10727  00D3  3531               	lslf	Load_Main@i,w
 10728  00D4  3E08               	addlw	8
 10729  00D5  076E               	addwf	_Load,w
 10730  00D6  00AD               	movwf	??_Load_Main
 10731  00D7  082D               	movf	??_Load_Main,w
 10732  00D8  0086               	movwf	6
 10733  00D9  3002               	movlw	2	; select bank4/5
 10734  00DA  0087               	movwf	7
 10735  00DB  086E               	movf	_Load,w
 10736  00DC  3E2E               	addlw	46
 10737  00DD  0084               	movwf	4
 10738  00DE  3002               	movlw	2	; select bank4/5
 10739  00DF  0085               	movwf	5
 10740  00E0  3F40               	moviw [0]fsr1
 10741  00E1  0780               	addwf	0,f
 10742  00E2  3101               	addfsr 0,1
 10743  00E3  3F41               	moviw [1]fsr1
 10744  00E4  3D80               	addwfc	0,f
 10745  00E5  313F               	addfsr 0,-1
 10746                           
 10747                           ;OverLoad_B1.c: 70: Load->ADL+=Load->AL[i];
 10748  00E6  3531               	lslf	Load_Main@i,w
 10749  00E7  3E1A               	addlw	26
 10750  00E8  076E               	addwf	_Load,w
 10751  00E9  00AD               	movwf	??_Load_Main
 10752  00EA  082D               	movf	??_Load_Main,w
 10753  00EB  0086               	movwf	6
 10754  00EC  3002               	movlw	2	; select bank4/5
 10755  00ED  0087               	movwf	7
 10756  00EE  086E               	movf	_Load,w
 10757  00EF  3E30               	addlw	48
 10758  00F0  0084               	movwf	4
 10759  00F1  3002               	movlw	2	; select bank4/5
 10760  00F2  0085               	movwf	5
 10761  00F3  3F40               	moviw [0]fsr1
 10762  00F4  0780               	addwf	0,f
 10763  00F5  3101               	addfsr 0,1
 10764  00F6  3F41               	moviw [1]fsr1
 10765  00F7  3D80               	addwfc	0,f
 10766  00F8  313F               	addfsr 0,-1
 10767  00F9  3001               	movlw	1
 10768  00FA  00AD               	movwf	??_Load_Main
 10769  00FB  082D               	movf	??_Load_Main,w
 10770  00FC  07B1               	addwf	Load_Main@i,f
 10771  00FD  3004               	movlw	4
 10772  00FE  0231               	subwf	Load_Main@i,w
 10773  00FF  1C03               	skipc
 10774  0100  28D3               	goto	l10007
 10775  0101                     l10013:	
 10776                           
 10777                           ;OverLoad_B1.c: 71: }
 10778                           ;OverLoad_B1.c: 72: Load->ADH/=3;
 10779  0101  3003               	movlw	3
 10780  0102  00A0               	movwf	___lwdiv@divisor
 10781  0103  3000               	movlw	0
 10782  0104  00A1               	movwf	___lwdiv@divisor+1
 10783  0105  086E               	movf	_Load,w
 10784  0106  3E2E               	addlw	46
 10785  0107  0086               	movwf	6
 10786  0108  3002               	movlw	2	; select bank4/5
 10787  0109  0087               	movwf	7
 10788  010A  3F40               	moviw [0]fsr1
 10789  010B  00A2               	movwf	___lwdiv@dividend
 10790  010C  3F41               	moviw [1]fsr1
 10791  010D  00A3               	movwf	___lwdiv@dividend+1
 10792  010E  319A  22CE  3180   	fcall	___lwdiv
 10793  0111  0020               	movlb	0	; select bank0
 10794  0112  086E               	movf	_Load,w
 10795  0113  3E2E               	addlw	46
 10796  0114  0086               	movwf	6
 10797  0115  3002               	movlw	2	; select bank4/5
 10798  0116  0087               	movwf	7
 10799  0117  0820               	movf	?___lwdiv,w
 10800  0118  3FC0               	movwi [0]fsr1
 10801  0119  0821               	movf	?___lwdiv+1,w
 10802  011A  3FC1               	movwi [1]fsr1
 10803                           
 10804                           ;OverLoad_B1.c: 73: Load->ADL/=3;
 10805  011B  3003               	movlw	3
 10806  011C  00A0               	movwf	___lwdiv@divisor
 10807  011D  3000               	movlw	0
 10808  011E  00A1               	movwf	___lwdiv@divisor+1
 10809  011F  086E               	movf	_Load,w
 10810  0120  3E30               	addlw	48
 10811  0121  0086               	movwf	6
 10812  0122  3002               	movlw	2	; select bank4/5
 10813  0123  0087               	movwf	7
 10814  0124  3F40               	moviw [0]fsr1
 10815  0125  00A2               	movwf	___lwdiv@dividend
 10816  0126  3F41               	moviw [1]fsr1
 10817  0127  00A3               	movwf	___lwdiv@dividend+1
 10818  0128  319A  22CE  3180   	fcall	___lwdiv
 10819  012B  0020               	movlb	0	; select bank0
 10820  012C  086E               	movf	_Load,w
 10821  012D  3E30               	addlw	48
 10822  012E  0086               	movwf	6
 10823  012F  3002               	movlw	2	; select bank4/5
 10824  0130  0087               	movwf	7
 10825  0131  0820               	movf	?___lwdiv,w
 10826  0132  3FC0               	movwi [0]fsr1
 10827  0133  0821               	movf	?___lwdiv+1,w
 10828  0134  3FC1               	movwi [1]fsr1
 10829                           
 10830                           ;OverLoad_B1.c: 74: if(Load->ADH > Load->ADL)
 10831  0135  086E               	movf	_Load,w
 10832  0136  3E2E               	addlw	46
 10833  0137  0086               	movwf	6
 10834  0138  3002               	movlw	2	; select bank4/5
 10835  0139  0087               	movwf	7
 10836  013A  3F40               	moviw [0]fsr1
 10837  013B  00AD               	movwf	??_Load_Main
 10838  013C  3F41               	moviw [1]fsr1
 10839  013D  00AE               	movwf	??_Load_Main+1
 10840  013E  086E               	movf	_Load,w
 10841  013F  3E30               	addlw	48
 10842  0140  0086               	movwf	6
 10843  0141  3002               	movlw	2	; select bank4/5
 10844  0142  0087               	movwf	7
 10845  0143  3F40               	moviw [0]fsr1
 10846  0144  00AF               	movwf	??_Load_Main+2
 10847  0145  3F41               	moviw [1]fsr1
 10848  0146  00B0               	movwf	??_Load_Main+3
 10849  0147  082E               	movf	??_Load_Main+1,w
 10850  0148  0230               	subwf	??_Load_Main+3,w
 10851  0149  1D03               	skipz
 10852  014A  294D               	goto	u10075
 10853  014B  082D               	movf	??_Load_Main,w
 10854  014C  022F               	subwf	??_Load_Main+2,w
 10855  014D                     u10075:	
 10856  014D  1803               	skipnc
 10857  014E  2AD7               	goto	l10081
 10858                           
 10859                           ;OverLoad_B1.c: 75: {
 10860                           ;OverLoad_B1.c: 76: Load->AD=(Load->ADH-Load->ADL);
 10861  014F  086E               	movf	_Load,w
 10862  0150  3E2E               	addlw	46
 10863  0151  0086               	movwf	6
 10864  0152  3002               	movlw	2	; select bank4/5
 10865  0153  0087               	movwf	7
 10866  0154  086E               	movf	_Load,w
 10867  0155  3E30               	addlw	48
 10868  0156  0084               	movwf	4
 10869  0157  3002               	movlw	2	; select bank4/5
 10870  0158  0085               	movwf	5
 10871  0159  3F00               	moviw [0]fsr0
 10872  015A  00AD               	movwf	??_Load_Main
 10873  015B  3F01               	moviw [1]fsr0
 10874  015C  00AE               	movwf	??_Load_Main+1
 10875  015D  09AD               	comf	??_Load_Main,f
 10876  015E  09AE               	comf	??_Load_Main+1,f
 10877  015F  0AAD               	incf	??_Load_Main,f
 10878  0160  1903               	skipnz
 10879  0161  0AAE               	incf	??_Load_Main+1,f
 10880  0162  3F40               	moviw [0]fsr1
 10881  0163  072D               	addwf	??_Load_Main,w
 10882  0164  00AF               	movwf	??_Load_Main+2
 10883  0165  3F41               	moviw [1]fsr1
 10884  0166  3D2E               	addwfc	??_Load_Main+1,w
 10885  0167  00B0               	movwf	??_Load_Main+3
 10886  0168  086E               	movf	_Load,w
 10887  0169  3E2C               	addlw	44
 10888  016A  0086               	movwf	6
 10889  016B  3002               	movlw	2	; select bank4/5
 10890  016C  0087               	movwf	7
 10891  016D  082F               	movf	??_Load_Main+2,w
 10892  016E  3FC0               	movwi [0]fsr1
 10893  016F  0830               	movf	??_Load_Main+3,w
 10894  0170  3FC1               	movwi [1]fsr1
 10895                           
 10896                           ;OverLoad_B1.c: 78: if(Load->Count < 2)
 10897  0171  086E               	movf	_Load,w
 10898  0172  3E3A               	addlw	58
 10899  0173  0086               	movwf	6
 10900  0174  3002               	movlw	2	; select bank4/5
 10901  0175  0087               	movwf	7
 10902  0176  3002               	movlw	2
 10903  0177  0201               	subwf	1,w
 10904  0178  1803               	skipnc
 10905  0179  29CA               	goto	l10035
 10906                           
 10907                           ;OverLoad_B1.c: 79: {
 10908                           ;OverLoad_B1.c: 80: Load->Count++;
 10909  017A  3001               	movlw	1
 10910  017B  00AD               	movwf	??_Load_Main
 10911  017C  086E               	movf	_Load,w
 10912  017D  3E3A               	addlw	58
 10913  017E  0086               	movwf	6
 10914  017F  3002               	movlw	2	; select bank4/5
 10915  0180  0087               	movwf	7
 10916  0181  082D               	movf	??_Load_Main,w
 10917  0182  0781               	addwf	1,f
 10918                           
 10919                           ;OverLoad_B1.c: 81: if(Load->Count == 1)
 10920  0183  086E               	movf	_Load,w
 10921  0184  3E3A               	addlw	58
 10922  0185  0086               	movwf	6
 10923  0186  3002               	movlw	2	; select bank4/5
 10924  0187  0087               	movwf	7
 10925  0188  0801               	movf	1,w
 10926  0189  3A01               	xorlw	1
 10927  018A  1D03               	skipz
 10928  018B  2996               	goto	l10027
 10929                           
 10930                           ;OverLoad_B1.c: 82: {
 10931                           ;OverLoad_B1.c: 83: Load->JudgeValue=500;
 10932  018C  086E               	movf	_Load,w
 10933  018D  3E36               	addlw	54
 10934  018E  0086               	movwf	6
 10935  018F  3002               	movlw	2	; select bank4/5
 10936  0190  0087               	movwf	7
 10937  0191  30F4               	movlw	244
 10938  0192  3FC0               	movwi [0]fsr1
 10939  0193  3001               	movlw	1
 10940  0194  3FC1               	movwi [1]fsr1
 10941                           
 10942                           ;OverLoad_B1.c: 84: }
 10943  0195  29CA               	goto	l10035
 10944  0196                     l10027:	
 10945                           
 10946                           ;OverLoad_B1.c: 85: else if(Load->Count == 2)
 10947  0196  086E               	movf	_Load,w
 10948  0197  3E3A               	addlw	58
 10949  0198  0086               	movwf	6
 10950  0199  3002               	movlw	2	; select bank4/5
 10951  019A  0087               	movwf	7
 10952  019B  0801               	movf	1,w
 10953  019C  3A02               	xorlw	2
 10954  019D  1D03               	skipz
 10955  019E  29CA               	goto	l10035
 10956                           
 10957                           ;OverLoad_B1.c: 86: {
 10958                           ;OverLoad_B1.c: 87: if(Load->LightsCount == 1)
 10959  019F  086E               	movf	_Load,w
 10960  01A0  3E3E               	addlw	62
 10961  01A1  0086               	movwf	6
 10962  01A2  3002               	movlw	2	; select bank4/5
 10963  01A3  0087               	movwf	7
 10964  01A4  0801               	movf	1,w
 10965  01A5  3A01               	xorlw	1
 10966  01A6  1D03               	skipz
 10967  01A7  29B2               	goto	l10033
 10968                           
 10969                           ;OverLoad_B1.c: 88: {
 10970                           ;OverLoad_B1.c: 89: Load->JudgeValue=0x2e;
 10971  01A8  086E               	movf	_Load,w
 10972  01A9  3E36               	addlw	54
 10973  01AA  0086               	movwf	6
 10974  01AB  3002               	movlw	2	; select bank4/5
 10975  01AC  0087               	movwf	7
 10976  01AD  302E               	movlw	46
 10977  01AE  3FC0               	movwi [0]fsr1
 10978  01AF  3000               	movlw	0
 10979  01B0  3FC1               	movwi [1]fsr1
 10980                           
 10981                           ;OverLoad_B1.c: 90: }
 10982  01B1  29CA               	goto	l10035
 10983  01B2                     l10033:	
 10984                           
 10985                           ;OverLoad_B1.c: 91: else
 10986                           ;OverLoad_B1.c: 92: {
 10987                           ;OverLoad_B1.c: 93: Load->JudgeValue=0x2e+Load->TotalLoad;
 10988  01B2  086E               	movf	_Load,w
 10989  01B3  3E06               	addlw	6
 10990  01B4  0086               	movwf	6
 10991  01B5  3002               	movlw	2	; select bank4/5
 10992  01B6  0087               	movwf	7
 10993  01B7  3F40               	moviw [0]fsr1
 10994  01B8  00AD               	movwf	??_Load_Main
 10995  01B9  3F41               	moviw [1]fsr1
 10996  01BA  00AE               	movwf	??_Load_Main+1
 10997  01BB  082D               	movf	??_Load_Main,w
 10998  01BC  3E2E               	addlw	46
 10999  01BD  00AF               	movwf	??_Load_Main+2
 11000  01BE  3000               	movlw	0
 11001  01BF  3D2E               	addwfc	??_Load_Main+1,w
 11002  01C0  00B0               	movwf	??_Load_Main+3
 11003  01C1  086E               	movf	_Load,w
 11004  01C2  3E36               	addlw	54
 11005  01C3  0086               	movwf	6
 11006  01C4  3002               	movlw	2	; select bank4/5
 11007  01C5  0087               	movwf	7
 11008  01C6  082F               	movf	??_Load_Main+2,w
 11009  01C7  3FC0               	movwi [0]fsr1
 11010  01C8  0830               	movf	??_Load_Main+3,w
 11011  01C9  3FC1               	movwi [1]fsr1
 11012  01CA                     l10035:	
 11013                           
 11014                           ;OverLoad_B1.c: 94: }
 11015                           ;OverLoad_B1.c: 95: }
 11016                           ;OverLoad_B1.c: 96: }
 11017                           ;OverLoad_B1.c: 98: if(Load->AD >= Load->JudgeValue)
 11018  01CA  086E               	movf	_Load,w
 11019  01CB  3E36               	addlw	54
 11020  01CC  0086               	movwf	6
 11021  01CD  3002               	movlw	2	; select bank4/5
 11022  01CE  0087               	movwf	7
 11023  01CF  3F40               	moviw [0]fsr1
 11024  01D0  00AD               	movwf	??_Load_Main
 11025  01D1  3F41               	moviw [1]fsr1
 11026  01D2  00AE               	movwf	??_Load_Main+1
 11027  01D3  086E               	movf	_Load,w
 11028  01D4  3E2C               	addlw	44
 11029  01D5  0086               	movwf	6
 11030  01D6  3002               	movlw	2	; select bank4/5
 11031  01D7  0087               	movwf	7
 11032  01D8  3F40               	moviw [0]fsr1
 11033  01D9  00AF               	movwf	??_Load_Main+2
 11034  01DA  3F41               	moviw [1]fsr1
 11035  01DB  00B0               	movwf	??_Load_Main+3
 11036  01DC  082E               	movf	??_Load_Main+1,w
 11037  01DD  0230               	subwf	??_Load_Main+3,w
 11038  01DE  1D03               	skipz
 11039  01DF  29E2               	goto	u10125
 11040  01E0  082D               	movf	??_Load_Main,w
 11041  01E1  022F               	subwf	??_Load_Main+2,w
 11042  01E2                     u10125:	
 11043  01E2  1C03               	skipc
 11044  01E3  2A50               	goto	l10055
 11045                           
 11046                           ;OverLoad_B1.c: 99: {
 11047                           ;OverLoad_B1.c: 100: Load->ErrorCount++;
 11048  01E4  3001               	movlw	1
 11049  01E5  00AD               	movwf	??_Load_Main
 11050  01E6  086E               	movf	_Load,w
 11051  01E7  3E3C               	addlw	60
 11052  01E8  0086               	movwf	6
 11053  01E9  3002               	movlw	2	; select bank4/5
 11054  01EA  0087               	movwf	7
 11055  01EB  082D               	movf	??_Load_Main,w
 11056  01EC  0781               	addwf	1,f
 11057                           
 11058                           ;OverLoad_B1.c: 101: if(Load->ErrorCount >2)
 11059  01ED  086E               	movf	_Load,w
 11060  01EE  3E3C               	addlw	60
 11061  01EF  0086               	movwf	6
 11062  01F0  3002               	movlw	2	; select bank4/5
 11063  01F1  0087               	movwf	7
 11064  01F2  3003               	movlw	3
 11065  01F3  0201               	subwf	1,w
 11066  01F4  1C03               	skipc
 11067  01F5  2AD7               	goto	l10081
 11068                           
 11069                           ;OverLoad_B1.c: 102: {
 11070                           ;OverLoad_B1.c: 103: Load->ErrorCount=0;
 11071  01F6  086E               	movf	_Load,w
 11072  01F7  3E3C               	addlw	60
 11073  01F8  0086               	movwf	6
 11074  01F9  3002               	movlw	2	; select bank4/5
 11075  01FA  0087               	movwf	7
 11076  01FB  0181               	clrf	1
 11077                           
 11078                           ;OverLoad_B1.c: 104: setLoad_Exceptions(1);
 11079  01FC  3001               	movlw	1
 11080  01FD  319C  24F4  3180   	fcall	_setLoad_Exceptions
 11081                           
 11082                           ;OverLoad_B1.c: 106: Product->Data[4]=(Load->AD >> 8);
 11083  0200  0020               	movlb	0	; select bank0
 11084  0201  086E               	movf	_Load,w
 11085  0202  3E2C               	addlw	44
 11086  0203  0086               	movwf	6
 11087  0204  3002               	movlw	2	; select bank4/5
 11088  0205  0087               	movwf	7
 11089  0206  3F40               	moviw [0]fsr1
 11090  0207  00AD               	movwf	??_Load_Main
 11091  0208  3F41               	moviw [1]fsr1
 11092  0209  00AE               	movwf	??_Load_Main+1
 11093  020A  082E               	movf	??_Load_Main+1,w
 11094  020B  00AF               	movwf	??_Load_Main+2
 11095  020C  086F               	movf	_Product,w
 11096  020D  3E04               	addlw	4
 11097  020E  0086               	movwf	6
 11098  020F  3001               	movlw	1	; select bank2/3
 11099  0210  0087               	movwf	7
 11100  0211  082F               	movf	??_Load_Main+2,w
 11101  0212  0081               	movwf	1
 11102                           
 11103                           ;OverLoad_B1.c: 107: Product->Data[5]=Load->AD;
 11104  0213  086E               	movf	_Load,w
 11105  0214  3E2C               	addlw	44
 11106  0215  0086               	movwf	6
 11107  0216  3002               	movlw	2	; select bank4/5
 11108  0217  0087               	movwf	7
 11109  0218  0801               	movf	1,w
 11110  0219  00AD               	movwf	??_Load_Main
 11111  021A  086F               	movf	_Product,w
 11112  021B  3E05               	addlw	5
 11113  021C  0086               	movwf	6
 11114  021D  3001               	movlw	1	; select bank2/3
 11115  021E  0087               	movwf	7
 11116  021F  082D               	movf	??_Load_Main,w
 11117  0220  0081               	movwf	1
 11118                           
 11119                           ;OverLoad_B1.c: 108: Product->Data[16]=(Load->JudgeValue >> 8);
 11120  0221  086E               	movf	_Load,w
 11121  0222  3E36               	addlw	54
 11122  0223  0086               	movwf	6
 11123  0224  3002               	movlw	2	; select bank4/5
 11124  0225  0087               	movwf	7
 11125  0226  3F40               	moviw [0]fsr1
 11126  0227  00AD               	movwf	??_Load_Main
 11127  0228  3F41               	moviw [1]fsr1
 11128  0229  00AE               	movwf	??_Load_Main+1
 11129  022A  082E               	movf	??_Load_Main+1,w
 11130  022B  00AF               	movwf	??_Load_Main+2
 11131  022C  086F               	movf	_Product,w
 11132  022D  3E10               	addlw	16
 11133  022E  0086               	movwf	6
 11134  022F  3001               	movlw	1	; select bank2/3
 11135  0230  0087               	movwf	7
 11136  0231  082F               	movf	??_Load_Main+2,w
 11137  0232  0081               	movwf	1
 11138                           
 11139                           ;OverLoad_B1.c: 109: Product->Data[17]=Load->JudgeValue;
 11140  0233  086E               	movf	_Load,w
 11141  0234  3E36               	addlw	54
 11142  0235  0086               	movwf	6
 11143  0236  3002               	movlw	2	; select bank4/5
 11144  0237  0087               	movwf	7
 11145  0238  0801               	movf	1,w
 11146  0239  00AD               	movwf	??_Load_Main
 11147  023A  086F               	movf	_Product,w
 11148  023B  3E11               	addlw	17
 11149  023C  0086               	movwf	6
 11150  023D  3001               	movlw	1	; select bank2/3
 11151  023E  0087               	movwf	7
 11152  023F  082D               	movf	??_Load_Main,w
 11153  0240  0081               	movwf	1
 11154                           
 11155                           ;OverLoad_B1.c: 110: Product->Data[8]=Load->LightsCount;
 11156  0241  086E               	movf	_Load,w
 11157  0242  3E3E               	addlw	62
 11158  0243  0086               	movwf	6
 11159  0244  3002               	movlw	2	; select bank4/5
 11160  0245  0087               	movwf	7
 11161  0246  0801               	movf	1,w
 11162  0247  00AD               	movwf	??_Load_Main
 11163  0248  086F               	movf	_Product,w
 11164  0249  3E08               	addlw	8
 11165  024A  0086               	movwf	6
 11166  024B  3001               	movlw	1	; select bank2/3
 11167  024C  0087               	movwf	7
 11168  024D  082D               	movf	??_Load_Main,w
 11169  024E  0081               	movwf	1
 11170                           
 11171                           ;OverLoad_B1.c: 112: }
 11172                           ;OverLoad_B1.c: 113: }
 11173  024F  2AD7               	goto	l10081
 11174  0250                     l10055:	
 11175                           
 11176                           ;OverLoad_B1.c: 114: else
 11177                           ;OverLoad_B1.c: 115: {
 11178                           ;OverLoad_B1.c: 116: Load->ErrorCount=0;
 11179  0250  086E               	movf	_Load,w
 11180  0251  3E3C               	addlw	60
 11181  0252  0086               	movwf	6
 11182  0253  3002               	movlw	2	; select bank4/5
 11183  0254  0087               	movwf	7
 11184  0255  0181               	clrf	1
 11185                           
 11186                           ;OverLoad_B1.c: 117: if(Load->SafeCount < 10)
 11187  0256  086E               	movf	_Load,w
 11188  0257  3E42               	addlw	66
 11189  0258  0086               	movwf	6
 11190  0259  3002               	movlw	2	; select bank4/5
 11191  025A  0087               	movwf	7
 11192  025B  300A               	movlw	10
 11193  025C  0201               	subwf	1,w
 11194  025D  1803               	skipnc
 11195  025E  2A68               	goto	l10061
 11196                           
 11197                           ;OverLoad_B1.c: 118: {
 11198                           ;OverLoad_B1.c: 119: Load->SafeCount++;
 11199  025F  3001               	movlw	1
 11200  0260  00AD               	movwf	??_Load_Main
 11201  0261  086E               	movf	_Load,w
 11202  0262  3E42               	addlw	66
 11203  0263  0086               	movwf	6
 11204  0264  3002               	movlw	2	; select bank4/5
 11205  0265  0087               	movwf	7
 11206  0266  082D               	movf	??_Load_Main,w
 11207  0267  0781               	addwf	1,f
 11208  0268                     l10061:	
 11209                           
 11210                           ;OverLoad_B1.c: 120: }
 11211                           ;OverLoad_B1.c: 121: if(Load->SafeCount >= 10)
 11212  0268  086E               	movf	_Load,w
 11213  0269  3E42               	addlw	66
 11214  026A  0086               	movwf	6
 11215  026B  3002               	movlw	2	; select bank4/5
 11216  026C  0087               	movwf	7
 11217  026D  300A               	movlw	10
 11218  026E  0201               	subwf	1,w
 11219  026F  1C03               	skipc
 11220  0270  2AD7               	goto	l10081
 11221                           
 11222                           ;OverLoad_B1.c: 122: {
 11223                           ;OverLoad_B1.c: 123: Load->Safe=1;
 11224  0271  086E               	movf	_Load,w
 11225  0272  0086               	movwf	6
 11226  0273  3002               	movlw	2	; select bank4/5
 11227  0274  0087               	movwf	7
 11228  0275  1581               	bsf	1,3
 11229                           
 11230                           ;OverLoad_B1.c: 126: setDimmerLights_Clear(1,1);
 11231  0276  01A2               	clrf	setDimmerLights_Clear@command
 11232  0277  0AA2               	incf	setDimmerLights_Clear@command,f
 11233  0278  3001               	movlw	1
 11234  0279  31A4  24F2  3180   	fcall	_setDimmerLights_Clear
 11235                           
 11236                           ;OverLoad_B1.c: 130: setDimmerLights_Clear(2,1);
 11237  027C  0020               	movlb	0	; select bank0
 11238  027D  01A2               	clrf	setDimmerLights_Clear@command
 11239  027E  0AA2               	incf	setDimmerLights_Clear@command,f
 11240  027F  3002               	movlw	2
 11241  0280  31A4  24F2  3180   	fcall	_setDimmerLights_Clear
 11242                           
 11243                           ;OverLoad_B1.c: 137: if(Load->StatusOn)
 11244  0283  0020               	movlb	0	; select bank0
 11245  0284  086E               	movf	_Load,w
 11246  0285  3E46               	addlw	70
 11247  0286  0086               	movwf	6
 11248  0287  3002               	movlw	2	; select bank4/5
 11249  0288  0087               	movwf	7
 11250  0289  1C01               	btfss	1,0
 11251  028A  2A9F               	goto	l10073
 11252                           
 11253                           ;OverLoad_B1.c: 138: {
 11254                           ;OverLoad_B1.c: 139: Load->StatusOn=0;
 11255  028B  086E               	movf	_Load,w
 11256  028C  3E46               	addlw	70
 11257  028D  0086               	movwf	6
 11258  028E  3002               	movlw	2	; select bank4/5
 11259  028F  0087               	movwf	7
 11260  0290  1001               	bcf	1,0
 11261                           
 11262                           ;OverLoad_B1.c: 140: Load->TotalLoad=Load->AD;
 11263  0291  086E               	movf	_Load,w
 11264  0292  3E2C               	addlw	44
 11265  0293  0086               	movwf	6
 11266  0294  3002               	movlw	2	; select bank4/5
 11267  0295  0087               	movwf	7
 11268  0296  086E               	movf	_Load,w
 11269  0297  3E06               	addlw	6
 11270  0298  0084               	movwf	4
 11271  0299  3002               	movlw	2	; select bank4/5
 11272  029A  0085               	movwf	5
 11273  029B  3F40               	moviw [0]fsr1
 11274  029C  3F80               	movwi [0]fsr0
 11275  029D  3F41               	moviw [1]fsr1
 11276  029E  3F81               	movwi [1]fsr0
 11277  029F                     l10073:	
 11278                           
 11279                           ;OverLoad_B1.c: 142: }
 11280                           ;OverLoad_B1.c: 144: if(Load->StatusOff)
 11281  029F  086E               	movf	_Load,w
 11282  02A0  3E46               	addlw	70
 11283  02A1  0086               	movwf	6
 11284  02A2  3002               	movlw	2	; select bank4/5
 11285  02A3  0087               	movwf	7
 11286  02A4  1C81               	btfss	1,1
 11287  02A5  2AD7               	goto	l10081
 11288                           
 11289                           ;OverLoad_B1.c: 145: {
 11290                           ;OverLoad_B1.c: 146: Load->StatusOff=0;
 11291  02A6  086E               	movf	_Load,w
 11292  02A7  3E46               	addlw	70
 11293  02A8  0086               	movwf	6
 11294  02A9  3002               	movlw	2	; select bank4/5
 11295  02AA  0087               	movwf	7
 11296  02AB  1081               	bcf	1,1
 11297                           
 11298                           ;OverLoad_B1.c: 147: Load->TotalLoad=Load->AD;
 11299  02AC  086E               	movf	_Load,w
 11300  02AD  3E2C               	addlw	44
 11301  02AE  0086               	movwf	6
 11302  02AF  3002               	movlw	2	; select bank4/5
 11303  02B0  0087               	movwf	7
 11304  02B1  086E               	movf	_Load,w
 11305  02B2  3E06               	addlw	6
 11306  02B3  0084               	movwf	4
 11307  02B4  3002               	movlw	2	; select bank4/5
 11308  02B5  0085               	movwf	5
 11309  02B6  3F40               	moviw [0]fsr1
 11310  02B7  3F80               	movwi [0]fsr0
 11311  02B8  3F41               	moviw [1]fsr1
 11312  02B9  3F81               	movwi [1]fsr0
 11313                           
 11314                           ;OverLoad_B1.c: 148: Load->JudgeValue=0x2e*Load->LightsCount;
 11315  02BA  086E               	movf	_Load,w
 11316  02BB  3E3E               	addlw	62
 11317  02BC  0086               	movwf	6
 11318  02BD  3002               	movlw	2	; select bank4/5
 11319  02BE  0087               	movwf	7
 11320  02BF  0801               	movf	1,w
 11321  02C0  00AD               	movwf	??_Load_Main
 11322  02C1  01AE               	clrf	??_Load_Main+1
 11323  02C2  082D               	movf	??_Load_Main,w
 11324  02C3  00A0               	movwf	___wmul@multiplier
 11325  02C4  082E               	movf	??_Load_Main+1,w
 11326  02C5  00A1               	movwf	___wmul@multiplier+1
 11327  02C6  302E               	movlw	46
 11328  02C7  00A2               	movwf	___wmul@multiplicand
 11329  02C8  3000               	movlw	0
 11330  02C9  00A3               	movwf	___wmul@multiplicand+1
 11331  02CA  31A7  2718  3180   	fcall	___wmul
 11332  02CD  0020               	movlb	0	; select bank0
 11333  02CE  086E               	movf	_Load,w
 11334  02CF  3E36               	addlw	54
 11335  02D0  0086               	movwf	6
 11336  02D1  3002               	movlw	2	; select bank4/5
 11337  02D2  0087               	movwf	7
 11338  02D3  0820               	movf	?___wmul,w
 11339  02D4  3FC0               	movwi [0]fsr1
 11340  02D5  0821               	movf	?___wmul+1,w
 11341  02D6  3FC1               	movwi [1]fsr1
 11342  02D7                     l10081:	
 11343                           
 11344                           ;OverLoad_B1.c: 149: }
 11345                           ;OverLoad_B1.c: 150: }
 11346                           ;OverLoad_B1.c: 151: }
 11347                           ;OverLoad_B1.c: 152: }
 11348                           ;OverLoad_B1.c: 153: setLoad_AH_AL_Restore();
 11349  02D7  31A7  27B9  3180   	fcall	_setLoad_AH_AL_Restore
 11350                           
 11351                           ;OverLoad_B1.c: 155: Product->Data[2]=(Load->AD >> 8);
 11352  02DA  0020               	movlb	0	; select bank0
 11353  02DB  086E               	movf	_Load,w
 11354  02DC  3E2C               	addlw	44
 11355  02DD  0086               	movwf	6
 11356  02DE  3002               	movlw	2	; select bank4/5
 11357  02DF  0087               	movwf	7
 11358  02E0  3F40               	moviw [0]fsr1
 11359  02E1  00AD               	movwf	??_Load_Main
 11360  02E2  3F41               	moviw [1]fsr1
 11361  02E3  00AE               	movwf	??_Load_Main+1
 11362  02E4  082E               	movf	??_Load_Main+1,w
 11363  02E5  00AF               	movwf	??_Load_Main+2
 11364  02E6  086F               	movf	_Product,w
 11365  02E7  3E02               	addlw	2
 11366  02E8  0086               	movwf	6
 11367  02E9  3001               	movlw	1	; select bank2/3
 11368  02EA  0087               	movwf	7
 11369  02EB  082F               	movf	??_Load_Main+2,w
 11370  02EC  0081               	movwf	1
 11371                           
 11372                           ;OverLoad_B1.c: 156: Product->Data[3]=Load->AD;
 11373  02ED  086E               	movf	_Load,w
 11374  02EE  3E2C               	addlw	44
 11375  02EF  0086               	movwf	6
 11376  02F0  3002               	movlw	2	; select bank4/5
 11377  02F1  0087               	movwf	7
 11378  02F2  0801               	movf	1,w
 11379  02F3  00AD               	movwf	??_Load_Main
 11380  02F4  086F               	movf	_Product,w
 11381  02F5  3E03               	addlw	3
 11382  02F6  0086               	movwf	6
 11383  02F7  3001               	movlw	1	; select bank2/3
 11384  02F8  0087               	movwf	7
 11385  02F9  082D               	movf	??_Load_Main,w
 11386  02FA  0081               	movwf	1
 11387                           
 11388                           ;OverLoad_B1.c: 157: Product->Data[8]=Load->LightsCount;
 11389  02FB  086E               	movf	_Load,w
 11390  02FC  3E3E               	addlw	62
 11391  02FD  0086               	movwf	6
 11392  02FE  3002               	movlw	2	; select bank4/5
 11393  02FF  0087               	movwf	7
 11394  0300  0801               	movf	1,w
 11395  0301  00AD               	movwf	??_Load_Main
 11396  0302  086F               	movf	_Product,w
 11397  0303  3E08               	addlw	8
 11398  0304  0086               	movwf	6
 11399  0305  3001               	movlw	1	; select bank2/3
 11400  0306  0087               	movwf	7
 11401  0307  082D               	movf	??_Load_Main,w
 11402  0308  0081               	movwf	1
 11403                           
 11404                           ;OverLoad_B1.c: 158: Product->Data[10]=Load->TotalLoad;
 11405  0309  086E               	movf	_Load,w
 11406  030A  3E06               	addlw	6
 11407  030B  0086               	movwf	6
 11408  030C  3002               	movlw	2	; select bank4/5
 11409  030D  0087               	movwf	7
 11410  030E  0801               	movf	1,w
 11411  030F  00AD               	movwf	??_Load_Main
 11412  0310  086F               	movf	_Product,w
 11413  0311  3E0A               	addlw	10
 11414  0312  0086               	movwf	6
 11415  0313  3001               	movlw	1	; select bank2/3
 11416  0314  0087               	movwf	7
 11417  0315  082D               	movf	??_Load_Main,w
 11418  0316  0081               	movwf	1
 11419                           
 11420                           ;OverLoad_B1.c: 159: Product->Data[16]=(Load->JudgeValue >> 8);
 11421  0317  086E               	movf	_Load,w
 11422  0318  3E36               	addlw	54
 11423  0319  0086               	movwf	6
 11424  031A  3002               	movlw	2	; select bank4/5
 11425  031B  0087               	movwf	7
 11426  031C  3F40               	moviw [0]fsr1
 11427  031D  00AD               	movwf	??_Load_Main
 11428  031E  3F41               	moviw [1]fsr1
 11429  031F  00AE               	movwf	??_Load_Main+1
 11430  0320  082E               	movf	??_Load_Main+1,w
 11431  0321  00AF               	movwf	??_Load_Main+2
 11432  0322  086F               	movf	_Product,w
 11433  0323  3E10               	addlw	16
 11434  0324  0086               	movwf	6
 11435  0325  3001               	movlw	1	; select bank2/3
 11436  0326  0087               	movwf	7
 11437  0327  082F               	movf	??_Load_Main+2,w
 11438  0328  0081               	movwf	1
 11439                           
 11440                           ;OverLoad_B1.c: 160: Product->Data[17]=Load->JudgeValue;
 11441  0329  086E               	movf	_Load,w
 11442  032A  3E36               	addlw	54
 11443  032B  0086               	movwf	6
 11444  032C  3002               	movlw	2	; select bank4/5
 11445  032D  0087               	movwf	7
 11446  032E  0801               	movf	1,w
 11447  032F  00AD               	movwf	??_Load_Main
 11448  0330  086F               	movf	_Product,w
 11449  0331  3E11               	addlw	17
 11450  0332  0086               	movwf	6
 11451  0333  3001               	movlw	1	; select bank2/3
 11452  0334  0087               	movwf	7
 11453  0335  082D               	movf	??_Load_Main,w
 11454  0336  0081               	movwf	1
 11455                           
 11456                           ;OverLoad_B1.c: 161: Product->Data[18]=Load->ErrorStatus;
 11457  0337  086E               	movf	_Load,w
 11458  0338  3E05               	addlw	5
 11459  0339  0086               	movwf	6
 11460  033A  3002               	movlw	2	; select bank4/5
 11461  033B  0087               	movwf	7
 11462  033C  0801               	movf	1,w
 11463  033D  00AD               	movwf	??_Load_Main
 11464  033E  086F               	movf	_Product,w
 11465  033F  3E12               	addlw	18
 11466  0340  0086               	movwf	6
 11467  0341  3001               	movlw	1	; select bank2/3
 11468  0342  0087               	movwf	7
 11469  0343  082D               	movf	??_Load_Main,w
 11470  0344  0081               	movwf	1
 11471                           
 11472                           ;OverLoad_B1.c: 162: Product->Data[19]=Load->Count;
 11473  0345  086E               	movf	_Load,w
 11474  0346  3E3A               	addlw	58
 11475  0347  0086               	movwf	6
 11476  0348  3002               	movlw	2	; select bank4/5
 11477  0349  0087               	movwf	7
 11478  034A  0801               	movf	1,w
 11479  034B  00AD               	movwf	??_Load_Main
 11480  034C  086F               	movf	_Product,w
 11481  034D  3E13               	addlw	19
 11482  034E  0086               	movwf	6
 11483  034F  3001               	movlw	1	; select bank2/3
 11484  0350  0087               	movwf	7
 11485  0351  082D               	movf	??_Load_Main,w
 11486  0352  0081               	movwf	1
 11487                           
 11488                           ;OverLoad_B1.c: 164: }
 11489                           ;OverLoad_B1.c: 165: }
 11490  0353  0008               	return
 11491  0354                     l10099:	
 11492                           
 11493                           ;OverLoad_B1.c: 166: else
 11494                           ;OverLoad_B1.c: 167: {
 11495                           ;OverLoad_B1.c: 168: if(Load->GO)
 11496  0354  086E               	movf	_Load,w
 11497  0355  0086               	movwf	6
 11498  0356  3002               	movlw	2	; select bank4/5
 11499  0357  0087               	movwf	7
 11500  0358  1C81               	btfss	1,1
 11501  0359  2B7D               	goto	l10111
 11502                           
 11503                           ;OverLoad_B1.c: 169: {
 11504                           ;OverLoad_B1.c: 170: if(!Load->LightsON)
 11505  035A  086E               	movf	_Load,w
 11506  035B  0086               	movwf	6
 11507  035C  3002               	movlw	2	; select bank4/5
 11508  035D  0087               	movwf	7
 11509  035E  1901               	btfsc	1,2
 11510  035F  2B6A               	goto	l10105
 11511                           
 11512                           ;OverLoad_B1.c: 171: {
 11513                           ;OverLoad_B1.c: 172: Load->LightsON=1;
 11514  0360  086E               	movf	_Load,w
 11515  0361  0086               	movwf	6
 11516  0362  3002               	movlw	2	; select bank4/5
 11517  0363  0087               	movwf	7
 11518  0364  1501               	bsf	1,2
 11519                           
 11520                           ;OverLoad_B1.c: 173: Load->Safe=0;
 11521  0365  086E               	movf	_Load,w
 11522  0366  0086               	movwf	6
 11523  0367  3002               	movlw	2	; select bank4/5
 11524  0368  0087               	movwf	7
 11525  0369  1181               	bcf	1,3
 11526  036A                     l10105:	
 11527                           
 11528                           ;OverLoad_B1.c: 174: }
 11529                           ;OverLoad_B1.c: 175: if(getTemp_Safe() && getPF_Safe())
 11530  036A  31A3  235B  3180   	fcall	_getTemp_Safe
 11531  036D  3A00               	xorlw	0
 11532  036E  1903               	skipnz
 11533  036F  0008               	return
 11534  0370  31A3  2380  3180   	fcall	_getPF_Safe
 11535  0373  3A00               	xorlw	0
 11536  0374  1903               	skipnz
 11537  0375  0008               	return
 11538                           
 11539                           ;OverLoad_B1.c: 176: {
 11540                           ;OverLoad_B1.c: 177: Load->ADtoGO=1;
 11541  0376  0020               	movlb	0	; select bank0
 11542  0377  086E               	movf	_Load,w
 11543  0378  0086               	movwf	6
 11544  0379  3002               	movlw	2	; select bank4/5
 11545  037A  0087               	movwf	7
 11546  037B  1601               	bsf	1,4
 11547                           
 11548                           ;OverLoad_B1.c: 178: }
 11549                           ;OverLoad_B1.c: 179: }
 11550  037C  0008               	return
 11551  037D                     l10111:	
 11552                           
 11553                           ;OverLoad_B1.c: 180: else
 11554                           ;OverLoad_B1.c: 181: {
 11555                           ;OverLoad_B1.c: 182: if(Load->LightsON)
 11556  037D  086E               	movf	_Load,w
 11557  037E  0086               	movwf	6
 11558  037F  3002               	movlw	2	; select bank4/5
 11559  0380  0087               	movwf	7
 11560  0381  1D01               	btfss	1,2
 11561  0382  0008               	return
 11562                           
 11563                           ;OverLoad_B1.c: 183: {
 11564                           ;OverLoad_B1.c: 184: Load->LightsON=0;
 11565  0383  086E               	movf	_Load,w
 11566  0384  0086               	movwf	6
 11567  0385  3002               	movlw	2	; select bank4/5
 11568  0386  0087               	movwf	7
 11569  0387  1101               	bcf	1,2
 11570                           
 11571                           ;OverLoad_B1.c: 185: Load->Safe=1;
 11572  0388  086E               	movf	_Load,w
 11573  0389  0086               	movwf	6
 11574  038A  3002               	movlw	2	; select bank4/5
 11575  038B  0087               	movwf	7
 11576  038C  1581               	bsf	1,3
 11577                           
 11578                           ;OverLoad_B1.c: 186: Load->ErrorCount=0;
 11579  038D  086E               	movf	_Load,w
 11580  038E  3E3C               	addlw	60
 11581  038F  0086               	movwf	6
 11582  0390  3002               	movlw	2	; select bank4/5
 11583  0391  0087               	movwf	7
 11584  0392  0181               	clrf	1
 11585                           
 11586                           ;OverLoad_B1.c: 187: Load->Count=0;
 11587  0393  086E               	movf	_Load,w
 11588  0394  3E3A               	addlw	58
 11589  0395  0086               	movwf	6
 11590  0396  3002               	movlw	2	; select bank4/5
 11591  0397  0087               	movwf	7
 11592  0398  0181               	clrf	1
 11593                           
 11594                           ;OverLoad_B1.c: 188: Load->TotalLoad=0;
 11595  0399  086E               	movf	_Load,w
 11596  039A  3E06               	addlw	6
 11597  039B  0086               	movwf	6
 11598  039C  3002               	movlw	2	; select bank4/5
 11599  039D  0087               	movwf	7
 11600  039E  3000               	movlw	0
 11601  039F  3FC0               	movwi [0]fsr1
 11602  03A0  3FC1               	movwi [1]fsr1
 11603                           
 11604                           ;OverLoad_B1.c: 189: Load->NumberCount=0;
 11605  03A1  086E               	movf	_Load,w
 11606  03A2  3E3F               	addlw	63
 11607  03A3  0086               	movwf	6
 11608  03A4  3002               	movlw	2	; select bank4/5
 11609  03A5  0087               	movwf	7
 11610  03A6  0181               	clrf	1
 11611                           
 11612                           ;OverLoad_B1.c: 190: Load->StatusOn=0;
 11613  03A7  086E               	movf	_Load,w
 11614  03A8  3E46               	addlw	70
 11615  03A9  0086               	movwf	6
 11616  03AA  3002               	movlw	2	; select bank4/5
 11617  03AB  0087               	movwf	7
 11618  03AC  1001               	bcf	1,0
 11619                           
 11620                           ;OverLoad_B1.c: 191: Load->StatusOff=0;
 11621  03AD  086E               	movf	_Load,w
 11622  03AE  3E46               	addlw	70
 11623  03AF  0086               	movwf	6
 11624  03B0  3002               	movlw	2	; select bank4/5
 11625  03B1  0087               	movwf	7
 11626  03B2  1081               	bcf	1,1
 11627                           
 11628                           ;OverLoad_B1.c: 192: Load->AD=0;
 11629  03B3  086E               	movf	_Load,w
 11630  03B4  3E2C               	addlw	44
 11631  03B5  0086               	movwf	6
 11632  03B6  3002               	movlw	2	; select bank4/5
 11633  03B7  0087               	movwf	7
 11634  03B8  3000               	movlw	0
 11635  03B9  3FC0               	movwi [0]fsr1
 11636  03BA  3FC1               	movwi [1]fsr1
 11637                           
 11638                           ;OverLoad_B1.c: 193: setLoad_AH_AL_Restore();
 11639  03BB  31A7  27B9  3180   	fcall	_setLoad_AH_AL_Restore
 11640                           
 11641                           ;OverLoad_B1.c: 196: setDimmerLights_Clear(1,1);
 11642  03BE  0020               	movlb	0	; select bank0
 11643  03BF  01A2               	clrf	setDimmerLights_Clear@command
 11644  03C0  0AA2               	incf	setDimmerLights_Clear@command,f
 11645  03C1  3001               	movlw	1
 11646  03C2  31A4  24F2  3180   	fcall	_setDimmerLights_Clear
 11647                           
 11648                           ;OverLoad_B1.c: 200: setDimmerLights_Clear(2,1);
 11649  03C5  0020               	movlb	0	; select bank0
 11650  03C6  01A2               	clrf	setDimmerLights_Clear@command
 11651  03C7  0AA2               	incf	setDimmerLights_Clear@command,f
 11652  03C8  3002               	movlw	2
 11653  03C9  31A4  24F2  3180   	fcall	_setDimmerLights_Clear
 11654                           
 11655                           ;OverLoad_B1.c: 207: Product->Data[2]=(Load->AD >> 8);
 11656  03CC  0020               	movlb	0	; select bank0
 11657  03CD  086E               	movf	_Load,w
 11658  03CE  3E2C               	addlw	44
 11659  03CF  0086               	movwf	6
 11660  03D0  3002               	movlw	2	; select bank4/5
 11661  03D1  0087               	movwf	7
 11662  03D2  3F40               	moviw [0]fsr1
 11663  03D3  00AD               	movwf	??_Load_Main
 11664  03D4  3F41               	moviw [1]fsr1
 11665  03D5  00AE               	movwf	??_Load_Main+1
 11666  03D6  082E               	movf	??_Load_Main+1,w
 11667  03D7  00AF               	movwf	??_Load_Main+2
 11668  03D8  086F               	movf	_Product,w
 11669  03D9  3E02               	addlw	2
 11670  03DA  0086               	movwf	6
 11671  03DB  3001               	movlw	1	; select bank2/3
 11672  03DC  0087               	movwf	7
 11673  03DD  082F               	movf	??_Load_Main+2,w
 11674  03DE  0081               	movwf	1
 11675                           
 11676                           ;OverLoad_B1.c: 208: Product->Data[3]=Load->AD;
 11677  03DF  086E               	movf	_Load,w
 11678  03E0  3E2C               	addlw	44
 11679  03E1  0086               	movwf	6
 11680  03E2  3002               	movlw	2	; select bank4/5
 11681  03E3  0087               	movwf	7
 11682  03E4  0801               	movf	1,w
 11683  03E5  00AD               	movwf	??_Load_Main
 11684  03E6  086F               	movf	_Product,w
 11685  03E7  3E03               	addlw	3
 11686  03E8  0086               	movwf	6
 11687  03E9  3001               	movlw	1	; select bank2/3
 11688  03EA  0087               	movwf	7
 11689  03EB  082D               	movf	??_Load_Main,w
 11690  03EC  0081               	movwf	1
 11691                           
 11692                           ;OverLoad_B1.c: 213: Product->Data[8]=Load->NumberCount;
 11693  03ED  086E               	movf	_Load,w
 11694  03EE  3E3F               	addlw	63
 11695  03EF  0086               	movwf	6
 11696  03F0  3002               	movlw	2	; select bank4/5
 11697  03F1  0087               	movwf	7
 11698  03F2  0801               	movf	1,w
 11699  03F3  00AD               	movwf	??_Load_Main
 11700  03F4  086F               	movf	_Product,w
 11701  03F5  3E08               	addlw	8
 11702  03F6  0086               	movwf	6
 11703  03F7  3001               	movlw	1	; select bank2/3
 11704  03F8  0087               	movwf	7
 11705  03F9  082D               	movf	??_Load_Main,w
 11706  03FA  0081               	movwf	1
 11707                           
 11708                           ;OverLoad_B1.c: 214: Product->Data[10]=Load->TotalLoad;
 11709  03FB  086E               	movf	_Load,w
 11710  03FC  3E06               	addlw	6
 11711  03FD  0086               	movwf	6
 11712  03FE  3002               	movlw	2	; select bank4/5
 11713  03FF  0087               	movwf	7
 11714  0400  0801               	movf	1,w
 11715  0401  00AD               	movwf	??_Load_Main
 11716  0402  086F               	movf	_Product,w
 11717  0403  3E0A               	addlw	10
 11718  0404  0086               	movwf	6
 11719  0405  3001               	movlw	1	; select bank2/3
 11720  0406  0087               	movwf	7
 11721  0407  082D               	movf	??_Load_Main,w
 11722  0408  0081               	movwf	1
 11723                           
 11724                           ;OverLoad_B1.c: 215: Product->Data[16]=(Load->JudgeValue >> 8);
 11725  0409  086E               	movf	_Load,w
 11726  040A  3E36               	addlw	54
 11727  040B  0086               	movwf	6
 11728  040C  3002               	movlw	2	; select bank4/5
 11729  040D  0087               	movwf	7
 11730  040E  3F40               	moviw [0]fsr1
 11731  040F  00AD               	movwf	??_Load_Main
 11732  0410  3F41               	moviw [1]fsr1
 11733  0411  00AE               	movwf	??_Load_Main+1
 11734  0412  082E               	movf	??_Load_Main+1,w
 11735  0413  00AF               	movwf	??_Load_Main+2
 11736  0414  086F               	movf	_Product,w
 11737  0415  3E10               	addlw	16
 11738  0416  0086               	movwf	6
 11739  0417  3001               	movlw	1	; select bank2/3
 11740  0418  0087               	movwf	7
 11741  0419  082F               	movf	??_Load_Main+2,w
 11742  041A  0081               	movwf	1
 11743                           
 11744                           ;OverLoad_B1.c: 216: Product->Data[17]=Load->JudgeValue;
 11745  041B  086E               	movf	_Load,w
 11746  041C  3E36               	addlw	54
 11747  041D  0086               	movwf	6
 11748  041E  3002               	movlw	2	; select bank4/5
 11749  041F  0087               	movwf	7
 11750  0420  0801               	movf	1,w
 11751  0421  00AD               	movwf	??_Load_Main
 11752  0422  086F               	movf	_Product,w
 11753  0423  3E11               	addlw	17
 11754  0424  0086               	movwf	6
 11755  0425  3001               	movlw	1	; select bank2/3
 11756  0426  0087               	movwf	7
 11757  0427  082D               	movf	??_Load_Main,w
 11758  0428  0081               	movwf	1
 11759                           
 11760                           ;OverLoad_B1.c: 217: Product->Data[18]=Load->ErrorStatus;
 11761  0429  086E               	movf	_Load,w
 11762  042A  3E05               	addlw	5
 11763  042B  0086               	movwf	6
 11764  042C  3002               	movlw	2	; select bank4/5
 11765  042D  0087               	movwf	7
 11766  042E  0801               	movf	1,w
 11767  042F  00AD               	movwf	??_Load_Main
 11768  0430  086F               	movf	_Product,w
 11769  0431  3E12               	addlw	18
 11770  0432  0086               	movwf	6
 11771  0433  3001               	movlw	1	; select bank2/3
 11772  0434  0087               	movwf	7
 11773  0435  082D               	movf	??_Load_Main,w
 11774  0436  0081               	movwf	1
 11775                           
 11776                           ;OverLoad_B1.c: 218: Product->Data[19]=Load->Count;
 11777  0437  086E               	movf	_Load,w
 11778  0438  3E3A               	addlw	58
 11779  0439  0086               	movwf	6
 11780  043A  3002               	movlw	2	; select bank4/5
 11781  043B  0087               	movwf	7
 11782  043C  0801               	movf	1,w
 11783  043D  00AD               	movwf	??_Load_Main
 11784  043E  086F               	movf	_Product,w
 11785  043F  3E13               	addlw	19
 11786  0440  0086               	movwf	6
 11787  0441  3001               	movlw	1	; select bank2/3
 11788  0442  0087               	movwf	7
 11789  0443  082D               	movf	??_Load_Main,w
 11790  0444  0081               	movwf	1
 11791  0445  0008               	return
 11792  0446                     __end_of_Load_Main:	
 11793                           
 11794                           	psect	text57
 11795  1CF4                     __ptext57:	
 11796 ;; *************** function _setLoad_Exceptions *****************
 11797 ;; Defined at:
 11798 ;;		line 226 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;  command         1    wreg     unsigned char 
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;  command         1   12[BANK0 ] unsigned char 
 11803 ;; Return value:  Size  Location     Type
 11804 ;;		None               void
 11805 ;; Registers used:
 11806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11807 ;; Tracked objects:
 11808 ;;		On entry : 0/0
 11809 ;;		On exit  : 0/0
 11810 ;;		Unchanged: 0/0
 11811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;Total ram usage:        2 bytes
 11817 ;; Hardware stack levels used:    1
 11818 ;; Hardware stack levels required when called:    8
 11819 ;; This function calls:
 11820 ;;		_DimmerLights_Exceptions
 11821 ;;		_setLED
 11822 ;;		_setRF_Enable
 11823 ;;		_setSw_Enable
 11824 ;; This function is called by:
 11825 ;;		_Load_Main
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           
 11830                           ;psect for function _setLoad_Exceptions
 11831  1CF4                     _setLoad_Exceptions:	
 11832                           
 11833                           ;incstack = 0
 11834                           ; Regs used in _setLoad_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11835                           ;setLoad_Exceptions@command stored from wreg
 11836  1CF4  0020               	movlb	0	; select bank0
 11837  1CF5  00AC               	movwf	setLoad_Exceptions@command
 11838                           
 11839                           ;OverLoad_B1.c: 229: Load->ERROR=command;
 11840  1CF6  086E               	movf	_Load,w
 11841  1CF7  0086               	movwf	6
 11842  1CF8  3002               	movlw	2	; select bank4/5
 11843  1CF9  0087               	movwf	7
 11844  1CFA  082C               	movf	setLoad_Exceptions@command,w
 11845  1CFB  1281               	bcf	1,5
 11846  1CFC  1D03               	skipz
 11847  1CFD  1681               	bsf	1,5
 11848                           
 11849                           ;OverLoad_B1.c: 230: Load->ErrorStatus=command;
 11850  1CFE  082C               	movf	setLoad_Exceptions@command,w
 11851  1CFF  00AB               	movwf	??_setLoad_Exceptions
 11852  1D00  086E               	movf	_Load,w
 11853  1D01  3E05               	addlw	5
 11854  1D02  0086               	movwf	6
 11855  1D03  3002               	movlw	2	; select bank4/5
 11856  1D04  0087               	movwf	7
 11857  1D05  082B               	movf	??_setLoad_Exceptions,w
 11858  1D06  0081               	movwf	1
 11859                           
 11860                           ;OverLoad_B1.c: 232: setLED(99,command+10);
 11861  1D07  082C               	movf	setLoad_Exceptions@command,w
 11862  1D08  3E0A               	addlw	10
 11863  1D09  00AB               	movwf	??_setLoad_Exceptions
 11864  1D0A  082B               	movf	??_setLoad_Exceptions,w
 11865  1D0B  00A2               	movwf	setLED@command
 11866  1D0C  3063               	movlw	99
 11867  1D0D  3190  2023  319C   	fcall	_setLED
 11868                           
 11869                           ;OverLoad_B1.c: 233: if(command)
 11870  1D10  0020               	movlb	0	; select bank0
 11871  1D11  082C               	movf	setLoad_Exceptions@command,w
 11872  1D12  1903               	btfsc	3,2
 11873  1D13  2D19               	goto	l9511
 11874                           
 11875                           ;OverLoad_B1.c: 234: {
 11876                           ;OverLoad_B1.c: 235: DimmerLights_Exceptions(2);
 11877  1D14  3002               	movlw	2
 11878  1D15  3191  21A7  319C   	fcall	_DimmerLights_Exceptions
 11879  1D18  0020               	movlb	0	; select bank0
 11880  1D19                     l9511:	
 11881                           
 11882                           ;OverLoad_B1.c: 236: }
 11883                           ;OverLoad_B1.c: 237: Load->Safe=(~command) & 0x01;
 11884  1D19  0020               	movlb	0	; select bank0
 11885  1D1A  092C               	comf	setLoad_Exceptions@command,w
 11886  1D1B  3901               	andlw	1
 11887  1D1C  00AB               	movwf	??_setLoad_Exceptions
 11888  1D1D  086E               	movf	_Load,w
 11889  1D1E  0086               	movwf	6
 11890  1D1F  3002               	movlw	2	; select bank4/5
 11891  1D20  0087               	movwf	7
 11892  1D21  0DAB               	rlf	??_setLoad_Exceptions,f
 11893  1D22  0DAB               	rlf	??_setLoad_Exceptions,f
 11894  1D23  0DAB               	rlf	??_setLoad_Exceptions,f
 11895  1D24  0801               	movf	1,w
 11896  1D25  062B               	xorwf	??_setLoad_Exceptions,w
 11897  1D26  39F7               	andlw	-9
 11898  1D27  062B               	xorwf	??_setLoad_Exceptions,w
 11899  1D28  0081               	movwf	1
 11900                           
 11901                           ;OverLoad_B1.c: 239: setSw_Enable((~command) & 0x01);
 11902  1D29  092C               	comf	setLoad_Exceptions@command,w
 11903  1D2A  3901               	andlw	1
 11904  1D2B  31A6  26DF  319C   	fcall	_setSw_Enable
 11905                           
 11906                           ;OverLoad_B1.c: 242: setRF_Enable(1,(~command) & 0x01);
 11907  1D2E  0020               	movlb	0	; select bank0
 11908  1D2F  092C               	comf	setLoad_Exceptions@command,w
 11909  1D30  3901               	andlw	1
 11910  1D31  00AB               	movwf	??_setLoad_Exceptions
 11911  1D32  082B               	movf	??_setLoad_Exceptions,w
 11912  1D33  00A4               	movwf	setRF_Enable@command
 11913  1D34  3001               	movlw	1
 11914  1D35  319B  233E         	fcall	_setRF_Enable
 11915  1D37  0008               	return
 11916  1D38                     __end_of_setLoad_Exceptions:	
 11917                           
 11918                           	psect	text58
 11919  26DF                     __ptext58:	
 11920 ;; *************** function _setSw_Enable *****************
 11921 ;; Defined at:
 11922 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;  command         1    wreg     unsigned char 
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;  command         1    2[BANK0 ] unsigned char 
 11927 ;; Return value:  Size  Location     Type
 11928 ;;		None               void
 11929 ;; Registers used:
 11930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;Total ram usage:        1 bytes
 11941 ;; Hardware stack levels used:    1
 11942 ;; Hardware stack levels required when called:    5
 11943 ;; This function calls:
 11944 ;;		_SwPointSelect
 11945 ;; This function is called by:
 11946 ;;		_MainT
 11947 ;;		_setLoad_Exceptions
 11948 ;;		_setOverTemp_Exceptions
 11949 ;;		_setPowerFault_Exceptions
 11950 ;; This function uses a non-reentrant model
 11951 ;;
 11952                           
 11953                           
 11954                           ;psect for function _setSw_Enable
 11955  26DF                     _setSw_Enable:	
 11956                           
 11957                           ;incstack = 0
 11958                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11959                           ;setSw_Enable@command stored from wreg
 11960  26DF  0020               	movlb	0	; select bank0
 11961  26E0  00A2               	movwf	setSw_Enable@command
 11962                           
 11963                           ;Switch_B1.c: 90: SwPointSelect(1);
 11964  26E1  3001               	movlw	1
 11965  26E2  31A5  2568  31A6   	fcall	_SwPointSelect
 11966                           
 11967                           ;Switch_B1.c: 91: Sw->Enable=command;
 11968  26E5  0020               	movlb	0	; select bank0
 11969  26E6  086D               	movf	_Sw,w
 11970  26E7  0086               	movwf	6
 11971  26E8  3001               	movlw	1	; select bank2/3
 11972  26E9  0087               	movwf	7
 11973  26EA  0822               	movf	setSw_Enable@command,w
 11974  26EB  1001               	bcf	1,0
 11975  26EC  1D03               	skipz
 11976  26ED  1401               	bsf	1,0
 11977                           
 11978                           ;Switch_B1.c: 95: SwPointSelect(2);
 11979  26EE  3002               	movlw	2
 11980  26EF  31A5  2568         	fcall	_SwPointSelect
 11981                           
 11982                           ;Switch_B1.c: 96: Sw->Enable=command;
 11983  26F1  0020               	movlb	0	; select bank0
 11984  26F2  086D               	movf	_Sw,w
 11985  26F3  0086               	movwf	6
 11986  26F4  3001               	movlw	1	; select bank2/3
 11987  26F5  0087               	movwf	7
 11988  26F6  0822               	movf	setSw_Enable@command,w
 11989  26F7  1001               	bcf	1,0
 11990  26F8  1D03               	skipz
 11991  26F9  1401               	bsf	1,0
 11992  26FA  0008               	return
 11993  26FB                     __end_of_setSw_Enable:	
 11994                           
 11995                           	psect	text59
 11996  1B3E                     __ptext59:	
 11997 ;; *************** function _setRF_Enable *****************
 11998 ;; Defined at:
 11999 ;;		line 172 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;  rf              1    wreg     unsigned char 
 12002 ;;  command         1    4[BANK0 ] unsigned char 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  rf              1    5[BANK0 ] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;		None               void
 12007 ;; Registers used:
 12008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12014 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;Total ram usage:        2 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    6
 12021 ;; This function calls:
 12022 ;;		_CC2500_WriteCommand
 12023 ;;		_RfPointSelect
 12024 ;;		_setINT_GO
 12025 ;; This function is called by:
 12026 ;;		_MainT
 12027 ;;		_setLoad_Exceptions
 12028 ;;		_setOverTemp_Exceptions
 12029 ;;		_setPowerFault_Exceptions
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033                           
 12034                           ;psect for function _setRF_Enable
 12035  1B3E                     _setRF_Enable:	
 12036                           
 12037                           ;incstack = 0
 12038                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12039                           ;setRF_Enable@rf stored from wreg
 12040  1B3E  0020               	movlb	0	; select bank0
 12041  1B3F  00A5               	movwf	setRF_Enable@rf
 12042                           
 12043                           ;RF_Control_B1.c: 174: RfPointSelect(rf);
 12044  1B40  0825               	movf	setRF_Enable@rf,w
 12045  1B41  31A3  23CA  319B   	fcall	_RfPointSelect
 12046                           
 12047                           ;RF_Control_B1.c: 175: RF->Enable=command;
 12048  1B44  087C               	movf	_RF,w
 12049  1B45  0086               	movwf	6
 12050  1B46  0187               	clrf	7
 12051  1B47  0020               	movlb	0	; select bank0
 12052  1B48  0824               	movf	setRF_Enable@command,w
 12053  1B49  1001               	bcf	1,0
 12054  1B4A  1D03               	skipz
 12055  1B4B  1401               	bsf	1,0
 12056                           
 12057                           ;RF_Control_B1.c: 176: if(!command)
 12058  1B4C  08A4               	movf	setRF_Enable@command,f
 12059  1B4D  1D03               	skipz
 12060  1B4E  0008               	return
 12061                           
 12062                           ;RF_Control_B1.c: 177: {
 12063                           ;RF_Control_B1.c: 178: RF->Learn=0;
 12064  1B4F  087C               	movf	_RF,w
 12065  1B50  0086               	movwf	6
 12066  1B51  0187               	clrf	7
 12067  1B52  1301               	bcf	1,6
 12068                           
 12069                           ;RF_Control_B1.c: 179: Transceive_GO=0;
 12070  1B53  1270               	bcf	_Transceive_GO/(0+8),_Transceive_GO& (0+7)
 12071                           
 12072                           ;RF_Control_B1.c: 180: CC2500_WriteCommand(0x36);
 12073  1B54  3036               	movlw	54
 12074  1B55  31A4  24C2  319B   	fcall	_CC2500_WriteCommand
 12075                           
 12076                           ;RF_Control_B1.c: 181: CC2500_WriteCommand(0x3B);
 12077  1B58  303B               	movlw	59
 12078  1B59  31A4  24C2  319B   	fcall	_CC2500_WriteCommand
 12079                           
 12080                           ;RF_Control_B1.c: 183: RF->RxStatus=0;
 12081  1B5C  087C               	movf	_RF,w
 12082  1B5D  0086               	movwf	6
 12083  1B5E  0187               	clrf	7
 12084  1B5F  1181               	bcf	1,3
 12085                           
 12086                           ;RF_Control_B1.c: 184: RF->ReceiveGO=0;
 12087  1B60  087C               	movf	_RF,w
 12088  1B61  0086               	movwf	6
 12089  1B62  0187               	clrf	7
 12090  1B63  1081               	bcf	1,1
 12091                           
 12092                           ;RF_Control_B1.c: 185: RF->DebounceTime=0;
 12093  1B64  0A7C               	incf	_RF,w
 12094  1B65  0086               	movwf	6
 12095  1B66  0187               	clrf	7
 12096  1B67  0181               	clrf	1
 12097                           
 12098                           ;RF_Control_B1.c: 186: RF->Debounce=0;
 12099  1B68  087C               	movf	_RF,w
 12100  1B69  0086               	movwf	6
 12101  1B6A  0187               	clrf	7
 12102  1B6B  1281               	bcf	1,5
 12103                           
 12104                           ;RF_Control_B1.c: 187: CC2500_WriteCommand(0x36);
 12105  1B6C  3036               	movlw	54
 12106  1B6D  31A4  24C2  319B   	fcall	_CC2500_WriteCommand
 12107                           
 12108                           ;RF_Control_B1.c: 188: CC2500_WriteCommand(0x3A);
 12109  1B70  303A               	movlw	58
 12110  1B71  31A4  24C2  319B   	fcall	_CC2500_WriteCommand
 12111                           
 12112                           ;RF_Control_B1.c: 189: setINT_GO(0);
 12113  1B74  3000               	movlw	0
 12114  1B75  31A3  23A1         	fcall	_setINT_GO
 12115  1B77  0008               	return
 12116  1B78                     __end_of_setRF_Enable:	
 12117                           
 12118                           	psect	text60
 12119  23A1                     __ptext60:	
 12120 ;; *************** function _setINT_GO *****************
 12121 ;; Defined at:
 12122 ;;		line 235 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;  command         1    wreg     unsigned char 
 12125 ;; Auto vars:     Size  Location     Type
 12126 ;;  command         1    0[BANK0 ] unsigned char 
 12127 ;; Return value:  Size  Location     Type
 12128 ;;		None               void
 12129 ;; Registers used:
 12130 ;;		wreg
 12131 ;; Tracked objects:
 12132 ;;		On entry : 0/0
 12133 ;;		On exit  : 0/0
 12134 ;;		Unchanged: 0/0
 12135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12140 ;;Total ram usage:        1 bytes
 12141 ;; Hardware stack levels used:    1
 12142 ;; Hardware stack levels required when called:    4
 12143 ;; This function calls:
 12144 ;;		Nothing
 12145 ;; This function is called by:
 12146 ;;		_setRF_Main
 12147 ;;		_setRF_Enable
 12148 ;;		_RF_RxDisable
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152                           
 12153                           ;psect for function _setINT_GO
 12154  23A1                     _setINT_GO:	
 12155                           
 12156                           ;incstack = 0
 12157                           ; Regs used in _setINT_GO: [wreg]
 12158                           ;setINT_GO@command stored from wreg
 12159  23A1  0020               	movlb	0	; select bank0
 12160  23A2  00A0               	movwf	setINT_GO@command
 12161                           
 12162                           ;MCU_16f1518_B1.c: 237: INTF=0;
 12163  23A3  108B               	bcf	11,1	;volatile
 12164                           
 12165                           ;MCU_16f1518_B1.c: 238: INTE=command;
 12166  23A4  1C20               	btfss	setINT_GO@command,0
 12167  23A5  2BA8               	goto	u8450
 12168  23A6  160B               	bsf	11,4	;volatile
 12169  23A7  0008               	return
 12170  23A8                     u8450:	
 12171  23A8  120B               	bcf	11,4	;volatile
 12172  23A9  0008               	return
 12173  23AA                     __end_of_setINT_GO:	
 12174                           
 12175                           	psect	text61
 12176  11A7                     __ptext61:	
 12177 ;; *************** function _DimmerLights_Exceptions *****************
 12178 ;; Defined at:
 12179 ;;		line 266 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;  status          1    wreg     unsigned char 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  status          1   10[BANK0 ] unsigned char 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;		None               void
 12186 ;; Registers used:
 12187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;Total ram usage:        1 bytes
 12198 ;; Hardware stack levels used:    1
 12199 ;; Hardware stack levels required when called:    7
 12200 ;; This function calls:
 12201 ;;		_getDimmerLights_StatusFlag
 12202 ;;		_setBuz
 12203 ;;		_setDimmerLights_ERROR
 12204 ;;		_setDimmerLights_TriggerERROR
 12205 ;; This function is called by:
 12206 ;;		_setLoad_Exceptions
 12207 ;;		_setOverTemp_Exceptions
 12208 ;;		_setPowerFault_Exceptions
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           
 12213                           ;psect for function _DimmerLights_Exceptions
 12214  11A7                     _DimmerLights_Exceptions:	
 12215                           
 12216                           ;incstack = 0
 12217                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12218                           ;DimmerLights_Exceptions@status stored from wreg
 12219  11A7  0020               	movlb	0	; select bank0
 12220  11A8  00AA               	movwf	DimmerLights_Exceptions@status
 12221                           
 12222                           ;Dimmer_B1.c: 268: if(status == 1)
 12223  11A9  082A               	movf	DimmerLights_Exceptions@status,w
 12224  11AA  3A01               	xorlw	1
 12225  11AB  1D03               	skipz
 12226  11AC  29BD               	goto	l8913
 12227                           
 12228                           ;Dimmer_B1.c: 269: {
 12229                           ;Dimmer_B1.c: 270: if(getDimmerLights_StatusFlag())
 12230  11AD  31A5  2543  3191   	fcall	_getDimmerLights_StatusFlag
 12231  11B0  3A00               	xorlw	0
 12232  11B1  1903               	skipnz
 12233  11B2  29D5               	goto	l8919
 12234                           
 12235                           ;Dimmer_B1.c: 271: {
 12236                           ;Dimmer_B1.c: 272: setBuz(10,300);
 12237  11B3  302C               	movlw	44
 12238  11B4  0020               	movlb	0	; select bank0
 12239  11B5  00A6               	movwf	setBuz@time
 12240  11B6  3001               	movlw	1
 12241  11B7  00A7               	movwf	setBuz@time+1
 12242  11B8  300A               	movlw	10
 12243  11B9  3193  235E  3191   	fcall	_setBuz
 12244  11BC  29D5               	goto	l8919
 12245  11BD                     l8913:	
 12246                           ;Dimmer_B1.c: 284: }
 12247                           
 12248                           ;Dimmer_B1.c: 279: setDimmerLights_ERROR(2);
 12249                           
 12250                           ;Dimmer_B1.c: 273: }
 12251                           ;Dimmer_B1.c: 276: setDimmerLights_ERROR(1);
 12252                           
 12253                           
 12254                           ;Dimmer_B1.c: 285: else if(status == 2)
 12255  11BD  0020               	movlb	0	; select bank0
 12256  11BE  082A               	movf	DimmerLights_Exceptions@status,w
 12257  11BF  3A02               	xorlw	2
 12258  11C0  1D03               	skipz
 12259  11C1  29D0               	goto	l8917
 12260                           
 12261                           ;Dimmer_B1.c: 286: {
 12262                           ;Dimmer_B1.c: 287: setBuz(5,300);
 12263  11C2  302C               	movlw	44
 12264  11C3  00A6               	movwf	setBuz@time
 12265  11C4  3001               	movlw	1
 12266  11C5  00A7               	movwf	setBuz@time+1
 12267  11C6  3005               	movlw	5
 12268  11C7  3193  235E  3191   	fcall	_setBuz
 12269                           
 12270                           ;Dimmer_B1.c: 288: setDimmerLights_ERROR(Dimmer->Load);
 12271  11CA  0021               	movlb	1	; select bank1
 12272  11CB  0A39               	incf	_Dimmer^(0+128),w
 12273  11CC  0086               	movwf	6
 12274  11CD  0187               	clrf	7
 12275  11CE  0801               	movf	1,w
 12276  11CF  29DA               	goto	L9
 12277  11D0                     l8917:	
 12278                           ;Dimmer_B1.c: 289: }
 12279                           
 12280                           
 12281                           ;Dimmer_B1.c: 290: else if(status == 3)
 12282  11D0  0020               	movlb	0	; select bank0
 12283  11D1  082A               	movf	DimmerLights_Exceptions@status,w
 12284  11D2  3A03               	xorlw	3
 12285  11D3  1D03               	skipz
 12286  11D4  29DD               	goto	l925
 12287  11D5                     l8919:	
 12288                           
 12289                           ;Dimmer_B1.c: 291: {
 12290                           ;Dimmer_B1.c: 293: setDimmerLights_ERROR(1);
 12291  11D5  3001               	movlw	1
 12292  11D6  319E  26F3  3191   	fcall	_setDimmerLights_ERROR
 12293                           
 12294                           ;Dimmer_B1.c: 296: setDimmerLights_ERROR(2);
 12295  11D9  3002               	movlw	2
 12296  11DA                     L9:	
 12297  11DA  319E  26F3  3191   	fcall	_setDimmerLights_ERROR
 12298  11DD                     l925:	
 12299                           
 12300                           ;Dimmer_B1.c: 301: }
 12301                           ;Dimmer_B1.c: 304: setDimmerLights_TriggerERROR(1,0);
 12302  11DD  0020               	movlb	0	; select bank0
 12303  11DE  01A2               	clrf	setDimmerLights_TriggerERROR@command
 12304  11DF  3001               	movlw	1
 12305  11E0  3198  20F1  3191   	fcall	_setDimmerLights_TriggerERROR
 12306                           
 12307                           ;Dimmer_B1.c: 307: setDimmerLights_TriggerERROR(2,0);
 12308  11E3  0020               	movlb	0	; select bank0
 12309  11E4  01A2               	clrf	setDimmerLights_TriggerERROR@command
 12310  11E5  3002               	movlw	2
 12311  11E6  3198  20F1  3191   	fcall	_setDimmerLights_TriggerERROR
 12312                           
 12313                           ;Dimmer_B1.c: 313: if(TMain->SelfTest == 0)
 12314  11E9  0021               	movlb	1	; select bank1
 12315  11EA  0869               	movf	_TMain^(0+128),w
 12316  11EB  3E03               	addlw	3
 12317  11EC  0086               	movwf	6
 12318  11ED  3001               	movlw	1	; select bank2/3
 12319  11EE  0087               	movwf	7
 12320  11EF  1801               	btfsc	1,0
 12321  11F0  0008               	return
 12322                           
 12323                           ;Dimmer_B1.c: 314: {
 12324                           ;Dimmer_B1.c: 315: TMain->i=0;
 12325  11F1  0869               	movf	_TMain^(0+128),w
 12326  11F2  3E0E               	addlw	14
 12327  11F3  0086               	movwf	6
 12328  11F4  3001               	movlw	1	; select bank2/3
 12329  11F5  0087               	movwf	7
 12330  11F6  1001               	bcf	1,0
 12331                           
 12332                           ;Dimmer_B1.c: 316: TMain->j=0;
 12333  11F7  0869               	movf	_TMain^(0+128),w
 12334  11F8  3E0E               	addlw	14
 12335  11F9  0086               	movwf	6
 12336  11FA  3001               	movlw	1	; select bank2/3
 12337  11FB  0087               	movwf	7
 12338  11FC  1081               	bcf	1,1
 12339                           
 12340                           ;Dimmer_B1.c: 317: TMain->k=1;
 12341  11FD  0869               	movf	_TMain^(0+128),w
 12342  11FE  3E0E               	addlw	14
 12343  11FF  0086               	movwf	6
 12344  1200  3001               	movlw	1	; select bank2/3
 12345  1201  0087               	movwf	7
 12346  1202  1501               	bsf	1,2
 12347                           
 12348                           ;Dimmer_B1.c: 318: TMain->Count2=0;
 12349  1203  0869               	movf	_TMain^(0+128),w
 12350  1204  3E08               	addlw	8
 12351  1205  0086               	movwf	6
 12352  1206  3001               	movlw	1	; select bank2/3
 12353  1207  0087               	movwf	7
 12354  1208  3000               	movlw	0
 12355  1209  3FC0               	movwi [0]fsr1
 12356  120A  3FC1               	movwi [1]fsr1
 12357  120B  0008               	return
 12358  120C                     __end_of_DimmerLights_Exceptions:	
 12359                           
 12360                           	psect	text62
 12361  18F1                     __ptext62:	
 12362 ;; *************** function _setDimmerLights_TriggerERROR *****************
 12363 ;; Defined at:
 12364 ;;		line 340 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12365 ;; Parameters:    Size  Location     Type
 12366 ;;  lights          1    wreg     unsigned char 
 12367 ;;  command         1    2[BANK0 ] unsigned char 
 12368 ;; Auto vars:     Size  Location     Type
 12369 ;;  lights          1    3[BANK0 ] unsigned char 
 12370 ;; Return value:  Size  Location     Type
 12371 ;;		None               void
 12372 ;; Registers used:
 12373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12374 ;; Tracked objects:
 12375 ;;		On entry : 0/0
 12376 ;;		On exit  : 0/0
 12377 ;;		Unchanged: 0/0
 12378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12379 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;Total ram usage:        2 bytes
 12384 ;; Hardware stack levels used:    1
 12385 ;; Hardware stack levels required when called:    5
 12386 ;; This function calls:
 12387 ;;		_DimmerLightsPointSelect
 12388 ;; This function is called by:
 12389 ;;		_DimmerLights_Exceptions
 12390 ;; This function uses a non-reentrant model
 12391 ;;
 12392                           
 12393                           
 12394                           ;psect for function _setDimmerLights_TriggerERROR
 12395  18F1                     _setDimmerLights_TriggerERROR:	
 12396                           
 12397                           ;incstack = 0
 12398                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 12399                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 12400  18F1  0020               	movlb	0	; select bank0
 12401  18F2  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 12402                           
 12403                           ;Dimmer_B1.c: 342: DimmerLightsPointSelect(lights);
 12404  18F3  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 12405  18F4  31A5  2555         	fcall	_DimmerLightsPointSelect
 12406                           
 12407                           ;Dimmer_B1.c: 343: DimmerLights->Trigger=command;
 12408  18F6  0020               	movlb	0	; select bank0
 12409  18F7  086C               	movf	_DimmerLights,w
 12410  18F8  3E09               	addlw	9
 12411  18F9  0086               	movwf	6
 12412  18FA  3001               	movlw	1	; select bank2/3
 12413  18FB  0087               	movwf	7
 12414  18FC  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12415  18FD  1081               	bcf	1,1
 12416  18FE  1D03               	skipz
 12417  18FF  1481               	bsf	1,1
 12418                           
 12419                           ;Dimmer_B1.c: 344: DimmerLights->Switch=command;
 12420  1900  086C               	movf	_DimmerLights,w
 12421  1901  3E09               	addlw	9
 12422  1902  0086               	movwf	6
 12423  1903  3001               	movlw	1	; select bank2/3
 12424  1904  0087               	movwf	7
 12425  1905  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12426  1906  1001               	bcf	1,0
 12427  1907  1D03               	skipz
 12428  1908  1401               	bsf	1,0
 12429                           
 12430                           ;Dimmer_B1.c: 345: DimmerLights->TriggerAdj=command;
 12431  1909  086C               	movf	_DimmerLights,w
 12432  190A  3E09               	addlw	9
 12433  190B  0086               	movwf	6
 12434  190C  3001               	movlw	1	; select bank2/3
 12435  190D  0087               	movwf	7
 12436  190E  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12437  190F  1181               	bcf	1,3
 12438  1910  1D03               	skipz
 12439  1911  1581               	bsf	1,3
 12440                           
 12441                           ;Dimmer_B1.c: 346: DimmerLights->AdjGo=command;
 12442  1912  086C               	movf	_DimmerLights,w
 12443  1913  3E09               	addlw	9
 12444  1914  0086               	movwf	6
 12445  1915  3001               	movlw	1	; select bank2/3
 12446  1916  0087               	movwf	7
 12447  1917  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12448  1918  1101               	bcf	1,2
 12449  1919  1D03               	skipz
 12450  191A  1501               	bsf	1,2
 12451  191B  0008               	return
 12452  191C                     __end_of_setDimmerLights_TriggerERROR:	
 12453                           
 12454                           	psect	text63
 12455  1EF3                     __ptext63:	
 12456 ;; *************** function _setDimmerLights_ERROR *****************
 12457 ;; Defined at:
 12458 ;;		line 322 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;  lights          1    wreg     unsigned char 
 12461 ;; Auto vars:     Size  Location     Type
 12462 ;;  lights          1    5[BANK0 ] unsigned char 
 12463 ;; Return value:  Size  Location     Type
 12464 ;;		None               void
 12465 ;; Registers used:
 12466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12467 ;; Tracked objects:
 12468 ;;		On entry : 0/0
 12469 ;;		On exit  : 0/0
 12470 ;;		Unchanged: 0/0
 12471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12475 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;Total ram usage:        2 bytes
 12477 ;; Hardware stack levels used:    1
 12478 ;; Hardware stack levels required when called:    6
 12479 ;; This function calls:
 12480 ;;		_DimmerLightsPointSelect
 12481 ;;		_setLED
 12482 ;;		_setLoad_StatusOff
 12483 ;;		_setRFSW_Status
 12484 ;;		_setSw_Status
 12485 ;; This function is called by:
 12486 ;;		_DimmerLights_Exceptions
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           
 12491                           ;psect for function _setDimmerLights_ERROR
 12492  1EF3                     _setDimmerLights_ERROR:	
 12493                           
 12494                           ;incstack = 0
 12495                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12496                           ;setDimmerLights_ERROR@lights stored from wreg
 12497  1EF3  0020               	movlb	0	; select bank0
 12498  1EF4  00A5               	movwf	setDimmerLights_ERROR@lights
 12499                           
 12500                           ;Dimmer_B1.c: 324: DimmerLightsPointSelect(lights);
 12501  1EF5  0825               	movf	setDimmerLights_ERROR@lights,w
 12502  1EF6  31A5  2555  319E   	fcall	_DimmerLightsPointSelect
 12503                           
 12504                           ;Dimmer_B1.c: 325: if(DimmerLights->Status)
 12505  1EF9  0020               	movlb	0	; select bank0
 12506  1EFA  086C               	movf	_DimmerLights,w
 12507  1EFB  0086               	movwf	6
 12508  1EFC  3001               	movlw	1	; select bank2/3
 12509  1EFD  0087               	movwf	7
 12510  1EFE  1E81               	btfss	1,5
 12511  1EFF  0008               	return
 12512                           
 12513                           ;Dimmer_B1.c: 326: {
 12514                           ;Dimmer_B1.c: 327: DimmerLights->Signal=0;
 12515  1F00  086C               	movf	_DimmerLights,w
 12516  1F01  0086               	movwf	6
 12517  1F02  3001               	movlw	1	; select bank2/3
 12518  1F03  0087               	movwf	7
 12519  1F04  1081               	bcf	1,1
 12520                           
 12521                           ;Dimmer_B1.c: 328: DimmerLights->AdjFlag=0;
 12522  1F05  086C               	movf	_DimmerLights,w
 12523  1F06  0086               	movwf	6
 12524  1F07  3001               	movlw	1	; select bank2/3
 12525  1F08  0087               	movwf	7
 12526  1F09  1181               	bcf	1,3
 12527                           
 12528                           ;Dimmer_B1.c: 329: DimmerLights->AdjStatus=0;
 12529  1F0A  086C               	movf	_DimmerLights,w
 12530  1F0B  0086               	movwf	6
 12531  1F0C  3001               	movlw	1	; select bank2/3
 12532  1F0D  0087               	movwf	7
 12533  1F0E  1201               	bcf	1,4
 12534                           
 12535                           ;Dimmer_B1.c: 330: DimmerLights->StatusFlag=0;
 12536  1F0F  086C               	movf	_DimmerLights,w
 12537  1F10  0086               	movwf	6
 12538  1F11  3001               	movlw	1	; select bank2/3
 12539  1F12  0087               	movwf	7
 12540  1F13  1301               	bcf	1,6
 12541                           
 12542                           ;Dimmer_B1.c: 331: DimmerLights->DimmingTimeValue=3;
 12543  1F14  3003               	movlw	3
 12544  1F15  00A4               	movwf	??_setDimmerLights_ERROR
 12545  1F16  086C               	movf	_DimmerLights,w
 12546  1F17  3E02               	addlw	2
 12547  1F18  0086               	movwf	6
 12548  1F19  3001               	movlw	1	; select bank2/3
 12549  1F1A  0087               	movwf	7
 12550  1F1B  0824               	movf	??_setDimmerLights_ERROR,w
 12551  1F1C  0081               	movwf	1
 12552                           
 12553                           ;Dimmer_B1.c: 332: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 12554  1F1D  086C               	movf	_DimmerLights,w
 12555  1F1E  3E06               	addlw	6
 12556  1F1F  0086               	movwf	6
 12557  1F20  3001               	movlw	1	; select bank2/3
 12558  1F21  0087               	movwf	7
 12559  1F22  0801               	movf	1,w
 12560  1F23  00A4               	movwf	??_setDimmerLights_ERROR
 12561  1F24  086C               	movf	_DimmerLights,w
 12562  1F25  3E04               	addlw	4
 12563  1F26  0086               	movwf	6
 12564  1F27  3001               	movlw	1	; select bank2/3
 12565  1F28  0087               	movwf	7
 12566  1F29  0824               	movf	??_setDimmerLights_ERROR,w
 12567  1F2A  0081               	movwf	1
 12568                           
 12569                           ;Dimmer_B1.c: 333: Dimmer->Detect=1;
 12570  1F2B  0021               	movlb	1	; select bank1
 12571  1F2C  0839               	movf	_Dimmer^(0+128),w
 12572  1F2D  0086               	movwf	6
 12573  1F2E  0187               	clrf	7
 12574  1F2F  1401               	bsf	1,0
 12575                           
 12576                           ;Dimmer_B1.c: 334: setLoad_StatusOff(lights,1);
 12577  1F30  0020               	movlb	0	; select bank0
 12578  1F31  01A0               	clrf	setLoad_StatusOff@command
 12579  1F32  0AA0               	incf	setLoad_StatusOff@command,f
 12580  1F33  0825               	movf	setDimmerLights_ERROR@lights,w
 12581  1F34  319A  2205  319E   	fcall	_setLoad_StatusOff
 12582                           
 12583                           ;Dimmer_B1.c: 335: setLED(lights,1);
 12584  1F37  0020               	movlb	0	; select bank0
 12585  1F38  01A2               	clrf	setLED@command
 12586  1F39  0AA2               	incf	setLED@command,f
 12587  1F3A  0825               	movf	setDimmerLights_ERROR@lights,w
 12588  1F3B  3190  2023  319E   	fcall	_setLED
 12589                           
 12590                           ;Dimmer_B1.c: 336: setSw_Status(lights,0);
 12591  1F3E  0020               	movlb	0	; select bank0
 12592  1F3F  01A2               	clrf	setSw_Status@command
 12593  1F40  0825               	movf	setDimmerLights_ERROR@lights,w
 12594  1F41  31A4  24B3  319E   	fcall	_setSw_Status
 12595                           
 12596                           ;Dimmer_B1.c: 337: setRFSW_Status(lights,0);
 12597  1F44  0020               	movlb	0	; select bank0
 12598  1F45  01A2               	clrf	setRFSW_Status@command
 12599  1F46  0825               	movf	setDimmerLights_ERROR@lights,w
 12600  1F47  31A4  24A4         	fcall	_setRFSW_Status
 12601  1F49  0008               	return
 12602  1F4A                     __end_of_setDimmerLights_ERROR:	
 12603                           
 12604                           	psect	text64
 12605  24F2                     __ptext64:	
 12606 ;; *************** function _setDimmerLights_Clear *****************
 12607 ;; Defined at:
 12608 ;;		line 466 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;  lights          1    wreg     unsigned char 
 12611 ;;  command         1    2[BANK0 ] unsigned char 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  lights          1    3[BANK0 ] unsigned char 
 12614 ;; Return value:  Size  Location     Type
 12615 ;;		None               void
 12616 ;; Registers used:
 12617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12623 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12627 ;;Total ram usage:        2 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:    5
 12630 ;; This function calls:
 12631 ;;		_DimmerLightsPointSelect
 12632 ;; This function is called by:
 12633 ;;		_Load_Main
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           
 12638                           ;psect for function _setDimmerLights_Clear
 12639  24F2                     _setDimmerLights_Clear:	
 12640                           
 12641                           ;incstack = 0
 12642                           ; Regs used in _setDimmerLights_Clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12643                           ;setDimmerLights_Clear@lights stored from wreg
 12644  24F2  0020               	movlb	0	; select bank0
 12645  24F3  00A3               	movwf	setDimmerLights_Clear@lights
 12646                           
 12647                           ;Dimmer_B1.c: 468: DimmerLightsPointSelect(lights);
 12648  24F4  0823               	movf	setDimmerLights_Clear@lights,w
 12649  24F5  31A5  2555         	fcall	_DimmerLightsPointSelect
 12650                           
 12651                           ;Dimmer_B1.c: 469: DimmerLights->Clear=command;
 12652  24F7  0020               	movlb	0	; select bank0
 12653  24F8  086C               	movf	_DimmerLights,w
 12654  24F9  3E0C               	addlw	12
 12655  24FA  0086               	movwf	6
 12656  24FB  3001               	movlw	1	; select bank2/3
 12657  24FC  0087               	movwf	7
 12658  24FD  0822               	movf	setDimmerLights_Clear@command,w
 12659  24FE  1001               	bcf	1,0
 12660  24FF  1D03               	skipz
 12661  2500  1401               	bsf	1,0
 12662  2501  0008               	return
 12663  2502                     __end_of_setDimmerLights_Clear:	
 12664                           
 12665                           	psect	text65
 12666  235B                     __ptext65:	
 12667 ;; *************** function _getTemp_Safe *****************
 12668 ;; Defined at:
 12669 ;;		line 26 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;		None
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;		None
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  1    wreg      unsigned char 
 12676 ;; Registers used:
 12677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12678 ;; Tracked objects:
 12679 ;;		On entry : 0/0
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12687 ;;Total ram usage:        0 bytes
 12688 ;; Hardware stack levels used:    1
 12689 ;; Hardware stack levels required when called:    4
 12690 ;; This function calls:
 12691 ;;		Nothing
 12692 ;; This function is called by:
 12693 ;;		_Load_Main
 12694 ;;		_setPowerFault_Main
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           
 12699                           ;psect for function _getTemp_Safe
 12700  235B                     _getTemp_Safe:	
 12701                           
 12702                           ;OverTemperature_B1.c: 28: return Temp->Safe;
 12703                           
 12704                           ;incstack = 0
 12705                           ; Regs used in _getTemp_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 12706  235B  087D               	movf	_Temp,w
 12707  235C  0086               	movwf	6
 12708  235D  3001               	movlw	1	; select bank2/3
 12709  235E  0087               	movwf	7
 12710  235F  0E01               	swapf	1,w
 12711  2360  3901               	andlw	1
 12712  2361  0008               	return
 12713  2362                     __end_of_getTemp_Safe:	
 12714                           
 12715                           	psect	text66
 12716  2380                     __ptext66:	
 12717 ;; *************** function _getPF_Safe *****************
 12718 ;; Defined at:
 12719 ;;		line 40 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;		None
 12722 ;; Auto vars:     Size  Location     Type
 12723 ;;		None
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  1    wreg      unsigned char 
 12726 ;; Registers used:
 12727 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12728 ;; Tracked objects:
 12729 ;;		On entry : 0/0
 12730 ;;		On exit  : 0/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;Total ram usage:        0 bytes
 12738 ;; Hardware stack levels used:    1
 12739 ;; Hardware stack levels required when called:    4
 12740 ;; This function calls:
 12741 ;;		Nothing
 12742 ;; This function is called by:
 12743 ;;		_Load_Main
 12744 ;;		_setTemp_Main
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748                           
 12749                           ;psect for function _getPF_Safe
 12750  2380                     _getPF_Safe:	
 12751                           
 12752                           ;PowerFault_B1.c: 42: return PF->Safe;
 12753                           
 12754                           ;incstack = 0
 12755                           ; Regs used in _getPF_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 12756  2380  087B               	movf	_PF,w
 12757  2381  0086               	movwf	6
 12758  2382  3001               	movlw	1	; select bank2/3
 12759  2383  0087               	movwf	7
 12760  2384  0C01               	rrf	1,w
 12761  2385  0C89               	rrf	9,f
 12762  2386  3901               	andlw	1
 12763  2387  0008               	return
 12764  2388                     __end_of_getPF_Safe:	
 12765                           
 12766                           	psect	text67
 12767  1ACE                     __ptext67:	
 12768 ;; *************** function ___lwdiv *****************
 12769 ;; Defined at:
 12770 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
 12771 ;; Parameters:    Size  Location     Type
 12772 ;;  divisor         2    0[BANK0 ] unsigned int 
 12773 ;;  dividend        2    2[BANK0 ] unsigned int 
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;  quotient        2    5[BANK0 ] unsigned int 
 12776 ;;  counter         1    7[BANK0 ] unsigned char 
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  2    0[BANK0 ] unsigned int 
 12779 ;; Registers used:
 12780 ;;		wreg, status,2, status,0
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/0
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12787 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12788 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12789 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12790 ;;Total ram usage:        8 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; Hardware stack levels required when called:    4
 12793 ;; This function calls:
 12794 ;;		Nothing
 12795 ;; This function is called by:
 12796 ;;		_Load_Main
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           
 12801                           ;psect for function ___lwdiv
 12802  1ACE                     ___lwdiv:	
 12803                           
 12804                           ;incstack = 0
 12805                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12806  1ACE  0020               	movlb	0	; select bank0
 12807  1ACF  01A5               	clrf	___lwdiv@quotient
 12808  1AD0  01A6               	clrf	___lwdiv@quotient+1
 12809  1AD1  0821               	movf	___lwdiv@divisor+1,w
 12810  1AD2  0420               	iorwf	___lwdiv@divisor,w
 12811  1AD3  1903               	skipnz
 12812  1AD4  2AFE               	goto	l7933
 12813  1AD5  01A7               	clrf	___lwdiv@counter
 12814  1AD6  0AA7               	incf	___lwdiv@counter,f
 12815  1AD7                     l7921:	
 12816  1AD7  1BA1               	btfsc	___lwdiv@divisor+1,7
 12817  1AD8  2AE3               	goto	l7923
 12818  1AD9  3001               	movlw	1
 12819  1ADA                     u6935:	
 12820  1ADA  35A0               	lslf	___lwdiv@divisor,f
 12821  1ADB  0DA1               	rlf	___lwdiv@divisor+1,f
 12822  1ADC  0B89               	decfsz	9,f
 12823  1ADD  2ADA               	goto	u6935
 12824  1ADE  3001               	movlw	1
 12825  1ADF  00A4               	movwf	??___lwdiv
 12826  1AE0  0824               	movf	??___lwdiv,w
 12827  1AE1  07A7               	addwf	___lwdiv@counter,f
 12828  1AE2  2AD7               	goto	l7921
 12829  1AE3                     l7923:	
 12830  1AE3  3001               	movlw	1
 12831  1AE4                     u6955:	
 12832  1AE4  35A5               	lslf	___lwdiv@quotient,f
 12833  1AE5  0DA6               	rlf	___lwdiv@quotient+1,f
 12834  1AE6  0B89               	decfsz	9,f
 12835  1AE7  2AE4               	goto	u6955
 12836  1AE8  0821               	movf	___lwdiv@divisor+1,w
 12837  1AE9  0223               	subwf	___lwdiv@dividend+1,w
 12838  1AEA  1D03               	skipz
 12839  1AEB  2AEE               	goto	u6965
 12840  1AEC  0820               	movf	___lwdiv@divisor,w
 12841  1AED  0222               	subwf	___lwdiv@dividend,w
 12842  1AEE                     u6965:	
 12843  1AEE  1C03               	skipc
 12844  1AEF  2AF5               	goto	l7929
 12845  1AF0  0820               	movf	___lwdiv@divisor,w
 12846  1AF1  02A2               	subwf	___lwdiv@dividend,f
 12847  1AF2  0821               	movf	___lwdiv@divisor+1,w
 12848  1AF3  3BA3               	subwfb	___lwdiv@dividend+1,f
 12849  1AF4  1425               	bsf	___lwdiv@quotient,0
 12850  1AF5                     l7929:	
 12851  1AF5  3001               	movlw	1
 12852  1AF6                     u6975:	
 12853  1AF6  36A1               	lsrf	___lwdiv@divisor+1,f
 12854  1AF7  0CA0               	rrf	___lwdiv@divisor,f
 12855  1AF8  0B89               	decfsz	9,f
 12856  1AF9  2AF6               	goto	u6975
 12857  1AFA  3001               	movlw	1
 12858  1AFB  02A7               	subwf	___lwdiv@counter,f
 12859  1AFC  1D03               	btfss	3,2
 12860  1AFD  2AE3               	goto	l7923
 12861  1AFE                     l7933:	
 12862  1AFE  0826               	movf	___lwdiv@quotient+1,w
 12863  1AFF  01A1               	clrf	?___lwdiv+1
 12864  1B00  07A1               	addwf	?___lwdiv+1,f
 12865  1B01  0825               	movf	___lwdiv@quotient,w
 12866  1B02  01A0               	clrf	?___lwdiv
 12867  1B03  07A0               	addwf	?___lwdiv,f
 12868  1B04  0008               	return
 12869  1B05                     __end_of___lwdiv:	
 12870                           
 12871                           	psect	text68
 12872  2454                     __ptext68:	
 12873 ;; *************** function _Load_Initialization *****************
 12874 ;; Defined at:
 12875 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 12876 ;; Parameters:    Size  Location     Type
 12877 ;;		None
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;		None
 12880 ;; Return value:  Size  Location     Type
 12881 ;;		None               void
 12882 ;; Registers used:
 12883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12884 ;; Tracked objects:
 12885 ;;		On entry : 0/0
 12886 ;;		On exit  : 0/0
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;Total ram usage:        1 bytes
 12894 ;; Hardware stack levels used:    1
 12895 ;; Hardware stack levels required when called:    5
 12896 ;; This function calls:
 12897 ;;		_setLoad_AH_AL_Restore
 12898 ;; This function is called by:
 12899 ;;		_main
 12900 ;; This function uses a non-reentrant model
 12901 ;;
 12902                           
 12903                           
 12904                           ;psect for function _Load_Initialization
 12905  2454                     _Load_Initialization:	
 12906                           
 12907                           ;OverLoad_B1.c: 10: Load=&Load1;
 12908                           
 12909                           ;incstack = 0
 12910                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12911  2454  30A0               	movlw	_Load1& (0+255)
 12912  2455  0020               	movlb	0	; select bank0
 12913  2456  00A2               	movwf	??_Load_Initialization
 12914  2457  0822               	movf	??_Load_Initialization,w
 12915  2458  00EE               	movwf	_Load
 12916                           
 12917                           ;OverLoad_B1.c: 11: Load->Safe=1;
 12918  2459  086E               	movf	_Load,w
 12919  245A  0086               	movwf	6
 12920  245B  3002               	movlw	2	; select bank4/5
 12921  245C  0087               	movwf	7
 12922  245D  1581               	bsf	1,3
 12923                           
 12924                           ;OverLoad_B1.c: 12: setLoad_AH_AL_Restore();
 12925  245E  31A7  27B9         	fcall	_setLoad_AH_AL_Restore
 12926  2460  0008               	return
 12927  2461                     __end_of_Load_Initialization:	
 12928                           
 12929                           	psect	text69
 12930  27B9                     __ptext69:	
 12931 ;; *************** function _setLoad_AH_AL_Restore *****************
 12932 ;; Defined at:
 12933 ;;		line 305 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;  i               1    1[BANK0 ] unsigned char 
 12938 ;; Return value:  Size  Location     Type
 12939 ;;		None               void
 12940 ;; Registers used:
 12941 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12950 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;Total ram usage:        2 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    4
 12954 ;; This function calls:
 12955 ;;		Nothing
 12956 ;; This function is called by:
 12957 ;;		_Load_Initialization
 12958 ;;		_Load_Main
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962                           
 12963                           ;psect for function _setLoad_AH_AL_Restore
 12964  27B9                     _setLoad_AH_AL_Restore:	
 12965                           
 12966                           ;OverLoad_B1.c: 307: char i;
 12967                           ;OverLoad_B1.c: 308: for(i=0 ; i<5 ;i++)
 12968                           
 12969                           ;incstack = 0
 12970                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
 12971  27B9  0020               	movlb	0	; select bank0
 12972  27BA  01A1               	clrf	setLoad_AH_AL_Restore@i
 12973  27BB                     L10:	
 12974  27BB  3005               	movlw	5
 12975  27BC  0221               	subwf	setLoad_AH_AL_Restore@i,w
 12976  27BD  1803               	btfsc	3,0
 12977  27BE  0008               	return
 12978                           
 12979                           ;OverLoad_B1.c: 309: {
 12980                           ;OverLoad_B1.c: 310: Load->AH[i]=0;
 12981  27BF  3521               	lslf	setLoad_AH_AL_Restore@i,w
 12982  27C0  3E08               	addlw	8
 12983  27C1  076E               	addwf	_Load,w
 12984  27C2  00A0               	movwf	??_setLoad_AH_AL_Restore
 12985  27C3  0820               	movf	??_setLoad_AH_AL_Restore,w
 12986  27C4  0086               	movwf	6
 12987  27C5  3002               	movlw	2	; select bank4/5
 12988  27C6  0087               	movwf	7
 12989  27C7  3000               	movlw	0
 12990  27C8  3FC0               	movwi [0]fsr1
 12991  27C9  3FC1               	movwi [1]fsr1
 12992                           
 12993                           ;OverLoad_B1.c: 311: Load->AL[i]=0xffff;
 12994  27CA  3521               	lslf	setLoad_AH_AL_Restore@i,w
 12995  27CB  3E1A               	addlw	26
 12996  27CC  076E               	addwf	_Load,w
 12997  27CD  00A0               	movwf	??_setLoad_AH_AL_Restore
 12998  27CE  0820               	movf	??_setLoad_AH_AL_Restore,w
 12999  27CF  0086               	movwf	6
 13000  27D0  3002               	movlw	2	; select bank4/5
 13001  27D1  0087               	movwf	7
 13002  27D2  30FF               	movlw	255
 13003  27D3  3FC0               	movwi [0]fsr1
 13004  27D4  30FF               	movlw	255
 13005  27D5  3FC1               	movwi [1]fsr1
 13006  27D6  3001               	movlw	1
 13007  27D7  00A0               	movwf	??_setLoad_AH_AL_Restore
 13008  27D8  0820               	movf	??_setLoad_AH_AL_Restore,w
 13009  27D9  07A1               	addwf	setLoad_AH_AL_Restore@i,f
 13010  27DA  2FBB               	goto	L10
 13011  27DB                     __end_of_setLoad_AH_AL_Restore:	
 13012                           
 13013                           	psect	text70
 13014  2448                     __ptext70:	
 13015 ;; *************** function _LED_Main *****************
 13016 ;; Defined at:
 13017 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;		None
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;		None               void
 13024 ;; Registers used:
 13025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;Total ram usage:        0 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; Hardware stack levels required when called:    6
 13038 ;; This function calls:
 13039 ;;		_setLED_Main
 13040 ;; This function is called by:
 13041 ;;		_main
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045                           
 13046                           ;psect for function _LED_Main
 13047  2448                     _LED_Main:	
 13048                           
 13049                           ;LED_B1.c: 54: setLED_Main(1);
 13050                           
 13051                           ;incstack = 0
 13052                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13053  2448  3001               	movlw	1
 13054  2449  319B  23F1  31A4   	fcall	_setLED_Main
 13055                           
 13056                           ;LED_B1.c: 57: setLED_Main(2);
 13057  244C  3002               	movlw	2
 13058  244D  319B  23F1  31A4   	fcall	_setLED_Main
 13059                           
 13060                           ;LED_B1.c: 63: setLED_Main(99);
 13061  2450  3063               	movlw	99
 13062  2451  319B  23F1         	fcall	_setLED_Main
 13063  2453  0008               	return
 13064  2454                     __end_of_LED_Main:	
 13065                           
 13066                           	psect	text71
 13067  1BF1                     __ptext71:	
 13068 ;; *************** function _setLED_Main *****************
 13069 ;; Defined at:
 13070 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;  led             1    wreg     unsigned char 
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;  led             1    4[BANK0 ] unsigned char 
 13075 ;; Return value:  Size  Location     Type
 13076 ;;		None               void
 13077 ;; Registers used:
 13078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13086 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;Total ram usage:        3 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:    5
 13091 ;; This function calls:
 13092 ;;		_LedPointSelect
 13093 ;; This function is called by:
 13094 ;;		_LED_Main
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           
 13099                           ;psect for function _setLED_Main
 13100  1BF1                     _setLED_Main:	
 13101                           
 13102                           ;incstack = 0
 13103                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13104                           ;setLED_Main@led stored from wreg
 13105  1BF1  0020               	movlb	0	; select bank0
 13106  1BF2  00A4               	movwf	setLED_Main@led
 13107                           
 13108                           ;LED_B1.c: 216: LedPointSelect(led);
 13109  1BF3  0824               	movf	setLED_Main@led,w
 13110  1BF4  31A7  2797  319B   	fcall	_LedPointSelect
 13111                           
 13112                           ;LED_B1.c: 217: if(LED->GO)
 13113  1BF7  0021               	movlb	1	; select bank1
 13114  1BF8  083B               	movf	_LED^(0+128),w
 13115  1BF9  0086               	movwf	6
 13116  1BFA  0187               	clrf	7
 13117  1BFB  1C81               	btfss	1,1
 13118  1BFC  0008               	return
 13119                           
 13120                           ;LED_B1.c: 218: {
 13121                           ;LED_B1.c: 219: LED->Time++;
 13122  1BFD  0A3B               	incf	_LED^(0+128),w
 13123  1BFE  0086               	movwf	6
 13124  1BFF  0187               	clrf	7
 13125  1C00  3001               	movlw	1
 13126  1C01  0781               	addwf	1,f
 13127  1C02  3141               	addfsr 1,1
 13128  1C03  1803               	skipnc
 13129  1C04  0A81               	incf	1,f
 13130                           
 13131                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 13132  1C05  0A3B               	incf	_LED^(0+128),w
 13133  1C06  0086               	movwf	6
 13134  1C07  0187               	clrf	7
 13135  1C08  3F40               	moviw [0]fsr1
 13136  1C09  0020               	movlb	0	; select bank0
 13137  1C0A  00A2               	movwf	??_setLED_Main
 13138  1C0B  3F41               	moviw [1]fsr1
 13139  1C0C  00A3               	movwf	??_setLED_Main+1
 13140  1C0D  3000               	movlw	0
 13141  1C0E  0223               	subwf	??_setLED_Main+1,w
 13142  1C0F  3032               	movlw	50
 13143  1C10  1903               	skipnz
 13144  1C11  0222               	subwf	??_setLED_Main,w
 13145  1C12  1C03               	skipc
 13146  1C13  0008               	return
 13147                           
 13148                           ;LED_B1.c: 221: {
 13149                           ;LED_B1.c: 222: LED->Time=0;
 13150  1C14  0021               	movlb	1	; select bank1
 13151  1C15  0A3B               	incf	_LED^(0+128),w
 13152  1C16  0086               	movwf	6
 13153  1C17  0187               	clrf	7
 13154  1C18  3000               	movlw	0
 13155  1C19  3FC0               	movwi [0]fsr1
 13156  1C1A  3FC1               	movwi [1]fsr1
 13157                           
 13158                           ;LED_B1.c: 224: if(led == 1)
 13159  1C1B  0020               	movlb	0	; select bank0
 13160  1C1C  0824               	movf	setLED_Main@led,w
 13161  1C1D  3A01               	xorlw	1
 13162  1C1E  1D03               	skipz
 13163  1C1F  2C23               	goto	l7497
 13164                           
 13165                           ;LED_B1.c: 225: {
 13166                           ;LED_B1.c: 226: RC7=~RC7;
 13167  1C20  3080               	movlw	128
 13168  1C21  068E               	xorwf	14,f
 13169                           
 13170                           ;LED_B1.c: 227: }
 13171  1C22  0008               	return
 13172  1C23                     l7497:	
 13173                           
 13174                           ;LED_B1.c: 230: else if(led == 2)
 13175  1C23  0824               	movf	setLED_Main@led,w
 13176  1C24  3A02               	xorlw	2
 13177  1C25  1D03               	skipz
 13178  1C26  2C2A               	goto	l7501
 13179                           
 13180                           ;LED_B1.c: 231: {
 13181                           ;LED_B1.c: 232: RA3=~RA3;
 13182  1C27  3008               	movlw	8
 13183  1C28  068C               	xorwf	12,f
 13184                           
 13185                           ;LED_B1.c: 233: }
 13186  1C29  0008               	return
 13187  1C2A                     l7501:	
 13188                           
 13189                           ;LED_B1.c: 242: else if(led == 99)
 13190  1C2A  0824               	movf	setLED_Main@led,w
 13191  1C2B  3A63               	xorlw	99
 13192  1C2C  1D03               	skipz
 13193  1C2D  0008               	return
 13194                           
 13195                           ;LED_B1.c: 243: {
 13196                           ;LED_B1.c: 244: RB5=~RB5;
 13197  1C2E  3020               	movlw	32
 13198  1C2F  068D               	xorwf	13,f
 13199  1C30  0008               	return
 13200  1C31                     __end_of_setLED_Main:	
 13201                           
 13202                           	psect	text72
 13203  243C                     __ptext72:	
 13204 ;; *************** function _LED_Initialization *****************
 13205 ;; Defined at:
 13206 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;		None
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;		None
 13211 ;; Return value:  Size  Location     Type
 13212 ;;		None               void
 13213 ;; Registers used:
 13214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13224 ;;Total ram usage:        0 bytes
 13225 ;; Hardware stack levels used:    1
 13226 ;; Hardware stack levels required when called:    7
 13227 ;; This function calls:
 13228 ;;		_setLED_Initialization
 13229 ;; This function is called by:
 13230 ;;		_main
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           
 13235                           ;psect for function _LED_Initialization
 13236  243C                     _LED_Initialization:	
 13237                           
 13238                           ;LED_B1.c: 38: setLED_Initialization(1);
 13239                           
 13240                           ;incstack = 0
 13241                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13242  243C  3001               	movlw	1
 13243  243D  31A5  2532  31A4   	fcall	_setLED_Initialization
 13244                           
 13245                           ;LED_B1.c: 41: setLED_Initialization(2);
 13246  2440  3002               	movlw	2
 13247  2441  31A5  2532  31A4   	fcall	_setLED_Initialization
 13248                           
 13249                           ;LED_B1.c: 47: setLED_Initialization(99);
 13250  2444  3063               	movlw	99
 13251  2445  31A5  2532         	fcall	_setLED_Initialization
 13252  2447  0008               	return
 13253  2448                     __end_of_LED_Initialization:	
 13254                           
 13255                           	psect	text73
 13256  2532                     __ptext73:	
 13257 ;; *************** function _setLED_Initialization *****************
 13258 ;; Defined at:
 13259 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;  led             1    wreg     unsigned char 
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;  led             1    4[BANK0 ] unsigned char 
 13264 ;; Return value:  Size  Location     Type
 13265 ;;		None               void
 13266 ;; Registers used:
 13267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;Total ram usage:        1 bytes
 13278 ;; Hardware stack levels used:    1
 13279 ;; Hardware stack levels required when called:    6
 13280 ;; This function calls:
 13281 ;;		_LedPointSelect
 13282 ;;		_setLED
 13283 ;; This function is called by:
 13284 ;;		_LED_Initialization
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           
 13289                           ;psect for function _setLED_Initialization
 13290  2532                     _setLED_Initialization:	
 13291                           
 13292                           ;incstack = 0
 13293                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13294                           ;setLED_Initialization@led stored from wreg
 13295  2532  0020               	movlb	0	; select bank0
 13296  2533  00A4               	movwf	setLED_Initialization@led
 13297                           
 13298                           ;LED_B1.c: 69: LedPointSelect(led);
 13299  2534  0824               	movf	setLED_Initialization@led,w
 13300  2535  31A7  2797  31A5   	fcall	_LedPointSelect
 13301                           
 13302                           ;LED_B1.c: 70: LED->Enable=1;
 13303  2538  0021               	movlb	1	; select bank1
 13304  2539  083B               	movf	_LED^(0+128),w
 13305  253A  0086               	movwf	6
 13306  253B  0187               	clrf	7
 13307  253C  1401               	bsf	1,0
 13308                           
 13309                           ;LED_B1.c: 71: setLED(led,0);
 13310  253D  0020               	movlb	0	; select bank0
 13311  253E  01A2               	clrf	setLED@command
 13312  253F  0824               	movf	setLED_Initialization@led,w
 13313  2540  3190  2023         	fcall	_setLED
 13314  2542  0008               	return
 13315  2543                     __end_of_setLED_Initialization:	
 13316                           
 13317                           	psect	text74
 13318  1E53                     __ptext74:	
 13319 ;; *************** function _Flash_Memory_Main *****************
 13320 ;; Defined at:
 13321 ;;		line 472 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;		None
 13324 ;; Auto vars:     Size  Location     Type
 13325 ;;		None
 13326 ;; Return value:  Size  Location     Type
 13327 ;;		None               void
 13328 ;; Registers used:
 13329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13330 ;; Tracked objects:
 13331 ;;		On entry : 0/0
 13332 ;;		On exit  : 0/0
 13333 ;;		Unchanged: 0/0
 13334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13339 ;;Total ram usage:        0 bytes
 13340 ;; Hardware stack levels used:    1
 13341 ;; Hardware stack levels required when called:    7
 13342 ;; This function calls:
 13343 ;;		_Flash_Memory_Modify
 13344 ;; This function is called by:
 13345 ;;		_main
 13346 ;; This function uses a non-reentrant model
 13347 ;;
 13348                           
 13349                           
 13350                           ;psect for function _Flash_Memory_Main
 13351  1E53                     _Flash_Memory_Main:	
 13352                           
 13353                           ;MCU_16f1518_B1.c: 474: if(Memory->GO)
 13354                           
 13355                           ;incstack = 0
 13356                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13357  1E53  0021               	movlb	1	; select bank1
 13358  1E54  0868               	movf	_Memory^(0+128),w
 13359  1E55  3E22               	addlw	34
 13360  1E56  0086               	movwf	6
 13361  1E57  3002               	movlw	2	; select bank4/5
 13362  1E58  0087               	movwf	7
 13363  1E59  1C81               	btfss	1,1
 13364  1E5A  0008               	return
 13365                           
 13366                           ;MCU_16f1518_B1.c: 475: {
 13367                           ;MCU_16f1518_B1.c: 476: if(Memory->Modify)
 13368  1E5B  0868               	movf	_Memory^(0+128),w
 13369  1E5C  3E22               	addlw	34
 13370  1E5D  0086               	movwf	6
 13371  1E5E  3002               	movlw	2	; select bank4/5
 13372  1E5F  0087               	movwf	7
 13373  1E60  1C01               	btfss	1,0
 13374  1E61  2E99               	goto	l9977
 13375                           
 13376                           ;MCU_16f1518_B1.c: 477: {
 13377                           ;MCU_16f1518_B1.c: 478: Memory->Time++;
 13378  1E62  0868               	movf	_Memory^(0+128),w
 13379  1E63  3E23               	addlw	35
 13380  1E64  0086               	movwf	6
 13381  1E65  3002               	movlw	2	; select bank4/5
 13382  1E66  0087               	movwf	7
 13383  1E67  3001               	movlw	1
 13384  1E68  0781               	addwf	1,f
 13385  1E69  3141               	addfsr 1,1
 13386  1E6A  1803               	skipnc
 13387  1E6B  0A81               	incf	1,f
 13388                           
 13389                           ;MCU_16f1518_B1.c: 479: if(Memory->Time == 25)
 13390  1E6C  0868               	movf	_Memory^(0+128),w
 13391  1E6D  3E23               	addlw	35
 13392  1E6E  0086               	movwf	6
 13393  1E6F  3002               	movlw	2	; select bank4/5
 13394  1E70  0087               	movwf	7
 13395  1E71  3F40               	moviw [0]fsr1
 13396  1E72  3A19               	xorlw	25
 13397  1E73  1D03               	skipz
 13398  1E74  2E77               	goto	u9985
 13399  1E75  3F41               	moviw [1]fsr1
 13400  1E76  3A00               	xorlw	0
 13401  1E77                     u9985:	
 13402  1E77  1D03               	skipz
 13403  1E78  0008               	return
 13404                           
 13405                           ;MCU_16f1518_B1.c: 480: {
 13406                           ;MCU_16f1518_B1.c: 481: Memory->Time=0;
 13407  1E79  0868               	movf	_Memory^(0+128),w
 13408  1E7A  3E23               	addlw	35
 13409  1E7B  0086               	movwf	6
 13410  1E7C  3002               	movlw	2	; select bank4/5
 13411  1E7D  0087               	movwf	7
 13412  1E7E  3000               	movlw	0
 13413  1E7F  3FC0               	movwi [0]fsr1
 13414  1E80  3FC1               	movwi [1]fsr1
 13415                           
 13416                           ;MCU_16f1518_B1.c: 482: Memory->Modify=0;
 13417  1E81  0868               	movf	_Memory^(0+128),w
 13418  1E82  3E22               	addlw	34
 13419  1E83  0086               	movwf	6
 13420  1E84  3002               	movlw	2	; select bank4/5
 13421  1E85  0087               	movwf	7
 13422  1E86  1001               	bcf	1,0
 13423                           
 13424                           ;MCU_16f1518_B1.c: 483: Memory->GO=0;
 13425  1E87  0868               	movf	_Memory^(0+128),w
 13426  1E88  3E22               	addlw	34
 13427  1E89  0086               	movwf	6
 13428  1E8A  3002               	movlw	2	; select bank4/5
 13429  1E8B  0087               	movwf	7
 13430  1E8C  1081               	bcf	1,1
 13431                           
 13432                           ;MCU_16f1518_B1.c: 484: Flash_Memory_Modify();
 13433  1E8D  3192  22E9  319E   	fcall	_Flash_Memory_Modify
 13434                           
 13435                           ;MCU_16f1518_B1.c: 485: RB5=RB5;
 13436  1E90  0020               	movlb	0	; select bank0
 13437  1E91  1E8D               	btfss	13,5	;volatile
 13438  1E92  2E96               	goto	u9990
 13439  1E93  0020               	movlb	0	; select bank0
 13440  1E94  168D               	bsf	13,5	;volatile
 13441  1E95  0008               	return
 13442  1E96                     u9990:	
 13443  1E96  0020               	movlb	0	; select bank0
 13444  1E97  128D               	bcf	13,5	;volatile
 13445                           
 13446                           ;MCU_16f1518_B1.c: 486: }
 13447                           ;MCU_16f1518_B1.c: 487: }
 13448  1E98  0008               	return
 13449  1E99                     l9977:	
 13450                           
 13451                           ;MCU_16f1518_B1.c: 488: else
 13452                           ;MCU_16f1518_B1.c: 489: {
 13453                           ;MCU_16f1518_B1.c: 490: Memory->GO=0;
 13454  1E99  0021               	movlb	1	; select bank1
 13455  1E9A  0868               	movf	_Memory^(0+128),w
 13456  1E9B  3E22               	addlw	34
 13457  1E9C  0086               	movwf	6
 13458  1E9D  3002               	movlw	2	; select bank4/5
 13459  1E9E  0087               	movwf	7
 13460  1E9F  1081               	bcf	1,1
 13461  1EA0  0008               	return
 13462  1EA1                     __end_of_Flash_Memory_Main:	
 13463                           
 13464                           	psect	text75
 13465  12E9                     __ptext75:	
 13466 ;; *************** function _Flash_Memory_Modify *****************
 13467 ;; Defined at:
 13468 ;;		line 547 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;		None
 13471 ;; Auto vars:     Size  Location     Type
 13472 ;;  i               1    6[BANK0 ] unsigned char 
 13473 ;; Return value:  Size  Location     Type
 13474 ;;		None               void
 13475 ;; Registers used:
 13476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13477 ;; Tracked objects:
 13478 ;;		On entry : 0/0
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13485 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13486 ;;Total ram usage:        3 bytes
 13487 ;; Hardware stack levels used:    1
 13488 ;; Hardware stack levels required when called:    6
 13489 ;; This function calls:
 13490 ;;		_Flash_Memory_Erasing
 13491 ;;		_Flash_Memory_Read
 13492 ;;		_Flash_Memory_Write
 13493 ;; This function is called by:
 13494 ;;		_Flash_Memory_Main
 13495 ;; This function uses a non-reentrant model
 13496 ;;
 13497                           
 13498                           
 13499                           ;psect for function _Flash_Memory_Modify
 13500  12E9                     _Flash_Memory_Modify:	
 13501                           
 13502                           ;MCU_16f1518_B1.c: 549: char i;
 13503                           ;MCU_16f1518_B1.c: 550: for(i=0;i<32;i++)
 13504                           
 13505                           ;incstack = 0
 13506                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13507  12E9  0020               	movlb	0	; select bank0
 13508  12EA  01A6               	clrf	Flash_Memory_Modify@i
 13509  12EB  3020               	movlw	32
 13510  12EC  0226               	subwf	Flash_Memory_Modify@i,w
 13511  12ED  1803               	btfsc	3,0
 13512  12EE  2B08               	goto	l9491
 13513  12EF                     l9485:	
 13514                           
 13515                           ;MCU_16f1518_B1.c: 551: {
 13516                           ;MCU_16f1518_B1.c: 552: Memory->Data[i]=Flash_Memory_Read(i);
 13517  12EF  0826               	movf	Flash_Memory_Modify@i,w
 13518  12F0  31A6  265D  3192   	fcall	_Flash_Memory_Read
 13519  12F3  0020               	movlb	0	; select bank0
 13520  12F4  00A4               	movwf	??_Flash_Memory_Modify
 13521  12F5  0826               	movf	Flash_Memory_Modify@i,w
 13522  12F6  0021               	movlb	1	; select bank1
 13523  12F7  0768               	addwf	_Memory^(0+128),w
 13524  12F8  0020               	movlb	0	; select bank0
 13525  12F9  00A5               	movwf	??_Flash_Memory_Modify+1
 13526  12FA  0825               	movf	??_Flash_Memory_Modify+1,w
 13527  12FB  0086               	movwf	6
 13528  12FC  3002               	movlw	2	; select bank4/5
 13529  12FD  0087               	movwf	7
 13530  12FE  0824               	movf	??_Flash_Memory_Modify,w
 13531  12FF  0081               	movwf	1
 13532  1300  3001               	movlw	1
 13533  1301  00A4               	movwf	??_Flash_Memory_Modify
 13534  1302  0824               	movf	??_Flash_Memory_Modify,w
 13535  1303  07A6               	addwf	Flash_Memory_Modify@i,f
 13536  1304  3020               	movlw	32
 13537  1305  0226               	subwf	Flash_Memory_Modify@i,w
 13538  1306  1C03               	skipc
 13539  1307  2AEF               	goto	l9485
 13540  1308                     l9491:	
 13541                           
 13542                           ;MCU_16f1518_B1.c: 553: }
 13543                           ;MCU_16f1518_B1.c: 554: Memory->Data[0]=Product->Data[12];
 13544  1308  086F               	movf	_Product,w
 13545  1309  3E0C               	addlw	12
 13546  130A  0086               	movwf	6
 13547  130B  3001               	movlw	1	; select bank2/3
 13548  130C  0087               	movwf	7
 13549  130D  0801               	movf	1,w
 13550  130E  00A4               	movwf	??_Flash_Memory_Modify
 13551  130F  0021               	movlb	1	; select bank1
 13552  1310  0868               	movf	_Memory^(0+128),w
 13553  1311  0086               	movwf	6
 13554  1312  3002               	movlw	2	; select bank4/5
 13555  1313  0087               	movwf	7
 13556  1314  0020               	movlb	0	; select bank0
 13557  1315  0824               	movf	??_Flash_Memory_Modify,w
 13558  1316  0081               	movwf	1
 13559                           
 13560                           ;MCU_16f1518_B1.c: 555: Memory->Data[1]=Product->Data[13];
 13561  1317  086F               	movf	_Product,w
 13562  1318  3E0D               	addlw	13
 13563  1319  0086               	movwf	6
 13564  131A  3001               	movlw	1	; select bank2/3
 13565  131B  0087               	movwf	7
 13566  131C  0801               	movf	1,w
 13567  131D  00A4               	movwf	??_Flash_Memory_Modify
 13568  131E  0021               	movlb	1	; select bank1
 13569  131F  0A68               	incf	_Memory^(0+128),w
 13570  1320  0086               	movwf	6
 13571  1321  3002               	movlw	2	; select bank4/5
 13572  1322  0087               	movwf	7
 13573  1323  0020               	movlb	0	; select bank0
 13574  1324  0824               	movf	??_Flash_Memory_Modify,w
 13575  1325  0081               	movwf	1
 13576                           
 13577                           ;MCU_16f1518_B1.c: 556: Memory->Data[2]=Product->Data[14];
 13578  1326  086F               	movf	_Product,w
 13579  1327  3E0E               	addlw	14
 13580  1328  0086               	movwf	6
 13581  1329  3001               	movlw	1	; select bank2/3
 13582  132A  0087               	movwf	7
 13583  132B  0801               	movf	1,w
 13584  132C  00A4               	movwf	??_Flash_Memory_Modify
 13585  132D  0021               	movlb	1	; select bank1
 13586  132E  0868               	movf	_Memory^(0+128),w
 13587  132F  3E02               	addlw	2
 13588  1330  0086               	movwf	6
 13589  1331  3002               	movlw	2	; select bank4/5
 13590  1332  0087               	movwf	7
 13591  1333  0020               	movlb	0	; select bank0
 13592  1334  0824               	movf	??_Flash_Memory_Modify,w
 13593  1335  0081               	movwf	1
 13594                           
 13595                           ;MCU_16f1518_B1.c: 562: if(Memory->LoopSave)
 13596  1336  0021               	movlb	1	; select bank1
 13597  1337  0868               	movf	_Memory^(0+128),w
 13598  1338  3E22               	addlw	34
 13599  1339  0086               	movwf	6
 13600  133A  3002               	movlw	2	; select bank4/5
 13601  133B  0087               	movwf	7
 13602  133C  1D01               	btfss	1,2
 13603  133D  2B56               	goto	l9495
 13604                           
 13605                           ;MCU_16f1518_B1.c: 563: {
 13606                           ;MCU_16f1518_B1.c: 564: Memory->LoopSave=0;
 13607  133E  0868               	movf	_Memory^(0+128),w
 13608  133F  3E22               	addlw	34
 13609  1340  0086               	movwf	6
 13610  1341  3002               	movlw	2	; select bank4/5
 13611  1342  0087               	movwf	7
 13612  1343  1101               	bcf	1,2
 13613                           
 13614                           ;MCU_16f1518_B1.c: 565: TMain->FirstOpen=0;
 13615  1344  0869               	movf	_TMain^(0+128),w
 13616  1345  0086               	movwf	6
 13617  1346  3001               	movlw	1	; select bank2/3
 13618  1347  0087               	movwf	7
 13619  1348  1281               	bcf	1,5
 13620                           
 13621                           ;MCU_16f1518_B1.c: 566: TMain->First=0;
 13622  1349  0869               	movf	_TMain^(0+128),w
 13623  134A  3E03               	addlw	3
 13624  134B  0086               	movwf	6
 13625  134C  3001               	movlw	1	; select bank2/3
 13626  134D  0087               	movwf	7
 13627  134E  1081               	bcf	1,1
 13628                           
 13629                           ;MCU_16f1518_B1.c: 567: Memory->Data[30]=1;
 13630  134F  0868               	movf	_Memory^(0+128),w
 13631  1350  3E1E               	addlw	30
 13632  1351  0086               	movwf	6
 13633  1352  3002               	movlw	2	; select bank4/5
 13634  1353  0087               	movwf	7
 13635  1354  0181               	clrf	1
 13636  1355  0A81               	incf	1,f
 13637  1356                     l9495:	
 13638                           
 13639                           ;MCU_16f1518_B1.c: 568: }
 13640                           ;MCU_16f1518_B1.c: 569: GIE=0;
 13641  1356  138B               	bcf	11,7	;volatile
 13642                           
 13643                           ;MCU_16f1518_B1.c: 570: Flash_Memory_Erasing();
 13644  1357  31A4  2430  3192   	fcall	_Flash_Memory_Erasing
 13645                           
 13646                           ;MCU_16f1518_B1.c: 571: Flash_Memory_Write();
 13647  135A  319A  2236         	fcall	_Flash_Memory_Write
 13648                           
 13649                           ;MCU_16f1518_B1.c: 572: GIE=1;
 13650  135C  178B               	bsf	11,7	;volatile
 13651  135D  0008               	return
 13652  135E                     __end_of_Flash_Memory_Modify:	
 13653                           
 13654                           	psect	text76
 13655  2430                     __ptext76:	
 13656 ;; *************** function _Flash_Memory_Erasing *****************
 13657 ;; Defined at:
 13658 ;;		line 536 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;		None
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;		None
 13663 ;; Return value:  Size  Location     Type
 13664 ;;		None               void
 13665 ;; Registers used:
 13666 ;;		wreg, status,2, status,0, pclath, cstack
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;Total ram usage:        0 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    5
 13679 ;; This function calls:
 13680 ;;		_Flash_Memory_Unlock
 13681 ;; This function is called by:
 13682 ;;		_Flash_Memory_Modify
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           
 13687                           ;psect for function _Flash_Memory_Erasing
 13688  2430                     _Flash_Memory_Erasing:	
 13689                           
 13690                           ;MCU_16f1518_B1.c: 538: CFGS=0;
 13691                           
 13692                           ;incstack = 0
 13693                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 13694  2430  0023               	movlb	3	; select bank3
 13695  2431  1315               	bcf	21,6	;volatile
 13696                           
 13697                           ;MCU_16f1518_B1.c: 539: PMADRH=0x30;
 13698  2432  3030               	movlw	48
 13699  2433  0092               	movwf	18	;volatile
 13700                           
 13701                           ;MCU_16f1518_B1.c: 540: PMADRL=0x00;
 13702  2434  0191               	clrf	17	;volatile
 13703                           
 13704                           ;MCU_16f1518_B1.c: 541: FREE=1;
 13705  2435  1615               	bsf	21,4	;volatile
 13706                           
 13707                           ;MCU_16f1518_B1.c: 542: WREN=1;
 13708  2436  1515               	bsf	21,2	;volatile
 13709                           
 13710                           ;MCU_16f1518_B1.c: 543: Flash_Memory_Unlock();
 13711  2437  31A3  2398         	fcall	_Flash_Memory_Unlock
 13712                           
 13713                           ;MCU_16f1518_B1.c: 544: WREN=0;
 13714  2439  0023               	movlb	3	; select bank3
 13715  243A  1115               	bcf	21,2	;volatile
 13716  243B  0008               	return
 13717  243C                     __end_of_Flash_Memory_Erasing:	
 13718                           
 13719                           	psect	text77
 13720  0AAE                     __ptext77:	
 13721 ;; *************** function _Flash_Memory_Initialization *****************
 13722 ;; Defined at:
 13723 ;;		line 429 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13724 ;; Parameters:    Size  Location     Type
 13725 ;;		None
 13726 ;; Auto vars:     Size  Location     Type
 13727 ;;  i               1   62[BANK0 ] unsigned char 
 13728 ;; Return value:  Size  Location     Type
 13729 ;;		None               void
 13730 ;; Registers used:
 13731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13732 ;; Tracked objects:
 13733 ;;		On entry : 0/0
 13734 ;;		On exit  : 0/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13740 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13741 ;;Total ram usage:        2 bytes
 13742 ;; Hardware stack levels used:    1
 13743 ;; Hardware stack levels required when called:    7
 13744 ;; This function calls:
 13745 ;;		_Flash_Memory_Read
 13746 ;;		_Flash_Memory_Write
 13747 ;;		_setPercentValue
 13748 ;; This function is called by:
 13749 ;;		_main
 13750 ;; This function uses a non-reentrant model
 13751 ;;
 13752                           
 13753                           
 13754                           ;psect for function _Flash_Memory_Initialization
 13755  0AAE                     _Flash_Memory_Initialization:	
 13756                           
 13757                           ;MCU_16f1518_B1.c: 431: char i;
 13758                           ;MCU_16f1518_B1.c: 432: if(Flash_Memory_Read(31) == 0xaa)
 13759                           
 13760                           ;incstack = 0
 13761                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13762  0AAE  301F               	movlw	31
 13763  0AAF  31A6  265D  318A   	fcall	_Flash_Memory_Read
 13764  0AB2  3AAA               	xorlw	170
 13765  0AB3  1D03               	skipz
 13766  0AB4  2B13               	goto	l9833
 13767                           
 13768                           ;MCU_16f1518_B1.c: 433: {
 13769                           ;MCU_16f1518_B1.c: 434: Product->Data[12]=Flash_Memory_Read(0);
 13770  0AB5  3000               	movlw	0
 13771  0AB6  31A6  265D  318A   	fcall	_Flash_Memory_Read
 13772  0AB9  0020               	movlb	0	; select bank0
 13773  0ABA  00DD               	movwf	??_Flash_Memory_Initialization
 13774  0ABB  086F               	movf	_Product,w
 13775  0ABC  3E0C               	addlw	12
 13776  0ABD  0086               	movwf	6
 13777  0ABE  3001               	movlw	1	; select bank2/3
 13778  0ABF  0087               	movwf	7
 13779  0AC0  085D               	movf	??_Flash_Memory_Initialization,w
 13780  0AC1  0081               	movwf	1
 13781                           
 13782                           ;MCU_16f1518_B1.c: 435: Product->Data[13]=Flash_Memory_Read(1);
 13783  0AC2  3001               	movlw	1
 13784  0AC3  31A6  265D  318A   	fcall	_Flash_Memory_Read
 13785  0AC6  0020               	movlb	0	; select bank0
 13786  0AC7  00DD               	movwf	??_Flash_Memory_Initialization
 13787  0AC8  086F               	movf	_Product,w
 13788  0AC9  3E0D               	addlw	13
 13789  0ACA  0086               	movwf	6
 13790  0ACB  3001               	movlw	1	; select bank2/3
 13791  0ACC  0087               	movwf	7
 13792  0ACD  085D               	movf	??_Flash_Memory_Initialization,w
 13793  0ACE  0081               	movwf	1
 13794                           
 13795                           ;MCU_16f1518_B1.c: 436: Product->Data[14]=Flash_Memory_Read(2);
 13796  0ACF  3002               	movlw	2
 13797  0AD0  31A6  265D  318A   	fcall	_Flash_Memory_Read
 13798  0AD3  0020               	movlb	0	; select bank0
 13799  0AD4  00DD               	movwf	??_Flash_Memory_Initialization
 13800  0AD5  086F               	movf	_Product,w
 13801  0AD6  3E0E               	addlw	14
 13802  0AD7  0086               	movwf	6
 13803  0AD8  3001               	movlw	1	; select bank2/3
 13804  0AD9  0087               	movwf	7
 13805  0ADA  085D               	movf	??_Flash_Memory_Initialization,w
 13806  0ADB  0081               	movwf	1
 13807                           
 13808                           ;MCU_16f1518_B1.c: 442: i=setPercentValue(((char)((100-60)*1.5)));
 13809  0ADC  303C               	movlw	60
 13810  0ADD  319D  257C  318A   	fcall	_setPercentValue
 13811  0AE0  0020               	movlb	0	; select bank0
 13812  0AE1  00DD               	movwf	??_Flash_Memory_Initialization
 13813  0AE2  085D               	movf	??_Flash_Memory_Initialization,w
 13814  0AE3  00DE               	movwf	Flash_Memory_Initialization@i
 13815                           
 13816                           ;MCU_16f1518_B1.c: 443: Product->Data[21]=i;
 13817  0AE4  085E               	movf	Flash_Memory_Initialization@i,w
 13818  0AE5  00DD               	movwf	??_Flash_Memory_Initialization
 13819  0AE6  086F               	movf	_Product,w
 13820  0AE7  3E15               	addlw	21
 13821  0AE8  0086               	movwf	6
 13822  0AE9  3001               	movlw	1	; select bank2/3
 13823  0AEA  0087               	movwf	7
 13824  0AEB  085D               	movf	??_Flash_Memory_Initialization,w
 13825  0AEC  0081               	movwf	1
 13826                           
 13827                           ;MCU_16f1518_B1.c: 444: Product->Data[22]=i;
 13828  0AED  085E               	movf	Flash_Memory_Initialization@i,w
 13829  0AEE  00DD               	movwf	??_Flash_Memory_Initialization
 13830  0AEF  086F               	movf	_Product,w
 13831  0AF0  3E16               	addlw	22
 13832  0AF1  0086               	movwf	6
 13833  0AF2  3001               	movlw	1	; select bank2/3
 13834  0AF3  0087               	movwf	7
 13835  0AF4  085D               	movf	??_Flash_Memory_Initialization,w
 13836  0AF5  0081               	movwf	1
 13837                           
 13838                           ;MCU_16f1518_B1.c: 445: Product->Data[23]=i;
 13839  0AF6  085E               	movf	Flash_Memory_Initialization@i,w
 13840  0AF7  00DD               	movwf	??_Flash_Memory_Initialization
 13841  0AF8  086F               	movf	_Product,w
 13842  0AF9  3E17               	addlw	23
 13843  0AFA  0086               	movwf	6
 13844  0AFB  3001               	movlw	1	; select bank2/3
 13845  0AFC  0087               	movwf	7
 13846  0AFD  085D               	movf	??_Flash_Memory_Initialization,w
 13847  0AFE  0081               	movwf	1
 13848                           
 13849                           ;MCU_16f1518_B1.c: 447: if(Flash_Memory_Read(30) == 1)
 13850  0AFF  301E               	movlw	30
 13851  0B00  31A6  265D  318A   	fcall	_Flash_Memory_Read
 13852  0B03  3A01               	xorlw	1
 13853  0B04  1D03               	skipz
 13854  0B05  0008               	return
 13855                           
 13856                           ;MCU_16f1518_B1.c: 448: {
 13857                           ;MCU_16f1518_B1.c: 449: TMain->FirstOpen=0;
 13858  0B06  0021               	movlb	1	; select bank1
 13859  0B07  0869               	movf	_TMain^(0+128),w
 13860  0B08  0086               	movwf	6
 13861  0B09  3001               	movlw	1	; select bank2/3
 13862  0B0A  0087               	movwf	7
 13863  0B0B  1281               	bcf	1,5
 13864                           
 13865                           ;MCU_16f1518_B1.c: 450: TMain->First=0;
 13866  0B0C  0869               	movf	_TMain^(0+128),w
 13867  0B0D  3E03               	addlw	3
 13868  0B0E  0086               	movwf	6
 13869  0B0F  3001               	movlw	1	; select bank2/3
 13870  0B10  0087               	movwf	7
 13871  0B11  1081               	bcf	1,1
 13872                           
 13873                           ;MCU_16f1518_B1.c: 451: }
 13874                           ;MCU_16f1518_B1.c: 452: }
 13875  0B12  0008               	return
 13876  0B13                     l9833:	
 13877                           
 13878                           ;MCU_16f1518_B1.c: 453: else
 13879                           ;MCU_16f1518_B1.c: 454: {
 13880                           ;MCU_16f1518_B1.c: 455: i=setPercentValue(((char)((100-60)*1.5)));
 13881  0B13  303C               	movlw	60
 13882  0B14  319D  257C  318A   	fcall	_setPercentValue
 13883  0B17  0020               	movlb	0	; select bank0
 13884  0B18  00DD               	movwf	??_Flash_Memory_Initialization
 13885  0B19  085D               	movf	??_Flash_Memory_Initialization,w
 13886  0B1A  00DE               	movwf	Flash_Memory_Initialization@i
 13887                           
 13888                           ;MCU_16f1518_B1.c: 456: Memory->Data[0]=0xff;
 13889  0B1B  30FF               	movlw	255
 13890  0B1C  00DD               	movwf	??_Flash_Memory_Initialization
 13891  0B1D  0021               	movlb	1	; select bank1
 13892  0B1E  0868               	movf	_Memory^(0+128),w
 13893  0B1F  0086               	movwf	6
 13894  0B20  3002               	movlw	2	; select bank4/5
 13895  0B21  0087               	movwf	7
 13896  0B22  0020               	movlb	0	; select bank0
 13897  0B23  085D               	movf	??_Flash_Memory_Initialization,w
 13898  0B24  0081               	movwf	1
 13899                           
 13900                           ;MCU_16f1518_B1.c: 457: Memory->Data[1]=0xff;
 13901  0B25  30FF               	movlw	255
 13902  0B26  00DD               	movwf	??_Flash_Memory_Initialization
 13903  0B27  0021               	movlb	1	; select bank1
 13904  0B28  0A68               	incf	_Memory^(0+128),w
 13905  0B29  0086               	movwf	6
 13906  0B2A  3002               	movlw	2	; select bank4/5
 13907  0B2B  0087               	movwf	7
 13908  0B2C  0020               	movlb	0	; select bank0
 13909  0B2D  085D               	movf	??_Flash_Memory_Initialization,w
 13910  0B2E  0081               	movwf	1
 13911                           
 13912                           ;MCU_16f1518_B1.c: 458: Memory->Data[2]=0xff;
 13913  0B2F  30FF               	movlw	255
 13914  0B30  00DD               	movwf	??_Flash_Memory_Initialization
 13915  0B31  0021               	movlb	1	; select bank1
 13916  0B32  0868               	movf	_Memory^(0+128),w
 13917  0B33  3E02               	addlw	2
 13918  0B34  0086               	movwf	6
 13919  0B35  3002               	movlw	2	; select bank4/5
 13920  0B36  0087               	movwf	7
 13921  0B37  0020               	movlb	0	; select bank0
 13922  0B38  085D               	movf	??_Flash_Memory_Initialization,w
 13923  0B39  0081               	movwf	1
 13924                           
 13925                           ;MCU_16f1518_B1.c: 459: Memory->Data[3]=0xff;
 13926  0B3A  30FF               	movlw	255
 13927  0B3B  00DD               	movwf	??_Flash_Memory_Initialization
 13928  0B3C  0021               	movlb	1	; select bank1
 13929  0B3D  0868               	movf	_Memory^(0+128),w
 13930  0B3E  3E03               	addlw	3
 13931  0B3F  0086               	movwf	6
 13932  0B40  3002               	movlw	2	; select bank4/5
 13933  0B41  0087               	movwf	7
 13934  0B42  0020               	movlb	0	; select bank0
 13935  0B43  085D               	movf	??_Flash_Memory_Initialization,w
 13936  0B44  0081               	movwf	1
 13937                           
 13938                           ;MCU_16f1518_B1.c: 460: Memory->Data[4]=0xff;
 13939  0B45  30FF               	movlw	255
 13940  0B46  00DD               	movwf	??_Flash_Memory_Initialization
 13941  0B47  0021               	movlb	1	; select bank1
 13942  0B48  0868               	movf	_Memory^(0+128),w
 13943  0B49  3E04               	addlw	4
 13944  0B4A  0086               	movwf	6
 13945  0B4B  3002               	movlw	2	; select bank4/5
 13946  0B4C  0087               	movwf	7
 13947  0B4D  0020               	movlb	0	; select bank0
 13948  0B4E  085D               	movf	??_Flash_Memory_Initialization,w
 13949  0B4F  0081               	movwf	1
 13950                           
 13951                           ;MCU_16f1518_B1.c: 461: Memory->Data[5]=0xff;
 13952  0B50  30FF               	movlw	255
 13953  0B51  00DD               	movwf	??_Flash_Memory_Initialization
 13954  0B52  0021               	movlb	1	; select bank1
 13955  0B53  0868               	movf	_Memory^(0+128),w
 13956  0B54  3E05               	addlw	5
 13957  0B55  0086               	movwf	6
 13958  0B56  3002               	movlw	2	; select bank4/5
 13959  0B57  0087               	movwf	7
 13960  0B58  0020               	movlb	0	; select bank0
 13961  0B59  085D               	movf	??_Flash_Memory_Initialization,w
 13962  0B5A  0081               	movwf	1
 13963                           
 13964                           ;MCU_16f1518_B1.c: 462: Memory->Data[31]=0xaa;
 13965  0B5B  30AA               	movlw	170
 13966  0B5C  00DD               	movwf	??_Flash_Memory_Initialization
 13967  0B5D  0021               	movlb	1	; select bank1
 13968  0B5E  0868               	movf	_Memory^(0+128),w
 13969  0B5F  3E1F               	addlw	31
 13970  0B60  0086               	movwf	6
 13971  0B61  3002               	movlw	2	; select bank4/5
 13972  0B62  0087               	movwf	7
 13973  0B63  0020               	movlb	0	; select bank0
 13974  0B64  085D               	movf	??_Flash_Memory_Initialization,w
 13975  0B65  0081               	movwf	1
 13976                           
 13977                           ;MCU_16f1518_B1.c: 463: Product->Data[21]=i;
 13978  0B66  085E               	movf	Flash_Memory_Initialization@i,w
 13979  0B67  00DD               	movwf	??_Flash_Memory_Initialization
 13980  0B68  086F               	movf	_Product,w
 13981  0B69  3E15               	addlw	21
 13982  0B6A  0086               	movwf	6
 13983  0B6B  3001               	movlw	1	; select bank2/3
 13984  0B6C  0087               	movwf	7
 13985  0B6D  085D               	movf	??_Flash_Memory_Initialization,w
 13986  0B6E  0081               	movwf	1
 13987                           
 13988                           ;MCU_16f1518_B1.c: 464: Product->Data[22]=i;
 13989  0B6F  085E               	movf	Flash_Memory_Initialization@i,w
 13990  0B70  00DD               	movwf	??_Flash_Memory_Initialization
 13991  0B71  086F               	movf	_Product,w
 13992  0B72  3E16               	addlw	22
 13993  0B73  0086               	movwf	6
 13994  0B74  3001               	movlw	1	; select bank2/3
 13995  0B75  0087               	movwf	7
 13996  0B76  085D               	movf	??_Flash_Memory_Initialization,w
 13997  0B77  0081               	movwf	1
 13998                           
 13999                           ;MCU_16f1518_B1.c: 465: Product->Data[23]=i;
 14000  0B78  085E               	movf	Flash_Memory_Initialization@i,w
 14001  0B79  00DD               	movwf	??_Flash_Memory_Initialization
 14002  0B7A  086F               	movf	_Product,w
 14003  0B7B  3E17               	addlw	23
 14004  0B7C  0086               	movwf	6
 14005  0B7D  3001               	movlw	1	; select bank2/3
 14006  0B7E  0087               	movwf	7
 14007  0B7F  085D               	movf	??_Flash_Memory_Initialization,w
 14008  0B80  0081               	movwf	1
 14009                           
 14010                           ;MCU_16f1518_B1.c: 466: GIE=0;
 14011  0B81  138B               	bcf	11,7	;volatile
 14012                           
 14013                           ;MCU_16f1518_B1.c: 467: Flash_Memory_Write();
 14014  0B82  319A  2236         	fcall	_Flash_Memory_Write
 14015                           
 14016                           ;MCU_16f1518_B1.c: 468: GIE=1;
 14017  0B84  178B               	bsf	11,7	;volatile
 14018  0B85  0008               	return
 14019  0B86                     __end_of_Flash_Memory_Initialization:	
 14020                           
 14021                           	psect	text78
 14022  1A36                     __ptext78:	
 14023 ;; *************** function _Flash_Memory_Write *****************
 14024 ;; Defined at:
 14025 ;;		line 516 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;		None
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;  i               1    1[BANK0 ] unsigned char 
 14030 ;; Return value:  Size  Location     Type
 14031 ;;		None               void
 14032 ;; Registers used:
 14033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14034 ;; Tracked objects:
 14035 ;;		On entry : 0/0
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14043 ;;Total ram usage:        2 bytes
 14044 ;; Hardware stack levels used:    1
 14045 ;; Hardware stack levels required when called:    5
 14046 ;; This function calls:
 14047 ;;		_Flash_Memory_Unlock
 14048 ;; This function is called by:
 14049 ;;		_Flash_Memory_Initialization
 14050 ;;		_Flash_Memory_Modify
 14051 ;; This function uses a non-reentrant model
 14052 ;;
 14053                           
 14054                           
 14055                           ;psect for function _Flash_Memory_Write
 14056  1A36                     _Flash_Memory_Write:	
 14057                           
 14058                           ;MCU_16f1518_B1.c: 518: char i;
 14059                           ;MCU_16f1518_B1.c: 519: CFGS=0;
 14060                           
 14061                           ;incstack = 0
 14062                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14063  1A36  0023               	movlb	3	; select bank3
 14064  1A37  1315               	bcf	21,6	;volatile
 14065                           
 14066                           ;MCU_16f1518_B1.c: 520: PMADRH=0x30;
 14067  1A38  3030               	movlw	48
 14068  1A39  0092               	movwf	18	;volatile
 14069                           
 14070                           ;MCU_16f1518_B1.c: 521: PMDATH=0;
 14071  1A3A  0194               	clrf	20	;volatile
 14072                           
 14073                           ;MCU_16f1518_B1.c: 522: FREE=0;
 14074  1A3B  1215               	bcf	21,4	;volatile
 14075                           
 14076                           ;MCU_16f1518_B1.c: 523: LWLO=1;
 14077  1A3C  1695               	bsf	21,5	;volatile
 14078                           
 14079                           ;MCU_16f1518_B1.c: 524: WREN=1;
 14080  1A3D  1515               	bsf	21,2	;volatile
 14081                           
 14082                           ;MCU_16f1518_B1.c: 525: for(i=0 ; i<32 ; i++)
 14083  1A3E  0020               	movlb	0	; select bank0
 14084  1A3F  01A1               	clrf	Flash_Memory_Write@i
 14085  1A40  3020               	movlw	32
 14086  1A41  0221               	subwf	Flash_Memory_Write@i,w
 14087  1A42  1803               	btfsc	3,0
 14088  1A43  2A60               	goto	l1750
 14089  1A44                     l9131:	
 14090                           
 14091                           ;MCU_16f1518_B1.c: 526: {
 14092                           ;MCU_16f1518_B1.c: 527: PMADRL=i;
 14093  1A44  0821               	movf	Flash_Memory_Write@i,w
 14094  1A45  0023               	movlb	3	; select bank3
 14095  1A46  0091               	movwf	17	;volatile
 14096                           
 14097                           ;MCU_16f1518_B1.c: 528: PMDATL=Memory->Data[i];
 14098  1A47  0020               	movlb	0	; select bank0
 14099  1A48  0821               	movf	Flash_Memory_Write@i,w
 14100  1A49  0021               	movlb	1	; select bank1
 14101  1A4A  0768               	addwf	_Memory^(0+128),w
 14102  1A4B  0020               	movlb	0	; select bank0
 14103  1A4C  00A0               	movwf	??_Flash_Memory_Write
 14104  1A4D  0820               	movf	??_Flash_Memory_Write,w
 14105  1A4E  0086               	movwf	6
 14106  1A4F  3002               	movlw	2	; select bank4/5
 14107  1A50  0087               	movwf	7
 14108  1A51  0801               	movf	1,w
 14109  1A52  0023               	movlb	3	; select bank3
 14110  1A53  0093               	movwf	19	;volatile
 14111                           
 14112                           ;MCU_16f1518_B1.c: 529: Flash_Memory_Unlock();
 14113  1A54  31A3  2398  319A   	fcall	_Flash_Memory_Unlock
 14114  1A57  3001               	movlw	1
 14115  1A58  0020               	movlb	0	; select bank0
 14116  1A59  00A0               	movwf	??_Flash_Memory_Write
 14117  1A5A  0820               	movf	??_Flash_Memory_Write,w
 14118  1A5B  07A1               	addwf	Flash_Memory_Write@i,f
 14119  1A5C  3020               	movlw	32
 14120  1A5D  0221               	subwf	Flash_Memory_Write@i,w
 14121  1A5E  1C03               	skipc
 14122  1A5F  2A44               	goto	l9131
 14123  1A60                     l1750:	
 14124                           
 14125                           ;MCU_16f1518_B1.c: 530: }
 14126                           ;MCU_16f1518_B1.c: 531: LWLO=0;
 14127  1A60  0023               	movlb	3	; select bank3
 14128  1A61  1295               	bcf	21,5	;volatile
 14129                           
 14130                           ;MCU_16f1518_B1.c: 532: Flash_Memory_Unlock();
 14131  1A62  31A3  2398         	fcall	_Flash_Memory_Unlock
 14132                           
 14133                           ;MCU_16f1518_B1.c: 533: WREN=0;
 14134  1A64  0023               	movlb	3	; select bank3
 14135  1A65  1115               	bcf	21,2	;volatile
 14136  1A66  0008               	return
 14137  1A67                     __end_of_Flash_Memory_Write:	
 14138                           
 14139                           	psect	text79
 14140  2398                     __ptext79:	
 14141 ;; *************** function _Flash_Memory_Unlock *****************
 14142 ;; Defined at:
 14143 ;;		line 495 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;		None
 14146 ;; Auto vars:     Size  Location     Type
 14147 ;;		None
 14148 ;; Return value:  Size  Location     Type
 14149 ;;		None               void
 14150 ;; Registers used:
 14151 ;;		wreg
 14152 ;; Tracked objects:
 14153 ;;		On entry : 0/0
 14154 ;;		On exit  : 0/0
 14155 ;;		Unchanged: 0/0
 14156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;Total ram usage:        0 bytes
 14162 ;; Hardware stack levels used:    1
 14163 ;; Hardware stack levels required when called:    4
 14164 ;; This function calls:
 14165 ;;		Nothing
 14166 ;; This function is called by:
 14167 ;;		_Flash_Memory_Write
 14168 ;;		_Flash_Memory_Erasing
 14169 ;; This function uses a non-reentrant model
 14170 ;;
 14171                           
 14172                           
 14173                           ;psect for function _Flash_Memory_Unlock
 14174  2398                     _Flash_Memory_Unlock:	
 14175                           
 14176                           ;MCU_16f1518_B1.c: 497: PMCON2=0x55;
 14177                           
 14178                           ;incstack = 0
 14179                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 14180  2398  3055               	movlw	85
 14181  2399  0023               	movlb	3	; select bank3
 14182  239A  0096               	movwf	22	;volatile
 14183                           
 14184                           ;MCU_16f1518_B1.c: 498: PMCON2=0xaa;
 14185  239B  30AA               	movlw	170
 14186  239C  0096               	movwf	22	;volatile
 14187                           
 14188                           ;MCU_16f1518_B1.c: 499: WR=1;
 14189  239D  1495               	bsf	21,1	;volatile
 14190                           
 14191                           ;MCU_16f1518_B1.c: 500: __nop();
 14192  239E  0000               	nop
 14193                           
 14194                           ;MCU_16f1518_B1.c: 501: __nop();
 14195  239F  0000               	nop
 14196  23A0  0008               	return
 14197  23A1                     __end_of_Flash_Memory_Unlock:	
 14198                           
 14199                           	psect	text80
 14200  265D                     __ptext80:	
 14201 ;; *************** function _Flash_Memory_Read *****************
 14202 ;; Defined at:
 14203 ;;		line 504 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 14204 ;; Parameters:    Size  Location     Type
 14205 ;;  address         1    wreg     unsigned char 
 14206 ;; Auto vars:     Size  Location     Type
 14207 ;;  address         1    2[BANK0 ] unsigned char 
 14208 ;;  ret             1    3[BANK0 ] unsigned char 
 14209 ;;  i               1    1[BANK0 ] unsigned char 
 14210 ;; Return value:  Size  Location     Type
 14211 ;;                  1    wreg      unsigned char 
 14212 ;; Registers used:
 14213 ;;		wreg, status,2
 14214 ;; Tracked objects:
 14215 ;;		On entry : 0/0
 14216 ;;		On exit  : 0/0
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14220 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14221 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14222 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14223 ;;Total ram usage:        4 bytes
 14224 ;; Hardware stack levels used:    1
 14225 ;; Hardware stack levels required when called:    4
 14226 ;; This function calls:
 14227 ;;		Nothing
 14228 ;; This function is called by:
 14229 ;;		_Flash_Memory_Initialization
 14230 ;;		_Flash_Memory_Modify
 14231 ;; This function uses a non-reentrant model
 14232 ;;
 14233                           
 14234                           
 14235                           ;psect for function _Flash_Memory_Read
 14236  265D                     _Flash_Memory_Read:	
 14237                           
 14238                           ;incstack = 0
 14239                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 14240                           ;Flash_Memory_Read@address stored from wreg
 14241  265D  0020               	movlb	0	; select bank0
 14242  265E  00A2               	movwf	Flash_Memory_Read@address
 14243                           
 14244                           ;MCU_16f1518_B1.c: 506: char i,ret=0;
 14245  265F  01A3               	clrf	Flash_Memory_Read@ret
 14246                           
 14247                           ;MCU_16f1518_B1.c: 507: PMADRH=0x30;
 14248  2660  3030               	movlw	48
 14249  2661  0023               	movlb	3	; select bank3
 14250  2662  0092               	movwf	18	;volatile
 14251                           
 14252                           ;MCU_16f1518_B1.c: 508: PMADRL=address;
 14253  2663  0020               	movlb	0	; select bank0
 14254  2664  0822               	movf	Flash_Memory_Read@address,w
 14255  2665  0023               	movlb	3	; select bank3
 14256  2666  0091               	movwf	17	;volatile
 14257                           
 14258                           ;MCU_16f1518_B1.c: 509: CFGS=0;
 14259  2667  1315               	bcf	21,6	;volatile
 14260                           
 14261                           ;MCU_16f1518_B1.c: 510: RD=1;
 14262  2668  1415               	bsf	21,0	;volatile
 14263                           
 14264                           ;MCU_16f1518_B1.c: 511: i=PMDATH;
 14265  2669  0814               	movf	20,w	;volatile
 14266  266A  0020               	movlb	0	; select bank0
 14267  266B  00A0               	movwf	??_Flash_Memory_Read
 14268  266C  0820               	movf	??_Flash_Memory_Read,w
 14269  266D  00A1               	movwf	Flash_Memory_Read@i
 14270                           
 14271                           ;MCU_16f1518_B1.c: 512: ret=PMDATL;
 14272  266E  0023               	movlb	3	; select bank3
 14273  266F  0813               	movf	19,w	;volatile
 14274  2670  0020               	movlb	0	; select bank0
 14275  2671  00A0               	movwf	??_Flash_Memory_Read
 14276  2672  0820               	movf	??_Flash_Memory_Read,w
 14277  2673  00A3               	movwf	Flash_Memory_Read@ret
 14278                           
 14279                           ;MCU_16f1518_B1.c: 513: return ret;
 14280  2674  0823               	movf	Flash_Memory_Read@ret,w
 14281  2675  0008               	return
 14282  2676                     __end_of_Flash_Memory_Read:	
 14283                           
 14284                           	psect	text81
 14285  23E0                     __ptext81:	
 14286 ;; *************** function _DimmerLights_Main *****************
 14287 ;; Defined at:
 14288 ;;		line 103 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;		None
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;		None
 14293 ;; Return value:  Size  Location     Type
 14294 ;;		None               void
 14295 ;; Registers used:
 14296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14297 ;; Tracked objects:
 14298 ;;		On entry : 0/0
 14299 ;;		On exit  : 0/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14306 ;;Total ram usage:        0 bytes
 14307 ;; Hardware stack levels used:    1
 14308 ;; Hardware stack levels required when called:    9
 14309 ;; This function calls:
 14310 ;;		_DimmerLights_Close
 14311 ;;		_setDimmerLights_Main
 14312 ;; This function is called by:
 14313 ;;		_main
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           
 14318                           ;psect for function _DimmerLights_Main
 14319  23E0                     _DimmerLights_Main:	
 14320                           
 14321                           ;Dimmer_B1.c: 106: setDimmerLights_Main(1);
 14322                           
 14323                           ;incstack = 0
 14324                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14325  23E0  3001               	movlw	1
 14326  23E1  3196  264E  31A3   	fcall	_setDimmerLights_Main
 14327                           
 14328                           ;Dimmer_B1.c: 110: setDimmerLights_Main(2);
 14329  23E4  3002               	movlw	2
 14330  23E5  3196  264E  31A3   	fcall	_setDimmerLights_Main
 14331                           
 14332                           ;Dimmer_B1.c: 117: DimmerLights_Close();
 14333  23E8  31A6  26A9         	fcall	_DimmerLights_Close
 14334  23EA  0008               	return
 14335  23EB                     __end_of_DimmerLights_Main:	
 14336                           
 14337                           	psect	text82
 14338  164E                     __ptext82:	
 14339 ;; *************** function _setDimmerLights_Main *****************
 14340 ;; Defined at:
 14341 ;;		line 120 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14342 ;; Parameters:    Size  Location     Type
 14343 ;;  lights          1    wreg     unsigned char 
 14344 ;; Auto vars:     Size  Location     Type
 14345 ;;  lights          1   66[BANK0 ] unsigned char 
 14346 ;;  clear           1   65[BANK0 ] unsigned char 
 14347 ;; Return value:  Size  Location     Type
 14348 ;;		None               void
 14349 ;; Registers used:
 14350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14357 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14359 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14360 ;;Total ram usage:        2 bytes
 14361 ;; Hardware stack levels used:    1
 14362 ;; Hardware stack levels required when called:    8
 14363 ;; This function calls:
 14364 ;;		_DimmerLightsPointSelect
 14365 ;;		_getDimmerLights_Trigger
 14366 ;;		_setBuz
 14367 ;;		_setDimmerLights
 14368 ;;		_setDimmerLights_Adj
 14369 ;; This function is called by:
 14370 ;;		_DimmerLights_Main
 14371 ;; This function uses a non-reentrant model
 14372 ;;
 14373                           
 14374                           
 14375                           ;psect for function _setDimmerLights_Main
 14376  164E                     _setDimmerLights_Main:	
 14377                           
 14378                           ;incstack = 0
 14379                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14380                           ;setDimmerLights_Main@lights stored from wreg
 14381  164E  0020               	movlb	0	; select bank0
 14382  164F  00E2               	movwf	setDimmerLights_Main@lights
 14383                           
 14384                           ;Dimmer_B1.c: 122: char clear=1;
 14385  1650  01E1               	clrf	setDimmerLights_Main@clear
 14386  1651  0AE1               	incf	setDimmerLights_Main@clear,f
 14387                           
 14388                           ;Dimmer_B1.c: 123: DimmerLightsPointSelect(lights);
 14389  1652  0862               	movf	setDimmerLights_Main@lights,w
 14390  1653  31A5  2555  3196   	fcall	_DimmerLightsPointSelect
 14391                           
 14392                           ;Dimmer_B1.c: 124: if(DimmerLights->Trigger)
 14393  1656  0020               	movlb	0	; select bank0
 14394  1657  086C               	movf	_DimmerLights,w
 14395  1658  3E09               	addlw	9
 14396  1659  0086               	movwf	6
 14397  165A  3001               	movlw	1	; select bank2/3
 14398  165B  0087               	movwf	7
 14399  165C  1C81               	btfss	1,1
 14400  165D  2E9E               	goto	l9407
 14401                           
 14402                           ;Dimmer_B1.c: 125: {
 14403                           ;Dimmer_B1.c: 151: if(lights == 1)
 14404  165E  0862               	movf	setDimmerLights_Main@lights,w
 14405  165F  3A01               	xorlw	1
 14406  1660  1D03               	skipz
 14407  1661  2E64               	goto	l9385
 14408                           
 14409                           ;Dimmer_B1.c: 152: {
 14410                           ;Dimmer_B1.c: 153: if(!DimmerLights22->Clear)
 14411  1662  087A               	movf	_DimmerLights22,w
 14412  1663  2E69               	goto	L11
 14413  1664                     l9385:	
 14414                           ;Dimmer_B1.c: 156: }
 14415                           ;Dimmer_B1.c: 157: }
 14416                           
 14417                           ;Dimmer_B1.c: 154: {
 14418                           ;Dimmer_B1.c: 155: clear=0;
 14419                           
 14420                           
 14421                           ;Dimmer_B1.c: 158: else if(lights == 2)
 14422  1664  0862               	movf	setDimmerLights_Main@lights,w
 14423  1665  3A02               	xorlw	2
 14424  1666  1D03               	skipz
 14425  1667  2E6F               	goto	l9391
 14426                           
 14427                           ;Dimmer_B1.c: 159: {
 14428                           ;Dimmer_B1.c: 160: if(!DimmerLights11->Clear)
 14429  1668  0879               	movf	_DimmerLights11,w
 14430  1669                     L11:	
 14431  1669  3E0C               	addlw	12
 14432  166A  0086               	movwf	6
 14433  166B  3001               	movlw	1	; select bank2/3
 14434  166C  0087               	movwf	7
 14435  166D  1C01               	btfss	1,0
 14436                           
 14437                           ;Dimmer_B1.c: 161: {
 14438                           ;Dimmer_B1.c: 162: clear=0;
 14439  166E  01E1               	clrf	setDimmerLights_Main@clear
 14440  166F                     l9391:	
 14441                           
 14442                           ;Dimmer_B1.c: 163: }
 14443                           ;Dimmer_B1.c: 164: }
 14444                           ;Dimmer_B1.c: 169: if(clear)
 14445  166F  0861               	movf	setDimmerLights_Main@clear,w
 14446  1670  1903               	btfsc	3,2
 14447  1671  0008               	return
 14448                           
 14449                           ;Dimmer_B1.c: 170: {
 14450                           ;Dimmer_B1.c: 171: if(DimmerLights->Switch)
 14451  1672  086C               	movf	_DimmerLights,w
 14452  1673  3E09               	addlw	9
 14453  1674  0086               	movwf	6
 14454  1675  3001               	movlw	1	; select bank2/3
 14455  1676  0087               	movwf	7
 14456  1677  1C01               	btfss	1,0
 14457  1678  2E8C               	goto	l9401
 14458                           
 14459                           ;Dimmer_B1.c: 172: {
 14460                           ;Dimmer_B1.c: 173: DimmerLights->Trigger=0;
 14461  1679  086C               	movf	_DimmerLights,w
 14462  167A  3E09               	addlw	9
 14463  167B  0086               	movwf	6
 14464  167C  3001               	movlw	1	; select bank2/3
 14465  167D  0087               	movwf	7
 14466  167E  1081               	bcf	1,1
 14467                           
 14468                           ;Dimmer_B1.c: 174: setDimmerLights(lights,1);
 14469  167F  01A4               	clrf	setDimmerLights@status
 14470  1680  0AA4               	incf	setDimmerLights@status,f
 14471  1681  0862               	movf	setDimmerLights_Main@lights,w
 14472  1682  3194  244E         	fcall	_setDimmerLights
 14473                           
 14474                           ;Dimmer_B1.c: 177: DimmerLights->Clear=0;
 14475  1684  0020               	movlb	0	; select bank0
 14476  1685  086C               	movf	_DimmerLights,w
 14477  1686  3E0C               	addlw	12
 14478  1687  0086               	movwf	6
 14479  1688  3001               	movlw	1	; select bank2/3
 14480  1689  0087               	movwf	7
 14481  168A  1001               	bcf	1,0
 14482                           
 14483                           ;Dimmer_B1.c: 179: }
 14484  168B  0008               	return
 14485  168C                     l9401:	
 14486                           
 14487                           ;Dimmer_B1.c: 180: else
 14488                           ;Dimmer_B1.c: 181: {
 14489                           ;Dimmer_B1.c: 182: DimmerLights->Trigger=0;
 14490  168C  086C               	movf	_DimmerLights,w
 14491  168D  3E09               	addlw	9
 14492  168E  0086               	movwf	6
 14493  168F  3001               	movlw	1	; select bank2/3
 14494  1690  0087               	movwf	7
 14495  1691  1081               	bcf	1,1
 14496                           
 14497                           ;Dimmer_B1.c: 183: setDimmerLights(lights,0);
 14498  1692  01A4               	clrf	setDimmerLights@status
 14499  1693  0862               	movf	setDimmerLights_Main@lights,w
 14500  1694  3194  244E         	fcall	_setDimmerLights
 14501                           
 14502                           ;Dimmer_B1.c: 186: DimmerLights->Clear=0;
 14503  1696  0020               	movlb	0	; select bank0
 14504  1697  086C               	movf	_DimmerLights,w
 14505  1698  3E0C               	addlw	12
 14506  1699  0086               	movwf	6
 14507  169A  3001               	movlw	1	; select bank2/3
 14508  169B  0087               	movwf	7
 14509  169C  1001               	bcf	1,0
 14510                           
 14511                           ;Dimmer_B1.c: 188: }
 14512                           ;Dimmer_B1.c: 189: }
 14513                           ;Dimmer_B1.c: 190: }
 14514  169D  0008               	return
 14515  169E                     l9407:	
 14516                           
 14517                           ;Dimmer_B1.c: 191: else
 14518                           ;Dimmer_B1.c: 192: {
 14519                           ;Dimmer_B1.c: 193: if(DimmerLights->TriggerAdj)
 14520  169E  086C               	movf	_DimmerLights,w
 14521  169F  3E09               	addlw	9
 14522  16A0  0086               	movwf	6
 14523  16A1  3001               	movlw	1	; select bank2/3
 14524  16A2  0087               	movwf	7
 14525  16A3  1D81               	btfss	1,3
 14526  16A4  0008               	return
 14527                           
 14528                           ;Dimmer_B1.c: 194: {
 14529                           ;Dimmer_B1.c: 195: if(!getDimmerLights_Trigger())
 14530  16A5  31A5  257C  3196   	fcall	_getDimmerLights_Trigger
 14531  16A8  3800               	iorlw	0
 14532  16A9  1903               	btfsc	3,2
 14533  16AA  2EAD               	goto	l9411
 14534  16AB  0020               	movlb	0	; select bank0
 14535  16AC  0008               	return
 14536  16AD                     l9411:	
 14537                           
 14538                           ;Dimmer_B1.c: 196: {
 14539                           ;Dimmer_B1.c: 197: DimmerLightsPointSelect(lights);
 14540  16AD  0020               	movlb	0	; select bank0
 14541  16AE  0862               	movf	setDimmerLights_Main@lights,w
 14542  16AF  31A5  2555  3196   	fcall	_DimmerLightsPointSelect
 14543                           
 14544                           ;Dimmer_B1.c: 198: DimmerLights->TriggerAdj=0;
 14545  16B2  0020               	movlb	0	; select bank0
 14546  16B3  086C               	movf	_DimmerLights,w
 14547  16B4  3E09               	addlw	9
 14548  16B5  0086               	movwf	6
 14549  16B6  3001               	movlw	1	; select bank2/3
 14550  16B7  0087               	movwf	7
 14551  16B8  1181               	bcf	1,3
 14552                           
 14553                           ;Dimmer_B1.c: 199: if(DimmerLights->AdjGo)
 14554  16B9  086C               	movf	_DimmerLights,w
 14555  16BA  3E09               	addlw	9
 14556  16BB  0086               	movwf	6
 14557  16BC  3001               	movlw	1	; select bank2/3
 14558  16BD  0087               	movwf	7
 14559  16BE  1D01               	btfss	1,2
 14560  16BF  2ED0               	goto	l9419
 14561                           
 14562                           ;Dimmer_B1.c: 200: {
 14563                           ;Dimmer_B1.c: 201: setDimmerLights_Adj(lights,1);
 14564  16C0  01DD               	clrf	setDimmerLights_Adj@status
 14565  16C1  0ADD               	incf	setDimmerLights_Adj@status,f
 14566  16C2  0862               	movf	setDimmerLights_Main@lights,w
 14567  16C3  3190  20E2  3196   	fcall	_setDimmerLights_Adj
 14568                           
 14569                           ;Dimmer_B1.c: 202: setBuz(1,100);
 14570  16C6  3064               	movlw	100
 14571  16C7  0020               	movlb	0	; select bank0
 14572  16C8  00A6               	movwf	setBuz@time
 14573  16C9  3000               	movlw	0
 14574  16CA  00A7               	movwf	setBuz@time+1
 14575  16CB  3001               	movlw	1
 14576  16CC  3193  235E         	fcall	_setBuz
 14577                           
 14578                           ;Dimmer_B1.c: 203: }
 14579  16CE  0020               	movlb	0	; select bank0
 14580  16CF  0008               	return
 14581  16D0                     l9419:	
 14582                           
 14583                           ;Dimmer_B1.c: 204: else
 14584                           ;Dimmer_B1.c: 205: {
 14585                           ;Dimmer_B1.c: 206: setDimmerLights_Adj(lights,0);
 14586  16D0  0020               	movlb	0	; select bank0
 14587  16D1  01DD               	clrf	setDimmerLights_Adj@status
 14588  16D2  0862               	movf	setDimmerLights_Main@lights,w
 14589  16D3  3190  20E2         	fcall	_setDimmerLights_Adj
 14590  16D5  0020               	movlb	0	; select bank0
 14591  16D6  0008               	return
 14592  16D7                     __end_of_setDimmerLights_Main:	
 14593                           
 14594                           	psect	text83
 14595  10E2                     __ptext83:	
 14596 ;; *************** function _setDimmerLights_Adj *****************
 14597 ;; Defined at:
 14598 ;;		line 403 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14599 ;; Parameters:    Size  Location     Type
 14600 ;;  lights          1    wreg     unsigned char 
 14601 ;;  status          1   61[BANK0 ] unsigned char 
 14602 ;; Auto vars:     Size  Location     Type
 14603 ;;  lights          1   64[BANK0 ] unsigned char 
 14604 ;; Return value:  Size  Location     Type
 14605 ;;		None               void
 14606 ;; Registers used:
 14607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14608 ;; Tracked objects:
 14609 ;;		On entry : 0/0
 14610 ;;		On exit  : 0/0
 14611 ;;		Unchanged: 0/0
 14612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14613 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;Total ram usage:        4 bytes
 14618 ;; Hardware stack levels used:    1
 14619 ;; Hardware stack levels required when called:    7
 14620 ;; This function calls:
 14621 ;;		_DimmerLightsPointSelect
 14622 ;;		_setLoad_StatusOff
 14623 ;;		_setPercentValue
 14624 ;;		_setRF_DimmerLights
 14625 ;;		_setTxData
 14626 ;; This function is called by:
 14627 ;;		_setDimmerLights_Main
 14628 ;; This function uses a non-reentrant model
 14629 ;;
 14630                           
 14631                           
 14632                           ;psect for function _setDimmerLights_Adj
 14633  10E2                     _setDimmerLights_Adj:	
 14634                           
 14635                           ;incstack = 0
 14636                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14637                           ;setDimmerLights_Adj@lights stored from wreg
 14638  10E2  0020               	movlb	0	; select bank0
 14639  10E3  00E0               	movwf	setDimmerLights_Adj@lights
 14640                           
 14641                           ;Dimmer_B1.c: 405: DimmerLightsPointSelect(lights);
 14642  10E4  0860               	movf	setDimmerLights_Adj@lights,w
 14643  10E5  31A5  2555  3190   	fcall	_DimmerLightsPointSelect
 14644                           
 14645                           ;Dimmer_B1.c: 406: if(status)
 14646  10E8  0020               	movlb	0	; select bank0
 14647  10E9  085D               	movf	setDimmerLights_Adj@status,w
 14648  10EA  1903               	btfsc	3,2
 14649  10EB  28F7               	goto	l9103
 14650                           
 14651                           ;Dimmer_B1.c: 407: {
 14652                           ;Dimmer_B1.c: 408: DimmerLights->AdjFlag=1;
 14653  10EC  086C               	movf	_DimmerLights,w
 14654  10ED  0086               	movwf	6
 14655  10EE  3001               	movlw	1	; select bank2/3
 14656  10EF  0087               	movwf	7
 14657  10F0  1581               	bsf	1,3
 14658                           
 14659                           ;Dimmer_B1.c: 409: DimmerLights->Signal=1;
 14660  10F1  086C               	movf	_DimmerLights,w
 14661  10F2  0086               	movwf	6
 14662  10F3  3001               	movlw	1	; select bank2/3
 14663  10F4  0087               	movwf	7
 14664  10F5  1481               	bsf	1,1
 14665                           
 14666                           ;Dimmer_B1.c: 410: }
 14667  10F6  0008               	return
 14668  10F7                     l9103:	
 14669                           
 14670                           ;Dimmer_B1.c: 411: else
 14671                           ;Dimmer_B1.c: 412: {
 14672                           ;Dimmer_B1.c: 413: if(DimmerLights->AdjFlag)
 14673  10F7  086C               	movf	_DimmerLights,w
 14674  10F8  0086               	movwf	6
 14675  10F9  3001               	movlw	1	; select bank2/3
 14676  10FA  0087               	movwf	7
 14677  10FB  1D81               	btfss	1,3
 14678  10FC  0008               	return
 14679                           
 14680                           ;Dimmer_B1.c: 414: {
 14681                           ;Dimmer_B1.c: 415: DimmerLights->Signal=0;
 14682  10FD  086C               	movf	_DimmerLights,w
 14683  10FE  0086               	movwf	6
 14684  10FF  3001               	movlw	1	; select bank2/3
 14685  1100  0087               	movwf	7
 14686  1101  1081               	bcf	1,1
 14687                           
 14688                           ;Dimmer_B1.c: 416: DimmerLights->AdjFlag=0;
 14689  1102  086C               	movf	_DimmerLights,w
 14690  1103  0086               	movwf	6
 14691  1104  3001               	movlw	1	; select bank2/3
 14692  1105  0087               	movwf	7
 14693  1106  1181               	bcf	1,3
 14694                           
 14695                           ;Dimmer_B1.c: 417: setLoad_StatusOff(0,1);
 14696  1107  01A0               	clrf	setLoad_StatusOff@command
 14697  1108  0AA0               	incf	setLoad_StatusOff@command,f
 14698  1109  3000               	movlw	0
 14699  110A  319A  2205  3190   	fcall	_setLoad_StatusOff
 14700                           
 14701                           ;Dimmer_B1.c: 418: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 14702  110D  0020               	movlb	0	; select bank0
 14703  110E  086C               	movf	_DimmerLights,w
 14704  110F  3E04               	addlw	4
 14705  1110  0086               	movwf	6
 14706  1111  3001               	movlw	1	; select bank2/3
 14707  1112  0087               	movwf	7
 14708  1113  0801               	movf	1,w
 14709  1114  00DE               	movwf	??_setDimmerLights_Adj
 14710  1115  086C               	movf	_DimmerLights,w
 14711  1116  3E05               	addlw	5
 14712  1117  0086               	movwf	6
 14713  1118  3001               	movlw	1	; select bank2/3
 14714  1119  0087               	movwf	7
 14715  111A  085E               	movf	??_setDimmerLights_Adj,w
 14716  111B  0081               	movwf	1
 14717                           
 14718                           ;Dimmer_B1.c: 419: setRF_DimmerLights(lights,1);
 14719  111C  01A0               	clrf	setRF_DimmerLights@on
 14720  111D  0AA0               	incf	setRF_DimmerLights@on,f
 14721  111E  0860               	movf	setDimmerLights_Adj@lights,w
 14722  111F  319F  274A  3190   	fcall	_setRF_DimmerLights
 14723                           
 14724                           ;Dimmer_B1.c: 420: setTxData(1);
 14725  1122  3001               	movlw	1
 14726  1123  3199  2148  3190   	fcall	_setTxData
 14727                           
 14728                           ;Dimmer_B1.c: 421: Memory->Modify=1;
 14729  1126  0021               	movlb	1	; select bank1
 14730  1127  0868               	movf	_Memory^(0+128),w
 14731  1128  3E22               	addlw	34
 14732  1129  0086               	movwf	6
 14733  112A  3002               	movlw	2	; select bank4/5
 14734  112B  0087               	movwf	7
 14735  112C  1401               	bsf	1,0
 14736                           
 14737                           ;Dimmer_B1.c: 422: Product->Data[(20+lights)]=setPercentValue(DimmerLights->MaxmumValue)
      +                          ;
 14738  112D  0020               	movlb	0	; select bank0
 14739  112E  086C               	movf	_DimmerLights,w
 14740  112F  3E05               	addlw	5
 14741  1130  0086               	movwf	6
 14742  1131  3001               	movlw	1	; select bank2/3
 14743  1132  0087               	movwf	7
 14744  1133  0801               	movf	1,w
 14745  1134  319D  257C         	fcall	_setPercentValue
 14746  1136  0020               	movlb	0	; select bank0
 14747  1137  00DE               	movwf	??_setDimmerLights_Adj
 14748  1138  0860               	movf	setDimmerLights_Adj@lights,w
 14749  1139  3E14               	addlw	20
 14750  113A  076F               	addwf	_Product,w
 14751  113B  00DF               	movwf	??_setDimmerLights_Adj+1
 14752  113C  085F               	movf	??_setDimmerLights_Adj+1,w
 14753  113D  0086               	movwf	6
 14754  113E  3001               	movlw	1	; select bank2/3
 14755  113F  0087               	movwf	7
 14756  1140  085E               	movf	??_setDimmerLights_Adj,w
 14757  1141  0081               	movwf	1
 14758  1142  0008               	return
 14759  1143                     __end_of_setDimmerLights_Adj:	
 14760                           
 14761                           	psect	text84
 14762  1D7C                     __ptext84:	
 14763 ;; *************** function _setPercentValue *****************
 14764 ;; Defined at:
 14765 ;;		line 515 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14766 ;; Parameters:    Size  Location     Type
 14767 ;;  value           1    wreg     unsigned char 
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;  value           1   57[BANK0 ] unsigned char 
 14770 ;;  i               3   58[BANK0 ] float 
 14771 ;; Return value:  Size  Location     Type
 14772 ;;                  1    wreg      unsigned char 
 14773 ;; Registers used:
 14774 ;;		wreg, status,2, status,0, pclath, cstack
 14775 ;; Tracked objects:
 14776 ;;		On entry : 0/0
 14777 ;;		On exit  : 0/0
 14778 ;;		Unchanged: 0/0
 14779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;Total ram usage:        4 bytes
 14785 ;; Hardware stack levels used:    1
 14786 ;; Hardware stack levels required when called:    6
 14787 ;; This function calls:
 14788 ;;		___awtoft
 14789 ;;		___ftdiv
 14790 ;;		___fttol
 14791 ;; This function is called by:
 14792 ;;		_setDimmerLights_Adj
 14793 ;;		_Flash_Memory_Initialization
 14794 ;; This function uses a non-reentrant model
 14795 ;;
 14796                           
 14797                           
 14798                           ;psect for function _setPercentValue
 14799  1D7C                     _setPercentValue:	
 14800                           
 14801                           ;incstack = 0
 14802                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 14803                           ;setPercentValue@value stored from wreg
 14804  1D7C  0020               	movlb	0	; select bank0
 14805  1D7D  00D9               	movwf	setPercentValue@value
 14806                           
 14807                           ;Dimmer_B1.c: 518: float i=((char)((100-20)*1.5))-((char)((100-60)*1.5));
 14808  1D7E  3000               	movlw	0
 14809  1D7F  00DA               	movwf	setPercentValue@i
 14810  1D80  3070               	movlw	112
 14811  1D81  00DB               	movwf	setPercentValue@i+1
 14812  1D82  3042               	movlw	66
 14813  1D83  00DC               	movwf	setPercentValue@i+2
 14814                           
 14815                           ;Dimmer_B1.c: 519: i/=100;
 14816  1D84  3000               	movlw	0
 14817  1D85  00AE               	movwf	___ftdiv@f2
 14818  1D86  30C8               	movlw	200
 14819  1D87  00AF               	movwf	___ftdiv@f2+1
 14820  1D88  3042               	movlw	66
 14821  1D89  00B0               	movwf	___ftdiv@f2+2
 14822  1D8A  085A               	movf	setPercentValue@i,w
 14823  1D8B  00B1               	movwf	___ftdiv@f1
 14824  1D8C  085B               	movf	setPercentValue@i+1,w
 14825  1D8D  00B2               	movwf	___ftdiv@f1+1
 14826  1D8E  085C               	movf	setPercentValue@i+2,w
 14827  1D8F  00B3               	movwf	___ftdiv@f1+2
 14828  1D90  3189  2151  319D   	fcall	___ftdiv
 14829  1D93  0020               	movlb	0	; select bank0
 14830  1D94  082E               	movf	?___ftdiv,w
 14831  1D95  00DA               	movwf	setPercentValue@i
 14832  1D96  082F               	movf	?___ftdiv+1,w
 14833  1D97  00DB               	movwf	setPercentValue@i+1
 14834  1D98  0830               	movf	?___ftdiv+2,w
 14835  1D99  00DC               	movwf	setPercentValue@i+2
 14836                           
 14837                           ;Dimmer_B1.c: 520: return (100-(char)((value-((char)((100-60)*1.5)))/i));
 14838  1D9A  0859               	movf	setPercentValue@value,w
 14839  1D9B  3EC4               	addlw	196
 14840  1D9C  00A8               	movwf	___awtoft@c
 14841  1D9D  30FF               	movlw	255
 14842  1D9E  1803               	skipnc
 14843  1D9F  3000               	movlw	0
 14844  1DA0  00A9               	movwf	___awtoft@c+1
 14845  1DA1  31A7  2775  319D   	fcall	___awtoft
 14846  1DA4  0020               	movlb	0	; select bank0
 14847  1DA5  0828               	movf	?___awtoft,w
 14848  1DA6  00B1               	movwf	___ftdiv@f1
 14849  1DA7  0829               	movf	?___awtoft+1,w
 14850  1DA8  00B2               	movwf	___ftdiv@f1+1
 14851  1DA9  082A               	movf	?___awtoft+2,w
 14852  1DAA  00B3               	movwf	___ftdiv@f1+2
 14853  1DAB  085A               	movf	setPercentValue@i,w
 14854  1DAC  00AE               	movwf	___ftdiv@f2
 14855  1DAD  085B               	movf	setPercentValue@i+1,w
 14856  1DAE  00AF               	movwf	___ftdiv@f2+1
 14857  1DAF  085C               	movf	setPercentValue@i+2,w
 14858  1DB0  00B0               	movwf	___ftdiv@f2+2
 14859  1DB1  3189  2151  319D   	fcall	___ftdiv
 14860  1DB4  0020               	movlb	0	; select bank0
 14861  1DB5  082E               	movf	?___ftdiv,w
 14862  1DB6  00CB               	movwf	___fttol@f1
 14863  1DB7  082F               	movf	?___ftdiv+1,w
 14864  1DB8  00CC               	movwf	___fttol@f1+1
 14865  1DB9  0830               	movf	?___ftdiv+2,w
 14866  1DBA  00CD               	movwf	___fttol@f1+2
 14867  1DBB  3195  25C7         	fcall	___fttol
 14868  1DBD  0020               	movlb	0	; select bank0
 14869  1DBE  034B               	decf	?___fttol,w
 14870  1DBF  3AFF               	xorlw	255
 14871  1DC0  3E64               	addlw	100
 14872  1DC1  0008               	return
 14873  1DC2                     __end_of_setPercentValue:	
 14874                           
 14875                           	psect	text85
 14876  1A05                     __ptext85:	
 14877 ;; *************** function _setLoad_StatusOff *****************
 14878 ;; Defined at:
 14879 ;;		line 279 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 14880 ;; Parameters:    Size  Location     Type
 14881 ;;  lights          1    wreg     unsigned char 
 14882 ;;  command         1    0[BANK0 ] unsigned char 
 14883 ;; Auto vars:     Size  Location     Type
 14884 ;;  lights          1    1[BANK0 ] unsigned char 
 14885 ;; Return value:  Size  Location     Type
 14886 ;;		None               void
 14887 ;; Registers used:
 14888 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14889 ;; Tracked objects:
 14890 ;;		On entry : 0/0
 14891 ;;		On exit  : 0/0
 14892 ;;		Unchanged: 0/0
 14893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14894 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14897 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14898 ;;Total ram usage:        2 bytes
 14899 ;; Hardware stack levels used:    1
 14900 ;; Hardware stack levels required when called:    4
 14901 ;; This function calls:
 14902 ;;		Nothing
 14903 ;; This function is called by:
 14904 ;;		_setDimmerLights_ERROR
 14905 ;;		_setDimmerLights_Adj
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909                           
 14910                           ;psect for function _setLoad_StatusOff
 14911  1A05                     _setLoad_StatusOff:	
 14912                           
 14913                           ;incstack = 0
 14914                           ; Regs used in _setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0]
 14915                           ;setLoad_StatusOff@lights stored from wreg
 14916  1A05  0020               	movlb	0	; select bank0
 14917  1A06  00A1               	movwf	setLoad_StatusOff@lights
 14918                           
 14919                           ;OverLoad_B1.c: 281: Load->StatusOff=command;
 14920  1A07  086E               	movf	_Load,w
 14921  1A08  3E46               	addlw	70
 14922  1A09  0086               	movwf	6
 14923  1A0A  3002               	movlw	2	; select bank4/5
 14924  1A0B  0087               	movwf	7
 14925  1A0C  0820               	movf	setLoad_StatusOff@command,w
 14926  1A0D  1081               	bcf	1,1
 14927  1A0E  1D03               	skipz
 14928  1A0F  1481               	bsf	1,1
 14929                           
 14930                           ;OverLoad_B1.c: 282: Load->SafeCount-=2;
 14931  1A10  086E               	movf	_Load,w
 14932  1A11  3E42               	addlw	66
 14933  1A12  0086               	movwf	6
 14934  1A13  3002               	movlw	2	; select bank4/5
 14935  1A14  0087               	movwf	7
 14936  1A15  3002               	movlw	2
 14937  1A16  0281               	subwf	1,f
 14938                           
 14939                           ;OverLoad_B1.c: 283: if(lights == 1)
 14940  1A17  0821               	movf	setLoad_StatusOff@lights,w
 14941  1A18  3A01               	xorlw	1
 14942  1A19  1D03               	skipz
 14943  1A1A  2A21               	goto	l8733
 14944                           
 14945                           ;OverLoad_B1.c: 284: {
 14946                           ;OverLoad_B1.c: 285: Load->Lights1Status=0;
 14947  1A1B  086E               	movf	_Load,w
 14948  1A1C  3E43               	addlw	67
 14949  1A1D  0086               	movwf	6
 14950  1A1E  3002               	movlw	2	; select bank4/5
 14951  1A1F  0087               	movwf	7
 14952  1A20  0181               	clrf	1
 14953  1A21                     l8733:	
 14954                           
 14955                           ;OverLoad_B1.c: 286: }
 14956                           ;OverLoad_B1.c: 287: if(lights == 2)
 14957  1A21  0821               	movf	setLoad_StatusOff@lights,w
 14958  1A22  3A02               	xorlw	2
 14959  1A23  1D03               	skipz
 14960  1A24  2A2B               	goto	l8737
 14961                           
 14962                           ;OverLoad_B1.c: 288: {
 14963                           ;OverLoad_B1.c: 289: Load->Lights2Status=0;
 14964  1A25  086E               	movf	_Load,w
 14965  1A26  3E44               	addlw	68
 14966  1A27  0086               	movwf	6
 14967  1A28  3002               	movlw	2	; select bank4/5
 14968  1A29  0087               	movwf	7
 14969  1A2A  0181               	clrf	1
 14970  1A2B                     l8737:	
 14971                           
 14972                           ;OverLoad_B1.c: 290: }
 14973                           ;OverLoad_B1.c: 291: if(lights == 3)
 14974  1A2B  0821               	movf	setLoad_StatusOff@lights,w
 14975  1A2C  3A03               	xorlw	3
 14976  1A2D  1D03               	skipz
 14977  1A2E  0008               	return
 14978                           
 14979                           ;OverLoad_B1.c: 292: {
 14980                           ;OverLoad_B1.c: 293: Load->Lights3Status=0;
 14981  1A2F  086E               	movf	_Load,w
 14982  1A30  3E45               	addlw	69
 14983  1A31  0086               	movwf	6
 14984  1A32  3002               	movlw	2	; select bank4/5
 14985  1A33  0087               	movwf	7
 14986  1A34  0181               	clrf	1
 14987  1A35  0008               	return
 14988  1A36                     __end_of_setLoad_StatusOff:	
 14989                           
 14990                           	psect	text86
 14991  144E                     __ptext86:	
 14992 ;; *************** function _setDimmerLights *****************
 14993 ;; Defined at:
 14994 ;;		line 350 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14995 ;; Parameters:    Size  Location     Type
 14996 ;;  lights          1    wreg     unsigned char 
 14997 ;;  status          1    4[BANK0 ] unsigned char 
 14998 ;; Auto vars:     Size  Location     Type
 14999 ;;  lights          1    6[BANK0 ] unsigned char 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;		None               void
 15002 ;; Registers used:
 15003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/0
 15006 ;;		On exit  : 0/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15009 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;Total ram usage:        3 bytes
 15014 ;; Hardware stack levels used:    1
 15015 ;; Hardware stack levels required when called:    6
 15016 ;; This function calls:
 15017 ;;		_DimmerLightsPointSelect
 15018 ;;		_setLED
 15019 ;;		_setLoad_Count
 15020 ;;		_setLoad_StatusOn
 15021 ;; This function is called by:
 15022 ;;		_setDimmerLights_Main
 15023 ;;		_setControl_Lights_Table
 15024 ;; This function uses a non-reentrant model
 15025 ;;
 15026                           
 15027                           
 15028                           ;psect for function _setDimmerLights
 15029  144E                     _setDimmerLights:	
 15030                           
 15031                           ;incstack = 0
 15032                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15033                           ;setDimmerLights@lights stored from wreg
 15034  144E  0020               	movlb	0	; select bank0
 15035  144F  00A6               	movwf	setDimmerLights@lights
 15036                           
 15037                           ;Dimmer_B1.c: 352: DimmerLightsPointSelect(lights);
 15038  1450  0826               	movf	setDimmerLights@lights,w
 15039  1451  31A5  2555  3194   	fcall	_DimmerLightsPointSelect
 15040                           
 15041                           ;Dimmer_B1.c: 353: Dimmer->Load=lights;
 15042  1454  0020               	movlb	0	; select bank0
 15043  1455  0826               	movf	setDimmerLights@lights,w
 15044  1456  00A5               	movwf	??_setDimmerLights
 15045  1457  0021               	movlb	1	; select bank1
 15046  1458  0A39               	incf	_Dimmer^(0+128),w
 15047  1459  0086               	movwf	6
 15048  145A  0187               	clrf	7
 15049  145B  0020               	movlb	0	; select bank0
 15050  145C  0825               	movf	??_setDimmerLights,w
 15051  145D  0081               	movwf	1
 15052                           
 15053                           ;Dimmer_B1.c: 354: if(status)
 15054  145E  0824               	movf	setDimmerLights@status,w
 15055  145F  1903               	btfsc	3,2
 15056  1460  2C9E               	goto	l8833
 15057                           
 15058                           ;Dimmer_B1.c: 355: {
 15059                           ;Dimmer_B1.c: 356: DimmerLights->Status=1;
 15060  1461  086C               	movf	_DimmerLights,w
 15061  1462  0086               	movwf	6
 15062  1463  3001               	movlw	1	; select bank2/3
 15063  1464  0087               	movwf	7
 15064  1465  1681               	bsf	1,5
 15065                           
 15066                           ;Dimmer_B1.c: 357: setLED(lights,0);
 15067  1466  01A2               	clrf	setLED@command
 15068  1467  0826               	movf	setDimmerLights@lights,w
 15069  1468  3190  2023  3194   	fcall	_setLED
 15070                           
 15071                           ;Dimmer_B1.c: 359: setLoad_Count(0);
 15072  146B  3000               	movlw	0
 15073  146C  3198  2066  3194   	fcall	_setLoad_Count
 15074                           
 15075                           ;Dimmer_B1.c: 361: DimmerLights->Signal=1;
 15076  146F  0020               	movlb	0	; select bank0
 15077  1470  086C               	movf	_DimmerLights,w
 15078  1471  0086               	movwf	6
 15079  1472  3001               	movlw	1	; select bank2/3
 15080  1473  0087               	movwf	7
 15081  1474  1481               	bsf	1,1
 15082                           
 15083                           ;Dimmer_B1.c: 362: DimmerLights->DimmingTimeValue=3;
 15084  1475  3003               	movlw	3
 15085  1476  00A5               	movwf	??_setDimmerLights
 15086  1477  086C               	movf	_DimmerLights,w
 15087  1478  3E02               	addlw	2
 15088  1479  0086               	movwf	6
 15089  147A  3001               	movlw	1	; select bank2/3
 15090  147B  0087               	movwf	7
 15091  147C  0825               	movf	??_setDimmerLights,w
 15092  147D  0081               	movwf	1
 15093                           
 15094                           ;Dimmer_B1.c: 364: if(!DimmerLights->StatusFlag)
 15095  147E  086C               	movf	_DimmerLights,w
 15096  147F  0086               	movwf	6
 15097  1480  3001               	movlw	1	; select bank2/3
 15098  1481  0087               	movwf	7
 15099  1482  1B01               	btfsc	1,6
 15100  1483  0008               	return
 15101                           
 15102                           ;Dimmer_B1.c: 365: {
 15103                           ;Dimmer_B1.c: 366: DimmerLights->StatusFlag=1;
 15104  1484  086C               	movf	_DimmerLights,w
 15105  1485  0086               	movwf	6
 15106  1486  3001               	movlw	1	; select bank2/3
 15107  1487  0087               	movwf	7
 15108  1488  1701               	bsf	1,6
 15109                           
 15110                           ;Dimmer_B1.c: 367: setLoad_StatusOn(lights,1);
 15111  1489  01A0               	clrf	setLoad_StatusOn@command
 15112  148A  0AA0               	incf	setLoad_StatusOn@command,f
 15113  148B  0826               	movf	setDimmerLights@lights,w
 15114  148C  319A  2267         	fcall	_setLoad_StatusOn
 15115                           
 15116                           ;Dimmer_B1.c: 370: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 15117  148E  0020               	movlb	0	; select bank0
 15118  148F  086C               	movf	_DimmerLights,w
 15119  1490  3E05               	addlw	5
 15120  1491  0086               	movwf	6
 15121  1492  3001               	movlw	1	; select bank2/3
 15122  1493  0087               	movwf	7
 15123  1494  0801               	movf	1,w
 15124  1495  00A5               	movwf	??_setDimmerLights
 15125  1496  086C               	movf	_DimmerLights,w
 15126  1497  3E04               	addlw	4
 15127  1498  0086               	movwf	6
 15128  1499  3001               	movlw	1	; select bank2/3
 15129  149A  0087               	movwf	7
 15130  149B  0825               	movf	??_setDimmerLights,w
 15131  149C  0081               	movwf	1
 15132                           
 15133                           ;Dimmer_B1.c: 372: }
 15134                           ;Dimmer_B1.c: 373: }
 15135  149D  0008               	return
 15136  149E                     l8833:	
 15137                           
 15138                           ;Dimmer_B1.c: 374: else
 15139                           ;Dimmer_B1.c: 375: {
 15140                           ;Dimmer_B1.c: 376: DimmerLights->Status=0;
 15141  149E  086C               	movf	_DimmerLights,w
 15142  149F  0086               	movwf	6
 15143  14A0  3001               	movlw	1	; select bank2/3
 15144  14A1  0087               	movwf	7
 15145  14A2  1281               	bcf	1,5
 15146                           
 15147                           ;Dimmer_B1.c: 378: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 15148  14A3  086C               	movf	_DimmerLights,w
 15149  14A4  3E06               	addlw	6
 15150  14A5  0086               	movwf	6
 15151  14A6  3001               	movlw	1	; select bank2/3
 15152  14A7  0087               	movwf	7
 15153  14A8  0801               	movf	1,w
 15154  14A9  00A5               	movwf	??_setDimmerLights
 15155  14AA  086C               	movf	_DimmerLights,w
 15156  14AB  3E04               	addlw	4
 15157  14AC  0086               	movwf	6
 15158  14AD  3001               	movlw	1	; select bank2/3
 15159  14AE  0087               	movwf	7
 15160  14AF  0825               	movf	??_setDimmerLights,w
 15161  14B0  0081               	movwf	1
 15162                           
 15163                           ;Dimmer_B1.c: 385: DimmerLights->Signal=1;
 15164  14B1  086C               	movf	_DimmerLights,w
 15165  14B2  0086               	movwf	6
 15166  14B3  3001               	movlw	1	; select bank2/3
 15167  14B4  0087               	movwf	7
 15168  14B5  1481               	bsf	1,1
 15169                           
 15170                           ;Dimmer_B1.c: 386: DimmerLights->AdjFlag=0;
 15171  14B6  086C               	movf	_DimmerLights,w
 15172  14B7  0086               	movwf	6
 15173  14B8  3001               	movlw	1	; select bank2/3
 15174  14B9  0087               	movwf	7
 15175  14BA  1181               	bcf	1,3
 15176                           
 15177                           ;Dimmer_B1.c: 387: DimmerLights->AdjStatus=0;
 15178  14BB  086C               	movf	_DimmerLights,w
 15179  14BC  0086               	movwf	6
 15180  14BD  3001               	movlw	1	; select bank2/3
 15181  14BE  0087               	movwf	7
 15182  14BF  1201               	bcf	1,4
 15183                           
 15184                           ;Dimmer_B1.c: 388: DimmerLights->DimmingTimeValue=3;
 15185  14C0  3003               	movlw	3
 15186  14C1  00A5               	movwf	??_setDimmerLights
 15187  14C2  086C               	movf	_DimmerLights,w
 15188  14C3  3E02               	addlw	2
 15189  14C4  0086               	movwf	6
 15190  14C5  3001               	movlw	1	; select bank2/3
 15191  14C6  0087               	movwf	7
 15192  14C7  0825               	movf	??_setDimmerLights,w
 15193  14C8  0081               	movwf	1
 15194  14C9  0008               	return
 15195  14CA                     __end_of_setDimmerLights:	
 15196                           
 15197                           	psect	text87
 15198  1A67                     __ptext87:	
 15199 ;; *************** function _setLoad_StatusOn *****************
 15200 ;; Defined at:
 15201 ;;		line 261 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 15202 ;; Parameters:    Size  Location     Type
 15203 ;;  lights          1    wreg     unsigned char 
 15204 ;;  command         1    0[BANK0 ] unsigned char 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;  lights          1    1[BANK0 ] unsigned char 
 15207 ;; Return value:  Size  Location     Type
 15208 ;;		None               void
 15209 ;; Registers used:
 15210 ;;		wreg, fsr1l, fsr1h
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15216 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15219 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15220 ;;Total ram usage:        2 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:    4
 15223 ;; This function calls:
 15224 ;;		Nothing
 15225 ;; This function is called by:
 15226 ;;		_setDimmerLights
 15227 ;; This function uses a non-reentrant model
 15228 ;;
 15229                           
 15230                           
 15231                           ;psect for function _setLoad_StatusOn
 15232  1A67                     _setLoad_StatusOn:	
 15233                           
 15234                           ;incstack = 0
 15235                           ; Regs used in _setLoad_StatusOn: [wregfsr1]
 15236                           ;setLoad_StatusOn@lights stored from wreg
 15237  1A67  0020               	movlb	0	; select bank0
 15238  1A68  00A1               	movwf	setLoad_StatusOn@lights
 15239                           
 15240                           ;OverLoad_B1.c: 263: Load->GO=1;
 15241  1A69  086E               	movf	_Load,w
 15242  1A6A  0086               	movwf	6
 15243  1A6B  3002               	movlw	2	; select bank4/5
 15244  1A6C  0087               	movwf	7
 15245  1A6D  1481               	bsf	1,1
 15246                           
 15247                           ;OverLoad_B1.c: 264: Load->StatusOn=command;
 15248  1A6E  086E               	movf	_Load,w
 15249  1A6F  3E46               	addlw	70
 15250  1A70  0086               	movwf	6
 15251  1A71  3002               	movlw	2	; select bank4/5
 15252  1A72  0087               	movwf	7
 15253  1A73  0820               	movf	setLoad_StatusOn@command,w
 15254  1A74  1001               	bcf	1,0
 15255  1A75  1D03               	skipz
 15256  1A76  1401               	bsf	1,0
 15257                           
 15258                           ;OverLoad_B1.c: 266: if(lights == 1)
 15259  1A77  0821               	movf	setLoad_StatusOn@lights,w
 15260  1A78  3A01               	xorlw	1
 15261  1A79  1D03               	skipz
 15262  1A7A  2A82               	goto	l8797
 15263                           
 15264                           ;OverLoad_B1.c: 267: {
 15265                           ;OverLoad_B1.c: 268: Load->Lights1Status=1;
 15266  1A7B  086E               	movf	_Load,w
 15267  1A7C  3E43               	addlw	67
 15268  1A7D  0086               	movwf	6
 15269  1A7E  3002               	movlw	2	; select bank4/5
 15270  1A7F  0087               	movwf	7
 15271  1A80  0181               	clrf	1
 15272  1A81  0A81               	incf	1,f
 15273  1A82                     l8797:	
 15274                           
 15275                           ;OverLoad_B1.c: 269: }
 15276                           ;OverLoad_B1.c: 270: if(lights == 2)
 15277  1A82  0821               	movf	setLoad_StatusOn@lights,w
 15278  1A83  3A02               	xorlw	2
 15279  1A84  1D03               	skipz
 15280  1A85  2A8D               	goto	l8801
 15281                           
 15282                           ;OverLoad_B1.c: 271: {
 15283                           ;OverLoad_B1.c: 272: Load->Lights2Status=1;
 15284  1A86  086E               	movf	_Load,w
 15285  1A87  3E44               	addlw	68
 15286  1A88  0086               	movwf	6
 15287  1A89  3002               	movlw	2	; select bank4/5
 15288  1A8A  0087               	movwf	7
 15289  1A8B  0181               	clrf	1
 15290  1A8C  0A81               	incf	1,f
 15291  1A8D                     l8801:	
 15292                           
 15293                           ;OverLoad_B1.c: 273: }
 15294                           ;OverLoad_B1.c: 274: if(lights == 3)
 15295  1A8D  0821               	movf	setLoad_StatusOn@lights,w
 15296  1A8E  3A03               	xorlw	3
 15297  1A8F  1D03               	skipz
 15298  1A90  0008               	return
 15299                           
 15300                           ;OverLoad_B1.c: 275: {
 15301                           ;OverLoad_B1.c: 276: Load->Lights3Status=1;
 15302  1A91  086E               	movf	_Load,w
 15303  1A92  3E45               	addlw	69
 15304  1A93  0086               	movwf	6
 15305  1A94  3002               	movlw	2	; select bank4/5
 15306  1A95  0087               	movwf	7
 15307  1A96  0181               	clrf	1
 15308  1A97  0A81               	incf	1,f
 15309  1A98  0008               	return
 15310  1A99                     __end_of_setLoad_StatusOn:	
 15311                           
 15312                           	psect	text88
 15313  1866                     __ptext88:	
 15314 ;; *************** function _setLoad_Count *****************
 15315 ;; Defined at:
 15316 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 15317 ;; Parameters:    Size  Location     Type
 15318 ;;  command         1    wreg     unsigned char 
 15319 ;; Auto vars:     Size  Location     Type
 15320 ;;  command         1    1[BANK0 ] unsigned char 
 15321 ;; Return value:  Size  Location     Type
 15322 ;;		None               void
 15323 ;; Registers used:
 15324 ;;		wreg, fsr1l, fsr1h
 15325 ;; Tracked objects:
 15326 ;;		On entry : 0/0
 15327 ;;		On exit  : 0/0
 15328 ;;		Unchanged: 0/0
 15329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15334 ;;Total ram usage:        2 bytes
 15335 ;; Hardware stack levels used:    1
 15336 ;; Hardware stack levels required when called:    4
 15337 ;; This function calls:
 15338 ;;		Nothing
 15339 ;; This function is called by:
 15340 ;;		_setDimmerLights
 15341 ;; This function uses a non-reentrant model
 15342 ;;
 15343                           
 15344                           
 15345                           ;psect for function _setLoad_Count
 15346  1866                     _setLoad_Count:	
 15347                           
 15348                           ;incstack = 0
 15349                           ; Regs used in _setLoad_Count: [wregfsr1]
 15350                           ;setLoad_Count@command stored from wreg
 15351  1866  0020               	movlb	0	; select bank0
 15352  1867  00A1               	movwf	setLoad_Count@command
 15353                           
 15354                           ;OverLoad_B1.c: 248: Load->Count=command;
 15355  1868  0821               	movf	setLoad_Count@command,w
 15356  1869  00A0               	movwf	??_setLoad_Count
 15357  186A  086E               	movf	_Load,w
 15358  186B  3E3A               	addlw	58
 15359  186C  0086               	movwf	6
 15360  186D  3002               	movlw	2	; select bank4/5
 15361  186E  0087               	movwf	7
 15362  186F  0820               	movf	??_setLoad_Count,w
 15363  1870  0081               	movwf	1
 15364                           
 15365                           ;OverLoad_B1.c: 249: Load->SafeCount=command;
 15366  1871  0821               	movf	setLoad_Count@command,w
 15367  1872  00A0               	movwf	??_setLoad_Count
 15368  1873  086E               	movf	_Load,w
 15369  1874  3E42               	addlw	66
 15370  1875  0086               	movwf	6
 15371  1876  3002               	movlw	2	; select bank4/5
 15372  1877  0087               	movwf	7
 15373  1878  0820               	movf	??_setLoad_Count,w
 15374  1879  0081               	movwf	1
 15375  187A  0008               	return
 15376  187B                     __end_of_setLoad_Count:	
 15377                           
 15378                           	psect	text89
 15379  1023                     __ptext89:	
 15380 ;; *************** function _setLED *****************
 15381 ;; Defined at:
 15382 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;  led             1    wreg     unsigned char 
 15385 ;;  command         1    2[BANK0 ] unsigned char 
 15386 ;; Auto vars:     Size  Location     Type
 15387 ;;  led             1    3[BANK0 ] unsigned char 
 15388 ;; Return value:  Size  Location     Type
 15389 ;;		None               void
 15390 ;; Registers used:
 15391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15392 ;; Tracked objects:
 15393 ;;		On entry : 0/0
 15394 ;;		On exit  : 0/0
 15395 ;;		Unchanged: 0/0
 15396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15397 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;Total ram usage:        2 bytes
 15402 ;; Hardware stack levels used:    1
 15403 ;; Hardware stack levels required when called:    5
 15404 ;; This function calls:
 15405 ;;		_LedPointSelect
 15406 ;; This function is called by:
 15407 ;;		_setDimmerLights_ERROR
 15408 ;;		_setDimmerLights
 15409 ;;		_setLED_Initialization
 15410 ;;		_setLoad_Exceptions
 15411 ;;		_setOverTemp_Exceptions
 15412 ;;		_setPowerFault_Exceptions
 15413 ;;		_setSw_Initialization
 15414 ;; This function uses a non-reentrant model
 15415 ;;
 15416                           
 15417                           
 15418                           ;psect for function _setLED
 15419  1023                     _setLED:	
 15420                           
 15421                           ;incstack = 0
 15422                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15423                           ;setLED@led stored from wreg
 15424  1023  0020               	movlb	0	; select bank0
 15425  1024  00A3               	movwf	setLED@led
 15426                           
 15427                           ;LED_B1.c: 76: LedPointSelect(led);
 15428  1025  0823               	movf	setLED@led,w
 15429  1026  31A7  2797  3190   	fcall	_LedPointSelect
 15430                           
 15431                           ;LED_B1.c: 77: if(command == 0)
 15432  1029  0020               	movlb	0	; select bank0
 15433  102A  08A2               	movf	setLED@command,f
 15434  102B  1D03               	skipz
 15435  102C  283F               	goto	l8757
 15436                           
 15437                           ;LED_B1.c: 78: {
 15438                           ;LED_B1.c: 80: if(led == 1)
 15439  102D  0823               	movf	setLED@led,w
 15440  102E  3A01               	xorlw	1
 15441  102F  1D03               	skipz
 15442  1030  2833               	goto	l8749
 15443                           
 15444                           ;LED_B1.c: 81: {
 15445                           ;LED_B1.c: 85: RC7=1;
 15446  1031  178E               	bsf	14,7	;volatile
 15447                           
 15448                           ;LED_B1.c: 87: }
 15449  1032  0008               	return
 15450  1033                     l8749:	
 15451                           
 15452                           ;LED_B1.c: 90: else if(led == 2)
 15453  1033  0823               	movf	setLED@led,w
 15454  1034  3A02               	xorlw	2
 15455  1035  1D03               	skipz
 15456  1036  2839               	goto	l8753
 15457                           
 15458                           ;LED_B1.c: 91: {
 15459                           ;LED_B1.c: 95: RA3=1;
 15460  1037  158C               	bsf	12,3	;volatile
 15461                           
 15462                           ;LED_B1.c: 97: }
 15463  1038  0008               	return
 15464  1039                     l8753:	
 15465                           
 15466                           ;LED_B1.c: 110: else if(led == 99)
 15467  1039  0823               	movf	setLED@led,w
 15468  103A  3A63               	xorlw	99
 15469  103B  1D03               	skipz
 15470  103C  0008               	return
 15471                           
 15472                           ;LED_B1.c: 111: {
 15473                           ;LED_B1.c: 115: RB5=1;
 15474  103D  168D               	bsf	13,5	;volatile
 15475                           
 15476                           ;LED_B1.c: 117: }
 15477                           ;LED_B1.c: 119: }
 15478  103E  0008               	return
 15479  103F                     l8757:	
 15480                           
 15481                           ;LED_B1.c: 120: else if(command == 1)
 15482  103F  0822               	movf	setLED@command,w
 15483  1040  3A01               	xorlw	1
 15484  1041  1D03               	skipz
 15485  1042  2855               	goto	l8771
 15486                           
 15487                           ;LED_B1.c: 121: {
 15488                           ;LED_B1.c: 123: if(led == 1)
 15489  1043  0823               	movf	setLED@led,w
 15490  1044  3A01               	xorlw	1
 15491  1045  1D03               	skipz
 15492  1046  2849               	goto	l8763
 15493                           
 15494                           ;LED_B1.c: 124: {
 15495                           ;LED_B1.c: 128: RC7=0;
 15496  1047  138E               	bcf	14,7	;volatile
 15497                           
 15498                           ;LED_B1.c: 130: }
 15499  1048  0008               	return
 15500  1049                     l8763:	
 15501                           
 15502                           ;LED_B1.c: 133: else if(led == 2)
 15503  1049  0823               	movf	setLED@led,w
 15504  104A  3A02               	xorlw	2
 15505  104B  1D03               	skipz
 15506  104C  284F               	goto	l8767
 15507                           
 15508                           ;LED_B1.c: 134: {
 15509                           ;LED_B1.c: 138: RA3=0;
 15510  104D  118C               	bcf	12,3	;volatile
 15511                           
 15512                           ;LED_B1.c: 140: }
 15513  104E  0008               	return
 15514  104F                     l8767:	
 15515                           
 15516                           ;LED_B1.c: 153: else if(led == 99)
 15517  104F  0823               	movf	setLED@led,w
 15518  1050  3A63               	xorlw	99
 15519  1051  1D03               	skipz
 15520  1052  0008               	return
 15521                           
 15522                           ;LED_B1.c: 154: {
 15523                           ;LED_B1.c: 158: RB5=0;
 15524  1053  128D               	bcf	13,5	;volatile
 15525                           
 15526                           ;LED_B1.c: 160: }
 15527                           ;LED_B1.c: 162: }
 15528  1054  0008               	return
 15529  1055                     l8771:	
 15530                           
 15531                           ;LED_B1.c: 163: else if(command == 10)
 15532  1055  0822               	movf	setLED@command,w
 15533  1056  3A0A               	xorlw	10
 15534  1057  1D03               	skipz
 15535  1058  2877               	goto	l8787
 15536                           
 15537                           ;LED_B1.c: 164: {
 15538                           ;LED_B1.c: 165: LED->GO=0;
 15539  1059  0021               	movlb	1	; select bank1
 15540  105A  083B               	movf	_LED^(0+128),w
 15541  105B  0086               	movwf	6
 15542  105C  0187               	clrf	7
 15543  105D  1081               	bcf	1,1
 15544                           
 15545                           ;LED_B1.c: 166: LED->Time=0;
 15546  105E  0A3B               	incf	_LED^(0+128),w
 15547  105F  0086               	movwf	6
 15548  1060  0187               	clrf	7
 15549  1061  3000               	movlw	0
 15550  1062  3FC0               	movwi [0]fsr1
 15551  1063  3FC1               	movwi [1]fsr1
 15552                           
 15553                           ;LED_B1.c: 168: if(led == 1)
 15554  1064  0020               	movlb	0	; select bank0
 15555  1065  0823               	movf	setLED@led,w
 15556  1066  3A01               	xorlw	1
 15557  1067  1D03               	skipz
 15558  1068  286B               	goto	l8779
 15559                           
 15560                           ;LED_B1.c: 169: {
 15561                           ;LED_B1.c: 173: RC7=1;
 15562  1069  178E               	bsf	14,7	;volatile
 15563                           
 15564                           ;LED_B1.c: 175: }
 15565  106A  0008               	return
 15566  106B                     l8779:	
 15567                           
 15568                           ;LED_B1.c: 178: else if(led == 2)
 15569  106B  0823               	movf	setLED@led,w
 15570  106C  3A02               	xorlw	2
 15571  106D  1D03               	skipz
 15572  106E  2871               	goto	l8783
 15573                           
 15574                           ;LED_B1.c: 179: {
 15575                           ;LED_B1.c: 183: RA3=1;
 15576  106F  158C               	bsf	12,3	;volatile
 15577                           
 15578                           ;LED_B1.c: 185: }
 15579  1070  0008               	return
 15580  1071                     l8783:	
 15581                           
 15582                           ;LED_B1.c: 198: else if(led == 99)
 15583  1071  0823               	movf	setLED@led,w
 15584  1072  3A63               	xorlw	99
 15585  1073  1D03               	skipz
 15586  1074  0008               	return
 15587                           
 15588                           ;LED_B1.c: 199: {
 15589                           ;LED_B1.c: 203: RB5=1;
 15590  1075  168D               	bsf	13,5	;volatile
 15591                           
 15592                           ;LED_B1.c: 205: }
 15593                           ;LED_B1.c: 207: }
 15594  1076  0008               	return
 15595  1077                     l8787:	
 15596                           
 15597                           ;LED_B1.c: 208: else if(command == 11)
 15598  1077  0822               	movf	setLED@command,w
 15599  1078  3A0B               	xorlw	11
 15600  1079  1D03               	skipz
 15601  107A  0008               	return
 15602                           
 15603                           ;LED_B1.c: 209: {
 15604                           ;LED_B1.c: 210: LED->GO=1;
 15605  107B  0021               	movlb	1	; select bank1
 15606  107C  083B               	movf	_LED^(0+128),w
 15607  107D  0086               	movwf	6
 15608  107E  0187               	clrf	7
 15609  107F  1481               	bsf	1,1
 15610  1080  0008               	return
 15611  1081                     __end_of_setLED:	
 15612                           
 15613                           	psect	text90
 15614  2797                     __ptext90:	
 15615 ;; *************** function _LedPointSelect *****************
 15616 ;; Defined at:
 15617 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;  led             1    wreg     unsigned char 
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;  led             1    1[BANK0 ] unsigned char 
 15622 ;; Return value:  Size  Location     Type
 15623 ;;		None               void
 15624 ;; Registers used:
 15625 ;;		wreg
 15626 ;; Tracked objects:
 15627 ;;		On entry : 0/0
 15628 ;;		On exit  : 0/0
 15629 ;;		Unchanged: 0/0
 15630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;Total ram usage:        2 bytes
 15636 ;; Hardware stack levels used:    1
 15637 ;; Hardware stack levels required when called:    4
 15638 ;; This function calls:
 15639 ;;		Nothing
 15640 ;; This function is called by:
 15641 ;;		_setLED_Initialization
 15642 ;;		_setLED
 15643 ;;		_setLED_Main
 15644 ;; This function uses a non-reentrant model
 15645 ;;
 15646                           
 15647                           
 15648                           ;psect for function _LedPointSelect
 15649  2797                     _LedPointSelect:	
 15650                           
 15651                           ;incstack = 0
 15652                           ; Regs used in _LedPointSelect: [wreg]
 15653                           ;LedPointSelect@led stored from wreg
 15654  2797  0020               	movlb	0	; select bank0
 15655  2798  00A1               	movwf	LedPointSelect@led
 15656                           
 15657                           ;LED_B1.c: 10: if(led == 1)
 15658  2799  0821               	movf	LedPointSelect@led,w
 15659  279A  3A01               	xorlw	1
 15660  279B  1D03               	skipz
 15661  279C  2FA3               	goto	l6467
 15662                           
 15663                           ;LED_B1.c: 11: {
 15664                           ;LED_B1.c: 12: LED=&VarLED1;
 15665  279D  30D9               	movlw	_VarLED1& (0+255)
 15666  279E  00A0               	movwf	??_LedPointSelect
 15667  279F  0820               	movf	??_LedPointSelect,w
 15668  27A0  0021               	movlb	1	; select bank1
 15669  27A1  00BB               	movwf	_LED^(0+128)
 15670                           
 15671                           ;LED_B1.c: 13: }
 15672  27A2  0008               	return
 15673  27A3                     l6467:	
 15674                           
 15675                           ;LED_B1.c: 16: else if(led == 2)
 15676  27A3  0020               	movlb	0	; select bank0
 15677  27A4  0821               	movf	LedPointSelect@led,w
 15678  27A5  3A02               	xorlw	2
 15679  27A6  1D03               	skipz
 15680  27A7  2FAE               	goto	l6471
 15681                           
 15682                           ;LED_B1.c: 17: {
 15683                           ;LED_B1.c: 18: LED=&VarLED2;
 15684  27A8  30DD               	movlw	_VarLED2& (0+255)
 15685  27A9  00A0               	movwf	??_LedPointSelect
 15686  27AA  0820               	movf	??_LedPointSelect,w
 15687  27AB  0021               	movlb	1	; select bank1
 15688  27AC  00BB               	movwf	_LED^(0+128)
 15689                           
 15690                           ;LED_B1.c: 19: }
 15691  27AD  0008               	return
 15692  27AE                     l6471:	
 15693                           
 15694                           ;LED_B1.c: 28: else if(led == 99)
 15695  27AE  0020               	movlb	0	; select bank0
 15696  27AF  0821               	movf	LedPointSelect@led,w
 15697  27B0  3A63               	xorlw	99
 15698  27B1  1D03               	skipz
 15699  27B2  0008               	return
 15700                           
 15701                           ;LED_B1.c: 29: {
 15702                           ;LED_B1.c: 30: LED=&VarErrLED;
 15703  27B3  30D5               	movlw	_VarErrLED& (0+255)
 15704  27B4  00A0               	movwf	??_LedPointSelect
 15705  27B5  0820               	movf	??_LedPointSelect,w
 15706  27B6  0021               	movlb	1	; select bank1
 15707  27B7  00BB               	movwf	_LED^(0+128)
 15708  27B8  0008               	return
 15709  27B9                     __end_of_LedPointSelect:	
 15710                           
 15711                           	psect	text91
 15712  257C                     __ptext91:	
 15713 ;; *************** function _getDimmerLights_Trigger *****************
 15714 ;; Defined at:
 15715 ;;		line 240 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15716 ;; Parameters:    Size  Location     Type
 15717 ;;		None
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;  Status          1    0[BANK0 ] unsigned char 
 15720 ;; Return value:  Size  Location     Type
 15721 ;;                  1    wreg      unsigned char 
 15722 ;; Registers used:
 15723 ;;		wreg, fsr1l, fsr1h, status,2
 15724 ;; Tracked objects:
 15725 ;;		On entry : 0/0
 15726 ;;		On exit  : 0/0
 15727 ;;		Unchanged: 0/0
 15728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15732 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15733 ;;Total ram usage:        1 bytes
 15734 ;; Hardware stack levels used:    1
 15735 ;; Hardware stack levels required when called:    4
 15736 ;; This function calls:
 15737 ;;		Nothing
 15738 ;; This function is called by:
 15739 ;;		_setDimmerLights_Main
 15740 ;; This function uses a non-reentrant model
 15741 ;;
 15742                           
 15743                           
 15744                           ;psect for function _getDimmerLights_Trigger
 15745  257C                     _getDimmerLights_Trigger:	
 15746                           
 15747                           ;Dimmer_B1.c: 242: char Status=0;
 15748                           
 15749                           ;incstack = 0
 15750                           ; Regs used in _getDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2]
 15751  257C  0020               	movlb	0	; select bank0
 15752  257D  01A0               	clrf	getDimmerLights_Trigger@Status
 15753                           
 15754                           ;Dimmer_B1.c: 251: if(DimmerLights11->Trigger || DimmerLights22->Trigger)
 15755  257E  0879               	movf	_DimmerLights11,w
 15756  257F  3E09               	addlw	9
 15757  2580  0086               	movwf	6
 15758  2581  3001               	movlw	1	; select bank2/3
 15759  2582  0087               	movwf	7
 15760  2583  1881               	btfsc	1,1
 15761  2584  2D8C               	goto	l919
 15762  2585  087A               	movf	_DimmerLights22,w
 15763  2586  3E09               	addlw	9
 15764  2587  0086               	movwf	6
 15765  2588  3001               	movlw	1	; select bank2/3
 15766  2589  0087               	movwf	7
 15767  258A  1C81               	btfss	1,1
 15768  258B  2D8E               	goto	l9093
 15769  258C                     l919:	
 15770                           
 15771                           ;Dimmer_B1.c: 252: {
 15772                           ;Dimmer_B1.c: 253: Status=1;
 15773  258C  01A0               	clrf	getDimmerLights_Trigger@Status
 15774  258D  0AA0               	incf	getDimmerLights_Trigger@Status,f
 15775  258E                     l9093:	
 15776                           
 15777                           ;Dimmer_B1.c: 254: }
 15778                           ;Dimmer_B1.c: 263: return Status;
 15779  258E  0820               	movf	getDimmerLights_Trigger@Status,w
 15780  258F  0008               	return
 15781  2590                     __end_of_getDimmerLights_Trigger:	
 15782                           
 15783                           	psect	text92
 15784  26A9                     __ptext92:	
 15785 ;; *************** function _DimmerLights_Close *****************
 15786 ;; Defined at:
 15787 ;;		line 90 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15788 ;; Parameters:    Size  Location     Type
 15789 ;;		None
 15790 ;; Auto vars:     Size  Location     Type
 15791 ;;		None
 15792 ;; Return value:  Size  Location     Type
 15793 ;;		None               void
 15794 ;; Registers used:
 15795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15796 ;; Tracked objects:
 15797 ;;		On entry : 0/0
 15798 ;;		On exit  : 0/0
 15799 ;;		Unchanged: 0/0
 15800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;Total ram usage:        0 bytes
 15806 ;; Hardware stack levels used:    1
 15807 ;; Hardware stack levels required when called:    5
 15808 ;; This function calls:
 15809 ;;		_getDimmerLights_StatusFlag
 15810 ;;		_setLoad_GO
 15811 ;; This function is called by:
 15812 ;;		_DimmerLights_Main
 15813 ;; This function uses a non-reentrant model
 15814 ;;
 15815                           
 15816                           
 15817                           ;psect for function _DimmerLights_Close
 15818  26A9                     _DimmerLights_Close:	
 15819                           
 15820                           ;Dimmer_B1.c: 92: if(Dimmer->Detect)
 15821                           
 15822                           ;incstack = 0
 15823                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15824  26A9  0021               	movlb	1	; select bank1
 15825  26AA  0839               	movf	_Dimmer^(0+128),w
 15826  26AB  0086               	movwf	6
 15827  26AC  0187               	clrf	7
 15828  26AD  1C01               	btfss	1,0
 15829  26AE  0008               	return
 15830                           
 15831                           ;Dimmer_B1.c: 93: {
 15832                           ;Dimmer_B1.c: 94: Dimmer->Detect=0;
 15833  26AF  0839               	movf	_Dimmer^(0+128),w
 15834  26B0  0086               	movwf	6
 15835  26B1  0187               	clrf	7
 15836  26B2  1001               	bcf	1,0
 15837                           
 15838                           ;Dimmer_B1.c: 95: if(!getDimmerLights_StatusFlag())
 15839  26B3  31A5  2543  31A6   	fcall	_getDimmerLights_StatusFlag
 15840  26B6  3800               	iorlw	0
 15841  26B7  1D03               	skipz
 15842  26B8  0008               	return
 15843                           
 15844                           ;Dimmer_B1.c: 96: {
 15845                           ;Dimmer_B1.c: 97: setLoad_GO(0);
 15846  26B9  3000               	movlw	0
 15847  26BA  31A3  23D5         	fcall	_setLoad_GO
 15848                           
 15849                           ;Dimmer_B1.c: 98: Memory->GO=1;
 15850  26BC  0021               	movlb	1	; select bank1
 15851  26BD  0868               	movf	_Memory^(0+128),w
 15852  26BE  3E22               	addlw	34
 15853  26BF  0086               	movwf	6
 15854  26C0  3002               	movlw	2	; select bank4/5
 15855  26C1  0087               	movwf	7
 15856  26C2  1481               	bsf	1,1
 15857  26C3  0008               	return
 15858  26C4                     __end_of_DimmerLights_Close:	
 15859                           
 15860                           	psect	text93
 15861  23D5                     __ptext93:	
 15862 ;; *************** function _setLoad_GO *****************
 15863 ;; Defined at:
 15864 ;;		line 257 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 15865 ;; Parameters:    Size  Location     Type
 15866 ;;  command         1    wreg     unsigned char 
 15867 ;; Auto vars:     Size  Location     Type
 15868 ;;  command         1    0[BANK0 ] unsigned char 
 15869 ;; Return value:  Size  Location     Type
 15870 ;;		None               void
 15871 ;; Registers used:
 15872 ;;		wreg, fsr1l, fsr1h
 15873 ;; Tracked objects:
 15874 ;;		On entry : 0/0
 15875 ;;		On exit  : 0/0
 15876 ;;		Unchanged: 0/0
 15877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15881 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15882 ;;Total ram usage:        1 bytes
 15883 ;; Hardware stack levels used:    1
 15884 ;; Hardware stack levels required when called:    4
 15885 ;; This function calls:
 15886 ;;		Nothing
 15887 ;; This function is called by:
 15888 ;;		_DimmerLights_Close
 15889 ;; This function uses a non-reentrant model
 15890 ;;
 15891                           
 15892                           
 15893                           ;psect for function _setLoad_GO
 15894  23D5                     _setLoad_GO:	
 15895                           
 15896                           ;incstack = 0
 15897                           ; Regs used in _setLoad_GO: [wregfsr1]
 15898                           ;setLoad_GO@command stored from wreg
 15899  23D5  0020               	movlb	0	; select bank0
 15900  23D6  00A0               	movwf	setLoad_GO@command
 15901                           
 15902                           ;OverLoad_B1.c: 259: Load->GO=command;
 15903  23D7  086E               	movf	_Load,w
 15904  23D8  0086               	movwf	6
 15905  23D9  3002               	movlw	2	; select bank4/5
 15906  23DA  0087               	movwf	7
 15907  23DB  0820               	movf	setLoad_GO@command,w
 15908  23DC  1081               	bcf	1,1
 15909  23DD  1D03               	skipz
 15910  23DE  1481               	bsf	1,1
 15911  23DF  0008               	return
 15912  23E0                     __end_of_setLoad_GO:	
 15913                           
 15914                           	psect	text94
 15915  2543                     __ptext94:	
 15916 ;; *************** function _getDimmerLights_StatusFlag *****************
 15917 ;; Defined at:
 15918 ;;		line 213 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15919 ;; Parameters:    Size  Location     Type
 15920 ;;		None
 15921 ;; Auto vars:     Size  Location     Type
 15922 ;;  Status          1    0[BANK0 ] unsigned char 
 15923 ;; Return value:  Size  Location     Type
 15924 ;;                  1    wreg      unsigned char 
 15925 ;; Registers used:
 15926 ;;		wreg, fsr1l, fsr1h, status,2
 15927 ;; Tracked objects:
 15928 ;;		On entry : 0/0
 15929 ;;		On exit  : 0/0
 15930 ;;		Unchanged: 0/0
 15931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15936 ;;Total ram usage:        1 bytes
 15937 ;; Hardware stack levels used:    1
 15938 ;; Hardware stack levels required when called:    4
 15939 ;; This function calls:
 15940 ;;		Nothing
 15941 ;; This function is called by:
 15942 ;;		_DimmerLights_Close
 15943 ;;		_DimmerLights_Exceptions
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           
 15948                           ;psect for function _getDimmerLights_StatusFlag
 15949  2543                     _getDimmerLights_StatusFlag:	
 15950                           
 15951                           ;Dimmer_B1.c: 215: char Status=0;
 15952                           
 15953                           ;incstack = 0
 15954                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2]
 15955  2543  0020               	movlb	0	; select bank0
 15956  2544  01A0               	clrf	getDimmerLights_StatusFlag@Status
 15957                           
 15958                           ;Dimmer_B1.c: 224: if(DimmerLights11->StatusFlag || DimmerLights22->StatusFlag)
 15959  2545  0879               	movf	_DimmerLights11,w
 15960  2546  0086               	movwf	6
 15961  2547  3001               	movlw	1	; select bank2/3
 15962  2548  0087               	movwf	7
 15963  2549  1B01               	btfsc	1,6
 15964  254A  2D51               	goto	l913
 15965  254B  087A               	movf	_DimmerLights22,w
 15966  254C  0086               	movwf	6
 15967  254D  3001               	movlw	1	; select bank2/3
 15968  254E  0087               	movwf	7
 15969  254F  1F01               	btfss	1,6
 15970  2550  2D53               	goto	l8811
 15971  2551                     l913:	
 15972                           
 15973                           ;Dimmer_B1.c: 225: {
 15974                           ;Dimmer_B1.c: 226: Status=1;
 15975  2551  01A0               	clrf	getDimmerLights_StatusFlag@Status
 15976  2552  0AA0               	incf	getDimmerLights_StatusFlag@Status,f
 15977  2553                     l8811:	
 15978                           
 15979                           ;Dimmer_B1.c: 227: }
 15980                           ;Dimmer_B1.c: 237: return Status;
 15981  2553  0820               	movf	getDimmerLights_StatusFlag@Status,w
 15982  2554  0008               	return
 15983  2555                     __end_of_getDimmerLights_StatusFlag:	
 15984                           
 15985                           	psect	text95
 15986  25A5                     __ptext95:	
 15987 ;; *************** function _DimmerLights_Initialization *****************
 15988 ;; Defined at:
 15989 ;;		line 32 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15990 ;; Parameters:    Size  Location     Type
 15991 ;;		None
 15992 ;; Auto vars:     Size  Location     Type
 15993 ;;		None
 15994 ;; Return value:  Size  Location     Type
 15995 ;;		None               void
 15996 ;; Registers used:
 15997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15998 ;; Tracked objects:
 15999 ;;		On entry : 0/0
 16000 ;;		On exit  : 0/0
 16001 ;;		Unchanged: 0/0
 16002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16006 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16007 ;;Total ram usage:        1 bytes
 16008 ;; Hardware stack levels used:    1
 16009 ;; Hardware stack levels required when called:    8
 16010 ;; This function calls:
 16011 ;;		_Dimmer_Initialization
 16012 ;;		_setDimmerLights_Initialization
 16013 ;; This function is called by:
 16014 ;;		_main
 16015 ;; This function uses a non-reentrant model
 16016 ;;
 16017                           
 16018                           
 16019                           ;psect for function _DimmerLights_Initialization
 16020  25A5                     _DimmerLights_Initialization:	
 16021                           
 16022                           ;Dimmer_B1.c: 35: DimmerLights11=&DimmerLights1;
 16023                           
 16024                           ;incstack = 0
 16025                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16026  25A5  302E               	movlw	_DimmerLights1& (0+255)
 16027  25A6  0020               	movlb	0	; select bank0
 16028  25A7  00E2               	movwf	??_DimmerLights_Initialization
 16029  25A8  0862               	movf	??_DimmerLights_Initialization,w
 16030  25A9  00F9               	movwf	_DimmerLights11
 16031                           
 16032                           ;Dimmer_B1.c: 36: setDimmerLights_Initialization(1);
 16033  25AA  3001               	movlw	1
 16034  25AB  319C  24B2  31A5   	fcall	_setDimmerLights_Initialization
 16035                           
 16036                           ;Dimmer_B1.c: 40: DimmerLights22=&DimmerLights2;
 16037  25AE  303B               	movlw	_DimmerLights2& (0+255)
 16038  25AF  0020               	movlb	0	; select bank0
 16039  25B0  00E2               	movwf	??_DimmerLights_Initialization
 16040  25B1  0862               	movf	??_DimmerLights_Initialization,w
 16041  25B2  00FA               	movwf	_DimmerLights22
 16042                           
 16043                           ;Dimmer_B1.c: 41: setDimmerLights_Initialization(2);
 16044  25B3  3002               	movlw	2
 16045  25B4  319C  24B2  31A5   	fcall	_setDimmerLights_Initialization
 16046                           
 16047                           ;Dimmer_B1.c: 50: Dimmer_Initialization();
 16048  25B7  31A3  2354         	fcall	_Dimmer_Initialization
 16049  25B9  0008               	return
 16050  25BA                     __end_of_DimmerLights_Initialization:	
 16051                           
 16052                           	psect	text96
 16053  1CB2                     __ptext96:	
 16054 ;; *************** function _setDimmerLights_Initialization *****************
 16055 ;; Defined at:
 16056 ;;		line 54 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16057 ;; Parameters:    Size  Location     Type
 16058 ;;  lights          1    wreg     unsigned char 
 16059 ;; Auto vars:     Size  Location     Type
 16060 ;;  lights          1   65[BANK0 ] unsigned char 
 16061 ;; Return value:  Size  Location     Type
 16062 ;;		None               void
 16063 ;; Registers used:
 16064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16065 ;; Tracked objects:
 16066 ;;		On entry : 0/0
 16067 ;;		On exit  : 0/0
 16068 ;;		Unchanged: 0/0
 16069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16073 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16074 ;;Total ram usage:        3 bytes
 16075 ;; Hardware stack levels used:    1
 16076 ;; Hardware stack levels required when called:    7
 16077 ;; This function calls:
 16078 ;;		_DimmerLightsPointSelect
 16079 ;;		_getPercentValue
 16080 ;; This function is called by:
 16081 ;;		_DimmerLights_Initialization
 16082 ;; This function uses a non-reentrant model
 16083 ;;
 16084                           
 16085                           
 16086                           ;psect for function _setDimmerLights_Initialization
 16087  1CB2                     _setDimmerLights_Initialization:	
 16088                           
 16089                           ;incstack = 0
 16090                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 16091                           ;setDimmerLights_Initialization@lights stored from wreg
 16092  1CB2  0020               	movlb	0	; select bank0
 16093  1CB3  00E1               	movwf	setDimmerLights_Initialization@lights
 16094                           
 16095                           ;Dimmer_B1.c: 56: DimmerLightsPointSelect(lights);
 16096  1CB4  0861               	movf	setDimmerLights_Initialization@lights,w
 16097  1CB5  31A5  2555  319C   	fcall	_DimmerLightsPointSelect
 16098                           
 16099                           ;Dimmer_B1.c: 58: DimmerLights->MaxmumValue=((char)((100-60)*1.5));
 16100  1CB8  303C               	movlw	60
 16101  1CB9  0020               	movlb	0	; select bank0
 16102  1CBA  00DF               	movwf	??_setDimmerLights_Initialization
 16103  1CBB  086C               	movf	_DimmerLights,w
 16104  1CBC  3E05               	addlw	5
 16105  1CBD  0086               	movwf	6
 16106  1CBE  3001               	movlw	1	; select bank2/3
 16107  1CBF  0087               	movwf	7
 16108  1CC0  085F               	movf	??_setDimmerLights_Initialization,w
 16109  1CC1  0081               	movwf	1
 16110                           
 16111                           ;Dimmer_B1.c: 59: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 16112  1CC2  3078               	movlw	120
 16113  1CC3  00DF               	movwf	??_setDimmerLights_Initialization
 16114  1CC4  086C               	movf	_DimmerLights,w
 16115  1CC5  3E06               	addlw	6
 16116  1CC6  0086               	movwf	6
 16117  1CC7  3001               	movlw	1	; select bank2/3
 16118  1CC8  0087               	movwf	7
 16119  1CC9  085F               	movf	??_setDimmerLights_Initialization,w
 16120  1CCA  0081               	movwf	1
 16121                           
 16122                           ;Dimmer_B1.c: 60: DimmerLights->Clear=1;
 16123  1CCB  086C               	movf	_DimmerLights,w
 16124  1CCC  3E0C               	addlw	12
 16125  1CCD  0086               	movwf	6
 16126  1CCE  3001               	movlw	1	; select bank2/3
 16127  1CCF  0087               	movwf	7
 16128  1CD0  1401               	bsf	1,0
 16129                           
 16130                           ;Dimmer_B1.c: 66: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 16131  1CD1  086C               	movf	_DimmerLights,w
 16132  1CD2  3E06               	addlw	6
 16133  1CD3  0086               	movwf	6
 16134  1CD4  3001               	movlw	1	; select bank2/3
 16135  1CD5  0087               	movwf	7
 16136  1CD6  0801               	movf	1,w
 16137  1CD7  00DF               	movwf	??_setDimmerLights_Initialization
 16138  1CD8  086C               	movf	_DimmerLights,w
 16139  1CD9  3E04               	addlw	4
 16140  1CDA  0086               	movwf	6
 16141  1CDB  3001               	movlw	1	; select bank2/3
 16142  1CDC  0087               	movwf	7
 16143  1CDD  085F               	movf	??_setDimmerLights_Initialization,w
 16144  1CDE  0081               	movwf	1
 16145                           
 16146                           ;Dimmer_B1.c: 84: DimmerLights->MaxmumValue=getPercentValue(Product->Data[(20+lights)]);
 16147  1CDF  0861               	movf	setDimmerLights_Initialization@lights,w
 16148  1CE0  3E14               	addlw	20
 16149  1CE1  076F               	addwf	_Product,w
 16150  1CE2  00DF               	movwf	??_setDimmerLights_Initialization
 16151  1CE3  085F               	movf	??_setDimmerLights_Initialization,w
 16152  1CE4  0086               	movwf	6
 16153  1CE5  3001               	movlw	1	; select bank2/3
 16154  1CE6  0087               	movwf	7
 16155  1CE7  0801               	movf	1,w
 16156  1CE8  319F  27A5         	fcall	_getPercentValue
 16157  1CEA  0020               	movlb	0	; select bank0
 16158  1CEB  00E0               	movwf	??_setDimmerLights_Initialization+1
 16159  1CEC  086C               	movf	_DimmerLights,w
 16160  1CED  3E05               	addlw	5
 16161  1CEE  0086               	movwf	6
 16162  1CEF  3001               	movlw	1	; select bank2/3
 16163  1CF0  0087               	movwf	7
 16164  1CF1  0860               	movf	??_setDimmerLights_Initialization+1,w
 16165  1CF2  0081               	movwf	1
 16166  1CF3  0008               	return
 16167  1CF4                     __end_of_setDimmerLights_Initialization:	
 16168                           
 16169                           	psect	text97
 16170  1FA5                     __ptext97:	
 16171 ;; *************** function _getPercentValue *****************
 16172 ;; Defined at:
 16173 ;;		line 500 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16174 ;; Parameters:    Size  Location     Type
 16175 ;;  value           1    wreg     unsigned char 
 16176 ;; Auto vars:     Size  Location     Type
 16177 ;;  value           1   59[BANK0 ] unsigned char 
 16178 ;;  i               3   60[BANK0 ] float 
 16179 ;; Return value:  Size  Location     Type
 16180 ;;                  1    wreg      unsigned char 
 16181 ;; Registers used:
 16182 ;;		wreg, status,2, status,0, pclath, cstack
 16183 ;; Tracked objects:
 16184 ;;		On entry : 0/0
 16185 ;;		On exit  : 0/0
 16186 ;;		Unchanged: 0/0
 16187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16189 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16191 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16192 ;;Total ram usage:        6 bytes
 16193 ;; Hardware stack levels used:    1
 16194 ;; Hardware stack levels required when called:    6
 16195 ;; This function calls:
 16196 ;;		___awtoft
 16197 ;;		___ftadd
 16198 ;;		___ftdiv
 16199 ;;		___ftmul
 16200 ;;		___fttol
 16201 ;; This function is called by:
 16202 ;;		_setDimmerLights_Initialization
 16203 ;;		_setDimmerLights_AdjRF
 16204 ;; This function uses a non-reentrant model
 16205 ;;
 16206                           
 16207                           
 16208                           ;psect for function _getPercentValue
 16209  1FA5                     _getPercentValue:	
 16210                           
 16211                           ;incstack = 0
 16212                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
 16213                           ;getPercentValue@value stored from wreg
 16214  1FA5  0020               	movlb	0	; select bank0
 16215  1FA6  00DB               	movwf	getPercentValue@value
 16216                           
 16217                           ;Dimmer_B1.c: 503: float i=((char)((100-20)*1.5))-((char)((100-60)*1.5));
 16218  1FA7  3000               	movlw	0
 16219  1FA8  00DC               	movwf	getPercentValue@i
 16220  1FA9  3070               	movlw	112
 16221  1FAA  00DD               	movwf	getPercentValue@i+1
 16222  1FAB  3042               	movlw	66
 16223  1FAC  00DE               	movwf	getPercentValue@i+2
 16224                           
 16225                           ;Dimmer_B1.c: 504: i/=100;
 16226  1FAD  3000               	movlw	0
 16227  1FAE  00AE               	movwf	___ftdiv@f2
 16228  1FAF  30C8               	movlw	200
 16229  1FB0  00AF               	movwf	___ftdiv@f2+1
 16230  1FB1  3042               	movlw	66
 16231  1FB2  00B0               	movwf	___ftdiv@f2+2
 16232  1FB3  085C               	movf	getPercentValue@i,w
 16233  1FB4  00B1               	movwf	___ftdiv@f1
 16234  1FB5  085D               	movf	getPercentValue@i+1,w
 16235  1FB6  00B2               	movwf	___ftdiv@f1+1
 16236  1FB7  085E               	movf	getPercentValue@i+2,w
 16237  1FB8  00B3               	movwf	___ftdiv@f1+2
 16238  1FB9  3189  2151  319F   	fcall	___ftdiv
 16239  1FBC  0020               	movlb	0	; select bank0
 16240  1FBD  082E               	movf	?___ftdiv,w
 16241  1FBE  00DC               	movwf	getPercentValue@i
 16242  1FBF  082F               	movf	?___ftdiv+1,w
 16243  1FC0  00DD               	movwf	getPercentValue@i+1
 16244  1FC1  0830               	movf	?___ftdiv+2,w
 16245  1FC2  00DE               	movwf	getPercentValue@i+2
 16246                           
 16247                           ;Dimmer_B1.c: 505: return (char)(((100-value)*i)+((char)((100-60)*1.5)));
 16248  1FC3  085B               	movf	getPercentValue@value,w
 16249  1FC4  00D9               	movwf	??_getPercentValue
 16250  1FC5  01DA               	clrf	??_getPercentValue+1
 16251  1FC6  09D9               	comf	??_getPercentValue,f
 16252  1FC7  09DA               	comf	??_getPercentValue+1,f
 16253  1FC8  0AD9               	incf	??_getPercentValue,f
 16254  1FC9  1903               	skipnz
 16255  1FCA  0ADA               	incf	??_getPercentValue+1,f
 16256  1FCB  0859               	movf	??_getPercentValue,w
 16257  1FCC  3E64               	addlw	100
 16258  1FCD  00A8               	movwf	___awtoft@c
 16259  1FCE  3000               	movlw	0
 16260  1FCF  3D5A               	addwfc	??_getPercentValue+1,w
 16261  1FD0  00A9               	movwf	___awtoft@c+1
 16262  1FD1  31A7  2775  319F   	fcall	___awtoft
 16263  1FD4  0020               	movlb	0	; select bank0
 16264  1FD5  0828               	movf	?___awtoft,w
 16265  1FD6  00B1               	movwf	___ftmul@f2
 16266  1FD7  0829               	movf	?___awtoft+1,w
 16267  1FD8  00B2               	movwf	___ftmul@f2+1
 16268  1FD9  082A               	movf	?___awtoft+2,w
 16269  1FDA  00B3               	movwf	___ftmul@f2+2
 16270  1FDB  085C               	movf	getPercentValue@i,w
 16271  1FDC  00AE               	movwf	___ftmul@f1
 16272  1FDD  085D               	movf	getPercentValue@i+1,w
 16273  1FDE  00AF               	movwf	___ftmul@f1+1
 16274  1FDF  085E               	movf	getPercentValue@i+2,w
 16275  1FE0  00B0               	movwf	___ftmul@f1+2
 16276  1FE1  3189  21FA  319F   	fcall	___ftmul
 16277  1FE4  0020               	movlb	0	; select bank0
 16278  1FE5  082E               	movf	?___ftmul,w
 16279  1FE6  00C1               	movwf	___ftadd@f2
 16280  1FE7  082F               	movf	?___ftmul+1,w
 16281  1FE8  00C2               	movwf	___ftadd@f2+1
 16282  1FE9  0830               	movf	?___ftmul+2,w
 16283  1FEA  00C3               	movwf	___ftadd@f2+2
 16284  1FEB  3000               	movlw	0
 16285  1FEC  00BE               	movwf	___ftadd@f1
 16286  1FED  3070               	movlw	112
 16287  1FEE  00BF               	movwf	___ftadd@f1+1
 16288  1FEF  3042               	movlw	66
 16289  1FF0  00C0               	movwf	___ftadd@f1+2
 16290  1FF1  318B  2386  319F   	fcall	___ftadd
 16291  1FF4  0020               	movlb	0	; select bank0
 16292  1FF5  083E               	movf	?___ftadd,w
 16293  1FF6  00CB               	movwf	___fttol@f1
 16294  1FF7  083F               	movf	?___ftadd+1,w
 16295  1FF8  00CC               	movwf	___fttol@f1+1
 16296  1FF9  0840               	movf	?___ftadd+2,w
 16297  1FFA  00CD               	movwf	___fttol@f1+2
 16298  1FFB  3195  25C7         	fcall	___fttol
 16299  1FFD  0020               	movlb	0	; select bank0
 16300  1FFE  084B               	movf	?___fttol,w
 16301  1FFF  0008               	return
 16302  2000                     __end_of_getPercentValue:	
 16303                           
 16304                           	psect	text98
 16305  15C7                     __ptext98:	
 16306 ;; *************** function ___fttol *****************
 16307 ;; Defined at:
 16308 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;  f1              3   43[BANK0 ] float 
 16311 ;; Auto vars:     Size  Location     Type
 16312 ;;  lval            4   52[BANK0 ] unsigned long 
 16313 ;;  exp1            1   56[BANK0 ] unsigned char 
 16314 ;;  sign1           1   51[BANK0 ] unsigned char 
 16315 ;; Return value:  Size  Location     Type
 16316 ;;                  4   43[BANK0 ] long 
 16317 ;; Registers used:
 16318 ;;		wreg, status,2, status,0
 16319 ;; Tracked objects:
 16320 ;;		On entry : 0/0
 16321 ;;		On exit  : 0/0
 16322 ;;		Unchanged: 0/0
 16323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16325 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16326 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16327 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16328 ;;Total ram usage:       14 bytes
 16329 ;; Hardware stack levels used:    1
 16330 ;; Hardware stack levels required when called:    4
 16331 ;; This function calls:
 16332 ;;		Nothing
 16333 ;; This function is called by:
 16334 ;;		_getPercentValue
 16335 ;;		_setPercentValue
 16336 ;; This function uses a non-reentrant model
 16337 ;;
 16338                           
 16339                           
 16340                           ;psect for function ___fttol
 16341  15C7                     ___fttol:	
 16342                           
 16343                           ;incstack = 0
 16344                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 16345  15C7  0020               	movlb	0	; select bank0
 16346  15C8  084B               	movf	___fttol@f1,w
 16347  15C9  00CF               	movwf	??___fttol
 16348  15CA  084C               	movf	___fttol@f1+1,w
 16349  15CB  00D0               	movwf	??___fttol+1
 16350  15CC  084D               	movf	___fttol@f1+2,w
 16351  15CD  00D1               	movwf	??___fttol+2
 16352  15CE  1003               	clrc
 16353  15CF  0D50               	rlf	??___fttol+1,w
 16354  15D0  0D51               	rlf	??___fttol+2,w
 16355  15D1  00D2               	movwf	??___fttol+3
 16356  15D2  0852               	movf	??___fttol+3,w
 16357  15D3  00D8               	movwf	___fttol@exp1
 16358  15D4  08D8               	movf	___fttol@exp1,f
 16359  15D5  1D03               	skipz
 16360  15D6  2DE0               	goto	l6369
 16361  15D7  3000               	movlw	0
 16362  15D8  00CE               	movwf	?___fttol+3
 16363  15D9  3000               	movlw	0
 16364  15DA  00CD               	movwf	?___fttol+2
 16365  15DB  3000               	movlw	0
 16366  15DC  00CC               	movwf	?___fttol+1
 16367  15DD  3000               	movlw	0
 16368  15DE  00CB               	movwf	?___fttol
 16369  15DF  0008               	return
 16370  15E0                     l6369:	
 16371  15E0  084B               	movf	___fttol@f1,w
 16372  15E1  00CF               	movwf	??___fttol
 16373  15E2  084C               	movf	___fttol@f1+1,w
 16374  15E3  00D0               	movwf	??___fttol+1
 16375  15E4  084D               	movf	___fttol@f1+2,w
 16376  15E5  00D1               	movwf	??___fttol+2
 16377  15E6  3017               	movlw	23
 16378  15E7                     u4635:	
 16379  15E7  36D1               	lsrf	??___fttol+2,f
 16380  15E8  0CD0               	rrf	??___fttol+1,f
 16381  15E9  0CCF               	rrf	??___fttol,f
 16382  15EA  0B89               	decfsz	9,f
 16383  15EB  2DE7               	goto	u4635
 16384  15EC  084F               	movf	??___fttol,w
 16385  15ED  00D2               	movwf	??___fttol+3
 16386  15EE  0852               	movf	??___fttol+3,w
 16387  15EF  00D3               	movwf	___fttol@sign1
 16388  15F0  17CC               	bsf	___fttol@f1+1,7
 16389  15F1  30FF               	movlw	255
 16390  15F2  05CB               	andwf	___fttol@f1,f
 16391  15F3  30FF               	movlw	255
 16392  15F4  05CC               	andwf	___fttol@f1+1,f
 16393  15F5  3000               	movlw	0
 16394  15F6  05CD               	andwf	___fttol@f1+2,f
 16395  15F7  084B               	movf	___fttol@f1,w
 16396  15F8  00D4               	movwf	___fttol@lval
 16397  15F9  084C               	movf	___fttol@f1+1,w
 16398  15FA  00D5               	movwf	___fttol@lval+1
 16399  15FB  084D               	movf	___fttol@f1+2,w
 16400  15FC  00D6               	movwf	___fttol@lval+2
 16401  15FD  01D7               	clrf	___fttol@lval+3
 16402  15FE  308E               	movlw	142
 16403  15FF  02D8               	subwf	___fttol@exp1,f
 16404  1600  1FD8               	btfss	___fttol@exp1,7
 16405  1601  2E1E               	goto	l6389
 16406  1602  0858               	movf	___fttol@exp1,w
 16407  1603  3A80               	xorlw	128
 16408  1604  3E8F               	addlw	143
 16409  1605  1803               	skipnc
 16410  1606  2E10               	goto	l6387
 16411  1607  3000               	movlw	0
 16412  1608  00CE               	movwf	?___fttol+3
 16413  1609  3000               	movlw	0
 16414  160A  00CD               	movwf	?___fttol+2
 16415  160B  3000               	movlw	0
 16416  160C  00CC               	movwf	?___fttol+1
 16417  160D  3000               	movlw	0
 16418  160E  00CB               	movwf	?___fttol
 16419  160F  0008               	return
 16420  1610                     l6387:	
 16421  1610  3001               	movlw	1
 16422  1611                     u4665:	
 16423  1611  36D7               	lsrf	___fttol@lval+3,f
 16424  1612  0CD6               	rrf	___fttol@lval+2,f
 16425  1613  0CD5               	rrf	___fttol@lval+1,f
 16426  1614  0CD4               	rrf	___fttol@lval,f
 16427  1615  0B89               	decfsz	9,f
 16428  1616  2E11               	goto	u4665
 16429  1617  3001               	movlw	1
 16430  1618  00CF               	movwf	??___fttol
 16431  1619  084F               	movf	??___fttol,w
 16432  161A  07D8               	addwf	___fttol@exp1,f
 16433  161B  1903               	btfsc	3,2
 16434  161C  2E37               	goto	l6399
 16435  161D  2E10               	goto	l6387
 16436  161E                     l6389:	
 16437  161E  3018               	movlw	24
 16438  161F  0258               	subwf	___fttol@exp1,w
 16439  1620  1C03               	skipc
 16440  1621  2E34               	goto	l6397
 16441  1622  3000               	movlw	0
 16442  1623  00CE               	movwf	?___fttol+3
 16443  1624  3000               	movlw	0
 16444  1625  00CD               	movwf	?___fttol+2
 16445  1626  3000               	movlw	0
 16446  1627  00CC               	movwf	?___fttol+1
 16447  1628  3000               	movlw	0
 16448  1629  00CB               	movwf	?___fttol
 16449  162A  0008               	return
 16450  162B                     l6395:	
 16451  162B  3001               	movlw	1
 16452  162C                     u4695:	
 16453  162C  35D4               	lslf	___fttol@lval,f
 16454  162D  0DD5               	rlf	___fttol@lval+1,f
 16455  162E  0DD6               	rlf	___fttol@lval+2,f
 16456  162F  0DD7               	rlf	___fttol@lval+3,f
 16457  1630  0B89               	decfsz	9,f
 16458  1631  2E2C               	goto	u4695
 16459  1632  3001               	movlw	1
 16460  1633  02D8               	subwf	___fttol@exp1,f
 16461  1634                     l6397:	
 16462  1634  08D8               	movf	___fttol@exp1,f
 16463  1635  1D03               	skipz
 16464  1636  2E2B               	goto	l6395
 16465  1637                     l6399:	
 16466  1637  0853               	movf	___fttol@sign1,w
 16467  1638  1903               	btfsc	3,2
 16468  1639  2E45               	goto	l6403
 16469  163A  09D4               	comf	___fttol@lval,f
 16470  163B  09D5               	comf	___fttol@lval+1,f
 16471  163C  09D6               	comf	___fttol@lval+2,f
 16472  163D  09D7               	comf	___fttol@lval+3,f
 16473  163E  0AD4               	incf	___fttol@lval,f
 16474  163F  1903               	skipnz
 16475  1640  0AD5               	incf	___fttol@lval+1,f
 16476  1641  1903               	skipnz
 16477  1642  0AD6               	incf	___fttol@lval+2,f
 16478  1643  1903               	skipnz
 16479  1644  0AD7               	incf	___fttol@lval+3,f
 16480  1645                     l6403:	
 16481  1645  0857               	movf	___fttol@lval+3,w
 16482  1646  00CE               	movwf	?___fttol+3
 16483  1647  0856               	movf	___fttol@lval+2,w
 16484  1648  00CD               	movwf	?___fttol+2
 16485  1649  0855               	movf	___fttol@lval+1,w
 16486  164A  00CC               	movwf	?___fttol+1
 16487  164B  0854               	movf	___fttol@lval,w
 16488  164C  00CB               	movwf	?___fttol
 16489  164D  0008               	return
 16490  164E                     __end_of___fttol:	
 16491                           
 16492                           	psect	text99
 16493  09FA                     __ptext99:	
 16494 ;; *************** function ___ftmul *****************
 16495 ;; Defined at:
 16496 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 16497 ;; Parameters:    Size  Location     Type
 16498 ;;  f1              3   14[BANK0 ] float 
 16499 ;;  f2              3   17[BANK0 ] float 
 16500 ;; Auto vars:     Size  Location     Type
 16501 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
 16502 ;;  sign            1   29[BANK0 ] unsigned char 
 16503 ;;  cntr            1   28[BANK0 ] unsigned char 
 16504 ;;  exp             1   24[BANK0 ] unsigned char 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  3   14[BANK0 ] float 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, pclath, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16514 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;Total ram usage:       16 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    5
 16521 ;; This function calls:
 16522 ;;		___ftpack
 16523 ;; This function is called by:
 16524 ;;		_getPercentValue
 16525 ;; This function uses a non-reentrant model
 16526 ;;
 16527                           
 16528                           
 16529                           ;psect for function ___ftmul
 16530  09FA                     ___ftmul:	
 16531                           
 16532                           ;incstack = 0
 16533                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 16534  09FA  0020               	movlb	0	; select bank0
 16535  09FB  082E               	movf	___ftmul@f1,w
 16536  09FC  00B4               	movwf	??___ftmul
 16537  09FD  082F               	movf	___ftmul@f1+1,w
 16538  09FE  00B5               	movwf	??___ftmul+1
 16539  09FF  0830               	movf	___ftmul@f1+2,w
 16540  0A00  00B6               	movwf	??___ftmul+2
 16541  0A01  1003               	clrc
 16542  0A02  0D35               	rlf	??___ftmul+1,w
 16543  0A03  0D36               	rlf	??___ftmul+2,w
 16544  0A04  00B7               	movwf	??___ftmul+3
 16545  0A05  0837               	movf	??___ftmul+3,w
 16546  0A06  00B8               	movwf	___ftmul@exp
 16547  0A07  08B8               	movf	___ftmul@exp,f
 16548  0A08  1D03               	skipz
 16549  0A09  2A11               	goto	l6319
 16550  0A0A  3000               	movlw	0
 16551  0A0B  00AE               	movwf	?___ftmul
 16552  0A0C  3000               	movlw	0
 16553  0A0D  00AF               	movwf	?___ftmul+1
 16554  0A0E  3000               	movlw	0
 16555  0A0F  00B0               	movwf	?___ftmul+2
 16556  0A10  0008               	return
 16557  0A11                     l6319:	
 16558  0A11  0831               	movf	___ftmul@f2,w
 16559  0A12  00B4               	movwf	??___ftmul
 16560  0A13  0832               	movf	___ftmul@f2+1,w
 16561  0A14  00B5               	movwf	??___ftmul+1
 16562  0A15  0833               	movf	___ftmul@f2+2,w
 16563  0A16  00B6               	movwf	??___ftmul+2
 16564  0A17  1003               	clrc
 16565  0A18  0D35               	rlf	??___ftmul+1,w
 16566  0A19  0D36               	rlf	??___ftmul+2,w
 16567  0A1A  00B7               	movwf	??___ftmul+3
 16568  0A1B  0837               	movf	??___ftmul+3,w
 16569  0A1C  00BD               	movwf	___ftmul@sign
 16570  0A1D  08BD               	movf	___ftmul@sign,f
 16571  0A1E  1D03               	skipz
 16572  0A1F  2A27               	goto	l6325
 16573  0A20  3000               	movlw	0
 16574  0A21  00AE               	movwf	?___ftmul
 16575  0A22  3000               	movlw	0
 16576  0A23  00AF               	movwf	?___ftmul+1
 16577  0A24  3000               	movlw	0
 16578  0A25  00B0               	movwf	?___ftmul+2
 16579  0A26  0008               	return
 16580  0A27                     l6325:	
 16581  0A27  083D               	movf	___ftmul@sign,w
 16582  0A28  3E7B               	addlw	123
 16583  0A29  00B4               	movwf	??___ftmul
 16584  0A2A  0834               	movf	??___ftmul,w
 16585  0A2B  07B8               	addwf	___ftmul@exp,f
 16586  0A2C  082E               	movf	___ftmul@f1,w
 16587  0A2D  00B4               	movwf	??___ftmul
 16588  0A2E  082F               	movf	___ftmul@f1+1,w
 16589  0A2F  00B5               	movwf	??___ftmul+1
 16590  0A30  0830               	movf	___ftmul@f1+2,w
 16591  0A31  00B6               	movwf	??___ftmul+2
 16592  0A32  3010               	movlw	16
 16593  0A33                     u4525:	
 16594  0A33  36B6               	lsrf	??___ftmul+2,f
 16595  0A34  0CB5               	rrf	??___ftmul+1,f
 16596  0A35  0CB4               	rrf	??___ftmul,f
 16597  0A36  0B89               	decfsz	9,f
 16598  0A37  2A33               	goto	u4525
 16599  0A38  0834               	movf	??___ftmul,w
 16600  0A39  00B7               	movwf	??___ftmul+3
 16601  0A3A  0837               	movf	??___ftmul+3,w
 16602  0A3B  00BD               	movwf	___ftmul@sign
 16603  0A3C  0831               	movf	___ftmul@f2,w
 16604  0A3D  00B4               	movwf	??___ftmul
 16605  0A3E  0832               	movf	___ftmul@f2+1,w
 16606  0A3F  00B5               	movwf	??___ftmul+1
 16607  0A40  0833               	movf	___ftmul@f2+2,w
 16608  0A41  00B6               	movwf	??___ftmul+2
 16609  0A42  3010               	movlw	16
 16610  0A43                     u4535:	
 16611  0A43  36B6               	lsrf	??___ftmul+2,f
 16612  0A44  0CB5               	rrf	??___ftmul+1,f
 16613  0A45  0CB4               	rrf	??___ftmul,f
 16614  0A46  0B89               	decfsz	9,f
 16615  0A47  2A43               	goto	u4535
 16616  0A48  0834               	movf	??___ftmul,w
 16617  0A49  00B7               	movwf	??___ftmul+3
 16618  0A4A  0837               	movf	??___ftmul+3,w
 16619  0A4B  06BD               	xorwf	___ftmul@sign,f
 16620  0A4C  3080               	movlw	128
 16621  0A4D  00B4               	movwf	??___ftmul
 16622  0A4E  0834               	movf	??___ftmul,w
 16623  0A4F  05BD               	andwf	___ftmul@sign,f
 16624  0A50  17AF               	bsf	___ftmul@f1+1,7
 16625  0A51  17B2               	bsf	___ftmul@f2+1,7
 16626  0A52  30FF               	movlw	255
 16627  0A53  05B1               	andwf	___ftmul@f2,f
 16628  0A54  30FF               	movlw	255
 16629  0A55  05B2               	andwf	___ftmul@f2+1,f
 16630  0A56  3000               	movlw	0
 16631  0A57  05B3               	andwf	___ftmul@f2+2,f
 16632  0A58  3000               	movlw	0
 16633  0A59  00B9               	movwf	___ftmul@f3_as_product
 16634  0A5A  3000               	movlw	0
 16635  0A5B  00BA               	movwf	___ftmul@f3_as_product+1
 16636  0A5C  3000               	movlw	0
 16637  0A5D  00BB               	movwf	___ftmul@f3_as_product+2
 16638  0A5E  3007               	movlw	7
 16639  0A5F  00B4               	movwf	??___ftmul
 16640  0A60  0834               	movf	??___ftmul,w
 16641  0A61  00BC               	movwf	___ftmul@cntr
 16642  0A62                     l6337:	
 16643  0A62  1C2E               	btfss	___ftmul@f1,0
 16644  0A63  2A6A               	goto	l6341
 16645  0A64  0831               	movf	___ftmul@f2,w
 16646  0A65  07B9               	addwf	___ftmul@f3_as_product,f
 16647  0A66  0832               	movf	___ftmul@f2+1,w
 16648  0A67  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 16649  0A68  0833               	movf	___ftmul@f2+2,w
 16650  0A69  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 16651  0A6A                     l6341:	
 16652  0A6A  3001               	movlw	1
 16653  0A6B                     u4555:	
 16654  0A6B  36B0               	lsrf	___ftmul@f1+2,f
 16655  0A6C  0CAF               	rrf	___ftmul@f1+1,f
 16656  0A6D  0CAE               	rrf	___ftmul@f1,f
 16657  0A6E  0B89               	decfsz	9,f
 16658  0A6F  2A6B               	goto	u4555
 16659  0A70  3001               	movlw	1
 16660  0A71                     u4565:	
 16661  0A71  35B1               	lslf	___ftmul@f2,f
 16662  0A72  0DB2               	rlf	___ftmul@f2+1,f
 16663  0A73  0DB3               	rlf	___ftmul@f2+2,f
 16664  0A74  0B89               	decfsz	9,f
 16665  0A75  2A71               	goto	u4565
 16666  0A76  3001               	movlw	1
 16667  0A77  02BC               	subwf	___ftmul@cntr,f
 16668  0A78  1D03               	btfss	3,2
 16669  0A79  2A62               	goto	l6337
 16670  0A7A  3009               	movlw	9
 16671  0A7B  00B4               	movwf	??___ftmul
 16672  0A7C  0834               	movf	??___ftmul,w
 16673  0A7D  00BC               	movwf	___ftmul@cntr
 16674  0A7E                     l6349:	
 16675  0A7E  1C2E               	btfss	___ftmul@f1,0
 16676  0A7F  2A86               	goto	l6353
 16677  0A80  0831               	movf	___ftmul@f2,w
 16678  0A81  07B9               	addwf	___ftmul@f3_as_product,f
 16679  0A82  0832               	movf	___ftmul@f2+1,w
 16680  0A83  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 16681  0A84  0833               	movf	___ftmul@f2+2,w
 16682  0A85  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 16683  0A86                     l6353:	
 16684  0A86  3001               	movlw	1
 16685  0A87                     u4595:	
 16686  0A87  36B0               	lsrf	___ftmul@f1+2,f
 16687  0A88  0CAF               	rrf	___ftmul@f1+1,f
 16688  0A89  0CAE               	rrf	___ftmul@f1,f
 16689  0A8A  0B89               	decfsz	9,f
 16690  0A8B  2A87               	goto	u4595
 16691  0A8C  3001               	movlw	1
 16692  0A8D                     u4605:	
 16693  0A8D  36BB               	lsrf	___ftmul@f3_as_product+2,f
 16694  0A8E  0CBA               	rrf	___ftmul@f3_as_product+1,f
 16695  0A8F  0CB9               	rrf	___ftmul@f3_as_product,f
 16696  0A90  0B89               	decfsz	9,f
 16697  0A91  2A8D               	goto	u4605
 16698  0A92  3001               	movlw	1
 16699  0A93  02BC               	subwf	___ftmul@cntr,f
 16700  0A94  1D03               	btfss	3,2
 16701  0A95  2A7E               	goto	l6349
 16702  0A96  0839               	movf	___ftmul@f3_as_product,w
 16703  0A97  00A0               	movwf	___ftpack@arg
 16704  0A98  083A               	movf	___ftmul@f3_as_product+1,w
 16705  0A99  00A1               	movwf	___ftpack@arg+1
 16706  0A9A  083B               	movf	___ftmul@f3_as_product+2,w
 16707  0A9B  00A2               	movwf	___ftpack@arg+2
 16708  0A9C  0838               	movf	___ftmul@exp,w
 16709  0A9D  00B4               	movwf	??___ftmul
 16710  0A9E  0834               	movf	??___ftmul,w
 16711  0A9F  00A3               	movwf	___ftpack@exp
 16712  0AA0  083D               	movf	___ftmul@sign,w
 16713  0AA1  00B5               	movwf	??___ftmul+1
 16714  0AA2  0835               	movf	??___ftmul+1,w
 16715  0AA3  00A4               	movwf	___ftpack@sign
 16716  0AA4  3190  2081         	fcall	___ftpack
 16717  0AA6  0020               	movlb	0	; select bank0
 16718  0AA7  0820               	movf	?___ftpack,w
 16719  0AA8  00AE               	movwf	?___ftmul
 16720  0AA9  0821               	movf	?___ftpack+1,w
 16721  0AAA  00AF               	movwf	?___ftmul+1
 16722  0AAB  0822               	movf	?___ftpack+2,w
 16723  0AAC  00B0               	movwf	?___ftmul+2
 16724  0AAD  0008               	return
 16725  0AAE                     __end_of___ftmul:	
 16726                           
 16727                           	psect	text100
 16728  0951                     __ptext100:	
 16729 ;; *************** function ___ftdiv *****************
 16730 ;; Defined at:
 16731 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;  f2              3   14[BANK0 ] float 
 16734 ;;  f1              3   17[BANK0 ] float 
 16735 ;; Auto vars:     Size  Location     Type
 16736 ;;  f3              3   25[BANK0 ] float 
 16737 ;;  sign            1   29[BANK0 ] unsigned char 
 16738 ;;  exp             1   28[BANK0 ] unsigned char 
 16739 ;;  cntr            1   24[BANK0 ] unsigned char 
 16740 ;; Return value:  Size  Location     Type
 16741 ;;                  3   14[BANK0 ] float 
 16742 ;; Registers used:
 16743 ;;		wreg, status,2, status,0, pclath, cstack
 16744 ;; Tracked objects:
 16745 ;;		On entry : 0/0
 16746 ;;		On exit  : 0/0
 16747 ;;		Unchanged: 0/0
 16748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16749 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16750 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16751 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16752 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16753 ;;Total ram usage:       16 bytes
 16754 ;; Hardware stack levels used:    1
 16755 ;; Hardware stack levels required when called:    5
 16756 ;; This function calls:
 16757 ;;		___ftpack
 16758 ;; This function is called by:
 16759 ;;		_getPercentValue
 16760 ;;		_setPercentValue
 16761 ;; This function uses a non-reentrant model
 16762 ;;
 16763                           
 16764                           
 16765                           ;psect for function ___ftdiv
 16766  0951                     ___ftdiv:	
 16767                           
 16768                           ;incstack = 0
 16769                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 16770  0951  0020               	movlb	0	; select bank0
 16771  0952  0831               	movf	___ftdiv@f1,w
 16772  0953  00B4               	movwf	??___ftdiv
 16773  0954  0832               	movf	___ftdiv@f1+1,w
 16774  0955  00B5               	movwf	??___ftdiv+1
 16775  0956  0833               	movf	___ftdiv@f1+2,w
 16776  0957  00B6               	movwf	??___ftdiv+2
 16777  0958  1003               	clrc
 16778  0959  0D35               	rlf	??___ftdiv+1,w
 16779  095A  0D36               	rlf	??___ftdiv+2,w
 16780  095B  00B7               	movwf	??___ftdiv+3
 16781  095C  0837               	movf	??___ftdiv+3,w
 16782  095D  00BC               	movwf	___ftdiv@exp
 16783  095E  08BC               	movf	___ftdiv@exp,f
 16784  095F  1D03               	skipz
 16785  0960  2968               	goto	l6277
 16786  0961  3000               	movlw	0
 16787  0962  00AE               	movwf	?___ftdiv
 16788  0963  3000               	movlw	0
 16789  0964  00AF               	movwf	?___ftdiv+1
 16790  0965  3000               	movlw	0
 16791  0966  00B0               	movwf	?___ftdiv+2
 16792  0967  0008               	return
 16793  0968                     l6277:	
 16794  0968  082E               	movf	___ftdiv@f2,w
 16795  0969  00B4               	movwf	??___ftdiv
 16796  096A  082F               	movf	___ftdiv@f2+1,w
 16797  096B  00B5               	movwf	??___ftdiv+1
 16798  096C  0830               	movf	___ftdiv@f2+2,w
 16799  096D  00B6               	movwf	??___ftdiv+2
 16800  096E  1003               	clrc
 16801  096F  0D35               	rlf	??___ftdiv+1,w
 16802  0970  0D36               	rlf	??___ftdiv+2,w
 16803  0971  00B7               	movwf	??___ftdiv+3
 16804  0972  0837               	movf	??___ftdiv+3,w
 16805  0973  00BD               	movwf	___ftdiv@sign
 16806  0974  08BD               	movf	___ftdiv@sign,f
 16807  0975  1D03               	skipz
 16808  0976  297E               	goto	l6283
 16809  0977  3000               	movlw	0
 16810  0978  00AE               	movwf	?___ftdiv
 16811  0979  3000               	movlw	0
 16812  097A  00AF               	movwf	?___ftdiv+1
 16813  097B  3000               	movlw	0
 16814  097C  00B0               	movwf	?___ftdiv+2
 16815  097D  0008               	return
 16816  097E                     l6283:	
 16817  097E  3000               	movlw	0
 16818  097F  00B9               	movwf	___ftdiv@f3
 16819  0980  3000               	movlw	0
 16820  0981  00BA               	movwf	___ftdiv@f3+1
 16821  0982  3000               	movlw	0
 16822  0983  00BB               	movwf	___ftdiv@f3+2
 16823  0984  3089               	movlw	137
 16824  0985  073D               	addwf	___ftdiv@sign,w
 16825  0986  00B4               	movwf	??___ftdiv
 16826  0987  0834               	movf	??___ftdiv,w
 16827  0988  02BC               	subwf	___ftdiv@exp,f
 16828  0989  0831               	movf	___ftdiv@f1,w
 16829  098A  00B4               	movwf	??___ftdiv
 16830  098B  0832               	movf	___ftdiv@f1+1,w
 16831  098C  00B5               	movwf	??___ftdiv+1
 16832  098D  0833               	movf	___ftdiv@f1+2,w
 16833  098E  00B6               	movwf	??___ftdiv+2
 16834  098F  3010               	movlw	16
 16835  0990                     u4445:	
 16836  0990  36B6               	lsrf	??___ftdiv+2,f
 16837  0991  0CB5               	rrf	??___ftdiv+1,f
 16838  0992  0CB4               	rrf	??___ftdiv,f
 16839  0993  0B89               	decfsz	9,f
 16840  0994  2990               	goto	u4445
 16841  0995  0834               	movf	??___ftdiv,w
 16842  0996  00B7               	movwf	??___ftdiv+3
 16843  0997  0837               	movf	??___ftdiv+3,w
 16844  0998  00BD               	movwf	___ftdiv@sign
 16845  0999  082E               	movf	___ftdiv@f2,w
 16846  099A  00B4               	movwf	??___ftdiv
 16847  099B  082F               	movf	___ftdiv@f2+1,w
 16848  099C  00B5               	movwf	??___ftdiv+1
 16849  099D  0830               	movf	___ftdiv@f2+2,w
 16850  099E  00B6               	movwf	??___ftdiv+2
 16851  099F  3010               	movlw	16
 16852  09A0                     u4455:	
 16853  09A0  36B6               	lsrf	??___ftdiv+2,f
 16854  09A1  0CB5               	rrf	??___ftdiv+1,f
 16855  09A2  0CB4               	rrf	??___ftdiv,f
 16856  09A3  0B89               	decfsz	9,f
 16857  09A4  29A0               	goto	u4455
 16858  09A5  0834               	movf	??___ftdiv,w
 16859  09A6  00B7               	movwf	??___ftdiv+3
 16860  09A7  0837               	movf	??___ftdiv+3,w
 16861  09A8  06BD               	xorwf	___ftdiv@sign,f
 16862  09A9  3080               	movlw	128
 16863  09AA  00B4               	movwf	??___ftdiv
 16864  09AB  0834               	movf	??___ftdiv,w
 16865  09AC  05BD               	andwf	___ftdiv@sign,f
 16866  09AD  17B2               	bsf	___ftdiv@f1+1,7
 16867  09AE  30FF               	movlw	255
 16868  09AF  05B1               	andwf	___ftdiv@f1,f
 16869  09B0  30FF               	movlw	255
 16870  09B1  05B2               	andwf	___ftdiv@f1+1,f
 16871  09B2  3000               	movlw	0
 16872  09B3  05B3               	andwf	___ftdiv@f1+2,f
 16873  09B4  17AF               	bsf	___ftdiv@f2+1,7
 16874  09B5  30FF               	movlw	255
 16875  09B6  05AE               	andwf	___ftdiv@f2,f
 16876  09B7  30FF               	movlw	255
 16877  09B8  05AF               	andwf	___ftdiv@f2+1,f
 16878  09B9  3000               	movlw	0
 16879  09BA  05B0               	andwf	___ftdiv@f2+2,f
 16880  09BB  3018               	movlw	24
 16881  09BC  00B4               	movwf	??___ftdiv
 16882  09BD  0834               	movf	??___ftdiv,w
 16883  09BE  00B8               	movwf	___ftdiv@cntr
 16884  09BF                     l6297:	
 16885  09BF  3001               	movlw	1
 16886  09C0                     u4465:	
 16887  09C0  35B9               	lslf	___ftdiv@f3,f
 16888  09C1  0DBA               	rlf	___ftdiv@f3+1,f
 16889  09C2  0DBB               	rlf	___ftdiv@f3+2,f
 16890  09C3  0B89               	decfsz	9,f
 16891  09C4  29C0               	goto	u4465
 16892  09C5  0830               	movf	___ftdiv@f2+2,w
 16893  09C6  0233               	subwf	___ftdiv@f1+2,w
 16894  09C7  1D03               	skipz
 16895  09C8  29CF               	goto	u4475
 16896  09C9  082F               	movf	___ftdiv@f2+1,w
 16897  09CA  0232               	subwf	___ftdiv@f1+1,w
 16898  09CB  1D03               	skipz
 16899  09CC  29CF               	goto	u4475
 16900  09CD  082E               	movf	___ftdiv@f2,w
 16901  09CE  0231               	subwf	___ftdiv@f1,w
 16902  09CF                     u4475:	
 16903  09CF  1C03               	skipc
 16904  09D0  29D8               	goto	l6305
 16905  09D1  082E               	movf	___ftdiv@f2,w
 16906  09D2  02B1               	subwf	___ftdiv@f1,f
 16907  09D3  082F               	movf	___ftdiv@f2+1,w
 16908  09D4  3BB2               	subwfb	___ftdiv@f1+1,f
 16909  09D5  0830               	movf	___ftdiv@f2+2,w
 16910  09D6  3BB3               	subwfb	___ftdiv@f1+2,f
 16911  09D7  1439               	bsf	___ftdiv@f3,0
 16912  09D8                     l6305:	
 16913  09D8  3001               	movlw	1
 16914  09D9                     u4485:	
 16915  09D9  35B1               	lslf	___ftdiv@f1,f
 16916  09DA  0DB2               	rlf	___ftdiv@f1+1,f
 16917  09DB  0DB3               	rlf	___ftdiv@f1+2,f
 16918  09DC  0B89               	decfsz	9,f
 16919  09DD  29D9               	goto	u4485
 16920  09DE  3001               	movlw	1
 16921  09DF  02B8               	subwf	___ftdiv@cntr,f
 16922  09E0  1D03               	btfss	3,2
 16923  09E1  29BF               	goto	l6297
 16924  09E2  0839               	movf	___ftdiv@f3,w
 16925  09E3  00A0               	movwf	___ftpack@arg
 16926  09E4  083A               	movf	___ftdiv@f3+1,w
 16927  09E5  00A1               	movwf	___ftpack@arg+1
 16928  09E6  083B               	movf	___ftdiv@f3+2,w
 16929  09E7  00A2               	movwf	___ftpack@arg+2
 16930  09E8  083C               	movf	___ftdiv@exp,w
 16931  09E9  00B4               	movwf	??___ftdiv
 16932  09EA  0834               	movf	??___ftdiv,w
 16933  09EB  00A3               	movwf	___ftpack@exp
 16934  09EC  083D               	movf	___ftdiv@sign,w
 16935  09ED  00B5               	movwf	??___ftdiv+1
 16936  09EE  0835               	movf	??___ftdiv+1,w
 16937  09EF  00A4               	movwf	___ftpack@sign
 16938  09F0  3190  2081         	fcall	___ftpack
 16939  09F2  0020               	movlb	0	; select bank0
 16940  09F3  0820               	movf	?___ftpack,w
 16941  09F4  00AE               	movwf	?___ftdiv
 16942  09F5  0821               	movf	?___ftpack+1,w
 16943  09F6  00AF               	movwf	?___ftdiv+1
 16944  09F7  0822               	movf	?___ftpack+2,w
 16945  09F8  00B0               	movwf	?___ftdiv+2
 16946  09F9  0008               	return
 16947  09FA                     __end_of___ftdiv:	
 16948                           
 16949                           	psect	text101
 16950  0B86                     __ptext101:	
 16951 ;; *************** function ___ftadd *****************
 16952 ;; Defined at:
 16953 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 16954 ;; Parameters:    Size  Location     Type
 16955 ;;  f1              3   30[BANK0 ] float 
 16956 ;;  f2              3   33[BANK0 ] float 
 16957 ;; Auto vars:     Size  Location     Type
 16958 ;;  exp1            1   42[BANK0 ] unsigned char 
 16959 ;;  exp2            1   41[BANK0 ] unsigned char 
 16960 ;;  sign            1   40[BANK0 ] unsigned char 
 16961 ;; Return value:  Size  Location     Type
 16962 ;;                  3   30[BANK0 ] float 
 16963 ;; Registers used:
 16964 ;;		wreg, status,2, status,0, pclath, cstack
 16965 ;; Tracked objects:
 16966 ;;		On entry : 0/0
 16967 ;;		On exit  : 0/0
 16968 ;;		Unchanged: 0/0
 16969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16970 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16971 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16972 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16973 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16974 ;;Total ram usage:       13 bytes
 16975 ;; Hardware stack levels used:    1
 16976 ;; Hardware stack levels required when called:    5
 16977 ;; This function calls:
 16978 ;;		___ftpack
 16979 ;; This function is called by:
 16980 ;;		_getPercentValue
 16981 ;; This function uses a non-reentrant model
 16982 ;;
 16983                           
 16984                           
 16985                           ;psect for function ___ftadd
 16986  0B86                     ___ftadd:	
 16987                           
 16988                           ;incstack = 0
 16989                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 16990  0B86  0020               	movlb	0	; select bank0
 16991  0B87  083E               	movf	___ftadd@f1,w
 16992  0B88  00C4               	movwf	??___ftadd
 16993  0B89  083F               	movf	___ftadd@f1+1,w
 16994  0B8A  00C5               	movwf	??___ftadd+1
 16995  0B8B  0840               	movf	___ftadd@f1+2,w
 16996  0B8C  00C6               	movwf	??___ftadd+2
 16997  0B8D  1003               	clrc
 16998  0B8E  0D45               	rlf	??___ftadd+1,w
 16999  0B8F  0D46               	rlf	??___ftadd+2,w
 17000  0B90  00C7               	movwf	??___ftadd+3
 17001  0B91  0847               	movf	??___ftadd+3,w
 17002  0B92  00CA               	movwf	___ftadd@exp1
 17003  0B93  0841               	movf	___ftadd@f2,w
 17004  0B94  00C4               	movwf	??___ftadd
 17005  0B95  0842               	movf	___ftadd@f2+1,w
 17006  0B96  00C5               	movwf	??___ftadd+1
 17007  0B97  0843               	movf	___ftadd@f2+2,w
 17008  0B98  00C6               	movwf	??___ftadd+2
 17009  0B99  1003               	clrc
 17010  0B9A  0D45               	rlf	??___ftadd+1,w
 17011  0B9B  0D46               	rlf	??___ftadd+2,w
 17012  0B9C  00C7               	movwf	??___ftadd+3
 17013  0B9D  0847               	movf	??___ftadd+3,w
 17014  0B9E  00C9               	movwf	___ftadd@exp2
 17015  0B9F  084A               	movf	___ftadd@exp1,w
 17016  0BA0  1903               	btfsc	3,2
 17017  0BA1  2BAE               	goto	l6207
 17018  0BA2  0849               	movf	___ftadd@exp2,w
 17019  0BA3  024A               	subwf	___ftadd@exp1,w
 17020  0BA4  1803               	skipnc
 17021  0BA5  2BB5               	goto	l6211
 17022  0BA6  034A               	decf	___ftadd@exp1,w
 17023  0BA7  3AFF               	xorlw	255
 17024  0BA8  0749               	addwf	___ftadd@exp2,w
 17025  0BA9  00C4               	movwf	??___ftadd
 17026  0BAA  3019               	movlw	25
 17027  0BAB  0244               	subwf	??___ftadd,w
 17028  0BAC  1C03               	skipc
 17029  0BAD  2BB5               	goto	l6211
 17030  0BAE                     l6207:	
 17031  0BAE  0841               	movf	___ftadd@f2,w
 17032  0BAF  00BE               	movwf	?___ftadd
 17033  0BB0  0842               	movf	___ftadd@f2+1,w
 17034  0BB1  00BF               	movwf	?___ftadd+1
 17035  0BB2  0843               	movf	___ftadd@f2+2,w
 17036  0BB3  00C0               	movwf	?___ftadd+2
 17037  0BB4  0008               	return
 17038  0BB5                     l6211:	
 17039  0BB5  0849               	movf	___ftadd@exp2,w
 17040  0BB6  1903               	btfsc	3,2
 17041  0BB7  0008               	return
 17042  0BB8  084A               	movf	___ftadd@exp1,w
 17043  0BB9  0249               	subwf	___ftadd@exp2,w
 17044  0BBA  1803               	skipnc
 17045  0BBB  2BC4               	goto	l6217
 17046  0BBC  0349               	decf	___ftadd@exp2,w
 17047  0BBD  3AFF               	xorlw	255
 17048  0BBE  074A               	addwf	___ftadd@exp1,w
 17049  0BBF  00C4               	movwf	??___ftadd
 17050  0BC0  3019               	movlw	25
 17051  0BC1  0244               	subwf	??___ftadd,w
 17052  0BC2  1803               	btfsc	3,0
 17053  0BC3  0008               	return
 17054  0BC4                     l6217:	
 17055  0BC4  3006               	movlw	6
 17056  0BC5  00C4               	movwf	??___ftadd
 17057  0BC6  0844               	movf	??___ftadd,w
 17058  0BC7  00C8               	movwf	___ftadd@sign
 17059  0BC8  1BC0               	btfsc	___ftadd@f1+2,7
 17060  0BC9  17C8               	bsf	___ftadd@sign,7
 17061  0BCA  1BC3               	btfsc	___ftadd@f2+2,7
 17062  0BCB  1748               	bsf	___ftadd@sign,6
 17063  0BCC  17BF               	bsf	___ftadd@f1+1,7
 17064  0BCD  30FF               	movlw	255
 17065  0BCE  05BE               	andwf	___ftadd@f1,f
 17066  0BCF  30FF               	movlw	255
 17067  0BD0  05BF               	andwf	___ftadd@f1+1,f
 17068  0BD1  3000               	movlw	0
 17069  0BD2  05C0               	andwf	___ftadd@f1+2,f
 17070  0BD3  17C2               	bsf	___ftadd@f2+1,7
 17071  0BD4  30FF               	movlw	255
 17072  0BD5  05C1               	andwf	___ftadd@f2,f
 17073  0BD6  30FF               	movlw	255
 17074  0BD7  05C2               	andwf	___ftadd@f2+1,f
 17075  0BD8  3000               	movlw	0
 17076  0BD9  05C3               	andwf	___ftadd@f2+2,f
 17077  0BDA  0849               	movf	___ftadd@exp2,w
 17078  0BDB  024A               	subwf	___ftadd@exp1,w
 17079  0BDC  1803               	skipnc
 17080  0BDD  2C00               	goto	l6239
 17081  0BDE                     l6229:	
 17082  0BDE  3001               	movlw	1
 17083  0BDF                     u4285:	
 17084  0BDF  35C1               	lslf	___ftadd@f2,f
 17085  0BE0  0DC2               	rlf	___ftadd@f2+1,f
 17086  0BE1  0DC3               	rlf	___ftadd@f2+2,f
 17087  0BE2  0B89               	decfsz	9,f
 17088  0BE3  2BDF               	goto	u4285
 17089  0BE4  3001               	movlw	1
 17090  0BE5  02C9               	subwf	___ftadd@exp2,f
 17091  0BE6  0849               	movf	___ftadd@exp2,w
 17092  0BE7  064A               	xorwf	___ftadd@exp1,w
 17093  0BE8  1903               	skipnz
 17094  0BE9  2BFB               	goto	l6237
 17095  0BEA  3001               	movlw	1
 17096  0BEB  02C8               	subwf	___ftadd@sign,f
 17097  0BEC  0848               	movf	___ftadd@sign,w
 17098  0BED  3907               	andlw	7
 17099  0BEE  1903               	btfsc	3,2
 17100  0BEF  2BFB               	goto	l6237
 17101  0BF0  2BDE               	goto	l6229
 17102  0BF1                     l6235:	
 17103  0BF1  3001               	movlw	1
 17104  0BF2                     u4315:	
 17105  0BF2  36C0               	lsrf	___ftadd@f1+2,f
 17106  0BF3  0CBF               	rrf	___ftadd@f1+1,f
 17107  0BF4  0CBE               	rrf	___ftadd@f1,f
 17108  0BF5  0B89               	decfsz	9,f
 17109  0BF6  2BF2               	goto	u4315
 17110  0BF7  3001               	movlw	1
 17111  0BF8  00C4               	movwf	??___ftadd
 17112  0BF9  0844               	movf	??___ftadd,w
 17113  0BFA  07CA               	addwf	___ftadd@exp1,f
 17114  0BFB                     l6237:	
 17115  0BFB  084A               	movf	___ftadd@exp1,w
 17116  0BFC  0649               	xorwf	___ftadd@exp2,w
 17117  0BFD  1903               	btfsc	3,2
 17118  0BFE  2C25               	goto	l3430
 17119  0BFF  2BF1               	goto	l6235
 17120  0C00                     l6239:	
 17121  0C00  084A               	movf	___ftadd@exp1,w
 17122  0C01  0249               	subwf	___ftadd@exp2,w
 17123  0C02  1803               	skipnc
 17124  0C03  2C25               	goto	l3430
 17125  0C04                     l6241:	
 17126  0C04  3001               	movlw	1
 17127  0C05                     u4345:	
 17128  0C05  35BE               	lslf	___ftadd@f1,f
 17129  0C06  0DBF               	rlf	___ftadd@f1+1,f
 17130  0C07  0DC0               	rlf	___ftadd@f1+2,f
 17131  0C08  0B89               	decfsz	9,f
 17132  0C09  2C05               	goto	u4345
 17133  0C0A  3001               	movlw	1
 17134  0C0B  02CA               	subwf	___ftadd@exp1,f
 17135  0C0C  0849               	movf	___ftadd@exp2,w
 17136  0C0D  064A               	xorwf	___ftadd@exp1,w
 17137  0C0E  1903               	skipnz
 17138  0C0F  2C21               	goto	l6249
 17139  0C10  3001               	movlw	1
 17140  0C11  02C8               	subwf	___ftadd@sign,f
 17141  0C12  0848               	movf	___ftadd@sign,w
 17142  0C13  3907               	andlw	7
 17143  0C14  1903               	btfsc	3,2
 17144  0C15  2C21               	goto	l6249
 17145  0C16  2C04               	goto	l6241
 17146  0C17                     l6247:	
 17147  0C17  3001               	movlw	1
 17148  0C18                     u4375:	
 17149  0C18  36C3               	lsrf	___ftadd@f2+2,f
 17150  0C19  0CC2               	rrf	___ftadd@f2+1,f
 17151  0C1A  0CC1               	rrf	___ftadd@f2,f
 17152  0C1B  0B89               	decfsz	9,f
 17153  0C1C  2C18               	goto	u4375
 17154  0C1D  3001               	movlw	1
 17155  0C1E  00C4               	movwf	??___ftadd
 17156  0C1F  0844               	movf	??___ftadd,w
 17157  0C20  07C9               	addwf	___ftadd@exp2,f
 17158  0C21                     l6249:	
 17159  0C21  084A               	movf	___ftadd@exp1,w
 17160  0C22  0649               	xorwf	___ftadd@exp2,w
 17161  0C23  1D03               	skipz
 17162  0C24  2C17               	goto	l6247
 17163  0C25                     l3430:	
 17164  0C25  1FC8               	btfss	___ftadd@sign,7
 17165  0C26  2C37               	goto	l6253
 17166  0C27  30FF               	movlw	255
 17167  0C28  06BE               	xorwf	___ftadd@f1,f
 17168  0C29  30FF               	movlw	255
 17169  0C2A  06BF               	xorwf	___ftadd@f1+1,f
 17170  0C2B  30FF               	movlw	255
 17171  0C2C  06C0               	xorwf	___ftadd@f1+2,f
 17172  0C2D  3001               	movlw	1
 17173  0C2E  07BE               	addwf	___ftadd@f1,f
 17174  0C2F  3000               	movlw	0
 17175  0C30  1803               	skipnc
 17176  0C31  3001               	movlw	1
 17177  0C32  07BF               	addwf	___ftadd@f1+1,f
 17178  0C33  3000               	movlw	0
 17179  0C34  1803               	skipnc
 17180  0C35  3001               	movlw	1
 17181  0C36  07C0               	addwf	___ftadd@f1+2,f
 17182  0C37                     l6253:	
 17183  0C37  1F48               	btfss	___ftadd@sign,6
 17184  0C38  2C49               	goto	l6257
 17185  0C39  30FF               	movlw	255
 17186  0C3A  06C1               	xorwf	___ftadd@f2,f
 17187  0C3B  30FF               	movlw	255
 17188  0C3C  06C2               	xorwf	___ftadd@f2+1,f
 17189  0C3D  30FF               	movlw	255
 17190  0C3E  06C3               	xorwf	___ftadd@f2+2,f
 17191  0C3F  3001               	movlw	1
 17192  0C40  07C1               	addwf	___ftadd@f2,f
 17193  0C41  3000               	movlw	0
 17194  0C42  1803               	skipnc
 17195  0C43  3001               	movlw	1
 17196  0C44  07C2               	addwf	___ftadd@f2+1,f
 17197  0C45  3000               	movlw	0
 17198  0C46  1803               	skipnc
 17199  0C47  3001               	movlw	1
 17200  0C48  07C3               	addwf	___ftadd@f2+2,f
 17201  0C49                     l6257:	
 17202  0C49  01C8               	clrf	___ftadd@sign
 17203  0C4A  083E               	movf	___ftadd@f1,w
 17204  0C4B  07C1               	addwf	___ftadd@f2,f
 17205  0C4C  083F               	movf	___ftadd@f1+1,w
 17206  0C4D  3DC2               	addwfc	___ftadd@f2+1,f
 17207  0C4E  0840               	movf	___ftadd@f1+2,w
 17208  0C4F  3DC3               	addwfc	___ftadd@f2+2,f
 17209  0C50  1FC3               	btfss	___ftadd@f2+2,7
 17210  0C51  2C64               	goto	l6267
 17211  0C52  30FF               	movlw	255
 17212  0C53  06C1               	xorwf	___ftadd@f2,f
 17213  0C54  30FF               	movlw	255
 17214  0C55  06C2               	xorwf	___ftadd@f2+1,f
 17215  0C56  30FF               	movlw	255
 17216  0C57  06C3               	xorwf	___ftadd@f2+2,f
 17217  0C58  3001               	movlw	1
 17218  0C59  07C1               	addwf	___ftadd@f2,f
 17219  0C5A  3000               	movlw	0
 17220  0C5B  1803               	skipnc
 17221  0C5C  3001               	movlw	1
 17222  0C5D  07C2               	addwf	___ftadd@f2+1,f
 17223  0C5E  3000               	movlw	0
 17224  0C5F  1803               	skipnc
 17225  0C60  3001               	movlw	1
 17226  0C61  07C3               	addwf	___ftadd@f2+2,f
 17227  0C62  01C8               	clrf	___ftadd@sign
 17228  0C63  0AC8               	incf	___ftadd@sign,f
 17229  0C64                     l6267:	
 17230  0C64  0841               	movf	___ftadd@f2,w
 17231  0C65  00A0               	movwf	___ftpack@arg
 17232  0C66  0842               	movf	___ftadd@f2+1,w
 17233  0C67  00A1               	movwf	___ftpack@arg+1
 17234  0C68  0843               	movf	___ftadd@f2+2,w
 17235  0C69  00A2               	movwf	___ftpack@arg+2
 17236  0C6A  084A               	movf	___ftadd@exp1,w
 17237  0C6B  00C4               	movwf	??___ftadd
 17238  0C6C  0844               	movf	??___ftadd,w
 17239  0C6D  00A3               	movwf	___ftpack@exp
 17240  0C6E  0848               	movf	___ftadd@sign,w
 17241  0C6F  00C5               	movwf	??___ftadd+1
 17242  0C70  0845               	movf	??___ftadd+1,w
 17243  0C71  00A4               	movwf	___ftpack@sign
 17244  0C72  3190  2081         	fcall	___ftpack
 17245  0C74  0020               	movlb	0	; select bank0
 17246  0C75  0820               	movf	?___ftpack,w
 17247  0C76  00BE               	movwf	?___ftadd
 17248  0C77  0821               	movf	?___ftpack+1,w
 17249  0C78  00BF               	movwf	?___ftadd+1
 17250  0C79  0822               	movf	?___ftpack+2,w
 17251  0C7A  00C0               	movwf	?___ftadd+2
 17252  0C7B  0008               	return
 17253  0C7C                     __end_of___ftadd:	
 17254                           
 17255                           	psect	text102
 17256  2775                     __ptext102:	
 17257 ;; *************** function ___awtoft *****************
 17258 ;; Defined at:
 17259 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 17260 ;; Parameters:    Size  Location     Type
 17261 ;;  c               2    8[BANK0 ] int 
 17262 ;; Auto vars:     Size  Location     Type
 17263 ;;  sign            1   13[BANK0 ] unsigned char 
 17264 ;; Return value:  Size  Location     Type
 17265 ;;                  3    8[BANK0 ] float 
 17266 ;; Registers used:
 17267 ;;		wreg, status,2, status,0, pclath, cstack
 17268 ;; Tracked objects:
 17269 ;;		On entry : 0/0
 17270 ;;		On exit  : 0/0
 17271 ;;		Unchanged: 0/0
 17272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17273 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17276 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17277 ;;Total ram usage:        6 bytes
 17278 ;; Hardware stack levels used:    1
 17279 ;; Hardware stack levels required when called:    5
 17280 ;; This function calls:
 17281 ;;		___ftpack
 17282 ;; This function is called by:
 17283 ;;		_getPercentValue
 17284 ;;		_setPercentValue
 17285 ;; This function uses a non-reentrant model
 17286 ;;
 17287                           
 17288                           
 17289                           ;psect for function ___awtoft
 17290  2775                     ___awtoft:	
 17291                           
 17292                           ;incstack = 0
 17293                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 17294  2775  0020               	movlb	0	; select bank0
 17295  2776  01AD               	clrf	___awtoft@sign
 17296  2777  1FA9               	btfss	___awtoft@c+1,7
 17297  2778  2F80               	goto	l6195
 17298  2779  09A8               	comf	___awtoft@c,f
 17299  277A  09A9               	comf	___awtoft@c+1,f
 17300  277B  0AA8               	incf	___awtoft@c,f
 17301  277C  1903               	skipnz
 17302  277D  0AA9               	incf	___awtoft@c+1,f
 17303  277E  01AD               	clrf	___awtoft@sign
 17304  277F  0AAD               	incf	___awtoft@sign,f
 17305  2780                     l6195:	
 17306  2780  0828               	movf	___awtoft@c,w
 17307  2781  00A0               	movwf	___ftpack@arg
 17308  2782  0829               	movf	___awtoft@c+1,w
 17309  2783  00A1               	movwf	___ftpack@arg+1
 17310  2784  01A2               	clrf	___ftpack@arg+2
 17311  2785  308E               	movlw	142
 17312  2786  00AB               	movwf	??___awtoft
 17313  2787  082B               	movf	??___awtoft,w
 17314  2788  00A3               	movwf	___ftpack@exp
 17315  2789  082D               	movf	___awtoft@sign,w
 17316  278A  00AC               	movwf	??___awtoft+1
 17317  278B  082C               	movf	??___awtoft+1,w
 17318  278C  00A4               	movwf	___ftpack@sign
 17319  278D  3190  2081         	fcall	___ftpack
 17320  278F  0020               	movlb	0	; select bank0
 17321  2790  0820               	movf	?___ftpack,w
 17322  2791  00A8               	movwf	?___awtoft
 17323  2792  0821               	movf	?___ftpack+1,w
 17324  2793  00A9               	movwf	?___awtoft+1
 17325  2794  0822               	movf	?___ftpack+2,w
 17326  2795  00AA               	movwf	?___awtoft+2
 17327  2796  0008               	return
 17328  2797                     __end_of___awtoft:	
 17329                           
 17330                           	psect	text103
 17331  1081                     __ptext103:	
 17332 ;; *************** function ___ftpack *****************
 17333 ;; Defined at:
 17334 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 17335 ;; Parameters:    Size  Location     Type
 17336 ;;  arg             3    0[BANK0 ] unsigned um
 17337 ;;  exp             1    3[BANK0 ] unsigned char 
 17338 ;;  sign            1    4[BANK0 ] unsigned char 
 17339 ;; Auto vars:     Size  Location     Type
 17340 ;;		None
 17341 ;; Return value:  Size  Location     Type
 17342 ;;                  3    0[BANK0 ] float 
 17343 ;; Registers used:
 17344 ;;		wreg, status,2, status,0
 17345 ;; Tracked objects:
 17346 ;;		On entry : 0/0
 17347 ;;		On exit  : 0/0
 17348 ;;		Unchanged: 0/0
 17349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17350 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17352 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17353 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17354 ;;Total ram usage:        8 bytes
 17355 ;; Hardware stack levels used:    1
 17356 ;; Hardware stack levels required when called:    4
 17357 ;; This function calls:
 17358 ;;		Nothing
 17359 ;; This function is called by:
 17360 ;;		___awtoft
 17361 ;;		___ftadd
 17362 ;;		___ftdiv
 17363 ;;		___ftmul
 17364 ;; This function uses a non-reentrant model
 17365 ;;
 17366                           
 17367                           
 17368                           ;psect for function ___ftpack
 17369  1081                     ___ftpack:	
 17370                           
 17371                           ;incstack = 0
 17372                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 17373  1081  0020               	movlb	0	; select bank0
 17374  1082  0823               	movf	___ftpack@exp,w
 17375  1083  1903               	btfsc	3,2
 17376  1084  288A               	goto	l6161
 17377  1085  0822               	movf	___ftpack@arg+2,w
 17378  1086  0421               	iorwf	___ftpack@arg+1,w
 17379  1087  0420               	iorwf	___ftpack@arg,w
 17380  1088  1D03               	skipz
 17381  1089  289B               	goto	l6167
 17382  108A                     l6161:	
 17383  108A  3000               	movlw	0
 17384  108B  00A0               	movwf	?___ftpack
 17385  108C  3000               	movlw	0
 17386  108D  00A1               	movwf	?___ftpack+1
 17387  108E  3000               	movlw	0
 17388  108F  00A2               	movwf	?___ftpack+2
 17389  1090  0008               	return
 17390  1091                     l6165:	
 17391  1091  3001               	movlw	1
 17392  1092  00A5               	movwf	??___ftpack
 17393  1093  0825               	movf	??___ftpack,w
 17394  1094  07A3               	addwf	___ftpack@exp,f
 17395  1095  3001               	movlw	1
 17396  1096                     u4095:	
 17397  1096  36A2               	lsrf	___ftpack@arg+2,f
 17398  1097  0CA1               	rrf	___ftpack@arg+1,f
 17399  1098  0CA0               	rrf	___ftpack@arg,f
 17400  1099  0B89               	decfsz	9,f
 17401  109A  2896               	goto	u4095
 17402  109B                     l6167:	
 17403  109B  30FE               	movlw	254
 17404  109C  0522               	andwf	___ftpack@arg+2,w
 17405  109D  1903               	btfsc	3,2
 17406  109E  28B4               	goto	l3401
 17407  109F  2891               	goto	l6165
 17408  10A0                     l6169:	
 17409  10A0  3001               	movlw	1
 17410  10A1  00A5               	movwf	??___ftpack
 17411  10A2  0825               	movf	??___ftpack,w
 17412  10A3  07A3               	addwf	___ftpack@exp,f
 17413  10A4  3001               	movlw	1
 17414  10A5  07A0               	addwf	___ftpack@arg,f
 17415  10A6  3000               	movlw	0
 17416  10A7  1803               	skipnc
 17417  10A8  3001               	movlw	1
 17418  10A9  07A1               	addwf	___ftpack@arg+1,f
 17419  10AA  3000               	movlw	0
 17420  10AB  1803               	skipnc
 17421  10AC  3001               	movlw	1
 17422  10AD  07A2               	addwf	___ftpack@arg+2,f
 17423  10AE  3001               	movlw	1
 17424  10AF                     u4115:	
 17425  10AF  36A2               	lsrf	___ftpack@arg+2,f
 17426  10B0  0CA1               	rrf	___ftpack@arg+1,f
 17427  10B1  0CA0               	rrf	___ftpack@arg,f
 17428  10B2  0B89               	decfsz	9,f
 17429  10B3  28AF               	goto	u4115
 17430  10B4                     l3401:	
 17431  10B4  30FF               	movlw	255
 17432  10B5  0522               	andwf	___ftpack@arg+2,w
 17433  10B6  1903               	btfsc	3,2
 17434  10B7  28C1               	goto	l6177
 17435  10B8  28A0               	goto	l6169
 17436  10B9                     l6175:	
 17437  10B9  3001               	movlw	1
 17438  10BA  02A3               	subwf	___ftpack@exp,f
 17439  10BB  3001               	movlw	1
 17440  10BC                     u4135:	
 17441  10BC  35A0               	lslf	___ftpack@arg,f
 17442  10BD  0DA1               	rlf	___ftpack@arg+1,f
 17443  10BE  0DA2               	rlf	___ftpack@arg+2,f
 17444  10BF  0B89               	decfsz	9,f
 17445  10C0  28BC               	goto	u4135
 17446  10C1                     l6177:	
 17447  10C1  1FA1               	btfss	___ftpack@arg+1,7
 17448  10C2  28B9               	goto	l6175
 17449  10C3  1823               	btfsc	___ftpack@exp,0
 17450  10C4  28CB               	goto	l3407
 17451  10C5  30FF               	movlw	255
 17452  10C6  05A0               	andwf	___ftpack@arg,f
 17453  10C7  307F               	movlw	127
 17454  10C8  05A1               	andwf	___ftpack@arg+1,f
 17455  10C9  30FF               	movlw	255
 17456  10CA  05A2               	andwf	___ftpack@arg+2,f
 17457  10CB                     l3407:	
 17458  10CB  1003               	clrc
 17459  10CC  0CA3               	rrf	___ftpack@exp,f
 17460  10CD  0823               	movf	___ftpack@exp,w
 17461  10CE  00A5               	movwf	??___ftpack
 17462  10CF  01A6               	clrf	??___ftpack+1
 17463  10D0  01A7               	clrf	??___ftpack+2
 17464  10D1  3010               	movlw	16
 17465  10D2                     u4165:	
 17466  10D2  35A5               	lslf	??___ftpack,f
 17467  10D3  0DA6               	rlf	??___ftpack+1,f
 17468  10D4  0DA7               	rlf	??___ftpack+2,f
 17469  10D5  0B89               	decfsz	9,f
 17470  10D6  28D2               	goto	u4165
 17471  10D7  0825               	movf	??___ftpack,w
 17472  10D8  04A0               	iorwf	___ftpack@arg,f
 17473  10D9  0826               	movf	??___ftpack+1,w
 17474  10DA  04A1               	iorwf	___ftpack@arg+1,f
 17475  10DB  0827               	movf	??___ftpack+2,w
 17476  10DC  04A2               	iorwf	___ftpack@arg+2,f
 17477  10DD  0824               	movf	___ftpack@sign,w
 17478  10DE  1903               	btfsc	3,2
 17479  10DF  0008               	return
 17480  10E0  17A2               	bsf	___ftpack@arg+2,7
 17481  10E1  0008               	return
 17482  10E2                     __end_of___ftpack:	
 17483                           
 17484                           	psect	text104
 17485  2354                     __ptext104:	
 17486 ;; *************** function _Dimmer_Initialization *****************
 17487 ;; Defined at:
 17488 ;;		line 530 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;		None
 17491 ;; Auto vars:     Size  Location     Type
 17492 ;;		None
 17493 ;; Return value:  Size  Location     Type
 17494 ;;		None               void
 17495 ;; Registers used:
 17496 ;;		wreg
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17504 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17505 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17506 ;;Total ram usage:        1 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:    4
 17509 ;; This function calls:
 17510 ;;		Nothing
 17511 ;; This function is called by:
 17512 ;;		_DimmerLights_Initialization
 17513 ;; This function uses a non-reentrant model
 17514 ;;
 17515                           
 17516                           
 17517                           ;psect for function _Dimmer_Initialization
 17518  2354                     _Dimmer_Initialization:	
 17519                           
 17520                           ;Dimmer_B1.c: 532: Dimmer=&Dimmer1;
 17521                           
 17522                           ;incstack = 0
 17523                           ; Regs used in _Dimmer_Initialization: [wreg]
 17524  2354  30E1               	movlw	_Dimmer1& (0+255)
 17525  2355  0020               	movlb	0	; select bank0
 17526  2356  00A0               	movwf	??_Dimmer_Initialization
 17527  2357  0820               	movf	??_Dimmer_Initialization,w
 17528  2358  0021               	movlb	1	; select bank1
 17529  2359  00B9               	movwf	_Dimmer^(0+128)
 17530  235A  0008               	return
 17531  235B                     __end_of_Dimmer_Initialization:	
 17532                           
 17533                           	psect	text105
 17534  2378                     __ptext105:	
 17535 ;; *************** function _DelayOff_Main *****************
 17536 ;; Defined at:
 17537 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 17538 ;; Parameters:    Size  Location     Type
 17539 ;;		None
 17540 ;; Auto vars:     Size  Location     Type
 17541 ;;		None
 17542 ;; Return value:  Size  Location     Type
 17543 ;;		None               void
 17544 ;; Registers used:
 17545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17546 ;; Tracked objects:
 17547 ;;		On entry : 0/0
 17548 ;;		On exit  : 0/0
 17549 ;;		Unchanged: 0/0
 17550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17555 ;;Total ram usage:        0 bytes
 17556 ;; Hardware stack levels used:    1
 17557 ;; Hardware stack levels required when called:    7
 17558 ;; This function calls:
 17559 ;;		_DlyOff_Main
 17560 ;; This function is called by:
 17561 ;;		_main
 17562 ;; This function uses a non-reentrant model
 17563 ;;
 17564                           
 17565                           
 17566                           ;psect for function _DelayOff_Main
 17567  2378                     _DelayOff_Main:	
 17568                           
 17569                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 17570                           
 17571                           ;incstack = 0
 17572                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17573  2378  3001               	movlw	1
 17574  2379  3193  23D5  31A3   	fcall	_DlyOff_Main
 17575                           
 17576                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 17577  237C  3002               	movlw	2
 17578  237D  3193  23D5         	fcall	_DlyOff_Main
 17579  237F  0008               	return
 17580  2380                     __end_of_DelayOff_Main:	
 17581                           
 17582                           	psect	text106
 17583  13D5                     __ptext106:	
 17584 ;; *************** function _DlyOff_Main *****************
 17585 ;; Defined at:
 17586 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 17587 ;; Parameters:    Size  Location     Type
 17588 ;;  sw              1    wreg     unsigned char 
 17589 ;; Auto vars:     Size  Location     Type
 17590 ;;  sw              1   12[BANK0 ] unsigned char 
 17591 ;; Return value:  Size  Location     Type
 17592 ;;		None               void
 17593 ;; Registers used:
 17594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17595 ;; Tracked objects:
 17596 ;;		On entry : 0/0
 17597 ;;		On exit  : 0/0
 17598 ;;		Unchanged: 0/0
 17599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17602 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17603 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17604 ;;Total ram usage:        3 bytes
 17605 ;; Hardware stack levels used:    1
 17606 ;; Hardware stack levels required when called:    6
 17607 ;; This function calls:
 17608 ;;		_DelayOffPointSelect
 17609 ;;		_setBuz
 17610 ;;		_setDimmerLights_Switch
 17611 ;;		_setDimmerLights_Trigger
 17612 ;;		_setRFSW_Status
 17613 ;;		_setRF_DimmerLights
 17614 ;;		_setSw_Status
 17615 ;;		_setTxData
 17616 ;; This function is called by:
 17617 ;;		_DelayOff_Main
 17618 ;; This function uses a non-reentrant model
 17619 ;;
 17620                           
 17621                           
 17622                           ;psect for function _DlyOff_Main
 17623  13D5                     _DlyOff_Main:	
 17624                           
 17625                           ;incstack = 0
 17626                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17627                           ;DlyOff_Main@sw stored from wreg
 17628  13D5  0020               	movlb	0	; select bank0
 17629  13D6  00AC               	movwf	DlyOff_Main@sw
 17630                           
 17631                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 17632  13D7  082C               	movf	DlyOff_Main@sw,w
 17633  13D8  31A5  25FC  3193   	fcall	_DelayOffPointSelect
 17634                           
 17635                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 17636  13DB  0021               	movlb	1	; select bank1
 17637  13DC  0838               	movf	_DelayOff^(0+128),w
 17638  13DD  0086               	movwf	6
 17639  13DE  0187               	clrf	7
 17640  13DF  1C81               	btfss	1,1
 17641  13E0  0008               	return
 17642                           
 17643                           ;DelayOff_B1.c: 70: {
 17644                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 17645  13E1  0838               	movf	_DelayOff^(0+128),w
 17646  13E2  3E02               	addlw	2
 17647  13E3  0086               	movwf	6
 17648  13E4  0187               	clrf	7
 17649  13E5  3001               	movlw	1
 17650  13E6  0781               	addwf	1,f
 17651  13E7  3141               	addfsr 1,1
 17652  13E8  1803               	skipnc
 17653  13E9  0A81               	incf	1,f
 17654                           
 17655                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5400)
 17656  13EA  0838               	movf	_DelayOff^(0+128),w
 17657  13EB  3E02               	addlw	2
 17658  13EC  0086               	movwf	6
 17659  13ED  0187               	clrf	7
 17660  13EE  3F40               	moviw [0]fsr1
 17661  13EF  0020               	movlb	0	; select bank0
 17662  13F0  00AA               	movwf	??_DlyOff_Main
 17663  13F1  3F41               	moviw [1]fsr1
 17664  13F2  00AB               	movwf	??_DlyOff_Main+1
 17665  13F3  3015               	movlw	21
 17666  13F4  022B               	subwf	??_DlyOff_Main+1,w
 17667  13F5  3018               	movlw	24
 17668  13F6  1903               	skipnz
 17669  13F7  022A               	subwf	??_DlyOff_Main,w
 17670  13F8  1C03               	skipc
 17671  13F9  0008               	return
 17672                           
 17673                           ;DelayOff_B1.c: 73: {
 17674                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 17675  13FA  0021               	movlb	1	; select bank1
 17676  13FB  0838               	movf	_DelayOff^(0+128),w
 17677  13FC  3E02               	addlw	2
 17678  13FD  0086               	movwf	6
 17679  13FE  0187               	clrf	7
 17680  13FF  3000               	movlw	0
 17681  1400  3FC0               	movwi [0]fsr1
 17682  1401  3FC1               	movwi [1]fsr1
 17683                           
 17684                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 17685  1402  3001               	movlw	1
 17686  1403  0020               	movlb	0	; select bank0
 17687  1404  00AA               	movwf	??_DlyOff_Main
 17688  1405  0021               	movlb	1	; select bank1
 17689  1406  0838               	movf	_DelayOff^(0+128),w
 17690  1407  3E04               	addlw	4
 17691  1408  0086               	movwf	6
 17692  1409  0187               	clrf	7
 17693  140A  0020               	movlb	0	; select bank0
 17694  140B  082A               	movf	??_DlyOff_Main,w
 17695  140C  0781               	addwf	1,f
 17696                           
 17697                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 17698  140D  0021               	movlb	1	; select bank1
 17699  140E  0838               	movf	_DelayOff^(0+128),w
 17700  140F  3E04               	addlw	4
 17701  1410  0086               	movwf	6
 17702  1411  0187               	clrf	7
 17703  1412  0A38               	incf	_DelayOff^(0+128),w
 17704  1413  0084               	movwf	4
 17705  1414  0185               	clrf	5
 17706  1415  0800               	movf	0,w
 17707  1416  0201               	subwf	1,w
 17708  1417  1C03               	skipc
 17709  1418  0008               	return
 17710                           
 17711                           ;DelayOff_B1.c: 77: {
 17712                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 17713  1419  0838               	movf	_DelayOff^(0+128),w
 17714  141A  3E04               	addlw	4
 17715  141B  0086               	movwf	6
 17716  141C  0187               	clrf	7
 17717  141D  0181               	clrf	1
 17718                           
 17719                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 17720  141E  0838               	movf	_DelayOff^(0+128),w
 17721  141F  0086               	movwf	6
 17722  1420  0187               	clrf	7
 17723  1421  1081               	bcf	1,1
 17724                           
 17725                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 17726  1422  0020               	movlb	0	; select bank0
 17727  1423  01A2               	clrf	setSw_Status@command
 17728  1424  082C               	movf	DlyOff_Main@sw,w
 17729  1425  31A4  24B3  3193   	fcall	_setSw_Status
 17730                           
 17731                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 17732  1428  0020               	movlb	0	; select bank0
 17733  1429  01A2               	clrf	setRFSW_Status@command
 17734  142A  082C               	movf	DlyOff_Main@sw,w
 17735  142B  31A4  24A4  3193   	fcall	_setRFSW_Status
 17736                           
 17737                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 17738  142E  0020               	movlb	0	; select bank0
 17739  142F  01A0               	clrf	setRF_DimmerLights@on
 17740  1430  082C               	movf	DlyOff_Main@sw,w
 17741  1431  319F  274A  3193   	fcall	_setRF_DimmerLights
 17742                           
 17743                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 17744  1434  0020               	movlb	0	; select bank0
 17745  1435  01A2               	clrf	setDimmerLights_Trigger@command
 17746  1436  0AA2               	incf	setDimmerLights_Trigger@command,f
 17747  1437  082C               	movf	DlyOff_Main@sw,w
 17748  1438  31A4  24E2  3193   	fcall	_setDimmerLights_Trigger
 17749                           
 17750                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 17751  143B  0020               	movlb	0	; select bank0
 17752  143C  01A2               	clrf	setDimmerLights_Switch@command
 17753  143D  082C               	movf	DlyOff_Main@sw,w
 17754  143E  31A4  24D2  3193   	fcall	_setDimmerLights_Switch
 17755                           
 17756                           ;DelayOff_B1.c: 85: setTxData(1);
 17757  1441  3001               	movlw	1
 17758  1442  3199  2148  3193   	fcall	_setTxData
 17759                           
 17760                           ;DelayOff_B1.c: 86: setBuz(1,100);
 17761  1445  3064               	movlw	100
 17762  1446  0020               	movlb	0	; select bank0
 17763  1447  00A6               	movwf	setBuz@time
 17764  1448  3000               	movlw	0
 17765  1449  00A7               	movwf	setBuz@time+1
 17766  144A  3001               	movlw	1
 17767  144B  3193  235E         	fcall	_setBuz
 17768  144D  0008               	return
 17769  144E                     __end_of_DlyOff_Main:	
 17770                           
 17771                           	psect	text107
 17772  1948                     __ptext107:	
 17773 ;; *************** function _setTxData *****************
 17774 ;; Defined at:
 17775 ;;		line 130 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 17776 ;; Parameters:    Size  Location     Type
 17777 ;;  rf              1    wreg     unsigned char 
 17778 ;; Auto vars:     Size  Location     Type
 17779 ;;  rf              1    4[BANK0 ] unsigned char 
 17780 ;;  i               1    5[BANK0 ] unsigned char 
 17781 ;; Return value:  Size  Location     Type
 17782 ;;		None               void
 17783 ;; Registers used:
 17784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17785 ;; Tracked objects:
 17786 ;;		On entry : 0/0
 17787 ;;		On exit  : 0/0
 17788 ;;		Unchanged: 0/0
 17789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17791 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17792 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17793 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;Total ram usage:        4 bytes
 17795 ;; Hardware stack levels used:    1
 17796 ;; Hardware stack levels required when called:    5
 17797 ;; This function calls:
 17798 ;;		_RfPointSelect
 17799 ;; This function is called by:
 17800 ;;		_DlyOff_Main
 17801 ;;		_setDimmerLights_Adj
 17802 ;;		_MainT
 17803 ;;		_setControl_Lights_Table
 17804 ;;		_setRFSW_Control
 17805 ;;		_setRFSW_AdjControl
 17806 ;;		_Sw_DimmerOnFunc
 17807 ;;		_Sw_DimmerOffFunc
 17808 ;; This function uses a non-reentrant model
 17809 ;;
 17810                           
 17811                           
 17812                           ;psect for function _setTxData
 17813  1948                     _setTxData:	
 17814                           
 17815                           ;incstack = 0
 17816                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17817                           ;setTxData@rf stored from wreg
 17818  1948  0020               	movlb	0	; select bank0
 17819  1949  00A4               	movwf	setTxData@rf
 17820                           
 17821                           ;RF_Control_B1.c: 132: char i;
 17822                           ;RF_Control_B1.c: 133: RfPointSelect(rf);
 17823  194A  0824               	movf	setTxData@rf,w
 17824  194B  31A3  23CA  3199   	fcall	_RfPointSelect
 17825                           
 17826                           ;RF_Control_B1.c: 134: if(RF->Enable)
 17827  194E  087C               	movf	_RF,w
 17828  194F  0086               	movwf	6
 17829  1950  0187               	clrf	7
 17830  1951  1C01               	btfss	1,0
 17831  1952  0008               	return
 17832                           
 17833                           ;RF_Control_B1.c: 135: {
 17834                           ;RF_Control_B1.c: 136: if(RF->TransceiveGO == 0 && 1)
 17835  1953  087C               	movf	_RF,w
 17836  1954  0086               	movwf	6
 17837  1955  0187               	clrf	7
 17838  1956  1901               	btfsc	1,2
 17839  1957  0008               	return
 17840                           
 17841                           ;RF_Control_B1.c: 137: {
 17842                           ;RF_Control_B1.c: 138: RF->TransceiveGO=1;
 17843  1958  087C               	movf	_RF,w
 17844  1959  0086               	movwf	6
 17845  195A  0187               	clrf	7
 17846  195B  1501               	bsf	1,2
 17847                           
 17848                           ;RF_Control_B1.c: 141: for(i=0 ;i< 21 ;i++)
 17849  195C  0020               	movlb	0	; select bank0
 17850  195D  01A5               	clrf	setTxData@i
 17851  195E                     L12:	
 17852  195E  3015               	movlw	21
 17853  195F  0225               	subwf	setTxData@i,w
 17854  1960  1803               	btfsc	3,0
 17855  1961  0008               	return
 17856                           
 17857                           ;RF_Control_B1.c: 142: {
 17858                           ;RF_Control_B1.c: 143: RF_Data[i]=Product->Data[i];
 17859  1962  0825               	movf	setTxData@i,w
 17860  1963  076F               	addwf	_Product,w
 17861  1964  00A2               	movwf	??_setTxData
 17862  1965  0822               	movf	??_setTxData,w
 17863  1966  0086               	movwf	6
 17864  1967  3001               	movlw	1	; select bank2/3
 17865  1968  0087               	movwf	7
 17866  1969  0801               	movf	1,w
 17867  196A  00A3               	movwf	??_setTxData+1
 17868  196B  0825               	movf	setTxData@i,w
 17869  196C  3EA0               	addlw	_RF_Data& (0+255)
 17870  196D  0086               	movwf	6
 17871  196E  0187               	clrf	7
 17872  196F  0823               	movf	??_setTxData+1,w
 17873  1970  0081               	movwf	1
 17874  1971  3001               	movlw	1
 17875  1972  00A2               	movwf	??_setTxData
 17876  1973  0822               	movf	??_setTxData,w
 17877  1974  07A5               	addwf	setTxData@i,f
 17878  1975  295E               	goto	L12
 17879  1976                     __end_of_setTxData:	
 17880                           
 17881                           	psect	text108
 17882  23CA                     __ptext108:	
 17883 ;; *************** function _RfPointSelect *****************
 17884 ;; Defined at:
 17885 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 17886 ;; Parameters:    Size  Location     Type
 17887 ;;  rf              1    wreg     unsigned char 
 17888 ;; Auto vars:     Size  Location     Type
 17889 ;;  rf              1    1[BANK0 ] unsigned char 
 17890 ;; Return value:  Size  Location     Type
 17891 ;;		None               void
 17892 ;; Registers used:
 17893 ;;		wreg
 17894 ;; Tracked objects:
 17895 ;;		On entry : 0/0
 17896 ;;		On exit  : 0/0
 17897 ;;		Unchanged: 0/0
 17898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17902 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17903 ;;Total ram usage:        2 bytes
 17904 ;; Hardware stack levels used:    1
 17905 ;; Hardware stack levels required when called:    4
 17906 ;; This function calls:
 17907 ;;		Nothing
 17908 ;; This function is called by:
 17909 ;;		_setRF_Learn
 17910 ;;		_setRF_RxStatus
 17911 ;;		_setRF_Main
 17912 ;;		_setTxData
 17913 ;;		_setRF_Enable
 17914 ;;		_RF_RxDisable
 17915 ;;		_getRxData
 17916 ;;		_setLog_Code
 17917 ;;		_setControl_Lights_Table
 17918 ;; This function uses a non-reentrant model
 17919 ;;
 17920                           
 17921                           
 17922                           ;psect for function _RfPointSelect
 17923  23CA                     _RfPointSelect:	
 17924                           
 17925                           ;incstack = 0
 17926                           ; Regs used in _RfPointSelect: [wreg]
 17927                           ;RfPointSelect@rf stored from wreg
 17928  23CA  0020               	movlb	0	; select bank0
 17929  23CB  00A1               	movwf	RfPointSelect@rf
 17930                           
 17931                           ;RF_Control_B1.c: 10: if(rf == 1)
 17932  23CC  0821               	movf	RfPointSelect@rf,w
 17933  23CD  3A01               	xorlw	1
 17934  23CE  1D03               	skipz
 17935  23CF  0008               	return
 17936                           
 17937                           ;RF_Control_B1.c: 11: {
 17938                           ;RF_Control_B1.c: 12: RF=&RF1;
 17939  23D0  30E4               	movlw	_RF1& (0+255)
 17940  23D1  00A0               	movwf	??_RfPointSelect
 17941  23D2  0820               	movf	??_RfPointSelect,w
 17942  23D3  00FC               	movwf	_RF
 17943  23D4  0008               	return
 17944  23D5                     __end_of_RfPointSelect:	
 17945                           
 17946                           	psect	text109
 17947  24B3                     __ptext109:	
 17948 ;; *************** function _setSw_Status *****************
 17949 ;; Defined at:
 17950 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;  sw              1    wreg     unsigned char 
 17953 ;;  command         1    2[BANK0 ] unsigned char 
 17954 ;; Auto vars:     Size  Location     Type
 17955 ;;  sw              1    3[BANK0 ] unsigned char 
 17956 ;; Return value:  Size  Location     Type
 17957 ;;		None               void
 17958 ;; Registers used:
 17959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17960 ;; Tracked objects:
 17961 ;;		On entry : 0/0
 17962 ;;		On exit  : 0/0
 17963 ;;		Unchanged: 0/0
 17964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17965 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17968 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17969 ;;Total ram usage:        2 bytes
 17970 ;; Hardware stack levels used:    1
 17971 ;; Hardware stack levels required when called:    5
 17972 ;; This function calls:
 17973 ;;		_SwPointSelect
 17974 ;; This function is called by:
 17975 ;;		_DlyOff_Main
 17976 ;;		_setDimmerLights_ERROR
 17977 ;;		_setControl_Lights_Table
 17978 ;;		_setRFSW_Control
 17979 ;; This function uses a non-reentrant model
 17980 ;;
 17981                           
 17982                           
 17983                           ;psect for function _setSw_Status
 17984  24B3                     _setSw_Status:	
 17985                           
 17986                           ;incstack = 0
 17987                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17988                           ;setSw_Status@sw stored from wreg
 17989  24B3  0020               	movlb	0	; select bank0
 17990  24B4  00A3               	movwf	setSw_Status@sw
 17991                           
 17992                           ;Switch_B1.c: 108: SwPointSelect(sw);
 17993  24B5  0823               	movf	setSw_Status@sw,w
 17994  24B6  31A5  2568         	fcall	_SwPointSelect
 17995                           
 17996                           ;Switch_B1.c: 109: Sw->Status=command;
 17997  24B8  0020               	movlb	0	; select bank0
 17998  24B9  086D               	movf	_Sw,w
 17999  24BA  0086               	movwf	6
 18000  24BB  3001               	movlw	1	; select bank2/3
 18001  24BC  0087               	movwf	7
 18002  24BD  0822               	movf	setSw_Status@command,w
 18003  24BE  1301               	bcf	1,6
 18004  24BF  1D03               	skipz
 18005  24C0  1701               	bsf	1,6
 18006  24C1  0008               	return
 18007  24C2                     __end_of_setSw_Status:	
 18008                           
 18009                           	psect	text110
 18010  2568                     __ptext110:	
 18011 ;; *************** function _SwPointSelect *****************
 18012 ;; Defined at:
 18013 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;  sw              1    wreg     unsigned char 
 18016 ;; Auto vars:     Size  Location     Type
 18017 ;;  sw              1    1[BANK0 ] unsigned char 
 18018 ;; Return value:  Size  Location     Type
 18019 ;;		None               void
 18020 ;; Registers used:
 18021 ;;		wreg
 18022 ;; Tracked objects:
 18023 ;;		On entry : 0/0
 18024 ;;		On exit  : 0/0
 18025 ;;		Unchanged: 0/0
 18026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18029 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18030 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18031 ;;Total ram usage:        2 bytes
 18032 ;; Hardware stack levels used:    1
 18033 ;; Hardware stack levels required when called:    4
 18034 ;; This function calls:
 18035 ;;		Nothing
 18036 ;; This function is called by:
 18037 ;;		_setSw_Enable
 18038 ;;		_setSw_Status
 18039 ;;		_setSw_Main
 18040 ;;		_Sw_Detect
 18041 ;; This function uses a non-reentrant model
 18042 ;;
 18043                           
 18044                           
 18045                           ;psect for function _SwPointSelect
 18046  2568                     _SwPointSelect:	
 18047                           
 18048                           ;incstack = 0
 18049                           ; Regs used in _SwPointSelect: [wreg]
 18050                           ;SwPointSelect@sw stored from wreg
 18051  2568  0020               	movlb	0	; select bank0
 18052  2569  00A1               	movwf	SwPointSelect@sw
 18053                           
 18054                           ;Switch_B1.c: 19: if(sw == 1)
 18055  256A  0821               	movf	SwPointSelect@sw,w
 18056  256B  3A01               	xorlw	1
 18057  256C  1D03               	skipz
 18058  256D  2D73               	goto	l6489
 18059                           
 18060                           ;Switch_B1.c: 20: {
 18061                           ;Switch_B1.c: 21: Sw=&Sw1;
 18062  256E  3054               	movlw	_Sw1& (0+255)
 18063  256F  00A0               	movwf	??_SwPointSelect
 18064  2570  0820               	movf	??_SwPointSelect,w
 18065  2571  00ED               	movwf	_Sw
 18066                           
 18067                           ;Switch_B1.c: 22: }
 18068  2572  0008               	return
 18069  2573                     l6489:	
 18070                           
 18071                           ;Switch_B1.c: 25: else if(sw == 2)
 18072  2573  0821               	movf	SwPointSelect@sw,w
 18073  2574  3A02               	xorlw	2
 18074  2575  1D03               	skipz
 18075  2576  0008               	return
 18076                           
 18077                           ;Switch_B1.c: 26: {
 18078                           ;Switch_B1.c: 27: Sw=&Sw2;
 18079  2577  305D               	movlw	_Sw2& (0+255)
 18080  2578  00A0               	movwf	??_SwPointSelect
 18081  2579  0820               	movf	??_SwPointSelect,w
 18082  257A  00ED               	movwf	_Sw
 18083  257B  0008               	return
 18084  257C                     __end_of_SwPointSelect:	
 18085                           
 18086                           	psect	text111
 18087  1F4A                     __ptext111:	
 18088 ;; *************** function _setRF_DimmerLights *****************
 18089 ;; Defined at:
 18090 ;;		line 437 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 18091 ;; Parameters:    Size  Location     Type
 18092 ;;  lights          1    wreg     unsigned char 
 18093 ;;  on              1    0[BANK0 ] unsigned char 
 18094 ;; Auto vars:     Size  Location     Type
 18095 ;;  lights          1    4[BANK0 ] unsigned char 
 18096 ;;  status          1    3[BANK0 ] unsigned char 
 18097 ;; Return value:  Size  Location     Type
 18098 ;;		None               void
 18099 ;; Registers used:
 18100 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18101 ;; Tracked objects:
 18102 ;;		On entry : 0/0
 18103 ;;		On exit  : 0/0
 18104 ;;		Unchanged: 0/0
 18105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18106 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18108 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18109 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18110 ;;Total ram usage:        5 bytes
 18111 ;; Hardware stack levels used:    1
 18112 ;; Hardware stack levels required when called:    4
 18113 ;; This function calls:
 18114 ;;		Nothing
 18115 ;; This function is called by:
 18116 ;;		_DlyOff_Main
 18117 ;;		_setDimmerLights_Adj
 18118 ;;		_setRFSW_Control
 18119 ;;		_Sw_DimmerOnFunc
 18120 ;;		_Sw_DimmerOffFunc
 18121 ;; This function uses a non-reentrant model
 18122 ;;
 18123                           
 18124                           
 18125                           ;psect for function _setRF_DimmerLights
 18126  1F4A                     _setRF_DimmerLights:	
 18127                           
 18128                           ;incstack = 0
 18129                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0]
 18130                           ;setRF_DimmerLights@lights stored from wreg
 18131  1F4A  0020               	movlb	0	; select bank0
 18132  1F4B  00A4               	movwf	setRF_DimmerLights@lights
 18133                           
 18134                           ;RF_Control_B1.c: 439: char status;
 18135                           ;RF_Control_B1.c: 440: status=1;
 18136  1F4C  01A3               	clrf	setRF_DimmerLights@status
 18137  1F4D  0AA3               	incf	setRF_DimmerLights@status,f
 18138                           
 18139                           ;RF_Control_B1.c: 441: status<<=(lights-1);
 18140  1F4E  0824               	movf	setRF_DimmerLights@lights,w
 18141  1F4F  3EFF               	addlw	-1
 18142  1F50  0A89               	incf	9,f
 18143  1F51  2F54               	goto	u5010
 18144  1F52                     u5015:	
 18145  1F52  1003               	clrc
 18146  1F53  0DA3               	rlf	setRF_DimmerLights@status,f
 18147  1F54                     u5010:	
 18148  1F54  3EFF               	addlw	-1
 18149  1F55  1D03               	skipz
 18150  1F56  2F52               	goto	u5015
 18151                           
 18152                           ;RF_Control_B1.c: 442: Product->Data[11]=lights;
 18153  1F57  0824               	movf	setRF_DimmerLights@lights,w
 18154  1F58  00A1               	movwf	??_setRF_DimmerLights
 18155  1F59  086F               	movf	_Product,w
 18156  1F5A  3E0B               	addlw	11
 18157  1F5B  0086               	movwf	6
 18158  1F5C  3001               	movlw	1	; select bank2/3
 18159  1F5D  0087               	movwf	7
 18160  1F5E  0821               	movf	??_setRF_DimmerLights,w
 18161  1F5F  0081               	movwf	1
 18162                           
 18163                           ;RF_Control_B1.c: 443: Product->Data[9]=Product->Data[20+lights];
 18164  1F60  0824               	movf	setRF_DimmerLights@lights,w
 18165  1F61  3E14               	addlw	20
 18166  1F62  076F               	addwf	_Product,w
 18167  1F63  00A1               	movwf	??_setRF_DimmerLights
 18168  1F64  0821               	movf	??_setRF_DimmerLights,w
 18169  1F65  0086               	movwf	6
 18170  1F66  3001               	movlw	1	; select bank2/3
 18171  1F67  0087               	movwf	7
 18172  1F68  0801               	movf	1,w
 18173  1F69  00A2               	movwf	??_setRF_DimmerLights+1
 18174  1F6A  086F               	movf	_Product,w
 18175  1F6B  3E09               	addlw	9
 18176  1F6C  0086               	movwf	6
 18177  1F6D  3001               	movlw	1	; select bank2/3
 18178  1F6E  0087               	movwf	7
 18179  1F6F  0822               	movf	??_setRF_DimmerLights+1,w
 18180  1F70  0081               	movwf	1
 18181                           
 18182                           ;RF_Control_B1.c: 444: Product->Data[17]=Product->Data[26+lights];
 18183  1F71  0824               	movf	setRF_DimmerLights@lights,w
 18184  1F72  3E1A               	addlw	26
 18185  1F73  076F               	addwf	_Product,w
 18186  1F74  00A1               	movwf	??_setRF_DimmerLights
 18187  1F75  0821               	movf	??_setRF_DimmerLights,w
 18188  1F76  0086               	movwf	6
 18189  1F77  3001               	movlw	1	; select bank2/3
 18190  1F78  0087               	movwf	7
 18191  1F79  0801               	movf	1,w
 18192  1F7A  00A2               	movwf	??_setRF_DimmerLights+1
 18193  1F7B  086F               	movf	_Product,w
 18194  1F7C  3E11               	addlw	17
 18195  1F7D  0086               	movwf	6
 18196  1F7E  3001               	movlw	1	; select bank2/3
 18197  1F7F  0087               	movwf	7
 18198  1F80  0822               	movf	??_setRF_DimmerLights+1,w
 18199  1F81  0081               	movwf	1
 18200                           
 18201                           ;RF_Control_B1.c: 445: if(on)
 18202  1F82  0820               	movf	setRF_DimmerLights@on,w
 18203  1F83  1903               	btfsc	3,2
 18204  1F84  2F95               	goto	l6561
 18205                           
 18206                           ;RF_Control_B1.c: 446: {
 18207                           ;RF_Control_B1.c: 447: Product->Data[15]=(Product->Data[15]|status);
 18208  1F85  086F               	movf	_Product,w
 18209  1F86  3E0F               	addlw	15
 18210  1F87  0086               	movwf	6
 18211  1F88  3001               	movlw	1	; select bank2/3
 18212  1F89  0087               	movwf	7
 18213  1F8A  0801               	movf	1,w
 18214  1F8B  0423               	iorwf	setRF_DimmerLights@status,w
 18215  1F8C  00A1               	movwf	??_setRF_DimmerLights
 18216  1F8D  086F               	movf	_Product,w
 18217  1F8E  3E0F               	addlw	15
 18218  1F8F  0086               	movwf	6
 18219  1F90  3001               	movlw	1	; select bank2/3
 18220  1F91  0087               	movwf	7
 18221  1F92  0821               	movf	??_setRF_DimmerLights,w
 18222  1F93  0081               	movwf	1
 18223                           
 18224                           ;RF_Control_B1.c: 448: }
 18225  1F94  0008               	return
 18226  1F95                     l6561:	
 18227                           
 18228                           ;RF_Control_B1.c: 449: else
 18229                           ;RF_Control_B1.c: 450: {
 18230                           ;RF_Control_B1.c: 451: Product->Data[15]=(Product->Data[15]&(~status));
 18231  1F95  086F               	movf	_Product,w
 18232  1F96  3E0F               	addlw	15
 18233  1F97  0086               	movwf	6
 18234  1F98  3001               	movlw	1	; select bank2/3
 18235  1F99  0087               	movwf	7
 18236  1F9A  0923               	comf	setRF_DimmerLights@status,w
 18237  1F9B  0501               	andwf	1,w
 18238  1F9C  00A1               	movwf	??_setRF_DimmerLights
 18239  1F9D  086F               	movf	_Product,w
 18240  1F9E  3E0F               	addlw	15
 18241  1F9F  0086               	movwf	6
 18242  1FA0  3001               	movlw	1	; select bank2/3
 18243  1FA1  0087               	movwf	7
 18244  1FA2  0821               	movf	??_setRF_DimmerLights,w
 18245  1FA3  0081               	movwf	1
 18246  1FA4  0008               	return
 18247  1FA5                     __end_of_setRF_DimmerLights:	
 18248                           
 18249                           	psect	text112
 18250  24A4                     __ptext112:	
 18251 ;; *************** function _setRFSW_Status *****************
 18252 ;; Defined at:
 18253 ;;		line 417 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 18254 ;; Parameters:    Size  Location     Type
 18255 ;;  sw              1    wreg     unsigned char 
 18256 ;;  command         1    2[BANK0 ] unsigned char 
 18257 ;; Auto vars:     Size  Location     Type
 18258 ;;  sw              1    3[BANK0 ] unsigned char 
 18259 ;; Return value:  Size  Location     Type
 18260 ;;		None               void
 18261 ;; Registers used:
 18262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18263 ;; Tracked objects:
 18264 ;;		On entry : 0/0
 18265 ;;		On exit  : 0/0
 18266 ;;		Unchanged: 0/0
 18267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18268 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18271 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18272 ;;Total ram usage:        2 bytes
 18273 ;; Hardware stack levels used:    1
 18274 ;; Hardware stack levels required when called:    5
 18275 ;; This function calls:
 18276 ;;		_RfSWPointSelect
 18277 ;; This function is called by:
 18278 ;;		_DlyOff_Main
 18279 ;;		_setDimmerLights_ERROR
 18280 ;;		_setControl_Lights_Table
 18281 ;;		_Sw_DimmerOnFunc
 18282 ;;		_Sw_DimmerAdjFunc
 18283 ;; This function uses a non-reentrant model
 18284 ;;
 18285                           
 18286                           
 18287                           ;psect for function _setRFSW_Status
 18288  24A4                     _setRFSW_Status:	
 18289                           
 18290                           ;incstack = 0
 18291                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18292                           ;setRFSW_Status@sw stored from wreg
 18293  24A4  0020               	movlb	0	; select bank0
 18294  24A5  00A3               	movwf	setRFSW_Status@sw
 18295                           
 18296                           ;RF_Control_B1.c: 419: RfSWPointSelect(sw);
 18297  24A6  0823               	movf	setRFSW_Status@sw,w
 18298  24A7  31A5  25BA         	fcall	_RfSWPointSelect
 18299                           
 18300                           ;RF_Control_B1.c: 420: RFSW->Status=command;
 18301  24A9  0021               	movlb	1	; select bank1
 18302  24AA  083C               	movf	_RFSW^(0+128),w
 18303  24AB  0086               	movwf	6
 18304  24AC  0187               	clrf	7
 18305  24AD  0020               	movlb	0	; select bank0
 18306  24AE  0822               	movf	setRFSW_Status@command,w
 18307  24AF  1001               	bcf	1,0
 18308  24B0  1D03               	skipz
 18309  24B1  1401               	bsf	1,0
 18310  24B2  0008               	return
 18311  24B3                     __end_of_setRFSW_Status:	
 18312                           
 18313                           	psect	text113
 18314  25BA                     __ptext113:	
 18315 ;; *************** function _RfSWPointSelect *****************
 18316 ;; Defined at:
 18317 ;;		line 340 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 18318 ;; Parameters:    Size  Location     Type
 18319 ;;  sw              1    wreg     unsigned char 
 18320 ;; Auto vars:     Size  Location     Type
 18321 ;;  sw              1    1[BANK0 ] unsigned char 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;		None               void
 18324 ;; Registers used:
 18325 ;;		wreg
 18326 ;; Tracked objects:
 18327 ;;		On entry : 0/0
 18328 ;;		On exit  : 0/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18333 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18334 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18335 ;;Total ram usage:        2 bytes
 18336 ;; Hardware stack levels used:    1
 18337 ;; Hardware stack levels required when called:    4
 18338 ;; This function calls:
 18339 ;;		Nothing
 18340 ;; This function is called by:
 18341 ;;		_setRFSW_Control
 18342 ;;		_setRFSW_AdjControl
 18343 ;;		_setRFSW_Status
 18344 ;; This function uses a non-reentrant model
 18345 ;;
 18346                           
 18347                           
 18348                           ;psect for function _RfSWPointSelect
 18349  25BA                     _RfSWPointSelect:	
 18350                           
 18351                           ;incstack = 0
 18352                           ; Regs used in _RfSWPointSelect: [wreg]
 18353                           ;RfSWPointSelect@sw stored from wreg
 18354  25BA  0020               	movlb	0	; select bank0
 18355  25BB  00A1               	movwf	RfSWPointSelect@sw
 18356                           
 18357                           ;RF_Control_B1.c: 343: if(sw == 1)
 18358  25BC  0821               	movf	RfSWPointSelect@sw,w
 18359  25BD  3A01               	xorlw	1
 18360  25BE  1D03               	skipz
 18361  25BF  2DC5               	goto	l2730
 18362                           
 18363                           ;RF_Control_B1.c: 344: {
 18364                           ;RF_Control_B1.c: 345: RFSW=&RFSW1;
 18365  25C0  30E6               	movlw	_RFSW1& (0+255)
 18366  25C1  00A0               	movwf	??_RfSWPointSelect
 18367  25C2  0820               	movf	??_RfSWPointSelect,w
 18368  25C3  0021               	movlb	1	; select bank1
 18369  25C4  00BC               	movwf	_RFSW^(0+128)
 18370  25C5                     l2730:	
 18371                           
 18372                           ;RF_Control_B1.c: 346: }
 18373                           ;RF_Control_B1.c: 349: if(sw == 2)
 18374  25C5  0020               	movlb	0	; select bank0
 18375  25C6  0821               	movf	RfSWPointSelect@sw,w
 18376  25C7  3A02               	xorlw	2
 18377  25C8  1D03               	skipz
 18378  25C9  0008               	return
 18379                           
 18380                           ;RF_Control_B1.c: 350: {
 18381                           ;RF_Control_B1.c: 351: RFSW=&RFSW2;
 18382  25CA  30E7               	movlw	_RFSW2& (0+255)
 18383  25CB  00A0               	movwf	??_RfSWPointSelect
 18384  25CC  0820               	movf	??_RfSWPointSelect,w
 18385  25CD  0021               	movlb	1	; select bank1
 18386  25CE  00BC               	movwf	_RFSW^(0+128)
 18387  25CF  0008               	return
 18388  25D0                     __end_of_RfSWPointSelect:	
 18389                           
 18390                           	psect	text114
 18391  24E2                     __ptext114:	
 18392 ;; *************** function _setDimmerLights_Trigger *****************
 18393 ;; Defined at:
 18394 ;;		line 455 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18395 ;; Parameters:    Size  Location     Type
 18396 ;;  lights          1    wreg     unsigned char 
 18397 ;;  command         1    2[BANK0 ] unsigned char 
 18398 ;; Auto vars:     Size  Location     Type
 18399 ;;  lights          1    3[BANK0 ] unsigned char 
 18400 ;; Return value:  Size  Location     Type
 18401 ;;		None               void
 18402 ;; Registers used:
 18403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18404 ;; Tracked objects:
 18405 ;;		On entry : 0/0
 18406 ;;		On exit  : 0/0
 18407 ;;		Unchanged: 0/0
 18408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18413 ;;Total ram usage:        2 bytes
 18414 ;; Hardware stack levels used:    1
 18415 ;; Hardware stack levels required when called:    5
 18416 ;; This function calls:
 18417 ;;		_DimmerLightsPointSelect
 18418 ;; This function is called by:
 18419 ;;		_DlyOff_Main
 18420 ;;		_setRFSW_Control
 18421 ;;		_Sw_DimmerOnFunc
 18422 ;;		_Sw_DimmerOffFunc
 18423 ;; This function uses a non-reentrant model
 18424 ;;
 18425                           
 18426                           
 18427                           ;psect for function _setDimmerLights_Trigger
 18428  24E2                     _setDimmerLights_Trigger:	
 18429                           
 18430                           ;incstack = 0
 18431                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18432                           ;setDimmerLights_Trigger@lights stored from wreg
 18433  24E2  0020               	movlb	0	; select bank0
 18434  24E3  00A3               	movwf	setDimmerLights_Trigger@lights
 18435                           
 18436                           ;Dimmer_B1.c: 457: DimmerLightsPointSelect(lights);
 18437  24E4  0823               	movf	setDimmerLights_Trigger@lights,w
 18438  24E5  31A5  2555         	fcall	_DimmerLightsPointSelect
 18439                           
 18440                           ;Dimmer_B1.c: 458: DimmerLights->Trigger=command;
 18441  24E7  0020               	movlb	0	; select bank0
 18442  24E8  086C               	movf	_DimmerLights,w
 18443  24E9  3E09               	addlw	9
 18444  24EA  0086               	movwf	6
 18445  24EB  3001               	movlw	1	; select bank2/3
 18446  24EC  0087               	movwf	7
 18447  24ED  0822               	movf	setDimmerLights_Trigger@command,w
 18448  24EE  1081               	bcf	1,1
 18449  24EF  1D03               	skipz
 18450  24F0  1481               	bsf	1,1
 18451  24F1  0008               	return
 18452  24F2                     __end_of_setDimmerLights_Trigger:	
 18453                           
 18454                           	psect	text115
 18455  24D2                     __ptext115:	
 18456 ;; *************** function _setDimmerLights_Switch *****************
 18457 ;; Defined at:
 18458 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18459 ;; Parameters:    Size  Location     Type
 18460 ;;  lights          1    wreg     unsigned char 
 18461 ;;  command         1    2[BANK0 ] unsigned char 
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;  lights          1    3[BANK0 ] unsigned char 
 18464 ;; Return value:  Size  Location     Type
 18465 ;;		None               void
 18466 ;; Registers used:
 18467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18468 ;; Tracked objects:
 18469 ;;		On entry : 0/0
 18470 ;;		On exit  : 0/0
 18471 ;;		Unchanged: 0/0
 18472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18473 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18477 ;;Total ram usage:        2 bytes
 18478 ;; Hardware stack levels used:    1
 18479 ;; Hardware stack levels required when called:    5
 18480 ;; This function calls:
 18481 ;;		_DimmerLightsPointSelect
 18482 ;; This function is called by:
 18483 ;;		_DlyOff_Main
 18484 ;;		_setRFSW_Control
 18485 ;;		_Sw_DimmerOnFunc
 18486 ;;		_Sw_DimmerOffFunc
 18487 ;; This function uses a non-reentrant model
 18488 ;;
 18489                           
 18490                           
 18491                           ;psect for function _setDimmerLights_Switch
 18492  24D2                     _setDimmerLights_Switch:	
 18493                           
 18494                           ;incstack = 0
 18495                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 18496                           ;setDimmerLights_Switch@lights stored from wreg
 18497  24D2  0020               	movlb	0	; select bank0
 18498  24D3  00A3               	movwf	setDimmerLights_Switch@lights
 18499                           
 18500                           ;Dimmer_B1.c: 447: DimmerLightsPointSelect(lights);
 18501  24D4  0823               	movf	setDimmerLights_Switch@lights,w
 18502  24D5  31A5  2555         	fcall	_DimmerLightsPointSelect
 18503                           
 18504                           ;Dimmer_B1.c: 448: DimmerLights->Switch=command;
 18505  24D7  0020               	movlb	0	; select bank0
 18506  24D8  086C               	movf	_DimmerLights,w
 18507  24D9  3E09               	addlw	9
 18508  24DA  0086               	movwf	6
 18509  24DB  3001               	movlw	1	; select bank2/3
 18510  24DC  0087               	movwf	7
 18511  24DD  0822               	movf	setDimmerLights_Switch@command,w
 18512  24DE  1001               	bcf	1,0
 18513  24DF  1D03               	skipz
 18514  24E0  1401               	bsf	1,0
 18515  24E1  0008               	return
 18516  24E2                     __end_of_setDimmerLights_Switch:	
 18517                           
 18518                           	psect	text116
 18519  2555                     __ptext116:	
 18520 ;; *************** function _DimmerLightsPointSelect *****************
 18521 ;; Defined at:
 18522 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18523 ;; Parameters:    Size  Location     Type
 18524 ;;  lights          1    wreg     unsigned char 
 18525 ;; Auto vars:     Size  Location     Type
 18526 ;;  lights          1    1[BANK0 ] unsigned char 
 18527 ;; Return value:  Size  Location     Type
 18528 ;;		None               void
 18529 ;; Registers used:
 18530 ;;		wreg
 18531 ;; Tracked objects:
 18532 ;;		On entry : 0/0
 18533 ;;		On exit  : 0/0
 18534 ;;		Unchanged: 0/0
 18535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18538 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18539 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18540 ;;Total ram usage:        2 bytes
 18541 ;; Hardware stack levels used:    1
 18542 ;; Hardware stack levels required when called:    4
 18543 ;; This function calls:
 18544 ;;		Nothing
 18545 ;; This function is called by:
 18546 ;;		_setDimmerLights_Initialization
 18547 ;;		_setDimmerLights_Main
 18548 ;;		_setDimmerLights_ERROR
 18549 ;;		_setDimmerLights_TriggerERROR
 18550 ;;		_setDimmerLights
 18551 ;;		_setDimmerLights_Adj
 18552 ;;		_setDimmerLights_AdjRF
 18553 ;;		_setDimmerLights_Switch
 18554 ;;		_setDimmerLights_AdjGo
 18555 ;;		_setDimmerLights_Trigger
 18556 ;;		_setDimmerLights_TriggerAdj
 18557 ;;		_setDimmerLights_Clear
 18558 ;;		_setDimmerLights_GO
 18559 ;;		_setDimmerLights_MaxmumValue
 18560 ;; This function uses a non-reentrant model
 18561 ;;
 18562                           
 18563                           
 18564                           ;psect for function _DimmerLightsPointSelect
 18565  2555                     _DimmerLightsPointSelect:	
 18566                           
 18567                           ;incstack = 0
 18568                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 18569                           ;DimmerLightsPointSelect@lights stored from wreg
 18570  2555  0020               	movlb	0	; select bank0
 18571  2556  00A1               	movwf	DimmerLightsPointSelect@lights
 18572                           
 18573                           ;Dimmer_B1.c: 10: if(lights == 1)
 18574  2557  0821               	movf	DimmerLightsPointSelect@lights,w
 18575  2558  3A01               	xorlw	1
 18576  2559  1D03               	skipz
 18577  255A  2D5F               	goto	l875
 18578                           
 18579                           ;Dimmer_B1.c: 11: {
 18580                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 18581  255B  302E               	movlw	_DimmerLights1& (0+255)
 18582  255C  00A0               	movwf	??_DimmerLightsPointSelect
 18583  255D  0820               	movf	??_DimmerLightsPointSelect,w
 18584  255E  00EC               	movwf	_DimmerLights
 18585  255F                     l875:	
 18586                           
 18587                           ;Dimmer_B1.c: 13: }
 18588                           ;Dimmer_B1.c: 17: if(lights == 2)
 18589  255F  0821               	movf	DimmerLightsPointSelect@lights,w
 18590  2560  3A02               	xorlw	2
 18591  2561  1D03               	skipz
 18592  2562  0008               	return
 18593                           
 18594                           ;Dimmer_B1.c: 18: {
 18595                           ;Dimmer_B1.c: 19: DimmerLights=&DimmerLights2;
 18596  2563  303B               	movlw	_DimmerLights2& (0+255)
 18597  2564  00A0               	movwf	??_DimmerLightsPointSelect
 18598  2565  0820               	movf	??_DimmerLightsPointSelect,w
 18599  2566  00EC               	movwf	_DimmerLights
 18600  2567  0008               	return
 18601  2568                     __end_of_DimmerLightsPointSelect:	
 18602                           
 18603                           	psect	text117
 18604  135E                     __ptext117:	
 18605 ;; *************** function _setBuz *****************
 18606 ;; Defined at:
 18607 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 18608 ;; Parameters:    Size  Location     Type
 18609 ;;  count           1    wreg     unsigned char 
 18610 ;;  time            2    6[BANK0 ] int 
 18611 ;; Auto vars:     Size  Location     Type
 18612 ;;  count           1    9[BANK0 ] unsigned char 
 18613 ;; Return value:  Size  Location     Type
 18614 ;;		None               void
 18615 ;; Registers used:
 18616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18617 ;; Tracked objects:
 18618 ;;		On entry : 0/0
 18619 ;;		On exit  : 0/0
 18620 ;;		Unchanged: 0/0
 18621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18624 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18625 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18626 ;;Total ram usage:        4 bytes
 18627 ;; Hardware stack levels used:    1
 18628 ;; Hardware stack levels required when called:    5
 18629 ;; This function calls:
 18630 ;;		___wmul
 18631 ;; This function is called by:
 18632 ;;		_DlyOff_Main
 18633 ;;		_setDimmerLights_Main
 18634 ;;		_DimmerLights_Exceptions
 18635 ;;		_MainT
 18636 ;;		_setLog_Code
 18637 ;;		_setControl_Lights_Table
 18638 ;;		_setRFSW_Control
 18639 ;;		_setSw_Main
 18640 ;; This function uses a non-reentrant model
 18641 ;;
 18642                           
 18643                           
 18644                           ;psect for function _setBuz
 18645  135E                     _setBuz:	
 18646                           
 18647                           ;incstack = 0
 18648                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18649                           ;setBuz@count stored from wreg
 18650  135E  0020               	movlb	0	; select bank0
 18651  135F  00A9               	movwf	setBuz@count
 18652                           
 18653                           ;Buzzer_B1.c: 24: time*=20;
 18654  1360  3014               	movlw	20
 18655  1361  00A0               	movwf	___wmul@multiplier
 18656  1362  3000               	movlw	0
 18657  1363  00A1               	movwf	___wmul@multiplier+1
 18658  1364  0827               	movf	setBuz@time+1,w
 18659  1365  01A3               	clrf	___wmul@multiplicand+1
 18660  1366  07A3               	addwf	___wmul@multiplicand+1,f
 18661  1367  0826               	movf	setBuz@time,w
 18662  1368  01A2               	clrf	___wmul@multiplicand
 18663  1369  07A2               	addwf	___wmul@multiplicand,f
 18664  136A  31A7  2718  3193   	fcall	___wmul
 18665  136D  0020               	movlb	0	; select bank0
 18666  136E  0821               	movf	?___wmul+1,w
 18667  136F  01A7               	clrf	setBuz@time+1
 18668  1370  07A7               	addwf	setBuz@time+1,f
 18669  1371  0820               	movf	?___wmul,w
 18670  1372  01A6               	clrf	setBuz@time
 18671  1373  07A6               	addwf	setBuz@time,f
 18672                           
 18673                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 18674  1374  0878               	movf	_Buz,w
 18675  1375  0086               	movwf	6
 18676  1376  3001               	movlw	1	; select bank2/3
 18677  1377  0087               	movwf	7
 18678  1378  1C01               	btfss	1,0
 18679  1379  0008               	return
 18680                           
 18681                           ;Buzzer_B1.c: 26: {
 18682                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 18683  137A  0878               	movf	_Buz,w
 18684  137B  0086               	movwf	6
 18685  137C  3001               	movlw	1	; select bank2/3
 18686  137D  0087               	movwf	7
 18687  137E  1881               	btfsc	1,1
 18688  137F  2B99               	goto	l8701
 18689                           
 18690                           ;Buzzer_B1.c: 28: {
 18691                           ;Buzzer_B1.c: 29: Buz->GO=1;
 18692  1380  0878               	movf	_Buz,w
 18693  1381  0086               	movwf	6
 18694  1382  3001               	movlw	1	; select bank2/3
 18695  1383  0087               	movwf	7
 18696  1384  1481               	bsf	1,1
 18697                           
 18698                           ;Buzzer_B1.c: 30: Buz->Count=count;
 18699  1385  0829               	movf	setBuz@count,w
 18700  1386  00A8               	movwf	??_setBuz
 18701  1387  0878               	movf	_Buz,w
 18702  1388  3E03               	addlw	3
 18703  1389  0086               	movwf	6
 18704  138A  3001               	movlw	1	; select bank2/3
 18705  138B  0087               	movwf	7
 18706  138C  0828               	movf	??_setBuz,w
 18707  138D  0081               	movwf	1
 18708                           
 18709                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 18710  138E  0878               	movf	_Buz,w
 18711  138F  3E06               	addlw	6
 18712  1390  0086               	movwf	6
 18713  1391  3001               	movlw	1	; select bank2/3
 18714  1392  0087               	movwf	7
 18715  1393  0826               	movf	setBuz@time,w
 18716  1394  3FC0               	movwi [0]fsr1
 18717  1395  0827               	movf	setBuz@time+1,w
 18718  1396  3FC1               	movwi [1]fsr1
 18719                           
 18720                           ;Buzzer_B1.c: 33: RB3=1;
 18721  1397  158D               	bsf	13,3	;volatile
 18722                           
 18723                           ;Buzzer_B1.c: 34: }
 18724  1398  0008               	return
 18725  1399                     l8701:	
 18726                           
 18727                           ;Buzzer_B1.c: 35: else
 18728                           ;Buzzer_B1.c: 36: {
 18729                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 18730  1399  0878               	movf	_Buz,w
 18731  139A  0086               	movwf	6
 18732  139B  3001               	movlw	1	; select bank2/3
 18733  139C  0087               	movwf	7
 18734  139D  1981               	btfsc	1,3
 18735  139E  2BB7               	goto	l8705
 18736                           
 18737                           ;Buzzer_B1.c: 38: {
 18738                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 18739  139F  0878               	movf	_Buz,w
 18740  13A0  0086               	movwf	6
 18741  13A1  3001               	movlw	1	; select bank2/3
 18742  13A2  0087               	movwf	7
 18743  13A3  1581               	bsf	1,3
 18744                           
 18745                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 18746  13A4  0829               	movf	setBuz@count,w
 18747  13A5  00A8               	movwf	??_setBuz
 18748  13A6  0878               	movf	_Buz,w
 18749  13A7  3E04               	addlw	4
 18750  13A8  0086               	movwf	6
 18751  13A9  3001               	movlw	1	; select bank2/3
 18752  13AA  0087               	movwf	7
 18753  13AB  0828               	movf	??_setBuz,w
 18754  13AC  0081               	movwf	1
 18755                           
 18756                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 18757  13AD  0878               	movf	_Buz,w
 18758  13AE  3E08               	addlw	8
 18759  13AF  0086               	movwf	6
 18760  13B0  3001               	movlw	1	; select bank2/3
 18761  13B1  0087               	movwf	7
 18762  13B2  0826               	movf	setBuz@time,w
 18763  13B3  3FC0               	movwi [0]fsr1
 18764  13B4  0827               	movf	setBuz@time+1,w
 18765  13B5  3FC1               	movwi [1]fsr1
 18766                           
 18767                           ;Buzzer_B1.c: 42: }
 18768  13B6  0008               	return
 18769  13B7                     l8705:	
 18770                           
 18771                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 18772  13B7  0878               	movf	_Buz,w
 18773  13B8  0086               	movwf	6
 18774  13B9  3001               	movlw	1	; select bank2/3
 18775  13BA  0087               	movwf	7
 18776  13BB  1A01               	btfsc	1,4
 18777  13BC  0008               	return
 18778                           
 18779                           ;Buzzer_B1.c: 44: {
 18780                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 18781  13BD  0878               	movf	_Buz,w
 18782  13BE  0086               	movwf	6
 18783  13BF  3001               	movlw	1	; select bank2/3
 18784  13C0  0087               	movwf	7
 18785  13C1  1601               	bsf	1,4
 18786                           
 18787                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 18788  13C2  0829               	movf	setBuz@count,w
 18789  13C3  00A8               	movwf	??_setBuz
 18790  13C4  0878               	movf	_Buz,w
 18791  13C5  3E05               	addlw	5
 18792  13C6  0086               	movwf	6
 18793  13C7  3001               	movlw	1	; select bank2/3
 18794  13C8  0087               	movwf	7
 18795  13C9  0828               	movf	??_setBuz,w
 18796  13CA  0081               	movwf	1
 18797                           
 18798                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 18799  13CB  0878               	movf	_Buz,w
 18800  13CC  3E0A               	addlw	10
 18801  13CD  0086               	movwf	6
 18802  13CE  3001               	movlw	1	; select bank2/3
 18803  13CF  0087               	movwf	7
 18804  13D0  0826               	movf	setBuz@time,w
 18805  13D1  3FC0               	movwi [0]fsr1
 18806  13D2  0827               	movf	setBuz@time+1,w
 18807  13D3  3FC1               	movwi [1]fsr1
 18808  13D4  0008               	return
 18809  13D5                     __end_of_setBuz:	
 18810                           
 18811                           	psect	text118
 18812  2718                     __ptext118:	
 18813 ;; *************** function ___wmul *****************
 18814 ;; Defined at:
 18815 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 18816 ;; Parameters:    Size  Location     Type
 18817 ;;  multiplier      2    0[BANK0 ] unsigned int 
 18818 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 18819 ;; Auto vars:     Size  Location     Type
 18820 ;;  product         2    4[BANK0 ] unsigned int 
 18821 ;; Return value:  Size  Location     Type
 18822 ;;                  2    0[BANK0 ] unsigned int 
 18823 ;; Registers used:
 18824 ;;		wreg, status,2, status,0
 18825 ;; Tracked objects:
 18826 ;;		On entry : 0/0
 18827 ;;		On exit  : 0/0
 18828 ;;		Unchanged: 0/0
 18829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18833 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18834 ;;Total ram usage:        6 bytes
 18835 ;; Hardware stack levels used:    1
 18836 ;; Hardware stack levels required when called:    4
 18837 ;; This function calls:
 18838 ;;		Nothing
 18839 ;; This function is called by:
 18840 ;;		_setBuz
 18841 ;;		_Load_Main
 18842 ;; This function uses a non-reentrant model
 18843 ;;
 18844                           
 18845                           
 18846                           ;psect for function ___wmul
 18847  2718                     ___wmul:	
 18848                           
 18849                           ;incstack = 0
 18850                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18851  2718  0020               	movlb	0	; select bank0
 18852  2719  01A4               	clrf	___wmul@product
 18853  271A  01A5               	clrf	___wmul@product+1
 18854  271B                     l8681:	
 18855  271B  1C20               	btfss	___wmul@multiplier,0
 18856  271C  2F21               	goto	l3240
 18857  271D  0822               	movf	___wmul@multiplicand,w
 18858  271E  07A4               	addwf	___wmul@product,f
 18859  271F  0823               	movf	___wmul@multiplicand+1,w
 18860  2720  3DA5               	addwfc	___wmul@product+1,f
 18861  2721                     l3240:	
 18862  2721  3001               	movlw	1
 18863  2722                     u8145:	
 18864  2722  35A2               	lslf	___wmul@multiplicand,f
 18865  2723  0DA3               	rlf	___wmul@multiplicand+1,f
 18866  2724  0B89               	decfsz	9,f
 18867  2725  2F22               	goto	u8145
 18868  2726  3001               	movlw	1
 18869  2727                     u8155:	
 18870  2727  36A1               	lsrf	___wmul@multiplier+1,f
 18871  2728  0CA0               	rrf	___wmul@multiplier,f
 18872  2729  0B89               	decfsz	9,f
 18873  272A  2F27               	goto	u8155
 18874  272B  0821               	movf	___wmul@multiplier+1,w
 18875  272C  0420               	iorwf	___wmul@multiplier,w
 18876  272D  1D03               	skipz
 18877  272E  2F1B               	goto	l8681
 18878  272F  0825               	movf	___wmul@product+1,w
 18879  2730  01A1               	clrf	?___wmul+1
 18880  2731  07A1               	addwf	?___wmul+1,f
 18881  2732  0824               	movf	___wmul@product,w
 18882  2733  01A0               	clrf	?___wmul
 18883  2734  07A0               	addwf	?___wmul,f
 18884  2735  0008               	return
 18885  2736                     __end_of___wmul:	
 18886                           
 18887                           	psect	text119
 18888  2370                     __ptext119:	
 18889 ;; *************** function _DelayOff_Initialization *****************
 18890 ;; Defined at:
 18891 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 18892 ;; Parameters:    Size  Location     Type
 18893 ;;		None
 18894 ;; Auto vars:     Size  Location     Type
 18895 ;;		None
 18896 ;; Return value:  Size  Location     Type
 18897 ;;		None               void
 18898 ;; Registers used:
 18899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18900 ;; Tracked objects:
 18901 ;;		On entry : 0/0
 18902 ;;		On exit  : 0/0
 18903 ;;		Unchanged: 0/0
 18904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18909 ;;Total ram usage:        0 bytes
 18910 ;; Hardware stack levels used:    1
 18911 ;; Hardware stack levels required when called:    6
 18912 ;; This function calls:
 18913 ;;		_DlyOff_Initialization
 18914 ;; This function is called by:
 18915 ;;		_main
 18916 ;; This function uses a non-reentrant model
 18917 ;;
 18918                           
 18919                           
 18920                           ;psect for function _DelayOff_Initialization
 18921  2370                     _DelayOff_Initialization:	
 18922                           
 18923                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 18924                           
 18925                           ;incstack = 0
 18926                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18927  2370  3001               	movlw	1
 18928  2371  31A3  23BF  31A3   	fcall	_DlyOff_Initialization
 18929                           
 18930                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 18931  2374  3002               	movlw	2
 18932  2375  31A3  23BF         	fcall	_DlyOff_Initialization
 18933  2377  0008               	return
 18934  2378                     __end_of_DelayOff_Initialization:	
 18935                           
 18936                           	psect	text120
 18937  23BF                     __ptext120:	
 18938 ;; *************** function _DlyOff_Initialization *****************
 18939 ;; Defined at:
 18940 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 18941 ;; Parameters:    Size  Location     Type
 18942 ;;  sw              1    wreg     unsigned char 
 18943 ;; Auto vars:     Size  Location     Type
 18944 ;;  sw              1    2[BANK0 ] unsigned char 
 18945 ;; Return value:  Size  Location     Type
 18946 ;;		None               void
 18947 ;; Registers used:
 18948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18949 ;; Tracked objects:
 18950 ;;		On entry : 0/0
 18951 ;;		On exit  : 0/0
 18952 ;;		Unchanged: 0/0
 18953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18957 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18958 ;;Total ram usage:        1 bytes
 18959 ;; Hardware stack levels used:    1
 18960 ;; Hardware stack levels required when called:    5
 18961 ;; This function calls:
 18962 ;;		_DelayOffPointSelect
 18963 ;; This function is called by:
 18964 ;;		_DelayOff_Initialization
 18965 ;; This function uses a non-reentrant model
 18966 ;;
 18967                           
 18968                           
 18969                           ;psect for function _DlyOff_Initialization
 18970  23BF                     _DlyOff_Initialization:	
 18971                           
 18972                           ;incstack = 0
 18973                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18974                           ;DlyOff_Initialization@sw stored from wreg
 18975  23BF  0020               	movlb	0	; select bank0
 18976  23C0  00A2               	movwf	DlyOff_Initialization@sw
 18977                           
 18978                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 18979  23C1  0822               	movf	DlyOff_Initialization@sw,w
 18980  23C2  31A5  25FC         	fcall	_DelayOffPointSelect
 18981                           
 18982                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 18983  23C4  0021               	movlb	1	; select bank1
 18984  23C5  0838               	movf	_DelayOff^(0+128),w
 18985  23C6  0086               	movwf	6
 18986  23C7  0187               	clrf	7
 18987  23C8  1401               	bsf	1,0
 18988  23C9  0008               	return
 18989  23CA                     __end_of_DlyOff_Initialization:	
 18990                           
 18991                           	psect	text121
 18992  25FC                     __ptext121:	
 18993 ;; *************** function _DelayOffPointSelect *****************
 18994 ;; Defined at:
 18995 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 18996 ;; Parameters:    Size  Location     Type
 18997 ;;  sw              1    wreg     unsigned char 
 18998 ;; Auto vars:     Size  Location     Type
 18999 ;;  sw              1    1[BANK0 ] unsigned char 
 19000 ;; Return value:  Size  Location     Type
 19001 ;;		None               void
 19002 ;; Registers used:
 19003 ;;		wreg
 19004 ;; Tracked objects:
 19005 ;;		On entry : 0/0
 19006 ;;		On exit  : 0/0
 19007 ;;		Unchanged: 0/0
 19008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19013 ;;Total ram usage:        2 bytes
 19014 ;; Hardware stack levels used:    1
 19015 ;; Hardware stack levels required when called:    4
 19016 ;; This function calls:
 19017 ;;		Nothing
 19018 ;; This function is called by:
 19019 ;;		_DlyOff_Initialization
 19020 ;;		_DlyOff_Main
 19021 ;;		_setDelayOff_GO
 19022 ;; This function uses a non-reentrant model
 19023 ;;
 19024                           
 19025                           
 19026                           ;psect for function _DelayOffPointSelect
 19027  25FC                     _DelayOffPointSelect:	
 19028                           
 19029                           ;incstack = 0
 19030                           ; Regs used in _DelayOffPointSelect: [wreg]
 19031                           ;DelayOffPointSelect@sw stored from wreg
 19032  25FC  0020               	movlb	0	; select bank0
 19033  25FD  00A1               	movwf	DelayOffPointSelect@sw
 19034                           
 19035                           ;DelayOff_B1.c: 11: if(sw == 1)
 19036  25FE  0821               	movf	DelayOffPointSelect@sw,w
 19037  25FF  3A01               	xorlw	1
 19038  2600  1D03               	skipz
 19039  2601  2E08               	goto	l6425
 19040                           
 19041                           ;DelayOff_B1.c: 12: {
 19042                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 19043  2602  30CB               	movlw	_DlySw1& (0+255)
 19044  2603  00A0               	movwf	??_DelayOffPointSelect
 19045  2604  0820               	movf	??_DelayOffPointSelect,w
 19046  2605  0021               	movlb	1	; select bank1
 19047  2606  00B8               	movwf	_DelayOff^(0+128)
 19048                           
 19049                           ;DelayOff_B1.c: 14: }
 19050  2607  0008               	return
 19051  2608                     l6425:	
 19052                           
 19053                           ;DelayOff_B1.c: 17: else if(sw == 2)
 19054  2608  0020               	movlb	0	; select bank0
 19055  2609  0821               	movf	DelayOffPointSelect@sw,w
 19056  260A  3A02               	xorlw	2
 19057  260B  1D03               	skipz
 19058  260C  0008               	return
 19059                           
 19060                           ;DelayOff_B1.c: 18: {
 19061                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 19062  260D  30D0               	movlw	_DlySw2& (0+255)
 19063  260E  00A0               	movwf	??_DelayOffPointSelect
 19064  260F  0820               	movf	??_DelayOffPointSelect,w
 19065  2610  0021               	movlb	1	; select bank1
 19066  2611  00B8               	movwf	_DelayOff^(0+128)
 19067  2612  0008               	return
 19068  2613                     __end_of_DelayOffPointSelect:	
 19069                           
 19070                           	psect	text122
 19071  2590                     __ptext122:	
 19072 ;; *************** function _CC2500_PowerOnInitial *****************
 19073 ;; Defined at:
 19074 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19075 ;; Parameters:    Size  Location     Type
 19076 ;;		None
 19077 ;; Auto vars:     Size  Location     Type
 19078 ;;		None
 19079 ;; Return value:  Size  Location     Type
 19080 ;;		None               void
 19081 ;; Registers used:
 19082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19083 ;; Tracked objects:
 19084 ;;		On entry : 0/0
 19085 ;;		On exit  : 0/0
 19086 ;;		Unchanged: 0/0
 19087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19092 ;;Total ram usage:        0 bytes
 19093 ;; Hardware stack levels used:    1
 19094 ;; Hardware stack levels required when called:    7
 19095 ;; This function calls:
 19096 ;;		_CC2500_ClearRXFIFO
 19097 ;;		_CC2500_ClearTXFIFO
 19098 ;;		_CC2500_FrequencyCabr
 19099 ;;		_CC2500_InitPATable
 19100 ;;		_CC2500_InitSetREG
 19101 ;;		_CC2500_PowerRST
 19102 ;;		_CC2500_SIDLEMode
 19103 ;; This function is called by:
 19104 ;;		_main
 19105 ;; This function uses a non-reentrant model
 19106 ;;
 19107                           
 19108                           
 19109                           ;psect for function _CC2500_PowerOnInitial
 19110  2590                     _CC2500_PowerOnInitial:	
 19111                           
 19112                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 19113                           
 19114                           ;incstack = 0
 19115                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19116  2590  3199  21A4  31A5   	fcall	_CC2500_PowerRST
 19117                           
 19118                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 19119  2593  3198  20C7  31A5   	fcall	_CC2500_InitSetREG
 19120                           
 19121                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 19122  2596  31A7  2736  31A5   	fcall	_CC2500_InitPATable
 19123                           
 19124                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 19125  2599  31A3  232E  31A5   	fcall	_CC2500_ClearTXFIFO
 19126                           
 19127                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 19128  259C  31A3  232A  31A5   	fcall	_CC2500_ClearRXFIFO
 19129                           
 19130                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 19131  259F  31A4  2424  31A5   	fcall	_CC2500_FrequencyCabr
 19132                           
 19133                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 19134  25A2  31A3  2332         	fcall	_CC2500_SIDLEMode
 19135  25A4  0008               	return
 19136  25A5                     __end_of_CC2500_PowerOnInitial:	
 19137                           
 19138                           	psect	text123
 19139  2332                     __ptext123:	
 19140 ;; *************** function _CC2500_SIDLEMode *****************
 19141 ;; Defined at:
 19142 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19143 ;; Parameters:    Size  Location     Type
 19144 ;;		None
 19145 ;; Auto vars:     Size  Location     Type
 19146 ;;		None
 19147 ;; Return value:  Size  Location     Type
 19148 ;;		None               void
 19149 ;; Registers used:
 19150 ;;		wreg, status,2, status,0, pclath, cstack
 19151 ;; Tracked objects:
 19152 ;;		On entry : 0/0
 19153 ;;		On exit  : 0/0
 19154 ;;		Unchanged: 0/0
 19155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19160 ;;Total ram usage:        0 bytes
 19161 ;; Hardware stack levels used:    1
 19162 ;; Hardware stack levels required when called:    6
 19163 ;; This function calls:
 19164 ;;		_CC2500_WriteCommand
 19165 ;; This function is called by:
 19166 ;;		_CC2500_PowerOnInitial
 19167 ;; This function uses a non-reentrant model
 19168 ;;
 19169                           
 19170                           
 19171                           ;psect for function _CC2500_SIDLEMode
 19172  2332                     _CC2500_SIDLEMode:	
 19173                           
 19174                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 19175                           
 19176                           ;incstack = 0
 19177                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 19178  2332  3036               	movlw	54
 19179  2333  31A4  24C2         	fcall	_CC2500_WriteCommand
 19180  2335  0008               	return
 19181  2336                     __end_of_CC2500_SIDLEMode:	
 19182                           
 19183                           	psect	text124
 19184  19A4                     __ptext124:	
 19185 ;; *************** function _CC2500_PowerRST *****************
 19186 ;; Defined at:
 19187 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19188 ;; Parameters:    Size  Location     Type
 19189 ;;		None
 19190 ;; Auto vars:     Size  Location     Type
 19191 ;;		None
 19192 ;; Return value:  Size  Location     Type
 19193 ;;		None               void
 19194 ;; Registers used:
 19195 ;;		wreg, status,2, status,0, pclath, cstack
 19196 ;; Tracked objects:
 19197 ;;		On entry : 0/0
 19198 ;;		On exit  : 0/0
 19199 ;;		Unchanged: 0/0
 19200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19205 ;;Total ram usage:        1 bytes
 19206 ;; Hardware stack levels used:    1
 19207 ;; Hardware stack levels required when called:    5
 19208 ;; This function calls:
 19209 ;;		_CC2500_WriteByte
 19210 ;;		_DelayTime_1us
 19211 ;; This function is called by:
 19212 ;;		_CC2500_PowerOnInitial
 19213 ;; This function uses a non-reentrant model
 19214 ;;
 19215                           
 19216                           
 19217                           ;psect for function _CC2500_PowerRST
 19218  19A4                     _CC2500_PowerRST:	
 19219                           
 19220                           ;CC2500_B1.c: 112: RC1=0;
 19221                           
 19222                           ;incstack = 0
 19223                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 19224  19A4  0020               	movlb	0	; select bank0
 19225  19A5  108E               	bcf	14,1	;volatile
 19226                           
 19227                           ;CC2500_B1.c: 113: RC0=0;
 19228  19A6  100E               	bcf	14,0	;volatile
 19229                           
 19230                           ;CC2500_B1.c: 114: RC4=1;
 19231  19A7  160E               	bsf	14,4	;volatile
 19232                           
 19233                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 19234  19A8  300A               	movlw	10
 19235  19A9  00A0               	movwf	DelayTime_1us@count
 19236  19AA  3000               	movlw	0
 19237  19AB  00A1               	movwf	DelayTime_1us@count+1
 19238  19AC  3198  207B  3199   	fcall	_DelayTime_1us
 19239                           
 19240                           ;CC2500_B1.c: 116: RC4=0;
 19241  19AF  0020               	movlb	0	; select bank0
 19242  19B0  120E               	bcf	14,4	;volatile
 19243                           
 19244                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 19245  19B1  300A               	movlw	10
 19246  19B2  00A0               	movwf	DelayTime_1us@count
 19247  19B3  3000               	movlw	0
 19248  19B4  00A1               	movwf	DelayTime_1us@count+1
 19249  19B5  3198  207B  3199   	fcall	_DelayTime_1us
 19250                           
 19251                           ;CC2500_B1.c: 118: RC4=1;
 19252  19B8  0020               	movlb	0	; select bank0
 19253  19B9  160E               	bsf	14,4	;volatile
 19254                           
 19255                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 19256  19BA  3028               	movlw	40
 19257  19BB  00A0               	movwf	DelayTime_1us@count
 19258  19BC  3000               	movlw	0
 19259  19BD  00A1               	movwf	DelayTime_1us@count+1
 19260  19BE  3198  207B  3199   	fcall	_DelayTime_1us
 19261                           
 19262                           ;CC2500_B1.c: 120: RC4=0;
 19263  19C1  0020               	movlb	0	; select bank0
 19264  19C2  120E               	bcf	14,4	;volatile
 19265                           
 19266                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 19267  19C3  3030               	movlw	48
 19268  19C4  00A6               	movwf	??_CC2500_PowerRST
 19269  19C5  0826               	movf	??_CC2500_PowerRST,w
 19270  19C6  0021               	movlb	1	; select bank1
 19271  19C7  00BF               	movwf	_SPI0Buffer^(0+128)
 19272  19C8                     l340:	
 19273                           ;CC2500_B1.c: 122: while(RC2==1);
 19274                           
 19275  19C8  0020               	movlb	0	; select bank0
 19276  19C9  190E               	btfsc	14,2	;volatile
 19277  19CA  29C8               	goto	l340
 19278                           
 19279                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 19280  19CB  31A6  262B  3199   	fcall	_CC2500_WriteByte
 19281  19CE                     l343:	
 19282                           ;CC2500_B1.c: 124: while(RC2==1);
 19283                           
 19284  19CE  0020               	movlb	0	; select bank0
 19285  19CF  190E               	btfsc	14,2	;volatile
 19286  19D0  29CE               	goto	l343
 19287                           
 19288                           ;CC2500_B1.c: 125: RC0=0;
 19289  19D1  100E               	bcf	14,0	;volatile
 19290                           
 19291                           ;CC2500_B1.c: 126: RC4=1;
 19292  19D2  160E               	bsf	14,4	;volatile
 19293  19D3  0008               	return
 19294  19D4                     __end_of_CC2500_PowerRST:	
 19295                           
 19296                           	psect	text125
 19297  18C7                     __ptext125:	
 19298 ;; *************** function _CC2500_InitSetREG *****************
 19299 ;; Defined at:
 19300 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19301 ;; Parameters:    Size  Location     Type
 19302 ;;		None
 19303 ;; Auto vars:     Size  Location     Type
 19304 ;;  loop_c          1    8[BANK0 ] unsigned char 
 19305 ;;  temp2           1    7[BANK0 ] unsigned char 
 19306 ;;  temp1           1    6[BANK0 ] unsigned char 
 19307 ;; Return value:  Size  Location     Type
 19308 ;;		None               void
 19309 ;; Registers used:
 19310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19311 ;; Tracked objects:
 19312 ;;		On entry : 0/0
 19313 ;;		On exit  : 0/0
 19314 ;;		Unchanged: 0/0
 19315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19317 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19319 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19320 ;;Total ram usage:        4 bytes
 19321 ;; Hardware stack levels used:    1
 19322 ;; Hardware stack levels required when called:    6
 19323 ;; This function calls:
 19324 ;;		_CC2500_WriteREG
 19325 ;; This function is called by:
 19326 ;;		_CC2500_PowerOnInitial
 19327 ;; This function uses a non-reentrant model
 19328 ;;
 19329                           
 19330                           
 19331                           ;psect for function _CC2500_InitSetREG
 19332  18C7                     _CC2500_InitSetREG:	
 19333                           
 19334                           ;CC2500_B1.c: 133: unsigned char loop_c;
 19335                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 19336                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 19337                           
 19338                           ;incstack = 0
 19339                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19340  18C7  0020               	movlb	0	; select bank0
 19341  18C8  01A8               	clrf	CC2500_InitSetREG@loop_c
 19342  18C9                     L13:	
 19343  18C9  302F               	movlw	47
 19344  18CA  0228               	subwf	CC2500_InitSetREG@loop_c,w
 19345  18CB  1803               	btfsc	3,0
 19346  18CC  0008               	return
 19347                           
 19348                           ;CC2500_B1.c: 137: {
 19349                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 19350  18CD  0828               	movf	CC2500_InitSetREG@loop_c,w
 19351  18CE  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 19352  18CF  0084               	movwf	4
 19353  18D0  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 19354  18D1  1803               	skipnc
 19355  18D2  3E01               	addlw	1
 19356  18D3  0085               	movwf	5
 19357  18D4  0800               	movf	0,w	;code access
 19358  18D5  00A5               	movwf	??_CC2500_InitSetREG
 19359  18D6  0825               	movf	??_CC2500_InitSetREG,w
 19360  18D7  00A6               	movwf	CC2500_InitSetREG@temp1
 19361                           
 19362                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 19363  18D8  0828               	movf	CC2500_InitSetREG@loop_c,w
 19364  18D9  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 19365  18DA  0084               	movwf	4
 19366  18DB  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 19367  18DC  1803               	skipnc
 19368  18DD  3E01               	addlw	1
 19369  18DE  0085               	movwf	5
 19370  18DF  0800               	movf	0,w	;code access
 19371  18E0  00A5               	movwf	??_CC2500_InitSetREG
 19372  18E1  0825               	movf	??_CC2500_InitSetREG,w
 19373  18E2  00A7               	movwf	CC2500_InitSetREG@temp2
 19374                           
 19375                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 19376  18E3  0827               	movf	CC2500_InitSetREG@temp2,w
 19377  18E4  00A5               	movwf	??_CC2500_InitSetREG
 19378  18E5  0825               	movf	??_CC2500_InitSetREG,w
 19379  18E6  00A2               	movwf	CC2500_WriteREG@value
 19380  18E7  0826               	movf	CC2500_InitSetREG@temp1,w
 19381  18E8  31A6  2644  3198   	fcall	_CC2500_WriteREG
 19382  18EB  3001               	movlw	1
 19383  18EC  0020               	movlb	0	; select bank0
 19384  18ED  00A5               	movwf	??_CC2500_InitSetREG
 19385  18EE  0825               	movf	??_CC2500_InitSetREG,w
 19386  18EF  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 19387  18F0  28C9               	goto	L13
 19388  18F1                     __end_of_CC2500_InitSetREG:	
 19389                           
 19390                           	psect	text126
 19391  2736                     __ptext126:	
 19392 ;; *************** function _CC2500_InitPATable *****************
 19393 ;; Defined at:
 19394 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19395 ;; Parameters:    Size  Location     Type
 19396 ;;		None
 19397 ;; Auto vars:     Size  Location     Type
 19398 ;;  loop_d          1    7[BANK0 ] unsigned char 
 19399 ;;  temp            1    6[BANK0 ] unsigned char 
 19400 ;; Return value:  Size  Location     Type
 19401 ;;		None               void
 19402 ;; Registers used:
 19403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19404 ;; Tracked objects:
 19405 ;;		On entry : 0/0
 19406 ;;		On exit  : 0/0
 19407 ;;		Unchanged: 0/0
 19408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19413 ;;Total ram usage:        3 bytes
 19414 ;; Hardware stack levels used:    1
 19415 ;; Hardware stack levels required when called:    6
 19416 ;; This function calls:
 19417 ;;		_CC2500_WriteREG
 19418 ;; This function is called by:
 19419 ;;		_CC2500_PowerOnInitial
 19420 ;; This function uses a non-reentrant model
 19421 ;;
 19422                           
 19423                           
 19424                           ;psect for function _CC2500_InitPATable
 19425  2736                     _CC2500_InitPATable:	
 19426                           
 19427                           ;CC2500_B1.c: 149: unsigned char loop_d;
 19428                           ;CC2500_B1.c: 150: unsigned char temp;
 19429                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 19430                           
 19431                           ;incstack = 0
 19432                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19433  2736  0020               	movlb	0	; select bank0
 19434  2737  01A7               	clrf	CC2500_InitPATable@loop_d
 19435  2738                     L14:	
 19436  2738  3008               	movlw	8
 19437  2739  0227               	subwf	CC2500_InitPATable@loop_d,w
 19438  273A  1803               	btfsc	3,0
 19439  273B  0008               	return
 19440                           
 19441                           ;CC2500_B1.c: 153: {
 19442                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 19443  273C  0827               	movf	CC2500_InitPATable@loop_d,w
 19444  273D  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 19445  273E  0084               	movwf	4
 19446  273F  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 19447  2740  1803               	skipnc
 19448  2741  3E01               	addlw	1
 19449  2742  0085               	movwf	5
 19450  2743  0800               	movf	0,w	;code access
 19451  2744  00A5               	movwf	??_CC2500_InitPATable
 19452  2745  0825               	movf	??_CC2500_InitPATable,w
 19453  2746  00A6               	movwf	CC2500_InitPATable@temp
 19454                           
 19455                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 19456  2747  0826               	movf	CC2500_InitPATable@temp,w
 19457  2748  00A5               	movwf	??_CC2500_InitPATable
 19458  2749  0825               	movf	??_CC2500_InitPATable,w
 19459  274A  00A2               	movwf	CC2500_WriteREG@value
 19460  274B  303E               	movlw	62
 19461  274C  31A6  2644  31A7   	fcall	_CC2500_WriteREG
 19462  274F  3001               	movlw	1
 19463  2750  0020               	movlb	0	; select bank0
 19464  2751  00A5               	movwf	??_CC2500_InitPATable
 19465  2752  0825               	movf	??_CC2500_InitPATable,w
 19466  2753  07A7               	addwf	CC2500_InitPATable@loop_d,f
 19467  2754  2F38               	goto	L14
 19468  2755                     __end_of_CC2500_InitPATable:	
 19469                           
 19470                           	psect	text127
 19471  2644                     __ptext127:	
 19472 ;; *************** function _CC2500_WriteREG *****************
 19473 ;; Defined at:
 19474 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19475 ;; Parameters:    Size  Location     Type
 19476 ;;  w_addr          1    wreg     unsigned char 
 19477 ;;  value           1    2[BANK0 ] unsigned char 
 19478 ;; Auto vars:     Size  Location     Type
 19479 ;;  w_addr          1    4[BANK0 ] unsigned char 
 19480 ;; Return value:  Size  Location     Type
 19481 ;;		None               void
 19482 ;; Registers used:
 19483 ;;		wreg, status,2, status,0, pclath, cstack
 19484 ;; Tracked objects:
 19485 ;;		On entry : 0/0
 19486 ;;		On exit  : 0/0
 19487 ;;		Unchanged: 0/0
 19488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19489 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19492 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19493 ;;Total ram usage:        3 bytes
 19494 ;; Hardware stack levels used:    1
 19495 ;; Hardware stack levels required when called:    5
 19496 ;; This function calls:
 19497 ;;		_CC2500_WriteByte
 19498 ;; This function is called by:
 19499 ;;		_CC2500_InitSetREG
 19500 ;;		_CC2500_InitPATable
 19501 ;; This function uses a non-reentrant model
 19502 ;;
 19503                           
 19504                           
 19505                           ;psect for function _CC2500_WriteREG
 19506  2644                     _CC2500_WriteREG:	
 19507                           
 19508                           ;incstack = 0
 19509                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 19510                           ;CC2500_WriteREG@w_addr stored from wreg
 19511  2644  0020               	movlb	0	; select bank0
 19512  2645  00A4               	movwf	CC2500_WriteREG@w_addr
 19513                           
 19514                           ;CC2500_B1.c: 229: RC4=0;
 19515  2646  120E               	bcf	14,4	;volatile
 19516                           
 19517                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 19518  2647  0824               	movf	CC2500_WriteREG@w_addr,w
 19519  2648  00A3               	movwf	??_CC2500_WriteREG
 19520  2649  0823               	movf	??_CC2500_WriteREG,w
 19521  264A  0021               	movlb	1	; select bank1
 19522  264B  00BF               	movwf	_SPI0Buffer^(0+128)
 19523  264C                     l385:	
 19524                           ;CC2500_B1.c: 231: while(RC2==1);
 19525                           
 19526  264C  0020               	movlb	0	; select bank0
 19527  264D  190E               	btfsc	14,2	;volatile
 19528  264E  2E4C               	goto	l385
 19529                           
 19530                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 19531  264F  31A6  262B  31A6   	fcall	_CC2500_WriteByte
 19532                           
 19533                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 19534  2652  0020               	movlb	0	; select bank0
 19535  2653  0822               	movf	CC2500_WriteREG@value,w
 19536  2654  00A3               	movwf	??_CC2500_WriteREG
 19537  2655  0823               	movf	??_CC2500_WriteREG,w
 19538  2656  0021               	movlb	1	; select bank1
 19539  2657  00BF               	movwf	_SPI0Buffer^(0+128)
 19540                           
 19541                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 19542  2658  31A6  262B         	fcall	_CC2500_WriteByte
 19543                           
 19544                           ;CC2500_B1.c: 235: RC4=1;
 19545  265A  0020               	movlb	0	; select bank0
 19546  265B  160E               	bsf	14,4	;volatile
 19547  265C  0008               	return
 19548  265D                     __end_of_CC2500_WriteREG:	
 19549                           
 19550                           	psect	text128
 19551  2424                     __ptext128:	
 19552 ;; *************** function _CC2500_FrequencyCabr *****************
 19553 ;; Defined at:
 19554 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19555 ;; Parameters:    Size  Location     Type
 19556 ;;		None
 19557 ;; Auto vars:     Size  Location     Type
 19558 ;;		None
 19559 ;; Return value:  Size  Location     Type
 19560 ;;		None               void
 19561 ;; Registers used:
 19562 ;;		wreg, status,2, status,0, pclath, cstack
 19563 ;; Tracked objects:
 19564 ;;		On entry : 0/0
 19565 ;;		On exit  : 0/0
 19566 ;;		Unchanged: 0/0
 19567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19572 ;;Total ram usage:        0 bytes
 19573 ;; Hardware stack levels used:    1
 19574 ;; Hardware stack levels required when called:    6
 19575 ;; This function calls:
 19576 ;;		_CC2500_WriteCommand
 19577 ;;		_DelayTime_1us
 19578 ;; This function is called by:
 19579 ;;		_CC2500_PowerOnInitial
 19580 ;; This function uses a non-reentrant model
 19581 ;;
 19582                           
 19583                           
 19584                           ;psect for function _CC2500_FrequencyCabr
 19585  2424                     _CC2500_FrequencyCabr:	
 19586                           
 19587                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 19588                           
 19589                           ;incstack = 0
 19590                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 19591  2424  3033               	movlw	51
 19592  2425  31A4  24C2  31A4   	fcall	_CC2500_WriteCommand
 19593                           
 19594                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 19595  2428  30E8               	movlw	232
 19596  2429  0020               	movlb	0	; select bank0
 19597  242A  00A0               	movwf	DelayTime_1us@count
 19598  242B  3003               	movlw	3
 19599  242C  00A1               	movwf	DelayTime_1us@count+1
 19600  242D  3198  207B         	fcall	_DelayTime_1us
 19601  242F  0008               	return
 19602  2430                     __end_of_CC2500_FrequencyCabr:	
 19603                           
 19604                           	psect	text129
 19605  187B                     __ptext129:	
 19606 ;; *************** function _DelayTime_1us *****************
 19607 ;; Defined at:
 19608 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19609 ;; Parameters:    Size  Location     Type
 19610 ;;  count           2    0[BANK0 ] int 
 19611 ;; Auto vars:     Size  Location     Type
 19612 ;;  j               2    4[BANK0 ] unsigned int 
 19613 ;;  i               2    2[BANK0 ] unsigned int 
 19614 ;; Return value:  Size  Location     Type
 19615 ;;		None               void
 19616 ;; Registers used:
 19617 ;;		wreg, status,2
 19618 ;; Tracked objects:
 19619 ;;		On entry : 0/0
 19620 ;;		On exit  : 0/0
 19621 ;;		Unchanged: 0/0
 19622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19623 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19624 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19626 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19627 ;;Total ram usage:        6 bytes
 19628 ;; Hardware stack levels used:    1
 19629 ;; Hardware stack levels required when called:    4
 19630 ;; This function calls:
 19631 ;;		Nothing
 19632 ;; This function is called by:
 19633 ;;		_CC2500_PowerRST
 19634 ;;		_CC2500_FrequencyCabr
 19635 ;; This function uses a non-reentrant model
 19636 ;;
 19637                           
 19638                           
 19639                           ;psect for function _DelayTime_1us
 19640  187B                     _DelayTime_1us:	
 19641                           
 19642                           ;CC2500_B1.c: 285: unsigned int i,j;
 19643                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 19644                           
 19645                           ;incstack = 0
 19646                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 19647  187B  3001               	movlw	1
 19648  187C  0020               	movlb	0	; select bank0
 19649  187D  00A2               	movwf	DelayTime_1us@i
 19650  187E  3000               	movlw	0
 19651  187F  00A3               	movwf	DelayTime_1us@i+1
 19652  1880                     l409:	
 19653  1880  0821               	movf	DelayTime_1us@count+1,w
 19654  1881  0223               	subwf	DelayTime_1us@i+1,w
 19655  1882  1D03               	skipz
 19656  1883  2886               	goto	u8715
 19657  1884  0820               	movf	DelayTime_1us@count,w
 19658  1885  0222               	subwf	DelayTime_1us@i,w
 19659  1886                     u8715:	
 19660  1886  1803               	btfsc	3,0
 19661  1887  0008               	return
 19662                           
 19663                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 19664  1888  01A4               	clrf	DelayTime_1us@j
 19665  1889  01A5               	clrf	DelayTime_1us@j+1
 19666  188A  3000               	movlw	0
 19667  188B  0225               	subwf	DelayTime_1us@j+1,w
 19668  188C  3002               	movlw	2
 19669  188D  1903               	skipnz
 19670  188E  0224               	subwf	DelayTime_1us@j,w
 19671  188F  1803               	btfsc	3,0
 19672  1890  289C               	goto	l9083
 19673  1891                     l9081:	
 19674  1891  3001               	movlw	1
 19675  1892  07A4               	addwf	DelayTime_1us@j,f
 19676  1893  3000               	movlw	0
 19677  1894  3DA5               	addwfc	DelayTime_1us@j+1,f
 19678  1895  3000               	movlw	0
 19679  1896  0225               	subwf	DelayTime_1us@j+1,w
 19680  1897  3002               	movlw	2
 19681  1898  1903               	skipnz
 19682  1899  0224               	subwf	DelayTime_1us@j,w
 19683  189A  1C03               	skipc
 19684  189B  2891               	goto	l9081
 19685  189C                     l9083:	
 19686  189C  3001               	movlw	1
 19687  189D  07A2               	addwf	DelayTime_1us@i,f
 19688  189E  3000               	movlw	0
 19689  189F  3DA3               	addwfc	DelayTime_1us@i+1,f
 19690  18A0  2880               	goto	l409
 19691  18A1                     __end_of_DelayTime_1us:	
 19692                           
 19693                           	psect	text130
 19694  232E                     __ptext130:	
 19695 ;; *************** function _CC2500_ClearTXFIFO *****************
 19696 ;; Defined at:
 19697 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19698 ;; Parameters:    Size  Location     Type
 19699 ;;		None
 19700 ;; Auto vars:     Size  Location     Type
 19701 ;;		None
 19702 ;; Return value:  Size  Location     Type
 19703 ;;		None               void
 19704 ;; Registers used:
 19705 ;;		wreg, status,2, status,0, pclath, cstack
 19706 ;; Tracked objects:
 19707 ;;		On entry : 0/0
 19708 ;;		On exit  : 0/0
 19709 ;;		Unchanged: 0/0
 19710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19715 ;;Total ram usage:        0 bytes
 19716 ;; Hardware stack levels used:    1
 19717 ;; Hardware stack levels required when called:    6
 19718 ;; This function calls:
 19719 ;;		_CC2500_WriteCommand
 19720 ;; This function is called by:
 19721 ;;		_CC2500_PowerOnInitial
 19722 ;; This function uses a non-reentrant model
 19723 ;;
 19724                           
 19725                           
 19726                           ;psect for function _CC2500_ClearTXFIFO
 19727  232E                     _CC2500_ClearTXFIFO:	
 19728                           
 19729                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 19730                           
 19731                           ;incstack = 0
 19732                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 19733  232E  303B               	movlw	59
 19734  232F  31A4  24C2         	fcall	_CC2500_WriteCommand
 19735  2331  0008               	return
 19736  2332                     __end_of_CC2500_ClearTXFIFO:	
 19737                           
 19738                           	psect	text131
 19739  232A                     __ptext131:	
 19740 ;; *************** function _CC2500_ClearRXFIFO *****************
 19741 ;; Defined at:
 19742 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19743 ;; Parameters:    Size  Location     Type
 19744 ;;		None
 19745 ;; Auto vars:     Size  Location     Type
 19746 ;;		None
 19747 ;; Return value:  Size  Location     Type
 19748 ;;		None               void
 19749 ;; Registers used:
 19750 ;;		wreg, status,2, status,0, pclath, cstack
 19751 ;; Tracked objects:
 19752 ;;		On entry : 0/0
 19753 ;;		On exit  : 0/0
 19754 ;;		Unchanged: 0/0
 19755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19760 ;;Total ram usage:        0 bytes
 19761 ;; Hardware stack levels used:    1
 19762 ;; Hardware stack levels required when called:    6
 19763 ;; This function calls:
 19764 ;;		_CC2500_WriteCommand
 19765 ;; This function is called by:
 19766 ;;		_CC2500_PowerOnInitial
 19767 ;; This function uses a non-reentrant model
 19768 ;;
 19769                           
 19770                           
 19771                           ;psect for function _CC2500_ClearRXFIFO
 19772  232A                     _CC2500_ClearRXFIFO:	
 19773                           
 19774                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 19775                           
 19776                           ;incstack = 0
 19777                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 19778  232A  303A               	movlw	58
 19779  232B  31A4  24C2         	fcall	_CC2500_WriteCommand
 19780  232D  0008               	return
 19781  232E                     __end_of_CC2500_ClearRXFIFO:	
 19782                           
 19783                           	psect	text132
 19784  24C2                     __ptext132:	
 19785 ;; *************** function _CC2500_WriteCommand *****************
 19786 ;; Defined at:
 19787 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19788 ;; Parameters:    Size  Location     Type
 19789 ;;  command         1    wreg     unsigned char 
 19790 ;; Auto vars:     Size  Location     Type
 19791 ;;  command         1    3[BANK0 ] unsigned char 
 19792 ;; Return value:  Size  Location     Type
 19793 ;;		None               void
 19794 ;; Registers used:
 19795 ;;		wreg, status,2, status,0, pclath, cstack
 19796 ;; Tracked objects:
 19797 ;;		On entry : 0/0
 19798 ;;		On exit  : 0/0
 19799 ;;		Unchanged: 0/0
 19800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19802 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19805 ;;Total ram usage:        2 bytes
 19806 ;; Hardware stack levels used:    1
 19807 ;; Hardware stack levels required when called:    5
 19808 ;; This function calls:
 19809 ;;		_CC2500_WriteByte
 19810 ;; This function is called by:
 19811 ;;		_CC2500_TxData
 19812 ;;		_CC2500_RxData
 19813 ;;		_CC2500_ClearTXFIFO
 19814 ;;		_CC2500_ClearRXFIFO
 19815 ;;		_CC2500_FrequencyCabr
 19816 ;;		_CC2500_SIDLEMode
 19817 ;;		_setRF_Main
 19818 ;;		_setRF_Enable
 19819 ;;		_RF_RxDisable
 19820 ;; This function uses a non-reentrant model
 19821 ;;
 19822                           
 19823                           
 19824                           ;psect for function _CC2500_WriteCommand
 19825  24C2                     _CC2500_WriteCommand:	
 19826                           
 19827                           ;incstack = 0
 19828                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 19829                           ;CC2500_WriteCommand@command stored from wreg
 19830  24C2  0020               	movlb	0	; select bank0
 19831  24C3  00A3               	movwf	CC2500_WriteCommand@command
 19832                           
 19833                           ;CC2500_B1.c: 255: RC4=0;
 19834  24C4  120E               	bcf	14,4	;volatile
 19835                           
 19836                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 19837  24C5  0823               	movf	CC2500_WriteCommand@command,w
 19838  24C6  00A2               	movwf	??_CC2500_WriteCommand
 19839  24C7  0822               	movf	??_CC2500_WriteCommand,w
 19840  24C8  0021               	movlb	1	; select bank1
 19841  24C9  00BF               	movwf	_SPI0Buffer^(0+128)
 19842  24CA                     l397:	
 19843                           ;CC2500_B1.c: 258: while(RC2==1);
 19844                           
 19845  24CA  0020               	movlb	0	; select bank0
 19846  24CB  190E               	btfsc	14,2	;volatile
 19847  24CC  2CCA               	goto	l397
 19848                           
 19849                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 19850  24CD  31A6  262B         	fcall	_CC2500_WriteByte
 19851                           
 19852                           ;CC2500_B1.c: 261: RC4=1;
 19853  24CF  0020               	movlb	0	; select bank0
 19854  24D0  160E               	bsf	14,4	;volatile
 19855  24D1  0008               	return
 19856  24D2                     __end_of_CC2500_WriteCommand:	
 19857                           
 19858                           	psect	text133
 19859  262B                     __ptext133:	
 19860 ;; *************** function _CC2500_WriteByte *****************
 19861 ;; Defined at:
 19862 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19863 ;; Parameters:    Size  Location     Type
 19864 ;;		None
 19865 ;; Auto vars:     Size  Location     Type
 19866 ;;  loop_a          1    1[BANK0 ] unsigned char 
 19867 ;; Return value:  Size  Location     Type
 19868 ;;		None               void
 19869 ;; Registers used:
 19870 ;;		wreg, status,2, status,0
 19871 ;; Tracked objects:
 19872 ;;		On entry : 0/0
 19873 ;;		On exit  : 0/0
 19874 ;;		Unchanged: 0/0
 19875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19879 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19880 ;;Total ram usage:        2 bytes
 19881 ;; Hardware stack levels used:    1
 19882 ;; Hardware stack levels required when called:    4
 19883 ;; This function calls:
 19884 ;;		Nothing
 19885 ;; This function is called by:
 19886 ;;		_CC2500_TxData
 19887 ;;		_CC2500_RxData
 19888 ;;		_CC2500_PowerRST
 19889 ;;		_CC2500_WriteREG
 19890 ;;		_CC2500_WriteCommand
 19891 ;;		_CC2500_ReadStatus
 19892 ;;		_CC2500_ReadREG
 19893 ;; This function uses a non-reentrant model
 19894 ;;
 19895                           
 19896                           
 19897                           ;psect for function _CC2500_WriteByte
 19898  262B                     _CC2500_WriteByte:	
 19899                           
 19900                           ;CC2500_B1.c: 195: unsigned char loop_a;
 19901                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 19902                           
 19903                           ;incstack = 0
 19904                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 19905  262B  0020               	movlb	0	; select bank0
 19906  262C  01A1               	clrf	CC2500_WriteByte@loop_a
 19907  262D                     L15:	
 19908  262D  3008               	movlw	8
 19909  262E  0221               	subwf	CC2500_WriteByte@loop_a,w
 19910  262F  1803               	btfsc	3,0
 19911  2630  0008               	return
 19912                           
 19913                           ;CC2500_B1.c: 197: {
 19914                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 19915  2631  0021               	movlb	1	; select bank1
 19916  2632  1FBF               	btfss	_SPI0Buffer^(0+128),7
 19917  2633  2E37               	goto	l373
 19918                           
 19919                           ;CC2500_B1.c: 199: RC0=1;
 19920  2634  0020               	movlb	0	; select bank0
 19921  2635  140E               	bsf	14,0	;volatile
 19922  2636  2E39               	goto	l374
 19923  2637                     l373:	
 19924                           
 19925                           ;CC2500_B1.c: 200: else
 19926                           ;CC2500_B1.c: 201: RC0=0;
 19927  2637  0020               	movlb	0	; select bank0
 19928  2638  100E               	bcf	14,0	;volatile
 19929  2639                     l374:	
 19930                           
 19931                           ;CC2500_B1.c: 202: RC1=1;
 19932  2639  148E               	bsf	14,1	;volatile
 19933                           
 19934                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 19935  263A  1003               	clrc
 19936  263B  0021               	movlb	1	; select bank1
 19937  263C  0DBF               	rlf	_SPI0Buffer^(0+128),f
 19938                           
 19939                           ;CC2500_B1.c: 204: RC1=0;
 19940  263D  0020               	movlb	0	; select bank0
 19941  263E  108E               	bcf	14,1	;volatile
 19942  263F  3001               	movlw	1
 19943  2640  00A0               	movwf	??_CC2500_WriteByte
 19944  2641  0820               	movf	??_CC2500_WriteByte,w
 19945  2642  07A1               	addwf	CC2500_WriteByte@loop_a,f
 19946  2643  2E2D               	goto	L15
 19947  2644                     __end_of_CC2500_WriteByte:	
 19948                           
 19949                           	psect	text134
 19950  08A9                     __ptext134:	
 19951 ;; *************** function _Buzzer_Main *****************
 19952 ;; Defined at:
 19953 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 19954 ;; Parameters:    Size  Location     Type
 19955 ;;		None
 19956 ;; Auto vars:     Size  Location     Type
 19957 ;;		None
 19958 ;; Return value:  Size  Location     Type
 19959 ;;		None               void
 19960 ;; Registers used:
 19961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19962 ;; Tracked objects:
 19963 ;;		On entry : 0/0
 19964 ;;		On exit  : 0/0
 19965 ;;		Unchanged: 0/0
 19966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19970 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19971 ;;Total ram usage:        4 bytes
 19972 ;; Hardware stack levels used:    1
 19973 ;; Hardware stack levels required when called:    4
 19974 ;; This function calls:
 19975 ;;		Nothing
 19976 ;; This function is called by:
 19977 ;;		_main
 19978 ;; This function uses a non-reentrant model
 19979 ;;
 19980                           
 19981                           
 19982                           ;psect for function _Buzzer_Main
 19983  08A9                     _Buzzer_Main:	
 19984                           
 19985                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 19986                           
 19987                           ;incstack = 0
 19988                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 19989  08A9  0878               	movf	_Buz,w
 19990  08AA  0086               	movwf	6
 19991  08AB  3001               	movlw	1	; select bank2/3
 19992  08AC  0087               	movwf	7
 19993  08AD  1281               	bcf	1,5
 19994  08AE  0020               	movlb	0	; select bank0
 19995  08AF  198D               	btfsc	13,3	;volatile
 19996  08B0  1681               	bsf	1,5
 19997                           
 19998                           ;Buzzer_B1.c: 57: if(Buz->GO)
 19999  08B1  0878               	movf	_Buz,w
 20000  08B2  0086               	movwf	6
 20001  08B3  3001               	movlw	1	; select bank2/3
 20002  08B4  0087               	movwf	7
 20003  08B5  1C81               	btfss	1,1
 20004  08B6  0008               	return
 20005                           
 20006                           ;Buzzer_B1.c: 58: {
 20007                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 20008  08B7  0878               	movf	_Buz,w
 20009  08B8  3E06               	addlw	6
 20010  08B9  0086               	movwf	6
 20011  08BA  3001               	movlw	1	; select bank2/3
 20012  08BB  0087               	movwf	7
 20013  08BC  3F40               	moviw [0]fsr1
 20014  08BD  0020               	movlb	0	; select bank0
 20015  08BE  00A0               	movwf	??_Buzzer_Main
 20016  08BF  3F41               	moviw [1]fsr1
 20017  08C0  00A1               	movwf	??_Buzzer_Main+1
 20018  08C1  0A78               	incf	_Buz,w
 20019  08C2  0086               	movwf	6
 20020  08C3  3001               	movlw	1	; select bank2/3
 20021  08C4  0087               	movwf	7
 20022  08C5  3F40               	moviw [0]fsr1
 20023  08C6  00A2               	movwf	??_Buzzer_Main+2
 20024  08C7  3F41               	moviw [1]fsr1
 20025  08C8  00A3               	movwf	??_Buzzer_Main+3
 20026  08C9  0821               	movf	??_Buzzer_Main+1,w
 20027  08CA  0223               	subwf	??_Buzzer_Main+3,w
 20028  08CB  1D03               	skipz
 20029  08CC  28CF               	goto	u7045
 20030  08CD  0820               	movf	??_Buzzer_Main,w
 20031  08CE  0222               	subwf	??_Buzzer_Main+2,w
 20032  08CF                     u7045:	
 20033  08CF  1C03               	skipc
 20034  08D0  0008               	return
 20035                           
 20036                           ;Buzzer_B1.c: 61: {
 20037                           ;Buzzer_B1.c: 62: Buz->Time=0;
 20038  08D1  0A78               	incf	_Buz,w
 20039  08D2  0086               	movwf	6
 20040  08D3  3001               	movlw	1	; select bank2/3
 20041  08D4  0087               	movwf	7
 20042  08D5  3000               	movlw	0
 20043  08D6  3FC0               	movwi [0]fsr1
 20044  08D7  3FC1               	movwi [1]fsr1
 20045                           
 20046                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 20047  08D8  0878               	movf	_Buz,w
 20048  08D9  0086               	movwf	6
 20049  08DA  3001               	movlw	1	; select bank2/3
 20050  08DB  0087               	movwf	7
 20051  08DC  1A81               	btfsc	1,5
 20052  08DD  2943               	goto	l7983
 20053                           
 20054                           ;Buzzer_B1.c: 64: {
 20055                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 20056  08DE  0878               	movf	_Buz,w
 20057  08DF  3E03               	addlw	3
 20058  08E0  0086               	movwf	6
 20059  08E1  3001               	movlw	1	; select bank2/3
 20060  08E2  0087               	movwf	7
 20061  08E3  0881               	movf	1,f
 20062  08E4  1D03               	skipz
 20063  08E5  293C               	goto	l7979
 20064                           
 20065                           ;Buzzer_B1.c: 66: {
 20066                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 20067  08E6  0878               	movf	_Buz,w
 20068  08E7  0086               	movwf	6
 20069  08E8  3001               	movlw	1	; select bank2/3
 20070  08E9  0087               	movwf	7
 20071  08EA  1D81               	btfss	1,3
 20072  08EB  290E               	goto	l7971
 20073                           
 20074                           ;Buzzer_B1.c: 68: {
 20075                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 20076  08EC  0878               	movf	_Buz,w
 20077  08ED  0086               	movwf	6
 20078  08EE  3001               	movlw	1	; select bank2/3
 20079  08EF  0087               	movwf	7
 20080  08F0  1181               	bcf	1,3
 20081                           
 20082                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 20083  08F1  0878               	movf	_Buz,w
 20084  08F2  3E04               	addlw	4
 20085  08F3  0086               	movwf	6
 20086  08F4  3001               	movlw	1	; select bank2/3
 20087  08F5  0087               	movwf	7
 20088  08F6  0801               	movf	1,w
 20089  08F7  00A0               	movwf	??_Buzzer_Main
 20090  08F8  0878               	movf	_Buz,w
 20091  08F9  3E03               	addlw	3
 20092  08FA  0086               	movwf	6
 20093  08FB  3001               	movlw	1	; select bank2/3
 20094  08FC  0087               	movwf	7
 20095  08FD  0820               	movf	??_Buzzer_Main,w
 20096  08FE  0081               	movwf	1
 20097                           
 20098                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 20099  08FF  0878               	movf	_Buz,w
 20100  0900  3E08               	addlw	8
 20101  0901  0086               	movwf	6
 20102  0902  3001               	movlw	1	; select bank2/3
 20103  0903  0087               	movwf	7
 20104  0904  0878               	movf	_Buz,w
 20105  0905  3E06               	addlw	6
 20106  0906  0084               	movwf	4
 20107  0907  3001               	movlw	1	; select bank2/3
 20108  0908  0085               	movwf	5
 20109  0909  3F40               	moviw [0]fsr1
 20110  090A  3F80               	movwi [0]fsr0
 20111  090B  3F41               	moviw [1]fsr1
 20112  090C  3F81               	movwi [1]fsr0
 20113                           
 20114                           ;Buzzer_B1.c: 72: }
 20115  090D  0008               	return
 20116  090E                     l7971:	
 20117                           
 20118                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 20119  090E  0878               	movf	_Buz,w
 20120  090F  0086               	movwf	6
 20121  0910  3001               	movlw	1	; select bank2/3
 20122  0911  0087               	movwf	7
 20123  0912  1E01               	btfss	1,4
 20124  0913  2936               	goto	l7977
 20125                           
 20126                           ;Buzzer_B1.c: 74: {
 20127                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 20128  0914  0878               	movf	_Buz,w
 20129  0915  0086               	movwf	6
 20130  0916  3001               	movlw	1	; select bank2/3
 20131  0917  0087               	movwf	7
 20132  0918  1201               	bcf	1,4
 20133                           
 20134                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 20135  0919  0878               	movf	_Buz,w
 20136  091A  3E05               	addlw	5
 20137  091B  0086               	movwf	6
 20138  091C  3001               	movlw	1	; select bank2/3
 20139  091D  0087               	movwf	7
 20140  091E  0801               	movf	1,w
 20141  091F  00A0               	movwf	??_Buzzer_Main
 20142  0920  0878               	movf	_Buz,w
 20143  0921  3E03               	addlw	3
 20144  0922  0086               	movwf	6
 20145  0923  3001               	movlw	1	; select bank2/3
 20146  0924  0087               	movwf	7
 20147  0925  0820               	movf	??_Buzzer_Main,w
 20148  0926  0081               	movwf	1
 20149                           
 20150                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 20151  0927  0878               	movf	_Buz,w
 20152  0928  3E0A               	addlw	10
 20153  0929  0086               	movwf	6
 20154  092A  3001               	movlw	1	; select bank2/3
 20155  092B  0087               	movwf	7
 20156  092C  0878               	movf	_Buz,w
 20157  092D  3E06               	addlw	6
 20158  092E  0084               	movwf	4
 20159  092F  3001               	movlw	1	; select bank2/3
 20160  0930  0085               	movwf	5
 20161  0931  3F40               	moviw [0]fsr1
 20162  0932  3F80               	movwi [0]fsr0
 20163  0933  3F41               	moviw [1]fsr1
 20164  0934  3F81               	movwi [1]fsr0
 20165                           
 20166                           ;Buzzer_B1.c: 78: }
 20167  0935  0008               	return
 20168  0936                     l7977:	
 20169                           
 20170                           ;Buzzer_B1.c: 79: else
 20171                           ;Buzzer_B1.c: 80: {
 20172                           ;Buzzer_B1.c: 81: Buz->GO=0;
 20173  0936  0878               	movf	_Buz,w
 20174  0937  0086               	movwf	6
 20175  0938  3001               	movlw	1	; select bank2/3
 20176  0939  0087               	movwf	7
 20177  093A  1081               	bcf	1,1
 20178                           
 20179                           ;Buzzer_B1.c: 82: }
 20180                           ;Buzzer_B1.c: 83: }
 20181  093B  0008               	return
 20182  093C                     l7979:	
 20183                           
 20184                           ;Buzzer_B1.c: 84: else
 20185                           ;Buzzer_B1.c: 85: {
 20186                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 20187  093C  0878               	movf	_Buz,w
 20188  093D  0086               	movwf	6
 20189  093E  3001               	movlw	1	; select bank2/3
 20190  093F  0087               	movwf	7
 20191  0940  1681               	bsf	1,5
 20192                           
 20193                           ;Buzzer_B1.c: 88: RB3=1;
 20194  0941  158D               	bsf	13,3	;volatile
 20195                           
 20196                           ;Buzzer_B1.c: 89: }
 20197                           ;Buzzer_B1.c: 90: }
 20198  0942  0008               	return
 20199  0943                     l7983:	
 20200                           
 20201                           ;Buzzer_B1.c: 91: else
 20202                           ;Buzzer_B1.c: 92: {
 20203                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 20204  0943  0878               	movf	_Buz,w
 20205  0944  0086               	movwf	6
 20206  0945  3001               	movlw	1	; select bank2/3
 20207  0946  0087               	movwf	7
 20208  0947  1281               	bcf	1,5
 20209                           
 20210                           ;Buzzer_B1.c: 95: RB3=0;
 20211  0948  118D               	bcf	13,3	;volatile
 20212                           
 20213                           ;Buzzer_B1.c: 97: Buz->Count--;
 20214  0949  0878               	movf	_Buz,w
 20215  094A  3E03               	addlw	3
 20216  094B  0086               	movwf	6
 20217  094C  3001               	movlw	1	; select bank2/3
 20218  094D  0087               	movwf	7
 20219  094E  3001               	movlw	1
 20220  094F  0281               	subwf	1,f
 20221  0950  0008               	return
 20222  0951                     __end_of_Buzzer_Main:	
 20223                           
 20224                           	psect	text135
 20225  23B4                     __ptext135:	
 20226 ;; *************** function _Buzzer_Initialization *****************
 20227 ;; Defined at:
 20228 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 20229 ;; Parameters:    Size  Location     Type
 20230 ;;		None
 20231 ;; Auto vars:     Size  Location     Type
 20232 ;;		None
 20233 ;; Return value:  Size  Location     Type
 20234 ;;		None               void
 20235 ;; Registers used:
 20236 ;;		wreg, fsr1l, fsr1h
 20237 ;; Tracked objects:
 20238 ;;		On entry : 0/0
 20239 ;;		On exit  : 0/0
 20240 ;;		Unchanged: 0/0
 20241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20245 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20246 ;;Total ram usage:        1 bytes
 20247 ;; Hardware stack levels used:    1
 20248 ;; Hardware stack levels required when called:    4
 20249 ;; This function calls:
 20250 ;;		Nothing
 20251 ;; This function is called by:
 20252 ;;		_main
 20253 ;; This function uses a non-reentrant model
 20254 ;;
 20255                           
 20256                           
 20257                           ;psect for function _Buzzer_Initialization
 20258  23B4                     _Buzzer_Initialization:	
 20259                           
 20260                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 20261                           
 20262                           ;incstack = 0
 20263                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 20264  23B4  3048               	movlw	_Buz1& (0+255)
 20265  23B5  0020               	movlb	0	; select bank0
 20266  23B6  00A0               	movwf	??_Buzzer_Initialization
 20267  23B7  0820               	movf	??_Buzzer_Initialization,w
 20268  23B8  00F8               	movwf	_Buz
 20269                           
 20270                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 20271  23B9  0878               	movf	_Buz,w
 20272  23BA  0086               	movwf	6
 20273  23BB  3001               	movlw	1	; select bank2/3
 20274  23BC  0087               	movwf	7
 20275  23BD  1401               	bsf	1,0
 20276  23BE  0008               	return
 20277  23BF                     __end_of_Buzzer_Initialization:	
 20278                           
 20279                           	psect	intentry
 20280  0004                     __pintentry:	
 20281 ;; *************** function _ISR *****************
 20282 ;; Defined at:
 20283 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 20284 ;; Parameters:    Size  Location     Type
 20285 ;;		None
 20286 ;; Auto vars:     Size  Location     Type
 20287 ;;		None
 20288 ;; Return value:  Size  Location     Type
 20289 ;;		None               void
 20290 ;; Registers used:
 20291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20292 ;; Tracked objects:
 20293 ;;		On entry : 0/0
 20294 ;;		On exit  : 0/0
 20295 ;;		Unchanged: 0/0
 20296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20301 ;;Total ram usage:        1 bytes
 20302 ;; Hardware stack levels used:    1
 20303 ;; Hardware stack levels required when called:    3
 20304 ;; This function calls:
 20305 ;;		_INT_ISR
 20306 ;;		_IOC_ISR
 20307 ;;		_TMR0_ISR
 20308 ;; This function is called by:
 20309 ;;		Interrupt level 1
 20310 ;; This function uses a non-reentrant model
 20311 ;;
 20312                           
 20313  0004                     _ISR:	
 20314                           
 20315                           ;incstack = 0
 20316                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20317  0004  147E               	bsf	126,0	;set compiler interrupt flag
 20318  0005  3180               	pagesel	$
 20319  0006  0020               	movlb	0	; select bank0
 20320  0007  087F               	movf	127,w
 20321  0008  00F7               	movwf	??_ISR
 20322                           
 20323                           ;MCU_16f1518_B1.c: 58: IOC_ISR();
 20324  0009  31A7  27DB  3180   	fcall	_IOC_ISR
 20325                           
 20326                           ;MCU_16f1518_B1.c: 60: TMR0_ISR();
 20327  000C  3184  2446  3180   	fcall	_TMR0_ISR
 20328                           
 20329                           ;MCU_16f1518_B1.c: 62: ;;
 20330                           ;MCU_16f1518_B1.c: 66: INT_ISR();
 20331  000F  31A4  2418         	fcall	_INT_ISR
 20332  0011  0877               	movf	??_ISR,w
 20333  0012  0020               	movlb	0	; select bank0
 20334  0013  00FF               	movwf	127
 20335  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 20336  0015  0009               	retfie
 20337  0016                     __end_of_ISR:	
 20338                           
 20339                           	psect	text137
 20340  0446                     __ptext137:	
 20341 ;; *************** function _TMR0_ISR *****************
 20342 ;; Defined at:
 20343 ;;		line 82 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 20344 ;; Parameters:    Size  Location     Type
 20345 ;;		None
 20346 ;; Auto vars:     Size  Location     Type
 20347 ;;		None
 20348 ;; Return value:  Size  Location     Type
 20349 ;;		None               void
 20350 ;; Registers used:
 20351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20352 ;; Tracked objects:
 20353 ;;		On entry : 0/0
 20354 ;;		On exit  : 0/0
 20355 ;;		Unchanged: 0/0
 20356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20359 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20361 ;;Total ram usage:        4 bytes
 20362 ;; Hardware stack levels used:    1
 20363 ;; Hardware stack levels required when called:    1
 20364 ;; This function calls:
 20365 ;;		i1_setLoad_StatusOff
 20366 ;; This function is called by:
 20367 ;;		_ISR
 20368 ;; This function uses a non-reentrant model
 20369 ;;
 20370                           
 20371                           
 20372                           ;psect for function _TMR0_ISR
 20373  0446                     _TMR0_ISR:	
 20374                           
 20375                           ;MCU_16f1518_B1.c: 84: if(TMR0IE && TMR0IF)
 20376                           
 20377                           ;incstack = 0
 20378                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20379  0446  1E8B               	btfss	11,5	;volatile
 20380  0447  0008               	return
 20381  0448  1D0B               	btfss	11,2	;volatile
 20382  0449  0008               	return
 20383                           
 20384                           ;MCU_16f1518_B1.c: 85: {
 20385                           ;MCU_16f1518_B1.c: 86: TMR0=(256-90);
 20386  044A  30A6               	movlw	166
 20387  044B  0020               	movlb	0	; select bank0
 20388  044C  0095               	movwf	21	;volatile
 20389                           
 20390                           ;MCU_16f1518_B1.c: 87: TMR0IF=0;
 20391  044D  110B               	bcf	11,2	;volatile
 20392                           
 20393                           ;MCU_16f1518_B1.c: 100: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLight
      +                          s11->Count >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count
      +                          =0; DimmerLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RB4=1
      +                          ; ;; } } }
 20394  044E  0879               	movf	_DimmerLights11,w
 20395  044F  0086               	movwf	6
 20396  0450  3001               	movlw	1	; select bank2/3
 20397  0451  0087               	movwf	7
 20398  0452  1C01               	btfss	1,0
 20399  0453  2C9E               	goto	i1l8411
 20400  0454  3001               	movlw	1
 20401  0455  00F3               	movwf	??_TMR0_ISR
 20402  0456  0879               	movf	_DimmerLights11,w
 20403  0457  3E03               	addlw	3
 20404  0458  0086               	movwf	6
 20405  0459  3001               	movlw	1	; select bank2/3
 20406  045A  0087               	movwf	7
 20407  045B  0873               	movf	??_TMR0_ISR,w
 20408  045C  0781               	addwf	1,f
 20409  045D  0021               	movlb	1	; select bank1
 20410  045E  0839               	movf	_Dimmer^(0+128),w
 20411  045F  3E02               	addlw	2
 20412  0460  0086               	movwf	6
 20413  0461  0187               	clrf	7
 20414  0462  0801               	movf	1,w
 20415  0463  00F3               	movwf	??_TMR0_ISR
 20416  0464  01F4               	clrf	??_TMR0_ISR+1
 20417  0465  09F3               	comf	??_TMR0_ISR,f
 20418  0466  09F4               	comf	??_TMR0_ISR+1,f
 20419  0467  0AF3               	incf	??_TMR0_ISR,f
 20420  0468  1903               	skipnz
 20421  0469  0AF4               	incf	??_TMR0_ISR+1,f
 20422  046A  0879               	movf	_DimmerLights11,w
 20423  046B  3E04               	addlw	4
 20424  046C  0086               	movwf	6
 20425  046D  3001               	movlw	1	; select bank2/3
 20426  046E  0087               	movwf	7
 20427  046F  0801               	movf	1,w
 20428  0470  0773               	addwf	??_TMR0_ISR,w
 20429  0471  00F5               	movwf	??_TMR0_ISR+2
 20430  0472  0874               	movf	??_TMR0_ISR+1,w
 20431  0473  1803               	skipnc
 20432  0474  0A74               	incf	??_TMR0_ISR+1,w
 20433  0475  00F6               	movwf	??_TMR0_ISR+3
 20434  0476  0879               	movf	_DimmerLights11,w
 20435  0477  3E03               	addlw	3
 20436  0478  0086               	movwf	6
 20437  0479  3001               	movlw	1	; select bank2/3
 20438  047A  0087               	movwf	7
 20439  047B  0876               	movf	??_TMR0_ISR+3,w
 20440  047C  3A80               	xorlw	128
 20441  047D  3C80               	sublw	128
 20442  047E  1D03               	skipz
 20443  047F  2C82               	goto	u762_25
 20444  0480  0875               	movf	??_TMR0_ISR+2,w
 20445  0481  0201               	subwf	1,w
 20446  0482                     u762_25:	
 20447  0482  1C03               	skipc
 20448  0483  2DD8               	goto	i1l8477
 20449  0484  0879               	movf	_DimmerLights11,w
 20450  0485  3E03               	addlw	3
 20451  0486  0086               	movwf	6
 20452  0487  3001               	movlw	1	; select bank2/3
 20453  0488  0087               	movwf	7
 20454  0489  0181               	clrf	1
 20455  048A  0879               	movf	_DimmerLights11,w
 20456  048B  0086               	movwf	6
 20457  048C  3001               	movlw	1	; select bank2/3
 20458  048D  0087               	movwf	7
 20459  048E  1001               	bcf	1,0
 20460  048F  0879               	movf	_DimmerLights11,w
 20461  0490  3E07               	addlw	7
 20462  0491  0086               	movwf	6
 20463  0492  3001               	movlw	1	; select bank2/3
 20464  0493  0087               	movwf	7
 20465  0494  1401               	bsf	1,0
 20466  0495  0879               	movf	_DimmerLights11,w
 20467  0496  0086               	movwf	6
 20468  0497  3001               	movlw	1	; select bank2/3
 20469  0498  0087               	movwf	7
 20470  0499  1F01               	btfss	1,6
 20471  049A  2DD8               	goto	i1l8477
 20472  049B  0020               	movlb	0	; select bank0
 20473  049C  160D               	bsf	13,4	;volatile
 20474  049D  2DD8               	goto	i1l8477
 20475  049E                     i1l8411:	
 20476  049E  0879               	movf	_DimmerLights11,w
 20477  049F  3E07               	addlw	7
 20478  04A0  0086               	movwf	6
 20479  04A1  3001               	movlw	1	; select bank2/3
 20480  04A2  0087               	movwf	7
 20481  04A3  1C01               	btfss	1,0
 20482  04A4  2DA3               	goto	i1l8469
 20483  04A5  0879               	movf	_DimmerLights11,w
 20484  04A6  3E07               	addlw	7
 20485  04A7  0086               	movwf	6
 20486  04A8  3001               	movlw	1	; select bank2/3
 20487  04A9  0087               	movwf	7
 20488  04AA  1001               	bcf	1,0
 20489  04AB  0879               	movf	_DimmerLights11,w
 20490  04AC  0086               	movwf	6
 20491  04AD  3001               	movlw	1	; select bank2/3
 20492  04AE  0087               	movwf	7
 20493  04AF  1C81               	btfss	1,1
 20494  04B0  2DA3               	goto	i1l8469
 20495  04B1  3001               	movlw	1
 20496  04B2  00F3               	movwf	??_TMR0_ISR
 20497  04B3  0A79               	incf	_DimmerLights11,w
 20498  04B4  0086               	movwf	6
 20499  04B5  3001               	movlw	1	; select bank2/3
 20500  04B6  0087               	movwf	7
 20501  04B7  0873               	movf	??_TMR0_ISR,w
 20502  04B8  0781               	addwf	1,f
 20503  04B9  0A79               	incf	_DimmerLights11,w
 20504  04BA  0086               	movwf	6
 20505  04BB  3001               	movlw	1	; select bank2/3
 20506  04BC  0087               	movwf	7
 20507  04BD  0879               	movf	_DimmerLights11,w
 20508  04BE  3E02               	addlw	2
 20509  04BF  0084               	movwf	4
 20510  04C0  3001               	movlw	1	; select bank2/3
 20511  04C1  0085               	movwf	5
 20512  04C2  0800               	movf	0,w
 20513  04C3  0201               	subwf	1,w
 20514  04C4  1C03               	skipc
 20515  04C5  2DA3               	goto	i1l8469
 20516  04C6  0A79               	incf	_DimmerLights11,w
 20517  04C7  0086               	movwf	6
 20518  04C8  3001               	movlw	1	; select bank2/3
 20519  04C9  0087               	movwf	7
 20520  04CA  0181               	clrf	1
 20521  04CB  0879               	movf	_DimmerLights11,w
 20522  04CC  0086               	movwf	6
 20523  04CD  3001               	movlw	1	; select bank2/3
 20524  04CE  0087               	movwf	7
 20525  04CF  1D81               	btfss	1,3
 20526  04D0  2D07               	goto	i1l8437
 20527  04D1  0879               	movf	_DimmerLights11,w
 20528  04D2  0086               	movwf	6
 20529  04D3  3001               	movlw	1	; select bank2/3
 20530  04D4  0087               	movwf	7
 20531  04D5  1A01               	btfsc	1,4
 20532  04D6  2CEE               	goto	i1l8431
 20533  04D7  0879               	movf	_DimmerLights11,w
 20534  04D8  3E04               	addlw	4
 20535  04D9  0086               	movwf	6
 20536  04DA  3001               	movlw	1	; select bank2/3
 20537  04DB  0087               	movwf	7
 20538  04DC  303D               	movlw	61
 20539  04DD  0201               	subwf	1,w
 20540  04DE  1C03               	skipc
 20541  04DF  2CE8               	goto	i1l8429
 20542  04E0  0879               	movf	_DimmerLights11,w
 20543  04E1  3E04               	addlw	4
 20544  04E2  0086               	movwf	6
 20545  04E3  3001               	movlw	1	; select bank2/3
 20546  04E4  0087               	movwf	7
 20547  04E5  3001               	movlw	1
 20548  04E6  0281               	subwf	1,f
 20549  04E7  2DA3               	goto	i1l8469
 20550  04E8                     i1l8429:	
 20551  04E8  0879               	movf	_DimmerLights11,w
 20552  04E9  0086               	movwf	6
 20553  04EA  3001               	movlw	1	; select bank2/3
 20554  04EB  0087               	movwf	7
 20555  04EC  1601               	bsf	1,4
 20556  04ED  2DA3               	goto	i1l8469
 20557  04EE                     i1l8431:	
 20558  04EE  0879               	movf	_DimmerLights11,w
 20559  04EF  3E04               	addlw	4
 20560  04F0  0086               	movwf	6
 20561  04F1  3001               	movlw	1	; select bank2/3
 20562  04F2  0087               	movwf	7
 20563  04F3  3078               	movlw	120
 20564  04F4  0201               	subwf	1,w
 20565  04F5  1803               	skipnc
 20566  04F6  2D01               	goto	i1l8435
 20567  04F7  3001               	movlw	1
 20568  04F8  00F3               	movwf	??_TMR0_ISR
 20569  04F9  0879               	movf	_DimmerLights11,w
 20570  04FA  3E04               	addlw	4
 20571  04FB  0086               	movwf	6
 20572  04FC  3001               	movlw	1	; select bank2/3
 20573  04FD  0087               	movwf	7
 20574  04FE  0873               	movf	??_TMR0_ISR,w
 20575  04FF  0781               	addwf	1,f
 20576  0500  2DA3               	goto	i1l8469
 20577  0501                     i1l8435:	
 20578  0501  0879               	movf	_DimmerLights11,w
 20579  0502  0086               	movwf	6
 20580  0503  3001               	movlw	1	; select bank2/3
 20581  0504  0087               	movwf	7
 20582  0505  1201               	bcf	1,4
 20583  0506  2DA3               	goto	i1l8469
 20584  0507                     i1l8437:	
 20585  0507  0879               	movf	_DimmerLights11,w
 20586  0508  0086               	movwf	6
 20587  0509  3001               	movlw	1	; select bank2/3
 20588  050A  0087               	movwf	7
 20589  050B  1D01               	btfss	1,2
 20590  050C  2D4E               	goto	i1l8451
 20591  050D  0879               	movf	_DimmerLights11,w
 20592  050E  3E05               	addlw	5
 20593  050F  0086               	movwf	6
 20594  0510  3001               	movlw	1	; select bank2/3
 20595  0511  0087               	movwf	7
 20596  0512  0879               	movf	_DimmerLights11,w
 20597  0513  3E04               	addlw	4
 20598  0514  0084               	movwf	4
 20599  0515  3001               	movlw	1	; select bank2/3
 20600  0516  0085               	movwf	5
 20601  0517  0800               	movf	0,w
 20602  0518  0201               	subwf	1,w
 20603  0519  1803               	skipnc
 20604  051A  2D23               	goto	i1l8443
 20605  051B  0879               	movf	_DimmerLights11,w
 20606  051C  3E04               	addlw	4
 20607  051D  0086               	movwf	6
 20608  051E  3001               	movlw	1	; select bank2/3
 20609  051F  0087               	movwf	7
 20610  0520  3001               	movlw	1
 20611  0521  0281               	subwf	1,f
 20612  0522  2D3A               	goto	i1l8447
 20613  0523                     i1l8443:	
 20614  0523  0879               	movf	_DimmerLights11,w
 20615  0524  3E04               	addlw	4
 20616  0525  0086               	movwf	6
 20617  0526  3001               	movlw	1	; select bank2/3
 20618  0527  0087               	movwf	7
 20619  0528  0879               	movf	_DimmerLights11,w
 20620  0529  3E05               	addlw	5
 20621  052A  0084               	movwf	4
 20622  052B  3001               	movlw	1	; select bank2/3
 20623  052C  0085               	movwf	5
 20624  052D  0800               	movf	0,w
 20625  052E  0201               	subwf	1,w
 20626  052F  1803               	skipnc
 20627  0530  2D3A               	goto	i1l8447
 20628  0531  3001               	movlw	1
 20629  0532  00F3               	movwf	??_TMR0_ISR
 20630  0533  0879               	movf	_DimmerLights11,w
 20631  0534  3E04               	addlw	4
 20632  0535  0086               	movwf	6
 20633  0536  3001               	movlw	1	; select bank2/3
 20634  0537  0087               	movwf	7
 20635  0538  0873               	movf	??_TMR0_ISR,w
 20636  0539  0781               	addwf	1,f
 20637  053A                     i1l8447:	
 20638  053A  0879               	movf	_DimmerLights11,w
 20639  053B  3E05               	addlw	5
 20640  053C  0086               	movwf	6
 20641  053D  3001               	movlw	1	; select bank2/3
 20642  053E  0087               	movwf	7
 20643  053F  0879               	movf	_DimmerLights11,w
 20644  0540  3E04               	addlw	4
 20645  0541  0084               	movwf	4
 20646  0542  3001               	movlw	1	; select bank2/3
 20647  0543  0085               	movwf	5
 20648  0544  0800               	movf	0,w
 20649  0545  0601               	xorwf	1,w
 20650  0546  1D03               	skipz
 20651  0547  2DA3               	goto	i1l8469
 20652  0548  0879               	movf	_DimmerLights11,w
 20653  0549  0086               	movwf	6
 20654  054A  3001               	movlw	1	; select bank2/3
 20655  054B  0087               	movwf	7
 20656  054C  1101               	bcf	1,2
 20657  054D  2D69               	goto	i1l8457
 20658  054E                     i1l8451:	
 20659  054E  0879               	movf	_DimmerLights11,w
 20660  054F  0086               	movwf	6
 20661  0550  3001               	movlw	1	; select bank2/3
 20662  0551  0087               	movwf	7
 20663  0552  1E81               	btfss	1,5
 20664  0553  2D6F               	goto	i1l8459
 20665  0554  0879               	movf	_DimmerLights11,w
 20666  0555  3E04               	addlw	4
 20667  0556  0086               	movwf	6
 20668  0557  3001               	movlw	1	; select bank2/3
 20669  0558  0087               	movwf	7
 20670  0559  3001               	movlw	1
 20671  055A  0281               	subwf	1,f
 20672  055B  0879               	movf	_DimmerLights11,w
 20673  055C  3E05               	addlw	5
 20674  055D  0086               	movwf	6
 20675  055E  3001               	movlw	1	; select bank2/3
 20676  055F  0087               	movwf	7
 20677  0560  0879               	movf	_DimmerLights11,w
 20678  0561  3E04               	addlw	4
 20679  0562  0084               	movwf	4
 20680  0563  3001               	movlw	1	; select bank2/3
 20681  0564  0085               	movwf	5
 20682  0565  0800               	movf	0,w
 20683  0566  0201               	subwf	1,w
 20684  0567  1C03               	skipc
 20685  0568  2DA3               	goto	i1l8469
 20686  0569                     i1l8457:	
 20687  0569  0879               	movf	_DimmerLights11,w
 20688  056A  0086               	movwf	6
 20689  056B  3001               	movlw	1	; select bank2/3
 20690  056C  0087               	movwf	7
 20691  056D  1081               	bcf	1,1
 20692  056E  2DA3               	goto	i1l8469
 20693  056F                     i1l8459:	
 20694  056F  3001               	movlw	1
 20695  0570  00F3               	movwf	??_TMR0_ISR
 20696  0571  0879               	movf	_DimmerLights11,w
 20697  0572  3E04               	addlw	4
 20698  0573  0086               	movwf	6
 20699  0574  3001               	movlw	1	; select bank2/3
 20700  0575  0087               	movwf	7
 20701  0576  0873               	movf	??_TMR0_ISR,w
 20702  0577  0781               	addwf	1,f
 20703  0578  0879               	movf	_DimmerLights11,w
 20704  0579  3E04               	addlw	4
 20705  057A  0086               	movwf	6
 20706  057B  3001               	movlw	1	; select bank2/3
 20707  057C  0087               	movwf	7
 20708  057D  0879               	movf	_DimmerLights11,w
 20709  057E  3E06               	addlw	6
 20710  057F  0084               	movwf	4
 20711  0580  3001               	movlw	1	; select bank2/3
 20712  0581  0085               	movwf	5
 20713  0582  0800               	movf	0,w
 20714  0583  0201               	subwf	1,w
 20715  0584  1C03               	skipc
 20716  0585  2DA3               	goto	i1l8469
 20717  0586  0879               	movf	_DimmerLights11,w
 20718  0587  0086               	movwf	6
 20719  0588  3001               	movlw	1	; select bank2/3
 20720  0589  0087               	movwf	7
 20721  058A  1081               	bcf	1,1
 20722  058B  0879               	movf	_DimmerLights11,w
 20723  058C  0086               	movwf	6
 20724  058D  3001               	movlw	1	; select bank2/3
 20725  058E  0087               	movwf	7
 20726  058F  1301               	bcf	1,6
 20727  0590  0879               	movf	_DimmerLights11,w
 20728  0591  3E0C               	addlw	12
 20729  0592  0086               	movwf	6
 20730  0593  3001               	movlw	1	; select bank2/3
 20731  0594  0087               	movwf	7
 20732  0595  1401               	bsf	1,0
 20733  0596  0021               	movlb	1	; select bank1
 20734  0597  0839               	movf	_Dimmer^(0+128),w
 20735  0598  0086               	movwf	6
 20736  0599  0187               	clrf	7
 20737  059A  1401               	bsf	1,0
 20738  059B  0020               	movlb	0	; select bank0
 20739  059C  138E               	bcf	14,7	;volatile
 20740  059D  01F1               	clrf	i1setLoad_StatusOff@command
 20741  059E  0AF1               	incf	i1setLoad_StatusOff@command,f
 20742  059F  3001               	movlw	1
 20743  05A0  3199  21D4  3184   	fcall	i1_setLoad_StatusOff
 20744  05A3                     i1l8469:	
 20745  05A3  0020               	movlb	0	; select bank0
 20746  05A4  1E0D               	btfss	13,4	;volatile
 20747  05A5  2DD8               	goto	i1l8477
 20748  05A6  3001               	movlw	1
 20749  05A7  00F3               	movwf	??_TMR0_ISR
 20750  05A8  0879               	movf	_DimmerLights11,w
 20751  05A9  3E08               	addlw	8
 20752  05AA  0086               	movwf	6
 20753  05AB  3001               	movlw	1	; select bank2/3
 20754  05AC  0087               	movwf	7
 20755  05AD  0873               	movf	??_TMR0_ISR,w
 20756  05AE  0781               	addwf	1,f
 20757  05AF  0879               	movf	_DimmerLights11,w
 20758  05B0  3E04               	addlw	4
 20759  05B1  0086               	movwf	6
 20760  05B2  3001               	movlw	1	; select bank2/3
 20761  05B3  0087               	movwf	7
 20762  05B4  0801               	movf	1,w
 20763  05B5  00F3               	movwf	??_TMR0_ISR
 20764  05B6  01F4               	clrf	??_TMR0_ISR+1
 20765  05B7  09F3               	comf	??_TMR0_ISR,f
 20766  05B8  09F4               	comf	??_TMR0_ISR+1,f
 20767  05B9  0AF3               	incf	??_TMR0_ISR,f
 20768  05BA  1903               	skipnz
 20769  05BB  0AF4               	incf	??_TMR0_ISR+1,f
 20770  05BC  0873               	movf	??_TMR0_ISR,w
 20771  05BD  3E78               	addlw	120
 20772  05BE  00F5               	movwf	??_TMR0_ISR+2
 20773  05BF  3000               	movlw	0
 20774  05C0  3D74               	addwfc	??_TMR0_ISR+1,w
 20775  05C1  00F6               	movwf	??_TMR0_ISR+3
 20776  05C2  0879               	movf	_DimmerLights11,w
 20777  05C3  3E08               	addlw	8
 20778  05C4  0086               	movwf	6
 20779  05C5  3001               	movlw	1	; select bank2/3
 20780  05C6  0087               	movwf	7
 20781  05C7  0876               	movf	??_TMR0_ISR+3,w
 20782  05C8  3A80               	xorlw	128
 20783  05C9  3C80               	sublw	128
 20784  05CA  1D03               	skipz
 20785  05CB  2DCE               	goto	u779_25
 20786  05CC  0875               	movf	??_TMR0_ISR+2,w
 20787  05CD  0201               	subwf	1,w
 20788  05CE                     u779_25:	
 20789  05CE  1C03               	skipc
 20790  05CF  2DD8               	goto	i1l8477
 20791  05D0  0879               	movf	_DimmerLights11,w
 20792  05D1  3E08               	addlw	8
 20793  05D2  0086               	movwf	6
 20794  05D3  3001               	movlw	1	; select bank2/3
 20795  05D4  0087               	movwf	7
 20796  05D5  0181               	clrf	1
 20797  05D6  0020               	movlb	0	; select bank0
 20798  05D7  120D               	bcf	13,4	;volatile
 20799  05D8                     i1l8477:	
 20800                           
 20801                           ;MCU_16f1518_B1.c: 104: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLight
      +                          s22->Count >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count
      +                          =0; DimmerLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RA7=1
      +                          ; } } } el
 20802  05D8  087A               	movf	_DimmerLights22,w
 20803  05D9  0086               	movwf	6
 20804  05DA  3001               	movlw	1	; select bank2/3
 20805  05DB  0087               	movwf	7
 20806  05DC  1C01               	btfss	1,0
 20807  05DD  2E28               	goto	i1l8491
 20808  05DE  3001               	movlw	1
 20809  05DF  00F3               	movwf	??_TMR0_ISR
 20810  05E0  087A               	movf	_DimmerLights22,w
 20811  05E1  3E03               	addlw	3
 20812  05E2  0086               	movwf	6
 20813  05E3  3001               	movlw	1	; select bank2/3
 20814  05E4  0087               	movwf	7
 20815  05E5  0873               	movf	??_TMR0_ISR,w
 20816  05E6  0781               	addwf	1,f
 20817  05E7  0021               	movlb	1	; select bank1
 20818  05E8  0839               	movf	_Dimmer^(0+128),w
 20819  05E9  3E02               	addlw	2
 20820  05EA  0086               	movwf	6
 20821  05EB  0187               	clrf	7
 20822  05EC  0801               	movf	1,w
 20823  05ED  00F3               	movwf	??_TMR0_ISR
 20824  05EE  01F4               	clrf	??_TMR0_ISR+1
 20825  05EF  09F3               	comf	??_TMR0_ISR,f
 20826  05F0  09F4               	comf	??_TMR0_ISR+1,f
 20827  05F1  0AF3               	incf	??_TMR0_ISR,f
 20828  05F2  1903               	skipnz
 20829  05F3  0AF4               	incf	??_TMR0_ISR+1,f
 20830  05F4  087A               	movf	_DimmerLights22,w
 20831  05F5  3E04               	addlw	4
 20832  05F6  0086               	movwf	6
 20833  05F7  3001               	movlw	1	; select bank2/3
 20834  05F8  0087               	movwf	7
 20835  05F9  0801               	movf	1,w
 20836  05FA  0773               	addwf	??_TMR0_ISR,w
 20837  05FB  00F5               	movwf	??_TMR0_ISR+2
 20838  05FC  0874               	movf	??_TMR0_ISR+1,w
 20839  05FD  1803               	skipnc
 20840  05FE  0A74               	incf	??_TMR0_ISR+1,w
 20841  05FF  00F6               	movwf	??_TMR0_ISR+3
 20842  0600  087A               	movf	_DimmerLights22,w
 20843  0601  3E03               	addlw	3
 20844  0602  0086               	movwf	6
 20845  0603  3001               	movlw	1	; select bank2/3
 20846  0604  0087               	movwf	7
 20847  0605  0876               	movf	??_TMR0_ISR+3,w
 20848  0606  3A80               	xorlw	128
 20849  0607  3C80               	sublw	128
 20850  0608  1D03               	skipz
 20851  0609  2E0C               	goto	u781_25
 20852  060A  0875               	movf	??_TMR0_ISR+2,w
 20853  060B  0201               	subwf	1,w
 20854  060C                     u781_25:	
 20855  060C  1C03               	skipc
 20856  060D  2F62               	goto	i1l8557
 20857  060E  087A               	movf	_DimmerLights22,w
 20858  060F  3E03               	addlw	3
 20859  0610  0086               	movwf	6
 20860  0611  3001               	movlw	1	; select bank2/3
 20861  0612  0087               	movwf	7
 20862  0613  0181               	clrf	1
 20863  0614  087A               	movf	_DimmerLights22,w
 20864  0615  0086               	movwf	6
 20865  0616  3001               	movlw	1	; select bank2/3
 20866  0617  0087               	movwf	7
 20867  0618  1001               	bcf	1,0
 20868  0619  087A               	movf	_DimmerLights22,w
 20869  061A  3E07               	addlw	7
 20870  061B  0086               	movwf	6
 20871  061C  3001               	movlw	1	; select bank2/3
 20872  061D  0087               	movwf	7
 20873  061E  1401               	bsf	1,0
 20874  061F  087A               	movf	_DimmerLights22,w
 20875  0620  0086               	movwf	6
 20876  0621  3001               	movlw	1	; select bank2/3
 20877  0622  0087               	movwf	7
 20878  0623  1F01               	btfss	1,6
 20879  0624  2F62               	goto	i1l8557
 20880  0625  0020               	movlb	0	; select bank0
 20881  0626  178C               	bsf	12,7	;volatile
 20882  0627  2F62               	goto	i1l8557
 20883  0628                     i1l8491:	
 20884  0628  087A               	movf	_DimmerLights22,w
 20885  0629  3E07               	addlw	7
 20886  062A  0086               	movwf	6
 20887  062B  3001               	movlw	1	; select bank2/3
 20888  062C  0087               	movwf	7
 20889  062D  1C01               	btfss	1,0
 20890  062E  2F2D               	goto	i1l8549
 20891  062F  087A               	movf	_DimmerLights22,w
 20892  0630  3E07               	addlw	7
 20893  0631  0086               	movwf	6
 20894  0632  3001               	movlw	1	; select bank2/3
 20895  0633  0087               	movwf	7
 20896  0634  1001               	bcf	1,0
 20897  0635  087A               	movf	_DimmerLights22,w
 20898  0636  0086               	movwf	6
 20899  0637  3001               	movlw	1	; select bank2/3
 20900  0638  0087               	movwf	7
 20901  0639  1C81               	btfss	1,1
 20902  063A  2F2D               	goto	i1l8549
 20903  063B  3001               	movlw	1
 20904  063C  00F3               	movwf	??_TMR0_ISR
 20905  063D  0A7A               	incf	_DimmerLights22,w
 20906  063E  0086               	movwf	6
 20907  063F  3001               	movlw	1	; select bank2/3
 20908  0640  0087               	movwf	7
 20909  0641  0873               	movf	??_TMR0_ISR,w
 20910  0642  0781               	addwf	1,f
 20911  0643  0A7A               	incf	_DimmerLights22,w
 20912  0644  0086               	movwf	6
 20913  0645  3001               	movlw	1	; select bank2/3
 20914  0646  0087               	movwf	7
 20915  0647  087A               	movf	_DimmerLights22,w
 20916  0648  3E02               	addlw	2
 20917  0649  0084               	movwf	4
 20918  064A  3001               	movlw	1	; select bank2/3
 20919  064B  0085               	movwf	5
 20920  064C  0800               	movf	0,w
 20921  064D  0201               	subwf	1,w
 20922  064E  1C03               	skipc
 20923  064F  2F2D               	goto	i1l8549
 20924  0650  0A7A               	incf	_DimmerLights22,w
 20925  0651  0086               	movwf	6
 20926  0652  3001               	movlw	1	; select bank2/3
 20927  0653  0087               	movwf	7
 20928  0654  0181               	clrf	1
 20929  0655  087A               	movf	_DimmerLights22,w
 20930  0656  0086               	movwf	6
 20931  0657  3001               	movlw	1	; select bank2/3
 20932  0658  0087               	movwf	7
 20933  0659  1D81               	btfss	1,3
 20934  065A  2E91               	goto	i1l8517
 20935  065B  087A               	movf	_DimmerLights22,w
 20936  065C  0086               	movwf	6
 20937  065D  3001               	movlw	1	; select bank2/3
 20938  065E  0087               	movwf	7
 20939  065F  1A01               	btfsc	1,4
 20940  0660  2E78               	goto	i1l8511
 20941  0661  087A               	movf	_DimmerLights22,w
 20942  0662  3E04               	addlw	4
 20943  0663  0086               	movwf	6
 20944  0664  3001               	movlw	1	; select bank2/3
 20945  0665  0087               	movwf	7
 20946  0666  303D               	movlw	61
 20947  0667  0201               	subwf	1,w
 20948  0668  1C03               	skipc
 20949  0669  2E72               	goto	i1l8509
 20950  066A  087A               	movf	_DimmerLights22,w
 20951  066B  3E04               	addlw	4
 20952  066C  0086               	movwf	6
 20953  066D  3001               	movlw	1	; select bank2/3
 20954  066E  0087               	movwf	7
 20955  066F  3001               	movlw	1
 20956  0670  0281               	subwf	1,f
 20957  0671  2F2D               	goto	i1l8549
 20958  0672                     i1l8509:	
 20959  0672  087A               	movf	_DimmerLights22,w
 20960  0673  0086               	movwf	6
 20961  0674  3001               	movlw	1	; select bank2/3
 20962  0675  0087               	movwf	7
 20963  0676  1601               	bsf	1,4
 20964  0677  2F2D               	goto	i1l8549
 20965  0678                     i1l8511:	
 20966  0678  087A               	movf	_DimmerLights22,w
 20967  0679  3E04               	addlw	4
 20968  067A  0086               	movwf	6
 20969  067B  3001               	movlw	1	; select bank2/3
 20970  067C  0087               	movwf	7
 20971  067D  3078               	movlw	120
 20972  067E  0201               	subwf	1,w
 20973  067F  1803               	skipnc
 20974  0680  2E8B               	goto	i1l8515
 20975  0681  3001               	movlw	1
 20976  0682  00F3               	movwf	??_TMR0_ISR
 20977  0683  087A               	movf	_DimmerLights22,w
 20978  0684  3E04               	addlw	4
 20979  0685  0086               	movwf	6
 20980  0686  3001               	movlw	1	; select bank2/3
 20981  0687  0087               	movwf	7
 20982  0688  0873               	movf	??_TMR0_ISR,w
 20983  0689  0781               	addwf	1,f
 20984  068A  2F2D               	goto	i1l8549
 20985  068B                     i1l8515:	
 20986  068B  087A               	movf	_DimmerLights22,w
 20987  068C  0086               	movwf	6
 20988  068D  3001               	movlw	1	; select bank2/3
 20989  068E  0087               	movwf	7
 20990  068F  1201               	bcf	1,4
 20991  0690  2F2D               	goto	i1l8549
 20992  0691                     i1l8517:	
 20993  0691  087A               	movf	_DimmerLights22,w
 20994  0692  0086               	movwf	6
 20995  0693  3001               	movlw	1	; select bank2/3
 20996  0694  0087               	movwf	7
 20997  0695  1D01               	btfss	1,2
 20998  0696  2ED8               	goto	i1l8531
 20999  0697  087A               	movf	_DimmerLights22,w
 21000  0698  3E05               	addlw	5
 21001  0699  0086               	movwf	6
 21002  069A  3001               	movlw	1	; select bank2/3
 21003  069B  0087               	movwf	7
 21004  069C  087A               	movf	_DimmerLights22,w
 21005  069D  3E04               	addlw	4
 21006  069E  0084               	movwf	4
 21007  069F  3001               	movlw	1	; select bank2/3
 21008  06A0  0085               	movwf	5
 21009  06A1  0800               	movf	0,w
 21010  06A2  0201               	subwf	1,w
 21011  06A3  1803               	skipnc
 21012  06A4  2EAD               	goto	i1l8523
 21013  06A5  087A               	movf	_DimmerLights22,w
 21014  06A6  3E04               	addlw	4
 21015  06A7  0086               	movwf	6
 21016  06A8  3001               	movlw	1	; select bank2/3
 21017  06A9  0087               	movwf	7
 21018  06AA  3001               	movlw	1
 21019  06AB  0281               	subwf	1,f
 21020  06AC  2EC4               	goto	i1l8527
 21021  06AD                     i1l8523:	
 21022  06AD  087A               	movf	_DimmerLights22,w
 21023  06AE  3E04               	addlw	4
 21024  06AF  0086               	movwf	6
 21025  06B0  3001               	movlw	1	; select bank2/3
 21026  06B1  0087               	movwf	7
 21027  06B2  087A               	movf	_DimmerLights22,w
 21028  06B3  3E05               	addlw	5
 21029  06B4  0084               	movwf	4
 21030  06B5  3001               	movlw	1	; select bank2/3
 21031  06B6  0085               	movwf	5
 21032  06B7  0800               	movf	0,w
 21033  06B8  0201               	subwf	1,w
 21034  06B9  1803               	skipnc
 21035  06BA  2EC4               	goto	i1l8527
 21036  06BB  3001               	movlw	1
 21037  06BC  00F3               	movwf	??_TMR0_ISR
 21038  06BD  087A               	movf	_DimmerLights22,w
 21039  06BE  3E04               	addlw	4
 21040  06BF  0086               	movwf	6
 21041  06C0  3001               	movlw	1	; select bank2/3
 21042  06C1  0087               	movwf	7
 21043  06C2  0873               	movf	??_TMR0_ISR,w
 21044  06C3  0781               	addwf	1,f
 21045  06C4                     i1l8527:	
 21046  06C4  087A               	movf	_DimmerLights22,w
 21047  06C5  3E05               	addlw	5
 21048  06C6  0086               	movwf	6
 21049  06C7  3001               	movlw	1	; select bank2/3
 21050  06C8  0087               	movwf	7
 21051  06C9  087A               	movf	_DimmerLights22,w
 21052  06CA  3E04               	addlw	4
 21053  06CB  0084               	movwf	4
 21054  06CC  3001               	movlw	1	; select bank2/3
 21055  06CD  0085               	movwf	5
 21056  06CE  0800               	movf	0,w
 21057  06CF  0601               	xorwf	1,w
 21058  06D0  1D03               	skipz
 21059  06D1  2F2D               	goto	i1l8549
 21060  06D2  087A               	movf	_DimmerLights22,w
 21061  06D3  0086               	movwf	6
 21062  06D4  3001               	movlw	1	; select bank2/3
 21063  06D5  0087               	movwf	7
 21064  06D6  1101               	bcf	1,2
 21065  06D7  2EF3               	goto	i1l8537
 21066  06D8                     i1l8531:	
 21067  06D8  087A               	movf	_DimmerLights22,w
 21068  06D9  0086               	movwf	6
 21069  06DA  3001               	movlw	1	; select bank2/3
 21070  06DB  0087               	movwf	7
 21071  06DC  1E81               	btfss	1,5
 21072  06DD  2EF9               	goto	i1l8539
 21073  06DE  087A               	movf	_DimmerLights22,w
 21074  06DF  3E04               	addlw	4
 21075  06E0  0086               	movwf	6
 21076  06E1  3001               	movlw	1	; select bank2/3
 21077  06E2  0087               	movwf	7
 21078  06E3  3001               	movlw	1
 21079  06E4  0281               	subwf	1,f
 21080  06E5  087A               	movf	_DimmerLights22,w
 21081  06E6  3E05               	addlw	5
 21082  06E7  0086               	movwf	6
 21083  06E8  3001               	movlw	1	; select bank2/3
 21084  06E9  0087               	movwf	7
 21085  06EA  087A               	movf	_DimmerLights22,w
 21086  06EB  3E04               	addlw	4
 21087  06EC  0084               	movwf	4
 21088  06ED  3001               	movlw	1	; select bank2/3
 21089  06EE  0085               	movwf	5
 21090  06EF  0800               	movf	0,w
 21091  06F0  0201               	subwf	1,w
 21092  06F1  1C03               	skipc
 21093  06F2  2F2D               	goto	i1l8549
 21094  06F3                     i1l8537:	
 21095  06F3  087A               	movf	_DimmerLights22,w
 21096  06F4  0086               	movwf	6
 21097  06F5  3001               	movlw	1	; select bank2/3
 21098  06F6  0087               	movwf	7
 21099  06F7  1081               	bcf	1,1
 21100  06F8  2F2D               	goto	i1l8549
 21101  06F9                     i1l8539:	
 21102  06F9  3001               	movlw	1
 21103  06FA  00F3               	movwf	??_TMR0_ISR
 21104  06FB  087A               	movf	_DimmerLights22,w
 21105  06FC  3E04               	addlw	4
 21106  06FD  0086               	movwf	6
 21107  06FE  3001               	movlw	1	; select bank2/3
 21108  06FF  0087               	movwf	7
 21109  0700  0873               	movf	??_TMR0_ISR,w
 21110  0701  0781               	addwf	1,f
 21111  0702  087A               	movf	_DimmerLights22,w
 21112  0703  3E04               	addlw	4
 21113  0704  0086               	movwf	6
 21114  0705  3001               	movlw	1	; select bank2/3
 21115  0706  0087               	movwf	7
 21116  0707  087A               	movf	_DimmerLights22,w
 21117  0708  3E06               	addlw	6
 21118  0709  0084               	movwf	4
 21119  070A  3001               	movlw	1	; select bank2/3
 21120  070B  0085               	movwf	5
 21121  070C  0800               	movf	0,w
 21122  070D  0201               	subwf	1,w
 21123  070E  1C03               	skipc
 21124  070F  2F2D               	goto	i1l8549
 21125  0710  087A               	movf	_DimmerLights22,w
 21126  0711  0086               	movwf	6
 21127  0712  3001               	movlw	1	; select bank2/3
 21128  0713  0087               	movwf	7
 21129  0714  1081               	bcf	1,1
 21130  0715  087A               	movf	_DimmerLights22,w
 21131  0716  0086               	movwf	6
 21132  0717  3001               	movlw	1	; select bank2/3
 21133  0718  0087               	movwf	7
 21134  0719  1301               	bcf	1,6
 21135  071A  087A               	movf	_DimmerLights22,w
 21136  071B  3E0C               	addlw	12
 21137  071C  0086               	movwf	6
 21138  071D  3001               	movlw	1	; select bank2/3
 21139  071E  0087               	movwf	7
 21140  071F  1401               	bsf	1,0
 21141  0720  0021               	movlb	1	; select bank1
 21142  0721  0839               	movf	_Dimmer^(0+128),w
 21143  0722  0086               	movwf	6
 21144  0723  0187               	clrf	7
 21145  0724  1401               	bsf	1,0
 21146  0725  0020               	movlb	0	; select bank0
 21147  0726  118C               	bcf	12,3	;volatile
 21148  0727  01F1               	clrf	i1setLoad_StatusOff@command
 21149  0728  0AF1               	incf	i1setLoad_StatusOff@command,f
 21150  0729  3002               	movlw	2
 21151  072A  3199  21D4  3184   	fcall	i1_setLoad_StatusOff
 21152  072D                     i1l8549:	
 21153  072D  0020               	movlb	0	; select bank0
 21154  072E  1F8C               	btfss	12,7	;volatile
 21155  072F  2F62               	goto	i1l8557
 21156  0730  3001               	movlw	1
 21157  0731  00F3               	movwf	??_TMR0_ISR
 21158  0732  087A               	movf	_DimmerLights22,w
 21159  0733  3E08               	addlw	8
 21160  0734  0086               	movwf	6
 21161  0735  3001               	movlw	1	; select bank2/3
 21162  0736  0087               	movwf	7
 21163  0737  0873               	movf	??_TMR0_ISR,w
 21164  0738  0781               	addwf	1,f
 21165  0739  087A               	movf	_DimmerLights22,w
 21166  073A  3E04               	addlw	4
 21167  073B  0086               	movwf	6
 21168  073C  3001               	movlw	1	; select bank2/3
 21169  073D  0087               	movwf	7
 21170  073E  0801               	movf	1,w
 21171  073F  00F3               	movwf	??_TMR0_ISR
 21172  0740  01F4               	clrf	??_TMR0_ISR+1
 21173  0741  09F3               	comf	??_TMR0_ISR,f
 21174  0742  09F4               	comf	??_TMR0_ISR+1,f
 21175  0743  0AF3               	incf	??_TMR0_ISR,f
 21176  0744  1903               	skipnz
 21177  0745  0AF4               	incf	??_TMR0_ISR+1,f
 21178  0746  0873               	movf	??_TMR0_ISR,w
 21179  0747  3E78               	addlw	120
 21180  0748  00F5               	movwf	??_TMR0_ISR+2
 21181  0749  3000               	movlw	0
 21182  074A  3D74               	addwfc	??_TMR0_ISR+1,w
 21183  074B  00F6               	movwf	??_TMR0_ISR+3
 21184  074C  087A               	movf	_DimmerLights22,w
 21185  074D  3E08               	addlw	8
 21186  074E  0086               	movwf	6
 21187  074F  3001               	movlw	1	; select bank2/3
 21188  0750  0087               	movwf	7
 21189  0751  0876               	movf	??_TMR0_ISR+3,w
 21190  0752  3A80               	xorlw	128
 21191  0753  3C80               	sublw	128
 21192  0754  1D03               	skipz
 21193  0755  2F58               	goto	u798_25
 21194  0756  0875               	movf	??_TMR0_ISR+2,w
 21195  0757  0201               	subwf	1,w
 21196  0758                     u798_25:	
 21197  0758  1C03               	skipc
 21198  0759  2F62               	goto	i1l8557
 21199  075A  087A               	movf	_DimmerLights22,w
 21200  075B  3E08               	addlw	8
 21201  075C  0086               	movwf	6
 21202  075D  3001               	movlw	1	; select bank2/3
 21203  075E  0087               	movwf	7
 21204  075F  0181               	clrf	1
 21205  0760  0020               	movlb	0	; select bank0
 21206  0761  138C               	bcf	12,7	;volatile
 21207  0762                     i1l8557:	
 21208                           
 21209                           ;MCU_16f1518_B1.c: 113: Timer0->Count++;
 21210  0762  0021               	movlb	1	; select bank1
 21211  0763  0A6A               	incf	_Timer0^(0+128),w
 21212  0764  0086               	movwf	6
 21213  0765  0187               	clrf	7
 21214  0766  3001               	movlw	1
 21215  0767  0781               	addwf	1,f
 21216  0768  3141               	addfsr 1,1
 21217  0769  1803               	skipnc
 21218  076A  0A81               	incf	1,f
 21219                           
 21220                           ;MCU_16f1518_B1.c: 114: if(Timer0->Count == 200)
 21221  076B  0A6A               	incf	_Timer0^(0+128),w
 21222  076C  0086               	movwf	6
 21223  076D  0187               	clrf	7
 21224  076E  3F40               	moviw [0]fsr1
 21225  076F  3AC8               	xorlw	200
 21226  0770  1D03               	skipz
 21227  0771  2F74               	goto	u799_25
 21228  0772  3F41               	moviw [1]fsr1
 21229  0773  3A00               	xorlw	0
 21230  0774                     u799_25:	
 21231  0774  1D03               	skipz
 21232  0775  2F81               	goto	i1l1691
 21233                           
 21234                           ;MCU_16f1518_B1.c: 115: {
 21235                           ;MCU_16f1518_B1.c: 116: Timer0->Count=0;
 21236  0776  0A6A               	incf	_Timer0^(0+128),w
 21237  0777  0086               	movwf	6
 21238  0778  0187               	clrf	7
 21239  0779  3000               	movlw	0
 21240  077A  3FC0               	movwi [0]fsr1
 21241  077B  3FC1               	movwi [1]fsr1
 21242                           
 21243                           ;MCU_16f1518_B1.c: 117: TMain->T0_Timerout=1;
 21244  077C  0869               	movf	_TMain^(0+128),w
 21245  077D  0086               	movwf	6
 21246  077E  3001               	movlw	1	; select bank2/3
 21247  077F  0087               	movwf	7
 21248  0780  1481               	bsf	1,1
 21249  0781                     i1l1691:	
 21250                           
 21251                           ;MCU_16f1518_B1.c: 118: }
 21252                           ;MCU_16f1518_B1.c: 121: if(Buz->GO)
 21253  0781  0878               	movf	_Buz,w
 21254  0782  0086               	movwf	6
 21255  0783  3001               	movlw	1	; select bank2/3
 21256  0784  0087               	movwf	7
 21257  0785  1C81               	btfss	1,1
 21258  0786  0008               	return
 21259                           
 21260                           ;MCU_16f1518_B1.c: 122: {
 21261                           ;MCU_16f1518_B1.c: 123: Buz->Time++;
 21262  0787  0A78               	incf	_Buz,w
 21263  0788  0086               	movwf	6
 21264  0789  3001               	movlw	1	; select bank2/3
 21265  078A  0087               	movwf	7
 21266  078B  3001               	movlw	1
 21267  078C  0781               	addwf	1,f
 21268  078D  3141               	addfsr 1,1
 21269  078E  1803               	skipnc
 21270  078F  0A81               	incf	1,f
 21271  0790  0008               	return
 21272  0791                     __end_of_TMR0_ISR:	
 21273                           
 21274                           	psect	text138
 21275  19D4                     __ptext138:	
 21276 ;; *************** function i1_setLoad_StatusOff *****************
 21277 ;; Defined at:
 21278 ;;		line 279 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 21279 ;; Parameters:    Size  Location     Type
 21280 ;;  lights          1    wreg     unsigned char 
 21281 ;;  command         1    0[COMMON] unsigned char 
 21282 ;; Auto vars:     Size  Location     Type
 21283 ;;  lights          1    1[COMMON] unsigned char 
 21284 ;; Return value:  Size  Location     Type
 21285 ;;		None               void
 21286 ;; Registers used:
 21287 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21288 ;; Tracked objects:
 21289 ;;		On entry : 0/0
 21290 ;;		On exit  : 0/0
 21291 ;;		Unchanged: 0/0
 21292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21293 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21297 ;;Total ram usage:        2 bytes
 21298 ;; Hardware stack levels used:    1
 21299 ;; This function calls:
 21300 ;;		Nothing
 21301 ;; This function is called by:
 21302 ;;		_TMR0_ISR
 21303 ;; This function uses a non-reentrant model
 21304 ;;
 21305                           
 21306                           
 21307                           ;psect for function i1_setLoad_StatusOff
 21308  19D4                     i1_setLoad_StatusOff:	
 21309                           
 21310                           ;incstack = 0
 21311                           ; Regs used in i1_setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0]
 21312                           ;i1setLoad_StatusOff@lights stored from wreg
 21313  19D4  00F2               	movwf	i1setLoad_StatusOff@lights
 21314                           
 21315                           ;OverLoad_B1.c: 281: Load->StatusOff=command;
 21316  19D5  0020               	movlb	0	; select bank0
 21317  19D6  086E               	movf	_Load,w
 21318  19D7  3E46               	addlw	70
 21319  19D8  0086               	movwf	6
 21320  19D9  3002               	movlw	2	; select bank4/5
 21321  19DA  0087               	movwf	7
 21322  19DB  0871               	movf	i1setLoad_StatusOff@command,w
 21323  19DC  1081               	bcf	1,1
 21324  19DD  1D03               	skipz
 21325  19DE  1481               	bsf	1,1
 21326                           
 21327                           ;OverLoad_B1.c: 282: Load->SafeCount-=2;
 21328  19DF  086E               	movf	_Load,w
 21329  19E0  3E42               	addlw	66
 21330  19E1  0086               	movwf	6
 21331  19E2  3002               	movlw	2	; select bank4/5
 21332  19E3  0087               	movwf	7
 21333  19E4  3002               	movlw	2
 21334  19E5  0281               	subwf	1,f
 21335                           
 21336                           ;OverLoad_B1.c: 283: if(lights == 1)
 21337  19E6  0872               	movf	i1setLoad_StatusOff@lights,w
 21338  19E7  3A01               	xorlw	1
 21339  19E8  1D03               	skipz
 21340  19E9  29F0               	goto	i1l7945
 21341                           
 21342                           ;OverLoad_B1.c: 284: {
 21343                           ;OverLoad_B1.c: 285: Load->Lights1Status=0;
 21344  19EA  086E               	movf	_Load,w
 21345  19EB  3E43               	addlw	67
 21346  19EC  0086               	movwf	6
 21347  19ED  3002               	movlw	2	; select bank4/5
 21348  19EE  0087               	movwf	7
 21349  19EF  0181               	clrf	1
 21350  19F0                     i1l7945:	
 21351                           
 21352                           ;OverLoad_B1.c: 286: }
 21353                           ;OverLoad_B1.c: 287: if(lights == 2)
 21354  19F0  0872               	movf	i1setLoad_StatusOff@lights,w
 21355  19F1  3A02               	xorlw	2
 21356  19F2  1D03               	skipz
 21357  19F3  29FA               	goto	i1l7949
 21358                           
 21359                           ;OverLoad_B1.c: 288: {
 21360                           ;OverLoad_B1.c: 289: Load->Lights2Status=0;
 21361  19F4  086E               	movf	_Load,w
 21362  19F5  3E44               	addlw	68
 21363  19F6  0086               	movwf	6
 21364  19F7  3002               	movlw	2	; select bank4/5
 21365  19F8  0087               	movwf	7
 21366  19F9  0181               	clrf	1
 21367  19FA                     i1l7949:	
 21368                           
 21369                           ;OverLoad_B1.c: 290: }
 21370                           ;OverLoad_B1.c: 291: if(lights == 3)
 21371  19FA  0872               	movf	i1setLoad_StatusOff@lights,w
 21372  19FB  3A03               	xorlw	3
 21373  19FC  1D03               	skipz
 21374  19FD  0008               	return
 21375                           
 21376                           ;OverLoad_B1.c: 292: {
 21377                           ;OverLoad_B1.c: 293: Load->Lights3Status=0;
 21378  19FE  086E               	movf	_Load,w
 21379  19FF  3E45               	addlw	69
 21380  1A00  0086               	movwf	6
 21381  1A01  3002               	movlw	2	; select bank4/5
 21382  1A02  0087               	movwf	7
 21383  1A03  0181               	clrf	1
 21384  1A04  0008               	return
 21385  1A05                     __end_ofi1_setLoad_StatusOff:	
 21386                           
 21387                           	psect	text139
 21388  27DB                     __ptext139:	
 21389 ;; *************** function _IOC_ISR *****************
 21390 ;; Defined at:
 21391 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 21392 ;; Parameters:    Size  Location     Type
 21393 ;;		None
 21394 ;; Auto vars:     Size  Location     Type
 21395 ;;		None
 21396 ;; Return value:  Size  Location     Type
 21397 ;;		None               void
 21398 ;; Registers used:
 21399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21400 ;; Tracked objects:
 21401 ;;		On entry : 0/0
 21402 ;;		On exit  : 0/0
 21403 ;;		Unchanged: 0/0
 21404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21409 ;;Total ram usage:        1 bytes
 21410 ;; Hardware stack levels used:    1
 21411 ;; Hardware stack levels required when called:    1
 21412 ;; This function calls:
 21413 ;;		_setDimmerReClock
 21414 ;; This function is called by:
 21415 ;;		_ISR
 21416 ;; This function uses a non-reentrant model
 21417 ;;
 21418                           
 21419                           
 21420                           ;psect for function _IOC_ISR
 21421  27DB                     _IOC_ISR:	
 21422                           
 21423                           ;MCU_16f1518_B1.c: 269: if(IOCIE && IOCBF2)
 21424                           
 21425                           ;incstack = 0
 21426                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21427  27DB  1D8B               	btfss	11,3	;volatile
 21428  27DC  0008               	return
 21429  27DD  0027               	movlb	7	; select bank7
 21430  27DE  1D16               	btfss	22,2	;volatile
 21431  27DF  0008               	return
 21432                           
 21433                           ;MCU_16f1518_B1.c: 270: {
 21434                           ;MCU_16f1518_B1.c: 271: IOCBF2=0;
 21435  27E0  1116               	bcf	22,2	;volatile
 21436                           
 21437                           ;MCU_16f1518_B1.c: 272: IOCIF=0;
 21438  27E1  100B               	bcf	11,0	;volatile
 21439                           
 21440                           ;MCU_16f1518_B1.c: 273: if(TMain->PowerON)
 21441  27E2  0021               	movlb	1	; select bank1
 21442  27E3  0869               	movf	_TMain^(0+128),w
 21443  27E4  0086               	movwf	6
 21444  27E5  3001               	movlw	1	; select bank2/3
 21445  27E6  0087               	movwf	7
 21446  27E7  1C01               	btfss	1,0
 21447  27E8  0008               	return
 21448                           
 21449                           ;MCU_16f1518_B1.c: 274: {
 21450                           ;MCU_16f1518_B1.c: 278: setDimmerReClock();
 21451  27E9  31A6  268F  31A7   	fcall	_setDimmerReClock
 21452                           
 21453                           ;MCU_16f1518_B1.c: 279: if(RB2)
 21454  27EC  0020               	movlb	0	; select bank0
 21455  27ED  1D0D               	btfss	13,2	;volatile
 21456  27EE  2FF6               	goto	i1l8387
 21457                           
 21458                           ;MCU_16f1518_B1.c: 280: {
 21459                           ;MCU_16f1518_B1.c: 281: Dimmer->Correction=0;
 21460  27EF  0021               	movlb	1	; select bank1
 21461  27F0  0839               	movf	_Dimmer^(0+128),w
 21462  27F1  3E02               	addlw	2
 21463  27F2  0086               	movwf	6
 21464  27F3  0187               	clrf	7
 21465  27F4  0181               	clrf	1
 21466                           
 21467                           ;MCU_16f1518_B1.c: 282: }
 21468  27F5  0008               	return
 21469  27F6                     i1l8387:	
 21470                           
 21471                           ;MCU_16f1518_B1.c: 283: else
 21472                           ;MCU_16f1518_B1.c: 284: {
 21473                           ;MCU_16f1518_B1.c: 285: Dimmer->Correction=8;
 21474  27F6  3008               	movlw	8
 21475  27F7  00F1               	movwf	??_IOC_ISR
 21476  27F8  0021               	movlb	1	; select bank1
 21477  27F9  0839               	movf	_Dimmer^(0+128),w
 21478  27FA  3E02               	addlw	2
 21479  27FB  0086               	movwf	6
 21480  27FC  0187               	clrf	7
 21481  27FD  0871               	movf	??_IOC_ISR,w
 21482  27FE  0081               	movwf	1
 21483  27FF  0008               	return
 21484  2800                     __end_of_IOC_ISR:	
 21485                           
 21486                           	psect	text140
 21487  268F                     __ptext140:	
 21488 ;; *************** function _setDimmerReClock *****************
 21489 ;; Defined at:
 21490 ;;		line 129 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 21491 ;; Parameters:    Size  Location     Type
 21492 ;;		None
 21493 ;; Auto vars:     Size  Location     Type
 21494 ;;		None
 21495 ;; Return value:  Size  Location     Type
 21496 ;;		None               void
 21497 ;; Registers used:
 21498 ;;		wreg, fsr1l, fsr1h
 21499 ;; Tracked objects:
 21500 ;;		On entry : 0/0
 21501 ;;		On exit  : 0/0
 21502 ;;		Unchanged: 0/0
 21503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21508 ;;Total ram usage:        0 bytes
 21509 ;; Hardware stack levels used:    1
 21510 ;; This function calls:
 21511 ;;		Nothing
 21512 ;; This function is called by:
 21513 ;;		_IOC_ISR
 21514 ;; This function uses a non-reentrant model
 21515 ;;
 21516                           
 21517                           
 21518                           ;psect for function _setDimmerReClock
 21519  268F                     _setDimmerReClock:	
 21520                           
 21521                           ;MCU_16f1518_B1.c: 131: TMR0=255;
 21522                           
 21523                           ;incstack = 0
 21524                           ; Regs used in _setDimmerReClock: [wregfsr1]
 21525  268F  30FF               	movlw	255
 21526  2690  0020               	movlb	0	; select bank0
 21527  2691  0095               	movwf	21	;volatile
 21528                           
 21529                           ;MCU_16f1518_B1.c: 136: if(!DimmerLights11->GO)
 21530  2692  0879               	movf	_DimmerLights11,w
 21531  2693  0086               	movwf	6
 21532  2694  3001               	movlw	1	; select bank2/3
 21533  2695  0087               	movwf	7
 21534  2696  1801               	btfsc	1,0
 21535  2697  2E9D               	goto	i1l1696
 21536                           
 21537                           ;MCU_16f1518_B1.c: 137: {
 21538                           ;MCU_16f1518_B1.c: 138: DimmerLights11->GO=1;
 21539  2698  0879               	movf	_DimmerLights11,w
 21540  2699  0086               	movwf	6
 21541  269A  3001               	movlw	1	; select bank2/3
 21542  269B  0087               	movwf	7
 21543  269C  1401               	bsf	1,0
 21544  269D                     i1l1696:	
 21545                           
 21546                           ;MCU_16f1518_B1.c: 139: }
 21547                           ;MCU_16f1518_B1.c: 158: if(!DimmerLights22->GO)
 21548  269D  087A               	movf	_DimmerLights22,w
 21549  269E  0086               	movwf	6
 21550  269F  3001               	movlw	1	; select bank2/3
 21551  26A0  0087               	movwf	7
 21552  26A1  1801               	btfsc	1,0
 21553  26A2  0008               	return
 21554                           
 21555                           ;MCU_16f1518_B1.c: 159: {
 21556                           ;MCU_16f1518_B1.c: 160: DimmerLights22->GO=1;
 21557  26A3  087A               	movf	_DimmerLights22,w
 21558  26A4  0086               	movwf	6
 21559  26A5  3001               	movlw	1	; select bank2/3
 21560  26A6  0087               	movwf	7
 21561  26A7  1401               	bsf	1,0
 21562  26A8  0008               	return
 21563  26A9                     __end_of_setDimmerReClock:	
 21564                           
 21565                           	psect	text141
 21566  2418                     __ptext141:	
 21567 ;; *************** function _INT_ISR *****************
 21568 ;; Defined at:
 21569 ;;		line 225 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 21570 ;; Parameters:    Size  Location     Type
 21571 ;;		None
 21572 ;; Auto vars:     Size  Location     Type
 21573 ;;		None
 21574 ;; Return value:  Size  Location     Type
 21575 ;;		None               void
 21576 ;; Registers used:
 21577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21578 ;; Tracked objects:
 21579 ;;		On entry : 0/0
 21580 ;;		On exit  : 0/0
 21581 ;;		Unchanged: 0/0
 21582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21587 ;;Total ram usage:        0 bytes
 21588 ;; Hardware stack levels used:    1
 21589 ;; Hardware stack levels required when called:    2
 21590 ;; This function calls:
 21591 ;;		_setRF_ReceiveGO
 21592 ;; This function is called by:
 21593 ;;		_ISR
 21594 ;; This function uses a non-reentrant model
 21595 ;;
 21596                           
 21597                           
 21598                           ;psect for function _INT_ISR
 21599  2418                     _INT_ISR:	
 21600                           
 21601                           ;MCU_16f1518_B1.c: 227: if(INTE && INTF)
 21602                           
 21603                           ;incstack = 0
 21604                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21605  2418  1E0B               	btfss	11,4	;volatile
 21606  2419  0008               	return
 21607  241A  1C8B               	btfss	11,1	;volatile
 21608  241B  0008               	return
 21609                           
 21610                           ;MCU_16f1518_B1.c: 228: {
 21611                           ;MCU_16f1518_B1.c: 229: INTF=0;
 21612  241C  108B               	bcf	11,1	;volatile
 21613                           
 21614                           ;MCU_16f1518_B1.c: 230: INTE=0;
 21615  241D  120B               	bcf	11,4	;volatile
 21616                           
 21617                           ;MCU_16f1518_B1.c: 231: setRF_ReceiveGO(1,1);
 21618  241E  01F3               	clrf	setRF_ReceiveGO@command
 21619  241F  0AF3               	incf	setRF_ReceiveGO@command,f
 21620  2420  3001               	movlw	1
 21621  2421  31A4  240C         	fcall	_setRF_ReceiveGO
 21622  2423  0008               	return
 21623  2424                     __end_of_INT_ISR:	
 21624                           
 21625                           	psect	text142
 21626  240C                     __ptext142:	
 21627 ;; *************** function _setRF_ReceiveGO *****************
 21628 ;; Defined at:
 21629 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 21630 ;; Parameters:    Size  Location     Type
 21631 ;;  rf              1    wreg     unsigned char 
 21632 ;;  command         1    2[COMMON] unsigned char 
 21633 ;; Auto vars:     Size  Location     Type
 21634 ;;  rf              1    3[COMMON] unsigned char 
 21635 ;; Return value:  Size  Location     Type
 21636 ;;		None               void
 21637 ;; Registers used:
 21638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21639 ;; Tracked objects:
 21640 ;;		On entry : 0/0
 21641 ;;		On exit  : 0/0
 21642 ;;		Unchanged: 0/0
 21643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21644 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21648 ;;Total ram usage:        2 bytes
 21649 ;; Hardware stack levels used:    1
 21650 ;; Hardware stack levels required when called:    1
 21651 ;; This function calls:
 21652 ;;		i1_RfPointSelect
 21653 ;; This function is called by:
 21654 ;;		_INT_ISR
 21655 ;; This function uses a non-reentrant model
 21656 ;;
 21657                           
 21658                           
 21659                           ;psect for function _setRF_ReceiveGO
 21660  240C                     _setRF_ReceiveGO:	
 21661                           
 21662                           ;incstack = 0
 21663                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21664                           ;setRF_ReceiveGO@rf stored from wreg
 21665  240C  00F4               	movwf	setRF_ReceiveGO@rf
 21666                           
 21667                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 21668  240D  0874               	movf	setRF_ReceiveGO@rf,w
 21669  240E  31A3  23AA         	fcall	i1_RfPointSelect
 21670                           
 21671                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 21672  2410  087C               	movf	_RF,w
 21673  2411  0086               	movwf	6
 21674  2412  0187               	clrf	7
 21675  2413  0873               	movf	setRF_ReceiveGO@command,w
 21676  2414  1081               	bcf	1,1
 21677  2415  1D03               	skipz
 21678  2416  1481               	bsf	1,1
 21679  2417  0008               	return
 21680  2418                     __end_of_setRF_ReceiveGO:	
 21681                           
 21682                           	psect	text143
 21683  23AA                     __ptext143:	
 21684 ;; *************** function i1_RfPointSelect *****************
 21685 ;; Defined at:
 21686 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 21687 ;; Parameters:    Size  Location     Type
 21688 ;;  rf              1    wreg     unsigned char 
 21689 ;; Auto vars:     Size  Location     Type
 21690 ;;  rf              1    1[COMMON] unsigned char 
 21691 ;; Return value:  Size  Location     Type
 21692 ;;		None               void
 21693 ;; Registers used:
 21694 ;;		wreg
 21695 ;; Tracked objects:
 21696 ;;		On entry : 0/0
 21697 ;;		On exit  : 0/0
 21698 ;;		Unchanged: 0/0
 21699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21704 ;;Total ram usage:        2 bytes
 21705 ;; Hardware stack levels used:    1
 21706 ;; This function calls:
 21707 ;;		Nothing
 21708 ;; This function is called by:
 21709 ;;		_setRF_ReceiveGO
 21710 ;; This function uses a non-reentrant model
 21711 ;;
 21712                           
 21713                           
 21714                           ;psect for function i1_RfPointSelect
 21715  23AA                     i1_RfPointSelect:	
 21716                           
 21717                           ;incstack = 0
 21718                           ; Regs used in i1_RfPointSelect: [wreg]
 21719                           ;i1RfPointSelect@rf stored from wreg
 21720  23AA  00F2               	movwf	i1RfPointSelect@rf
 21721                           
 21722                           ;RF_Control_B1.c: 10: if(rf == 1)
 21723  23AB  0872               	movf	i1RfPointSelect@rf,w
 21724  23AC  3A01               	xorlw	1
 21725  23AD  1D03               	skipz
 21726  23AE  0008               	return
 21727                           
 21728                           ;RF_Control_B1.c: 11: {
 21729                           ;RF_Control_B1.c: 12: RF=&RF1;
 21730  23AF  30E4               	movlw	_RF1& (0+255)
 21731  23B0  00F1               	movwf	??i1_RfPointSelect
 21732  23B1  0871               	movf	??i1_RfPointSelect,w
 21733  23B2  00FC               	movwf	_RF
 21734  23B3  0008               	return
 21735  23B4                     __end_ofi1_RfPointSelect:	
 21736  007E                     btemp	set	126	;btemp
 21737  007E                     pic14e$flags	set	126
 21738  007E                     wtemp	set	126
 21739  007E                     wtemp0	set	126
 21740  0080                     wtemp1	set	128
 21741  0082                     wtemp2	set	130
 21742  0084                     wtemp3	set	132
 21743  0086                     wtemp4	set	134
 21744  0088                     wtemp5	set	136
 21745  007F                     wtemp6	set	127
 21746  007E                     ttemp	set	126
 21747  007E                     ttemp0	set	126
 21748  0081                     ttemp1	set	129
 21749  0084                     ttemp2	set	132
 21750  0087                     ttemp3	set	135
 21751  007F                     ttemp4	set	127
 21752  007E                     ltemp	set	126
 21753  007E                     ltemp0	set	126
 21754  0082                     ltemp1	set	130
 21755  0086                     ltemp2	set	134
 21756  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         283
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     76      80
    BANK1            80      0      75
    BANK2            80      0      78
    BANK3            80      0      48
    BANK4            80      0      37
    BANK5            80      0      71
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 2
		 -> NULL(NULL[0]), RF1(BANK1[2]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK2[8]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    Load	PTR struct OverLoad size(1) Largest target is 71
		 -> NULL(NULL[0]), Load1(BANK5[71]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 7
		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 16
		 -> NULL(NULL[0]), VarTMain(BANK3[16]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK4[37]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights1(BANK2[13]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), DimmerLights1(BANK2[13]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _TMR0_ISR->i1_setLoad_StatusOff
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _getLoad_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _setSw_Main->_setBuz
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setTxData
    _Sw_DimmerOffFunc->_setDelayOff_GO
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setBuz
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _PowerFault_Initialization->_setPowerFault_Initialization
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _Load_Main->_setLoad_Exceptions
    _setLoad_Exceptions->_DimmerLights_Exceptions
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_CC2500_WriteCommand
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _setDimmerLights_Clear->_DimmerLightsPointSelect
    _Load_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setPercentValue
    _setPercentValue->___fttol
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Close->_setLoad_GO
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_getPercentValue
    _getPercentValue->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setBuz
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   93733
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                              _MainT
               _MainT_Initialization
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                         _getLoad_AD
                   _getPowerFault_AD
                         _getTemp_AD
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     324
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     5     5      0     324
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           8     8      0     624
                                              4 BANK0      8     8      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     293
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    6506
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    6506
                                             13 BANK0      3     3      0
                       _getLoad_Safe
                         _getPF_Safe
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    6506
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    9091
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0    9091
                                             10 BANK0      5     5      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     315
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      1     1      0    2584
                                              6 BANK0      1     1      0
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    3273
                                              7 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     1     1      0    1258
                                              4 BANK0      1     1      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     260
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     260
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1070
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1070
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   23337
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   23337
                                             73 BANK0      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   22333
                                             72 BANK0      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1410
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   20870
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      3     3      0    4877
                                             10 BANK0      3     3      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       4     2      2     721
                                              3 BANK0      4     2      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   11445
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   11179
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11113
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     152
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     160
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     503
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     161
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     114
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    6506
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   2     2      0    6506
                                             13 BANK0      2     2      0
                       _getLoad_Safe
                       _getTemp_Safe
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             2     2      0    6506
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (3) _getLoad_Safe                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    2181
                             _setBuz
                     _setLoad_Enable
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
                          _setTxData
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setLoad_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                            5     5      0    8033
                                             13 BANK0      5     5      0
                            ___lwdiv
                             ___wmul
                         _getPF_Safe
                       _getTemp_Safe
              _setDimmerLights_Clear
              _setLoad_AH_AL_Restore
                 _setLoad_Exceptions
 ---------------------------------------------------------------------------------
 (2) _setLoad_Exceptions                                   2     2      0    6537
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _setSw_Enable                                         1     1      0     106
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _setRF_Enable                                         2     1      1     522
                                              4 BANK0      2     1      1
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (5) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    4653
                                             10 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     353
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2813
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                  _setLoad_StatusOff
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Clear                                2     1      1     414
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  1     1      0      90
                                              2 BANK0      1     1      0
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1167
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1167
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     307
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     307
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5827
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      47
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   10529
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0   10461
                                             65 BANK0      2     2      0
            _DimmerLightsPointSelect
            _getDimmerLights_Trigger
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  4     3      1    6944
                                             61 BANK0      4     3      1
            _DimmerLightsPointSelect
                  _setLoad_StatusOff
                    _setPercentValue
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    5458
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOff                                    2     1      1     362
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1791
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                      _setLoad_Count
                   _setLoad_StatusOn
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOn                                     2     1      1     201
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _setLoad_Count                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1    1039
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Trigger                              1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      68
         _getDimmerLights_StatusFlag
                         _setLoad_GO
 ---------------------------------------------------------------------------------
 (3) _setLoad_GO                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0   11135
                                             66 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       3     3      0   11135
                                             63 BANK0      3     3      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11047
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___fttol                                             14    10      4     380
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2502
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftdiv                                             16    10      6    2712
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3118
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___awtoft                                             6     3      3    2267
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___ftpack                                            8     3      5    2048
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    4584
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    4584
                                             10 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            4     4      0     134
                                              2 BANK0      4     4      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     568
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (5) _SwPointSelect                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1     668
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     645
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     491
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     491
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _setBuz                                               4     2      2    1357
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     444
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      75
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      75
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    1869
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     490
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     354
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     309
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     218
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     512
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     444
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteCommand                                  2     2      0      68
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (6) _CC2500_WriteByte                                     2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     270
                                              6 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0     140
                                              2 COMMON     4     4      0
                i1_setLoad_StatusOff
 ---------------------------------------------------------------------------------
 (13) i1_setLoad_StatusOff                                 2     1      1     140
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     130
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     130
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
       _getPercentValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setLoad_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _getDimmerLights_Trigger
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setLoad_Count
         _setLoad_StatusOn
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setLoad_StatusOff
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getPF_Safe
     _getTemp_Safe
     _setDimmerLights_Clear
       _DimmerLightsPointSelect
     _setLoad_AH_AL_Restore
     _setLoad_Exceptions
       _DimmerLights_Exceptions
         _getDimmerLights_StatusFlag
         _setBuz
           ___wmul
         _setDimmerLights_ERROR
           _DimmerLightsPointSelect
           _setLED
             _LedPointSelect
           _setLoad_StatusOff
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
         _setDimmerLights_TriggerERROR
           _DimmerLightsPointSelect
       _setLED
         _LedPointSelect
       _setRF_Enable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _setSw_Enable
         _SwPointSelect
   _MainT
     _setBuz
       ___wmul
     _setLoad_Enable
     _setRF_Enable
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RfPointSelect
       _setINT_GO
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
     _setTxData
       _RfPointSelect
   _MainT_Initialization
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _getLoad_Safe
       _getTemp_Safe
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _CC2500_WriteCommand
             _CC2500_WriteByte
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_Count
             _setLoad_StatusOn
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getLoad_Safe
       _getPF_Safe
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _CC2500_WriteCommand
             _CC2500_WriteByte
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _getLoad_AD
     _getAD
   _getPowerFault_AD
     _getAD
   _getTemp_AD
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR
     i1_setLoad_StatusOff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      25      13       46.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      47      15       88.8%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     193      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     193      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Sep 10 17:32:54 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _PF 007B  
                                     _RD 0CA8                                       _RF 007C  
                __end_of_CC2500_WriteREG 265D                                       _WR 0CA9  
                                     _Sw 006D       __end_of_getDimmerLights_StatusFlag 2555  
             _getDimmerLights_StatusFlag 2543                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 1BF1                             ___ftadd@exp1 004A  
                           ___ftadd@exp2 0049                setDimmerLights_Adj@lights 0060  
              __end_of_setLoad_StatusOff 1A36                     _setDimmerLights_Main 164E  
                           ___ftadd@sign 0048                                      l312 1D69  
                                    l313 1D6E                                      l403 26CD  
                                    l323 1145                                      l307 1D3F  
                                    l340 19C8                                      l316 1D71  
                                    l343 19CE                                      l327 1156  
                                    l409 1880                                      l373 2637  
                                    l374 2639                                      l702 19A2  
                                    l385 264C                                      l397 24CA  
                                    l913 2551                                      l925 11DD  
                                    l919 258C                                      l875 255F  
                                    _GIE 005F                                      _CRC 00B7  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 0015                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 0166  
                                    _RC0 0070                                      _RB2 006A  
                                    _RA4 0064                                      _LED 00BB  
                                    _RC1 0071                                      _RB3 006B  
                                    _RC2 0072                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC4 0074  
                                    _RC5 0075                                      _RC7 0077  
                                    _RF1 00E4                                      _ISR 0004  
        setPowerFault_Exceptions@command 002C                                      _Sw1 0154  
                                    _Sw2 015D                                      _Buz 0078  
              setDimmerLights_Adj@status 005D                 __end_of_CC2500_WriteByte 2644  
         ??_setDimmerLights_TriggerERROR 0023                    _Buzzer_Initialization 23B4  
                        __end_of_ADC_Set 2369                          ?_DelayTimejudge 0071  
                                    wreg 0009     setDimmerLights_Initialization@lights 0061  
                        _setDimmerLights 144E                    _setDimmerLights_ERROR 1EF3  
                  _setDimmerLights_AdjRF 1000                    _setDimmerLights_AdjGo 2522  
                __size_of_setTemp_Enable 000B                    _setDimmerLights_Clear 24F2  
                                   ?_ISR 0071                          _PowerFault_Main 2321  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 2800  
                             Load_Main@i 0031                             ___ftdiv@sign 003D  
               ?_DimmerLightsPointSelect 0071                                     l3240 2721  
                                   l3401 10B4                                     l1724 25F0  
                        __end_of_IOC_Set 246E                                     l3430 0C25  
                                   l1750 1A60                                     l3407 10CB  
                                   l2463 0D82                                     l2712 1E03  
                                   l2730 25C5                                     l2744 1C5B  
                                   l6211 0BB5                                     l6207 0BAE  
                                   l2928 2343                                     l6161 108A  
                                   l6241 0C04                                     l6217 0BC4  
                                   l6305 09D8                                     l6235 0BF1  
                                   l6403 1645                                     l6165 1091  
                                   l6253 0C37                                     l6237 0BFB  
                                   l6229 0BDE                                     l6341 0A6A  
                                   l6325 0A27                                     l6175 10B9  
                                   l6167 109B                                     l6247 0C17  
                                   l6239 0C00                                     l6319 0A11  
                                   l6425 2608                                     l6177 10C1  
                                   l6169 10A0                                     l6257 0C49  
                                   l6249 0C21                                     l6353 0A86  
                                   l6337 0A62                                     l6441 198E  
                                   l6433 1982                                     l6601 1BD7  
                                   l6195 2780                                     l6267 0C64  
                                   l6283 097E                                     l6277 0968  
                                   l6349 0A7E                                     l7501 1C2A  
                                   l6445 1994                                     l6437 1988  
                                   l6605 1BE3                                     l6471 27AE  
                                   l9103 10F7                                     l9023 1758  
                                   l9015 1746                                     l6561 1F95  
                                   l6297 09BF                                     l6369 15E0  
                                   l6449 199A                                     l9009 172A  
                                   l6395 162B                                     l6387 1610  
                                   l6467 27A3                                     l9131 1A44  
                                   l6723 270B                                     l9027 1761  
                                   l9019 174F                                     l6397 1634  
                                   l6389 161E                                     l6725 2711  
                                   l9205 192C                                     l6399 1637  
                                   l9055 1168                                     l9303 12C4  
                                   l9081 1891                                     l6489 2573  
                                   l9401 168C                                     l9057 1180  
                                   l9083 189C                                     l9411 16AD  
                                   l6835 1C49                                     l9227 1EB8  
                                   l9171 1B0F                                     l8701 1399  
                                   l9093 258E                                     l9069 1199  
                                   l9407 169E                                     l9511 1D19  
                                   l6695 1AA6                                     l9239 1ECE  
                                   l9271 1E41                                     l8705 13B7  
                                   l8801 1A8D                                     l7497 1C23  
                                   l7921 1AD7                                     l9185 1B82  
                                   l8811 2553                                     l9419 16D0  
                                   l7923 1AE3                                     l9531 0DCD  
                                   l8733 1A21                                     l7933 1AFE  
                                   l9533 0DD6                                     l9391 166F  
                                   l9615 0D35                                     l8681 271B  
                                   l8753 1039                                     l8833 149E  
                                   l8737 1A2B                                     l9385 1664  
                                   l7929 1AF5                                     l8913 11BD  
                                   l7971 090E                                     l8763 1049  
                                   l8771 1055                                     l9491 1308  
                                   l9627 0D71                                     l9619 0D54  
                                   l6995 1D51                                     l9651 1561  
                                   l9707 0EC4                                     l9571 0E7B  
                                   l9555 0E3C                                     l8749 1033  
                                   l8757 103F                                     l9485 12EF  
                                   l8917 11D0                                     l9629 0D77  
                                   l9717 0ED4                                     l9709 0ECA  
                                   l9565 0E6A                                     l7983 0943  
                                   l8783 1071                                     l8767 104F  
                                   l9495 1356                                     l8919 11D5  
                                   l8871 0836                                     l9663 1581  
                                   l9655 1571                                     l9647 155A  
                                   l9735 0F12                                     l9719 0EDC  
                                   l9567 0E70                                     l7977 0936  
                                   l9833 0B13                                     l9593 0CC2  
                                   l9681 15B2                                     l9745 0F44  
                                   l9921 124F                                     _CFGS 0CAE  
                                   l7979 093C                                     l8779 106B  
                                   l8787 1077                                     l9595 0CCC  
                                   l8883 0863                                     l9755 0F78  
                                   l8797 1A82                                     l9677 15A7  
                                   l9765 0FAB                                     l9909 17FB  
                                   l8887 0870                                     l8899 089C  
                                   l9949 1515                                     l9893 17BC  
                                   l9991 0086                                     l9887 178B  
                                   l9977 1E99                                     l9897 17C4  
                                   _FREE 0CAC                                     _LATA 010C  
                                   _LATB 010D                          __end_of_INT_ISR 2424  
                                   _LATC 010E                                     u5010 1F54  
                                   u4115 10AF                                     u5015 1F52  
                                   u4135 10BC                                     u4315 0BF2  
                                   u4165 10D2                                     u4095 1096  
                                   u4345 0C05                                     _PEIE 005E  
                                   u4285 0BDF                                     u4445 0990  
                                   u4605 0A8D                                     u4525 0A33  
                                   _INTE 005C                                     _INTF 0059  
                                   u4375 0C18                                     u4455 09A0  
                                   u4535 0A43                                     u4465 09C0  
                                   u4475 09CF                                     u4555 0A6B  
                                   u4635 15E7                                     u7045 08CF  
                                   u4485 09D9                                     u4565 0A71  
                                   u4665 1611                                     u4595 0A87  
                                   u4695 162C                                     u8145 2722  
                                   u8155 2727                                     u8450 23A8  
                                   u6935 1ADA                                     u8715 1886  
                                   u6955 1AE4                                     u6965 1AEE  
                                   u6975 1AF6                                     u9815 17A6  
                                   u9915 1CA2                                     _LWLO 0CAD  
                                   _RFSW 00BC                                     u9935 14E4  
                                   u9855 17E7                                     _TMR0 0015  
                                   u9945 152B                                     u9885 123E  
                                   u9990 1E96                                     u9895 1267  
                                   u9985 1E77                          __end_of_INT_Set 2343  
                                   _RSSI 00BD                                     _WREN 0CAA  
                                   _Buz1 0148                                     _Load 006E  
                                   _Temp 007D                                     _main 0791  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 2321  
                    __end_of_DlyOff_Main 144E                          __end_of_RF_Main 233E  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                                     ltemp 007E  
          __size_of_setRF_Initialization 0007                         _setDimmerReClock 268F  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                 _setPowerFault_Exceptions 1B78  
                    DelayTimejudge@value 0022                            _RfPointSelect 23CA  
             __end_of_setRFSW_AdjControl 1C71                             ___ftmul@cntr 003C  
                           ___ftmul@sign 003D             __size_of_Temp_Initialization 0003  
            __size_of_setPowerFault_Main 010E                                    ??_ISR 0077  
                           ___fttol@exp1 0058                             ___fttol@lval 0054  
                       __end_of_LED_Main 2454                                    l10013 0101  
                                  l10111 037D                                    l10007 00D3  
                                  l10105 036A                                    l10033 01B2  
                                  l10027 0196                                    l10035 01CA  
                                  l10061 0268                                    l10055 0250  
                                  l10073 029F                                    l10081 02D7  
                                  l10183 07CE                                    l10099 0354  
                                  l10179 07B8                    ?_setDimmerLights_Main 0071  
                        ?_setDelayOff_GO 0023                    __end_of_setLoad_Count 187B  
                                  ?_main 0071                setControl_Lights_Table@rf 0067  
                        __end_of___ftadd 0C7C                            __CFG_WDTE$OFF 0000  
                        __end_of___ftdiv 09FA                                    u10125 01E2  
                                  u10075 014D                          __end_of___ftmul 0AAE  
                        __end_of___fttol 164E             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                          __end_of___lwdiv 1B05  
                 _setDimmerLights_Switch 24D2            __size_of_CC2500_FrequencyCabr 000C  
                                  _RFSW1 00E6                                    _RFSW2 00E7  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0071  
                     setRF_Learn@command 0022                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
           __size_ofi1_setLoad_StatusOff 0031                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                                  _TMain 00E9                            setRF_Learn@rf 0023  
                                  _MainT 14CA                                    _Load1 02A0  
                          __CFG_WRT$BOOT 0000                                    _Temp1 0120  
                       __end_of_TMR0_ISR 0791             __size_of_CC2500_WriteCommand 0010  
                       __end_of_TMR0_Set 247B                                    _getAD 25E6  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 120C  
          DimmerLights_Exceptions@status 002A                            ___ftpack@sign 0024  
                         _setLoad_Enable 2502              __size_of_CC2500_ClearRXFIFO 0004  
                          ??_Buzzer_Main 0020              __size_of_CC2500_ClearTXFIFO 0004  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 0380  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                       ?_CC2500_ReadByte 0071                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0011  
          __end_of_setLED_Initialization 2543                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                       _setRF_DimmerLights 1F4A  
            __size_of_Flash_Memory_Write 0031                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0004  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
               setLoad_StatusOff@command 0020         __size_of_DelayOff_Initialization 0008  
                 ?_setLoad_AH_AL_Restore 0071                setDimmerLights_Main@clear 0061  
                  setLoad_Enable@command 0020                   ??_Flash_Memory_Erasing 0020  
                        _getPercentValue 1FA5                       ??_CC2500_SIDLEMode 0024  
                        __initialization 0018                         ?_CC2500_PowerRST 0071  
                      ??_Sw_DimmerOnFunc 0026                     __end_of_getLoad_Safe 2401  
                      ??_setPercentValue 0059                             __end_of_main 0800  
                    ?_setRF_DimmerLights 0020                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 14CA  
                   _setSw_Initialization 2388               __size_of_setLoad_StatusOff 0031  
                                 ??_main 006C                            ___fttol@sign1 0053  
                _getDimmerLights_Trigger 257C                             ?_setLog_Code 0071  
                _setControl_Lights_Table 16D7                   ?_Buzzer_Initialization 0071  
                ??_DlyOff_Initialization 0022                  __end_of_PowerFault_Main 2324  
                             _Receive_GO 0381                               _Receive_OK 0382  
                              ??_IOC_ISR 0071                   ?_setDimmerLights_ERROR 0071  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 2568  
                                 ?_MainT 0071                   ?_setDimmerLights_AdjRF 0071  
                              ??_INT_ISR 0075                   ?_setDimmerLights_AdjGo 0022  
               __size_of_setRFSW_Control 0099                         ??_setRFSW_Status 0023  
                              ??_INT_Set 0020                   ?_setDimmerLights_Clear 0022  
                ??_Switch_Initialization 0025                   __end_of_setLoad_Enable 2512  
                   __end_of_getTemp_Safe 2362                        i1RfPointSelect@rf 0072  
                   ??_setRF_DimmerLights 0021                                   ?_getAD 0020  
                            _DlyOff_Main 13D5                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 006C  
                                 _ADRESH 009C                                   _ADRESL 009B  
             i1setLoad_StatusOff@command 0071                        ?_getPowerFault_AD 0071  
                         setRF_Enable@rf 0025                         __end_of___awtoft 2797  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 10E2  
                                 _IOCBF2 1CB2                  _setDimmerLights_Trigger 24E2  
                                 i1l1691 0781                                   i1l1696 269D  
                                 i1l8411 049E                                   i1l8511 0678  
                                 i1l8431 04EE                                   i1l8523 06AD  
                                 i1l8531 06D8                                   i1l8515 068B  
                                 i1l8443 0523                                   i1l8451 054E  
                                 i1l8435 0501                                   i1l8509 0672  
                                 i1l8517 0691                                   i1l8429 04E8  
                                 i1l8437 0507                                   i1l8527 06C4  
                                 i1l8447 053A                                   i1l8537 06F3  
                                 i1l8457 0569                                   i1l8387 27F6  
                                 i1l8539 06F9                                   i1l8491 0628  
                                 i1l8459 056F                                   i1l8549 072D  
                                 i1l8557 0762                                   i1l8469 05A3  
                                 i1l8477 05D8                                   i1l7945 19F0  
                                 i1l7949 19FA                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 _PMCON2 0196                       ??_getPowerFault_AD 0024  
                                 _OSCCON 0099                       __size_of_Load_Main 03ED  
                                 u762_25 0482                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   u781_25 060C  
                                 _IO_Set 2676                                   u779_25 05CE  
                                 u798_25 0758                                   u799_25 0774  
                     DelayTime_1us@count 0020                               _VarProduct 01A0  
                  _Dimmer_Initialization 2354           __size_of_CC2500_PowerOnInitial 0015  
          __end_of_CC2500_PowerOnInitial 25A5                                   _Dimmer 00B9  
                                 _DlySw1 00CB                                   _DlySw2 00D0  
            __size_of_setLoad_Exceptions 0044               __end_of_Mcu_Initialization 262B  
                    __end_of_Buzzer_Main 0951                                   _Memory 00E8  
                                 _Timer0 00EA       __end_of_setDimmerLights_TriggerAdj 0810  
             _setDimmerLights_TriggerAdj 0800            setDimmerLights_Switch@command 0022  
                                 ___wmul 2718                                ??___ftadd 0044  
           __size_of_DelayOffPointSelect 0017                                ??___ftdiv 0034  
                  setDimmerLights@lights 0026                                ??___ftmul 0034  
                              ??___fttol 004F             ?_Flash_Memory_Initialization 0071  
                              ??___lwdiv 0024                          i1_RfPointSelect 23AA  
            setDimmerLights_AdjRF@lights 0060                   ??_setDimmerLights_Main 0061  
                                 _r_data 00C2                                   _s_data 00C3  
                                 _setLED 1023                         _DimmerLightsIntr 00BA  
                  ?_setSw_Initialization 0071                    setDimmerLights@status 0024  
                                 _setBuz 135E                       __size_of_Temp_Main 0003  
            __end_of_Load_Initialization 2461         ??_setDimmerLights_Initialization 005F  
        ?_setDimmerLights_Initialization 0071                    ___ftmul@f3_as_product 0039  
           ??_getDimmerLights_StatusFlag 0020                 Flash_Memory_Read@address 0022  
                      RfSWPointSelect@sw 0021                         ??_setRF_RxStatus 0023  
                  __end_of_SwPointSelect 257C                          ?_setLoad_Enable 0071  
                getPowerFault_AD@channel 0028                            ?_setRF_Enable 0024  
                         _setTemp_Enable 23EB                          _RfSWPointSelect 25BA  
           __size_of_Flash_Memory_Modify 0075              __size_of_DimmerLights_Close 001B  
                __size_of_LedPointSelect 0022                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 2343  
                      ?_Sw_DimmerAdjFunc 0071              __size_of_CC2500_InitPATable 001F  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 2000  
       __end_of_CC2500_registers_address 182F     __end_of_setPowerFault_Initialization 2522  
  __size_of_setPowerFault_Initialization 0010             _setPowerFault_Initialization 2512  
                __end_of__initialization 0055              ??_PowerFault_Initialization 0021  
                        ??_RfPointSelect 0020              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0071                               ___ftadd@f1 003E  
                             ___ftadd@f2 0041                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0071                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0071                               ___ftmul@f1 002E  
                             ___ftmul@f2 0031                            __end_of_MainT 1546  
                             ___fttol@f1 004B                           __pcstackCOMMON 0071  
                     ??_Sw_DimmerOffFunc 0027                             __pidataBANK3 2755  
                          __end_of_getAD 25FC                                ?_TMR0_ISR 0071  
                              ?_TMR0_Set 0071                   setLoad_AH_AL_Restore@i 0021  
           __size_of_setDimmerLights_Adj 0061                       _LED_Initialization 243C  
              ??_getDimmerLights_Trigger 0020                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0065                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071                __size_of_setLoad_StatusOn 0032  
          ??_Flash_Memory_Initialization 005D                 __size_of_setRF_ReceiveGO 000C  
                       ?_setDimmerLights 0024                        __end_of_Load_Main 0446  
                       ?_PowerFault_Main 0071                 __end_of_setDimmerReClock 26A9  
                     __size_of_getRxData 0052                      ?_LED_Initialization 0071  
                 __end_of_setTemp_Enable 23F6                        ?_CC2500_WriteByte 0071  
                                ??_MainT 002A                           ??_setRF_Enable 0025  
                         _DimmerLights11 0079                           _DimmerLights22 007A  
                   __size_of_setLED_Main 0040                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023                      _Temp_Initialization 2324  
                     ??_CC2500_WriteByte 0020               ??_setPowerFault_Exceptions 002B  
           setDimmerLights_Switch@lights 0023                               __pbssBANK0 006C  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pbssBANK3 01C0                               __pbssBANK4 0220  
                             __pbssBANK5 02A0                              _Buzzer_Main 08A9  
                      ??_setRFSW_Control 002A                        __end_of_Temp_Main 232A  
                 ?_Dimmer_Initialization 0071                                  ?_IO_Set 0071  
                             ??_LED_Main 0025                  _DelayOff_Initialization 2370  
                  __size_of_getLoad_Safe 000B            ?_setPowerFault_Initialization 0071  
                             _getPF_Safe 2380                            ??_Switch_Main 002F  
                         DelayTime_1us@i 0022                           DelayTime_1us@j 0024  
                   ??_LED_Initialization 0025                             _DimmerLights 006C  
                      LedPointSelect@led 0021                  __end_ofi1_RfPointSelect 23B4  
                    i1_setLoad_StatusOff 19D4                       __size_of_setINT_GO 0009  
                 __size_of_DelayOff_Main 0008                     __size_of_setRF_Learn 000E  
                            setBuz@count 0029                               __pmaintext 0791  
                    _CC2500_WriteCommand 24C2                     ?_Temp_Initialization 0071  
       __size_of_DimmerLightsPointSelect 0013                         ??_setDelayOff_GO 0025  
          ??_DimmerLights_Initialization 0062                                  ?___wmul 0020  
                             ??_TMR0_ISR 0073                            ?_setTemp_Main 0071  
                             ??_TMR0_Set 0020                               _getLoad_AD 176A  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0071                       __size_of_setTxData 002E  
                ?_setDimmerLights_Switch 0022                                  ?_setLED 0022  
                 __size_of_DelayTime_1us 0026                                  _ADC_Set 2362  
              _PowerFault_Initialization 231E                                  ?_setBuz 0026  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             _getTemp_AD 120C             __end_of_setRF_Initialization 2370  
                  __size_of_getTemp_Safe 0007                            ?_setSw_Status 0022  
                     _setRFSW_AdjControl 1C31                  __end_of_RfSWPointSelect 25D0  
                      Sw_DimmerOnFunc@sw 0026                     ?i1_setLoad_StatusOff 0071  
                                _IOC_ISR 27DB                          ?_setTemp_Enable 0071  
                                _IOC_Set 2461                     __size_of_setLog_Code 0048  
                                _INT_ISR 2418                                  _INT_Set 233E  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 1E53  
                      _Flash_Memory_Read 265D                   __size_of_CC2500_RxData 0064  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                             _getLoad_Safe 23F6  
                            setTxData@rf 0024                                  _RF_Data 00A0  
                                _RF_Main 233A                       ?_Flash_Memory_Main 0071  
                     ?_Flash_Memory_Read 0071          __end_of_getDimmerLights_Trigger 2590  
        __end_of_setControl_Lights_Table 176A                              ?_TouchPower 0071  
                        _Sw_DimmerOnFunc 1E0A                          _setPercentValue 1D7C  
                ??_setLoad_AH_AL_Restore 0020                            setLog_Code@rf 002B  
                       ?_getPercentValue 0071                                  _Dimmer1 00E1  
           __end_of_CC2500_FrequencyCabr 2430                          __size_of_IO_Set 0019  
                    ??_Flash_Memory_Main 0027                      ??_Flash_Memory_Read 0020  
                                _VarLED1 00D9                                  _VarLED2 00DD  
                      __end_of_getRxData 1EF3               __end_of_setPowerFault_Main 0D8A  
               _CC2500_registers_address 1800                           RF_RxDisable@rf 0024  
                  ??_Temp_Initialization 0021          __end_of_setDimmerLights_Trigger 24F2  
                                _Product 006F                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 235B                           ??_setTemp_Main 002D  
         __end_of_setDimmerLights_Switch 24E2                                  ___ftadd 0B86  
                         ??_setSw_Enable 0022                                  ___ftdiv 0951  
                        __size_of___wmul 001E                                  ___ftmul 09FA  
                                ___fttol 15C7                      __end_of_Switch_Main 2398  
                                ___lwdiv 1ACE                  ??_Buzzer_Initialization 0020  
               ??_setOverTemp_Exceptions 002B                               ??___awtoft 002B  
                             ??___ftpack 0025                          __size_of_setLED 005E  
                   setRFSW_AdjControl@sw 0066                  ??_setDimmerLights_ERROR 0024  
                        __size_of_setBuz 0077                           ??_setSw_Status 0023  
                                __ptext1 120C                                  __ptext2 1C71  
                                __ptext3 176A                                  __ptext4 25E6  
                                __ptext5 2327                                  __ptext6 0D8A  
                                __ptext7 1B05                                  __ptext8 2324  
                                __ptext9 2401                  ??_setDimmerLights_AdjRF 005F  
                ??_setDimmerLights_AdjGo 0023                __size_of_CC2500_SIDLEMode 0004  
                ??_setDimmerLights_Clear 0023                    ??i1_setLoad_StatusOff 0072  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 1EA1  
              __end_of_Flash_Memory_Read 2676                               _setRF_Main 1546  
                          _DelayOff_Main 2378                        _DimmerLights_Main 23E0  
                      __end_of_setINT_GO 23AA           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 23CA  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 232E  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 2332  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 2797  
                    _DelayOffPointSelect 25FC                                  clrloop0 234F  
         __size_of_Switch_Initialization 000D            __end_of_Switch_Initialization 2488  
                   end_of_initialization 0055                ??_DelayOff_Initialization 0023  
                             _setLoad_GO 23D5                        _CC2500_InitSetREG 18C7  
                          _DelayTime_1us 187B                        __end_of_setTxData 1976  
             __end_of_Flash_Memory_Write 1A67                                  init_ram 2348  
                     ?_CC2500_InitSetREG 0071                      ??_DimmerLights_Main 0063  
                   Flash_Memory_Read@ret 0023                                  initloop 2349  
                             _setSw_Main 0EAD                    CC2500_ReadByte@loop_b 0021  
                      _CC2500_ReadStatus 26C4                              ?_getPF_Safe 0071  
                 __size_of_setLoad_Count 0015                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 2532                            _CC2500_Enable 0380  
                       ?i1_RfPointSelect 0071                       ?_CC2500_ReadStatus 0071  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 0016  
               __size_of_CC2500_ReadByte 001D                            _CC2500_RxData 1143  
                          _CC2500_TxData 1D38                      ??_CC2500_InitSetREG 0025  
                   __end_of_setRF_Enable 1B78           ??_setPowerFault_Initialization 0020  
            ?_setDimmerLights_TriggerAdj 0022                __size_of_getPowerFault_AD 0041  
          __size_of_Flash_Memory_Erasing 000C                     ?_DelayOffPointSelect 0071  
                    _Flash_Memory_Modify 12E9                  _DimmerLights_Exceptions 11A7  
                            ?_getLoad_AD 0071                             __pstringtext 1800  
                    _Flash_Memory_Unlock 2398                      ??_CC2500_ReadStatus 0022  
                 setRF_Initialization@rf 0071                         _setLoad_StatusOn 1A67  
       getDimmerLights_StatusFlag@Status 0020                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0071                setLoad_Exceptions@command 002C  
                    __size_of_TouchPower 0005                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 23EB  
                     _Mcu_Initialization 2613                         ??_setLoad_Enable 0020  
               __size_of_CC2500_PowerRST 0030                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                          _setSw_Main$4710 002C  
                        _setSw_Main$4711 002D                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 27B9                  __end_of_Sw_DimmerOnFunc 1E53  
                __end_of_setPercentValue 1DC2                 __size_of_CC2500_WriteREG 0019  
              __end_of_CC2500_InitSetREG 18F1                      ?_Mcu_Initialization 0071  
       __end_of_setPowerFault_Exceptions 1BB2                     ?_Flash_Memory_Modify 0071  
            __size_of_setRF_DimmerLights 005B                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 10E2                     ?_Flash_Memory_Unlock 0071  
              __end_of_CC2500_ReadStatus 26DF                            ?_RF_RxDisable 0071  
             __end_of_setLoad_Exceptions 1D38                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 268F                     _setRF_Initialization 2369  
                            _Switch_Main 2390              setDimmerLights_Clear@lights 0023  
                      __size_of_LED_Main 000C                           ?_CC2500_RxData 0071  
                         ?_CC2500_TxData 0071                  _DimmerLightsPointSelect 2555  
                            ___ftmul@exp 0038                    _CC2500_PowerOnInitial 2590  
                   ??_Mcu_Initialization 0021                    ??_DelayOffPointSelect 0020  
                   ?_setDimmerLights_Adj 005D                __size_of_Sw_DimmerAdjFunc 0026  
                   setRF_DimmerLights@on 0020                           __end_of___wmul 2736  
                           setRF_Main@rf 006A                        __size_of_TMR0_ISR 034B  
        __size_of_setOverTemp_Exceptions 0039                        __size_of_TMR0_Set 000D  
          __size_of_setDimmerLights_Main 0089                           __end_of_setLED 1081  
                         __end_of_setBuz 13D5                            _setLoad_Count 1866  
                   _CC2500_FrequencyCabr 2424                  setLoad_StatusOn@command 0020  
              __size_of_Sw_DimmerOffFunc 0071               __size_of_Flash_Memory_Main 004E  
             __size_of_Flash_Memory_Read 0019                              ?_setRF_Main 0071  
                        _setRFSW_Control 0810                      __size_of_getPF_Safe 0008  
          getDimmerLights_Trigger@Status 0020                        ?_setDimmerReClock 0071  
                    start_initialization 0018                        _setRF_DimmerValue 1A99  
                        ?_LedPointSelect 0071               __end_of_DimmerLights_Close 26C4  
                              _Load_Main 0059                  setLoad_StatusOff@lights 0021  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
           __size_of_Load_Initialization 000D       __size_of_PowerFault_Initialization 0003  
                     ??_setDimmerReClock 0071                       ?_setRF_DimmerValue 0071  
             __end_of_CC2500_InitPATable 2755          __size_of_setTemp_Initialization 000B  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setTemp_Main 0EAD                              ?_setLoad_GO 0071  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 26FB  
                        RfPointSelect@rf 0021                      __size_of_getLoad_AD 0096  
                           ?_Buzzer_Main 0071                                 ??_IO_Set 0020  
                              _VarErrLED 00D5                              ?_setSw_Main 0071  
                    ??_setRF_DimmerValue 0061                      __size_of_getTemp_AD 006C  
                 ?_setLED_Initialization 0071                     __end_of_setSw_Status 24C2  
                     Sw_DimmerAdjFunc@sw 0024                    ?_setRF_Initialization 0071  
              i1setLoad_StatusOff@lights 0072                                _VarMemory 0220  
                __size_of_setRFSW_Status 000F                    __end_of_RfPointSelect 23D5  
              __size_of_CC2500_WriteByte 0019                                _VarTimer0 00C4  
                              _Temp_Main 2327                ??_DimmerLights_Exceptions 002A  
          setOverTemp_Exceptions@command 002C                                _Rx_Length 00BE  
                setRF_DimmerValue@lights 0063                    ??_setDimmerLights_Adj 005E  
                               ??___wmul 0024                   __size_of_SwPointSelect 0014  
                              _Tx_Length 00C0                              __pdataBANK3 01A0  
                               ??_setLED 0023                         ??_setTemp_Enable 0020  
                               ?_ADC_Set 0071                                 ??_setBuz 0028  
                        ??_DelayOff_Main 002D                        ??_CC2500_ReadByte 0020  
                         ?_setLoad_Count 0071                         _CC2500_SIDLEMode 2332  
             __size_of_DimmerLights_Main 000B                __end_of_setRF_DimmerValue 1ACE  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0071  
                        _setRF_Main$4359 006B                              __pbssCOMMON 0078  
                               ?_IOC_Set 0071                                ___latbits 0003  
                             ?_Load_Main 0071                    setTemp_Enable@command 0020  
                               ?_INT_ISR 0071                      setRF_Enable@command 0024  
                       ?_Sw_DimmerOnFunc 0071                            __pcstackBANK0 0020  
                               ?_INT_Set 0071                         ?_setPercentValue 0071  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002A  
               __size_of_setDimmerLights 007C                            DlyOff_Main@sw 002C  
                      ??_CC2500_PowerRST 0026                                 ?_RF_Main 0071  
           setDimmerLights_Clear@command 0022                             ??_TouchPower 0020  
               __size_of_PowerFault_Main 0003                     __size_of_DlyOff_Main 0079  
             __size_of_CC2500_ReadStatus 001B                   _setOverTemp_Exceptions 1B05  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 012E                            _DimmerLights2 013B  
                  CC2500_WriteREG@w_addr 0024                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020           __size_of_setLoad_AH_AL_Restore 0022  
                  __size_of_setRF_Enable 003A                          ??_CC2500_RxData 0024  
          __end_of_setLoad_AH_AL_Restore 27DB                  __size_of_setRF_RxStatus 000E  
                        ??_CC2500_TxData 0024                                __pnvBANK0 006F  
                              __pnvBANK1 00E8              __size_of_LED_Initialization 000C  
                 ?_CC2500_PowerOnInitial 0071                               ?_Temp_Main 0071  
                    __size_of_setRF_Main 0081                         ___lwdiv@dividend 0022  
                  DelayOffPointSelect@sw 0021                 ?_getDimmerLights_Trigger 0071  
                             setBuz@time 0026                      setDelayOff_GO@value 0024  
               ?_setControl_Lights_Table 0071                   _setTemp_Initialization 2401  
                       _getPowerFault_AD 1C71        __size_of_setPowerFault_Exceptions 003A  
    __end_of_Flash_Memory_Initialization 0B86              _Flash_Memory_Initialization 0AAE  
              ?_setPowerFault_Exceptions 0071                                __ptext100 0951  
                              __ptext101 0B86                                __ptext110 2568  
                              __ptext102 2775                                __ptext111 1F4A  
                              __ptext103 1081                                __ptext120 23BF  
                              __ptext112 24A4                                __ptext104 2354  
                              __ptext121 25FC                                __ptext113 25BA  
                              __ptext105 2378                                __ptext130 232E  
                              __ptext122 2590                                __ptext114 24E2  
                              __ptext106 13D5                                __ptext131 232A  
                              __ptext123 2332                                __ptext115 24D2  
                              __ptext107 1948                                __ptext140 268F  
                              __ptext132 24C2                                __ptext124 19A4  
                              __ptext116 2555                                __ptext108 23CA  
                              __ptext141 2418                                __ptext133 262B  
                              __ptext125 18C7                                __ptext117 135E  
                              __ptext109 24B3                                 ?___ftadd 003E  
                              __ptext142 240C                                __ptext134 08A9  
                              __ptext126 2736                                __ptext118 2718  
                              __ptext143 23AA                                __ptext135 23B4  
                              __ptext127 2644                                __ptext119 2370  
                              __ptext128 2424                                __ptext137 0446  
                              __ptext129 187B                                __ptext138 19D4  
                              __ptext139 27DB                                _getRxData 1EA1  
                               ?___ftdiv 002E                                 ?___ftmul 002E  
                               ?___fttol 004B                                 ?___lwdiv 0020  
                __end_of_setRFSW_Control 08A9                          _setRF_ReceiveGO 240C  
                    __size_of_setLoad_GO 000B            __size_of_setSw_Initialization 0008  
         __size_of_Buzzer_Initialization 000B            __end_of_Buzzer_Initialization 23BF  
                             setTxData@i 0025                         getPercentValue@i 005C  
                       setPercentValue@i 005A                            ??_setLog_Code 002A  
                     __end_of_TouchPower 2348                       _setPowerFault_Main 0C7C  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0057  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0021  
                    __size_of_setSw_Main 0153            __end_of_setDimmerLights_ERROR 1F4A  
           CC2500_ReadStatus@status_addr 0023           __size_of_setDimmerLights_AdjRF 0023  
         __size_of_setDimmerLights_AdjGo 0010            __end_of_setDimmerLights_AdjRF 1023  
          __end_of_setDimmerLights_AdjGo 2532                   CC2500_WriteByte@loop_a 0021  
         __size_of_setDimmerLights_Clear 0010            __end_of_setDimmerLights_Clear 2502  
                         __size_of_MainT 007C                                _r_address 00C1  
           __end_of_CC2500_patable_vaule 1866                      ?_setPowerFault_Main 0071  
                         __size_of_getAD 0016                             _setRF_Enable 1B3E  
                       ___lwdiv@quotient 0025                  __size_of_DelayTimejudge 002E  
                          _SwPointSelect 2568                       Sw_DimmerOffFunc@sw 0029  
                              _setINT_GO 23A1                      __end_of_setLED_Main 1C31  
               __end_of_setLoad_StatusOn 1A99                   ??_setRF_Initialization 0020  
            __end_of_Temp_Initialization 2327                        _CC2500_rfSettings 182F  
                         ___wmul@product 0024                                 _LED_Main 2448  
                           ??_getPF_Safe 0020                          SwPointSelect@sw 0021  
                              clear_ram0 234E                 CC2500_InitPATable@loop_d 0027  
                              _setTxData 1948      __end_of_DimmerLights_Initialization 25BA  
            _DimmerLights_Initialization 25A5                       _CC2500_ClearRXFIFO 232A  
                     _CC2500_ClearTXFIFO 232E           setDimmerLights_Trigger@command 0022  
               setRF_DimmerLights@lights 0024                                 _GO_nDONE 04E9  
                    __end_of_setRF_Learn 24A4                     ??_setPowerFault_Main 002D  
               __size_of_getPercentValue 005B                 setRF_DimmerLights@status 0023  
                 setRF_ReceiveGO@command 0073              __size_of_setRFSW_AdjControl 0040  
                     _Flash_Memory_Write 1A36                               ?_getRxData 0071  
                               _TMR0_ISR 0446                             ??_getLoad_AD 0024  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
            __end_ofi1_setLoad_StatusOff 1A05                        setRF_ReceiveGO@rf 0074  
                               _TMR0_Set 246E                         _Sw_DimmerAdjFunc 18A1  
                    ?_CC2500_ClearRXFIFO 0071                      ?_CC2500_ClearTXFIFO 0071  
                        ??_setLoad_Count 0020        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 1948  
                           ??_getTemp_AD 0024              __end_of_CC2500_WriteCommand 24D2  
                 ??_CC2500_FrequencyCabr 0026                  DlyOff_Initialization@sw 0022  
                       __size_of_ADC_Set 0007                        ___wmul@multiplier 0020  
             __size_of_setRF_DimmerValue 0035                      ?_Flash_Memory_Write 0071  
                       _Sw_DimmerOffFunc 1278                    __size_of_setTemp_Main 0123  
           __end_of_MainT_Initialization 25E6                  __size_of_setDelayOff_GO 003F  
                  __size_of_setSw_Enable 001C                                 _DelayOff 00B8  
                           setSw_Main@sw 002E                              ??_Load_Main 002D  
                     __end_of_getPF_Safe 2388                         __size_of_IOC_ISR 0025  
                       __size_of_IOC_Set 000D             __end_of_Flash_Memory_Erasing 243C  
                         ?_SwPointSelect 0071                              getAD@adcon0 0023  
                            getAD@adcon1 0020                         __size_of_INT_ISR 000C  
                         setLED_Main@led 0024                         __size_of_INT_Set 0005  
                    __end_of_setLog_Code 1E0A                    _DlyOff_Initialization 23BF  
                  __size_of_setSw_Status 000F                               ?_setINT_GO 0071  
                   ??_CC2500_ClearRXFIFO 0024                     ??_CC2500_ClearTXFIFO 0024  
              __end_of_CC2500_rfSettings 185E                         __size_of_RF_Main 0004  
                 setLoad_StatusOn@lights 0021                       __end_of_getLoad_AD 1800  
                  _Switch_Initialization 247B                     ??_Flash_Memory_Write 0020  
                      ??_setDimmerLights 0025                           _setRFSW_Status 24A4  
                   __size_of_Buzzer_Main 00A8                       __end_of_getTemp_AD 1278  
                             ?_setTxData 0071                             ?_Switch_Main 0071  
                       _CC2500_WriteByte 262B                                 _VarTMain 01C0  
                      getLoad_AD@channel 0029             Flash_Memory_Initialization@i 005E  
                __end_of_setRF_ReceiveGO 2418                              ??_Temp_Main 0030  
                      ??_PowerFault_Main 002F                        setRFSW_Control@sw 002C  
                    _Load_Initialization 2454                                setLED@led 0023  
                               _RxStatus 0383     __end_of_setDimmerLights_TriggerERROR 191C  
  __size_of_setDimmerLights_TriggerERROR 002B             _setDimmerLights_TriggerERROR 18F1  
                               _TxStatus 0386                             _setTemp_Main 0D8A  
                     _setLoad_Exceptions 1CF4                         __size_of___ftadd 00F6  
                       ?_setRFSW_Control 0071                         __size_of___ftdiv 00A9  
                           _setSw_Enable 26DF                         __size_of___ftmul 00B4  
                       __size_of___fttol 0087                         __size_of___lwdiv 0037  
               __size_ofi1_RfPointSelect 000A                                 ___awtoft 2775  
                       ??_LedPointSelect 0020                                 ___ftpack 1081  
                           _setSw_Status 24B3                        getTemp_AD@channel 0028  
                           ??_setRF_Main 0069                     CC2500_WriteREG@value 0022  
                            _setLED_Main 1BF1                      ?_setLoad_Exceptions 0071  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 1FA5  
               ?_DelayOff_Initialization 0071                         setDelayOff_GO@sw 0026  
                        ___lwdiv@divisor 0020                     ?_Load_Initialization 0071  
                        ___lwdiv@counter 0027                                 __ptext10 2390  
                               __ptext11 0EAD                                 __ptext20 2343  
                               __ptext12 2496                                 __ptext21 233A  
                               __ptext13 1E0A                                 __ptext30 1A99  
                               __ptext22 1546                                 __ptext14 1278  
                               __ptext31 1000                                 __ptext23 1EA1  
                               __ptext15 18A1                                 __ptext40 2321  
                               __ptext32 191C                                 __ptext24 1DC2  
                               __ptext16 0800                                 __ptext41 0C7C  
                               __ptext33 1D38                                 __ptext25 16D7  
                               __ptext17 2522                                 __ptext50 233E  
                               __ptext42 1B78                                 __ptext34 1143  
                               __ptext26 0810                                 __ptext18 247B  
                               __ptext51 2362                                 __ptext43 23F6  
                               __ptext35 2488                                 __ptext27 1BB2  
                               __ptext19 2388                                 __ptext60 23A1  
                               __ptext52 25D0                                 __ptext44 231E  
                               __ptext36 26C4                                 __ptext28 1976  
                               __ptext61 11A7                                 __ptext53 14CA  
                               __ptext45 2512                                 __ptext37 26FB  
                               __ptext29 1C31                                 __ptext70 2448  
                               __ptext62 18F1                                 __ptext54 23EB  
                               __ptext46 2613                                 __ptext38 2336  
                               __ptext71 1BF1                                 __ptext63 1EF3  
                               __ptext55 2502                                 __ptext47 246E  
                               __ptext39 2369                                 __ptext80 265D  
                               __ptext72 243C                                 __ptext64 24F2  
                               __ptext56 0059                                 __ptext48 2676  
                               __ptext81 23E0                                 __ptext73 2532  
                               __ptext65 235B                                 __ptext57 1CF4  
                               __ptext49 2461                                 __ptext90 2797  
                               __ptext82 164E                                 __ptext74 1E53  
                               __ptext66 2380                                 __ptext58 26DF  
                               __ptext91 257C                                 __ptext83 10E2  
                               __ptext75 12E9                                 __ptext67 1ACE  
                               __ptext59 1B3E                                 __ptext92 26A9  
                               __ptext84 1D7C                                 __ptext76 2430  
                               __ptext68 2454                                 __ptext93 23D5  
                               __ptext85 1A05                                 __ptext77 0AAE  
                               __ptext69 27B9                                 __ptext94 2543  
                               __ptext86 144E                                 __ptext78 1A36  
                               __ptext95 25A5                                 __ptext87 1A67  
                               __ptext79 2398                                 __ptext96 1CB2  
                               __ptext88 1866                                 __ptext97 1FA5  
                               __ptext89 1023                                 __ptext98 15C7  
                               __ptext99 09FA                             ??_setLoad_GO 0020  
                ??_setLED_Initialization 0024                 __size_of_RfSWPointSelect 0016  
         __size_of_Dimmer_Initialization 0007                   __end_of_setRFSW_Status 24B3  
          __end_of_Dimmer_Initialization 235B             __end_of_setDimmerLights_Main 16D7  
            setDimmerLights_ERROR@lights 0025                             ??_setSw_Main 002A  
                          setLED@command 0022                            __size_of_main 006F  
                            _setRF_Learn 2496                 __end_of_CC2500_SIDLEMode 2336  
                         _setRF_RxStatus 2488               setDimmerLights_Main@lights 0062  
            __end_of_DelayOffPointSelect 2613               CC2500_WriteCommand@command 0023  
                     _DimmerLights_Close 26A9                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 001A                     ??_setLoad_Exceptions 002B  
                        _CC2500_ReadByte 26FB                       _CC2500_InitPATable 2736  
    __size_of_getDimmerLights_StatusFlag 0012            setDimmerLights_Trigger@lights 0023  
                     __end_of_setRF_Main 15C7              __size_of_Mcu_Initialization 0018  
                   _CC2500_patable_vaule 185E                              ??_getRxData 0068  
                    ?_DimmerLights_Close 0071         setDimmerLights_TriggerAdj@lights 0023  
          ?_setDimmerLights_TriggerERROR 0022                      ?_CC2500_InitPATable 0071  
                        _CC2500_PowerRST 19A4                       __end_of_setLoad_GO 23E0  
            __end_of_Flash_Memory_Modify 135E                        ??_getPercentValue 0059  
                            _setLog_Code 1DC2                    setRF_RxStatus@command 0022  
            __end_of_Flash_Memory_Unlock 23A1                          ??_SwPointSelect 0020  
                        _CC2500_WriteREG 2644                       __end_of_setSw_Main 1000  
                      setLoad_GO@command 0020                    ??_Load_Initialization 0022  
                          _Transceive_GO 0384                            _Transceive_OK 0385  
                   setLoad_Count@command 0021                   ?_DlyOff_Initialization 0071  
                ?_setOverTemp_Exceptions 0071                           _DelayTimejudge 1976  
                          ?_getLoad_Safe 0071                              pic14e$flags 007E  
               __end_of_getPowerFault_AD 1CB2                     ??_DimmerLights_Close 0021  
                            ??_setINT_GO 0020                                 intlevel1 0000  
                   ??_CC2500_InitPATable 0025                  __size_of_setLoad_Enable 0010  
                 ?_Switch_Initialization 0071                   __end_of_setRF_RxStatus 2496  
                        ?_setRFSW_Status 0022                  ??_CC2500_PowerOnInitial 0029  
 __end_of_setDimmerLights_Initialization 1CF4  __size_of_setDimmerLights_Initialization 0042  
         _setDimmerLights_Initialization 1CB2              __end_of_setDimmerLights_Adj 1143  
                ?_setTemp_Initialization 0071                              ??_setTxData 0022  
                       ?_setRF_ReceiveGO 0073                   CC2500_InitPATable@temp 0026  
                   _MainT_Initialization 25D0                    __size_of_RF_RxDisable 002C  
                      _RF_Initialization 2336                              getLoad_AD@i 002B  
                            getLoad_AD@j 002A                            ?_getTemp_Safe 0071  
                   _Flash_Memory_Erasing 2430                       ?_RF_Initialization 0071  
                             _SPI0Buffer 00BF          __end_of_DelayOff_Initialization 2378  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 2380  
                    ??_RF_Initialization 0021                              getRxData@rf 0068  
                         _setDelayOff_GO 1BB2         __size_of_getDimmerLights_Trigger 0014  
       __size_of_setControl_Lights_Table 0093                        _setLoad_StatusOff 1A05  
                 __end_of_DelayTimejudge 19A4           __end_of_setOverTemp_Exceptions 1B3E  
                 __size_of_RfPointSelect 000B                        ??i1_RfPointSelect 0071  
                         ??_getLoad_Safe 0020     __size_of_Flash_Memory_Initialization 00D8  
                          ??_DlyOff_Main 002A                       ?_setLoad_StatusOff 0020  
                  __end_of_DelayTime_1us 18A1                 __end_of_Sw_DimmerAdjFunc 18C7  
                __end_of_CC2500_ReadByte 2718             __end_of_setSw_Initialization 2390  
                        ?_setRF_RxStatus 0022                     getPercentValue@value 005B  
                           _RF_RxDisable 191C               ?_PowerFault_Initialization 0071  
             __end_of_LED_Initialization 2448         __size_of_setDimmerLights_Trigger 0010  
                      ?_setLoad_StatusOn 0020           __end_of_setTemp_Initialization 240C  
               __size_of_Sw_DimmerOnFunc 0049                      ??_setLoad_StatusOff 0021  
               ?_DimmerLights_Exceptions 0071                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 233A  
               __end_of_Sw_DimmerOffFunc 12E9                       ??_setLoad_StatusOn 0021  
        __size_of_setDimmerLights_Switch 0010                        ??_RfSWPointSelect 0020  
                  ?_MainT_Initialization 0071                         setRF_RxStatus@rf 0023  
                  __end_of_CC2500_RxData 11A7                    __end_of_CC2500_TxData 1D7C  
                         ??_getTemp_Safe 0020                    _setLoad_AH_AL_Restore 27B9  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 19D4  
