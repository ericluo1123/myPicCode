

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Sep 13 16:54:30 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,delta=2
   141                           	psect	text119,local,class=CODE,merge=1,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,delta=2
   145                           	psect	text123,local,class=CODE,merge=1,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	text125,local,class=CODE,merge=1,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	psect	text127,local,class=CODE,merge=1,delta=2
   150                           	psect	text128,local,class=CODE,merge=1,delta=2
   151                           	psect	text129,local,class=CODE,merge=1,delta=2
   152                           	psect	text130,local,class=CODE,merge=1,delta=2
   153                           	psect	text131,local,class=CODE,merge=1,delta=2
   154                           	psect	text132,local,class=CODE,merge=1,delta=2
   155                           	psect	text133,local,class=CODE,merge=1,delta=2
   156                           	psect	text134,local,class=CODE,merge=1,delta=2
   157                           	psect	intentry,global,class=CODE,delta=2
   158                           	psect	text136,local,class=CODE,merge=1,delta=2
   159                           	psect	text137,local,class=CODE,merge=1,delta=2
   160                           	psect	text138,local,class=CODE,merge=1,delta=2
   161                           	psect	text139,local,class=CODE,merge=1,delta=2
   162                           	psect	text140,local,class=CODE,merge=1,delta=2
   163                           	psect	text141,local,class=CODE,merge=1,delta=2
   164                           	psect	text142,local,class=CODE,merge=1,delta=2
   165                           	dabs	1,0x7E,2
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  0116                     	;# 
   213  0117                     	;# 
   214  011D                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  018E                     	;# 
   218  0191                     	;# 
   219  0191                     	;# 
   220  0192                     	;# 
   221  0193                     	;# 
   222  0193                     	;# 
   223  0194                     	;# 
   224  0195                     	;# 
   225  0196                     	;# 
   226  0197                     	;# 
   227  0199                     	;# 
   228  019A                     	;# 
   229  019B                     	;# 
   230  019B                     	;# 
   231  019B                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  019C                     	;# 
   235  019D                     	;# 
   236  019E                     	;# 
   237  019F                     	;# 
   238  020D                     	;# 
   239  0210                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0291                     	;# 
   256  0291                     	;# 
   257  0292                     	;# 
   258  0293                     	;# 
   259  0298                     	;# 
   260  0298                     	;# 
   261  0299                     	;# 
   262  029A                     	;# 
   263  0394                     	;# 
   264  0395                     	;# 
   265  0396                     	;# 
   266  0FE4                     	;# 
   267  0FE5                     	;# 
   268  0FE6                     	;# 
   269  0FE7                     	;# 
   270  0FE8                     	;# 
   271  0FE9                     	;# 
   272  0FEA                     	;# 
   273  0FEB                     	;# 
   274  0FED                     	;# 
   275  0FEE                     	;# 
   276  0FEF                     	;# 
   277  0000                     	;# 
   278  0001                     	;# 
   279  0002                     	;# 
   280  0003                     	;# 
   281  0004                     	;# 
   282  0005                     	;# 
   283  0006                     	;# 
   284  0007                     	;# 
   285  0008                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  0010                     	;# 
   293  0011                     	;# 
   294  0012                     	;# 
   295  0015                     	;# 
   296  0016                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001C                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  0090                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0095                     	;# 
   311  0096                     	;# 
   312  0097                     	;# 
   313  0099                     	;# 
   314  009A                     	;# 
   315  009B                     	;# 
   316  009B                     	;# 
   317  009C                     	;# 
   318  009D                     	;# 
   319  009E                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  011D                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  018E                     	;# 
   329  0191                     	;# 
   330  0191                     	;# 
   331  0192                     	;# 
   332  0193                     	;# 
   333  0193                     	;# 
   334  0194                     	;# 
   335  0195                     	;# 
   336  0196                     	;# 
   337  0197                     	;# 
   338  0199                     	;# 
   339  019A                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019C                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020D                     	;# 
   350  0210                     	;# 
   351  0211                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0212                     	;# 
   355  0213                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0216                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0217                     	;# 
   366  0291                     	;# 
   367  0291                     	;# 
   368  0292                     	;# 
   369  0293                     	;# 
   370  0298                     	;# 
   371  0298                     	;# 
   372  0299                     	;# 
   373  029A                     	;# 
   374  0394                     	;# 
   375  0395                     	;# 
   376  0396                     	;# 
   377  0FE4                     	;# 
   378  0FE5                     	;# 
   379  0FE6                     	;# 
   380  0FE7                     	;# 
   381  0FE8                     	;# 
   382  0FE9                     	;# 
   383  0FEA                     	;# 
   384  0FEB                     	;# 
   385  0FED                     	;# 
   386  0FEE                     	;# 
   387  0FEF                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  010C                     	;# 
   432  010D                     	;# 
   433  010E                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  011D                     	;# 
   437  018C                     	;# 
   438  018D                     	;# 
   439  018E                     	;# 
   440  0191                     	;# 
   441  0191                     	;# 
   442  0192                     	;# 
   443  0193                     	;# 
   444  0193                     	;# 
   445  0194                     	;# 
   446  0195                     	;# 
   447  0196                     	;# 
   448  0197                     	;# 
   449  0199                     	;# 
   450  019A                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019C                     	;# 
   456  019C                     	;# 
   457  019D                     	;# 
   458  019E                     	;# 
   459  019F                     	;# 
   460  020D                     	;# 
   461  0210                     	;# 
   462  0211                     	;# 
   463  0211                     	;# 
   464  0212                     	;# 
   465  0212                     	;# 
   466  0213                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0214                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0216                     	;# 
   474  0216                     	;# 
   475  0217                     	;# 
   476  0217                     	;# 
   477  0291                     	;# 
   478  0291                     	;# 
   479  0292                     	;# 
   480  0293                     	;# 
   481  0298                     	;# 
   482  0298                     	;# 
   483  0299                     	;# 
   484  029A                     	;# 
   485  0394                     	;# 
   486  0395                     	;# 
   487  0396                     	;# 
   488  0FE4                     	;# 
   489  0FE5                     	;# 
   490  0FE6                     	;# 
   491  0FE7                     	;# 
   492  0FE8                     	;# 
   493  0FE9                     	;# 
   494  0FEA                     	;# 
   495  0FEB                     	;# 
   496  0FED                     	;# 
   497  0FEE                     	;# 
   498  0FEF                     	;# 
   499  0000                     	;# 
   500  0001                     	;# 
   501  0002                     	;# 
   502  0003                     	;# 
   503  0004                     	;# 
   504  0005                     	;# 
   505  0006                     	;# 
   506  0007                     	;# 
   507  0008                     	;# 
   508  0009                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000D                     	;# 
   513  000E                     	;# 
   514  0010                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0016                     	;# 
   520  0017                     	;# 
   521  0018                     	;# 
   522  0019                     	;# 
   523  001A                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  0090                     	;# 
   530  0091                     	;# 
   531  0092                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  0116                     	;# 
   546  0117                     	;# 
   547  011D                     	;# 
   548  018C                     	;# 
   549  018D                     	;# 
   550  018E                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0194                     	;# 
   557  0195                     	;# 
   558  0196                     	;# 
   559  0197                     	;# 
   560  0199                     	;# 
   561  019A                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019C                     	;# 
   567  019C                     	;# 
   568  019D                     	;# 
   569  019E                     	;# 
   570  019F                     	;# 
   571  020D                     	;# 
   572  0210                     	;# 
   573  0211                     	;# 
   574  0211                     	;# 
   575  0212                     	;# 
   576  0212                     	;# 
   577  0213                     	;# 
   578  0213                     	;# 
   579  0214                     	;# 
   580  0214                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0216                     	;# 
   585  0216                     	;# 
   586  0217                     	;# 
   587  0217                     	;# 
   588  0291                     	;# 
   589  0291                     	;# 
   590  0292                     	;# 
   591  0293                     	;# 
   592  0298                     	;# 
   593  0298                     	;# 
   594  0299                     	;# 
   595  029A                     	;# 
   596  0394                     	;# 
   597  0395                     	;# 
   598  0396                     	;# 
   599  0FE4                     	;# 
   600  0FE5                     	;# 
   601  0FE6                     	;# 
   602  0FE7                     	;# 
   603  0FE8                     	;# 
   604  0FE9                     	;# 
   605  0FEA                     	;# 
   606  0FEB                     	;# 
   607  0FED                     	;# 
   608  0FEE                     	;# 
   609  0FEF                     	;# 
   610  0000                     	;# 
   611  0001                     	;# 
   612  0002                     	;# 
   613  0003                     	;# 
   614  0004                     	;# 
   615  0005                     	;# 
   616  0006                     	;# 
   617  0007                     	;# 
   618  0008                     	;# 
   619  0009                     	;# 
   620  000A                     	;# 
   621  000B                     	;# 
   622  000C                     	;# 
   623  000D                     	;# 
   624  000E                     	;# 
   625  0010                     	;# 
   626  0011                     	;# 
   627  0012                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0016                     	;# 
   631  0017                     	;# 
   632  0018                     	;# 
   633  0019                     	;# 
   634  001A                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  008C                     	;# 
   638  008D                     	;# 
   639  008E                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0095                     	;# 
   644  0096                     	;# 
   645  0097                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009E                     	;# 
   653  010C                     	;# 
   654  010D                     	;# 
   655  010E                     	;# 
   656  0116                     	;# 
   657  0117                     	;# 
   658  011D                     	;# 
   659  018C                     	;# 
   660  018D                     	;# 
   661  018E                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0194                     	;# 
   668  0195                     	;# 
   669  0196                     	;# 
   670  0197                     	;# 
   671  0199                     	;# 
   672  019A                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  019C                     	;# 
   679  019D                     	;# 
   680  019E                     	;# 
   681  019F                     	;# 
   682  020D                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  0291                     	;# 
   700  0291                     	;# 
   701  0292                     	;# 
   702  0293                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  0394                     	;# 
   708  0395                     	;# 
   709  0396                     	;# 
   710  0FE4                     	;# 
   711  0FE5                     	;# 
   712  0FE6                     	;# 
   713  0FE7                     	;# 
   714  0FE8                     	;# 
   715  0FE9                     	;# 
   716  0FEA                     	;# 
   717  0FEB                     	;# 
   718  0FED                     	;# 
   719  0FEE                     	;# 
   720  0FEF                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0008                     	;# 
   730  0009                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  000E                     	;# 
   736  0010                     	;# 
   737  0011                     	;# 
   738  0012                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  008E                     	;# 
   751  0090                     	;# 
   752  0091                     	;# 
   753  0092                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0099                     	;# 
   758  009A                     	;# 
   759  009B                     	;# 
   760  009B                     	;# 
   761  009C                     	;# 
   762  009D                     	;# 
   763  009E                     	;# 
   764  010C                     	;# 
   765  010D                     	;# 
   766  010E                     	;# 
   767  0116                     	;# 
   768  0117                     	;# 
   769  011D                     	;# 
   770  018C                     	;# 
   771  018D                     	;# 
   772  018E                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0197                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020D                     	;# 
   794  0210                     	;# 
   795  0211                     	;# 
   796  0211                     	;# 
   797  0212                     	;# 
   798  0212                     	;# 
   799  0213                     	;# 
   800  0213                     	;# 
   801  0214                     	;# 
   802  0214                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0216                     	;# 
   807  0216                     	;# 
   808  0217                     	;# 
   809  0217                     	;# 
   810  0291                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0298                     	;# 
   815  0298                     	;# 
   816  0299                     	;# 
   817  029A                     	;# 
   818  0394                     	;# 
   819  0395                     	;# 
   820  0396                     	;# 
   821  0FE4                     	;# 
   822  0FE5                     	;# 
   823  0FE6                     	;# 
   824  0FE7                     	;# 
   825  0FE8                     	;# 
   826  0FE9                     	;# 
   827  0FEA                     	;# 
   828  0FEB                     	;# 
   829  0FED                     	;# 
   830  0FEE                     	;# 
   831  0FEF                     	;# 
   832  0000                     	;# 
   833  0001                     	;# 
   834  0002                     	;# 
   835  0003                     	;# 
   836  0004                     	;# 
   837  0005                     	;# 
   838  0006                     	;# 
   839  0007                     	;# 
   840  0008                     	;# 
   841  0009                     	;# 
   842  000A                     	;# 
   843  000B                     	;# 
   844  000C                     	;# 
   845  000D                     	;# 
   846  000E                     	;# 
   847  0010                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0015                     	;# 
   851  0016                     	;# 
   852  0016                     	;# 
   853  0017                     	;# 
   854  0018                     	;# 
   855  0019                     	;# 
   856  001A                     	;# 
   857  001B                     	;# 
   858  001C                     	;# 
   859  008C                     	;# 
   860  008D                     	;# 
   861  008E                     	;# 
   862  0090                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0095                     	;# 
   866  0096                     	;# 
   867  0097                     	;# 
   868  0099                     	;# 
   869  009A                     	;# 
   870  009B                     	;# 
   871  009B                     	;# 
   872  009C                     	;# 
   873  009D                     	;# 
   874  009E                     	;# 
   875  010C                     	;# 
   876  010D                     	;# 
   877  010E                     	;# 
   878  0116                     	;# 
   879  0117                     	;# 
   880  011D                     	;# 
   881  018C                     	;# 
   882  018D                     	;# 
   883  018E                     	;# 
   884  0191                     	;# 
   885  0191                     	;# 
   886  0192                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0194                     	;# 
   890  0195                     	;# 
   891  0196                     	;# 
   892  0197                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020D                     	;# 
   905  0210                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0291                     	;# 
   922  0291                     	;# 
   923  0292                     	;# 
   924  0293                     	;# 
   925  0298                     	;# 
   926  0298                     	;# 
   927  0299                     	;# 
   928  029A                     	;# 
   929  0394                     	;# 
   930  0395                     	;# 
   931  0396                     	;# 
   932  0FE4                     	;# 
   933  0FE5                     	;# 
   934  0FE6                     	;# 
   935  0FE7                     	;# 
   936  0FE8                     	;# 
   937  0FE9                     	;# 
   938  0FEA                     	;# 
   939  0FEB                     	;# 
   940  0FED                     	;# 
   941  0FEE                     	;# 
   942  0FEF                     	;# 
   943  0000                     	;# 
   944  0001                     	;# 
   945  0002                     	;# 
   946  0003                     	;# 
   947  0004                     	;# 
   948  0005                     	;# 
   949  0006                     	;# 
   950  0007                     	;# 
   951  0008                     	;# 
   952  0009                     	;# 
   953  000A                     	;# 
   954  000B                     	;# 
   955  000C                     	;# 
   956  000D                     	;# 
   957  000E                     	;# 
   958  0010                     	;# 
   959  0011                     	;# 
   960  0012                     	;# 
   961  0015                     	;# 
   962  0016                     	;# 
   963  0016                     	;# 
   964  0017                     	;# 
   965  0018                     	;# 
   966  0019                     	;# 
   967  001A                     	;# 
   968  001B                     	;# 
   969  001C                     	;# 
   970  008C                     	;# 
   971  008D                     	;# 
   972  008E                     	;# 
   973  0090                     	;# 
   974  0091                     	;# 
   975  0092                     	;# 
   976  0095                     	;# 
   977  0096                     	;# 
   978  0097                     	;# 
   979  0099                     	;# 
   980  009A                     	;# 
   981  009B                     	;# 
   982  009B                     	;# 
   983  009C                     	;# 
   984  009D                     	;# 
   985  009E                     	;# 
   986  010C                     	;# 
   987  010D                     	;# 
   988  010E                     	;# 
   989  0116                     	;# 
   990  0117                     	;# 
   991  011D                     	;# 
   992  018C                     	;# 
   993  018D                     	;# 
   994  018E                     	;# 
   995  0191                     	;# 
   996  0191                     	;# 
   997  0192                     	;# 
   998  0193                     	;# 
   999  0193                     	;# 
  1000  0194                     	;# 
  1001  0195                     	;# 
  1002  0196                     	;# 
  1003  0197                     	;# 
  1004  0199                     	;# 
  1005  019A                     	;# 
  1006  019B                     	;# 
  1007  019B                     	;# 
  1008  019B                     	;# 
  1009  019B                     	;# 
  1010  019C                     	;# 
  1011  019C                     	;# 
  1012  019D                     	;# 
  1013  019E                     	;# 
  1014  019F                     	;# 
  1015  020D                     	;# 
  1016  0210                     	;# 
  1017  0211                     	;# 
  1018  0211                     	;# 
  1019  0212                     	;# 
  1020  0212                     	;# 
  1021  0213                     	;# 
  1022  0213                     	;# 
  1023  0214                     	;# 
  1024  0214                     	;# 
  1025  0215                     	;# 
  1026  0215                     	;# 
  1027  0215                     	;# 
  1028  0216                     	;# 
  1029  0216                     	;# 
  1030  0217                     	;# 
  1031  0217                     	;# 
  1032  0291                     	;# 
  1033  0291                     	;# 
  1034  0292                     	;# 
  1035  0293                     	;# 
  1036  0298                     	;# 
  1037  0298                     	;# 
  1038  0299                     	;# 
  1039  029A                     	;# 
  1040  0394                     	;# 
  1041  0395                     	;# 
  1042  0396                     	;# 
  1043  0FE4                     	;# 
  1044  0FE5                     	;# 
  1045  0FE6                     	;# 
  1046  0FE7                     	;# 
  1047  0FE8                     	;# 
  1048  0FE9                     	;# 
  1049  0FEA                     	;# 
  1050  0FEB                     	;# 
  1051  0FED                     	;# 
  1052  0FEE                     	;# 
  1053  0FEF                     	;# 
  1054  0000                     	;# 
  1055  0001                     	;# 
  1056  0002                     	;# 
  1057  0003                     	;# 
  1058  0004                     	;# 
  1059  0005                     	;# 
  1060  0006                     	;# 
  1061  0007                     	;# 
  1062  0008                     	;# 
  1063  0009                     	;# 
  1064  000A                     	;# 
  1065  000B                     	;# 
  1066  000C                     	;# 
  1067  000D                     	;# 
  1068  000E                     	;# 
  1069  0010                     	;# 
  1070  0011                     	;# 
  1071  0012                     	;# 
  1072  0015                     	;# 
  1073  0016                     	;# 
  1074  0016                     	;# 
  1075  0017                     	;# 
  1076  0018                     	;# 
  1077  0019                     	;# 
  1078  001A                     	;# 
  1079  001B                     	;# 
  1080  001C                     	;# 
  1081  008C                     	;# 
  1082  008D                     	;# 
  1083  008E                     	;# 
  1084  0090                     	;# 
  1085  0091                     	;# 
  1086  0092                     	;# 
  1087  0095                     	;# 
  1088  0096                     	;# 
  1089  0097                     	;# 
  1090  0099                     	;# 
  1091  009A                     	;# 
  1092  009B                     	;# 
  1093  009B                     	;# 
  1094  009C                     	;# 
  1095  009D                     	;# 
  1096  009E                     	;# 
  1097  010C                     	;# 
  1098  010D                     	;# 
  1099  010E                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  011D                     	;# 
  1103  018C                     	;# 
  1104  018D                     	;# 
  1105  018E                     	;# 
  1106  0191                     	;# 
  1107  0191                     	;# 
  1108  0192                     	;# 
  1109  0193                     	;# 
  1110  0193                     	;# 
  1111  0194                     	;# 
  1112  0195                     	;# 
  1113  0196                     	;# 
  1114  0197                     	;# 
  1115  0199                     	;# 
  1116  019A                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019B                     	;# 
  1120  019B                     	;# 
  1121  019C                     	;# 
  1122  019C                     	;# 
  1123  019D                     	;# 
  1124  019E                     	;# 
  1125  019F                     	;# 
  1126  020D                     	;# 
  1127  0210                     	;# 
  1128  0211                     	;# 
  1129  0211                     	;# 
  1130  0212                     	;# 
  1131  0212                     	;# 
  1132  0213                     	;# 
  1133  0213                     	;# 
  1134  0214                     	;# 
  1135  0214                     	;# 
  1136  0215                     	;# 
  1137  0215                     	;# 
  1138  0215                     	;# 
  1139  0216                     	;# 
  1140  0216                     	;# 
  1141  0217                     	;# 
  1142  0217                     	;# 
  1143  0291                     	;# 
  1144  0291                     	;# 
  1145  0292                     	;# 
  1146  0293                     	;# 
  1147  0298                     	;# 
  1148  0298                     	;# 
  1149  0299                     	;# 
  1150  029A                     	;# 
  1151  0394                     	;# 
  1152  0395                     	;# 
  1153  0396                     	;# 
  1154  0FE4                     	;# 
  1155  0FE5                     	;# 
  1156  0FE6                     	;# 
  1157  0FE7                     	;# 
  1158  0FE8                     	;# 
  1159  0FE9                     	;# 
  1160  0FEA                     	;# 
  1161  0FEB                     	;# 
  1162  0FED                     	;# 
  1163  0FEE                     	;# 
  1164  0FEF                     	;# 
  1165  0000                     	;# 
  1166  0001                     	;# 
  1167  0002                     	;# 
  1168  0003                     	;# 
  1169  0004                     	;# 
  1170  0005                     	;# 
  1171  0006                     	;# 
  1172  0007                     	;# 
  1173  0008                     	;# 
  1174  0009                     	;# 
  1175  000A                     	;# 
  1176  000B                     	;# 
  1177  000C                     	;# 
  1178  000D                     	;# 
  1179  000E                     	;# 
  1180  0010                     	;# 
  1181  0011                     	;# 
  1182  0012                     	;# 
  1183  0015                     	;# 
  1184  0016                     	;# 
  1185  0016                     	;# 
  1186  0017                     	;# 
  1187  0018                     	;# 
  1188  0019                     	;# 
  1189  001A                     	;# 
  1190  001B                     	;# 
  1191  001C                     	;# 
  1192  008C                     	;# 
  1193  008D                     	;# 
  1194  008E                     	;# 
  1195  0090                     	;# 
  1196  0091                     	;# 
  1197  0092                     	;# 
  1198  0095                     	;# 
  1199  0096                     	;# 
  1200  0097                     	;# 
  1201  0099                     	;# 
  1202  009A                     	;# 
  1203  009B                     	;# 
  1204  009B                     	;# 
  1205  009C                     	;# 
  1206  009D                     	;# 
  1207  009E                     	;# 
  1208  010C                     	;# 
  1209  010D                     	;# 
  1210  010E                     	;# 
  1211  0116                     	;# 
  1212  0117                     	;# 
  1213  011D                     	;# 
  1214  018C                     	;# 
  1215  018D                     	;# 
  1216  018E                     	;# 
  1217  0191                     	;# 
  1218  0191                     	;# 
  1219  0192                     	;# 
  1220  0193                     	;# 
  1221  0193                     	;# 
  1222  0194                     	;# 
  1223  0195                     	;# 
  1224  0196                     	;# 
  1225  0197                     	;# 
  1226  0199                     	;# 
  1227  019A                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019B                     	;# 
  1231  019B                     	;# 
  1232  019C                     	;# 
  1233  019C                     	;# 
  1234  019D                     	;# 
  1235  019E                     	;# 
  1236  019F                     	;# 
  1237  020D                     	;# 
  1238  0210                     	;# 
  1239  0211                     	;# 
  1240  0211                     	;# 
  1241  0212                     	;# 
  1242  0212                     	;# 
  1243  0213                     	;# 
  1244  0213                     	;# 
  1245  0214                     	;# 
  1246  0214                     	;# 
  1247  0215                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0216                     	;# 
  1251  0216                     	;# 
  1252  0217                     	;# 
  1253  0217                     	;# 
  1254  0291                     	;# 
  1255  0291                     	;# 
  1256  0292                     	;# 
  1257  0293                     	;# 
  1258  0298                     	;# 
  1259  0298                     	;# 
  1260  0299                     	;# 
  1261  029A                     	;# 
  1262  0394                     	;# 
  1263  0395                     	;# 
  1264  0396                     	;# 
  1265  0FE4                     	;# 
  1266  0FE5                     	;# 
  1267  0FE6                     	;# 
  1268  0FE7                     	;# 
  1269  0FE8                     	;# 
  1270  0FE9                     	;# 
  1271  0FEA                     	;# 
  1272  0FEB                     	;# 
  1273  0FED                     	;# 
  1274  0FEE                     	;# 
  1275  0FEF                     	;# 
  1276  0000                     	;# 
  1277  0001                     	;# 
  1278  0002                     	;# 
  1279  0003                     	;# 
  1280  0004                     	;# 
  1281  0005                     	;# 
  1282  0006                     	;# 
  1283  0007                     	;# 
  1284  0008                     	;# 
  1285  0009                     	;# 
  1286  000A                     	;# 
  1287  000B                     	;# 
  1288  000C                     	;# 
  1289  000D                     	;# 
  1290  000E                     	;# 
  1291  0010                     	;# 
  1292  0011                     	;# 
  1293  0012                     	;# 
  1294  0015                     	;# 
  1295  0016                     	;# 
  1296  0016                     	;# 
  1297  0017                     	;# 
  1298  0018                     	;# 
  1299  0019                     	;# 
  1300  001A                     	;# 
  1301  001B                     	;# 
  1302  001C                     	;# 
  1303  008C                     	;# 
  1304  008D                     	;# 
  1305  008E                     	;# 
  1306  0090                     	;# 
  1307  0091                     	;# 
  1308  0092                     	;# 
  1309  0095                     	;# 
  1310  0096                     	;# 
  1311  0097                     	;# 
  1312  0099                     	;# 
  1313  009A                     	;# 
  1314  009B                     	;# 
  1315  009B                     	;# 
  1316  009C                     	;# 
  1317  009D                     	;# 
  1318  009E                     	;# 
  1319  010C                     	;# 
  1320  010D                     	;# 
  1321  010E                     	;# 
  1322  0116                     	;# 
  1323  0117                     	;# 
  1324  011D                     	;# 
  1325  018C                     	;# 
  1326  018D                     	;# 
  1327  018E                     	;# 
  1328  0191                     	;# 
  1329  0191                     	;# 
  1330  0192                     	;# 
  1331  0193                     	;# 
  1332  0193                     	;# 
  1333  0194                     	;# 
  1334  0195                     	;# 
  1335  0196                     	;# 
  1336  0197                     	;# 
  1337  0199                     	;# 
  1338  019A                     	;# 
  1339  019B                     	;# 
  1340  019B                     	;# 
  1341  019B                     	;# 
  1342  019B                     	;# 
  1343  019C                     	;# 
  1344  019C                     	;# 
  1345  019D                     	;# 
  1346  019E                     	;# 
  1347  019F                     	;# 
  1348  020D                     	;# 
  1349  0210                     	;# 
  1350  0211                     	;# 
  1351  0211                     	;# 
  1352  0212                     	;# 
  1353  0212                     	;# 
  1354  0213                     	;# 
  1355  0213                     	;# 
  1356  0214                     	;# 
  1357  0214                     	;# 
  1358  0215                     	;# 
  1359  0215                     	;# 
  1360  0215                     	;# 
  1361  0216                     	;# 
  1362  0216                     	;# 
  1363  0217                     	;# 
  1364  0217                     	;# 
  1365  0291                     	;# 
  1366  0291                     	;# 
  1367  0292                     	;# 
  1368  0293                     	;# 
  1369  0298                     	;# 
  1370  0298                     	;# 
  1371  0299                     	;# 
  1372  029A                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  0FE4                     	;# 
  1377  0FE5                     	;# 
  1378  0FE6                     	;# 
  1379  0FE7                     	;# 
  1380  0FE8                     	;# 
  1381  0FE9                     	;# 
  1382  0FEA                     	;# 
  1383  0FEB                     	;# 
  1384  0FED                     	;# 
  1385  0FEE                     	;# 
  1386  0FEF                     	;# 
  1387  0000                     	;# 
  1388  0001                     	;# 
  1389  0002                     	;# 
  1390  0003                     	;# 
  1391  0004                     	;# 
  1392  0005                     	;# 
  1393  0006                     	;# 
  1394  0007                     	;# 
  1395  0008                     	;# 
  1396  0009                     	;# 
  1397  000A                     	;# 
  1398  000B                     	;# 
  1399  000C                     	;# 
  1400  000D                     	;# 
  1401  000E                     	;# 
  1402  0010                     	;# 
  1403  0011                     	;# 
  1404  0012                     	;# 
  1405  0015                     	;# 
  1406  0016                     	;# 
  1407  0016                     	;# 
  1408  0017                     	;# 
  1409  0018                     	;# 
  1410  0019                     	;# 
  1411  001A                     	;# 
  1412  001B                     	;# 
  1413  001C                     	;# 
  1414  008C                     	;# 
  1415  008D                     	;# 
  1416  008E                     	;# 
  1417  0090                     	;# 
  1418  0091                     	;# 
  1419  0092                     	;# 
  1420  0095                     	;# 
  1421  0096                     	;# 
  1422  0097                     	;# 
  1423  0099                     	;# 
  1424  009A                     	;# 
  1425  009B                     	;# 
  1426  009B                     	;# 
  1427  009C                     	;# 
  1428  009D                     	;# 
  1429  009E                     	;# 
  1430  010C                     	;# 
  1431  010D                     	;# 
  1432  010E                     	;# 
  1433  0116                     	;# 
  1434  0117                     	;# 
  1435  011D                     	;# 
  1436  018C                     	;# 
  1437  018D                     	;# 
  1438  018E                     	;# 
  1439  0191                     	;# 
  1440  0191                     	;# 
  1441  0192                     	;# 
  1442  0193                     	;# 
  1443  0193                     	;# 
  1444  0194                     	;# 
  1445  0195                     	;# 
  1446  0196                     	;# 
  1447  0197                     	;# 
  1448  0199                     	;# 
  1449  019A                     	;# 
  1450  019B                     	;# 
  1451  019B                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019C                     	;# 
  1455  019C                     	;# 
  1456  019D                     	;# 
  1457  019E                     	;# 
  1458  019F                     	;# 
  1459  020D                     	;# 
  1460  0210                     	;# 
  1461  0211                     	;# 
  1462  0211                     	;# 
  1463  0212                     	;# 
  1464  0212                     	;# 
  1465  0213                     	;# 
  1466  0213                     	;# 
  1467  0214                     	;# 
  1468  0214                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0215                     	;# 
  1472  0216                     	;# 
  1473  0216                     	;# 
  1474  0217                     	;# 
  1475  0217                     	;# 
  1476  0291                     	;# 
  1477  0291                     	;# 
  1478  0292                     	;# 
  1479  0293                     	;# 
  1480  0298                     	;# 
  1481  0298                     	;# 
  1482  0299                     	;# 
  1483  029A                     	;# 
  1484  0394                     	;# 
  1485  0395                     	;# 
  1486  0396                     	;# 
  1487  0FE4                     	;# 
  1488  0FE5                     	;# 
  1489  0FE6                     	;# 
  1490  0FE7                     	;# 
  1491  0FE8                     	;# 
  1492  0FE9                     	;# 
  1493  0FEA                     	;# 
  1494  0FEB                     	;# 
  1495  0FED                     	;# 
  1496  0FEE                     	;# 
  1497  0FEF                     	;# 
  1498  0000                     	;# 
  1499  0001                     	;# 
  1500  0002                     	;# 
  1501  0003                     	;# 
  1502  0004                     	;# 
  1503  0005                     	;# 
  1504  0006                     	;# 
  1505  0007                     	;# 
  1506  0008                     	;# 
  1507  0009                     	;# 
  1508  000A                     	;# 
  1509  000B                     	;# 
  1510  000C                     	;# 
  1511  000D                     	;# 
  1512  000E                     	;# 
  1513  0010                     	;# 
  1514  0011                     	;# 
  1515  0012                     	;# 
  1516  0015                     	;# 
  1517  0016                     	;# 
  1518  0016                     	;# 
  1519  0017                     	;# 
  1520  0018                     	;# 
  1521  0019                     	;# 
  1522  001A                     	;# 
  1523  001B                     	;# 
  1524  001C                     	;# 
  1525  008C                     	;# 
  1526  008D                     	;# 
  1527  008E                     	;# 
  1528  0090                     	;# 
  1529  0091                     	;# 
  1530  0092                     	;# 
  1531  0095                     	;# 
  1532  0096                     	;# 
  1533  0097                     	;# 
  1534  0099                     	;# 
  1535  009A                     	;# 
  1536  009B                     	;# 
  1537  009B                     	;# 
  1538  009C                     	;# 
  1539  009D                     	;# 
  1540  009E                     	;# 
  1541  010C                     	;# 
  1542  010D                     	;# 
  1543  010E                     	;# 
  1544  0116                     	;# 
  1545  0117                     	;# 
  1546  011D                     	;# 
  1547  018C                     	;# 
  1548  018D                     	;# 
  1549  018E                     	;# 
  1550  0191                     	;# 
  1551  0191                     	;# 
  1552  0192                     	;# 
  1553  0193                     	;# 
  1554  0193                     	;# 
  1555  0194                     	;# 
  1556  0195                     	;# 
  1557  0196                     	;# 
  1558  0197                     	;# 
  1559  0199                     	;# 
  1560  019A                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019B                     	;# 
  1565  019C                     	;# 
  1566  019C                     	;# 
  1567  019D                     	;# 
  1568  019E                     	;# 
  1569  019F                     	;# 
  1570  020D                     	;# 
  1571  0210                     	;# 
  1572  0211                     	;# 
  1573  0211                     	;# 
  1574  0212                     	;# 
  1575  0212                     	;# 
  1576  0213                     	;# 
  1577  0213                     	;# 
  1578  0214                     	;# 
  1579  0214                     	;# 
  1580  0215                     	;# 
  1581  0215                     	;# 
  1582  0215                     	;# 
  1583  0216                     	;# 
  1584  0216                     	;# 
  1585  0217                     	;# 
  1586  0217                     	;# 
  1587  0291                     	;# 
  1588  0291                     	;# 
  1589  0292                     	;# 
  1590  0293                     	;# 
  1591  0298                     	;# 
  1592  0298                     	;# 
  1593  0299                     	;# 
  1594  029A                     	;# 
  1595  0394                     	;# 
  1596  0395                     	;# 
  1597  0396                     	;# 
  1598  0FE4                     	;# 
  1599  0FE5                     	;# 
  1600  0FE6                     	;# 
  1601  0FE7                     	;# 
  1602  0FE8                     	;# 
  1603  0FE9                     	;# 
  1604  0FEA                     	;# 
  1605  0FEB                     	;# 
  1606  0FED                     	;# 
  1607  0FEE                     	;# 
  1608  0FEF                     	;# 
  1609  0000                     	;# 
  1610  0001                     	;# 
  1611  0002                     	;# 
  1612  0003                     	;# 
  1613  0004                     	;# 
  1614  0005                     	;# 
  1615  0006                     	;# 
  1616  0007                     	;# 
  1617  0008                     	;# 
  1618  0009                     	;# 
  1619  000A                     	;# 
  1620  000B                     	;# 
  1621  000C                     	;# 
  1622  000D                     	;# 
  1623  000E                     	;# 
  1624  0010                     	;# 
  1625  0011                     	;# 
  1626  0012                     	;# 
  1627  0015                     	;# 
  1628  0016                     	;# 
  1629  0016                     	;# 
  1630  0017                     	;# 
  1631  0018                     	;# 
  1632  0019                     	;# 
  1633  001A                     	;# 
  1634  001B                     	;# 
  1635  001C                     	;# 
  1636  008C                     	;# 
  1637  008D                     	;# 
  1638  008E                     	;# 
  1639  0090                     	;# 
  1640  0091                     	;# 
  1641  0092                     	;# 
  1642  0095                     	;# 
  1643  0096                     	;# 
  1644  0097                     	;# 
  1645  0099                     	;# 
  1646  009A                     	;# 
  1647  009B                     	;# 
  1648  009B                     	;# 
  1649  009C                     	;# 
  1650  009D                     	;# 
  1651  009E                     	;# 
  1652  010C                     	;# 
  1653  010D                     	;# 
  1654  010E                     	;# 
  1655  0116                     	;# 
  1656  0117                     	;# 
  1657  011D                     	;# 
  1658  018C                     	;# 
  1659  018D                     	;# 
  1660  018E                     	;# 
  1661  0191                     	;# 
  1662  0191                     	;# 
  1663  0192                     	;# 
  1664  0193                     	;# 
  1665  0193                     	;# 
  1666  0194                     	;# 
  1667  0195                     	;# 
  1668  0196                     	;# 
  1669  0197                     	;# 
  1670  0199                     	;# 
  1671  019A                     	;# 
  1672  019B                     	;# 
  1673  019B                     	;# 
  1674  019B                     	;# 
  1675  019B                     	;# 
  1676  019C                     	;# 
  1677  019C                     	;# 
  1678  019D                     	;# 
  1679  019E                     	;# 
  1680  019F                     	;# 
  1681  020D                     	;# 
  1682  0210                     	;# 
  1683  0211                     	;# 
  1684  0211                     	;# 
  1685  0212                     	;# 
  1686  0212                     	;# 
  1687  0213                     	;# 
  1688  0213                     	;# 
  1689  0214                     	;# 
  1690  0214                     	;# 
  1691  0215                     	;# 
  1692  0215                     	;# 
  1693  0215                     	;# 
  1694  0216                     	;# 
  1695  0216                     	;# 
  1696  0217                     	;# 
  1697  0217                     	;# 
  1698  0291                     	;# 
  1699  0291                     	;# 
  1700  0292                     	;# 
  1701  0293                     	;# 
  1702  0298                     	;# 
  1703  0298                     	;# 
  1704  0299                     	;# 
  1705  029A                     	;# 
  1706  0394                     	;# 
  1707  0395                     	;# 
  1708  0396                     	;# 
  1709  0FE4                     	;# 
  1710  0FE5                     	;# 
  1711  0FE6                     	;# 
  1712  0FE7                     	;# 
  1713  0FE8                     	;# 
  1714  0FE9                     	;# 
  1715  0FEA                     	;# 
  1716  0FEB                     	;# 
  1717  0FED                     	;# 
  1718  0FEE                     	;# 
  1719  0FEF                     	;# 
  1720  0000                     	;# 
  1721  0001                     	;# 
  1722  0002                     	;# 
  1723  0003                     	;# 
  1724  0004                     	;# 
  1725  0005                     	;# 
  1726  0006                     	;# 
  1727  0007                     	;# 
  1728  0008                     	;# 
  1729  0009                     	;# 
  1730  000A                     	;# 
  1731  000B                     	;# 
  1732  000C                     	;# 
  1733  000D                     	;# 
  1734  000E                     	;# 
  1735  0010                     	;# 
  1736  0011                     	;# 
  1737  0012                     	;# 
  1738  0015                     	;# 
  1739  0016                     	;# 
  1740  0016                     	;# 
  1741  0017                     	;# 
  1742  0018                     	;# 
  1743  0019                     	;# 
  1744  001A                     	;# 
  1745  001B                     	;# 
  1746  001C                     	;# 
  1747  008C                     	;# 
  1748  008D                     	;# 
  1749  008E                     	;# 
  1750  0090                     	;# 
  1751  0091                     	;# 
  1752  0092                     	;# 
  1753  0095                     	;# 
  1754  0096                     	;# 
  1755  0097                     	;# 
  1756  0099                     	;# 
  1757  009A                     	;# 
  1758  009B                     	;# 
  1759  009B                     	;# 
  1760  009C                     	;# 
  1761  009D                     	;# 
  1762  009E                     	;# 
  1763  010C                     	;# 
  1764  010D                     	;# 
  1765  010E                     	;# 
  1766  0116                     	;# 
  1767  0117                     	;# 
  1768  011D                     	;# 
  1769  018C                     	;# 
  1770  018D                     	;# 
  1771  018E                     	;# 
  1772  0191                     	;# 
  1773  0191                     	;# 
  1774  0192                     	;# 
  1775  0193                     	;# 
  1776  0193                     	;# 
  1777  0194                     	;# 
  1778  0195                     	;# 
  1779  0196                     	;# 
  1780  0197                     	;# 
  1781  0199                     	;# 
  1782  019A                     	;# 
  1783  019B                     	;# 
  1784  019B                     	;# 
  1785  019B                     	;# 
  1786  019B                     	;# 
  1787  019C                     	;# 
  1788  019C                     	;# 
  1789  019D                     	;# 
  1790  019E                     	;# 
  1791  019F                     	;# 
  1792  020D                     	;# 
  1793  0210                     	;# 
  1794  0211                     	;# 
  1795  0211                     	;# 
  1796  0212                     	;# 
  1797  0212                     	;# 
  1798  0213                     	;# 
  1799  0213                     	;# 
  1800  0214                     	;# 
  1801  0214                     	;# 
  1802  0215                     	;# 
  1803  0215                     	;# 
  1804  0215                     	;# 
  1805  0216                     	;# 
  1806  0216                     	;# 
  1807  0217                     	;# 
  1808  0217                     	;# 
  1809  0291                     	;# 
  1810  0291                     	;# 
  1811  0292                     	;# 
  1812  0293                     	;# 
  1813  0298                     	;# 
  1814  0298                     	;# 
  1815  0299                     	;# 
  1816  029A                     	;# 
  1817  0394                     	;# 
  1818  0395                     	;# 
  1819  0396                     	;# 
  1820  0FE4                     	;# 
  1821  0FE5                     	;# 
  1822  0FE6                     	;# 
  1823  0FE7                     	;# 
  1824  0FE8                     	;# 
  1825  0FE9                     	;# 
  1826  0FEA                     	;# 
  1827  0FEB                     	;# 
  1828  0FED                     	;# 
  1829  0FEE                     	;# 
  1830  0FEF                     	;# 
  1831  0000                     	;# 
  1832  0001                     	;# 
  1833  0002                     	;# 
  1834  0003                     	;# 
  1835  0004                     	;# 
  1836  0005                     	;# 
  1837  0006                     	;# 
  1838  0007                     	;# 
  1839  0008                     	;# 
  1840  0009                     	;# 
  1841  000A                     	;# 
  1842  000B                     	;# 
  1843  000C                     	;# 
  1844  000D                     	;# 
  1845  000E                     	;# 
  1846  0010                     	;# 
  1847  0011                     	;# 
  1848  0012                     	;# 
  1849  0015                     	;# 
  1850  0016                     	;# 
  1851  0016                     	;# 
  1852  0017                     	;# 
  1853  0018                     	;# 
  1854  0019                     	;# 
  1855  001A                     	;# 
  1856  001B                     	;# 
  1857  001C                     	;# 
  1858  008C                     	;# 
  1859  008D                     	;# 
  1860  008E                     	;# 
  1861  0090                     	;# 
  1862  0091                     	;# 
  1863  0092                     	;# 
  1864  0095                     	;# 
  1865  0096                     	;# 
  1866  0097                     	;# 
  1867  0099                     	;# 
  1868  009A                     	;# 
  1869  009B                     	;# 
  1870  009B                     	;# 
  1871  009C                     	;# 
  1872  009D                     	;# 
  1873  009E                     	;# 
  1874  010C                     	;# 
  1875  010D                     	;# 
  1876  010E                     	;# 
  1877  0116                     	;# 
  1878  0117                     	;# 
  1879  011D                     	;# 
  1880  018C                     	;# 
  1881  018D                     	;# 
  1882  018E                     	;# 
  1883  0191                     	;# 
  1884  0191                     	;# 
  1885  0192                     	;# 
  1886  0193                     	;# 
  1887  0193                     	;# 
  1888  0194                     	;# 
  1889  0195                     	;# 
  1890  0196                     	;# 
  1891  0197                     	;# 
  1892  0199                     	;# 
  1893  019A                     	;# 
  1894  019B                     	;# 
  1895  019B                     	;# 
  1896  019B                     	;# 
  1897  019B                     	;# 
  1898  019C                     	;# 
  1899  019C                     	;# 
  1900  019D                     	;# 
  1901  019E                     	;# 
  1902  019F                     	;# 
  1903  020D                     	;# 
  1904  0210                     	;# 
  1905  0211                     	;# 
  1906  0211                     	;# 
  1907  0212                     	;# 
  1908  0212                     	;# 
  1909  0213                     	;# 
  1910  0213                     	;# 
  1911  0214                     	;# 
  1912  0214                     	;# 
  1913  0215                     	;# 
  1914  0215                     	;# 
  1915  0215                     	;# 
  1916  0216                     	;# 
  1917  0216                     	;# 
  1918  0217                     	;# 
  1919  0217                     	;# 
  1920  0291                     	;# 
  1921  0291                     	;# 
  1922  0292                     	;# 
  1923  0293                     	;# 
  1924  0298                     	;# 
  1925  0298                     	;# 
  1926  0299                     	;# 
  1927  029A                     	;# 
  1928  0394                     	;# 
  1929  0395                     	;# 
  1930  0396                     	;# 
  1931  0FE4                     	;# 
  1932  0FE5                     	;# 
  1933  0FE6                     	;# 
  1934  0FE7                     	;# 
  1935  0FE8                     	;# 
  1936  0FE9                     	;# 
  1937  0FEA                     	;# 
  1938  0FEB                     	;# 
  1939  0FED                     	;# 
  1940  0FEE                     	;# 
  1941  0FEF                     	;# 
  1942                           
  1943                           	psect	idataBANK3
  1944  27E0                     __pidataBANK3:	
  1945                           
  1946                           ;initializer for _VarProduct
  1947  27E0  3463               	retlw	99
  1948  27E1  3402               	retlw	2
  1949  27E2  3400               	retlw	0
  1950  27E3  3400               	retlw	0
  1951  27E4  3400               	retlw	0
  1952  27E5  3400               	retlw	0
  1953  27E6  3400               	retlw	0
  1954  27E7  3400               	retlw	0
  1955  27E8  3400               	retlw	0
  1956  27E9  3400               	retlw	0
  1957  27EA  3400               	retlw	0
  1958  27EB  3400               	retlw	0
  1959  27EC  34FF               	retlw	255
  1960  27ED  34FF               	retlw	255
  1961  27EE  34FF               	retlw	255
  1962  27EF  3400               	retlw	0
  1963  27F0  3400               	retlw	0
  1964  27F1  3400               	retlw	0
  1965  27F2  3400               	retlw	0
  1966  27F3  3400               	retlw	0
  1967  27F4  3402               	retlw	2
  1968  27F5  3400               	retlw	0
  1969  27F6  3400               	retlw	0
  1970  27F7  3400               	retlw	0
  1971  27F8  3400               	retlw	0
  1972  27F9  3400               	retlw	0
  1973  27FA  3400               	retlw	0
  1974  27FB  3400               	retlw	0
  1975  27FC  3400               	retlw	0
  1976  27FD  3400               	retlw	0
  1977  27FE  3400               	retlw	0
  1978  27FF  3400               	retlw	0
  1979                           
  1980                           	psect	stringtext
  1981  1800                     __pstringtext:	
  1982  1800                     _CC2500_registers_address:	
  1983  1800  3403               	retlw	3
  1984  1801  3416               	retlw	22
  1985  1802  3417               	retlw	23
  1986  1803  341E               	retlw	30
  1987  1804  341F               	retlw	31
  1988  1805  3420               	retlw	32
  1989  1806  342A               	retlw	42
  1990  1807  342B               	retlw	43
  1991  1808  340B               	retlw	11
  1992  1809  340C               	retlw	12
  1993  180A  340D               	retlw	13
  1994  180B  340E               	retlw	14
  1995  180C  340F               	retlw	15
  1996  180D  3410               	retlw	16
  1997  180E  3411               	retlw	17
  1998  180F  3412               	retlw	18
  1999  1810  3413               	retlw	19
  2000  1811  3414               	retlw	20
  2001  1812  340A               	retlw	10
  2002  1813  3415               	retlw	21
  2003  1814  3421               	retlw	33
  2004  1815  3422               	retlw	34
  2005  1816  3418               	retlw	24
  2006  1817  3419               	retlw	25
  2007  1818  341A               	retlw	26
  2008  1819  341B               	retlw	27
  2009  181A  341C               	retlw	28
  2010  181B  341D               	retlw	29
  2011  181C  3423               	retlw	35
  2012  181D  3424               	retlw	36
  2013  181E  3425               	retlw	37
  2014  181F  3426               	retlw	38
  2015  1820  3429               	retlw	41
  2016  1821  342C               	retlw	44
  2017  1822  342D               	retlw	45
  2018  1823  342E               	retlw	46
  2019  1824  3400               	retlw	0
  2020  1825  3401               	retlw	1
  2021  1826  3402               	retlw	2
  2022  1827  3407               	retlw	7
  2023  1828  3408               	retlw	8
  2024  1829  3409               	retlw	9
  2025  182A  3406               	retlw	6
  2026  182B  3404               	retlw	4
  2027  182C  3405               	retlw	5
  2028  182D  3427               	retlw	39
  2029  182E  3428               	retlw	40
  2030  182F                     __end_of_CC2500_registers_address:	
  2031  182F                     _CC2500_rfSettings:	
  2032  182F  3407               	retlw	7
  2033  1830  3407               	retlw	7
  2034  1831  3430               	retlw	48
  2035  1832  3487               	retlw	135
  2036  1833  346B               	retlw	107
  2037  1834  34F8               	retlw	248
  2038  1835  347F               	retlw	127
  2039  1836  343F               	retlw	63
  2040  1837  3409               	retlw	9
  2041  1838  3400               	retlw	0
  2042  1839  345C               	retlw	92
  2043  183A  34A7               	retlw	167
  2044  183B  3462               	retlw	98
  2045  183C  3486               	retlw	134
  2046  183D  3483               	retlw	131
  2047  183E  3403               	retlw	3
  2048  183F  3422               	retlw	34
  2049  1840  34F8               	retlw	248
  2050  1841  3400               	retlw	0
  2051  1842  3444               	retlw	68
  2052  1843  34B6               	retlw	182
  2053  1844  3410               	retlw	16
  2054  1845  3418               	retlw	24
  2055  1846  341D               	retlw	29
  2056  1847  341C               	retlw	28
  2057  1848  34C7               	retlw	199
  2058  1849  3400               	retlw	0
  2059  184A  34B2               	retlw	178
  2060  184B  34EA               	retlw	234
  2061  184C  340A               	retlw	10
  2062  184D  3400               	retlw	0
  2063  184E  3411               	retlw	17
  2064  184F  3459               	retlw	89
  2065  1850  3488               	retlw	136
  2066  1851  3431               	retlw	49
  2067  1852  340B               	retlw	11
  2068  1853  342F               	retlw	47
  2069  1854  342E               	retlw	46
  2070  1855  3406               	retlw	6
  2071  1856  3404               	retlw	4
  2072  1857  3405               	retlw	5
  2073  1858  3400               	retlw	0
  2074  1859  3430               	retlw	48
  2075  185A  34D3               	retlw	211
  2076  185B  3491               	retlw	145
  2077  185C  3441               	retlw	65
  2078  185D  3400               	retlw	0
  2079  185E                     __end_of_CC2500_rfSettings:	
  2080  185E                     _CC2500_patable_vaule:	
  2081  185E  34FE               	retlw	254
  2082  185F  34FE               	retlw	254
  2083  1860  34FE               	retlw	254
  2084  1861  34FE               	retlw	254
  2085  1862  34FE               	retlw	254
  2086  1863  34FE               	retlw	254
  2087  1864  34FE               	retlw	254
  2088  1865  34FE               	retlw	254
  2089  1866                     __end_of_CC2500_patable_vaule:	
  2090                           
  2091                           	psect	nvBANK0
  2092  006F                     __pnvBANK0:	
  2093  006F                     _Product:	
  2094  006F                     	ds	1
  2095                           
  2096                           	psect	nvBANK1
  2097  00E8                     __pnvBANK1:	
  2098  00E8                     _Memory:	
  2099  00E8                     	ds	1
  2100  00E9                     _TMain:	
  2101  00E9                     	ds	1
  2102  00EA                     _Timer0:	
  2103  00EA                     	ds	1
  2104  000C                     _PORTA	set	12
  2105  000D                     _PORTB	set	13
  2106  000E                     _PORTC	set	14
  2107  0015                     _TMR0	set	21
  2108  005F                     _GIE	set	95
  2109  005C                     _INTE	set	92
  2110  0059                     _INTF	set	89
  2111  005B                     _IOCIE	set	91
  2112  0058                     _IOCIF	set	88
  2113  005E                     _PEIE	set	94
  2114  0060                     _RA0	set	96
  2115  0063                     _RA3	set	99
  2116  0064                     _RA4	set	100
  2117  0066                     _RA6	set	102
  2118  0067                     _RA7	set	103
  2119  0068                     _RB0	set	104
  2120  0069                     _RB1	set	105
  2121  006A                     _RB2	set	106
  2122  006B                     _RB3	set	107
  2123  006C                     _RB4	set	108
  2124  006D                     _RB5	set	109
  2125  0070                     _RC0	set	112
  2126  0071                     _RC1	set	113
  2127  0072                     _RC2	set	114
  2128  0074                     _RC4	set	116
  2129  0075                     _RC5	set	117
  2130  0077                     _RC7	set	119
  2131  005D                     _TMR0IE	set	93
  2132  005A                     _TMR0IF	set	90
  2133  009D                     _ADCON0	set	157
  2134  009E                     _ADCON1	set	158
  2135  009C                     _ADRESH	set	156
  2136  009B                     _ADRESL	set	155
  2137  0095                     _OPTION_REG	set	149
  2138  0099                     _OSCCON	set	153
  2139  008C                     _TRISA	set	140
  2140  008D                     _TRISB	set	141
  2141  008E                     _TRISC	set	142
  2142  04E9                     _GO_nDONE	set	1257
  2143  0117                     _FVRCON	set	279
  2144  010C                     _LATA	set	268
  2145  010D                     _LATB	set	269
  2146  010E                     _LATC	set	270
  2147  018C                     _ANSELA	set	396
  2148  018D                     _ANSELB	set	397
  2149  018E                     _ANSELC	set	398
  2150  0192                     _PMADRH	set	402
  2151  0191                     _PMADRL	set	401
  2152  0196                     _PMCON2	set	406
  2153  0194                     _PMDATH	set	404
  2154  0193                     _PMDATL	set	403
  2155  0CAE                     _CFGS	set	3246
  2156  0CAC                     _FREE	set	3244
  2157  0CAD                     _LWLO	set	3245
  2158  0CA8                     _RD	set	3240
  2159  0CA9                     _WR	set	3241
  2160  0CAA                     _WREN	set	3242
  2161  1068                     _WPUB0	set	4200
  2162  1069                     _WPUB1	set	4201
  2163  106A                     _WPUB2	set	4202
  2164  0396                     _IOCBF	set	918
  2165  0395                     _IOCBN	set	917
  2166  0394                     _IOCBP	set	916
  2167  1CB2                     _IOCBF2	set	7346
  2168                           
  2169                           ; #config settings
  2170  0000                     
  2171                           	psect	cinit
  2172  0018                     start_initialization:	
  2173  0018                     __initialization:	
  2174                           
  2175                           ; Clear objects allocated to BITCOMMON
  2176  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2177                           
  2178                           ; Clear objects allocated to COMMON
  2179  0019  01F8               	clrf	__pbssCOMMON& (0+127)
  2180  001A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2181  001B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2182  001C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2183  001D  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2184  001E  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  2185                           
  2186                           ; Clear objects allocated to BANK0
  2187  001F  01EC               	clrf	__pbssBANK0& (0+127)
  2188  0020  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2189  0021  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2190                           
  2191                           ; Clear objects allocated to BANK1
  2192  0022  30A0               	movlw	low __pbssBANK1
  2193  0023  0084               	movwf	4
  2194  0024  3000               	movlw	high __pbssBANK1
  2195  0025  0085               	movwf	5
  2196  0026  3048               	movlw	72
  2197  0027  31A3  23EC  3180   	fcall	clear_ram0
  2198                           
  2199                           ; Clear objects allocated to BANK2
  2200  002A  3020               	movlw	low __pbssBANK2
  2201  002B  0084               	movwf	4
  2202  002C  3001               	movlw	high __pbssBANK2
  2203  002D  0085               	movwf	5
  2204  002E  304E               	movlw	78
  2205  002F  31A3  23EC  3180   	fcall	clear_ram0
  2206                           
  2207                           ; Clear objects allocated to BANK3
  2208  0032  30C0               	movlw	low __pbssBANK3
  2209  0033  0084               	movwf	4
  2210  0034  3001               	movlw	high __pbssBANK3
  2211  0035  0085               	movwf	5
  2212  0036  3010               	movlw	16
  2213  0037  31A3  23EC  3180   	fcall	clear_ram0
  2214                           
  2215                           ; Clear objects allocated to BANK4
  2216  003A  3020               	movlw	low __pbssBANK4
  2217  003B  0084               	movwf	4
  2218  003C  3002               	movlw	high __pbssBANK4
  2219  003D  0085               	movwf	5
  2220  003E  3025               	movlw	37
  2221  003F  31A3  23EC  3180   	fcall	clear_ram0
  2222                           
  2223                           ; Clear objects allocated to BANK5
  2224  0042  30A0               	movlw	low __pbssBANK5
  2225  0043  0084               	movwf	4
  2226  0044  3002               	movlw	high __pbssBANK5
  2227  0045  0085               	movwf	5
  2228  0046  3047               	movlw	71
  2229  0047  31A3  23EC  3180   	fcall	clear_ram0
  2230                           
  2231                           ; Initialize objects allocated to BANK3
  2232  004A  30E0               	movlw	low __pidataBANK3
  2233  004B  0084               	movwf	4
  2234  004C  30A7               	movlw	(high __pidataBANK3)| (0+128)
  2235  004D  0085               	movwf	5
  2236  004E  30A0               	movlw	low __pdataBANK3
  2237  004F  0086               	movwf	6
  2238  0050  3001               	movlw	high __pdataBANK3
  2239  0051  0087               	movwf	7
  2240  0052  3020               	movlw	32
  2241  0053  31A3  23E6         	fcall	init_ram
  2242  0055                     end_of_initialization:	
  2243                           ;End of C runtime variable initialization code
  2244                           
  2245  0055                     __end_of__initialization:	
  2246  0055  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2247  0056  0020               	movlb	0
  2248  0057  3193  2B54         	ljmp	_main	;jump to C main() function
  2249                           
  2250                           	psect	bitbssCOMMON
  2251  0380                     __pbitbssCOMMON:	
  2252  0380                     _CC2500_Enable:	
  2253  0380                     	ds	1
  2254  0381                     _Receive_GO:	
  2255  0381                     	ds	1
  2256  0382                     _Receive_OK:	
  2257  0382                     	ds	1
  2258  0383                     _RxStatus:	
  2259  0383                     	ds	1
  2260  0384                     _Transceive_GO:	
  2261  0384                     	ds	1
  2262  0385                     _Transceive_OK:	
  2263  0385                     	ds	1
  2264  0386                     _TxStatus:	
  2265  0386                     	ds	1
  2266                           
  2267                           	psect	bssCOMMON
  2268  0078                     __pbssCOMMON:	
  2269  0078                     _Buz:	
  2270  0078                     	ds	1
  2271  0079                     _DimmerLights11:	
  2272  0079                     	ds	1
  2273  007A                     _DimmerLights22:	
  2274  007A                     	ds	1
  2275  007B                     _PF:	
  2276  007B                     	ds	1
  2277  007C                     _RF:	
  2278  007C                     	ds	1
  2279  007D                     _Temp:	
  2280  007D                     	ds	1
  2281                           
  2282                           	psect	bssBANK0
  2283  006C                     __pbssBANK0:	
  2284  006C                     _DimmerLights:	
  2285  006C                     	ds	1
  2286  006D                     _Sw:	
  2287  006D                     	ds	1
  2288  006E                     _Load:	
  2289  006E                     	ds	1
  2290                           
  2291                           	psect	bssBANK1
  2292  00A0                     __pbssBANK1:	
  2293  00A0                     _RF_Data:	
  2294  00A0                     	ds	21
  2295  00B5                     _RF_Count:	
  2296  00B5                     	ds	2
  2297  00B7                     _CRC:	
  2298  00B7                     	ds	1
  2299  00B8                     _DelayOff:	
  2300  00B8                     	ds	1
  2301  00B9                     _Dimmer:	
  2302  00B9                     	ds	1
  2303  00BA                     _DimmerLightsIntr:	
  2304  00BA                     	ds	1
  2305  00BB                     _LED:	
  2306  00BB                     	ds	1
  2307  00BC                     _RFSW:	
  2308  00BC                     	ds	1
  2309  00BD                     _RSSI:	
  2310  00BD                     	ds	1
  2311  00BE                     _Rx_Length:	
  2312  00BE                     	ds	1
  2313  00BF                     _SPI0Buffer:	
  2314  00BF                     	ds	1
  2315  00C0                     _Tx_Length:	
  2316  00C0                     	ds	1
  2317  00C1                     _r_address:	
  2318  00C1                     	ds	1
  2319  00C2                     _r_data:	
  2320  00C2                     	ds	1
  2321  00C3                     _s_data:	
  2322  00C3                     	ds	1
  2323  00C4                     _VarTimer0:	
  2324  00C4                     	ds	7
  2325  00CB                     _DlySw1:	
  2326  00CB                     	ds	5
  2327  00D0                     _DlySw2:	
  2328  00D0                     	ds	5
  2329  00D5                     _VarErrLED:	
  2330  00D5                     	ds	4
  2331  00D9                     _VarLED1:	
  2332  00D9                     	ds	4
  2333  00DD                     _VarLED2:	
  2334  00DD                     	ds	4
  2335  00E1                     _Dimmer1:	
  2336  00E1                     	ds	3
  2337  00E4                     _RF1:	
  2338  00E4                     	ds	2
  2339  00E6                     _RFSW1:	
  2340  00E6                     	ds	1
  2341  00E7                     _RFSW2:	
  2342  00E7                     	ds	1
  2343                           
  2344                           	psect	bssBANK2
  2345  0120                     __pbssBANK2:	
  2346  0120                     _Temp1:	
  2347  0120                     	ds	14
  2348  012E                     _DimmerLights1:	
  2349  012E                     	ds	13
  2350  013B                     _DimmerLights2:	
  2351  013B                     	ds	13
  2352  0148                     _Buz1:	
  2353  0148                     	ds	12
  2354  0154                     _Sw1:	
  2355  0154                     	ds	9
  2356  015D                     _Sw2:	
  2357  015D                     	ds	9
  2358  0166                     _PF1:	
  2359  0166                     	ds	8
  2360                           
  2361                           	psect	bssBANK3
  2362  01C0                     __pbssBANK3:	
  2363  01C0                     _VarTMain:	
  2364  01C0                     	ds	16
  2365                           
  2366                           	psect	dataBANK3
  2367  01A0                     __pdataBANK3:	
  2368  01A0                     _VarProduct:	
  2369  01A0                     	ds	32
  2370                           
  2371                           	psect	bssBANK4
  2372  0220                     __pbssBANK4:	
  2373  0220                     _VarMemory:	
  2374  0220                     	ds	37
  2375                           
  2376                           	psect	bssBANK5
  2377  02A0                     __pbssBANK5:	
  2378  02A0                     _Load1:	
  2379  02A0                     	ds	71
  2380                           
  2381                           	psect	clrtext
  2382  23EC                     clear_ram0:	
  2383                           ;	Called with FSR0 containing the base address, and
  2384                           ;	WREG with the size to clear
  2385                           
  2386  23EC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2387  23ED                     clrloop0:	
  2388  23ED  0180               	clrf	0	;clear RAM location pointed to by FSR
  2389  23EE  3101               	addfsr 0,1
  2390  23EF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2391  23F0  2BED               	goto	clrloop0	;have we reached the end yet?
  2392  23F1  3400               	retlw	0	;all done for this memory range, return
  2393                           
  2394                           	psect	inittext
  2395  23E6                     init_ram:	
  2396  23E6  00FE               	movwf	126
  2397  23E7                     initloop:	
  2398  23E7  0012               	moviw fsr0++
  2399  23E8  001E               	movwi fsr1++
  2400  23E9  0BFE               	decfsz	126,f
  2401  23EA  2BE7               	goto	initloop
  2402  23EB  3400               	retlw	0
  2403                           
  2404                           	psect	cstackCOMMON
  2405  0071                     __pcstackCOMMON:	
  2406  0071                     ?_CC2500_WriteByte:	
  2407  0071                     ?_CC2500_WriteCommand:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0071                     ?_CC2500_ReadStatus:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0071                     ?_CC2500_ReadByte:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0071                     ?_CC2500_PowerRST:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0071                     ?_CC2500_InitSetREG:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0071                     ?_CC2500_InitPATable:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0071                     ?_CC2500_ClearTXFIFO:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0071                     ?_CC2500_ClearRXFIFO:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0071                     ?_CC2500_FrequencyCabr:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0071                     ?_CC2500_SIDLEMode:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0071                     ?_DlyOff_Initialization:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0071                     ?_DlyOff_Main:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0071                     ?_setTxData:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0071                     ?_setDimmerLights_Initialization:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0071                     ?_Dimmer_Initialization:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0071                     ?_setLoad_GO:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0071                     ?_setDimmerLights_Main:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0071                     ?_setDimmerLights_ERROR:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0071                     ?_setLoad_Count:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0071                     ?_setLED_Initialization:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0071                     ?_setLED_Main:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0071                     ?_MainT_Initialization:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0071                     ?_Mcu_Initialization:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0071                     ?_Flash_Memory_Initialization:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0071                     ?_Temp_Initialization:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0071                     ?_Load_Initialization:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0071                     ?_PowerFault_Initialization:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0071                     ?_Switch_Initialization:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0071                     ?_RF_Initialization:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0071                     ?_getLoad_AD:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0071                     ?_getTemp_AD:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0071                     ?_getPowerFault_AD:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0071                     ?_MainT:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0071                     ?_Flash_Memory_Main:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0071                     ?_Temp_Main:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0071                     ?_Load_Main:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0071                     ?_PowerFault_Main:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0071                     ?_Switch_Main:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0071                     ?_RF_Main:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0071                     ?_setTemp_Enable:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0071                     ?_setLoad_Enable:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0071                     ?_setSw_Enable:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0071                     ?_IO_Set:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0071                     ?_TMR0_Set:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0071                     ?_ADC_Set:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0071                     ?_INT_Set:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0071                     ?_IOC_Set:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0071                     ?_IOC_ISR:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0071                     ??_IOC_ISR:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0071                     ?_TMR0_ISR:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0071                     ?_INT_ISR:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0071                     ?_Flash_Memory_Write:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0071                     ?_Flash_Memory_Modify:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0071                     ?_setLoad_AH_AL_Restore:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0071                     ?_setLoad_Exceptions:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0071                     ?_setTemp_Initialization:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0071                     ?_setTemp_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0071                     ?_setOverTemp_Exceptions:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0071                     ?_setPowerFault_Initialization:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0071                     ?_setPowerFault_Main:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0071                     ?_setPowerFault_Exceptions:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0071                     ?_setRF_Initialization:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0071                     ?_setRF_Main:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0071                     ?_getRxData:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0071                     ?_RF_RxDisable:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0071                     ?_setLog_Code:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0071                     ?_setControl_Lights_Table:	
  2606                           ; 0 bytes @ 0x0
  2607                           
  2608  0071                     ?_setRFSW_Control:	
  2609                           ; 0 bytes @ 0x0
  2610                           
  2611  0071                     ?_setRFSW_AdjControl:	
  2612                           ; 0 bytes @ 0x0
  2613                           
  2614  0071                     ?_setRF_DimmerValue:	
  2615                           ; 0 bytes @ 0x0
  2616                           
  2617  0071                     ?_setSw_Initialization:	
  2618                           ; 0 bytes @ 0x0
  2619                           
  2620  0071                     ?_setSw_Main:	
  2621                           ; 0 bytes @ 0x0
  2622                           
  2623  0071                     ?_Sw_DimmerOnFunc:	
  2624                           ; 0 bytes @ 0x0
  2625                           
  2626  0071                     ?_Sw_DimmerAdjFunc:	
  2627                           ; 0 bytes @ 0x0
  2628                           
  2629  0071                     ?_Sw_DimmerOffFunc:	
  2630                           ; 0 bytes @ 0x0
  2631                           
  2632  0071                     ?_Buzzer_Initialization:	
  2633                           ; 0 bytes @ 0x0
  2634                           
  2635  0071                     ?_Buzzer_Main:	
  2636                           ; 0 bytes @ 0x0
  2637                           
  2638  0071                     ?_CC2500_TxData:	
  2639                           ; 0 bytes @ 0x0
  2640                           
  2641  0071                     ?_CC2500_RxData:	
  2642                           ; 0 bytes @ 0x0
  2643                           
  2644  0071                     ?_CC2500_PowerOnInitial:	
  2645                           ; 0 bytes @ 0x0
  2646                           
  2647  0071                     ?_DelayOffPointSelect:	
  2648                           ; 0 bytes @ 0x0
  2649                           
  2650  0071                     ?_DelayOff_Initialization:	
  2651                           ; 0 bytes @ 0x0
  2652                           
  2653  0071                     ?_DelayOff_Main:	
  2654                           ; 0 bytes @ 0x0
  2655                           
  2656  0071                     ?_DimmerLightsPointSelect:	
  2657                           ; 0 bytes @ 0x0
  2658                           
  2659  0071                     ?_DimmerLights_Initialization:	
  2660                           ; 0 bytes @ 0x0
  2661                           
  2662  0071                     ?_DimmerLights_Close:	
  2663                           ; 0 bytes @ 0x0
  2664                           
  2665  0071                     ?_DimmerLights_Main:	
  2666                           ; 0 bytes @ 0x0
  2667                           
  2668  0071                     ?_DimmerLights_Exceptions:	
  2669                           ; 0 bytes @ 0x0
  2670                           
  2671  0071                     ?_setDimmerLights_AdjRF:	
  2672                           ; 0 bytes @ 0x0
  2673                           
  2674  0071                     ?_LedPointSelect:	
  2675                           ; 0 bytes @ 0x0
  2676                           
  2677  0071                     ?_LED_Initialization:	
  2678                           ; 0 bytes @ 0x0
  2679                           
  2680  0071                     ?_LED_Main:	
  2681                           ; 0 bytes @ 0x0
  2682                           
  2683  0071                     ?_main:	
  2684                           ; 0 bytes @ 0x0
  2685                           
  2686  0071                     ?_ISR:	
  2687                           ; 0 bytes @ 0x0
  2688                           
  2689  0071                     ?_setDimmerReClock:	
  2690                           ; 0 bytes @ 0x0
  2691                           
  2692  0071                     ??_setDimmerReClock:	
  2693                           ; 0 bytes @ 0x0
  2694                           
  2695  0071                     ?_setINT_GO:	
  2696                           ; 0 bytes @ 0x0
  2697                           
  2698  0071                     ?_Flash_Memory_Unlock:	
  2699                           ; 0 bytes @ 0x0
  2700                           
  2701  0071                     ?_Flash_Memory_Erasing:	
  2702                           ; 0 bytes @ 0x0
  2703                           
  2704  0071                     ?_RfPointSelect:	
  2705                           ; 0 bytes @ 0x0
  2706                           
  2707  0071                     ?_RfSWPointSelect:	
  2708                           ; 0 bytes @ 0x0
  2709                           
  2710  0071                     ?_TouchPower:	
  2711                           ; 0 bytes @ 0x0
  2712                           
  2713  0071                     ?_SwPointSelect:	
  2714                           ; 0 bytes @ 0x0
  2715                           
  2716  0071                     ?i1_setLoad_StatusOff:	
  2717                           ; 0 bytes @ 0x0
  2718                           
  2719  0071                     ?i1_RfPointSelect:	
  2720                           ; 0 bytes @ 0x0
  2721                           
  2722  0071                     ??i1_RfPointSelect:	
  2723                           ; 0 bytes @ 0x0
  2724                           
  2725  0071                     ?_DelayTimejudge:	
  2726                           ; 0 bytes @ 0x0
  2727                           
  2728  0071                     ?_getPercentValue:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0071                     ?_getDimmerLights_StatusFlag:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0071                     ?_Flash_Memory_Read:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0071                     ?_getTemp_Safe:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0071                     ?_getPF_Safe:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0071                     ?_setPercentValue:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0071                     ?_getLoad_Safe:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0071                     setRF_Initialization@rf:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0071                     i1setLoad_StatusOff@command:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755                           
  2756                           ; 1 bytes @ 0x0
  2757  0071                     	ds	1
  2758  0072                     ??i1_setLoad_StatusOff:	
  2759  0072                     i1setLoad_StatusOff@lights:	
  2760                           ; 0 bytes @ 0x1
  2761                           
  2762  0072                     i1RfPointSelect@rf:	
  2763                           ; 1 bytes @ 0x1
  2764                           
  2765                           
  2766                           ; 1 bytes @ 0x1
  2767  0072                     	ds	1
  2768  0073                     ??_TMR0_ISR:	
  2769  0073                     ?_setRF_ReceiveGO:	
  2770                           ; 0 bytes @ 0x2
  2771                           
  2772  0073                     setRF_ReceiveGO@command:	
  2773                           ; 0 bytes @ 0x2
  2774                           
  2775                           
  2776                           ; 1 bytes @ 0x2
  2777  0073                     	ds	1
  2778  0074                     ??_setRF_ReceiveGO:	
  2779  0074                     setRF_ReceiveGO@rf:	
  2780                           ; 0 bytes @ 0x3
  2781                           
  2782                           
  2783                           ; 1 bytes @ 0x3
  2784  0074                     	ds	1
  2785  0075                     ??_INT_ISR:	
  2786                           
  2787                           ; 0 bytes @ 0x4
  2788  0075                     	ds	2
  2789  0077                     ??_ISR:	
  2790                           
  2791                           ; 0 bytes @ 0x6
  2792  0077                     	ds	1
  2793                           
  2794                           	psect	cstackBANK0
  2795  0020                     __pcstackBANK0:	
  2796  0020                     ??_CC2500_WriteByte:	
  2797  0020                     ??_CC2500_ReadByte:	
  2798                           ; 0 bytes @ 0x0
  2799                           
  2800  0020                     ?_DelayTime_1us:	
  2801                           ; 0 bytes @ 0x0
  2802                           
  2803  0020                     ?_setRF_DimmerLights:	
  2804                           ; 0 bytes @ 0x0
  2805                           
  2806  0020                     ??_DelayTimejudge:	
  2807                           ; 0 bytes @ 0x0
  2808                           
  2809  0020                     ??_Dimmer_Initialization:	
  2810                           ; 0 bytes @ 0x0
  2811                           
  2812  0020                     ??_getDimmerLights_StatusFlag:	
  2813                           ; 0 bytes @ 0x0
  2814                           
  2815  0020                     ??_setLoad_GO:	
  2816                           ; 0 bytes @ 0x0
  2817                           
  2818  0020                     ?_setLoad_StatusOff:	
  2819                           ; 0 bytes @ 0x0
  2820                           
  2821  0020                     ??_setLoad_Count:	
  2822                           ; 0 bytes @ 0x0
  2823                           
  2824  0020                     ?_setLoad_StatusOn:	
  2825                           ; 0 bytes @ 0x0
  2826                           
  2827  0020                     ??_MainT_Initialization:	
  2828                           ; 0 bytes @ 0x0
  2829                           
  2830  0020                     ??_setTemp_Enable:	
  2831                           ; 0 bytes @ 0x0
  2832                           
  2833  0020                     ??_setLoad_Enable:	
  2834                           ; 0 bytes @ 0x0
  2835                           
  2836  0020                     ??_IO_Set:	
  2837                           ; 0 bytes @ 0x0
  2838                           
  2839  0020                     ??_TMR0_Set:	
  2840                           ; 0 bytes @ 0x0
  2841                           
  2842  0020                     ??_ADC_Set:	
  2843                           ; 0 bytes @ 0x0
  2844                           
  2845  0020                     ??_INT_Set:	
  2846                           ; 0 bytes @ 0x0
  2847                           
  2848  0020                     ??_IOC_Set:	
  2849                           ; 0 bytes @ 0x0
  2850                           
  2851  0020                     ??_Flash_Memory_Read:	
  2852                           ; 0 bytes @ 0x0
  2853                           
  2854  0020                     ??_Flash_Memory_Write:	
  2855                           ; 0 bytes @ 0x0
  2856                           
  2857  0020                     ??_setLoad_AH_AL_Restore:	
  2858                           ; 0 bytes @ 0x0
  2859                           
  2860  0020                     ??_getTemp_Safe:	
  2861                           ; 0 bytes @ 0x0
  2862                           
  2863  0020                     ??_getPF_Safe:	
  2864                           ; 0 bytes @ 0x0
  2865                           
  2866  0020                     ??_setTemp_Initialization:	
  2867                           ; 0 bytes @ 0x0
  2868                           
  2869  0020                     ??_setPowerFault_Initialization:	
  2870                           ; 0 bytes @ 0x0
  2871                           
  2872  0020                     ??_setRF_Initialization:	
  2873                           ; 0 bytes @ 0x0
  2874                           
  2875  0020                     ??_Buzzer_Initialization:	
  2876                           ; 0 bytes @ 0x0
  2877                           
  2878  0020                     ??_Buzzer_Main:	
  2879                           ; 0 bytes @ 0x0
  2880                           
  2881  0020                     ??_DelayOffPointSelect:	
  2882                           ; 0 bytes @ 0x0
  2883                           
  2884  0020                     ??_DimmerLightsPointSelect:	
  2885                           ; 0 bytes @ 0x0
  2886                           
  2887  0020                     ??_LedPointSelect:	
  2888                           ; 0 bytes @ 0x0
  2889                           
  2890  0020                     ??_setINT_GO:	
  2891                           ; 0 bytes @ 0x0
  2892                           
  2893  0020                     ??_Flash_Memory_Unlock:	
  2894                           ; 0 bytes @ 0x0
  2895                           
  2896  0020                     ??_Flash_Memory_Erasing:	
  2897                           ; 0 bytes @ 0x0
  2898                           
  2899  0020                     ??_getLoad_Safe:	
  2900                           ; 0 bytes @ 0x0
  2901                           
  2902  0020                     ??_RfPointSelect:	
  2903                           ; 0 bytes @ 0x0
  2904                           
  2905  0020                     ??_RfSWPointSelect:	
  2906                           ; 0 bytes @ 0x0
  2907                           
  2908  0020                     ??_TouchPower:	
  2909                           ; 0 bytes @ 0x0
  2910                           
  2911  0020                     ??_SwPointSelect:	
  2912                           ; 0 bytes @ 0x0
  2913                           
  2914  0020                     ?_getAD:	
  2915                           ; 0 bytes @ 0x0
  2916                           
  2917  0020                     ?___wmul:	
  2918                           ; 2 bytes @ 0x0
  2919                           
  2920  0020                     ?___lwdiv:	
  2921                           ; 2 bytes @ 0x0
  2922                           
  2923  0020                     ?___ftpack:	
  2924                           ; 2 bytes @ 0x0
  2925                           
  2926  0020                     setINT_GO@command:	
  2927                           ; 3 bytes @ 0x0
  2928                           
  2929  0020                     getAD@adcon1:	
  2930                           ; 1 bytes @ 0x0
  2931                           
  2932  0020                     setLoad_Enable@command:	
  2933                           ; 1 bytes @ 0x0
  2934                           
  2935  0020                     setLoad_GO@command:	
  2936                           ; 1 bytes @ 0x0
  2937                           
  2938  0020                     setLoad_StatusOn@command:	
  2939                           ; 1 bytes @ 0x0
  2940                           
  2941  0020                     setLoad_StatusOff@command:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  0020                     setTemp_Enable@command:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  0020                     setRF_DimmerLights@on:	
  2948                           ; 1 bytes @ 0x0
  2949                           
  2950  0020                     DelayTime_1us@count:	
  2951                           ; 1 bytes @ 0x0
  2952                           
  2953  0020                     ___wmul@multiplier:	
  2954                           ; 2 bytes @ 0x0
  2955                           
  2956  0020                     ___lwdiv@divisor:	
  2957                           ; 2 bytes @ 0x0
  2958                           
  2959  0020                     ___ftpack@arg:	
  2960                           ; 2 bytes @ 0x0
  2961                           
  2962                           
  2963                           ; 3 bytes @ 0x0
  2964  0020                     	ds	1
  2965  0021                     ??_setRF_DimmerLights:	
  2966  0021                     ??_setLoad_StatusOff:	
  2967                           ; 0 bytes @ 0x1
  2968                           
  2969  0021                     ??_setLoad_StatusOn:	
  2970                           ; 0 bytes @ 0x1
  2971                           
  2972  0021                     ??_Mcu_Initialization:	
  2973                           ; 0 bytes @ 0x1
  2974                           
  2975  0021                     ??_Temp_Initialization:	
  2976                           ; 0 bytes @ 0x1
  2977                           
  2978  0021                     ??_PowerFault_Initialization:	
  2979                           ; 0 bytes @ 0x1
  2980                           
  2981  0021                     ??_RF_Initialization:	
  2982                           ; 0 bytes @ 0x1
  2983                           
  2984  0021                     CC2500_WriteByte@loop_a:	
  2985                           ; 0 bytes @ 0x1
  2986                           
  2987  0021                     CC2500_ReadByte@loop_b:	
  2988                           ; 1 bytes @ 0x1
  2989                           
  2990  0021                     DelayOffPointSelect@sw:	
  2991                           ; 1 bytes @ 0x1
  2992                           
  2993  0021                     DelayTimejudge@i:	
  2994                           ; 1 bytes @ 0x1
  2995                           
  2996  0021                     DimmerLightsPointSelect@lights:	
  2997                           ; 1 bytes @ 0x1
  2998                           
  2999  0021                     getDimmerLights_StatusFlag@Status:	
  3000                           ; 1 bytes @ 0x1
  3001                           
  3002  0021                     LedPointSelect@led:	
  3003                           ; 1 bytes @ 0x1
  3004                           
  3005  0021                     Flash_Memory_Read@i:	
  3006                           ; 1 bytes @ 0x1
  3007                           
  3008  0021                     Flash_Memory_Write@i:	
  3009                           ; 1 bytes @ 0x1
  3010                           
  3011  0021                     setLoad_Count@command:	
  3012                           ; 1 bytes @ 0x1
  3013                           
  3014  0021                     setLoad_StatusOn@lights:	
  3015                           ; 1 bytes @ 0x1
  3016                           
  3017  0021                     setLoad_StatusOff@lights:	
  3018                           ; 1 bytes @ 0x1
  3019                           
  3020  0021                     setLoad_AH_AL_Restore@i:	
  3021                           ; 1 bytes @ 0x1
  3022                           
  3023  0021                     RfPointSelect@rf:	
  3024                           ; 1 bytes @ 0x1
  3025                           
  3026  0021                     RfSWPointSelect@sw:	
  3027                           ; 1 bytes @ 0x1
  3028                           
  3029  0021                     SwPointSelect@sw:	
  3030                           ; 1 bytes @ 0x1
  3031                           
  3032                           
  3033                           ; 1 bytes @ 0x1
  3034  0021                     	ds	1
  3035  0022                     ??_CC2500_WriteCommand:	
  3036  0022                     ??_CC2500_ReadStatus:	
  3037                           ; 0 bytes @ 0x2
  3038                           
  3039  0022                     ?_setRF_RxStatus:	
  3040                           ; 0 bytes @ 0x2
  3041                           
  3042  0022                     ??_DelayTime_1us:	
  3043                           ; 0 bytes @ 0x2
  3044                           
  3045  0022                     ?_CC2500_WriteREG:	
  3046                           ; 0 bytes @ 0x2
  3047                           
  3048  0022                     ??_DlyOff_Initialization:	
  3049                           ; 0 bytes @ 0x2
  3050                           
  3051  0022                     ?_setSw_Status:	
  3052                           ; 0 bytes @ 0x2
  3053                           
  3054  0022                     ?_setRFSW_Status:	
  3055                           ; 0 bytes @ 0x2
  3056                           
  3057  0022                     ?_setDimmerLights_Trigger:	
  3058                           ; 0 bytes @ 0x2
  3059                           
  3060  0022                     ?_setDimmerLights_Switch:	
  3061                           ; 0 bytes @ 0x2
  3062                           
  3063  0022                     ??_setTxData:	
  3064                           ; 0 bytes @ 0x2
  3065                           
  3066  0022                     ?_setDimmerLights_TriggerERROR:	
  3067                           ; 0 bytes @ 0x2
  3068                           
  3069  0022                     ?_setLED:	
  3070                           ; 0 bytes @ 0x2
  3071                           
  3072  0022                     ??_setLED_Main:	
  3073                           ; 0 bytes @ 0x2
  3074                           
  3075  0022                     ??_Load_Initialization:	
  3076                           ; 0 bytes @ 0x2
  3077                           
  3078  0022                     ??_setSw_Enable:	
  3079                           ; 0 bytes @ 0x2
  3080                           
  3081  0022                     ?_setRF_Enable:	
  3082                           ; 0 bytes @ 0x2
  3083                           
  3084  0022                     ?_setDimmerLights_AdjGo:	
  3085                           ; 0 bytes @ 0x2
  3086                           
  3087  0022                     ?_setDimmerLights_TriggerAdj:	
  3088                           ; 0 bytes @ 0x2
  3089                           
  3090  0022                     ?_setDimmerLights_Clear:	
  3091                           ; 0 bytes @ 0x2
  3092                           
  3093  0022                     ?_setRF_Learn:	
  3094                           ; 0 bytes @ 0x2
  3095                           
  3096  0022                     CC2500_WriteREG@value:	
  3097                           ; 0 bytes @ 0x2
  3098                           
  3099  0022                     DlyOff_Initialization@sw:	
  3100                           ; 1 bytes @ 0x2
  3101                           
  3102  0022                     DelayTimejudge@value:	
  3103                           ; 1 bytes @ 0x2
  3104                           
  3105  0022                     _getDimmerLights_StatusFlag$1814:	
  3106                           ; 1 bytes @ 0x2
  3107                           
  3108  0022                     setDimmerLights_TriggerERROR@command:	
  3109                           ; 1 bytes @ 0x2
  3110                           
  3111  0022                     setDimmerLights_Switch@command:	
  3112                           ; 1 bytes @ 0x2
  3113                           
  3114  0022                     setDimmerLights_AdjGo@command:	
  3115                           ; 1 bytes @ 0x2
  3116                           
  3117  0022                     setDimmerLights_Trigger@command:	
  3118                           ; 1 bytes @ 0x2
  3119                           
  3120  0022                     setDimmerLights_TriggerAdj@command:	
  3121                           ; 1 bytes @ 0x2
  3122                           
  3123  0022                     setDimmerLights_Clear@command:	
  3124                           ; 1 bytes @ 0x2
  3125                           
  3126  0022                     setLED@command:	
  3127                           ; 1 bytes @ 0x2
  3128                           
  3129  0022                     Flash_Memory_Read@address:	
  3130                           ; 1 bytes @ 0x2
  3131                           
  3132  0022                     setRF_Learn@command:	
  3133                           ; 1 bytes @ 0x2
  3134                           
  3135  0022                     setRF_RxStatus@command:	
  3136                           ; 1 bytes @ 0x2
  3137                           
  3138  0022                     setRF_Enable@command:	
  3139                           ; 1 bytes @ 0x2
  3140                           
  3141  0022                     setRFSW_Status@command:	
  3142                           ; 1 bytes @ 0x2
  3143                           
  3144  0022                     setSw_Enable@command:	
  3145                           ; 1 bytes @ 0x2
  3146                           
  3147  0022                     setSw_Status@command:	
  3148                           ; 1 bytes @ 0x2
  3149                           
  3150  0022                     DelayTime_1us@i:	
  3151                           ; 1 bytes @ 0x2
  3152                           
  3153  0022                     ___wmul@multiplicand:	
  3154                           ; 2 bytes @ 0x2
  3155                           
  3156  0022                     ___lwdiv@dividend:	
  3157                           ; 2 bytes @ 0x2
  3158                           
  3159                           
  3160                           ; 2 bytes @ 0x2
  3161  0022                     	ds	1
  3162  0023                     ??_setRF_RxStatus:	
  3163  0023                     ??_CC2500_WriteREG:	
  3164                           ; 0 bytes @ 0x3
  3165                           
  3166  0023                     ??_setSw_Status:	
  3167                           ; 0 bytes @ 0x3
  3168                           
  3169  0023                     ??_setRFSW_Status:	
  3170                           ; 0 bytes @ 0x3
  3171                           
  3172  0023                     ??_setDimmerLights_Trigger:	
  3173                           ; 0 bytes @ 0x3
  3174                           
  3175  0023                     ??_setDimmerLights_Switch:	
  3176                           ; 0 bytes @ 0x3
  3177                           
  3178  0023                     ??_setDimmerLights_TriggerERROR:	
  3179                           ; 0 bytes @ 0x3
  3180                           
  3181  0023                     ??_setLED:	
  3182                           ; 0 bytes @ 0x3
  3183                           
  3184  0023                     ??_setRF_Enable:	
  3185                           ; 0 bytes @ 0x3
  3186                           
  3187  0023                     ??_DelayOff_Initialization:	
  3188                           ; 0 bytes @ 0x3
  3189                           
  3190  0023                     ?_setDelayOff_GO:	
  3191                           ; 0 bytes @ 0x3
  3192                           
  3193  0023                     ??_DimmerLights_Close:	
  3194                           ; 0 bytes @ 0x3
  3195                           
  3196  0023                     ??_setDimmerLights_AdjGo:	
  3197                           ; 0 bytes @ 0x3
  3198                           
  3199  0023                     ??_setDimmerLights_TriggerAdj:	
  3200                           ; 0 bytes @ 0x3
  3201                           
  3202  0023                     ??_setDimmerLights_Clear:	
  3203                           ; 0 bytes @ 0x3
  3204                           
  3205  0023                     ??_getAD:	
  3206                           ; 0 bytes @ 0x3
  3207                           
  3208  0023                     ??_setRF_Learn:	
  3209                           ; 0 bytes @ 0x3
  3210                           
  3211  0023                     CC2500_WriteCommand@command:	
  3212                           ; 0 bytes @ 0x3
  3213                           
  3214  0023                     CC2500_ReadStatus@status_addr:	
  3215                           ; 1 bytes @ 0x3
  3216                           
  3217  0023                     setDelayOff_GO@command:	
  3218                           ; 1 bytes @ 0x3
  3219                           
  3220  0023                     setDimmerLights_TriggerERROR@lights:	
  3221                           ; 1 bytes @ 0x3
  3222                           
  3223  0023                     setDimmerLights_Switch@lights:	
  3224                           ; 1 bytes @ 0x3
  3225                           
  3226  0023                     setDimmerLights_AdjGo@lights:	
  3227                           ; 1 bytes @ 0x3
  3228                           
  3229  0023                     setDimmerLights_Trigger@lights:	
  3230                           ; 1 bytes @ 0x3
  3231                           
  3232  0023                     setDimmerLights_TriggerAdj@lights:	
  3233                           ; 1 bytes @ 0x3
  3234                           
  3235  0023                     setDimmerLights_Clear@lights:	
  3236                           ; 1 bytes @ 0x3
  3237                           
  3238  0023                     setLED@led:	
  3239                           ; 1 bytes @ 0x3
  3240                           
  3241  0023                     getAD@adcon0:	
  3242                           ; 1 bytes @ 0x3
  3243                           
  3244  0023                     Flash_Memory_Read@ret:	
  3245                           ; 1 bytes @ 0x3
  3246                           
  3247  0023                     setRF_Learn@rf:	
  3248                           ; 1 bytes @ 0x3
  3249                           
  3250  0023                     setRF_RxStatus@rf:	
  3251                           ; 1 bytes @ 0x3
  3252                           
  3253  0023                     setTxData@rf:	
  3254                           ; 1 bytes @ 0x3
  3255                           
  3256  0023                     setRF_Enable@rf:	
  3257                           ; 1 bytes @ 0x3
  3258                           
  3259  0023                     setRFSW_Status@sw:	
  3260                           ; 1 bytes @ 0x3
  3261                           
  3262  0023                     setRF_DimmerLights@status:	
  3263                           ; 1 bytes @ 0x3
  3264                           
  3265  0023                     setSw_Status@sw:	
  3266                           ; 1 bytes @ 0x3
  3267                           
  3268  0023                     ___ftpack@exp:	
  3269                           ; 1 bytes @ 0x3
  3270                           
  3271                           
  3272                           ; 1 bytes @ 0x3
  3273  0023                     	ds	1
  3274  0024                     ??_CC2500_ClearTXFIFO:	
  3275  0024                     ??_CC2500_ClearRXFIFO:	
  3276                           ; 0 bytes @ 0x4
  3277                           
  3278  0024                     ??_CC2500_SIDLEMode:	
  3279                           ; 0 bytes @ 0x4
  3280                           
  3281  0024                     ?_setDimmerLights:	
  3282                           ; 0 bytes @ 0x4
  3283                           
  3284  0024                     ??_setDimmerLights_ERROR:	
  3285                           ; 0 bytes @ 0x4
  3286                           
  3287  0024                     ??_setLED_Initialization:	
  3288                           ; 0 bytes @ 0x4
  3289                           
  3290  0024                     ??_getLoad_AD:	
  3291                           ; 0 bytes @ 0x4
  3292                           
  3293  0024                     ??_getTemp_AD:	
  3294                           ; 0 bytes @ 0x4
  3295                           
  3296  0024                     ??_getPowerFault_AD:	
  3297                           ; 0 bytes @ 0x4
  3298                           
  3299  0024                     ??_Flash_Memory_Modify:	
  3300                           ; 0 bytes @ 0x4
  3301                           
  3302  0024                     ??_RF_RxDisable:	
  3303                           ; 0 bytes @ 0x4
  3304                           
  3305  0024                     ??_setSw_Initialization:	
  3306                           ; 0 bytes @ 0x4
  3307                           
  3308  0024                     ??_Sw_DimmerAdjFunc:	
  3309                           ; 0 bytes @ 0x4
  3310                           
  3311  0024                     ??_CC2500_TxData:	
  3312                           ; 0 bytes @ 0x4
  3313                           
  3314  0024                     ??_CC2500_RxData:	
  3315                           ; 0 bytes @ 0x4
  3316                           
  3317  0024                     ??___wmul:	
  3318                           ; 0 bytes @ 0x4
  3319                           
  3320  0024                     ??___lwdiv:	
  3321                           ; 0 bytes @ 0x4
  3322                           
  3323  0024                     CC2500_WriteREG@w_addr:	
  3324                           ; 0 bytes @ 0x4
  3325                           
  3326  0024                     setDelayOff_GO@value:	
  3327                           ; 1 bytes @ 0x4
  3328                           
  3329  0024                     setDimmerLights@status:	
  3330                           ; 1 bytes @ 0x4
  3331                           
  3332  0024                     setLED_Initialization@led:	
  3333                           ; 1 bytes @ 0x4
  3334                           
  3335  0024                     setLED_Main@led:	
  3336                           ; 1 bytes @ 0x4
  3337                           
  3338  0024                     RF_RxDisable@rf:	
  3339                           ; 1 bytes @ 0x4
  3340                           
  3341  0024                     setRF_DimmerLights@lights:	
  3342                           ; 1 bytes @ 0x4
  3343                           
  3344  0024                     setSw_Initialization@sw:	
  3345                           ; 1 bytes @ 0x4
  3346                           
  3347  0024                     Sw_DimmerAdjFunc@sw:	
  3348                           ; 1 bytes @ 0x4
  3349                           
  3350  0024                     ___ftpack@sign:	
  3351                           ; 1 bytes @ 0x4
  3352                           
  3353  0024                     DelayTime_1us@j:	
  3354                           ; 1 bytes @ 0x4
  3355                           
  3356  0024                     ___wmul@product:	
  3357                           ; 2 bytes @ 0x4
  3358                           
  3359                           
  3360                           ; 2 bytes @ 0x4
  3361  0024                     	ds	1
  3362  0025                     ??_CC2500_InitSetREG:	
  3363  0025                     ??_CC2500_InitPATable:	
  3364                           ; 0 bytes @ 0x5
  3365                           
  3366  0025                     ??_setDimmerLights:	
  3367                           ; 0 bytes @ 0x5
  3368                           
  3369  0025                     ?_setDimmerLights_Adj:	
  3370                           ; 0 bytes @ 0x5
  3371                           
  3372  0025                     ??_Switch_Initialization:	
  3373                           ; 0 bytes @ 0x5
  3374                           
  3375  0025                     ??___ftpack:	
  3376                           ; 0 bytes @ 0x5
  3377                           
  3378  0025                     ??_setDelayOff_GO:	
  3379                           ; 0 bytes @ 0x5
  3380                           
  3381  0025                     ??_LED_Initialization:	
  3382                           ; 0 bytes @ 0x5
  3383                           
  3384  0025                     ??_LED_Main:	
  3385                           ; 0 bytes @ 0x5
  3386                           
  3387  0025                     CC2500_TxData@loop_e:	
  3388                           ; 0 bytes @ 0x5
  3389                           
  3390  0025                     CC2500_RxData@loop_f:	
  3391                           ; 1 bytes @ 0x5
  3392                           
  3393  0025                     setDimmerLights_ERROR@lights:	
  3394                           ; 1 bytes @ 0x5
  3395                           
  3396  0025                     setDimmerLights_Adj@status:	
  3397                           ; 1 bytes @ 0x5
  3398                           
  3399  0025                     ___lwdiv@quotient:	
  3400                           ; 1 bytes @ 0x5
  3401                           
  3402                           
  3403                           ; 2 bytes @ 0x5
  3404  0025                     	ds	1
  3405  0026                     ??_CC2500_PowerRST:	
  3406  0026                     ??_CC2500_FrequencyCabr:	
  3407                           ; 0 bytes @ 0x6
  3408                           
  3409  0026                     ??_setDimmerLights_Adj:	
  3410                           ; 0 bytes @ 0x6
  3411                           
  3412  0026                     ?_setBuz:	
  3413                           ; 0 bytes @ 0x6
  3414                           
  3415  0026                     CC2500_InitSetREG@temp1:	
  3416                           ; 0 bytes @ 0x6
  3417                           
  3418  0026                     CC2500_InitPATable@temp:	
  3419                           ; 1 bytes @ 0x6
  3420                           
  3421  0026                     setDimmerLights@lights:	
  3422                           ; 1 bytes @ 0x6
  3423                           
  3424  0026                     Flash_Memory_Modify@i:	
  3425                           ; 1 bytes @ 0x6
  3426                           
  3427  0026                     setBuz@time:	
  3428                           ; 1 bytes @ 0x6
  3429                           
  3430                           
  3431                           ; 2 bytes @ 0x6
  3432  0026                     	ds	1
  3433  0027                     ??_Flash_Memory_Main:	
  3434  0027                     CC2500_InitSetREG@temp2:	
  3435                           ; 0 bytes @ 0x7
  3436                           
  3437  0027                     CC2500_InitPATable@loop_d:	
  3438                           ; 1 bytes @ 0x7
  3439                           
  3440  0027                     setDelayOff_GO@sw:	
  3441                           ; 1 bytes @ 0x7
  3442                           
  3443  0027                     setDimmerLights_Adj@lights:	
  3444                           ; 1 bytes @ 0x7
  3445                           
  3446  0027                     ___lwdiv@counter:	
  3447                           ; 1 bytes @ 0x7
  3448                           
  3449                           
  3450                           ; 1 bytes @ 0x7
  3451  0027                     	ds	1
  3452  0028                     ??_Sw_DimmerOffFunc:	
  3453  0028                     ??_setBuz:	
  3454                           ; 0 bytes @ 0x8
  3455                           
  3456  0028                     ?___awtoft:	
  3457                           ; 0 bytes @ 0x8
  3458                           
  3459  0028                     CC2500_InitSetREG@loop_c:	
  3460                           ; 3 bytes @ 0x8
  3461                           
  3462  0028                     getTemp_AD@channel:	
  3463                           ; 1 bytes @ 0x8
  3464                           
  3465  0028                     getPowerFault_AD@channel:	
  3466                           ; 1 bytes @ 0x8
  3467                           
  3468  0028                     ___awtoft@c:	
  3469                           ; 1 bytes @ 0x8
  3470                           
  3471                           
  3472                           ; 2 bytes @ 0x8
  3473  0028                     	ds	1
  3474  0029                     ??_CC2500_PowerOnInitial:	
  3475  0029                     setBuz@count:	
  3476                           ; 0 bytes @ 0x9
  3477                           
  3478  0029                     getLoad_AD@channel:	
  3479                           ; 1 bytes @ 0x9
  3480                           
  3481                           
  3482                           ; 1 bytes @ 0x9
  3483  0029                     	ds	1
  3484  002A                     ??_DlyOff_Main:	
  3485  002A                     ??_setDimmerLights_Main:	
  3486                           ; 0 bytes @ 0xA
  3487                           
  3488  002A                     ??_MainT:	
  3489                           ; 0 bytes @ 0xA
  3490                           
  3491  002A                     ??_setLog_Code:	
  3492                           ; 0 bytes @ 0xA
  3493                           
  3494  002A                     ??_setRFSW_Control:	
  3495                           ; 0 bytes @ 0xA
  3496                           
  3497  002A                     ??_Sw_DimmerOnFunc:	
  3498                           ; 0 bytes @ 0xA
  3499                           
  3500  002A                     ??_DimmerLights_Exceptions:	
  3501                           ; 0 bytes @ 0xA
  3502                           
  3503  002A                     setDimmerLights_Main@clear:	
  3504                           ; 0 bytes @ 0xA
  3505                           
  3506  002A                     DimmerLights_Exceptions@status:	
  3507                           ; 1 bytes @ 0xA
  3508                           
  3509  002A                     getLoad_AD@j:	
  3510                           ; 1 bytes @ 0xA
  3511                           
  3512  002A                     Sw_DimmerOnFunc@Idle:	
  3513                           ; 1 bytes @ 0xA
  3514                           
  3515  002A                     Sw_DimmerOffFunc@sw:	
  3516                           ; 1 bytes @ 0xA
  3517                           
  3518                           
  3519                           ; 1 bytes @ 0xA
  3520  002A                     	ds	1
  3521  002B                     ??_setLoad_Exceptions:	
  3522  002B                     ??_setOverTemp_Exceptions:	
  3523                           ; 0 bytes @ 0xB
  3524                           
  3525  002B                     ??_setPowerFault_Exceptions:	
  3526                           ; 0 bytes @ 0xB
  3527                           
  3528  002B                     ??___awtoft:	
  3529                           ; 0 bytes @ 0xB
  3530                           
  3531  002B                     setDimmerLights_Main@lights:	
  3532                           ; 0 bytes @ 0xB
  3533                           
  3534  002B                     getLoad_AD@i:	
  3535                           ; 1 bytes @ 0xB
  3536                           
  3537  002B                     setLog_Code@rf:	
  3538                           ; 1 bytes @ 0xB
  3539                           
  3540  002B                     setRFSW_Control@sw:	
  3541                           ; 1 bytes @ 0xB
  3542                           
  3543  002B                     Sw_DimmerOnFunc@sw:	
  3544                           ; 1 bytes @ 0xB
  3545                           
  3546                           
  3547                           ; 1 bytes @ 0xB
  3548  002B                     	ds	1
  3549  002C                     ??_setSw_Main:	
  3550  002C                     ??_DimmerLights_Main:	
  3551                           ; 0 bytes @ 0xC
  3552                           
  3553  002C                     DlyOff_Main@sw:	
  3554                           ; 0 bytes @ 0xC
  3555                           
  3556  002C                     setLoad_Exceptions@command:	
  3557                           ; 1 bytes @ 0xC
  3558                           
  3559  002C                     setOverTemp_Exceptions@command:	
  3560                           ; 1 bytes @ 0xC
  3561                           
  3562  002C                     setPowerFault_Exceptions@command:	
  3563                           ; 1 bytes @ 0xC
  3564                           
  3565                           
  3566                           ; 1 bytes @ 0xC
  3567  002C                     	ds	1
  3568  002D                     ??_Load_Main:	
  3569  002D                     ??_setTemp_Main:	
  3570                           ; 0 bytes @ 0xD
  3571                           
  3572  002D                     ??_setPowerFault_Main:	
  3573                           ; 0 bytes @ 0xD
  3574                           
  3575  002D                     ??_DelayOff_Main:	
  3576                           ; 0 bytes @ 0xD
  3577                           
  3578  002D                     ___awtoft@sign:	
  3579                           ; 0 bytes @ 0xD
  3580                           
  3581                           
  3582                           ; 1 bytes @ 0xD
  3583  002D                     	ds	1
  3584  002E                     ?___ftdiv:	
  3585  002E                     ?___ftmul:	
  3586                           ; 3 bytes @ 0xE
  3587                           
  3588  002E                     _setSw_Main$4703:	
  3589                           ; 3 bytes @ 0xE
  3590                           
  3591  002E                     ___ftdiv@f2:	
  3592                           ; 1 bytes @ 0xE
  3593                           
  3594  002E                     ___ftmul@f1:	
  3595                           ; 3 bytes @ 0xE
  3596                           
  3597                           
  3598                           ; 3 bytes @ 0xE
  3599  002E                     	ds	1
  3600  002F                     ??_PowerFault_Main:	
  3601  002F                     _setSw_Main$4704:	
  3602                           ; 0 bytes @ 0xF
  3603                           
  3604                           
  3605                           ; 1 bytes @ 0xF
  3606  002F                     	ds	1
  3607  0030                     ??_Temp_Main:	
  3608  0030                     setSw_Main@sw:	
  3609                           ; 0 bytes @ 0x10
  3610                           
  3611                           
  3612                           ; 1 bytes @ 0x10
  3613  0030                     	ds	1
  3614  0031                     ??_Switch_Main:	
  3615  0031                     Load_Main@i:	
  3616                           ; 0 bytes @ 0x11
  3617                           
  3618  0031                     ___ftdiv@f1:	
  3619                           ; 1 bytes @ 0x11
  3620                           
  3621  0031                     ___ftmul@f2:	
  3622                           ; 3 bytes @ 0x11
  3623                           
  3624                           
  3625                           ; 3 bytes @ 0x11
  3626  0031                     	ds	3
  3627  0034                     ??___ftdiv:	
  3628  0034                     ??___ftmul:	
  3629                           ; 0 bytes @ 0x14
  3630                           
  3631                           
  3632                           ; 0 bytes @ 0x14
  3633  0034                     	ds	4
  3634  0038                     ___ftdiv@cntr:	
  3635  0038                     ___ftmul@exp:	
  3636                           ; 1 bytes @ 0x18
  3637                           
  3638                           
  3639                           ; 1 bytes @ 0x18
  3640  0038                     	ds	1
  3641  0039                     ___ftdiv@f3:	
  3642  0039                     ___ftmul@f3_as_product:	
  3643                           ; 3 bytes @ 0x19
  3644                           
  3645                           
  3646                           ; 3 bytes @ 0x19
  3647  0039                     	ds	3
  3648  003C                     ___ftdiv@exp:	
  3649  003C                     ___ftmul@cntr:	
  3650                           ; 1 bytes @ 0x1C
  3651                           
  3652                           
  3653                           ; 1 bytes @ 0x1C
  3654  003C                     	ds	1
  3655  003D                     ___ftdiv@sign:	
  3656  003D                     ___ftmul@sign:	
  3657                           ; 1 bytes @ 0x1D
  3658                           
  3659                           
  3660                           ; 1 bytes @ 0x1D
  3661  003D                     	ds	1
  3662  003E                     ?___ftadd:	
  3663  003E                     ___ftadd@f1:	
  3664                           ; 3 bytes @ 0x1E
  3665                           
  3666                           
  3667                           ; 3 bytes @ 0x1E
  3668  003E                     	ds	3
  3669  0041                     ___ftadd@f2:	
  3670                           
  3671                           ; 3 bytes @ 0x21
  3672  0041                     	ds	3
  3673  0044                     ??___ftadd:	
  3674                           
  3675                           ; 0 bytes @ 0x24
  3676  0044                     	ds	4
  3677  0048                     ___ftadd@sign:	
  3678                           
  3679                           ; 1 bytes @ 0x28
  3680  0048                     	ds	1
  3681  0049                     ___ftadd@exp2:	
  3682                           
  3683                           ; 1 bytes @ 0x29
  3684  0049                     	ds	1
  3685  004A                     ___ftadd@exp1:	
  3686                           
  3687                           ; 1 bytes @ 0x2A
  3688  004A                     	ds	1
  3689  004B                     ?___fttol:	
  3690  004B                     ___fttol@f1:	
  3691                           ; 4 bytes @ 0x2B
  3692                           
  3693                           
  3694                           ; 3 bytes @ 0x2B
  3695  004B                     	ds	4
  3696  004F                     ??___fttol:	
  3697                           
  3698                           ; 0 bytes @ 0x2F
  3699  004F                     	ds	4
  3700  0053                     ___fttol@sign1:	
  3701                           
  3702                           ; 1 bytes @ 0x33
  3703  0053                     	ds	1
  3704  0054                     ___fttol@lval:	
  3705                           
  3706                           ; 4 bytes @ 0x34
  3707  0054                     	ds	4
  3708  0058                     ___fttol@exp1:	
  3709                           
  3710                           ; 1 bytes @ 0x38
  3711  0058                     	ds	1
  3712  0059                     ??_getPercentValue:	
  3713  0059                     ??_setPercentValue:	
  3714                           ; 0 bytes @ 0x39
  3715                           
  3716  0059                     setPercentValue@value:	
  3717                           ; 0 bytes @ 0x39
  3718                           
  3719                           
  3720                           ; 1 bytes @ 0x39
  3721  0059                     	ds	1
  3722  005A                     setPercentValue@i:	
  3723                           
  3724                           ; 3 bytes @ 0x3A
  3725  005A                     	ds	1
  3726  005B                     getPercentValue@value:	
  3727                           
  3728                           ; 1 bytes @ 0x3B
  3729  005B                     	ds	1
  3730  005C                     getPercentValue@i:	
  3731                           
  3732                           ; 3 bytes @ 0x3C
  3733  005C                     	ds	1
  3734  005D                     ??_Flash_Memory_Initialization:	
  3735                           
  3736                           ; 0 bytes @ 0x3D
  3737  005D                     	ds	1
  3738  005E                     Flash_Memory_Initialization@i:	
  3739                           
  3740                           ; 1 bytes @ 0x3E
  3741  005E                     	ds	1
  3742  005F                     ??_setDimmerLights_Initialization:	
  3743  005F                     ??_setDimmerLights_AdjRF:	
  3744                           ; 0 bytes @ 0x3F
  3745                           
  3746                           
  3747                           ; 0 bytes @ 0x3F
  3748  005F                     	ds	1
  3749  0060                     setDimmerLights_AdjRF@lights:	
  3750                           
  3751                           ; 1 bytes @ 0x40
  3752  0060                     	ds	1
  3753  0061                     ??_setRF_DimmerValue:	
  3754  0061                     setDimmerLights_Initialization@lights:	
  3755                           ; 0 bytes @ 0x41
  3756                           
  3757                           
  3758                           ; 1 bytes @ 0x41
  3759  0061                     	ds	1
  3760  0062                     ??_DimmerLights_Initialization:	
  3761                           
  3762                           ; 0 bytes @ 0x42
  3763  0062                     	ds	1
  3764  0063                     setRF_DimmerValue@lights:	
  3765                           
  3766                           ; 1 bytes @ 0x43
  3767  0063                     	ds	1
  3768  0064                     ??_setRFSW_AdjControl:	
  3769                           
  3770                           ; 0 bytes @ 0x44
  3771  0064                     	ds	2
  3772  0066                     setRFSW_AdjControl@sw:	
  3773                           
  3774                           ; 1 bytes @ 0x46
  3775  0066                     	ds	1
  3776  0067                     ??_setControl_Lights_Table:	
  3777  0067                     setControl_Lights_Table@rf:	
  3778                           ; 0 bytes @ 0x47
  3779                           
  3780                           
  3781                           ; 1 bytes @ 0x47
  3782  0067                     	ds	1
  3783  0068                     ??_getRxData:	
  3784  0068                     getRxData@rf:	
  3785                           ; 0 bytes @ 0x48
  3786                           
  3787                           
  3788                           ; 1 bytes @ 0x48
  3789  0068                     	ds	1
  3790  0069                     ??_setRF_Main:	
  3791                           
  3792                           ; 0 bytes @ 0x49
  3793  0069                     	ds	1
  3794  006A                     setRF_Main@rf:	
  3795                           
  3796                           ; 1 bytes @ 0x4A
  3797  006A                     	ds	1
  3798  006B                     _setRF_Main$4352:	
  3799                           
  3800                           ; 1 bytes @ 0x4B
  3801  006B                     	ds	1
  3802  006C                     ??_RF_Main:	
  3803  006C                     ??_main:	
  3804                           ; 0 bytes @ 0x4C
  3805                           
  3806                           
  3807                           	psect	maintext
  3808  1354                     __pmaintext:	
  3809                           ; 0 bytes @ 0x4C
  3810 ;;
  3811 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3812 ;;
  3813 ;; *************** function _main *****************
  3814 ;; Defined at:
  3815 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;		None               void
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 17F/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels required when called:   14
  3835 ;; This function calls:
  3836 ;;		_Buzzer_Initialization
  3837 ;;		_Buzzer_Main
  3838 ;;		_CC2500_PowerOnInitial
  3839 ;;		_DelayOff_Initialization
  3840 ;;		_DelayOff_Main
  3841 ;;		_DimmerLights_Initialization
  3842 ;;		_DimmerLights_Main
  3843 ;;		_Flash_Memory_Initialization
  3844 ;;		_Flash_Memory_Main
  3845 ;;		_LED_Initialization
  3846 ;;		_LED_Main
  3847 ;;		_Load_Initialization
  3848 ;;		_Load_Main
  3849 ;;		_MainT
  3850 ;;		_MainT_Initialization
  3851 ;;		_Mcu_Initialization
  3852 ;;		_PowerFault_Initialization
  3853 ;;		_PowerFault_Main
  3854 ;;		_RF_Initialization
  3855 ;;		_RF_Main
  3856 ;;		_Switch_Initialization
  3857 ;;		_Switch_Main
  3858 ;;		_Temp_Initialization
  3859 ;;		_Temp_Main
  3860 ;;		_getLoad_AD
  3861 ;;		_getPowerFault_AD
  3862 ;;		_getTemp_AD
  3863 ;; This function is called by:
  3864 ;;		Startup code after reset
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _main
  3870  1354                     _main:	
  3871                           
  3872                           ;main.c: 9: MainT_Initialization();
  3873                           
  3874                           ;incstack = 0
  3875                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3876  1354  31A4  2494  3193   	fcall	_MainT_Initialization
  3877                           
  3878                           ;main.c: 10: Mcu_Initialization();
  3879  1357  31A6  26BB  3193   	fcall	_Mcu_Initialization
  3880                           
  3881                           ;main.c: 11: Flash_Memory_Initialization();
  3882  135A  318C  24D3  3193   	fcall	_Flash_Memory_Initialization
  3883                           
  3884                           ;main.c: 12: LED_Initialization();
  3885  135D  31A4  24E5  3193   	fcall	_LED_Initialization
  3886                           
  3887                           ;main.c: 13: Buzzer_Initialization();
  3888  1360  31A4  2452  3193   	fcall	_Buzzer_Initialization
  3889                           
  3890                           ;main.c: 15: ;;
  3891                           ;main.c: 16: Temp_Initialization();
  3892  1363  31A3  23C9  3193   	fcall	_Temp_Initialization
  3893                           
  3894                           ;main.c: 17: Load_Initialization();
  3895  1366  31A4  24FD  3193   	fcall	_Load_Initialization
  3896                           
  3897                           ;main.c: 18: PowerFault_Initialization();
  3898  1369  31A3  23C3  3193   	fcall	_PowerFault_Initialization
  3899                           
  3900                           ;main.c: 19: DelayOff_Initialization();
  3901  136C  31A4  240E  3193   	fcall	_DelayOff_Initialization
  3902                           
  3903                           ;main.c: 21: DimmerLights_Initialization();
  3904  136F  31A6  2638  3193   	fcall	_DimmerLights_Initialization
  3905                           
  3906                           ;main.c: 22: ;;
  3907                           ;main.c: 23: ;;
  3908                           ;main.c: 24: ;;
  3909                           ;main.c: 26: Switch_Initialization();
  3910  1372  31A5  2524  3193   	fcall	_Switch_Initialization
  3911                           
  3912                           ;main.c: 27: RF_Initialization();
  3913  1375  31A3  23D8  3193   	fcall	_RF_Initialization
  3914                           
  3915                           ;main.c: 28: CC2500_PowerOnInitial();
  3916  1378  31A6  2623  3193   	fcall	_CC2500_PowerOnInitial
  3917  137B                     l9981:	
  3918                           ;main.c: 30: while(1)
  3919                           
  3920                           
  3921                           ;main.c: 31: {
  3922                           ;main.c: 32: if(TMain->PowerON)
  3923  137B  0021               	movlb	1	; select bank1
  3924  137C  0869               	movf	_TMain^(0+128),w
  3925  137D  0086               	movwf	6
  3926  137E  3001               	movlw	1	; select bank2/3
  3927  137F  0087               	movwf	7
  3928  1380  1C01               	btfss	1,0
  3929  1381  2B91               	goto	l9985
  3930                           
  3931                           ;main.c: 33: {
  3932                           ;main.c: 35: ;;
  3933                           ;main.c: 39: getLoad_AD(0x05);
  3934  1382  3005               	movlw	5
  3935  1383  3197  276A  3193   	fcall	_getLoad_AD
  3936                           
  3937                           ;main.c: 43: getTemp_AD(0x09);
  3938  1386  3009               	movlw	9
  3939  1387  3192  220B  3193   	fcall	_getTemp_AD
  3940                           
  3941                           ;main.c: 47: getPowerFault_AD(0x11);
  3942  138A  3011               	movlw	17
  3943  138B  319C  2445  3193   	fcall	_getPowerFault_AD
  3944                           
  3945                           ;main.c: 59: Buzzer_Main();
  3946  138E  3189  210F  3193   	fcall	_Buzzer_Main
  3947  1391                     l9985:	
  3948                           
  3949                           ;main.c: 61: }
  3950                           ;main.c: 63: if(TMain->T0_Timerout)
  3951  1391  0021               	movlb	1	; select bank1
  3952  1392  0869               	movf	_TMain^(0+128),w
  3953  1393  0086               	movwf	6
  3954  1394  3001               	movlw	1	; select bank2/3
  3955  1395  0087               	movwf	7
  3956  1396  1C81               	btfss	1,1
  3957  1397  2B7B               	goto	l9981
  3958                           
  3959                           ;main.c: 64: {
  3960                           ;main.c: 65: TMain->T0_Timerout = 0;
  3961  1398  0869               	movf	_TMain^(0+128),w
  3962  1399  0086               	movwf	6
  3963  139A  3001               	movlw	1	; select bank2/3
  3964  139B  0087               	movwf	7
  3965  139C  1081               	bcf	1,1
  3966                           
  3967                           ;main.c: 66: MainT();
  3968  139D  319E  26A8  3193   	fcall	_MainT
  3969                           
  3970                           ;main.c: 67: if(TMain->PowerON)
  3971  13A0  0021               	movlb	1	; select bank1
  3972  13A1  0869               	movf	_TMain^(0+128),w
  3973  13A2  0086               	movwf	6
  3974  13A3  3001               	movlw	1	; select bank2/3
  3975  13A4  0087               	movwf	7
  3976  13A5  1C01               	btfss	1,0
  3977  13A6  2B7B               	goto	l9981
  3978                           
  3979                           ;main.c: 68: {
  3980                           ;main.c: 69: Flash_Memory_Main();
  3981  13A7  319D  25D5  3193   	fcall	_Flash_Memory_Main
  3982                           
  3983                           ;main.c: 71: LED_Main();
  3984  13AA  31A4  24F1  3193   	fcall	_LED_Main
  3985                           
  3986                           ;main.c: 73: ;;
  3987                           ;main.c: 74: Temp_Main();
  3988  13AD  3187  27FD  3193   	fcall	_Temp_Main
  3989                           
  3990                           ;main.c: 75: Load_Main();
  3991  13B0  3183  23A4  3193   	fcall	_Load_Main
  3992                           
  3993                           ;main.c: 76: PowerFault_Main();
  3994  13B3  31A3  23C6  3193   	fcall	_PowerFault_Main
  3995                           
  3996                           ;main.c: 78: ;;
  3997                           ;main.c: 79: DimmerLights_Main();
  3998  13B6  31A4  247E  3193   	fcall	_DimmerLights_Main
  3999                           
  4000                           ;main.c: 80: Switch_Main();
  4001  13B9  31A4  242E  3193   	fcall	_Switch_Main
  4002                           
  4003                           ;main.c: 81: ;;
  4004                           ;main.c: 82: ;;
  4005                           ;main.c: 84: RF_Main();
  4006  13BC  31A3  23DC  3193   	fcall	_RF_Main
  4007                           
  4008                           ;main.c: 85: DelayOff_Main();
  4009  13BF  31A4  2416  3193   	fcall	_DelayOff_Main
  4010  13C2  2B7B               	goto	l9981
  4011  13C3                     __end_of_main:	
  4012                           
  4013                           	psect	text1
  4014  120B                     __ptext1:	
  4015 ;; *************** function _getTemp_AD *****************
  4016 ;; Defined at:
  4017 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  channel         1    wreg     unsigned char 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  channel         1    8[BANK0 ] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;		None               void
  4024 ;; Registers used:
  4025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;Total ram usage:        5 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    5
  4038 ;; This function calls:
  4039 ;;		_getAD
  4040 ;; This function is called by:
  4041 ;;		_main
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _getTemp_AD
  4047  120B                     _getTemp_AD:	
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4051                           ;getTemp_AD@channel stored from wreg
  4052  120B  0020               	movlb	0	; select bank0
  4053  120C  00A8               	movwf	getTemp_AD@channel
  4054                           
  4055                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  4056  120D  087D               	movf	_Temp,w
  4057  120E  0086               	movwf	6
  4058  120F  3001               	movlw	1	; select bank2/3
  4059  1210  0087               	movwf	7
  4060  1211  1D01               	btfss	1,2
  4061  1212  0008               	return
  4062                           
  4063                           ;OverTemperature_B1.c: 38: {
  4064                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  4065  1213  30F0               	movlw	240
  4066  1214  00A4               	movwf	??_getTemp_AD
  4067  1215  0824               	movf	??_getTemp_AD,w
  4068  1216  00A0               	movwf	getAD@adcon1
  4069  1217  0828               	movf	getTemp_AD@channel,w
  4070  1218  31A6  268E  3192   	fcall	_getAD
  4071  121B  087D               	movf	_Temp,w
  4072  121C  3E0A               	addlw	10
  4073  121D  0086               	movwf	6
  4074  121E  3001               	movlw	1	; select bank2/3
  4075  121F  0087               	movwf	7
  4076  1220  0020               	movlb	0	; select bank0
  4077  1221  0820               	movf	?_getAD,w
  4078  1222  3FC0               	movwi [0]fsr1
  4079  1223  0821               	movf	?_getAD+1,w
  4080  1224  3FC1               	movwi [1]fsr1
  4081                           
  4082                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  4083  1225  087D               	movf	_Temp,w
  4084  1226  3E0A               	addlw	10
  4085  1227  0086               	movwf	6
  4086  1228  3001               	movlw	1	; select bank2/3
  4087  1229  0087               	movwf	7
  4088  122A  3F40               	moviw [0]fsr1
  4089  122B  00A4               	movwf	??_getTemp_AD
  4090  122C  3F41               	moviw [1]fsr1
  4091  122D  00A5               	movwf	??_getTemp_AD+1
  4092  122E  087D               	movf	_Temp,w
  4093  122F  3E06               	addlw	6
  4094  1230  0086               	movwf	6
  4095  1231  3001               	movlw	1	; select bank2/3
  4096  1232  0087               	movwf	7
  4097  1233  3F40               	moviw [0]fsr1
  4098  1234  00A6               	movwf	??_getTemp_AD+2
  4099  1235  3F41               	moviw [1]fsr1
  4100  1236  00A7               	movwf	??_getTemp_AD+3
  4101  1237  0825               	movf	??_getTemp_AD+1,w
  4102  1238  0227               	subwf	??_getTemp_AD+3,w
  4103  1239  1D03               	skipz
  4104  123A  2A3D               	goto	u9875
  4105  123B  0824               	movf	??_getTemp_AD,w
  4106  123C  0226               	subwf	??_getTemp_AD+2,w
  4107  123D                     u9875:	
  4108  123D  1803               	skipnc
  4109  123E  2A4E               	goto	l9781
  4110                           
  4111                           ;OverTemperature_B1.c: 41: {
  4112                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  4113  123F  087D               	movf	_Temp,w
  4114  1240  3E0A               	addlw	10
  4115  1241  0086               	movwf	6
  4116  1242  3001               	movlw	1	; select bank2/3
  4117  1243  0087               	movwf	7
  4118  1244  087D               	movf	_Temp,w
  4119  1245  3E06               	addlw	6
  4120  1246  0084               	movwf	4
  4121  1247  3001               	movlw	1	; select bank2/3
  4122  1248  0085               	movwf	5
  4123  1249  3F40               	moviw [0]fsr1
  4124  124A  3F80               	movwi [0]fsr0
  4125  124B  3F41               	moviw [1]fsr1
  4126  124C  3F81               	movwi [1]fsr0
  4127                           
  4128                           ;OverTemperature_B1.c: 43: }
  4129  124D  0008               	return
  4130  124E                     l9781:	
  4131                           
  4132                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  4133  124E  087D               	movf	_Temp,w
  4134  124F  3E0A               	addlw	10
  4135  1250  0086               	movwf	6
  4136  1251  3001               	movlw	1	; select bank2/3
  4137  1252  0087               	movwf	7
  4138  1253  3F40               	moviw [0]fsr1
  4139  1254  00A4               	movwf	??_getTemp_AD
  4140  1255  3F41               	moviw [1]fsr1
  4141  1256  00A5               	movwf	??_getTemp_AD+1
  4142  1257  087D               	movf	_Temp,w
  4143  1258  3E08               	addlw	8
  4144  1259  0086               	movwf	6
  4145  125A  3001               	movlw	1	; select bank2/3
  4146  125B  0087               	movwf	7
  4147  125C  3F40               	moviw [0]fsr1
  4148  125D  00A6               	movwf	??_getTemp_AD+2
  4149  125E  3F41               	moviw [1]fsr1
  4150  125F  00A7               	movwf	??_getTemp_AD+3
  4151  1260  0825               	movf	??_getTemp_AD+1,w
  4152  1261  0227               	subwf	??_getTemp_AD+3,w
  4153  1262  1D03               	skipz
  4154  1263  2A66               	goto	u9885
  4155  1264  0824               	movf	??_getTemp_AD,w
  4156  1265  0226               	subwf	??_getTemp_AD+2,w
  4157  1266                     u9885:	
  4158  1266  1803               	skipnc
  4159  1267  0008               	return
  4160                           
  4161                           ;OverTemperature_B1.c: 45: {
  4162                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  4163  1268  087D               	movf	_Temp,w
  4164  1269  3E0A               	addlw	10
  4165  126A  0086               	movwf	6
  4166  126B  3001               	movlw	1	; select bank2/3
  4167  126C  0087               	movwf	7
  4168  126D  087D               	movf	_Temp,w
  4169  126E  3E08               	addlw	8
  4170  126F  0084               	movwf	4
  4171  1270  3001               	movlw	1	; select bank2/3
  4172  1271  0085               	movwf	5
  4173  1272  3F40               	moviw [0]fsr1
  4174  1273  3F80               	movwi [0]fsr0
  4175  1274  3F41               	moviw [1]fsr1
  4176  1275  3F81               	movwi [1]fsr0
  4177  1276  0008               	return
  4178  1277                     __end_of_getTemp_AD:	
  4179                           
  4180                           	psect	text2
  4181  1C45                     __ptext2:	
  4182 ;; *************** function _getPowerFault_AD *****************
  4183 ;; Defined at:
  4184 ;;		line 49 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  channel         1    wreg     unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  channel         1    8[BANK0 ] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;		None               void
  4191 ;; Registers used:
  4192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;Total ram usage:        5 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    5
  4205 ;; This function calls:
  4206 ;;		_getAD
  4207 ;; This function is called by:
  4208 ;;		_main
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           
  4213                           ;psect for function _getPowerFault_AD
  4214  1C45                     _getPowerFault_AD:	
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4218                           ;getPowerFault_AD@channel stored from wreg
  4219  1C45  0020               	movlb	0	; select bank0
  4220  1C46  00A8               	movwf	getPowerFault_AD@channel
  4221                           
  4222                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
  4223  1C47  087B               	movf	_PF,w
  4224  1C48  0086               	movwf	6
  4225  1C49  3001               	movlw	1	; select bank2/3
  4226  1C4A  0087               	movwf	7
  4227  1C4B  1D81               	btfss	1,3
  4228  1C4C  0008               	return
  4229                           
  4230                           ;PowerFault_B1.c: 52: {
  4231                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
  4232  1C4D  30F0               	movlw	240
  4233  1C4E  00A4               	movwf	??_getPowerFault_AD
  4234  1C4F  0824               	movf	??_getPowerFault_AD,w
  4235  1C50  00A0               	movwf	getAD@adcon1
  4236  1C51  0828               	movf	getPowerFault_AD@channel,w
  4237  1C52  31A6  268E  319C   	fcall	_getAD
  4238  1C55  087B               	movf	_PF,w
  4239  1C56  3E03               	addlw	3
  4240  1C57  0086               	movwf	6
  4241  1C58  3001               	movlw	1	; select bank2/3
  4242  1C59  0087               	movwf	7
  4243  1C5A  0020               	movlb	0	; select bank0
  4244  1C5B  0820               	movf	?_getAD,w
  4245  1C5C  3FC0               	movwi [0]fsr1
  4246  1C5D  0821               	movf	?_getAD+1,w
  4247  1C5E  3FC1               	movwi [1]fsr1
  4248                           
  4249                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
  4250  1C5F  087B               	movf	_PF,w
  4251  1C60  3E03               	addlw	3
  4252  1C61  0086               	movwf	6
  4253  1C62  3001               	movlw	1	; select bank2/3
  4254  1C63  0087               	movwf	7
  4255  1C64  3F40               	moviw [0]fsr1
  4256  1C65  00A4               	movwf	??_getPowerFault_AD
  4257  1C66  3F41               	moviw [1]fsr1
  4258  1C67  00A5               	movwf	??_getPowerFault_AD+1
  4259  1C68  0A7B               	incf	_PF,w
  4260  1C69  0086               	movwf	6
  4261  1C6A  3001               	movlw	1	; select bank2/3
  4262  1C6B  0087               	movwf	7
  4263  1C6C  3F40               	moviw [0]fsr1
  4264  1C6D  00A6               	movwf	??_getPowerFault_AD+2
  4265  1C6E  3F41               	moviw [1]fsr1
  4266  1C6F  00A7               	movwf	??_getPowerFault_AD+3
  4267  1C70  0825               	movf	??_getPowerFault_AD+1,w
  4268  1C71  0227               	subwf	??_getPowerFault_AD+3,w
  4269  1C72  1D03               	skipz
  4270  1C73  2C76               	goto	u9905
  4271  1C74  0824               	movf	??_getPowerFault_AD,w
  4272  1C75  0226               	subwf	??_getPowerFault_AD+2,w
  4273  1C76                     u9905:	
  4274  1C76  1803               	skipnc
  4275  1C77  0008               	return
  4276                           
  4277                           ;PowerFault_B1.c: 55: {
  4278                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
  4279  1C78  087B               	movf	_PF,w
  4280  1C79  3E03               	addlw	3
  4281  1C7A  0086               	movwf	6
  4282  1C7B  3001               	movlw	1	; select bank2/3
  4283  1C7C  0087               	movwf	7
  4284  1C7D  0A7B               	incf	_PF,w
  4285  1C7E  0084               	movwf	4
  4286  1C7F  3001               	movlw	1	; select bank2/3
  4287  1C80  0085               	movwf	5
  4288  1C81  3F40               	moviw [0]fsr1
  4289  1C82  3F80               	movwi [0]fsr0
  4290  1C83  3F41               	moviw [1]fsr1
  4291  1C84  3F81               	movwi [1]fsr0
  4292  1C85  0008               	return
  4293  1C86                     __end_of_getPowerFault_AD:	
  4294                           
  4295                           	psect	text3
  4296  176A                     __ptext3:	
  4297 ;; *************** function _getLoad_AD *****************
  4298 ;; Defined at:
  4299 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  channel         1    wreg     unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  channel         1    9[BANK0 ] unsigned char 
  4304 ;;  i               1   11[BANK0 ] unsigned char 
  4305 ;;  j               1   10[BANK0 ] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;		None               void
  4308 ;; Registers used:
  4309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;Total ram usage:        8 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    5
  4322 ;; This function calls:
  4323 ;;		_getAD
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           
  4330                           ;psect for function _getLoad_AD
  4331  176A                     _getLoad_AD:	
  4332                           
  4333                           ;incstack = 0
  4334                           ; Regs used in _getLoad_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4335                           ;getLoad_AD@channel stored from wreg
  4336  176A  0020               	movlb	0	; select bank0
  4337  176B  00A9               	movwf	getLoad_AD@channel
  4338                           
  4339                           ;OverLoad_B1.c: 17: char i=0,j=0;
  4340  176C  01AB               	clrf	getLoad_AD@i
  4341  176D  01AA               	clrf	getLoad_AD@j
  4342                           
  4343                           ;OverLoad_B1.c: 19: if(Load->ADtoGO)
  4344  176E  086E               	movf	_Load,w
  4345  176F  0086               	movwf	6
  4346  1770  3002               	movlw	2	; select bank4/5
  4347  1771  0087               	movwf	7
  4348  1772  1E01               	btfss	1,4
  4349  1773  0008               	return
  4350                           
  4351                           ;OverLoad_B1.c: 20: {
  4352                           ;OverLoad_B1.c: 21: Load->ADRES=getAD(channel,0xc0);
  4353  1774  30C0               	movlw	192
  4354  1775  00A4               	movwf	??_getLoad_AD
  4355  1776  0824               	movf	??_getLoad_AD,w
  4356  1777  00A0               	movwf	getAD@adcon1
  4357  1778  0829               	movf	getLoad_AD@channel,w
  4358  1779  31A6  268E  3197   	fcall	_getAD
  4359  177C  0020               	movlb	0	; select bank0
  4360  177D  086E               	movf	_Load,w
  4361  177E  3E32               	addlw	50
  4362  177F  0086               	movwf	6
  4363  1780  3002               	movlw	2	; select bank4/5
  4364  1781  0087               	movwf	7
  4365  1782  0820               	movf	?_getAD,w
  4366  1783  3FC0               	movwi [0]fsr1
  4367  1784  0821               	movf	?_getAD+1,w
  4368  1785  3FC1               	movwi [1]fsr1
  4369                           
  4370                           ;OverLoad_B1.c: 22: for(i=0 ; i<5 ;i++)
  4371  1786  01AB               	clrf	getLoad_AD@i
  4372  1787  3005               	movlw	5
  4373  1788  022B               	subwf	getLoad_AD@i,w
  4374  1789  1803               	btfsc	3,0
  4375  178A  2FC4               	goto	l9757
  4376  178B                     l9747:	
  4377                           
  4378                           ;OverLoad_B1.c: 23: {
  4379                           ;OverLoad_B1.c: 24: if(Load->AH[i] < Load->ADRES)
  4380  178B  086E               	movf	_Load,w
  4381  178C  3E32               	addlw	50
  4382  178D  0086               	movwf	6
  4383  178E  3002               	movlw	2	; select bank4/5
  4384  178F  0087               	movwf	7
  4385  1790  3F40               	moviw [0]fsr1
  4386  1791  00A4               	movwf	??_getLoad_AD
  4387  1792  3F41               	moviw [1]fsr1
  4388  1793  00A5               	movwf	??_getLoad_AD+1
  4389  1794  352B               	lslf	getLoad_AD@i,w
  4390  1795  3E08               	addlw	8
  4391  1796  076E               	addwf	_Load,w
  4392  1797  00A6               	movwf	??_getLoad_AD+2
  4393  1798  0826               	movf	??_getLoad_AD+2,w
  4394  1799  0086               	movwf	6
  4395  179A  3002               	movlw	2	; select bank4/5
  4396  179B  0087               	movwf	7
  4397  179C  3F40               	moviw [0]fsr1
  4398  179D  00A7               	movwf	??_getLoad_AD+3
  4399  179E  3F41               	moviw [1]fsr1
  4400  179F  00A8               	movwf	??_getLoad_AD+4
  4401  17A0  0825               	movf	??_getLoad_AD+1,w
  4402  17A1  0228               	subwf	??_getLoad_AD+4,w
  4403  17A2  1D03               	skipz
  4404  17A3  2FA6               	goto	u9805
  4405  17A4  0824               	movf	??_getLoad_AD,w
  4406  17A5  0227               	subwf	??_getLoad_AD+3,w
  4407  17A6                     u9805:	
  4408  17A6  1803               	skipnc
  4409  17A7  2FBC               	goto	l9753
  4410                           
  4411                           ;OverLoad_B1.c: 25: {
  4412                           ;OverLoad_B1.c: 26: Load->AH[i]=Load->ADRES;
  4413  17A8  086E               	movf	_Load,w
  4414  17A9  3E32               	addlw	50
  4415  17AA  0086               	movwf	6
  4416  17AB  3002               	movlw	2	; select bank4/5
  4417  17AC  0087               	movwf	7
  4418  17AD  352B               	lslf	getLoad_AD@i,w
  4419  17AE  3E08               	addlw	8
  4420  17AF  076E               	addwf	_Load,w
  4421  17B0  00A4               	movwf	??_getLoad_AD
  4422  17B1  0824               	movf	??_getLoad_AD,w
  4423  17B2  0084               	movwf	4
  4424  17B3  3002               	movlw	2	; select bank4/5
  4425  17B4  0085               	movwf	5
  4426  17B5  3F40               	moviw [0]fsr1
  4427  17B6  3F80               	movwi [0]fsr0
  4428  17B7  3F41               	moviw [1]fsr1
  4429  17B8  3F81               	movwi [1]fsr0
  4430                           
  4431                           ;OverLoad_B1.c: 27: j=1;
  4432  17B9  01AA               	clrf	getLoad_AD@j
  4433  17BA  0AAA               	incf	getLoad_AD@j,f
  4434                           
  4435                           ;OverLoad_B1.c: 28: break;
  4436  17BB  2FC4               	goto	l9757
  4437  17BC                     l9753:	
  4438  17BC  3001               	movlw	1
  4439  17BD  00A4               	movwf	??_getLoad_AD
  4440  17BE  0824               	movf	??_getLoad_AD,w
  4441  17BF  07AB               	addwf	getLoad_AD@i,f
  4442  17C0  3005               	movlw	5
  4443  17C1  022B               	subwf	getLoad_AD@i,w
  4444  17C2  1C03               	skipc
  4445  17C3  2F8B               	goto	l9747
  4446  17C4                     l9757:	
  4447                           
  4448                           ;OverLoad_B1.c: 29: }
  4449                           ;OverLoad_B1.c: 30: }
  4450                           ;OverLoad_B1.c: 31: if(!j)
  4451  17C4  08AA               	movf	getLoad_AD@j,f
  4452  17C5  1D03               	skipz
  4453  17C6  0008               	return
  4454                           
  4455                           ;OverLoad_B1.c: 32: {
  4456                           ;OverLoad_B1.c: 33: for(i=0 ; i<5 ;i++)
  4457  17C7  01AB               	clrf	getLoad_AD@i
  4458  17C8                     L1:	
  4459  17C8  3005               	movlw	5
  4460  17C9  022B               	subwf	getLoad_AD@i,w
  4461  17CA  1803               	btfsc	3,0
  4462  17CB  0008               	return
  4463                           
  4464                           ;OverLoad_B1.c: 34: {
  4465                           ;OverLoad_B1.c: 35: if(Load->AL[i] > Load->ADRES)
  4466  17CC  352B               	lslf	getLoad_AD@i,w
  4467  17CD  3E1A               	addlw	26
  4468  17CE  076E               	addwf	_Load,w
  4469  17CF  00A4               	movwf	??_getLoad_AD
  4470  17D0  0824               	movf	??_getLoad_AD,w
  4471  17D1  0086               	movwf	6
  4472  17D2  3002               	movlw	2	; select bank4/5
  4473  17D3  0087               	movwf	7
  4474  17D4  3F40               	moviw [0]fsr1
  4475  17D5  00A5               	movwf	??_getLoad_AD+1
  4476  17D6  3F41               	moviw [1]fsr1
  4477  17D7  00A6               	movwf	??_getLoad_AD+2
  4478  17D8  086E               	movf	_Load,w
  4479  17D9  3E32               	addlw	50
  4480  17DA  0086               	movwf	6
  4481  17DB  3002               	movlw	2	; select bank4/5
  4482  17DC  0087               	movwf	7
  4483  17DD  3F40               	moviw [0]fsr1
  4484  17DE  00A7               	movwf	??_getLoad_AD+3
  4485  17DF  3F41               	moviw [1]fsr1
  4486  17E0  00A8               	movwf	??_getLoad_AD+4
  4487  17E1  0826               	movf	??_getLoad_AD+2,w
  4488  17E2  0228               	subwf	??_getLoad_AD+4,w
  4489  17E3  1D03               	skipz
  4490  17E4  2FE7               	goto	u9845
  4491  17E5  0825               	movf	??_getLoad_AD+1,w
  4492  17E6  0227               	subwf	??_getLoad_AD+3,w
  4493  17E7                     u9845:	
  4494  17E7  1803               	skipnc
  4495  17E8  2FFB               	goto	l9769
  4496                           
  4497                           ;OverLoad_B1.c: 36: {
  4498                           ;OverLoad_B1.c: 37: Load->AL[i]=Load->ADRES;
  4499  17E9  086E               	movf	_Load,w
  4500  17EA  3E32               	addlw	50
  4501  17EB  0086               	movwf	6
  4502  17EC  3002               	movlw	2	; select bank4/5
  4503  17ED  0087               	movwf	7
  4504  17EE  352B               	lslf	getLoad_AD@i,w
  4505  17EF  3E1A               	addlw	26
  4506  17F0  076E               	addwf	_Load,w
  4507  17F1  00A4               	movwf	??_getLoad_AD
  4508  17F2  0824               	movf	??_getLoad_AD,w
  4509  17F3  0084               	movwf	4
  4510  17F4  3002               	movlw	2	; select bank4/5
  4511  17F5  0085               	movwf	5
  4512  17F6  3F40               	moviw [0]fsr1
  4513  17F7  3F80               	movwi [0]fsr0
  4514  17F8  3F41               	moviw [1]fsr1
  4515  17F9  3F81               	movwi [1]fsr0
  4516                           
  4517                           ;OverLoad_B1.c: 38: break;
  4518  17FA  0008               	return
  4519  17FB                     l9769:	
  4520  17FB  3001               	movlw	1
  4521  17FC  00A4               	movwf	??_getLoad_AD
  4522  17FD  0824               	movf	??_getLoad_AD,w
  4523  17FE  07AB               	addwf	getLoad_AD@i,f
  4524  17FF  2FC8               	goto	L1
  4525  1800                     __end_of_getLoad_AD:	
  4526                           
  4527                           	psect	text4
  4528  268E                     __ptext4:	
  4529 ;; *************** function _getAD *****************
  4530 ;; Defined at:
  4531 ;;		line 309 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  adcon0          1    wreg     unsigned char 
  4534 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  2    0[BANK0 ] int 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4546 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;Total ram usage:        4 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    4
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_getLoad_AD
  4557 ;;		_getTemp_AD
  4558 ;;		_getPowerFault_AD
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _getAD
  4564  268E                     _getAD:	
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4568                           ;getAD@adcon0 stored from wreg
  4569  268E  0020               	movlb	0	; select bank0
  4570  268F  00A3               	movwf	getAD@adcon0
  4571                           
  4572                           ;MCU_16f1518_B1.c: 311: ADCON0=adcon0;
  4573  2690  0823               	movf	getAD@adcon0,w
  4574  2691  0021               	movlb	1	; select bank1
  4575  2692  009D               	movwf	29	;volatile
  4576                           
  4577                           ;MCU_16f1518_B1.c: 312: ADCON1=adcon1;
  4578  2693  0020               	movlb	0	; select bank0
  4579  2694  0820               	movf	getAD@adcon1,w
  4580  2695  0021               	movlb	1	; select bank1
  4581  2696  009E               	movwf	30	;volatile
  4582                           
  4583                           ;MCU_16f1518_B1.c: 313: GO_nDONE=1;
  4584  2697  149D               	bsf	29,1	;volatile
  4585  2698                     l1715:	
  4586                           ;MCU_16f1518_B1.c: 314: while(GO_nDONE);
  4587                           
  4588  2698  189D               	btfsc	29,1	;volatile
  4589  2699  2E98               	goto	l1715
  4590                           
  4591                           ;MCU_16f1518_B1.c: 315: return ((ADRESH*256)+ADRESL);
  4592  269A  081C               	movf	28,w	;volatile
  4593  269B  0020               	movlb	0	; select bank0
  4594  269C  01A1               	clrf	?_getAD+1
  4595  269D  07A1               	addwf	?_getAD+1,f
  4596  269E  0021               	movlb	1	; select bank1
  4597  269F  081B               	movf	27,w	;volatile
  4598  26A0  0020               	movlb	0	; select bank0
  4599  26A1  01A0               	clrf	?_getAD
  4600  26A2  07A0               	addwf	?_getAD,f
  4601  26A3  0008               	return
  4602  26A4                     __end_of_getAD:	
  4603                           
  4604                           	psect	text5
  4605  07FD                     __ptext5:	
  4606 ;; *************** function _Temp_Main *****************
  4607 ;; Defined at:
  4608 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;		None
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;		None               void
  4615 ;; Registers used:
  4616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;Total ram usage:        0 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:   10
  4629 ;; This function calls:
  4630 ;;		_setTemp_Main
  4631 ;; This function is called by:
  4632 ;;		_main
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           
  4637                           ;psect for function _Temp_Main
  4638  07FD                     _Temp_Main:	
  4639                           
  4640                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4641                           
  4642                           ;incstack = 0
  4643                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4644  07FD  318E  26DD         	fcall	_setTemp_Main
  4645  07FF  0008               	return
  4646  0800                     __end_of_Temp_Main:	
  4647                           
  4648                           	psect	text6
  4649  0EDD                     __ptext6:	
  4650 ;; *************** function _setTemp_Main *****************
  4651 ;; Defined at:
  4652 ;;		line 64 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;		None               void
  4659 ;; Registers used:
  4660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;Total ram usage:        3 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    9
  4673 ;; This function calls:
  4674 ;;		_getLoad_Safe
  4675 ;;		_getPF_Safe
  4676 ;;		_setOverTemp_Exceptions
  4677 ;; This function is called by:
  4678 ;;		_Temp_Main
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           
  4683                           ;psect for function _setTemp_Main
  4684  0EDD                     _setTemp_Main:	
  4685                           
  4686                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  4687                           
  4688                           ;incstack = 0
  4689                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4690  0EDD  087D               	movf	_Temp,w
  4691  0EDE  0086               	movwf	6
  4692  0EDF  3001               	movlw	1	; select bank2/3
  4693  0EE0  0087               	movwf	7
  4694  0EE1  1C01               	btfss	1,0
  4695  0EE2  0008               	return
  4696                           
  4697                           ;OverTemperature_B1.c: 67: {
  4698                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  4699  0EE3  087D               	movf	_Temp,w
  4700  0EE4  0086               	movwf	6
  4701  0EE5  3001               	movlw	1	; select bank2/3
  4702  0EE6  0087               	movwf	7
  4703  0EE7  1901               	btfsc	1,2
  4704  0EE8  2F29               	goto	l9389
  4705                           
  4706                           ;OverTemperature_B1.c: 69: {
  4707                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4708  0EE9  0A7D               	incf	_Temp,w
  4709  0EEA  0086               	movwf	6
  4710  0EEB  3001               	movlw	1	; select bank2/3
  4711  0EEC  0087               	movwf	7
  4712  0EED  3001               	movlw	1
  4713  0EEE  0781               	addwf	1,f
  4714  0EEF  3141               	addfsr 1,1
  4715  0EF0  1803               	skipnc
  4716  0EF1  0A81               	incf	1,f
  4717                           
  4718                           ;OverTemperature_B1.c: 71: if(Temp->Time >= 500)
  4719  0EF2  0A7D               	incf	_Temp,w
  4720  0EF3  0086               	movwf	6
  4721  0EF4  3001               	movlw	1	; select bank2/3
  4722  0EF5  0087               	movwf	7
  4723  0EF6  3F40               	moviw [0]fsr1
  4724  0EF7  0020               	movlb	0	; select bank0
  4725  0EF8  00AD               	movwf	??_setTemp_Main
  4726  0EF9  3F41               	moviw [1]fsr1
  4727  0EFA  00AE               	movwf	??_setTemp_Main+1
  4728  0EFB  3001               	movlw	1
  4729  0EFC  022E               	subwf	??_setTemp_Main+1,w
  4730  0EFD  30F4               	movlw	244
  4731  0EFE  1903               	skipnz
  4732  0EFF  022D               	subwf	??_setTemp_Main,w
  4733  0F00  1C03               	skipc
  4734  0F01  0008               	return
  4735                           
  4736                           ;OverTemperature_B1.c: 72: {
  4737                           ;OverTemperature_B1.c: 73: if(getLoad_Safe() && getPF_Safe())
  4738  0F02  31A4  249F  318E   	fcall	_getLoad_Safe
  4739  0F05  3A00               	xorlw	0
  4740  0F06  1903               	skipnz
  4741  0F07  2F20               	goto	l9387
  4742  0F08  31A4  241E  318E   	fcall	_getPF_Safe
  4743  0F0B  3A00               	xorlw	0
  4744  0F0C  1903               	skipnz
  4745  0F0D  2F20               	goto	l9387
  4746                           
  4747                           ;OverTemperature_B1.c: 74: {
  4748                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4749  0F0E  0A7D               	incf	_Temp,w
  4750  0F0F  0086               	movwf	6
  4751  0F10  3001               	movlw	1	; select bank2/3
  4752  0F11  0087               	movwf	7
  4753  0F12  3000               	movlw	0
  4754  0F13  3FC0               	movwi [0]fsr1
  4755  0F14  3FC1               	movwi [1]fsr1
  4756                           
  4757                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4758  0F15  087D               	movf	_Temp,w
  4759  0F16  0086               	movwf	6
  4760  0F17  3001               	movlw	1	; select bank2/3
  4761  0F18  0087               	movwf	7
  4762  0F19  1501               	bsf	1,2
  4763                           
  4764                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4765  0F1A  087D               	movf	_Temp,w
  4766  0F1B  0086               	movwf	6
  4767  0F1C  3001               	movlw	1	; select bank2/3
  4768  0F1D  0087               	movwf	7
  4769  0F1E  1201               	bcf	1,4
  4770                           
  4771                           ;OverTemperature_B1.c: 78: }
  4772  0F1F  0008               	return
  4773  0F20                     l9387:	
  4774                           
  4775                           ;OverTemperature_B1.c: 79: else
  4776                           ;OverTemperature_B1.c: 80: {
  4777                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4778  0F20  0A7D               	incf	_Temp,w
  4779  0F21  0086               	movwf	6
  4780  0F22  3001               	movlw	1	; select bank2/3
  4781  0F23  0087               	movwf	7
  4782  0F24  30E8               	movlw	232
  4783  0F25  3FC0               	movwi [0]fsr1
  4784  0F26  3003               	movlw	3
  4785  0F27  3FC1               	movwi [1]fsr1
  4786                           
  4787                           ;OverTemperature_B1.c: 82: }
  4788                           ;OverTemperature_B1.c: 83: }
  4789                           ;OverTemperature_B1.c: 84: }
  4790  0F28  0008               	return
  4791  0F29                     l9389:	
  4792                           
  4793                           ;OverTemperature_B1.c: 85: else
  4794                           ;OverTemperature_B1.c: 86: {
  4795                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4796  0F29  0A7D               	incf	_Temp,w
  4797  0F2A  0086               	movwf	6
  4798  0F2B  3001               	movlw	1	; select bank2/3
  4799  0F2C  0087               	movwf	7
  4800  0F2D  3001               	movlw	1
  4801  0F2E  0781               	addwf	1,f
  4802  0F2F  3141               	addfsr 1,1
  4803  0F30  1803               	skipnc
  4804  0F31  0A81               	incf	1,f
  4805                           
  4806                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4807  0F32  0A7D               	incf	_Temp,w
  4808  0F33  0086               	movwf	6
  4809  0F34  3001               	movlw	1	; select bank2/3
  4810  0F35  0087               	movwf	7
  4811  0F36  3F40               	moviw [0]fsr1
  4812  0F37  0020               	movlb	0	; select bank0
  4813  0F38  00AD               	movwf	??_setTemp_Main
  4814  0F39  3F41               	moviw [1]fsr1
  4815  0F3A  00AE               	movwf	??_setTemp_Main+1
  4816  0F3B  3000               	movlw	0
  4817  0F3C  022E               	subwf	??_setTemp_Main+1,w
  4818  0F3D  3004               	movlw	4
  4819  0F3E  1903               	skipnz
  4820  0F3F  022D               	subwf	??_setTemp_Main,w
  4821  0F40  1C03               	skipc
  4822  0F41  0008               	return
  4823                           
  4824                           ;OverTemperature_B1.c: 89: {
  4825                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4826  0F42  0A7D               	incf	_Temp,w
  4827  0F43  0086               	movwf	6
  4828  0F44  3001               	movlw	1	; select bank2/3
  4829  0F45  0087               	movwf	7
  4830  0F46  3000               	movlw	0
  4831  0F47  3FC0               	movwi [0]fsr1
  4832  0F48  3FC1               	movwi [1]fsr1
  4833                           
  4834                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4835  0F49  087D               	movf	_Temp,w
  4836  0F4A  0086               	movwf	6
  4837  0F4B  3001               	movlw	1	; select bank2/3
  4838  0F4C  0087               	movwf	7
  4839  0F4D  1101               	bcf	1,2
  4840                           
  4841                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4842  0F4E  087D               	movf	_Temp,w
  4843  0F4F  3E08               	addlw	8
  4844  0F50  0086               	movwf	6
  4845  0F51  3001               	movlw	1	; select bank2/3
  4846  0F52  0087               	movwf	7
  4847  0F53  087D               	movf	_Temp,w
  4848  0F54  3E04               	addlw	4
  4849  0F55  0084               	movwf	4
  4850  0F56  3001               	movlw	1	; select bank2/3
  4851  0F57  0085               	movwf	5
  4852  0F58  3F40               	moviw [0]fsr1
  4853  0F59  3F80               	movwi [0]fsr0
  4854  0F5A  3F41               	moviw [1]fsr1
  4855  0F5B  3F81               	movwi [1]fsr0
  4856                           
  4857                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4858  0F5C  087D               	movf	_Temp,w
  4859  0F5D  0086               	movwf	6
  4860  0F5E  3001               	movlw	1	; select bank2/3
  4861  0F5F  0087               	movwf	7
  4862  0F60  1C81               	btfss	1,1
  4863  0F61  2F8F               	goto	l9411
  4864                           
  4865                           ;OverTemperature_B1.c: 94: {
  4866                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 540)
  4867  0F62  087D               	movf	_Temp,w
  4868  0F63  3E04               	addlw	4
  4869  0F64  0086               	movwf	6
  4870  0F65  3001               	movlw	1	; select bank2/3
  4871  0F66  0087               	movwf	7
  4872  0F67  3F40               	moviw [0]fsr1
  4873  0F68  00AD               	movwf	??_setTemp_Main
  4874  0F69  3F41               	moviw [1]fsr1
  4875  0F6A  00AE               	movwf	??_setTemp_Main+1
  4876  0F6B  3002               	movlw	2
  4877  0F6C  022E               	subwf	??_setTemp_Main+1,w
  4878  0F6D  301C               	movlw	28
  4879  0F6E  1903               	skipnz
  4880  0F6F  022D               	subwf	??_setTemp_Main,w
  4881  0F70  1C03               	skipc
  4882  0F71  2FBD               	goto	l9421
  4883                           
  4884                           ;OverTemperature_B1.c: 96: {
  4885                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4886  0F72  3001               	movlw	1
  4887  0F73  00AD               	movwf	??_setTemp_Main
  4888  0F74  087D               	movf	_Temp,w
  4889  0F75  3E03               	addlw	3
  4890  0F76  0086               	movwf	6
  4891  0F77  3001               	movlw	1	; select bank2/3
  4892  0F78  0087               	movwf	7
  4893  0F79  082D               	movf	??_setTemp_Main,w
  4894  0F7A  0781               	addwf	1,f
  4895                           
  4896                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4897  0F7B  087D               	movf	_Temp,w
  4898  0F7C  3E03               	addlw	3
  4899  0F7D  0086               	movwf	6
  4900  0F7E  3001               	movlw	1	; select bank2/3
  4901  0F7F  0087               	movwf	7
  4902  0F80  3003               	movlw	3
  4903  0F81  0201               	subwf	1,w
  4904  0F82  1C03               	skipc
  4905  0F83  2FC3               	goto	l9423
  4906                           
  4907                           ;OverTemperature_B1.c: 99: {
  4908                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4909  0F84  087D               	movf	_Temp,w
  4910  0F85  3E03               	addlw	3
  4911  0F86  0086               	movwf	6
  4912  0F87  3001               	movlw	1	; select bank2/3
  4913  0F88  0087               	movwf	7
  4914  0F89  0181               	clrf	1
  4915                           
  4916                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4917  0F8A  3000               	movlw	0
  4918  0F8B  319C  24C8  318E   	fcall	_setOverTemp_Exceptions
  4919                           
  4920                           ;OverTemperature_B1.c: 102: }
  4921                           ;OverTemperature_B1.c: 103: }
  4922  0F8E  2FC3               	goto	l9423
  4923  0F8F                     l9411:	
  4924                           ;OverTemperature_B1.c: 107: }
  4925                           ;OverTemperature_B1.c: 108: }
  4926                           
  4927                           ;OverTemperature_B1.c: 104: else
  4928                           ;OverTemperature_B1.c: 105: {
  4929                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4930                           
  4931                           
  4932                           ;OverTemperature_B1.c: 109: else
  4933                           ;OverTemperature_B1.c: 110: {
  4934                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 475)
  4935  0F8F  087D               	movf	_Temp,w
  4936  0F90  3E04               	addlw	4
  4937  0F91  0086               	movwf	6
  4938  0F92  3001               	movlw	1	; select bank2/3
  4939  0F93  0087               	movwf	7
  4940  0F94  3F40               	moviw [0]fsr1
  4941  0F95  0020               	movlb	0	; select bank0
  4942  0F96  00AD               	movwf	??_setTemp_Main
  4943  0F97  3F41               	moviw [1]fsr1
  4944  0F98  00AE               	movwf	??_setTemp_Main+1
  4945  0F99  3001               	movlw	1
  4946  0F9A  022E               	subwf	??_setTemp_Main+1,w
  4947  0F9B  30DC               	movlw	220
  4948  0F9C  1903               	skipnz
  4949  0F9D  022D               	subwf	??_setTemp_Main,w
  4950  0F9E  1803               	skipnc
  4951  0F9F  2FBD               	goto	l9421
  4952                           
  4953                           ;OverTemperature_B1.c: 112: {
  4954                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4955  0FA0  3001               	movlw	1
  4956  0FA1  00AD               	movwf	??_setTemp_Main
  4957  0FA2  087D               	movf	_Temp,w
  4958  0FA3  3E03               	addlw	3
  4959  0FA4  0086               	movwf	6
  4960  0FA5  3001               	movlw	1	; select bank2/3
  4961  0FA6  0087               	movwf	7
  4962  0FA7  082D               	movf	??_setTemp_Main,w
  4963  0FA8  0781               	addwf	1,f
  4964                           
  4965                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4966  0FA9  087D               	movf	_Temp,w
  4967  0FAA  3E03               	addlw	3
  4968  0FAB  0086               	movwf	6
  4969  0FAC  3001               	movlw	1	; select bank2/3
  4970  0FAD  0087               	movwf	7
  4971  0FAE  3003               	movlw	3
  4972  0FAF  0201               	subwf	1,w
  4973  0FB0  1C03               	skipc
  4974  0FB1  2FC3               	goto	l9423
  4975                           
  4976                           ;OverTemperature_B1.c: 115: {
  4977                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4978  0FB2  087D               	movf	_Temp,w
  4979  0FB3  3E03               	addlw	3
  4980  0FB4  0086               	movwf	6
  4981  0FB5  3001               	movlw	1	; select bank2/3
  4982  0FB6  0087               	movwf	7
  4983  0FB7  0181               	clrf	1
  4984                           
  4985                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4986  0FB8  3001               	movlw	1
  4987  0FB9  319C  24C8  318E   	fcall	_setOverTemp_Exceptions
  4988                           
  4989                           ;OverTemperature_B1.c: 118: }
  4990                           ;OverTemperature_B1.c: 119: }
  4991  0FBC  2FC3               	goto	l9423
  4992  0FBD                     l9421:	
  4993                           
  4994                           ;OverTemperature_B1.c: 120: else
  4995                           ;OverTemperature_B1.c: 121: {
  4996                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  4997  0FBD  087D               	movf	_Temp,w
  4998  0FBE  3E03               	addlw	3
  4999  0FBF  0086               	movwf	6
  5000  0FC0  3001               	movlw	1	; select bank2/3
  5001  0FC1  0087               	movwf	7
  5002  0FC2  0181               	clrf	1
  5003  0FC3                     l9423:	
  5004                           
  5005                           ;OverTemperature_B1.c: 123: }
  5006                           ;OverTemperature_B1.c: 124: }
  5007                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  5008  0FC3  087D               	movf	_Temp,w
  5009  0FC4  0086               	movwf	6
  5010  0FC5  3001               	movlw	1	; select bank2/3
  5011  0FC6  0087               	movwf	7
  5012  0FC7  1881               	btfsc	1,1
  5013  0FC8  2FCE               	goto	l9427
  5014                           
  5015                           ;OverTemperature_B1.c: 126: {
  5016                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  5017  0FC9  087D               	movf	_Temp,w
  5018  0FCA  0086               	movwf	6
  5019  0FCB  3001               	movlw	1	; select bank2/3
  5020  0FCC  0087               	movwf	7
  5021  0FCD  1601               	bsf	1,4
  5022  0FCE                     l9427:	
  5023                           
  5024                           ;OverTemperature_B1.c: 128: }
  5025                           ;OverTemperature_B1.c: 129: Product->Data[24]=Temp->AD >> 8;
  5026  0FCE  087D               	movf	_Temp,w
  5027  0FCF  3E04               	addlw	4
  5028  0FD0  0086               	movwf	6
  5029  0FD1  3001               	movlw	1	; select bank2/3
  5030  0FD2  0087               	movwf	7
  5031  0FD3  3F40               	moviw [0]fsr1
  5032  0FD4  0020               	movlb	0	; select bank0
  5033  0FD5  00AD               	movwf	??_setTemp_Main
  5034  0FD6  3F41               	moviw [1]fsr1
  5035  0FD7  00AE               	movwf	??_setTemp_Main+1
  5036  0FD8  082E               	movf	??_setTemp_Main+1,w
  5037  0FD9  00AF               	movwf	??_setTemp_Main+2
  5038  0FDA  086F               	movf	_Product,w
  5039  0FDB  3E18               	addlw	24
  5040  0FDC  0086               	movwf	6
  5041  0FDD  3001               	movlw	1	; select bank2/3
  5042  0FDE  0087               	movwf	7
  5043  0FDF  082F               	movf	??_setTemp_Main+2,w
  5044  0FE0  0081               	movwf	1
  5045                           
  5046                           ;OverTemperature_B1.c: 130: Product->Data[25]=Temp->AD;
  5047  0FE1  087D               	movf	_Temp,w
  5048  0FE2  3E04               	addlw	4
  5049  0FE3  0086               	movwf	6
  5050  0FE4  3001               	movlw	1	; select bank2/3
  5051  0FE5  0087               	movwf	7
  5052  0FE6  0801               	movf	1,w
  5053  0FE7  00AD               	movwf	??_setTemp_Main
  5054  0FE8  086F               	movf	_Product,w
  5055  0FE9  3E19               	addlw	25
  5056  0FEA  0086               	movwf	6
  5057  0FEB  3001               	movlw	1	; select bank2/3
  5058  0FEC  0087               	movwf	7
  5059  0FED  082D               	movf	??_setTemp_Main,w
  5060  0FEE  0081               	movwf	1
  5061                           
  5062                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  5063  0FEF  087D               	movf	_Temp,w
  5064  0FF0  3E06               	addlw	6
  5065  0FF1  0086               	movwf	6
  5066  0FF2  3001               	movlw	1	; select bank2/3
  5067  0FF3  0087               	movwf	7
  5068  0FF4  3000               	movlw	0
  5069  0FF5  3FC0               	movwi [0]fsr1
  5070  0FF6  3FC1               	movwi [1]fsr1
  5071                           
  5072                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  5073  0FF7  087D               	movf	_Temp,w
  5074  0FF8  3E08               	addlw	8
  5075  0FF9  0086               	movwf	6
  5076  0FFA  3001               	movlw	1	; select bank2/3
  5077  0FFB  0087               	movwf	7
  5078  0FFC  3000               	movlw	0
  5079  0FFD  3FC0               	movwi [0]fsr1
  5080  0FFE  3FC1               	movwi [1]fsr1
  5081  0FFF  0008               	return
  5082  1000                     __end_of_setTemp_Main:	
  5083                           
  5084                           	psect	text7
  5085  1CC8                     __ptext7:	
  5086 ;; *************** function _setOverTemp_Exceptions *****************
  5087 ;; Defined at:
  5088 ;;		line 138 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  command         1    wreg     unsigned char 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  command         1   12[BANK0 ] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;		None               void
  5095 ;; Registers used:
  5096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;Total ram usage:        2 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    8
  5109 ;; This function calls:
  5110 ;;		_DimmerLights_Exceptions
  5111 ;;		_setBuz
  5112 ;;		_setLED
  5113 ;;		_setRF_Enable
  5114 ;;		_setSw_Enable
  5115 ;; This function is called by:
  5116 ;;		_setTemp_Main
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function _setOverTemp_Exceptions
  5122  1CC8                     _setOverTemp_Exceptions:	
  5123                           
  5124                           ;incstack = 0
  5125                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5126                           ;setOverTemp_Exceptions@command stored from wreg
  5127  1CC8  0020               	movlb	0	; select bank0
  5128  1CC9  00AC               	movwf	setOverTemp_Exceptions@command
  5129                           
  5130                           ;OverTemperature_B1.c: 140: Temp->ERROR=command;
  5131  1CCA  087D               	movf	_Temp,w
  5132  1CCB  0086               	movwf	6
  5133  1CCC  3001               	movlw	1	; select bank2/3
  5134  1CCD  0087               	movwf	7
  5135  1CCE  082C               	movf	setOverTemp_Exceptions@command,w
  5136  1CCF  1081               	bcf	1,1
  5137  1CD0  1D03               	skipz
  5138  1CD1  1481               	bsf	1,1
  5139                           
  5140                           ;OverTemperature_B1.c: 141: Temp->Safe=(~command) & 0x01;
  5141  1CD2  092C               	comf	setOverTemp_Exceptions@command,w
  5142  1CD3  3901               	andlw	1
  5143  1CD4  00AB               	movwf	??_setOverTemp_Exceptions
  5144  1CD5  087D               	movf	_Temp,w
  5145  1CD6  0086               	movwf	6
  5146  1CD7  3001               	movlw	1	; select bank2/3
  5147  1CD8  0087               	movwf	7
  5148  1CD9  0EAB               	swapf	??_setOverTemp_Exceptions,f
  5149  1CDA  0801               	movf	1,w
  5150  1CDB  062B               	xorwf	??_setOverTemp_Exceptions,w
  5151  1CDC  39EF               	andlw	-17
  5152  1CDD  062B               	xorwf	??_setOverTemp_Exceptions,w
  5153  1CDE  0081               	movwf	1
  5154                           
  5155                           ;OverTemperature_B1.c: 142: if(command)
  5156  1CDF  082C               	movf	setOverTemp_Exceptions@command,w
  5157  1CE0  1903               	btfsc	3,2
  5158  1CE1  2CE7               	goto	l9025
  5159                           
  5160                           ;OverTemperature_B1.c: 143: {
  5161                           ;OverTemperature_B1.c: 144: DimmerLights_Exceptions(1);
  5162  1CE2  3001               	movlw	1
  5163  1CE3  3191  21A6  319C   	fcall	_DimmerLights_Exceptions
  5164                           
  5165                           ;OverTemperature_B1.c: 145: }
  5166  1CE6  2CF0               	goto	l2157
  5167  1CE7                     l9025:	
  5168                           
  5169                           ;OverTemperature_B1.c: 146: else
  5170                           ;OverTemperature_B1.c: 147: {
  5171                           ;OverTemperature_B1.c: 148: setBuz(2,100);
  5172  1CE7  3064               	movlw	100
  5173  1CE8  0020               	movlb	0	; select bank0
  5174  1CE9  00A6               	movwf	setBuz@time
  5175  1CEA  3000               	movlw	0
  5176  1CEB  00A7               	movwf	setBuz@time+1
  5177  1CEC  3002               	movlw	2
  5178  1CED  3193  23C3  319C   	fcall	_setBuz
  5179  1CF0                     l2157:	
  5180                           
  5181                           ;OverTemperature_B1.c: 149: }
  5182                           ;OverTemperature_B1.c: 152: setLED(99,command+10);
  5183  1CF0  0020               	movlb	0	; select bank0
  5184  1CF1  082C               	movf	setOverTemp_Exceptions@command,w
  5185  1CF2  3E0A               	addlw	10
  5186  1CF3  00AB               	movwf	??_setOverTemp_Exceptions
  5187  1CF4  082B               	movf	??_setOverTemp_Exceptions,w
  5188  1CF5  00A2               	movwf	setLED@command
  5189  1CF6  3063               	movlw	99
  5190  1CF7  3190  2083  319C   	fcall	_setLED
  5191                           
  5192                           ;OverTemperature_B1.c: 154: setSw_Enable((~command) & 0x01);
  5193  1CFA  0020               	movlb	0	; select bank0
  5194  1CFB  092C               	comf	setOverTemp_Exceptions@command,w
  5195  1CFC  3901               	andlw	1
  5196  1CFD  31A7  2787  319C   	fcall	_setSw_Enable
  5197                           
  5198                           ;OverTemperature_B1.c: 156: setRF_Enable(1,(~command) & 0x01);
  5199  1D00  0020               	movlb	0	; select bank0
  5200  1D01  092C               	comf	setOverTemp_Exceptions@command,w
  5201  1D02  3901               	andlw	1
  5202  1D03  00AB               	movwf	??_setOverTemp_Exceptions
  5203  1D04  082B               	movf	??_setOverTemp_Exceptions,w
  5204  1D05  00A2               	movwf	setRF_Enable@command
  5205  1D06  3001               	movlw	1
  5206  1D07  3199  21A7         	fcall	_setRF_Enable
  5207  1D09  0008               	return
  5208  1D0A                     __end_of_setOverTemp_Exceptions:	
  5209                           
  5210                           	psect	text8
  5211  23C9                     __ptext8:	
  5212 ;; *************** function _Temp_Initialization *****************
  5213 ;; Defined at:
  5214 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;		None               void
  5221 ;; Registers used:
  5222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;Total ram usage:        0 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    5
  5235 ;; This function calls:
  5236 ;;		_setTemp_Initialization
  5237 ;; This function is called by:
  5238 ;;		_main
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           
  5243                           ;psect for function _Temp_Initialization
  5244  23C9                     _Temp_Initialization:	
  5245                           
  5246                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  5247                           
  5248                           ;incstack = 0
  5249                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5250  23C9  31A4  24AA         	fcall	_setTemp_Initialization
  5251  23CB  0008               	return
  5252  23CC                     __end_of_Temp_Initialization:	
  5253                           
  5254                           	psect	text9
  5255  24AA                     __ptext9:	
  5256 ;; *************** function _setTemp_Initialization *****************
  5257 ;; Defined at:
  5258 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;		None               void
  5265 ;; Registers used:
  5266 ;;		wreg, fsr1l, fsr1h
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;Total ram usage:        1 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    4
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_Temp_Initialization
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function _setTemp_Initialization
  5288  24AA                     _setTemp_Initialization:	
  5289                           
  5290                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  5291                           
  5292                           ;incstack = 0
  5293                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  5294  24AA  3020               	movlw	_Temp1& (0+255)
  5295  24AB  0020               	movlb	0	; select bank0
  5296  24AC  00A0               	movwf	??_setTemp_Initialization
  5297  24AD  0820               	movf	??_setTemp_Initialization,w
  5298  24AE  00FD               	movwf	_Temp
  5299                           
  5300                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  5301  24AF  087D               	movf	_Temp,w
  5302  24B0  0086               	movwf	6
  5303  24B1  3001               	movlw	1	; select bank2/3
  5304  24B2  0087               	movwf	7
  5305  24B3  1601               	bsf	1,4
  5306  24B4  0008               	return
  5307  24B5                     __end_of_setTemp_Initialization:	
  5308                           
  5309                           	psect	text10
  5310  242E                     __ptext10:	
  5311 ;; *************** function _Switch_Main *****************
  5312 ;; Defined at:
  5313 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;		None               void
  5320 ;; Registers used:
  5321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    8
  5334 ;; This function calls:
  5335 ;;		_setSw_Main
  5336 ;; This function is called by:
  5337 ;;		_main
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           
  5342                           ;psect for function _Switch_Main
  5343  242E                     _Switch_Main:	
  5344                           
  5345                           ;Switch_B1.c: 65: setSw_Main(1);
  5346                           
  5347                           ;incstack = 0
  5348                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5349  242E  3001               	movlw	1
  5350  242F  3186  2650  31A4   	fcall	_setSw_Main
  5351                           
  5352                           ;Switch_B1.c: 69: setSw_Main(2);
  5353  2432  3002               	movlw	2
  5354  2433  3186  2650         	fcall	_setSw_Main
  5355  2435  0008               	return
  5356  2436                     __end_of_Switch_Main:	
  5357                           
  5358                           	psect	text11
  5359  0650                     __ptext11:	
  5360 ;; *************** function _setSw_Main *****************
  5361 ;; Defined at:
  5362 ;;		line 112 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  sw              1    wreg     unsigned char 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  sw              1   16[BANK0 ] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;		None               void
  5369 ;; Registers used:
  5370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;Total ram usage:        5 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    7
  5383 ;; This function calls:
  5384 ;;		_SwPointSelect
  5385 ;;		_Sw_DimmerAdjFunc
  5386 ;;		_Sw_DimmerOffFunc
  5387 ;;		_Sw_DimmerOnFunc
  5388 ;;		_setBuz
  5389 ;;		_setRF_Learn
  5390 ;; This function is called by:
  5391 ;;		_Switch_Main
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           
  5396                           ;psect for function _setSw_Main
  5397  0650                     _setSw_Main:	
  5398                           
  5399                           ;incstack = 0
  5400                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5401                           ;setSw_Main@sw stored from wreg
  5402  0650  0020               	movlb	0	; select bank0
  5403  0651  00B0               	movwf	setSw_Main@sw
  5404                           
  5405                           ;Switch_B1.c: 114: if(Sw->Enable)
  5406  0652  086D               	movf	_Sw,w
  5407  0653  0086               	movwf	6
  5408  0654  3001               	movlw	1	; select bank2/3
  5409  0655  0087               	movwf	7
  5410  0656  1C01               	btfss	1,0
  5411  0657  0008               	return
  5412                           
  5413                           ;Switch_B1.c: 115: {
  5414                           ;Switch_B1.c: 116: SwPointSelect(sw);
  5415  0658  0830               	movf	setSw_Main@sw,w
  5416  0659  31A6  260F  3186   	fcall	_SwPointSelect
  5417                           
  5418                           ;Switch_B1.c: 133: if(sw == 1)
  5419  065C  0020               	movlb	0	; select bank0
  5420  065D  0830               	movf	setSw_Main@sw,w
  5421  065E  3A01               	xorlw	1
  5422  065F  1D03               	skipz
  5423  0660  2E6D               	goto	l9567
  5424                           
  5425                           ;Switch_B1.c: 134: {
  5426                           ;Switch_B1.c: 135: Sw->Touch=(RA6 || RA4)?1:0;
  5427  0661  01AE               	clrf	_setSw_Main$4703
  5428  0662  0AAE               	incf	_setSw_Main$4703,f
  5429  0663  1F0C               	btfss	12,6	;volatile
  5430  0664  1A0C               	btfsc	12,4	;volatile
  5431  0665  2E67               	goto	l9565
  5432  0666  01AE               	clrf	_setSw_Main$4703
  5433  0667                     l9565:	
  5434  0667  086D               	movf	_Sw,w
  5435  0668  0086               	movwf	6
  5436  0669  3001               	movlw	1	; select bank2/3
  5437  066A  0087               	movwf	7
  5438  066B  082E               	movf	_setSw_Main$4703,w
  5439  066C  2E7C               	goto	L2
  5440  066D                     l9567:	
  5441                           ;Switch_B1.c: 136: }
  5442                           
  5443                           
  5444                           ;Switch_B1.c: 137: else if(sw == 2)
  5445  066D  0830               	movf	setSw_Main@sw,w
  5446  066E  3A02               	xorlw	2
  5447  066F  1D03               	skipz
  5448  0670  2E7F               	goto	l9577
  5449                           
  5450                           ;Switch_B1.c: 138: {
  5451                           ;Switch_B1.c: 139: Sw->Touch=(RA0 || RB1)?1:0;
  5452  0671  01AF               	clrf	_setSw_Main$4704
  5453  0672  0AAF               	incf	_setSw_Main$4704,f
  5454  0673  1C0C               	btfss	12,0	;volatile
  5455  0674  188D               	btfsc	13,1	;volatile
  5456  0675  2E77               	goto	l9575
  5457  0676  01AF               	clrf	_setSw_Main$4704
  5458  0677                     l9575:	
  5459  0677  086D               	movf	_Sw,w
  5460  0678  0086               	movwf	6
  5461  0679  3001               	movlw	1	; select bank2/3
  5462  067A  0087               	movwf	7
  5463  067B  082F               	movf	_setSw_Main$4704,w
  5464  067C                     L2:	
  5465  067C  1081               	bcf	1,1
  5466  067D  1D03               	skipz
  5467  067E  1481               	bsf	1,1
  5468  067F                     l9577:	
  5469                           
  5470                           ;Switch_B1.c: 140: }
  5471                           ;Switch_B1.c: 148: if(Sw->Touch)
  5472  067F  086D               	movf	_Sw,w
  5473  0680  0086               	movwf	6
  5474  0681  3001               	movlw	1	; select bank2/3
  5475  0682  0087               	movwf	7
  5476  0683  1C81               	btfss	1,1
  5477  0684  2F56               	goto	l9625
  5478                           
  5479                           ;Switch_B1.c: 149: {
  5480                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  5481  0685  086D               	movf	_Sw,w
  5482  0686  0086               	movwf	6
  5483  0687  3001               	movlw	1	; select bank2/3
  5484  0688  0087               	movwf	7
  5485  0689  1901               	btfsc	1,2
  5486  068A  2EAC               	goto	l9591
  5487                           
  5488                           ;Switch_B1.c: 151: {
  5489                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  5490  068B  3001               	movlw	1
  5491  068C  00AC               	movwf	??_setSw_Main
  5492  068D  086D               	movf	_Sw,w
  5493  068E  3E02               	addlw	2
  5494  068F  0086               	movwf	6
  5495  0690  3001               	movlw	1	; select bank2/3
  5496  0691  0087               	movwf	7
  5497  0692  082C               	movf	??_setSw_Main,w
  5498  0693  0781               	addwf	1,f
  5499                           
  5500                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  5501  0694  086D               	movf	_Sw,w
  5502  0695  3E02               	addlw	2
  5503  0696  0086               	movwf	6
  5504  0697  3001               	movlw	1	; select bank2/3
  5505  0698  0087               	movwf	7
  5506  0699  3005               	movlw	5
  5507  069A  0201               	subwf	1,w
  5508  069B  1C03               	skipc
  5509  069C  0008               	return
  5510                           
  5511                           ;Switch_B1.c: 154: {
  5512                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  5513  069D  086D               	movf	_Sw,w
  5514  069E  3E02               	addlw	2
  5515  069F  0086               	movwf	6
  5516  06A0  3001               	movlw	1	; select bank2/3
  5517  06A1  0087               	movwf	7
  5518  06A2  0181               	clrf	1
  5519                           
  5520                           ;Switch_B1.c: 156: Sw->Debounce=1;
  5521  06A3  086D               	movf	_Sw,w
  5522  06A4  0086               	movwf	6
  5523  06A5  3001               	movlw	1	; select bank2/3
  5524  06A6  0087               	movwf	7
  5525  06A7  1501               	bsf	1,2
  5526                           
  5527                           ;Switch_B1.c: 159: Sw_DimmerOnFunc(sw);
  5528  06A8  0830               	movf	setSw_Main@sw,w
  5529  06A9  3192  22E5         	fcall	_Sw_DimmerOnFunc
  5530                           
  5531                           ;Switch_B1.c: 162: }
  5532                           ;Switch_B1.c: 163: }
  5533  06AB  0008               	return
  5534  06AC                     l9591:	
  5535                           
  5536                           ;Switch_B1.c: 164: else
  5537                           ;Switch_B1.c: 165: {
  5538                           ;Switch_B1.c: 166: if(!Sw->Hold1)
  5539  06AC  0020               	movlb	0	; select bank0
  5540  06AD  086D               	movf	_Sw,w
  5541  06AE  0086               	movwf	6
  5542  06AF  3001               	movlw	1	; select bank2/3
  5543  06B0  0087               	movwf	7
  5544  06B1  1981               	btfsc	1,3
  5545  06B2  2EDE               	goto	l9601
  5546                           
  5547                           ;Switch_B1.c: 167: {
  5548                           ;Switch_B1.c: 168: Sw->Hold1Time++;
  5549  06B3  086D               	movf	_Sw,w
  5550  06B4  3E03               	addlw	3
  5551  06B5  0086               	movwf	6
  5552  06B6  3001               	movlw	1	; select bank2/3
  5553  06B7  0087               	movwf	7
  5554  06B8  3001               	movlw	1
  5555  06B9  0781               	addwf	1,f
  5556  06BA  3141               	addfsr 1,1
  5557  06BB  1803               	skipnc
  5558  06BC  0A81               	incf	1,f
  5559                           
  5560                           ;Switch_B1.c: 169: if(Sw->Hold1Time >= 150)
  5561  06BD  086D               	movf	_Sw,w
  5562  06BE  3E03               	addlw	3
  5563  06BF  0086               	movwf	6
  5564  06C0  3001               	movlw	1	; select bank2/3
  5565  06C1  0087               	movwf	7
  5566  06C2  3F40               	moviw [0]fsr1
  5567  06C3  00AC               	movwf	??_setSw_Main
  5568  06C4  3F41               	moviw [1]fsr1
  5569  06C5  00AD               	movwf	??_setSw_Main+1
  5570  06C6  3000               	movlw	0
  5571  06C7  022D               	subwf	??_setSw_Main+1,w
  5572  06C8  3096               	movlw	150
  5573  06C9  1903               	skipnz
  5574  06CA  022C               	subwf	??_setSw_Main,w
  5575  06CB  1C03               	skipc
  5576  06CC  0008               	return
  5577                           
  5578                           ;Switch_B1.c: 170: {
  5579                           ;Switch_B1.c: 171: Sw->Hold1Time=0;
  5580  06CD  086D               	movf	_Sw,w
  5581  06CE  3E03               	addlw	3
  5582  06CF  0086               	movwf	6
  5583  06D0  3001               	movlw	1	; select bank2/3
  5584  06D1  0087               	movwf	7
  5585  06D2  3000               	movlw	0
  5586  06D3  3FC0               	movwi [0]fsr1
  5587  06D4  3FC1               	movwi [1]fsr1
  5588                           
  5589                           ;Switch_B1.c: 172: Sw->Hold1=1;
  5590  06D5  086D               	movf	_Sw,w
  5591  06D6  0086               	movwf	6
  5592  06D7  3001               	movlw	1	; select bank2/3
  5593  06D8  0087               	movwf	7
  5594  06D9  1581               	bsf	1,3
  5595                           
  5596                           ;Switch_B1.c: 175: Sw_DimmerAdjFunc(sw);
  5597  06DA  0830               	movf	setSw_Main@sw,w
  5598  06DB  3199  2157         	fcall	_Sw_DimmerAdjFunc
  5599                           
  5600                           ;Switch_B1.c: 178: }
  5601                           ;Switch_B1.c: 179: }
  5602  06DD  0008               	return
  5603  06DE                     l9601:	
  5604                           
  5605                           ;Switch_B1.c: 180: else
  5606                           ;Switch_B1.c: 181: {
  5607                           ;Switch_B1.c: 182: if(!Sw->Hold2)
  5608  06DE  0020               	movlb	0	; select bank0
  5609  06DF  086D               	movf	_Sw,w
  5610  06E0  0086               	movwf	6
  5611  06E1  3001               	movlw	1	; select bank2/3
  5612  06E2  0087               	movwf	7
  5613  06E3  1A01               	btfsc	1,4
  5614  06E4  2F23               	goto	l9615
  5615                           
  5616                           ;Switch_B1.c: 183: {
  5617                           ;Switch_B1.c: 184: Sw->Hold2Time++;
  5618  06E5  086D               	movf	_Sw,w
  5619  06E6  3E05               	addlw	5
  5620  06E7  0086               	movwf	6
  5621  06E8  3001               	movlw	1	; select bank2/3
  5622  06E9  0087               	movwf	7
  5623  06EA  3001               	movlw	1
  5624  06EB  0781               	addwf	1,f
  5625  06EC  3141               	addfsr 1,1
  5626  06ED  1803               	skipnc
  5627  06EE  0A81               	incf	1,f
  5628                           
  5629                           ;Switch_B1.c: 185: if(Sw->Hold2Time >= 150)
  5630  06EF  086D               	movf	_Sw,w
  5631  06F0  3E05               	addlw	5
  5632  06F1  0086               	movwf	6
  5633  06F2  3001               	movlw	1	; select bank2/3
  5634  06F3  0087               	movwf	7
  5635  06F4  3F40               	moviw [0]fsr1
  5636  06F5  00AC               	movwf	??_setSw_Main
  5637  06F6  3F41               	moviw [1]fsr1
  5638  06F7  00AD               	movwf	??_setSw_Main+1
  5639  06F8  3000               	movlw	0
  5640  06F9  022D               	subwf	??_setSw_Main+1,w
  5641  06FA  3096               	movlw	150
  5642  06FB  1903               	skipnz
  5643  06FC  022C               	subwf	??_setSw_Main,w
  5644  06FD  1C03               	skipc
  5645  06FE  0008               	return
  5646                           
  5647                           ;Switch_B1.c: 186: {
  5648                           ;Switch_B1.c: 187: Sw->Hold2Time=0;
  5649  06FF  086D               	movf	_Sw,w
  5650  0700  3E05               	addlw	5
  5651  0701  0086               	movwf	6
  5652  0702  3001               	movlw	1	; select bank2/3
  5653  0703  0087               	movwf	7
  5654  0704  3000               	movlw	0
  5655  0705  3FC0               	movwi [0]fsr1
  5656  0706  3FC1               	movwi [1]fsr1
  5657                           
  5658                           ;Switch_B1.c: 188: Sw->Hold2=1;
  5659  0707  086D               	movf	_Sw,w
  5660  0708  0086               	movwf	6
  5661  0709  3001               	movlw	1	; select bank2/3
  5662  070A  0087               	movwf	7
  5663  070B  1601               	bsf	1,4
  5664                           
  5665                           ;Switch_B1.c: 192: setRF_Learn(1,1);
  5666  070C  01A2               	clrf	setRF_Learn@command
  5667  070D  0AA2               	incf	setRF_Learn@command,f
  5668  070E  3001               	movlw	1
  5669  070F  31A5  253F  3186   	fcall	_setRF_Learn
  5670                           
  5671                           ;Switch_B1.c: 194: if(TMain->First)
  5672  0712  0021               	movlb	1	; select bank1
  5673  0713  0869               	movf	_TMain^(0+128),w
  5674  0714  3E03               	addlw	3
  5675  0715  0086               	movwf	6
  5676  0716  3001               	movlw	1	; select bank2/3
  5677  0717  0087               	movwf	7
  5678  0718  1C81               	btfss	1,1
  5679  0719  0008               	return
  5680                           
  5681                           ;Switch_B1.c: 195: {
  5682                           ;Switch_B1.c: 196: setBuz(2,100);
  5683  071A  3064               	movlw	100
  5684  071B  0020               	movlb	0	; select bank0
  5685  071C  00A6               	movwf	setBuz@time
  5686  071D  3000               	movlw	0
  5687  071E  00A7               	movwf	setBuz@time+1
  5688  071F  3002               	movlw	2
  5689  0720  3193  23C3         	fcall	_setBuz
  5690                           
  5691                           ;Switch_B1.c: 197: }
  5692                           ;Switch_B1.c: 199: }
  5693                           ;Switch_B1.c: 200: }
  5694  0722  0008               	return
  5695  0723                     l9615:	
  5696                           
  5697                           ;Switch_B1.c: 201: else
  5698                           ;Switch_B1.c: 202: {
  5699                           ;Switch_B1.c: 203: if(!Sw->Hold3)
  5700  0723  0020               	movlb	0	; select bank0
  5701  0724  086D               	movf	_Sw,w
  5702  0725  0086               	movwf	6
  5703  0726  3001               	movlw	1	; select bank2/3
  5704  0727  0087               	movwf	7
  5705  0728  1A81               	btfsc	1,5
  5706  0729  0008               	return
  5707                           
  5708                           ;Switch_B1.c: 204: {
  5709                           ;Switch_B1.c: 205: Sw->Hold3Time++;
  5710  072A  086D               	movf	_Sw,w
  5711  072B  3E07               	addlw	7
  5712  072C  0086               	movwf	6
  5713  072D  3001               	movlw	1	; select bank2/3
  5714  072E  0087               	movwf	7
  5715  072F  3001               	movlw	1
  5716  0730  0781               	addwf	1,f
  5717  0731  3141               	addfsr 1,1
  5718  0732  1803               	skipnc
  5719  0733  0A81               	incf	1,f
  5720                           
  5721                           ;Switch_B1.c: 206: if(Sw->Hold3Time >= 300)
  5722  0734  086D               	movf	_Sw,w
  5723  0735  3E07               	addlw	7
  5724  0736  0086               	movwf	6
  5725  0737  3001               	movlw	1	; select bank2/3
  5726  0738  0087               	movwf	7
  5727  0739  3F40               	moviw [0]fsr1
  5728  073A  00AC               	movwf	??_setSw_Main
  5729  073B  3F41               	moviw [1]fsr1
  5730  073C  00AD               	movwf	??_setSw_Main+1
  5731  073D  3001               	movlw	1
  5732  073E  022D               	subwf	??_setSw_Main+1,w
  5733  073F  302C               	movlw	44
  5734  0740  1903               	skipnz
  5735  0741  022C               	subwf	??_setSw_Main,w
  5736  0742  1C03               	skipc
  5737  0743  0008               	return
  5738                           
  5739                           ;Switch_B1.c: 207: {
  5740                           ;Switch_B1.c: 208: Sw->Hold3Time=0;
  5741  0744  086D               	movf	_Sw,w
  5742  0745  3E07               	addlw	7
  5743  0746  0086               	movwf	6
  5744  0747  3001               	movlw	1	; select bank2/3
  5745  0748  0087               	movwf	7
  5746  0749  3000               	movlw	0
  5747  074A  3FC0               	movwi [0]fsr1
  5748  074B  3FC1               	movwi [1]fsr1
  5749                           
  5750                           ;Switch_B1.c: 209: Sw->Hold3=1;
  5751  074C  086D               	movf	_Sw,w
  5752  074D  0086               	movwf	6
  5753  074E  3001               	movlw	1	; select bank2/3
  5754  074F  0087               	movwf	7
  5755  0750  1681               	bsf	1,5
  5756                           
  5757                           ;Switch_B1.c: 212: setRF_Learn(1,0);
  5758  0751  01A2               	clrf	setRF_Learn@command
  5759  0752  3001               	movlw	1
  5760  0753  31A5  253F         	fcall	_setRF_Learn
  5761                           
  5762                           ;Switch_B1.c: 215: }
  5763                           ;Switch_B1.c: 216: }
  5764                           ;Switch_B1.c: 217: }
  5765                           ;Switch_B1.c: 218: }
  5766                           ;Switch_B1.c: 219: }
  5767                           ;Switch_B1.c: 220: }
  5768  0755  0008               	return
  5769  0756                     l9625:	
  5770                           
  5771                           ;Switch_B1.c: 221: else
  5772                           ;Switch_B1.c: 222: {
  5773                           ;Switch_B1.c: 223: if(Sw->Debounce)
  5774  0756  0020               	movlb	0	; select bank0
  5775  0757  086D               	movf	_Sw,w
  5776  0758  0086               	movwf	6
  5777  0759  3001               	movlw	1	; select bank2/3
  5778  075A  0087               	movwf	7
  5779  075B  1D01               	btfss	1,2
  5780  075C  0008               	return
  5781                           
  5782                           ;Switch_B1.c: 224: {
  5783                           ;Switch_B1.c: 225: Sw->DebounceTime++;
  5784  075D  3001               	movlw	1
  5785  075E  00AC               	movwf	??_setSw_Main
  5786  075F  086D               	movf	_Sw,w
  5787  0760  3E02               	addlw	2
  5788  0761  0086               	movwf	6
  5789  0762  3001               	movlw	1	; select bank2/3
  5790  0763  0087               	movwf	7
  5791  0764  082C               	movf	??_setSw_Main,w
  5792  0765  0781               	addwf	1,f
  5793                           
  5794                           ;Switch_B1.c: 226: if(Sw->DebounceTime >= 5)
  5795  0766  086D               	movf	_Sw,w
  5796  0767  3E02               	addlw	2
  5797  0768  0086               	movwf	6
  5798  0769  3001               	movlw	1	; select bank2/3
  5799  076A  0087               	movwf	7
  5800  076B  3005               	movlw	5
  5801  076C  0201               	subwf	1,w
  5802  076D  1C03               	skipc
  5803  076E  0008               	return
  5804                           
  5805                           ;Switch_B1.c: 227: {
  5806                           ;Switch_B1.c: 228: Sw->DebounceTime=0;
  5807  076F  086D               	movf	_Sw,w
  5808  0770  3E02               	addlw	2
  5809  0771  0086               	movwf	6
  5810  0772  3001               	movlw	1	; select bank2/3
  5811  0773  0087               	movwf	7
  5812  0774  0181               	clrf	1
  5813                           
  5814                           ;Switch_B1.c: 229: Sw->Debounce=0;
  5815  0775  086D               	movf	_Sw,w
  5816  0776  0086               	movwf	6
  5817  0777  3001               	movlw	1	; select bank2/3
  5818  0778  0087               	movwf	7
  5819  0779  1101               	bcf	1,2
  5820                           
  5821                           ;Switch_B1.c: 230: Sw->Hold1Time=0;
  5822  077A  086D               	movf	_Sw,w
  5823  077B  3E03               	addlw	3
  5824  077C  0086               	movwf	6
  5825  077D  3001               	movlw	1	; select bank2/3
  5826  077E  0087               	movwf	7
  5827  077F  3000               	movlw	0
  5828  0780  3FC0               	movwi [0]fsr1
  5829  0781  3FC1               	movwi [1]fsr1
  5830                           
  5831                           ;Switch_B1.c: 231: Sw->Hold1=0;
  5832  0782  086D               	movf	_Sw,w
  5833  0783  0086               	movwf	6
  5834  0784  3001               	movlw	1	; select bank2/3
  5835  0785  0087               	movwf	7
  5836  0786  1181               	bcf	1,3
  5837                           
  5838                           ;Switch_B1.c: 232: Sw->Hold2Time=0;
  5839  0787  086D               	movf	_Sw,w
  5840  0788  3E05               	addlw	5
  5841  0789  0086               	movwf	6
  5842  078A  3001               	movlw	1	; select bank2/3
  5843  078B  0087               	movwf	7
  5844  078C  3000               	movlw	0
  5845  078D  3FC0               	movwi [0]fsr1
  5846  078E  3FC1               	movwi [1]fsr1
  5847                           
  5848                           ;Switch_B1.c: 233: Sw->Hold2=0;
  5849  078F  086D               	movf	_Sw,w
  5850  0790  0086               	movwf	6
  5851  0791  3001               	movlw	1	; select bank2/3
  5852  0792  0087               	movwf	7
  5853  0793  1201               	bcf	1,4
  5854                           
  5855                           ;Switch_B1.c: 234: Sw->Hold3Time=0;
  5856  0794  086D               	movf	_Sw,w
  5857  0795  3E07               	addlw	7
  5858  0796  0086               	movwf	6
  5859  0797  3001               	movlw	1	; select bank2/3
  5860  0798  0087               	movwf	7
  5861  0799  3000               	movlw	0
  5862  079A  3FC0               	movwi [0]fsr1
  5863  079B  3FC1               	movwi [1]fsr1
  5864                           
  5865                           ;Switch_B1.c: 235: Sw->Hold3=0;
  5866  079C  086D               	movf	_Sw,w
  5867  079D  0086               	movwf	6
  5868  079E  3001               	movlw	1	; select bank2/3
  5869  079F  0087               	movwf	7
  5870  07A0  1281               	bcf	1,5
  5871                           
  5872                           ;Switch_B1.c: 238: Sw_DimmerOffFunc(sw);
  5873  07A1  0830               	movf	setSw_Main@sw,w
  5874  07A2  3188  2005  3186   	fcall	_Sw_DimmerOffFunc
  5875                           
  5876                           ;Switch_B1.c: 243: setRF_Learn(1,0);
  5877  07A5  0020               	movlb	0	; select bank0
  5878  07A6  01A2               	clrf	setRF_Learn@command
  5879  07A7  3001               	movlw	1
  5880  07A8  31A5  253F         	fcall	_setRF_Learn
  5881  07AA  0008               	return
  5882  07AB                     __end_of_setSw_Main:	
  5883                           
  5884                           	psect	text12
  5885  253F                     __ptext12:	
  5886 ;; *************** function _setRF_Learn *****************
  5887 ;; Defined at:
  5888 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  rf              1    wreg     unsigned char 
  5891 ;;  command         1    2[BANK0 ] unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  rf              1    3[BANK0 ] unsigned char 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;		None               void
  5896 ;; Registers used:
  5897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5903 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;Total ram usage:        2 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    5
  5910 ;; This function calls:
  5911 ;;		_RfPointSelect
  5912 ;; This function is called by:
  5913 ;;		_setSw_Main
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _setRF_Learn
  5919  253F                     _setRF_Learn:	
  5920                           
  5921                           ;incstack = 0
  5922                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5923                           ;setRF_Learn@rf stored from wreg
  5924  253F  0020               	movlb	0	; select bank0
  5925  2540  00A3               	movwf	setRF_Learn@rf
  5926                           
  5927                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  5928  2541  0823               	movf	setRF_Learn@rf,w
  5929  2542  31A4  2468         	fcall	_RfPointSelect
  5930                           
  5931                           ;RF_Control_B1.c: 34: RF->Learn=command;
  5932  2544  087C               	movf	_RF,w
  5933  2545  0086               	movwf	6
  5934  2546  0187               	clrf	7
  5935  2547  0020               	movlb	0	; select bank0
  5936  2548  0822               	movf	setRF_Learn@command,w
  5937  2549  1301               	bcf	1,6
  5938  254A  1D03               	skipz
  5939  254B  1701               	bsf	1,6
  5940  254C  0008               	return
  5941  254D                     __end_of_setRF_Learn:	
  5942                           
  5943                           	psect	text13
  5944  12E5                     __ptext13:	
  5945 ;; *************** function _Sw_DimmerOnFunc *****************
  5946 ;; Defined at:
  5947 ;;		line 251 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  sw              1    wreg     unsigned char 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  sw              1   11[BANK0 ] unsigned char 
  5952 ;;  Idle            1   10[BANK0 ] unsigned char 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;		None               void
  5955 ;; Registers used:
  5956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;Total ram usage:        2 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    6
  5969 ;; This function calls:
  5970 ;;		_setBuz
  5971 ;;		_setDimmerLights_Switch
  5972 ;;		_setDimmerLights_Trigger
  5973 ;;		_setRFSW_Status
  5974 ;;		_setRF_DimmerLights
  5975 ;;		_setTxData
  5976 ;; This function is called by:
  5977 ;;		_setSw_Main
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           
  5982                           ;psect for function _Sw_DimmerOnFunc
  5983  12E5                     _Sw_DimmerOnFunc:	
  5984                           
  5985                           ;incstack = 0
  5986                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5987                           ;Sw_DimmerOnFunc@sw stored from wreg
  5988  12E5  0020               	movlb	0	; select bank0
  5989  12E6  00AB               	movwf	Sw_DimmerOnFunc@sw
  5990                           
  5991                           ;Switch_B1.c: 253: char Idle=1;
  5992  12E7  01AA               	clrf	Sw_DimmerOnFunc@Idle
  5993  12E8  0AAA               	incf	Sw_DimmerOnFunc@Idle,f
  5994                           
  5995                           ;Switch_B1.c: 270: if(sw == 1)
  5996  12E9  082B               	movf	Sw_DimmerOnFunc@sw,w
  5997  12EA  3A01               	xorlw	1
  5998  12EB  1D03               	skipz
  5999  12EC  2AEF               	goto	l9101
  6000                           
  6001                           ;Switch_B1.c: 271: {
  6002                           ;Switch_B1.c: 272: Idle=(DimmerLights22->AdjGo)?0:1;
  6003  12ED  087A               	movf	_DimmerLights22,w
  6004  12EE  2AF4               	goto	L3
  6005  12EF                     l9101:	
  6006                           ;Switch_B1.c: 273: }
  6007                           
  6008                           
  6009                           ;Switch_B1.c: 274: else if(sw == 2)
  6010  12EF  082B               	movf	Sw_DimmerOnFunc@sw,w
  6011  12F0  3A02               	xorlw	2
  6012  12F1  1D03               	skipz
  6013  12F2  2AFF               	goto	l9105
  6014                           
  6015                           ;Switch_B1.c: 275: {
  6016                           ;Switch_B1.c: 276: Idle=(DimmerLights11->AdjGo)?0:1;
  6017  12F3  0879               	movf	_DimmerLights11,w
  6018  12F4                     L3:	
  6019  12F4  3E09               	addlw	9
  6020  12F5  0086               	movwf	6
  6021  12F6  3001               	movlw	1	; select bank2/3
  6022  12F7  0087               	movwf	7
  6023  12F8  1003               	clrc
  6024  12F9  1D01               	btfss	1,2
  6025  12FA  1403               	setc
  6026  12FB  3000               	movlw	0
  6027  12FC  1803               	btfsc	3,0
  6028  12FD  3001               	movlw	1
  6029  12FE  00AA               	movwf	Sw_DimmerOnFunc@Idle
  6030  12FF                     l9105:	
  6031                           
  6032                           ;Switch_B1.c: 277: }
  6033                           ;Switch_B1.c: 280: if(Idle)
  6034  12FF  082A               	movf	Sw_DimmerOnFunc@Idle,w
  6035  1300  1903               	btfsc	3,2
  6036  1301  0008               	return
  6037                           
  6038                           ;Switch_B1.c: 281: {
  6039                           ;Switch_B1.c: 282: Sw->Flag=1;
  6040  1302  086D               	movf	_Sw,w
  6041  1303  0086               	movwf	6
  6042  1304  3001               	movlw	1	; select bank2/3
  6043  1305  0087               	movwf	7
  6044  1306  1781               	bsf	1,7
  6045                           
  6046                           ;Switch_B1.c: 283: setBuz(1,100);
  6047  1307  3064               	movlw	100
  6048  1308  00A6               	movwf	setBuz@time
  6049  1309  3000               	movlw	0
  6050  130A  00A7               	movwf	setBuz@time+1
  6051  130B  3001               	movlw	1
  6052  130C  3193  23C3  3192   	fcall	_setBuz
  6053                           
  6054                           ;Switch_B1.c: 284: if(!Sw->Status)
  6055  130F  0020               	movlb	0	; select bank0
  6056  1310  086D               	movf	_Sw,w
  6057  1311  0086               	movwf	6
  6058  1312  3001               	movlw	1	; select bank2/3
  6059  1313  0087               	movwf	7
  6060  1314  1B01               	btfsc	1,6
  6061  1315  2B41               	goto	l9125
  6062                           
  6063                           ;Switch_B1.c: 285: {
  6064                           ;Switch_B1.c: 286: Sw->Status=1;
  6065  1316  086D               	movf	_Sw,w
  6066  1317  0086               	movwf	6
  6067  1318  3001               	movlw	1	; select bank2/3
  6068  1319  0087               	movwf	7
  6069  131A  1701               	bsf	1,6
  6070                           
  6071                           ;Switch_B1.c: 287: setRFSW_Status(sw,1);
  6072  131B  01A2               	clrf	setRFSW_Status@command
  6073  131C  0AA2               	incf	setRFSW_Status@command,f
  6074  131D  082B               	movf	Sw_DimmerOnFunc@sw,w
  6075  131E  31A5  254D  3192   	fcall	_setRFSW_Status
  6076                           
  6077                           ;Switch_B1.c: 289: setDimmerLights_Trigger(sw,1);
  6078  1321  0020               	movlb	0	; select bank0
  6079  1322  01A2               	clrf	setDimmerLights_Trigger@command
  6080  1323  0AA2               	incf	setDimmerLights_Trigger@command,f
  6081  1324  082B               	movf	Sw_DimmerOnFunc@sw,w
  6082  1325  31A5  258B  3192   	fcall	_setDimmerLights_Trigger
  6083                           
  6084                           ;Switch_B1.c: 290: setDimmerLights_Switch(sw,1);
  6085  1328  0020               	movlb	0	; select bank0
  6086  1329  01A2               	clrf	setDimmerLights_Switch@command
  6087  132A  0AA2               	incf	setDimmerLights_Switch@command,f
  6088  132B  082B               	movf	Sw_DimmerOnFunc@sw,w
  6089  132C  31A5  257B  3192   	fcall	_setDimmerLights_Switch
  6090                           
  6091                           ;Switch_B1.c: 292: setRF_DimmerLights(sw,Sw->Status);
  6092  132F  0020               	movlb	0	; select bank0
  6093  1330  086D               	movf	_Sw,w
  6094  1331  0086               	movwf	6
  6095  1332  3001               	movlw	1	; select bank2/3
  6096  1333  0087               	movwf	7
  6097  1334  3000               	movlw	0
  6098  1335  1B01               	btfsc	1,6
  6099  1336  3001               	movlw	1
  6100  1337  00A0               	movwf	setRF_DimmerLights@on
  6101  1338  082B               	movf	Sw_DimmerOnFunc@sw,w
  6102  1339  319F  274A  3192   	fcall	_setRF_DimmerLights
  6103                           
  6104                           ;Switch_B1.c: 293: setTxData(1);
  6105  133C  3001               	movlw	1
  6106  133D  318B  2314         	fcall	_setTxData
  6107                           
  6108                           ;Switch_B1.c: 294: }
  6109  133F  0020               	movlb	0	; select bank0
  6110  1340  0008               	return
  6111  1341                     l9125:	
  6112                           
  6113                           ;Switch_B1.c: 295: else
  6114                           ;Switch_B1.c: 296: {
  6115                           ;Switch_B1.c: 297: Sw->Status=0;
  6116  1341  0020               	movlb	0	; select bank0
  6117  1342  086D               	movf	_Sw,w
  6118  1343  0086               	movwf	6
  6119  1344  3001               	movlw	1	; select bank2/3
  6120  1345  0087               	movwf	7
  6121  1346  1301               	bcf	1,6
  6122                           
  6123                           ;Switch_B1.c: 298: setRFSW_Status(sw,Sw->Status);
  6124  1347  086D               	movf	_Sw,w
  6125  1348  0086               	movwf	6
  6126  1349  3001               	movlw	1	; select bank2/3
  6127  134A  0087               	movwf	7
  6128  134B  3000               	movlw	0
  6129  134C  1B01               	btfsc	1,6
  6130  134D  3001               	movlw	1
  6131  134E  00A2               	movwf	setRFSW_Status@command
  6132  134F  082B               	movf	Sw_DimmerOnFunc@sw,w
  6133  1350  31A5  254D         	fcall	_setRFSW_Status
  6134  1352  0020               	movlb	0	; select bank0
  6135  1353  0008               	return
  6136  1354                     __end_of_Sw_DimmerOnFunc:	
  6137                           
  6138                           	psect	text14
  6139  0805                     __ptext14:	
  6140 ;; *************** function _Sw_DimmerOffFunc *****************
  6141 ;; Defined at:
  6142 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  sw              1    wreg     unsigned char 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  sw              1   10[BANK0 ] unsigned char 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;		None               void
  6149 ;; Registers used:
  6150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;Total ram usage:        3 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    6
  6163 ;; This function calls:
  6164 ;;		_setDelayOff_GO
  6165 ;;		_setDimmerLights_AdjGo
  6166 ;;		_setDimmerLights_Switch
  6167 ;;		_setDimmerLights_Trigger
  6168 ;;		_setDimmerLights_TriggerAdj
  6169 ;;		_setRF_DimmerLights
  6170 ;;		_setTxData
  6171 ;; This function is called by:
  6172 ;;		_setSw_Main
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           
  6177                           ;psect for function _Sw_DimmerOffFunc
  6178  0805                     _Sw_DimmerOffFunc:	
  6179                           
  6180                           ;incstack = 0
  6181                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6182                           ;Sw_DimmerOffFunc@sw stored from wreg
  6183  0805  0020               	movlb	0	; select bank0
  6184  0806  00AA               	movwf	Sw_DimmerOffFunc@sw
  6185                           
  6186                           ;Switch_B1.c: 305: if(Sw->Flag)
  6187  0807  086D               	movf	_Sw,w
  6188  0808  0086               	movwf	6
  6189  0809  3001               	movlw	1	; select bank2/3
  6190  080A  0087               	movwf	7
  6191  080B  1F81               	btfss	1,7
  6192  080C  0008               	return
  6193                           
  6194                           ;Switch_B1.c: 306: {
  6195                           ;Switch_B1.c: 307: Sw->Flag=0;
  6196  080D  086D               	movf	_Sw,w
  6197  080E  0086               	movwf	6
  6198  080F  3001               	movlw	1	; select bank2/3
  6199  0810  0087               	movwf	7
  6200  0811  1381               	bcf	1,7
  6201                           
  6202                           ;Switch_B1.c: 308: if(Sw->Status)
  6203  0812  086D               	movf	_Sw,w
  6204  0813  0086               	movwf	6
  6205  0814  3001               	movlw	1	; select bank2/3
  6206  0815  0087               	movwf	7
  6207  0816  1F01               	btfss	1,6
  6208  0817  2851               	goto	l9157
  6209                           
  6210                           ;Switch_B1.c: 309: {
  6211                           ;Switch_B1.c: 310: if(Sw->Adj)
  6212  0818  0A6D               	incf	_Sw,w
  6213  0819  0086               	movwf	6
  6214  081A  3001               	movlw	1	; select bank2/3
  6215  081B  0087               	movwf	7
  6216  081C  1C01               	btfss	1,0
  6217  081D  0008               	return
  6218                           
  6219                           ;Switch_B1.c: 311: {
  6220                           ;Switch_B1.c: 312: Sw->Adj=0;
  6221  081E  0A6D               	incf	_Sw,w
  6222  081F  0086               	movwf	6
  6223  0820  3001               	movlw	1	; select bank2/3
  6224  0821  0087               	movwf	7
  6225  0822  1001               	bcf	1,0
  6226                           
  6227                           ;Switch_B1.c: 313: setDimmerLights_TriggerAdj(sw,1);
  6228  0823  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6229  0824  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6230  0825  082A               	movf	Sw_DimmerOffFunc@sw,w
  6231  0826  31A5  25DB  3188   	fcall	_setDimmerLights_TriggerAdj
  6232                           
  6233                           ;Switch_B1.c: 314: setDimmerLights_AdjGo(sw,0);
  6234  0829  0020               	movlb	0	; select bank0
  6235  082A  01A2               	clrf	setDimmerLights_AdjGo@command
  6236  082B  082A               	movf	Sw_DimmerOffFunc@sw,w
  6237  082C  31A5  25CB  3188   	fcall	_setDimmerLights_AdjGo
  6238                           
  6239                           ;Switch_B1.c: 316: Product->Data[17]=Product->Data[26+sw];
  6240  082F  0020               	movlb	0	; select bank0
  6241  0830  082A               	movf	Sw_DimmerOffFunc@sw,w
  6242  0831  3E1A               	addlw	26
  6243  0832  076F               	addwf	_Product,w
  6244  0833  00A8               	movwf	??_Sw_DimmerOffFunc
  6245  0834  0828               	movf	??_Sw_DimmerOffFunc,w
  6246  0835  0086               	movwf	6
  6247  0836  3001               	movlw	1	; select bank2/3
  6248  0837  0087               	movwf	7
  6249  0838  0801               	movf	1,w
  6250  0839  00A9               	movwf	??_Sw_DimmerOffFunc+1
  6251  083A  086F               	movf	_Product,w
  6252  083B  3E11               	addlw	17
  6253  083C  0086               	movwf	6
  6254  083D  3001               	movlw	1	; select bank2/3
  6255  083E  0087               	movwf	7
  6256  083F  0829               	movf	??_Sw_DimmerOffFunc+1,w
  6257  0840  0081               	movwf	1
  6258                           
  6259                           ;Switch_B1.c: 317: setRF_DimmerLights(sw,Sw->Status);
  6260  0841  086D               	movf	_Sw,w
  6261  0842  0086               	movwf	6
  6262  0843  3001               	movlw	1	; select bank2/3
  6263  0844  0087               	movwf	7
  6264  0845  3000               	movlw	0
  6265  0846  1B01               	btfsc	1,6
  6266  0847  3001               	movlw	1
  6267  0848  00A0               	movwf	setRF_DimmerLights@on
  6268  0849  082A               	movf	Sw_DimmerOffFunc@sw,w
  6269  084A  319F  274A  3188   	fcall	_setRF_DimmerLights
  6270                           
  6271                           ;Switch_B1.c: 318: setTxData(1);
  6272  084D  3001               	movlw	1
  6273  084E  318B  2314         	fcall	_setTxData
  6274                           
  6275                           ;Switch_B1.c: 320: }
  6276                           ;Switch_B1.c: 321: }
  6277  0850  0008               	return
  6278  0851                     l9157:	
  6279                           
  6280                           ;Switch_B1.c: 322: else
  6281                           ;Switch_B1.c: 323: {
  6282                           ;Switch_B1.c: 324: setDimmerLights_Trigger(sw,1);
  6283  0851  0020               	movlb	0	; select bank0
  6284  0852  01A2               	clrf	setDimmerLights_Trigger@command
  6285  0853  0AA2               	incf	setDimmerLights_Trigger@command,f
  6286  0854  082A               	movf	Sw_DimmerOffFunc@sw,w
  6287  0855  31A5  258B  3188   	fcall	_setDimmerLights_Trigger
  6288                           
  6289                           ;Switch_B1.c: 325: setDimmerLights_Switch(sw,0);
  6290  0858  0020               	movlb	0	; select bank0
  6291  0859  01A2               	clrf	setDimmerLights_Switch@command
  6292  085A  082A               	movf	Sw_DimmerOffFunc@sw,w
  6293  085B  31A5  257B  3188   	fcall	_setDimmerLights_Switch
  6294                           
  6295                           ;Switch_B1.c: 327: setDelayOff_GO(sw,0,0);
  6296  085E  0020               	movlb	0	; select bank0
  6297  085F  01A3               	clrf	setDelayOff_GO@command
  6298  0860  01A4               	clrf	setDelayOff_GO@value
  6299  0861  082A               	movf	Sw_DimmerOffFunc@sw,w
  6300  0862  3190  2027  3188   	fcall	_setDelayOff_GO
  6301                           
  6302                           ;Switch_B1.c: 328: setRF_DimmerLights(sw,Sw->Status);
  6303  0865  0020               	movlb	0	; select bank0
  6304  0866  086D               	movf	_Sw,w
  6305  0867  0086               	movwf	6
  6306  0868  3001               	movlw	1	; select bank2/3
  6307  0869  0087               	movwf	7
  6308  086A  3000               	movlw	0
  6309  086B  1B01               	btfsc	1,6
  6310  086C  3001               	movlw	1
  6311  086D  00A0               	movwf	setRF_DimmerLights@on
  6312  086E  082A               	movf	Sw_DimmerOffFunc@sw,w
  6313  086F  319F  274A  3188   	fcall	_setRF_DimmerLights
  6314                           
  6315                           ;Switch_B1.c: 329: setTxData(1);
  6316  0872  3001               	movlw	1
  6317  0873  318B  2314         	fcall	_setTxData
  6318  0875  0008               	return
  6319  0876                     __end_of_Sw_DimmerOffFunc:	
  6320                           
  6321                           	psect	text15
  6322  1957                     __ptext15:	
  6323 ;; *************** function _Sw_DimmerAdjFunc *****************
  6324 ;; Defined at:
  6325 ;;		line 334 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  sw              1    wreg     unsigned char 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  sw              1    4[BANK0 ] unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;		None               void
  6332 ;; Registers used:
  6333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;Total ram usage:        1 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    6
  6346 ;; This function calls:
  6347 ;;		_setDimmerLights_AdjGo
  6348 ;;		_setDimmerLights_TriggerAdj
  6349 ;;		_setRFSW_Status
  6350 ;; This function is called by:
  6351 ;;		_setSw_Main
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function _Sw_DimmerAdjFunc
  6357  1957                     _Sw_DimmerAdjFunc:	
  6358                           
  6359                           ;incstack = 0
  6360                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6361                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6362  1957  0020               	movlb	0	; select bank0
  6363  1958  00A4               	movwf	Sw_DimmerAdjFunc@sw
  6364                           
  6365                           ;Switch_B1.c: 336: if(Sw->Flag)
  6366  1959  086D               	movf	_Sw,w
  6367  195A  0086               	movwf	6
  6368  195B  3001               	movlw	1	; select bank2/3
  6369  195C  0087               	movwf	7
  6370  195D  1F81               	btfss	1,7
  6371  195E  0008               	return
  6372                           
  6373                           ;Switch_B1.c: 337: {
  6374                           ;Switch_B1.c: 338: Sw->Adj=1;
  6375  195F  0A6D               	incf	_Sw,w
  6376  1960  0086               	movwf	6
  6377  1961  3001               	movlw	1	; select bank2/3
  6378  1962  0087               	movwf	7
  6379  1963  1401               	bsf	1,0
  6380                           
  6381                           ;Switch_B1.c: 339: Sw->Status=1;
  6382  1964  086D               	movf	_Sw,w
  6383  1965  0086               	movwf	6
  6384  1966  3001               	movlw	1	; select bank2/3
  6385  1967  0087               	movwf	7
  6386  1968  1701               	bsf	1,6
  6387                           
  6388                           ;Switch_B1.c: 340: setRFSW_Status(sw,1);
  6389  1969  01A2               	clrf	setRFSW_Status@command
  6390  196A  0AA2               	incf	setRFSW_Status@command,f
  6391  196B  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6392  196C  31A5  254D  3199   	fcall	_setRFSW_Status
  6393                           
  6394                           ;Switch_B1.c: 342: setDimmerLights_TriggerAdj(sw,1);
  6395  196F  0020               	movlb	0	; select bank0
  6396  1970  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6397  1971  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6398  1972  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6399  1973  31A5  25DB  3199   	fcall	_setDimmerLights_TriggerAdj
  6400                           
  6401                           ;Switch_B1.c: 343: setDimmerLights_AdjGo(sw,1);
  6402  1976  0020               	movlb	0	; select bank0
  6403  1977  01A2               	clrf	setDimmerLights_AdjGo@command
  6404  1978  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6405  1979  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6406  197A  31A5  25CB         	fcall	_setDimmerLights_AdjGo
  6407  197C  0008               	return
  6408  197D                     __end_of_Sw_DimmerAdjFunc:	
  6409                           
  6410                           	psect	text16
  6411  25DB                     __ptext16:	
  6412 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6413 ;; Defined at:
  6414 ;;		line 437 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  lights          1    wreg     unsigned char 
  6417 ;;  command         1    2[BANK0 ] unsigned char 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  lights          1    3[BANK0 ] unsigned char 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;		None               void
  6422 ;; Registers used:
  6423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6429 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;Total ram usage:        2 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    5
  6436 ;; This function calls:
  6437 ;;		_DimmerLightsPointSelect
  6438 ;; This function is called by:
  6439 ;;		_Sw_DimmerOffFunc
  6440 ;;		_Sw_DimmerAdjFunc
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           
  6445                           ;psect for function _setDimmerLights_TriggerAdj
  6446  25DB                     _setDimmerLights_TriggerAdj:	
  6447                           
  6448                           ;incstack = 0
  6449                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6450                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6451  25DB  0020               	movlb	0	; select bank0
  6452  25DC  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6453                           
  6454                           ;Dimmer_B1.c: 439: DimmerLightsPointSelect(lights);
  6455  25DD  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6456  25DE  31A5  25FC         	fcall	_DimmerLightsPointSelect
  6457                           
  6458                           ;Dimmer_B1.c: 440: DimmerLights->TriggerAdj=command;
  6459  25E0  0020               	movlb	0	; select bank0
  6460  25E1  086C               	movf	_DimmerLights,w
  6461  25E2  3E09               	addlw	9
  6462  25E3  0086               	movwf	6
  6463  25E4  3001               	movlw	1	; select bank2/3
  6464  25E5  0087               	movwf	7
  6465  25E6  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6466  25E7  1181               	bcf	1,3
  6467  25E8  1D03               	skipz
  6468  25E9  1581               	bsf	1,3
  6469  25EA  0008               	return
  6470  25EB                     __end_of_setDimmerLights_TriggerAdj:	
  6471                           
  6472                           	psect	text17
  6473  25CB                     __ptext17:	
  6474 ;; *************** function _setDimmerLights_AdjGo *****************
  6475 ;; Defined at:
  6476 ;;		line 427 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  lights          1    wreg     unsigned char 
  6479 ;;  command         1    2[BANK0 ] unsigned char 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  lights          1    3[BANK0 ] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;		None               void
  6484 ;; Registers used:
  6485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6491 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;Total ram usage:        2 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    5
  6498 ;; This function calls:
  6499 ;;		_DimmerLightsPointSelect
  6500 ;; This function is called by:
  6501 ;;		_Sw_DimmerOffFunc
  6502 ;;		_Sw_DimmerAdjFunc
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           
  6507                           ;psect for function _setDimmerLights_AdjGo
  6508  25CB                     _setDimmerLights_AdjGo:	
  6509                           
  6510                           ;incstack = 0
  6511                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6512                           ;setDimmerLights_AdjGo@lights stored from wreg
  6513  25CB  0020               	movlb	0	; select bank0
  6514  25CC  00A3               	movwf	setDimmerLights_AdjGo@lights
  6515                           
  6516                           ;Dimmer_B1.c: 429: DimmerLightsPointSelect(lights);
  6517  25CD  0823               	movf	setDimmerLights_AdjGo@lights,w
  6518  25CE  31A5  25FC         	fcall	_DimmerLightsPointSelect
  6519                           
  6520                           ;Dimmer_B1.c: 430: DimmerLights->AdjGo=command;
  6521  25D0  0020               	movlb	0	; select bank0
  6522  25D1  086C               	movf	_DimmerLights,w
  6523  25D2  3E09               	addlw	9
  6524  25D3  0086               	movwf	6
  6525  25D4  3001               	movlw	1	; select bank2/3
  6526  25D5  0087               	movwf	7
  6527  25D6  0822               	movf	setDimmerLights_AdjGo@command,w
  6528  25D7  1101               	bcf	1,2
  6529  25D8  1D03               	skipz
  6530  25D9  1501               	bsf	1,2
  6531  25DA  0008               	return
  6532  25DB                     __end_of_setDimmerLights_AdjGo:	
  6533                           
  6534                           	psect	text18
  6535  2524                     __ptext18:	
  6536 ;; *************** function _Switch_Initialization *****************
  6537 ;; Defined at:
  6538 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;		None               void
  6545 ;; Registers used:
  6546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    7
  6559 ;; This function calls:
  6560 ;;		_TouchPower
  6561 ;;		_setSw_Initialization
  6562 ;; This function is called by:
  6563 ;;		_main
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           
  6568                           ;psect for function _Switch_Initialization
  6569  2524                     _Switch_Initialization:	
  6570                           
  6571                           ;Switch_B1.c: 40: TouchPower();
  6572                           
  6573                           ;incstack = 0
  6574                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6575  2524  3188  2000  31A5   	fcall	_TouchPower
  6576                           
  6577                           ;Switch_B1.c: 42: WPUB1=0;
  6578  2527  0024               	movlb	4	; select bank4
  6579  2528  108D               	bcf	13,1	;volatile
  6580                           
  6581                           ;Switch_B1.c: 51: setSw_Initialization(1);
  6582  2529  3001               	movlw	1
  6583  252A  31A4  2426  31A5   	fcall	_setSw_Initialization
  6584                           
  6585                           ;Switch_B1.c: 54: setSw_Initialization(2);
  6586  252D  3002               	movlw	2
  6587  252E  31A4  2426         	fcall	_setSw_Initialization
  6588  2530  0008               	return
  6589  2531                     __end_of_Switch_Initialization:	
  6590                           
  6591                           	psect	text19
  6592  2426                     __ptext19:	
  6593 ;; *************** function _setSw_Initialization *****************
  6594 ;; Defined at:
  6595 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  sw              1    wreg     unsigned char 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  sw              1    4[BANK0 ] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;		None               void
  6602 ;; Registers used:
  6603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;Total ram usage:        1 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:    6
  6616 ;; This function calls:
  6617 ;;		_setLED
  6618 ;; This function is called by:
  6619 ;;		_Switch_Initialization
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           
  6624                           ;psect for function _setSw_Initialization
  6625  2426                     _setSw_Initialization:	
  6626                           
  6627                           ;incstack = 0
  6628                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6629                           ;setSw_Initialization@sw stored from wreg
  6630  2426  0020               	movlb	0	; select bank0
  6631  2427  00A4               	movwf	setSw_Initialization@sw
  6632                           
  6633                           ;Switch_B1.c: 80: setLED(sw,1);
  6634  2428  01A2               	clrf	setLED@command
  6635  2429  0AA2               	incf	setLED@command,f
  6636  242A  0824               	movf	setSw_Initialization@sw,w
  6637  242B  3190  2083         	fcall	_setLED
  6638  242D  0008               	return
  6639  242E                     __end_of_setSw_Initialization:	
  6640                           
  6641                           	psect	text20
  6642  0800                     __ptext20:	
  6643 ;; *************** function _TouchPower *****************
  6644 ;; Defined at:
  6645 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;		None
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;		None               void
  6652 ;; Registers used:
  6653 ;;		None
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;Total ram usage:        0 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    4
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_Switch_Initialization
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           
  6674                           ;psect for function _TouchPower
  6675  0800                     _TouchPower:	
  6676  0800                     l2917:	
  6677                           ;Switch_B1.c: 11: while(!RC5)
  6678                           
  6679                           ;incstack = 0
  6680                           ; Regs used in _TouchPower: []
  6681                           
  6682  0800  0020               	movlb	0	; select bank0
  6683  0801  1A8E               	btfsc	14,5	;volatile
  6684  0802  0008               	return
  6685                           
  6686                           ;Switch_B1.c: 12: RC5=1;
  6687  0803  168E               	bsf	14,5	;volatile
  6688  0804  2800               	goto	l2917
  6689  0805                     __end_of_TouchPower:	
  6690                           
  6691                           	psect	text21
  6692  23DC                     __ptext21:	
  6693 ;; *************** function _RF_Main *****************
  6694 ;; Defined at:
  6695 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;		None
  6700 ;; Return value:  Size  Location     Type
  6701 ;;		None               void
  6702 ;; Registers used:
  6703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;Total ram usage:        0 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:   13
  6716 ;; This function calls:
  6717 ;;		_setRF_Main
  6718 ;; This function is called by:
  6719 ;;		_main
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           
  6724                           ;psect for function _RF_Main
  6725  23DC                     _RF_Main:	
  6726                           
  6727                           ;RF_Control_B1.c: 27: setRF_Main(1);
  6728                           
  6729                           ;incstack = 0
  6730                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6731  23DC  3001               	movlw	1
  6732  23DD  3195  25BF         	fcall	_setRF_Main
  6733  23DF  0008               	return
  6734  23E0                     __end_of_RF_Main:	
  6735                           
  6736                           	psect	text22
  6737  15BF                     __ptext22:	
  6738 ;; *************** function _setRF_Main *****************
  6739 ;; Defined at:
  6740 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  rf              1    wreg     unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  rf              1   74[BANK0 ] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;		None               void
  6747 ;; Registers used:
  6748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;Total ram usage:        3 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:   12
  6761 ;; This function calls:
  6762 ;;		_CC2500_RxData
  6763 ;;		_CC2500_TxData
  6764 ;;		_CC2500_WriteCommand
  6765 ;;		_RF_RxDisable
  6766 ;;		_RfPointSelect
  6767 ;;		_getRxData
  6768 ;;		_setINT_GO
  6769 ;; This function is called by:
  6770 ;;		_RF_Main
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           
  6775                           ;psect for function _setRF_Main
  6776  15BF                     _setRF_Main:	
  6777                           
  6778                           ;incstack = 0
  6779                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6780                           ;setRF_Main@rf stored from wreg
  6781  15BF  0020               	movlb	0	; select bank0
  6782  15C0  00EA               	movwf	setRF_Main@rf
  6783                           
  6784                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  6785  15C1  086A               	movf	setRF_Main@rf,w
  6786  15C2  31A4  2468  3195   	fcall	_RfPointSelect
  6787                           
  6788                           ;RF_Control_B1.c: 61: if(RF->Enable)
  6789  15C5  087C               	movf	_RF,w
  6790  15C6  0086               	movwf	6
  6791  15C7  0187               	clrf	7
  6792  15C8  1C01               	btfss	1,0
  6793  15C9  0008               	return
  6794                           
  6795                           ;RF_Control_B1.c: 62: {
  6796                           ;RF_Control_B1.c: 68: RF->Key=((RA6 || RA4 || RA0 || RB1 ) && !RF->Learn)?1:0;
  6797  15CA  0020               	movlb	0	; select bank0
  6798  15CB  01EB               	clrf	_setRF_Main$4352
  6799  15CC  1F0C               	btfss	12,6	;volatile
  6800  15CD  1A0C               	btfsc	12,4	;volatile
  6801  15CE  2DD3               	goto	l9503
  6802  15CF  180C               	btfsc	12,0	;volatile
  6803  15D0  2DD3               	goto	l9503
  6804  15D1  1C8D               	btfss	13,1	;volatile
  6805  15D2  2DDA               	goto	l9507
  6806  15D3                     l9503:	
  6807  15D3  087C               	movf	_RF,w
  6808  15D4  0086               	movwf	6
  6809  15D5  0187               	clrf	7
  6810  15D6  1B01               	btfsc	1,6
  6811  15D7  2DDA               	goto	l9507
  6812  15D8  01EB               	clrf	_setRF_Main$4352
  6813  15D9  0AEB               	incf	_setRF_Main$4352,f
  6814  15DA                     l9507:	
  6815  15DA  087C               	movf	_RF,w
  6816  15DB  0086               	movwf	6
  6817  15DC  0187               	clrf	7
  6818  15DD  086B               	movf	_setRF_Main$4352,w
  6819  15DE  1381               	bcf	1,7
  6820  15DF  1D03               	skipz
  6821  15E0  1781               	bsf	1,7
  6822                           
  6823                           ;RF_Control_B1.c: 76: if(!RF->Key)
  6824  15E1  087C               	movf	_RF,w
  6825  15E2  0086               	movwf	6
  6826  15E3  0187               	clrf	7
  6827  15E4  1B81               	btfsc	1,7
  6828  15E5  2E12               	goto	l9529
  6829                           
  6830                           ;RF_Control_B1.c: 77: {
  6831                           ;RF_Control_B1.c: 78: if(RF->ReceiveGO)
  6832  15E6  087C               	movf	_RF,w
  6833  15E7  0086               	movwf	6
  6834  15E8  0187               	clrf	7
  6835  15E9  1C81               	btfss	1,1
  6836  15EA  2DF7               	goto	l9517
  6837                           
  6838                           ;RF_Control_B1.c: 79: {
  6839                           ;RF_Control_B1.c: 80: RF->ReceiveGO=0;
  6840  15EB  087C               	movf	_RF,w
  6841  15EC  0086               	movwf	6
  6842  15ED  0187               	clrf	7
  6843  15EE  1081               	bcf	1,1
  6844                           
  6845                           ;RF_Control_B1.c: 81: CC2500_RxData();
  6846  15EF  3191  2142  3195   	fcall	_CC2500_RxData
  6847                           
  6848                           ;RF_Control_B1.c: 87: getRxData(1);
  6849  15F2  3001               	movlw	1
  6850  15F3  3187  27AB  3195   	fcall	_getRxData
  6851                           
  6852                           ;RF_Control_B1.c: 90: }
  6853  15F6  2E16               	goto	l9531
  6854  15F7                     l9517:	
  6855                           
  6856                           ;RF_Control_B1.c: 91: else
  6857                           ;RF_Control_B1.c: 92: {
  6858                           ;RF_Control_B1.c: 93: if(!RF->TransceiveGO)
  6859  15F7  087C               	movf	_RF,w
  6860  15F8  0086               	movwf	6
  6861  15F9  0187               	clrf	7
  6862  15FA  1901               	btfsc	1,2
  6863  15FB  2E16               	goto	l9531
  6864                           
  6865                           ;RF_Control_B1.c: 94: {
  6866                           ;RF_Control_B1.c: 96: if(!RF->RxStatus)
  6867  15FC  087C               	movf	_RF,w
  6868  15FD  0086               	movwf	6
  6869  15FE  0187               	clrf	7
  6870  15FF  1981               	btfsc	1,3
  6871  1600  2E16               	goto	l9531
  6872                           
  6873                           ;RF_Control_B1.c: 97: {
  6874                           ;RF_Control_B1.c: 98: RF->RxStatus=1;
  6875  1601  087C               	movf	_RF,w
  6876  1602  0086               	movwf	6
  6877  1603  0187               	clrf	7
  6878  1604  1581               	bsf	1,3
  6879                           
  6880                           ;RF_Control_B1.c: 99: CC2500_WriteCommand(0x36);
  6881  1605  3036               	movlw	54
  6882  1606  31A5  256B  3195   	fcall	_CC2500_WriteCommand
  6883                           
  6884                           ;RF_Control_B1.c: 100: CC2500_WriteCommand(0x34);
  6885  1609  3034               	movlw	52
  6886  160A  31A5  256B  3195   	fcall	_CC2500_WriteCommand
  6887                           
  6888                           ;RF_Control_B1.c: 101: setINT_GO(1);
  6889  160D  3001               	movlw	1
  6890  160E  31A4  243F  3195   	fcall	_setINT_GO
  6891                           
  6892                           ;RF_Control_B1.c: 102: }
  6893                           ;RF_Control_B1.c: 104: }
  6894                           ;RF_Control_B1.c: 105: }
  6895                           ;RF_Control_B1.c: 106: }
  6896  1611  2E16               	goto	l9531
  6897  1612                     l9529:	
  6898                           
  6899                           ;RF_Control_B1.c: 107: else
  6900                           ;RF_Control_B1.c: 108: {
  6901                           ;RF_Control_B1.c: 109: RF_RxDisable(1);
  6902  1612  3001               	movlw	1
  6903  1613  3190  2000  3195   	fcall	_RF_RxDisable
  6904  1616                     l9531:	
  6905                           
  6906                           ;RF_Control_B1.c: 110: }
  6907                           ;RF_Control_B1.c: 111: if(RF->TransceiveGO)
  6908  1616  087C               	movf	_RF,w
  6909  1617  0086               	movwf	6
  6910  1618  0187               	clrf	7
  6911  1619  1D01               	btfss	1,2
  6912  161A  0008               	return
  6913                           
  6914                           ;RF_Control_B1.c: 112: {
  6915                           ;RF_Control_B1.c: 113: RF_RxDisable(1);
  6916  161B  3001               	movlw	1
  6917  161C  3190  2000  3195   	fcall	_RF_RxDisable
  6918                           
  6919                           ;RF_Control_B1.c: 114: if(!RF->Debounce)
  6920  161F  087C               	movf	_RF,w
  6921  1620  0086               	movwf	6
  6922  1621  0187               	clrf	7
  6923  1622  1A81               	btfsc	1,5
  6924  1623  2E3C               	goto	l9545
  6925                           
  6926                           ;RF_Control_B1.c: 115: {
  6927                           ;RF_Control_B1.c: 116: RF->DebounceTime++;
  6928  1624  3001               	movlw	1
  6929  1625  0020               	movlb	0	; select bank0
  6930  1626  00E9               	movwf	??_setRF_Main
  6931  1627  0A7C               	incf	_RF,w
  6932  1628  0086               	movwf	6
  6933  1629  0187               	clrf	7
  6934  162A  0869               	movf	??_setRF_Main,w
  6935  162B  0781               	addwf	1,f
  6936                           
  6937                           ;RF_Control_B1.c: 117: if(RF->DebounceTime == 25)
  6938  162C  0A7C               	incf	_RF,w
  6939  162D  0086               	movwf	6
  6940  162E  0187               	clrf	7
  6941  162F  0801               	movf	1,w
  6942  1630  3A19               	xorlw	25
  6943  1631  1D03               	skipz
  6944  1632  0008               	return
  6945                           
  6946                           ;RF_Control_B1.c: 118: {
  6947                           ;RF_Control_B1.c: 119: RF->DebounceTime=0;
  6948  1633  0A7C               	incf	_RF,w
  6949  1634  0086               	movwf	6
  6950  1635  0187               	clrf	7
  6951  1636  0181               	clrf	1
  6952                           
  6953                           ;RF_Control_B1.c: 120: RF->Debounce=1;
  6954  1637  087C               	movf	_RF,w
  6955  1638  0086               	movwf	6
  6956  1639  0187               	clrf	7
  6957  163A  1681               	bsf	1,5
  6958                           
  6959                           ;RF_Control_B1.c: 121: }
  6960                           ;RF_Control_B1.c: 122: }
  6961  163B  0008               	return
  6962  163C                     l9545:	
  6963                           
  6964                           ;RF_Control_B1.c: 123: else
  6965                           ;RF_Control_B1.c: 124: {
  6966                           ;RF_Control_B1.c: 125: RF->Debounce=0;
  6967  163C  087C               	movf	_RF,w
  6968  163D  0086               	movwf	6
  6969  163E  0187               	clrf	7
  6970  163F  1281               	bcf	1,5
  6971                           
  6972                           ;RF_Control_B1.c: 126: RF->TransceiveGO=0;
  6973  1640  087C               	movf	_RF,w
  6974  1641  0086               	movwf	6
  6975  1642  0187               	clrf	7
  6976  1643  1101               	bcf	1,2
  6977                           
  6978                           ;RF_Control_B1.c: 127: CC2500_TxData();
  6979  1644  319D  2591         	fcall	_CC2500_TxData
  6980  1646  0008               	return
  6981  1647                     __end_of_setRF_Main:	
  6982                           
  6983                           	psect	text23
  6984  07AB                     __ptext23:	
  6985 ;; *************** function _getRxData *****************
  6986 ;; Defined at:
  6987 ;;		line 207 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  rf              1    wreg     unsigned char 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  rf              1   72[BANK0 ] unsigned char 
  6992 ;;  i               1    0        unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;		None               void
  6995 ;; Registers used:
  6996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;Total ram usage:        1 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:   11
  7009 ;; This function calls:
  7010 ;;		_RfPointSelect
  7011 ;;		_setControl_Lights_Table
  7012 ;;		_setLog_Code
  7013 ;; This function is called by:
  7014 ;;		_setRF_Main
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _getRxData
  7020  07AB                     _getRxData:	
  7021                           
  7022                           ;incstack = 0
  7023                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7024                           ;getRxData@rf stored from wreg
  7025  07AB  0020               	movlb	0	; select bank0
  7026  07AC  00E8               	movwf	getRxData@rf
  7027                           
  7028                           ;RF_Control_B1.c: 209: unsigned char i;
  7029                           ;RF_Control_B1.c: 210: RfPointSelect(rf);
  7030  07AD  0868               	movf	getRxData@rf,w
  7031  07AE  31A4  2468  3187   	fcall	_RfPointSelect
  7032                           
  7033                           ;RF_Control_B1.c: 211: if(RF->Learn)
  7034  07B1  087C               	movf	_RF,w
  7035  07B2  0086               	movwf	6
  7036  07B3  0187               	clrf	7
  7037  07B4  1F01               	btfss	1,6
  7038  07B5  2FC2               	goto	l9049
  7039                           
  7040                           ;RF_Control_B1.c: 212: {
  7041                           ;RF_Control_B1.c: 213: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  7042  07B6  0021               	movlb	1	; select bank1
  7043  07B7  08A0               	movf	_RF_Data^(0+128),f
  7044  07B8  1D03               	skipz
  7045  07B9  0008               	return
  7046  07BA  0821               	movf	(_RF_Data^(0+128)+1),w
  7047  07BB  3A64               	xorlw	100
  7048  07BC  1D03               	skipz
  7049  07BD  0008               	return
  7050                           
  7051                           ;RF_Control_B1.c: 214: {
  7052                           ;RF_Control_B1.c: 215: setLog_Code(1);
  7053  07BE  3001               	movlw	1
  7054  07BF  319E  2660         	fcall	_setLog_Code
  7055                           
  7056                           ;RF_Control_B1.c: 216: }
  7057                           ;RF_Control_B1.c: 217: }
  7058  07C1  0008               	return
  7059  07C2                     l9049:	
  7060                           
  7061                           ;RF_Control_B1.c: 218: else
  7062                           ;RF_Control_B1.c: 219: {
  7063                           ;RF_Control_B1.c: 220: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  7064  07C2  0021               	movlb	1	; select bank1
  7065  07C3  08A0               	movf	_RF_Data^(0+128),f
  7066  07C4  1D03               	skipz
  7067  07C5  0008               	return
  7068  07C6  0821               	movf	(_RF_Data^(0+128)+1),w
  7069  07C7  3A02               	xorlw	2
  7070  07C8  1D03               	skipz
  7071  07C9  0008               	return
  7072                           
  7073                           ;RF_Control_B1.c: 221: {
  7074                           ;RF_Control_B1.c: 222: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  7075  07CA  082C               	movf	(_RF_Data^(0+128)+12),w
  7076  07CB  3AFF               	xorlw	255
  7077  07CC  1D03               	skipz
  7078  07CD  2FD8               	goto	l9061
  7079  07CE  082D               	movf	(_RF_Data^(0+128)+13),w
  7080  07CF  3AFF               	xorlw	255
  7081  07D0  1D03               	skipz
  7082  07D1  2FD8               	goto	l9061
  7083  07D2  082E               	movf	(_RF_Data^(0+128)+14),w
  7084  07D3  3AFF               	xorlw	255
  7085  07D4  1D03               	skipz
  7086  07D5  2FD8               	goto	l9061
  7087                           
  7088                           ;RF_Control_B1.c: 223: {
  7089                           ;RF_Control_B1.c: 224: __nop();
  7090  07D6  0000               	nop
  7091                           
  7092                           ;RF_Control_B1.c: 225: }
  7093  07D7  0008               	return
  7094  07D8                     l9061:	
  7095                           
  7096                           ;RF_Control_B1.c: 226: else
  7097                           ;RF_Control_B1.c: 227: {
  7098                           ;RF_Control_B1.c: 228: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  7099  07D8  0020               	movlb	0	; select bank0
  7100  07D9  086F               	movf	_Product,w
  7101  07DA  3E0C               	addlw	12
  7102  07DB  0086               	movwf	6
  7103  07DC  3001               	movlw	1	; select bank2/3
  7104  07DD  0087               	movwf	7
  7105  07DE  0021               	movlb	1	; select bank1
  7106  07DF  082C               	movf	(_RF_Data^(0+128)+12),w
  7107  07E0  0601               	xorwf	1,w
  7108  07E1  1D03               	skipz
  7109  07E2  0008               	return
  7110  07E3  0020               	movlb	0	; select bank0
  7111  07E4  086F               	movf	_Product,w
  7112  07E5  3E0D               	addlw	13
  7113  07E6  0086               	movwf	6
  7114  07E7  3001               	movlw	1	; select bank2/3
  7115  07E8  0087               	movwf	7
  7116  07E9  0021               	movlb	1	; select bank1
  7117  07EA  082D               	movf	(_RF_Data^(0+128)+13),w
  7118  07EB  0601               	xorwf	1,w
  7119  07EC  1D03               	skipz
  7120  07ED  0008               	return
  7121  07EE  0020               	movlb	0	; select bank0
  7122  07EF  086F               	movf	_Product,w
  7123  07F0  3E0E               	addlw	14
  7124  07F1  0086               	movwf	6
  7125  07F2  3001               	movlw	1	; select bank2/3
  7126  07F3  0087               	movwf	7
  7127  07F4  0021               	movlb	1	; select bank1
  7128  07F5  082E               	movf	(_RF_Data^(0+128)+14),w
  7129  07F6  0601               	xorwf	1,w
  7130  07F7  1D03               	skipz
  7131  07F8  0008               	return
  7132                           
  7133                           ;RF_Control_B1.c: 229: {
  7134                           ;RF_Control_B1.c: 230: setControl_Lights_Table(1);
  7135  07F9  3001               	movlw	1
  7136  07FA  3196  26D7         	fcall	_setControl_Lights_Table
  7137                           
  7138                           ;RF_Control_B1.c: 239: {
  7139                           ;RF_Control_B1.c: 240: ;
  7140                           
  7141                           ;RF_Control_B1.c: 235: {
  7142                           ;RF_Control_B1.c: 236: ;
  7143                           ;RF_Control_B1.c: 237: }
  7144                           
  7145                           ;RF_Control_B1.c: 231: }
  7146                           ;RF_Control_B1.c: 232: }
  7147                           ;RF_Control_B1.c: 233: }
  7148  07FC  0008               	return
  7149  07FD                     __end_of_getRxData:	
  7150                           
  7151                           	psect	text24
  7152  1E60                     __ptext24:	
  7153 ;; *************** function _setLog_Code *****************
  7154 ;; Defined at:
  7155 ;;		line 249 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  rf              1    wreg     unsigned char 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  rf              1   11[BANK0 ] unsigned char 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;		None               void
  7162 ;; Registers used:
  7163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;Total ram usage:        2 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:    6
  7176 ;; This function calls:
  7177 ;;		_RfPointSelect
  7178 ;;		_setBuz
  7179 ;; This function is called by:
  7180 ;;		_getRxData
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           
  7185                           ;psect for function _setLog_Code
  7186  1E60                     _setLog_Code:	
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7190                           ;setLog_Code@rf stored from wreg
  7191  1E60  0020               	movlb	0	; select bank0
  7192  1E61  00AB               	movwf	setLog_Code@rf
  7193                           
  7194                           ;RF_Control_B1.c: 251: RfPointSelect(rf);
  7195  1E62  082B               	movf	setLog_Code@rf,w
  7196  1E63  31A4  2468  319E   	fcall	_RfPointSelect
  7197                           
  7198                           ;RF_Control_B1.c: 252: Product->Data[12]=RF_Data[12];
  7199  1E66  0021               	movlb	1	; select bank1
  7200  1E67  082C               	movf	(_RF_Data^(0+128)+12),w
  7201  1E68  0020               	movlb	0	; select bank0
  7202  1E69  00AA               	movwf	??_setLog_Code
  7203  1E6A  086F               	movf	_Product,w
  7204  1E6B  3E0C               	addlw	12
  7205  1E6C  0086               	movwf	6
  7206  1E6D  3001               	movlw	1	; select bank2/3
  7207  1E6E  0087               	movwf	7
  7208  1E6F  082A               	movf	??_setLog_Code,w
  7209  1E70  0081               	movwf	1
  7210                           
  7211                           ;RF_Control_B1.c: 253: Product->Data[13]=RF_Data[13];
  7212  1E71  0021               	movlb	1	; select bank1
  7213  1E72  082D               	movf	(_RF_Data^(0+128)+13),w
  7214  1E73  0020               	movlb	0	; select bank0
  7215  1E74  00AA               	movwf	??_setLog_Code
  7216  1E75  086F               	movf	_Product,w
  7217  1E76  3E0D               	addlw	13
  7218  1E77  0086               	movwf	6
  7219  1E78  3001               	movlw	1	; select bank2/3
  7220  1E79  0087               	movwf	7
  7221  1E7A  082A               	movf	??_setLog_Code,w
  7222  1E7B  0081               	movwf	1
  7223                           
  7224                           ;RF_Control_B1.c: 254: Product->Data[14]=RF_Data[14];
  7225  1E7C  0021               	movlb	1	; select bank1
  7226  1E7D  082E               	movf	(_RF_Data^(0+128)+14),w
  7227  1E7E  0020               	movlb	0	; select bank0
  7228  1E7F  00AA               	movwf	??_setLog_Code
  7229  1E80  086F               	movf	_Product,w
  7230  1E81  3E0E               	addlw	14
  7231  1E82  0086               	movwf	6
  7232  1E83  3001               	movlw	1	; select bank2/3
  7233  1E84  0087               	movwf	7
  7234  1E85  082A               	movf	??_setLog_Code,w
  7235  1E86  0081               	movwf	1
  7236                           
  7237                           ;RF_Control_B1.c: 255: setBuz(1,100);
  7238  1E87  3064               	movlw	100
  7239  1E88  00A6               	movwf	setBuz@time
  7240  1E89  3000               	movlw	0
  7241  1E8A  00A7               	movwf	setBuz@time+1
  7242  1E8B  3001               	movlw	1
  7243  1E8C  3193  23C3  319E   	fcall	_setBuz
  7244                           
  7245                           ;RF_Control_B1.c: 256: RF->Learn=0;
  7246  1E8F  087C               	movf	_RF,w
  7247  1E90  0086               	movwf	6
  7248  1E91  0187               	clrf	7
  7249  1E92  1301               	bcf	1,6
  7250                           
  7251                           ;RF_Control_B1.c: 257: if(TMain->First)
  7252  1E93  0021               	movlb	1	; select bank1
  7253  1E94  0869               	movf	_TMain^(0+128),w
  7254  1E95  3E03               	addlw	3
  7255  1E96  0086               	movwf	6
  7256  1E97  3001               	movlw	1	; select bank2/3
  7257  1E98  0087               	movwf	7
  7258  1E99  1C81               	btfss	1,1
  7259  1E9A  2EA1               	goto	l2701
  7260                           
  7261                           ;RF_Control_B1.c: 258: {
  7262                           ;RF_Control_B1.c: 259: Memory->LoopSave=1;
  7263  1E9B  0868               	movf	_Memory^(0+128),w
  7264  1E9C  3E22               	addlw	34
  7265  1E9D  0086               	movwf	6
  7266  1E9E  3002               	movlw	2	; select bank4/5
  7267  1E9F  0087               	movwf	7
  7268  1EA0  1501               	bsf	1,2
  7269  1EA1                     l2701:	
  7270                           
  7271                           ;RF_Control_B1.c: 260: }
  7272                           ;RF_Control_B1.c: 261: Memory->Modify=1;
  7273  1EA1  0868               	movf	_Memory^(0+128),w
  7274  1EA2  3E22               	addlw	34
  7275  1EA3  0086               	movwf	6
  7276  1EA4  3002               	movlw	2	; select bank4/5
  7277  1EA5  0087               	movwf	7
  7278  1EA6  1401               	bsf	1,0
  7279  1EA7  0008               	return
  7280  1EA8                     __end_of_setLog_Code:	
  7281                           
  7282                           	psect	text25
  7283  16D7                     __ptext25:	
  7284 ;; *************** function _setControl_Lights_Table *****************
  7285 ;; Defined at:
  7286 ;;		line 264 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  rf              1    wreg     unsigned char 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  rf              1   71[BANK0 ] unsigned char 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;		None               void
  7293 ;; Registers used:
  7294 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;Total ram usage:        1 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:   10
  7307 ;; This function calls:
  7308 ;;		_RfPointSelect
  7309 ;;		_setBuz
  7310 ;;		_setDimmerLights
  7311 ;;		_setRFSW_AdjControl
  7312 ;;		_setRFSW_Control
  7313 ;;		_setRFSW_Status
  7314 ;;		_setSw_Status
  7315 ;;		_setTxData
  7316 ;; This function is called by:
  7317 ;;		_getRxData
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           
  7322                           ;psect for function _setControl_Lights_Table
  7323  16D7                     _setControl_Lights_Table:	
  7324                           
  7325                           ;incstack = 0
  7326                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7327                           ;setControl_Lights_Table@rf stored from wreg
  7328  16D7  0020               	movlb	0	; select bank0
  7329  16D8  00E7               	movwf	setControl_Lights_Table@rf
  7330                           
  7331                           ;RF_Control_B1.c: 266: RfPointSelect(rf);
  7332  16D9  0867               	movf	setControl_Lights_Table@rf,w
  7333  16DA  31A4  2468  3196   	fcall	_RfPointSelect
  7334                           
  7335                           ;RF_Control_B1.c: 267: if(RF_Data[15] == 0x00)
  7336  16DD  0021               	movlb	1	; select bank1
  7337  16DE  08AF               	movf	(_RF_Data^(0+128)+15),f
  7338  16DF  1D03               	skipz
  7339  16E0  2F2A               	goto	l8873
  7340                           
  7341                           ;RF_Control_B1.c: 268: {
  7342                           ;RF_Control_B1.c: 270: setDimmerLights(1,0);
  7343  16E1  0020               	movlb	0	; select bank0
  7344  16E2  01A4               	clrf	setDimmerLights@status
  7345  16E3  3001               	movlw	1
  7346  16E4  3188  2076  3196   	fcall	_setDimmerLights
  7347                           
  7348                           ;RF_Control_B1.c: 271: setRFSW_Status(1,0);
  7349  16E7  0020               	movlb	0	; select bank0
  7350  16E8  01A2               	clrf	setRFSW_Status@command
  7351  16E9  3001               	movlw	1
  7352  16EA  31A5  254D  3196   	fcall	_setRFSW_Status
  7353                           
  7354                           ;RF_Control_B1.c: 272: setSw_Status(1,0);
  7355  16ED  0020               	movlb	0	; select bank0
  7356  16EE  01A2               	clrf	setSw_Status@command
  7357  16EF  3001               	movlw	1
  7358  16F0  31A5  255C  3196   	fcall	_setSw_Status
  7359                           
  7360                           ;RF_Control_B1.c: 275: setDimmerLights(2,0);
  7361  16F3  0020               	movlb	0	; select bank0
  7362  16F4  01A4               	clrf	setDimmerLights@status
  7363  16F5  3002               	movlw	2
  7364  16F6  3188  2076  3196   	fcall	_setDimmerLights
  7365                           
  7366                           ;RF_Control_B1.c: 276: setRFSW_Status(2,0);
  7367  16F9  0020               	movlb	0	; select bank0
  7368  16FA  01A2               	clrf	setRFSW_Status@command
  7369  16FB  3002               	movlw	2
  7370  16FC  31A5  254D  3196   	fcall	_setRFSW_Status
  7371                           
  7372                           ;RF_Control_B1.c: 277: setSw_Status(2,0);
  7373  16FF  0020               	movlb	0	; select bank0
  7374  1700  01A2               	clrf	setSw_Status@command
  7375  1701  3002               	movlw	2
  7376  1702  31A5  255C  3196   	fcall	_setSw_Status
  7377                           
  7378                           ;RF_Control_B1.c: 285: Product->Data[9]=0;
  7379  1705  0020               	movlb	0	; select bank0
  7380  1706  086F               	movf	_Product,w
  7381  1707  3E09               	addlw	9
  7382  1708  0086               	movwf	6
  7383  1709  3001               	movlw	1	; select bank2/3
  7384  170A  0087               	movwf	7
  7385  170B  0181               	clrf	1
  7386                           
  7387                           ;RF_Control_B1.c: 286: Product->Data[11]=0;
  7388  170C  086F               	movf	_Product,w
  7389  170D  3E0B               	addlw	11
  7390  170E  0086               	movwf	6
  7391  170F  3001               	movlw	1	; select bank2/3
  7392  1710  0087               	movwf	7
  7393  1711  0181               	clrf	1
  7394                           
  7395                           ;RF_Control_B1.c: 287: Product->Data[15]=0;
  7396  1712  086F               	movf	_Product,w
  7397  1713  3E0F               	addlw	15
  7398  1714  0086               	movwf	6
  7399  1715  3001               	movlw	1	; select bank2/3
  7400  1716  0087               	movwf	7
  7401  1717  0181               	clrf	1
  7402                           
  7403                           ;RF_Control_B1.c: 288: Product->Data[17]=0;
  7404  1718  086F               	movf	_Product,w
  7405  1719  3E11               	addlw	17
  7406  171A  0086               	movwf	6
  7407  171B  3001               	movlw	1	; select bank2/3
  7408  171C  0087               	movwf	7
  7409  171D  0181               	clrf	1
  7410                           
  7411                           ;RF_Control_B1.c: 289: setBuz(1,100);
  7412  171E  3064               	movlw	100
  7413  171F  00A6               	movwf	setBuz@time
  7414  1720  3000               	movlw	0
  7415  1721  00A7               	movwf	setBuz@time+1
  7416  1722  3001               	movlw	1
  7417  1723  3193  23C3  3196   	fcall	_setBuz
  7418                           
  7419                           ;RF_Control_B1.c: 290: setTxData(1);
  7420  1726  3001               	movlw	1
  7421  1727  318B  2314         	fcall	_setTxData
  7422                           
  7423                           ;RF_Control_B1.c: 291: }
  7424  1729  0008               	return
  7425  172A                     l8873:	
  7426                           
  7427                           ;RF_Control_B1.c: 292: else if(RF_Data[15] == 0x20)
  7428  172A  0021               	movlb	1	; select bank1
  7429  172B  082F               	movf	(_RF_Data^(0+128)+15),w
  7430  172C  3A20               	xorlw	32
  7431  172D  1D03               	skipz
  7432  172E  2F46               	goto	l8879
  7433                           
  7434                           ;RF_Control_B1.c: 293: {
  7435                           ;RF_Control_B1.c: 294: Product->Data[9]=0;
  7436  172F  0020               	movlb	0	; select bank0
  7437  1730  086F               	movf	_Product,w
  7438  1731  3E09               	addlw	9
  7439  1732  0086               	movwf	6
  7440  1733  3001               	movlw	1	; select bank2/3
  7441  1734  0087               	movwf	7
  7442  1735  0181               	clrf	1
  7443                           
  7444                           ;RF_Control_B1.c: 295: Product->Data[11]=0;
  7445  1736  086F               	movf	_Product,w
  7446  1737  3E0B               	addlw	11
  7447  1738  0086               	movwf	6
  7448  1739  3001               	movlw	1	; select bank2/3
  7449  173A  0087               	movwf	7
  7450  173B  0181               	clrf	1
  7451                           
  7452                           ;RF_Control_B1.c: 296: Product->Data[17]=0;
  7453  173C  086F               	movf	_Product,w
  7454  173D  3E11               	addlw	17
  7455  173E  0086               	movwf	6
  7456  173F  3001               	movlw	1	; select bank2/3
  7457  1740  0087               	movwf	7
  7458  1741  0181               	clrf	1
  7459                           
  7460                           ;RF_Control_B1.c: 297: setTxData(1);
  7461  1742  3001               	movlw	1
  7462  1743  318B  2314         	fcall	_setTxData
  7463                           
  7464                           ;RF_Control_B1.c: 298: }
  7465  1745  0008               	return
  7466  1746                     l8879:	
  7467                           
  7468                           ;RF_Control_B1.c: 300: else if(RF_Data[15] == 0x01)
  7469  1746  0021               	movlb	1	; select bank1
  7470  1747  082F               	movf	(_RF_Data^(0+128)+15),w
  7471  1748  3A01               	xorlw	1
  7472  1749  1D03               	skipz
  7473  174A  2F4F               	goto	l8883
  7474                           
  7475                           ;RF_Control_B1.c: 301: {
  7476                           ;RF_Control_B1.c: 302: setRFSW_Control(1);
  7477  174B  3001               	movlw	1
  7478  174C  3196  2647         	fcall	_setRFSW_Control
  7479                           
  7480                           ;RF_Control_B1.c: 303: }
  7481  174E  0008               	return
  7482  174F                     l8883:	
  7483                           
  7484                           ;RF_Control_B1.c: 305: else if(RF_Data[15] == 0x11)
  7485  174F  0021               	movlb	1	; select bank1
  7486  1750  082F               	movf	(_RF_Data^(0+128)+15),w
  7487  1751  3A11               	xorlw	17
  7488  1752  1D03               	skipz
  7489  1753  2F58               	goto	l8887
  7490                           
  7491                           ;RF_Control_B1.c: 306: {
  7492                           ;RF_Control_B1.c: 307: setRFSW_AdjControl(1);
  7493  1754  3001               	movlw	1
  7494  1755  319C  2405         	fcall	_setRFSW_AdjControl
  7495                           
  7496                           ;RF_Control_B1.c: 308: }
  7497  1757  0008               	return
  7498  1758                     l8887:	
  7499                           
  7500                           ;RF_Control_B1.c: 313: else if(RF_Data[15] == 0x02)
  7501  1758  0021               	movlb	1	; select bank1
  7502  1759  082F               	movf	(_RF_Data^(0+128)+15),w
  7503  175A  3A02               	xorlw	2
  7504  175B  1D03               	skipz
  7505  175C  2F61               	goto	l8891
  7506                           
  7507                           ;RF_Control_B1.c: 314: {
  7508                           ;RF_Control_B1.c: 315: setRFSW_Control(2);
  7509  175D  3002               	movlw	2
  7510  175E  3196  2647         	fcall	_setRFSW_Control
  7511                           
  7512                           ;RF_Control_B1.c: 316: }
  7513  1760  0008               	return
  7514  1761                     l8891:	
  7515                           
  7516                           ;RF_Control_B1.c: 318: else if(RF_Data[15] == 0x21)
  7517  1761  0021               	movlb	1	; select bank1
  7518  1762  082F               	movf	(_RF_Data^(0+128)+15),w
  7519  1763  3A21               	xorlw	33
  7520  1764  1D03               	skipz
  7521  1765  0008               	return
  7522                           
  7523                           ;RF_Control_B1.c: 319: {
  7524                           ;RF_Control_B1.c: 320: setRFSW_AdjControl(2);
  7525  1766  3002               	movlw	2
  7526  1767  319C  2405         	fcall	_setRFSW_AdjControl
  7527  1769  0008               	return
  7528  176A                     __end_of_setControl_Lights_Table:	
  7529                           
  7530                           	psect	text26
  7531  1647                     __ptext26:	
  7532 ;; *************** function _setRFSW_Control *****************
  7533 ;; Defined at:
  7534 ;;		line 361 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  sw              1    wreg     unsigned char 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  sw              1   11[BANK0 ] unsigned char 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;		None               void
  7541 ;; Registers used:
  7542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7552 ;;Total ram usage:        2 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:    6
  7555 ;; This function calls:
  7556 ;;		_RfSWPointSelect
  7557 ;;		_setBuz
  7558 ;;		_setDelayOff_GO
  7559 ;;		_setDimmerLights_Switch
  7560 ;;		_setDimmerLights_Trigger
  7561 ;;		_setRF_DimmerLights
  7562 ;;		_setSw_Status
  7563 ;;		_setTxData
  7564 ;; This function is called by:
  7565 ;;		_setControl_Lights_Table
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           
  7570                           ;psect for function _setRFSW_Control
  7571  1647                     _setRFSW_Control:	
  7572                           
  7573                           ;incstack = 0
  7574                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7575                           ;setRFSW_Control@sw stored from wreg
  7576  1647  0020               	movlb	0	; select bank0
  7577  1648  00AB               	movwf	setRFSW_Control@sw
  7578                           
  7579                           ;RF_Control_B1.c: 363: RfSWPointSelect(sw);
  7580  1649  082B               	movf	setRFSW_Control@sw,w
  7581  164A  31A6  2662  3196   	fcall	_RfSWPointSelect
  7582                           
  7583                           ;RF_Control_B1.c: 364: if(!RFSW->Status)
  7584  164D  0021               	movlb	1	; select bank1
  7585  164E  083C               	movf	_RFSW^(0+128),w
  7586  164F  0086               	movwf	6
  7587  1650  0187               	clrf	7
  7588  1651  1801               	btfsc	1,0
  7589  1652  2E88               	goto	l8761
  7590                           
  7591                           ;RF_Control_B1.c: 365: {
  7592                           ;RF_Control_B1.c: 366: if(RF_Data[16] == 0x80)
  7593  1653  0830               	movf	(_RF_Data^(0+128)+16),w
  7594  1654  3A80               	xorlw	128
  7595  1655  1D03               	skipz
  7596  1656  2E64               	goto	l8751
  7597                           
  7598                           ;RF_Control_B1.c: 367: {
  7599                           ;RF_Control_B1.c: 368: setDelayOff_GO(sw,1,RF_Data[17]);
  7600  1657  0020               	movlb	0	; select bank0
  7601  1658  01A3               	clrf	setDelayOff_GO@command
  7602  1659  0AA3               	incf	setDelayOff_GO@command,f
  7603  165A  0021               	movlb	1	; select bank1
  7604  165B  0831               	movf	(_RF_Data^(0+128)+17),w
  7605  165C  0020               	movlb	0	; select bank0
  7606  165D  00AA               	movwf	??_setRFSW_Control
  7607  165E  082A               	movf	??_setRFSW_Control,w
  7608  165F  00A4               	movwf	setDelayOff_GO@value
  7609  1660  082B               	movf	setRFSW_Control@sw,w
  7610  1661  3190  2027  3196   	fcall	_setDelayOff_GO
  7611  1664                     l8751:	
  7612                           
  7613                           ;RF_Control_B1.c: 369: }
  7614                           ;RF_Control_B1.c: 370: RFSW->Status=1;
  7615  1664  0021               	movlb	1	; select bank1
  7616  1665  083C               	movf	_RFSW^(0+128),w
  7617  1666  0086               	movwf	6
  7618  1667  0187               	clrf	7
  7619  1668  1401               	bsf	1,0
  7620                           
  7621                           ;RF_Control_B1.c: 371: setSw_Status(sw,1);
  7622  1669  0020               	movlb	0	; select bank0
  7623  166A  01A2               	clrf	setSw_Status@command
  7624  166B  0AA2               	incf	setSw_Status@command,f
  7625  166C  082B               	movf	setRFSW_Control@sw,w
  7626  166D  31A5  255C  3196   	fcall	_setSw_Status
  7627                           
  7628                           ;RF_Control_B1.c: 373: setDimmerLights_Trigger(sw,1);
  7629  1670  0020               	movlb	0	; select bank0
  7630  1671  01A2               	clrf	setDimmerLights_Trigger@command
  7631  1672  0AA2               	incf	setDimmerLights_Trigger@command,f
  7632  1673  082B               	movf	setRFSW_Control@sw,w
  7633  1674  31A5  258B  3196   	fcall	_setDimmerLights_Trigger
  7634                           
  7635                           ;RF_Control_B1.c: 374: setDimmerLights_Switch(sw,1);
  7636  1677  0020               	movlb	0	; select bank0
  7637  1678  01A2               	clrf	setDimmerLights_Switch@command
  7638  1679  0AA2               	incf	setDimmerLights_Switch@command,f
  7639  167A  082B               	movf	setRFSW_Control@sw,w
  7640  167B  31A5  257B  3196   	fcall	_setDimmerLights_Switch
  7641                           
  7642                           ;RF_Control_B1.c: 376: setRF_DimmerLights(sw,RFSW->Status);
  7643  167E  0021               	movlb	1	; select bank1
  7644  167F  083C               	movf	_RFSW^(0+128),w
  7645  1680  0086               	movwf	6
  7646  1681  0187               	clrf	7
  7647  1682  3000               	movlw	0
  7648  1683  1801               	btfsc	1,0
  7649  1684  3001               	movlw	1
  7650  1685  0020               	movlb	0	; select bank0
  7651  1686  00A0               	movwf	setRF_DimmerLights@on
  7652  1687  2EC6               	goto	L4
  7653  1688                     l8761:	
  7654                           ;RF_Control_B1.c: 377: }
  7655                           
  7656                           
  7657                           ;RF_Control_B1.c: 378: else
  7658                           ;RF_Control_B1.c: 379: {
  7659                           ;RF_Control_B1.c: 380: if(RF_Data[16] == 0x80)
  7660  1688  0021               	movlb	1	; select bank1
  7661  1689  0830               	movf	(_RF_Data^(0+128)+16),w
  7662  168A  3A80               	xorlw	128
  7663  168B  1D03               	skipz
  7664  168C  2E9E               	goto	l8765
  7665                           
  7666                           ;RF_Control_B1.c: 381: {
  7667                           ;RF_Control_B1.c: 382: setDelayOff_GO(sw,1,RF_Data[17]);
  7668  168D  0020               	movlb	0	; select bank0
  7669  168E  01A3               	clrf	setDelayOff_GO@command
  7670  168F  0AA3               	incf	setDelayOff_GO@command,f
  7671  1690  0021               	movlb	1	; select bank1
  7672  1691  0831               	movf	(_RF_Data^(0+128)+17),w
  7673  1692  0020               	movlb	0	; select bank0
  7674  1693  00AA               	movwf	??_setRFSW_Control
  7675  1694  082A               	movf	??_setRFSW_Control,w
  7676  1695  00A4               	movwf	setDelayOff_GO@value
  7677  1696  082B               	movf	setRFSW_Control@sw,w
  7678  1697  3190  2027  3196   	fcall	_setDelayOff_GO
  7679                           
  7680                           ;RF_Control_B1.c: 383: setRF_DimmerLights(sw,1);
  7681  169A  0020               	movlb	0	; select bank0
  7682  169B  01A0               	clrf	setRF_DimmerLights@on
  7683  169C  0AA0               	incf	setRF_DimmerLights@on,f
  7684  169D  2EC6               	goto	L4
  7685  169E                     l8765:	
  7686                           ;RF_Control_B1.c: 384: }
  7687                           
  7688                           
  7689                           ;RF_Control_B1.c: 385: else
  7690                           ;RF_Control_B1.c: 386: {
  7691                           ;RF_Control_B1.c: 387: RFSW->Status=0;
  7692  169E  0021               	movlb	1	; select bank1
  7693  169F  083C               	movf	_RFSW^(0+128),w
  7694  16A0  0086               	movwf	6
  7695  16A1  0187               	clrf	7
  7696  16A2  1001               	bcf	1,0
  7697                           
  7698                           ;RF_Control_B1.c: 388: setSw_Status(sw,0);
  7699  16A3  0020               	movlb	0	; select bank0
  7700  16A4  01A2               	clrf	setSw_Status@command
  7701  16A5  082B               	movf	setRFSW_Control@sw,w
  7702  16A6  31A5  255C  3196   	fcall	_setSw_Status
  7703                           
  7704                           ;RF_Control_B1.c: 390: setDimmerLights_Trigger(sw,1);
  7705  16A9  0020               	movlb	0	; select bank0
  7706  16AA  01A2               	clrf	setDimmerLights_Trigger@command
  7707  16AB  0AA2               	incf	setDimmerLights_Trigger@command,f
  7708  16AC  082B               	movf	setRFSW_Control@sw,w
  7709  16AD  31A5  258B  3196   	fcall	_setDimmerLights_Trigger
  7710                           
  7711                           ;RF_Control_B1.c: 391: setDimmerLights_Switch(sw,RFSW->Status);
  7712  16B0  0021               	movlb	1	; select bank1
  7713  16B1  083C               	movf	_RFSW^(0+128),w
  7714  16B2  0086               	movwf	6
  7715  16B3  0187               	clrf	7
  7716  16B4  3000               	movlw	0
  7717  16B5  1801               	btfsc	1,0
  7718  16B6  3001               	movlw	1
  7719  16B7  0020               	movlb	0	; select bank0
  7720  16B8  00A2               	movwf	setDimmerLights_Switch@command
  7721  16B9  082B               	movf	setRFSW_Control@sw,w
  7722  16BA  31A5  257B  3196   	fcall	_setDimmerLights_Switch
  7723                           
  7724                           ;RF_Control_B1.c: 393: setDelayOff_GO(sw,0,0);
  7725  16BD  0020               	movlb	0	; select bank0
  7726  16BE  01A3               	clrf	setDelayOff_GO@command
  7727  16BF  01A4               	clrf	setDelayOff_GO@value
  7728  16C0  082B               	movf	setRFSW_Control@sw,w
  7729  16C1  3190  2027  3196   	fcall	_setDelayOff_GO
  7730                           
  7731                           ;RF_Control_B1.c: 394: setRF_DimmerLights(sw,0);
  7732  16C4  0020               	movlb	0	; select bank0
  7733  16C5  01A0               	clrf	setRF_DimmerLights@on
  7734  16C6                     L4:	
  7735  16C6  082B               	movf	setRFSW_Control@sw,w
  7736  16C7  319F  274A  3196   	fcall	_setRF_DimmerLights
  7737                           
  7738                           ;RF_Control_B1.c: 395: }
  7739                           ;RF_Control_B1.c: 396: }
  7740                           ;RF_Control_B1.c: 397: setBuz(1,100);
  7741  16CA  3064               	movlw	100
  7742  16CB  0020               	movlb	0	; select bank0
  7743  16CC  00A6               	movwf	setBuz@time
  7744  16CD  3000               	movlw	0
  7745  16CE  00A7               	movwf	setBuz@time+1
  7746  16CF  3001               	movlw	1
  7747  16D0  3193  23C3  3196   	fcall	_setBuz
  7748                           
  7749                           ;RF_Control_B1.c: 398: setTxData(1);
  7750  16D3  3001               	movlw	1
  7751  16D4  318B  2314         	fcall	_setTxData
  7752  16D6  0008               	return
  7753  16D7                     __end_of_setRFSW_Control:	
  7754                           
  7755                           	psect	text27
  7756  1027                     __ptext27:	
  7757 ;; *************** function _setDelayOff_GO *****************
  7758 ;; Defined at:
  7759 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  sw              1    wreg     unsigned char 
  7762 ;;  command         1    3[BANK0 ] unsigned char 
  7763 ;;  value           1    4[BANK0 ] unsigned char 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  sw              1    7[BANK0 ] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;		None               void
  7768 ;; Registers used:
  7769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;Total ram usage:        5 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    5
  7782 ;; This function calls:
  7783 ;;		_DelayOffPointSelect
  7784 ;;		_DelayTimejudge
  7785 ;; This function is called by:
  7786 ;;		_setRFSW_Control
  7787 ;;		_Sw_DimmerOffFunc
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function _setDelayOff_GO
  7793  1027                     _setDelayOff_GO:	
  7794                           
  7795                           ;incstack = 0
  7796                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7797                           ;setDelayOff_GO@sw stored from wreg
  7798  1027  0020               	movlb	0	; select bank0
  7799  1028  00A7               	movwf	setDelayOff_GO@sw
  7800                           
  7801                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  7802  1029  0827               	movf	setDelayOff_GO@sw,w
  7803  102A  31A6  26A4  3190   	fcall	_DelayOffPointSelect
  7804                           
  7805                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  7806  102D  0021               	movlb	1	; select bank1
  7807  102E  0838               	movf	_DelayOff^(0+128),w
  7808  102F  0086               	movwf	6
  7809  1030  0187               	clrf	7
  7810  1031  1C01               	btfss	1,0
  7811  1032  0008               	return
  7812                           
  7813                           ;DelayOff_B1.c: 96: {
  7814                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  7815  1033  0838               	movf	_DelayOff^(0+128),w
  7816  1034  0086               	movwf	6
  7817  1035  0187               	clrf	7
  7818  1036  0020               	movlb	0	; select bank0
  7819  1037  0823               	movf	setDelayOff_GO@command,w
  7820  1038  1081               	bcf	1,1
  7821  1039  1D03               	skipz
  7822  103A  1481               	bsf	1,1
  7823                           
  7824                           ;DelayOff_B1.c: 98: if(command)
  7825  103B  0823               	movf	setDelayOff_GO@command,w
  7826  103C  1903               	btfsc	3,2
  7827  103D  2869               	goto	l6529
  7828                           
  7829                           ;DelayOff_B1.c: 99: {
  7830                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  7831  103E  0824               	movf	setDelayOff_GO@value,w
  7832  103F  3199  21FC  3190   	fcall	_DelayTimejudge
  7833  1042  0020               	movlb	0	; select bank0
  7834  1043  00A5               	movwf	??_setDelayOff_GO
  7835  1044  0021               	movlb	1	; select bank1
  7836  1045  0A38               	incf	_DelayOff^(0+128),w
  7837  1046  0086               	movwf	6
  7838  1047  0187               	clrf	7
  7839  1048  0020               	movlb	0	; select bank0
  7840  1049  0825               	movf	??_setDelayOff_GO,w
  7841  104A  0081               	movwf	1
  7842                           
  7843                           ;DelayOff_B1.c: 101: if(((value%16)==5 || !(value%16)) && value <= 0x25)
  7844  104B  300F               	movlw	15
  7845  104C  0524               	andwf	setDelayOff_GO@value,w
  7846  104D  00A5               	movwf	??_setDelayOff_GO
  7847  104E  0825               	movf	??_setDelayOff_GO,w
  7848  104F  3A05               	xorlw	5
  7849  1050  1903               	skipnz
  7850  1051  2856               	goto	l6523
  7851  1052  0824               	movf	setDelayOff_GO@value,w
  7852  1053  390F               	andlw	15
  7853  1054  1D03               	btfss	3,2
  7854  1055  285C               	goto	l6527
  7855  1056                     l6523:	
  7856  1056  3026               	movlw	38
  7857  1057  0224               	subwf	setDelayOff_GO@value,w
  7858  1058  1803               	skipnc
  7859  1059  285C               	goto	l6527
  7860                           
  7861                           ;DelayOff_B1.c: 102: {
  7862                           ;DelayOff_B1.c: 103: Product->Data[26+sw]=value;
  7863  105A  0824               	movf	setDelayOff_GO@value,w
  7864  105B  285D               	goto	L5
  7865  105C                     l6527:	
  7866                           ;DelayOff_B1.c: 104: }
  7867                           
  7868                           
  7869                           ;DelayOff_B1.c: 105: else
  7870                           ;DelayOff_B1.c: 106: {
  7871                           ;DelayOff_B1.c: 107: Product->Data[26+sw]=0x05;
  7872  105C  3005               	movlw	5
  7873  105D                     L5:	
  7874  105D  00A5               	movwf	??_setDelayOff_GO
  7875  105E  0827               	movf	setDelayOff_GO@sw,w
  7876  105F  3E1A               	addlw	26
  7877  1060  076F               	addwf	_Product,w
  7878  1061  00A6               	movwf	??_setDelayOff_GO+1
  7879  1062  0826               	movf	??_setDelayOff_GO+1,w
  7880  1063  0086               	movwf	6
  7881  1064  3001               	movlw	1	; select bank2/3
  7882  1065  0087               	movwf	7
  7883  1066  0825               	movf	??_setDelayOff_GO,w
  7884  1067  0081               	movwf	1
  7885                           
  7886                           ;DelayOff_B1.c: 108: }
  7887                           ;DelayOff_B1.c: 109: }
  7888  1068  2875               	goto	l6533
  7889  1069                     l6529:	
  7890                           
  7891                           ;DelayOff_B1.c: 110: else if(!command)
  7892  1069  08A3               	movf	setDelayOff_GO@command,f
  7893  106A  1D03               	skipz
  7894  106B  2875               	goto	l6533
  7895                           
  7896                           ;DelayOff_B1.c: 111: {
  7897                           ;DelayOff_B1.c: 112: Product->Data[sw+26]=0;
  7898  106C  0827               	movf	setDelayOff_GO@sw,w
  7899  106D  3E1A               	addlw	26
  7900  106E  076F               	addwf	_Product,w
  7901  106F  00A5               	movwf	??_setDelayOff_GO
  7902  1070  0825               	movf	??_setDelayOff_GO,w
  7903  1071  0086               	movwf	6
  7904  1072  3001               	movlw	1	; select bank2/3
  7905  1073  0087               	movwf	7
  7906  1074  0181               	clrf	1
  7907  1075                     l6533:	
  7908                           
  7909                           ;DelayOff_B1.c: 113: }
  7910                           ;DelayOff_B1.c: 114: DelayOff->SecondTime=0;
  7911  1075  0021               	movlb	1	; select bank1
  7912  1076  0838               	movf	_DelayOff^(0+128),w
  7913  1077  3E02               	addlw	2
  7914  1078  0086               	movwf	6
  7915  1079  0187               	clrf	7
  7916  107A  3000               	movlw	0
  7917  107B  3FC0               	movwi [0]fsr1
  7918  107C  3FC1               	movwi [1]fsr1
  7919                           
  7920                           ;DelayOff_B1.c: 115: DelayOff->MinuteTime=0;
  7921  107D  0838               	movf	_DelayOff^(0+128),w
  7922  107E  3E04               	addlw	4
  7923  107F  0086               	movwf	6
  7924  1080  0187               	clrf	7
  7925  1081  0181               	clrf	1
  7926  1082  0008               	return
  7927  1083                     __end_of_setDelayOff_GO:	
  7928                           
  7929                           	psect	text28
  7930  19FC                     __ptext28:	
  7931 ;; *************** function _DelayTimejudge *****************
  7932 ;; Defined at:
  7933 ;;		line 119 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  value           1    wreg     unsigned char 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  value           1    2[BANK0 ] unsigned char 
  7938 ;;  i               1    1[BANK0 ] unsigned char 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      unsigned char 
  7941 ;; Registers used:
  7942 ;;		wreg
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;Total ram usage:        3 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:    4
  7955 ;; This function calls:
  7956 ;;		Nothing
  7957 ;; This function is called by:
  7958 ;;		_setDelayOff_GO
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           
  7963                           ;psect for function _DelayTimejudge
  7964  19FC                     _DelayTimejudge:	
  7965                           
  7966                           ;incstack = 0
  7967                           ; Regs used in _DelayTimejudge: [wreg]
  7968                           ;DelayTimejudge@value stored from wreg
  7969  19FC  0020               	movlb	0	; select bank0
  7970  19FD  00A2               	movwf	DelayTimejudge@value
  7971                           
  7972                           ;DelayOff_B1.c: 121: char i=5;
  7973  19FE  3005               	movlw	5
  7974  19FF  00A0               	movwf	??_DelayTimejudge
  7975  1A00  0820               	movf	??_DelayTimejudge,w
  7976  1A01  00A1               	movwf	DelayTimejudge@i
  7977                           
  7978                           ;DelayOff_B1.c: 122: if(value == 0x05)
  7979  1A02  0822               	movf	DelayTimejudge@value,w
  7980  1A03  3A05               	xorlw	5
  7981  1A04  1D03               	skipz
  7982  1A05  2A08               	goto	l6373
  7983                           
  7984                           ;DelayOff_B1.c: 123: {
  7985                           ;DelayOff_B1.c: 124: i=5;
  7986  1A06  3005               	movlw	5
  7987  1A07  2A25               	goto	L10
  7988  1A08                     l6373:	
  7989                           ;DelayOff_B1.c: 125: }
  7990                           
  7991                           
  7992                           ;DelayOff_B1.c: 126: else if(value == 0x10)
  7993  1A08  0822               	movf	DelayTimejudge@value,w
  7994  1A09  3A10               	xorlw	16
  7995  1A0A  1D03               	skipz
  7996  1A0B  2A0E               	goto	l6377
  7997                           
  7998                           ;DelayOff_B1.c: 127: {
  7999                           ;DelayOff_B1.c: 128: i=10;
  8000  1A0C  300A               	movlw	10
  8001  1A0D  2A25               	goto	L10
  8002  1A0E                     l6377:	
  8003                           ;DelayOff_B1.c: 129: }
  8004                           
  8005                           
  8006                           ;DelayOff_B1.c: 130: else if(value == 0x15)
  8007  1A0E  0822               	movf	DelayTimejudge@value,w
  8008  1A0F  3A15               	xorlw	21
  8009  1A10  1D03               	skipz
  8010  1A11  2A14               	goto	l6381
  8011                           
  8012                           ;DelayOff_B1.c: 131: {
  8013                           ;DelayOff_B1.c: 132: i=15;
  8014  1A12  300F               	movlw	15
  8015  1A13  2A25               	goto	L10
  8016  1A14                     l6381:	
  8017                           ;DelayOff_B1.c: 133: }
  8018                           
  8019                           
  8020                           ;DelayOff_B1.c: 134: else if(value == 0x20)
  8021  1A14  0822               	movf	DelayTimejudge@value,w
  8022  1A15  3A20               	xorlw	32
  8023  1A16  1D03               	skipz
  8024  1A17  2A1A               	goto	l6385
  8025                           
  8026                           ;DelayOff_B1.c: 135: {
  8027                           ;DelayOff_B1.c: 136: i=20;
  8028  1A18  3014               	movlw	20
  8029  1A19  2A25               	goto	L10
  8030  1A1A                     l6385:	
  8031                           ;DelayOff_B1.c: 137: }
  8032                           
  8033                           
  8034                           ;DelayOff_B1.c: 138: else if(value == 0x25)
  8035  1A1A  0822               	movf	DelayTimejudge@value,w
  8036  1A1B  3A25               	xorlw	37
  8037  1A1C  1D03               	skipz
  8038  1A1D  2A20               	goto	l6389
  8039                           
  8040                           ;DelayOff_B1.c: 139: {
  8041                           ;DelayOff_B1.c: 140: i=25;
  8042  1A1E  3019               	movlw	25
  8043  1A1F  2A25               	goto	L10
  8044  1A20                     l6389:	
  8045                           ;DelayOff_B1.c: 141: }
  8046                           
  8047                           
  8048                           ;DelayOff_B1.c: 142: else if(value == 0x30)
  8049  1A20  0822               	movf	DelayTimejudge@value,w
  8050  1A21  3A30               	xorlw	48
  8051  1A22  1D03               	skipz
  8052  1A23  2A28               	goto	l706
  8053                           
  8054                           ;DelayOff_B1.c: 143: {
  8055                           ;DelayOff_B1.c: 144: i=30;
  8056  1A24  301E               	movlw	30
  8057  1A25                     L10:	
  8058  1A25  00A0               	movwf	??_DelayTimejudge
  8059  1A26  0820               	movf	??_DelayTimejudge,w
  8060  1A27  00A1               	movwf	DelayTimejudge@i
  8061  1A28                     l706:	
  8062                           
  8063                           ;DelayOff_B1.c: 145: }
  8064                           ;DelayOff_B1.c: 146: return i;
  8065  1A28  0821               	movf	DelayTimejudge@i,w
  8066  1A29  0008               	return
  8067  1A2A                     __end_of_DelayTimejudge:	
  8068                           
  8069                           	psect	text29
  8070  1C05                     __ptext29:	
  8071 ;; *************** function _setRFSW_AdjControl *****************
  8072 ;; Defined at:
  8073 ;;		line 401 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  sw              1    wreg     unsigned char 
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;  sw              1   70[BANK0 ] unsigned char 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;		None               void
  8080 ;; Registers used:
  8081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;Total ram usage:        3 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:    9
  8094 ;; This function calls:
  8095 ;;		_RfSWPointSelect
  8096 ;;		_setRF_DimmerValue
  8097 ;;		_setTxData
  8098 ;; This function is called by:
  8099 ;;		_setControl_Lights_Table
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           
  8104                           ;psect for function _setRFSW_AdjControl
  8105  1C05                     _setRFSW_AdjControl:	
  8106                           
  8107                           ;incstack = 0
  8108                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8109                           ;setRFSW_AdjControl@sw stored from wreg
  8110  1C05  0020               	movlb	0	; select bank0
  8111  1C06  00E6               	movwf	setRFSW_AdjControl@sw
  8112                           
  8113                           ;RF_Control_B1.c: 403: RfSWPointSelect(sw);
  8114  1C07  0866               	movf	setRFSW_AdjControl@sw,w
  8115  1C08  31A6  2662  319C   	fcall	_RfSWPointSelect
  8116                           
  8117                           ;RF_Control_B1.c: 404: if(RFSW->Status)
  8118  1C0B  0021               	movlb	1	; select bank1
  8119  1C0C  083C               	movf	_RFSW^(0+128),w
  8120  1C0D  0086               	movwf	6
  8121  1C0E  0187               	clrf	7
  8122  1C0F  1C01               	btfss	1,0
  8123  1C10  2C1D               	goto	l6779
  8124                           
  8125                           ;RF_Control_B1.c: 405: {
  8126                           ;RF_Control_B1.c: 406: Memory->Modify=1;
  8127  1C11  0868               	movf	_Memory^(0+128),w
  8128  1C12  3E22               	addlw	34
  8129  1C13  0086               	movwf	6
  8130  1C14  3002               	movlw	2	; select bank4/5
  8131  1C15  0087               	movwf	7
  8132  1C16  1401               	bsf	1,0
  8133                           
  8134                           ;RF_Control_B1.c: 407: setRF_DimmerValue(sw);
  8135  1C17  0020               	movlb	0	; select bank0
  8136  1C18  0866               	movf	setRFSW_AdjControl@sw,w
  8137  1C19  319B  231F  319C   	fcall	_setRF_DimmerValue
  8138                           
  8139                           ;RF_Control_B1.c: 408: }
  8140  1C1C  2C2F               	goto	l2733
  8141  1C1D                     l6779:	
  8142                           
  8143                           ;RF_Control_B1.c: 409: else
  8144                           ;RF_Control_B1.c: 410: {
  8145                           ;RF_Control_B1.c: 411: Product->Data[9]=Product->Data[20+sw];
  8146  1C1D  0020               	movlb	0	; select bank0
  8147  1C1E  0866               	movf	setRFSW_AdjControl@sw,w
  8148  1C1F  3E14               	addlw	20
  8149  1C20  076F               	addwf	_Product,w
  8150  1C21  00E4               	movwf	??_setRFSW_AdjControl
  8151  1C22  0864               	movf	??_setRFSW_AdjControl,w
  8152  1C23  0086               	movwf	6
  8153  1C24  3001               	movlw	1	; select bank2/3
  8154  1C25  0087               	movwf	7
  8155  1C26  0801               	movf	1,w
  8156  1C27  00E5               	movwf	??_setRFSW_AdjControl+1
  8157  1C28  086F               	movf	_Product,w
  8158  1C29  3E09               	addlw	9
  8159  1C2A  0086               	movwf	6
  8160  1C2B  3001               	movlw	1	; select bank2/3
  8161  1C2C  0087               	movwf	7
  8162  1C2D  0865               	movf	??_setRFSW_AdjControl+1,w
  8163  1C2E  0081               	movwf	1
  8164  1C2F                     l2733:	
  8165                           
  8166                           ;RF_Control_B1.c: 412: }
  8167                           ;RF_Control_B1.c: 413: Product->Data[17]=Product->Data[26+sw];
  8168  1C2F  0020               	movlb	0	; select bank0
  8169  1C30  0866               	movf	setRFSW_AdjControl@sw,w
  8170  1C31  3E1A               	addlw	26
  8171  1C32  076F               	addwf	_Product,w
  8172  1C33  00E4               	movwf	??_setRFSW_AdjControl
  8173  1C34  0864               	movf	??_setRFSW_AdjControl,w
  8174  1C35  0086               	movwf	6
  8175  1C36  3001               	movlw	1	; select bank2/3
  8176  1C37  0087               	movwf	7
  8177  1C38  0801               	movf	1,w
  8178  1C39  00E5               	movwf	??_setRFSW_AdjControl+1
  8179  1C3A  086F               	movf	_Product,w
  8180  1C3B  3E11               	addlw	17
  8181  1C3C  0086               	movwf	6
  8182  1C3D  3001               	movlw	1	; select bank2/3
  8183  1C3E  0087               	movwf	7
  8184  1C3F  0865               	movf	??_setRFSW_AdjControl+1,w
  8185  1C40  0081               	movwf	1
  8186                           
  8187                           ;RF_Control_B1.c: 414: setTxData(1);
  8188  1C41  3001               	movlw	1
  8189  1C42  318B  2314         	fcall	_setTxData
  8190  1C44  0008               	return
  8191  1C45                     __end_of_setRFSW_AdjControl:	
  8192                           
  8193                           	psect	text30
  8194  1B1F                     __ptext30:	
  8195 ;; *************** function _setRF_DimmerValue *****************
  8196 ;; Defined at:
  8197 ;;		line 425 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  lights          1    wreg     unsigned char 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  lights          1   67[BANK0 ] unsigned char 
  8202 ;; Return value:  Size  Location     Type
  8203 ;;		None               void
  8204 ;; Registers used:
  8205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;Total ram usage:        3 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; Hardware stack levels required when called:    8
  8218 ;; This function calls:
  8219 ;;		_setDimmerLights_AdjRF
  8220 ;; This function is called by:
  8221 ;;		_setRFSW_AdjControl
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           
  8226                           ;psect for function _setRF_DimmerValue
  8227  1B1F                     _setRF_DimmerValue:	
  8228                           
  8229                           ;incstack = 0
  8230                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8231                           ;setRF_DimmerValue@lights stored from wreg
  8232  1B1F  0020               	movlb	0	; select bank0
  8233  1B20  00E3               	movwf	setRF_DimmerValue@lights
  8234                           
  8235                           ;RF_Control_B1.c: 427: if(RF_Data[9] > 0x64)
  8236  1B21  3065               	movlw	101
  8237  1B22  0021               	movlb	1	; select bank1
  8238  1B23  0229               	subwf	(_RF_Data^(0+128)+9),w
  8239  1B24  1C03               	skipc
  8240  1B25  2B2C               	goto	l6623
  8241                           
  8242                           ;RF_Control_B1.c: 428: {
  8243                           ;RF_Control_B1.c: 429: RF_Data[9]=0x64;
  8244  1B26  3064               	movlw	100
  8245  1B27  0020               	movlb	0	; select bank0
  8246  1B28  00E1               	movwf	??_setRF_DimmerValue
  8247  1B29  0861               	movf	??_setRF_DimmerValue,w
  8248  1B2A  0021               	movlb	1	; select bank1
  8249  1B2B  00A9               	movwf	(_RF_Data^(0+128)+9)
  8250  1B2C                     l6623:	
  8251                           
  8252                           ;RF_Control_B1.c: 430: }
  8253                           ;RF_Control_B1.c: 431: Product->Data[9]=RF_Data[9];
  8254  1B2C  0829               	movf	(_RF_Data^(0+128)+9),w
  8255  1B2D  0020               	movlb	0	; select bank0
  8256  1B2E  00E1               	movwf	??_setRF_DimmerValue
  8257  1B2F  086F               	movf	_Product,w
  8258  1B30  3E09               	addlw	9
  8259  1B31  0086               	movwf	6
  8260  1B32  3001               	movlw	1	; select bank2/3
  8261  1B33  0087               	movwf	7
  8262  1B34  0861               	movf	??_setRF_DimmerValue,w
  8263  1B35  0081               	movwf	1
  8264                           
  8265                           ;RF_Control_B1.c: 432: Product->Data[11]=lights;
  8266  1B36  0863               	movf	setRF_DimmerValue@lights,w
  8267  1B37  00E1               	movwf	??_setRF_DimmerValue
  8268  1B38  086F               	movf	_Product,w
  8269  1B39  3E0B               	addlw	11
  8270  1B3A  0086               	movwf	6
  8271  1B3B  3001               	movlw	1	; select bank2/3
  8272  1B3C  0087               	movwf	7
  8273  1B3D  0861               	movf	??_setRF_DimmerValue,w
  8274  1B3E  0081               	movwf	1
  8275                           
  8276                           ;RF_Control_B1.c: 433: Product->Data[(20+lights)]=Product->Data[9];
  8277  1B3F  086F               	movf	_Product,w
  8278  1B40  3E09               	addlw	9
  8279  1B41  0086               	movwf	6
  8280  1B42  3001               	movlw	1	; select bank2/3
  8281  1B43  0087               	movwf	7
  8282  1B44  0801               	movf	1,w
  8283  1B45  00E1               	movwf	??_setRF_DimmerValue
  8284  1B46  0863               	movf	setRF_DimmerValue@lights,w
  8285  1B47  3E14               	addlw	20
  8286  1B48  076F               	addwf	_Product,w
  8287  1B49  00E2               	movwf	??_setRF_DimmerValue+1
  8288  1B4A  0862               	movf	??_setRF_DimmerValue+1,w
  8289  1B4B  0086               	movwf	6
  8290  1B4C  3001               	movlw	1	; select bank2/3
  8291  1B4D  0087               	movwf	7
  8292  1B4E  0861               	movf	??_setRF_DimmerValue,w
  8293  1B4F  0081               	movwf	1
  8294                           
  8295                           ;RF_Control_B1.c: 434: setDimmerLights_AdjRF(lights);
  8296  1B50  0863               	movf	setRF_DimmerValue@lights,w
  8297  1B51  3198  20E9         	fcall	_setDimmerLights_AdjRF
  8298  1B53  0008               	return
  8299  1B54                     __end_of_setRF_DimmerValue:	
  8300                           
  8301                           	psect	text31
  8302  18E9                     __ptext31:	
  8303 ;; *************** function _setDimmerLights_AdjRF *****************
  8304 ;; Defined at:
  8305 ;;		line 410 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  lights          1    wreg     unsigned char 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;  lights          1   64[BANK0 ] unsigned char 
  8310 ;; Return value:  Size  Location     Type
  8311 ;;		None               void
  8312 ;; Registers used:
  8313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;Total ram usage:        2 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    7
  8326 ;; This function calls:
  8327 ;;		_DimmerLightsPointSelect
  8328 ;;		_getPercentValue
  8329 ;; This function is called by:
  8330 ;;		_setRF_DimmerValue
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function _setDimmerLights_AdjRF
  8336  18E9                     _setDimmerLights_AdjRF:	
  8337                           
  8338                           ;incstack = 0
  8339                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8340                           ;setDimmerLights_AdjRF@lights stored from wreg
  8341  18E9  0020               	movlb	0	; select bank0
  8342  18EA  00E0               	movwf	setDimmerLights_AdjRF@lights
  8343                           
  8344                           ;Dimmer_B1.c: 412: DimmerLightsPointSelect(lights);
  8345  18EB  0860               	movf	setDimmerLights_AdjRF@lights,w
  8346  18EC  31A5  25FC  3198   	fcall	_DimmerLightsPointSelect
  8347                           
  8348                           ;Dimmer_B1.c: 413: DimmerLights->AdjRF=1;
  8349  18EF  0020               	movlb	0	; select bank0
  8350  18F0  086C               	movf	_DimmerLights,w
  8351  18F1  0086               	movwf	6
  8352  18F2  3001               	movlw	1	; select bank2/3
  8353  18F3  0087               	movwf	7
  8354  18F4  1501               	bsf	1,2
  8355                           
  8356                           ;Dimmer_B1.c: 414: DimmerLights->Signal=1;
  8357  18F5  086C               	movf	_DimmerLights,w
  8358  18F6  0086               	movwf	6
  8359  18F7  3001               	movlw	1	; select bank2/3
  8360  18F8  0087               	movwf	7
  8361  18F9  1481               	bsf	1,1
  8362                           
  8363                           ;Dimmer_B1.c: 415: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  8364  18FA  086F               	movf	_Product,w
  8365  18FB  3E09               	addlw	9
  8366  18FC  0086               	movwf	6
  8367  18FD  3001               	movlw	1	; select bank2/3
  8368  18FE  0087               	movwf	7
  8369  18FF  0801               	movf	1,w
  8370  1900  319F  27A5         	fcall	_getPercentValue
  8371  1902  0020               	movlb	0	; select bank0
  8372  1903  00DF               	movwf	??_setDimmerLights_AdjRF
  8373  1904  086C               	movf	_DimmerLights,w
  8374  1905  3E05               	addlw	5
  8375  1906  0086               	movwf	6
  8376  1907  3001               	movlw	1	; select bank2/3
  8377  1908  0087               	movwf	7
  8378  1909  085F               	movf	??_setDimmerLights_AdjRF,w
  8379  190A  0081               	movwf	1
  8380  190B  0008               	return
  8381  190C                     __end_of_setDimmerLights_AdjRF:	
  8382                           
  8383                           	psect	text32
  8384  1000                     __ptext32:	
  8385 ;; *************** function _RF_RxDisable *****************
  8386 ;; Defined at:
  8387 ;;		line 191 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  rf              1    wreg     unsigned char 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  rf              1    4[BANK0 ] unsigned char 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;		None               void
  8394 ;; Registers used:
  8395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;Total ram usage:        1 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:    6
  8408 ;; This function calls:
  8409 ;;		_CC2500_WriteCommand
  8410 ;;		_RfPointSelect
  8411 ;;		_setINT_GO
  8412 ;; This function is called by:
  8413 ;;		_setRF_Main
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           
  8418                           ;psect for function _RF_RxDisable
  8419  1000                     _RF_RxDisable:	
  8420                           
  8421                           ;incstack = 0
  8422                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8423                           ;RF_RxDisable@rf stored from wreg
  8424  1000  0020               	movlb	0	; select bank0
  8425  1001  00A4               	movwf	RF_RxDisable@rf
  8426                           
  8427                           ;RF_Control_B1.c: 193: RfPointSelect(rf);
  8428  1002  0824               	movf	RF_RxDisable@rf,w
  8429  1003  31A4  2468  3190   	fcall	_RfPointSelect
  8430                           
  8431                           ;RF_Control_B1.c: 195: if(RF->RxStatus)
  8432  1006  087C               	movf	_RF,w
  8433  1007  0086               	movwf	6
  8434  1008  0187               	clrf	7
  8435  1009  1D81               	btfss	1,3
  8436  100A  0008               	return
  8437                           
  8438                           ;RF_Control_B1.c: 196: {
  8439                           ;RF_Control_B1.c: 197: RF->RxStatus=0;
  8440  100B  087C               	movf	_RF,w
  8441  100C  0086               	movwf	6
  8442  100D  0187               	clrf	7
  8443  100E  1181               	bcf	1,3
  8444                           
  8445                           ;RF_Control_B1.c: 198: RF->ReceiveGO=0;
  8446  100F  087C               	movf	_RF,w
  8447  1010  0086               	movwf	6
  8448  1011  0187               	clrf	7
  8449  1012  1081               	bcf	1,1
  8450                           
  8451                           ;RF_Control_B1.c: 199: RF->DebounceTime=0;
  8452  1013  0A7C               	incf	_RF,w
  8453  1014  0086               	movwf	6
  8454  1015  0187               	clrf	7
  8455  1016  0181               	clrf	1
  8456                           
  8457                           ;RF_Control_B1.c: 200: RF->Debounce=0;
  8458  1017  087C               	movf	_RF,w
  8459  1018  0086               	movwf	6
  8460  1019  0187               	clrf	7
  8461  101A  1281               	bcf	1,5
  8462                           
  8463                           ;RF_Control_B1.c: 201: CC2500_WriteCommand(0x36);
  8464  101B  3036               	movlw	54
  8465  101C  31A5  256B  3190   	fcall	_CC2500_WriteCommand
  8466                           
  8467                           ;RF_Control_B1.c: 202: CC2500_WriteCommand(0x3A);
  8468  101F  303A               	movlw	58
  8469  1020  31A5  256B  3190   	fcall	_CC2500_WriteCommand
  8470                           
  8471                           ;RF_Control_B1.c: 203: setINT_GO(0);
  8472  1023  3000               	movlw	0
  8473  1024  31A4  243F         	fcall	_setINT_GO
  8474  1026  0008               	return
  8475  1027                     __end_of_RF_RxDisable:	
  8476                           
  8477                           	psect	text33
  8478  1D91                     __ptext33:	
  8479 ;; *************** function _CC2500_TxData *****************
  8480 ;; Defined at:
  8481 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  loop_e          1    5[BANK0 ] unsigned char 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;		None               void
  8488 ;; Registers used:
  8489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;Total ram usage:        2 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    6
  8502 ;; This function calls:
  8503 ;;		_CC2500_WriteByte
  8504 ;;		_CC2500_WriteCommand
  8505 ;; This function is called by:
  8506 ;;		_setRF_Main
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           
  8511                           ;psect for function _CC2500_TxData
  8512  1D91                     _CC2500_TxData:	
  8513                           
  8514                           ;CC2500_B1.c: 32: unsigned char loop_e;
  8515                           ;CC2500_B1.c: 34: RC4=0;
  8516                           
  8517                           ;incstack = 0
  8518                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8519  1D91  0020               	movlb	0	; select bank0
  8520  1D92  120E               	bcf	14,4	;volatile
  8521                           
  8522                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  8523  1D93  307F               	movlw	127
  8524  1D94  00A4               	movwf	??_CC2500_TxData
  8525  1D95  0824               	movf	??_CC2500_TxData,w
  8526  1D96  0021               	movlb	1	; select bank1
  8527  1D97  00BF               	movwf	_SPI0Buffer^(0+128)
  8528  1D98                     l307:	
  8529                           ;CC2500_B1.c: 36: while(RC2==1);
  8530                           
  8531  1D98  0020               	movlb	0	; select bank0
  8532  1D99  190E               	btfsc	14,2	;volatile
  8533  1D9A  2D98               	goto	l307
  8534                           
  8535                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  8536  1D9B  31A6  26D3  319D   	fcall	_CC2500_WriteByte
  8537                           
  8538                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  8539  1D9E  0021               	movlb	1	; select bank1
  8540  1D9F  0840               	movf	_Tx_Length^(0+128),w
  8541  1DA0  0020               	movlb	0	; select bank0
  8542  1DA1  00A4               	movwf	??_CC2500_TxData
  8543  1DA2  0824               	movf	??_CC2500_TxData,w
  8544  1DA3  0021               	movlb	1	; select bank1
  8545  1DA4  00BF               	movwf	_SPI0Buffer^(0+128)
  8546                           
  8547                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  8548  1DA5  31A6  26D3  319D   	fcall	_CC2500_WriteByte
  8549                           
  8550                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  8551  1DA8  0020               	movlb	0	; select bank0
  8552  1DA9  01A5               	clrf	CC2500_TxData@loop_e
  8553  1DAA                     l6933:	
  8554  1DAA  0021               	movlb	1	; select bank1
  8555  1DAB  0840               	movf	_Tx_Length^(0+128),w
  8556  1DAC  0020               	movlb	0	; select bank0
  8557  1DAD  0225               	subwf	CC2500_TxData@loop_e,w
  8558  1DAE  1803               	btfsc	3,0
  8559  1DAF  2DC2               	goto	l312
  8560                           
  8561                           ;CC2500_B1.c: 41: {
  8562                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  8563  1DB0  0825               	movf	CC2500_TxData@loop_e,w
  8564  1DB1  3EA0               	addlw	_RF_Data& (0+255)
  8565  1DB2  0086               	movwf	6
  8566  1DB3  0187               	clrf	7
  8567  1DB4  0801               	movf	1,w
  8568  1DB5  00A4               	movwf	??_CC2500_TxData
  8569  1DB6  0824               	movf	??_CC2500_TxData,w
  8570  1DB7  0021               	movlb	1	; select bank1
  8571  1DB8  00BF               	movwf	_SPI0Buffer^(0+128)
  8572                           
  8573                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  8574  1DB9  31A6  26D3  319D   	fcall	_CC2500_WriteByte
  8575  1DBC  3001               	movlw	1
  8576  1DBD  0020               	movlb	0	; select bank0
  8577  1DBE  00A4               	movwf	??_CC2500_TxData
  8578  1DBF  0824               	movf	??_CC2500_TxData,w
  8579  1DC0  07A5               	addwf	CC2500_TxData@loop_e,f
  8580  1DC1  2DAA               	goto	l6933
  8581  1DC2                     l312:	
  8582                           
  8583                           ;CC2500_B1.c: 44: }
  8584                           ;CC2500_B1.c: 45: RC4=1;
  8585  1DC2  160E               	bsf	14,4	;volatile
  8586                           
  8587                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  8588  1DC3  3035               	movlw	53
  8589  1DC4  31A5  256B  319D   	fcall	_CC2500_WriteCommand
  8590  1DC7                     l313:	
  8591                           ;CC2500_B1.c: 47: while(RB0==0);
  8592                           
  8593  1DC7  0020               	movlb	0	; select bank0
  8594  1DC8  1C0D               	btfss	13,0	;volatile
  8595  1DC9  2DC7               	goto	l313
  8596  1DCA                     l316:	
  8597                           ;CC2500_B1.c: 48: while(RB0==1);
  8598                           
  8599  1DCA  180D               	btfsc	13,0	;volatile
  8600  1DCB  2DCA               	goto	l316
  8601                           
  8602                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  8603  1DCC  3036               	movlw	54
  8604  1DCD  31A5  256B  319D   	fcall	_CC2500_WriteCommand
  8605                           
  8606                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  8607  1DD0  303B               	movlw	59
  8608  1DD1  31A5  256B         	fcall	_CC2500_WriteCommand
  8609                           
  8610                           ;CC2500_B1.c: 51: Transceive_OK=1;
  8611  1DD3  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  8612  1DD4  0008               	return
  8613  1DD5                     __end_of_CC2500_TxData:	
  8614                           
  8615                           	psect	text34
  8616  1142                     __ptext34:	
  8617 ;; *************** function _CC2500_RxData *****************
  8618 ;; Defined at:
  8619 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  loop_f          1    5[BANK0 ] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;		None               void
  8626 ;; Registers used:
  8627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;Total ram usage:        2 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    6
  8640 ;; This function calls:
  8641 ;;		_CC2500_ReadByte
  8642 ;;		_CC2500_ReadStatus
  8643 ;;		_CC2500_WriteByte
  8644 ;;		_CC2500_WriteCommand
  8645 ;;		_setRF_RxStatus
  8646 ;; This function is called by:
  8647 ;;		_setRF_Main
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           
  8652                           ;psect for function _CC2500_RxData
  8653  1142                     _CC2500_RxData:	
  8654                           
  8655                           ;CC2500_B1.c: 58: unsigned char loop_f;
  8656                           ;CC2500_B1.c: 62: if(RB0 == 1)
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8660  1142  0020               	movlb	0	; select bank0
  8661  1143  180D               	btfsc	13,0	;volatile
  8662  1144                     l323:	
  8663                           ;CC2500_B1.c: 63: {
  8664                           ;CC2500_B1.c: 64: while(RB0 == 1);
  8665                           
  8666  1144  180D               	btfsc	13,0	;volatile
  8667  1145  2944               	goto	l323
  8668                           
  8669                           ;CC2500_B1.c: 65: }
  8670                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  8671  1146  303B               	movlw	59
  8672  1147  31A7  276C  3191   	fcall	_CC2500_ReadStatus
  8673                           
  8674                           ;CC2500_B1.c: 67: if(s_data != 0)
  8675  114A  0021               	movlb	1	; select bank1
  8676  114B  0843               	movf	_s_data^(0+128),w
  8677  114C  1903               	btfsc	3,2
  8678  114D  2998               	goto	l8933
  8679                           
  8680                           ;CC2500_B1.c: 69: {
  8681                           ;CC2500_B1.c: 70: RC4=0;
  8682  114E  0020               	movlb	0	; select bank0
  8683  114F  120E               	bcf	14,4	;volatile
  8684                           
  8685                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  8686  1150  30FF               	movlw	255
  8687  1151  00A4               	movwf	??_CC2500_RxData
  8688  1152  0824               	movf	??_CC2500_RxData,w
  8689  1153  0021               	movlb	1	; select bank1
  8690  1154  00BF               	movwf	_SPI0Buffer^(0+128)
  8691  1155                     l327:	
  8692                           ;CC2500_B1.c: 72: while(RC2==1);
  8693                           
  8694  1155  0020               	movlb	0	; select bank0
  8695  1156  190E               	btfsc	14,2	;volatile
  8696  1157  2955               	goto	l327
  8697                           
  8698                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  8699  1158  31A6  26D3  3191   	fcall	_CC2500_WriteByte
  8700                           
  8701                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  8702  115B  3198  2066  3191   	fcall	_CC2500_ReadByte
  8703                           
  8704                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  8705  115E  0021               	movlb	1	; select bank1
  8706  115F  083F               	movf	_SPI0Buffer^(0+128),w
  8707  1160  0020               	movlb	0	; select bank0
  8708  1161  00A4               	movwf	??_CC2500_RxData
  8709  1162  0824               	movf	??_CC2500_RxData,w
  8710  1163  0021               	movlb	1	; select bank1
  8711  1164  00BE               	movwf	_Rx_Length^(0+128)
  8712                           
  8713                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  8714  1165  0020               	movlb	0	; select bank0
  8715  1166  01A5               	clrf	CC2500_RxData@loop_f
  8716  1167                     l8919:	
  8717  1167  0021               	movlb	1	; select bank1
  8718  1168  083E               	movf	_Rx_Length^(0+128),w
  8719  1169  0020               	movlb	0	; select bank0
  8720  116A  0225               	subwf	CC2500_RxData@loop_f,w
  8721  116B  1803               	btfsc	3,0
  8722  116C  297F               	goto	l8921
  8723                           
  8724                           ;CC2500_B1.c: 78: {
  8725                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  8726  116D  3198  2066  3191   	fcall	_CC2500_ReadByte
  8727                           
  8728                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  8729  1170  0021               	movlb	1	; select bank1
  8730  1171  083F               	movf	_SPI0Buffer^(0+128),w
  8731  1172  0020               	movlb	0	; select bank0
  8732  1173  00A4               	movwf	??_CC2500_RxData
  8733  1174  0825               	movf	CC2500_RxData@loop_f,w
  8734  1175  3EA0               	addlw	_RF_Data& (0+255)
  8735  1176  0086               	movwf	6
  8736  1177  0187               	clrf	7
  8737  1178  0824               	movf	??_CC2500_RxData,w
  8738  1179  0081               	movwf	1
  8739  117A  3001               	movlw	1
  8740  117B  00A4               	movwf	??_CC2500_RxData
  8741  117C  0824               	movf	??_CC2500_RxData,w
  8742  117D  07A5               	addwf	CC2500_RxData@loop_f,f
  8743  117E  2967               	goto	l8919
  8744  117F                     l8921:	
  8745                           
  8746                           ;CC2500_B1.c: 81: }
  8747                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  8748  117F  3198  2066  3191   	fcall	_CC2500_ReadByte
  8749                           
  8750                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  8751  1182  0021               	movlb	1	; select bank1
  8752  1183  083F               	movf	_SPI0Buffer^(0+128),w
  8753  1184  0020               	movlb	0	; select bank0
  8754  1185  00A4               	movwf	??_CC2500_RxData
  8755  1186  0824               	movf	??_CC2500_RxData,w
  8756  1187  0021               	movlb	1	; select bank1
  8757  1188  00BD               	movwf	_RSSI^(0+128)
  8758                           
  8759                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  8760  1189  3198  2066  3191   	fcall	_CC2500_ReadByte
  8761                           
  8762                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  8763  118C  0021               	movlb	1	; select bank1
  8764  118D  083F               	movf	_SPI0Buffer^(0+128),w
  8765  118E  0020               	movlb	0	; select bank0
  8766  118F  00A4               	movwf	??_CC2500_RxData
  8767  1190  0824               	movf	??_CC2500_RxData,w
  8768  1191  0021               	movlb	1	; select bank1
  8769  1192  00B7               	movwf	_CRC^(0+128)
  8770                           
  8771                           ;CC2500_B1.c: 86: RC4=1;
  8772  1193  0020               	movlb	0	; select bank0
  8773  1194  160E               	bsf	14,4	;volatile
  8774                           
  8775                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  8776  1195  0021               	movlb	1	; select bank1
  8777  1196  1BB7               	btfsc	_CRC^(0+128),7
  8778                           
  8779                           ;CC2500_B1.c: 88: Receive_OK=1;
  8780  1197  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  8781  1198                     l8933:	
  8782                           
  8783                           ;CC2500_B1.c: 89: }
  8784                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  8785  1198  3036               	movlw	54
  8786  1199  31A5  256B  3191   	fcall	_CC2500_WriteCommand
  8787                           
  8788                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  8789  119C  303A               	movlw	58
  8790  119D  31A5  256B  3191   	fcall	_CC2500_WriteCommand
  8791                           
  8792                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  8793  11A0  0020               	movlb	0	; select bank0
  8794  11A1  01A2               	clrf	setRF_RxStatus@command
  8795  11A2  3001               	movlw	1
  8796  11A3  31A5  2531         	fcall	_setRF_RxStatus
  8797  11A5  0008               	return
  8798  11A6                     __end_of_CC2500_RxData:	
  8799                           
  8800                           	psect	text35
  8801  2531                     __ptext35:	
  8802 ;; *************** function _setRF_RxStatus *****************
  8803 ;; Defined at:
  8804 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  rf              1    wreg     unsigned char 
  8807 ;;  command         1    2[BANK0 ] unsigned char 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  rf              1    3[BANK0 ] unsigned char 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;		None               void
  8812 ;; Registers used:
  8813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8819 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;Total ram usage:        2 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    5
  8826 ;; This function calls:
  8827 ;;		_RfPointSelect
  8828 ;; This function is called by:
  8829 ;;		_CC2500_RxData
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           
  8834                           ;psect for function _setRF_RxStatus
  8835  2531                     _setRF_RxStatus:	
  8836                           
  8837                           ;incstack = 0
  8838                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8839                           ;setRF_RxStatus@rf stored from wreg
  8840  2531  0020               	movlb	0	; select bank0
  8841  2532  00A3               	movwf	setRF_RxStatus@rf
  8842                           
  8843                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  8844  2533  0823               	movf	setRF_RxStatus@rf,w
  8845  2534  31A4  2468         	fcall	_RfPointSelect
  8846                           
  8847                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  8848  2536  087C               	movf	_RF,w
  8849  2537  0086               	movwf	6
  8850  2538  0187               	clrf	7
  8851  2539  0020               	movlb	0	; select bank0
  8852  253A  0822               	movf	setRF_RxStatus@command,w
  8853  253B  1181               	bcf	1,3
  8854  253C  1D03               	skipz
  8855  253D  1581               	bsf	1,3
  8856  253E  0008               	return
  8857  253F                     __end_of_setRF_RxStatus:	
  8858                           
  8859                           	psect	text36
  8860  276C                     __ptext36:	
  8861 ;; *************** function _CC2500_ReadStatus *****************
  8862 ;; Defined at:
  8863 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  status_addr     1    wreg     unsigned char 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;  status_addr     1    3[BANK0 ] unsigned char 
  8868 ;; Return value:  Size  Location     Type
  8869 ;;		None               void
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0, pclath, cstack
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;Total ram usage:        2 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; Hardware stack levels required when called:    5
  8884 ;; This function calls:
  8885 ;;		_CC2500_ReadByte
  8886 ;;		_CC2500_WriteByte
  8887 ;; This function is called by:
  8888 ;;		_CC2500_RxData
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           
  8893                           ;psect for function _CC2500_ReadStatus
  8894  276C                     _CC2500_ReadStatus:	
  8895                           
  8896                           ;incstack = 0
  8897                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  8898                           ;CC2500_ReadStatus@status_addr stored from wreg
  8899  276C  0020               	movlb	0	; select bank0
  8900  276D  00A3               	movwf	CC2500_ReadStatus@status_addr
  8901                           
  8902                           ;CC2500_B1.c: 269: RC4=0;
  8903  276E  120E               	bcf	14,4	;volatile
  8904                           
  8905                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  8906  276F  0823               	movf	CC2500_ReadStatus@status_addr,w
  8907  2770  3EC0               	addlw	192
  8908  2771  00A2               	movwf	??_CC2500_ReadStatus
  8909  2772  0822               	movf	??_CC2500_ReadStatus,w
  8910  2773  0021               	movlb	1	; select bank1
  8911  2774  00BF               	movwf	_SPI0Buffer^(0+128)
  8912  2775                     l403:	
  8913                           ;CC2500_B1.c: 272: while(RC2==1);
  8914                           
  8915  2775  0020               	movlb	0	; select bank0
  8916  2776  190E               	btfsc	14,2	;volatile
  8917  2777  2F75               	goto	l403
  8918                           
  8919                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  8920  2778  31A6  26D3  31A7   	fcall	_CC2500_WriteByte
  8921                           
  8922                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  8923  277B  3198  2066         	fcall	_CC2500_ReadByte
  8924                           
  8925                           ;CC2500_B1.c: 276: RC4=1;
  8926  277D  0020               	movlb	0	; select bank0
  8927  277E  160E               	bsf	14,4	;volatile
  8928                           
  8929                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  8930  277F  0021               	movlb	1	; select bank1
  8931  2780  083F               	movf	_SPI0Buffer^(0+128),w
  8932  2781  0020               	movlb	0	; select bank0
  8933  2782  00A2               	movwf	??_CC2500_ReadStatus
  8934  2783  0822               	movf	??_CC2500_ReadStatus,w
  8935  2784  0021               	movlb	1	; select bank1
  8936  2785  00C3               	movwf	_s_data^(0+128)
  8937  2786  0008               	return
  8938  2787                     __end_of_CC2500_ReadStatus:	
  8939                           
  8940                           	psect	text37
  8941  1866                     __ptext37:	
  8942 ;; *************** function _CC2500_ReadByte *****************
  8943 ;; Defined at:
  8944 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;		None
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  loop_b          1    1[BANK0 ] unsigned char 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;		None               void
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;Total ram usage:        2 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    4
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_CC2500_RxData
  8969 ;;		_CC2500_ReadStatus
  8970 ;;		_CC2500_ReadREG
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           
  8975                           ;psect for function _CC2500_ReadByte
  8976  1866                     _CC2500_ReadByte:	
  8977                           
  8978                           ;CC2500_B1.c: 212: unsigned char loop_b;
  8979                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  8980                           
  8981                           ;incstack = 0
  8982                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  8983  1866  0020               	movlb	0	; select bank0
  8984  1867  01A1               	clrf	CC2500_ReadByte@loop_b
  8985  1868                     L11:	
  8986  1868  3008               	movlw	8
  8987  1869  0221               	subwf	CC2500_ReadByte@loop_b,w
  8988  186A  1803               	btfsc	3,0
  8989  186B  0008               	return
  8990                           
  8991                           ;CC2500_B1.c: 214: {
  8992                           ;CC2500_B1.c: 215: RC1=1;
  8993  186C  148E               	bsf	14,1	;volatile
  8994                           
  8995                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  8996  186D  1003               	clrc
  8997  186E  0021               	movlb	1	; select bank1
  8998  186F  0DBF               	rlf	_SPI0Buffer^(0+128),f
  8999                           
  9000                           ;CC2500_B1.c: 217: if(RC2 == 1)
  9001  1870  0020               	movlb	0	; select bank0
  9002  1871  1D0E               	btfss	14,2	;volatile
  9003  1872  2876               	goto	l6659
  9004                           
  9005                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  9006  1873  0021               	movlb	1	; select bank1
  9007  1874  143F               	bsf	_SPI0Buffer^(0+128),0
  9008  1875  287C               	goto	l6661
  9009  1876                     l6659:	
  9010                           
  9011                           ;CC2500_B1.c: 219: else
  9012                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  9013  1876  30FE               	movlw	254
  9014  1877  0020               	movlb	0	; select bank0
  9015  1878  00A0               	movwf	??_CC2500_ReadByte
  9016  1879  0820               	movf	??_CC2500_ReadByte,w
  9017  187A  0021               	movlb	1	; select bank1
  9018  187B  05BF               	andwf	_SPI0Buffer^(0+128),f
  9019  187C                     l6661:	
  9020                           
  9021                           ;CC2500_B1.c: 221: RC1=0;
  9022  187C  0020               	movlb	0	; select bank0
  9023  187D  108E               	bcf	14,1	;volatile
  9024  187E  3001               	movlw	1
  9025  187F  00A0               	movwf	??_CC2500_ReadByte
  9026  1880  0820               	movf	??_CC2500_ReadByte,w
  9027  1881  07A1               	addwf	CC2500_ReadByte@loop_b,f
  9028  1882  2868               	goto	L11
  9029  1883                     __end_of_CC2500_ReadByte:	
  9030                           
  9031                           	psect	text38
  9032  23D8                     __ptext38:	
  9033 ;; *************** function _RF_Initialization *****************
  9034 ;; Defined at:
  9035 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;		None
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;		None
  9040 ;; Return value:  Size  Location     Type
  9041 ;;		None               void
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, pclath, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;Total ram usage:        0 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    5
  9056 ;; This function calls:
  9057 ;;		_setRF_Initialization
  9058 ;; This function is called by:
  9059 ;;		_main
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           
  9064                           ;psect for function _RF_Initialization
  9065  23D8                     _RF_Initialization:	
  9066                           
  9067                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  9068                           
  9069                           ;incstack = 0
  9070                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9071  23D8  3001               	movlw	1
  9072  23D9  31A4  2407         	fcall	_setRF_Initialization
  9073  23DB  0008               	return
  9074  23DC                     __end_of_RF_Initialization:	
  9075                           
  9076                           	psect	text39
  9077  2407                     __ptext39:	
  9078 ;; *************** function _setRF_Initialization *****************
  9079 ;; Defined at:
  9080 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  rf              1    wreg     unsigned char 
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;  rf              1    0[COMMON] unsigned char 
  9085 ;; Return value:  Size  Location     Type
  9086 ;;		None               void
  9087 ;; Registers used:
  9088 ;;		wreg
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;Total ram usage:        1 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:    4
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_RF_Initialization
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _setRF_Initialization
  9110  2407                     _setRF_Initialization:	
  9111                           
  9112                           ;RF_Control_B1.c: 54: Tx_Length=21;
  9113                           
  9114                           ;incstack = 0
  9115                           ; Regs used in _setRF_Initialization: [wreg]
  9116  2407  3015               	movlw	21
  9117  2408  0020               	movlb	0	; select bank0
  9118  2409  00A0               	movwf	??_setRF_Initialization
  9119  240A  0820               	movf	??_setRF_Initialization,w
  9120  240B  0021               	movlb	1	; select bank1
  9121  240C  00C0               	movwf	_Tx_Length^(0+128)
  9122  240D  0008               	return
  9123  240E                     __end_of_setRF_Initialization:	
  9124                           
  9125                           	psect	text40
  9126  23C6                     __ptext40:	
  9127 ;; *************** function _PowerFault_Main *****************
  9128 ;; Defined at:
  9129 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;		None
  9134 ;; Return value:  Size  Location     Type
  9135 ;;		None               void
  9136 ;; Registers used:
  9137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;Total ram usage:        0 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:   10
  9150 ;; This function calls:
  9151 ;;		_setPowerFault_Main
  9152 ;; This function is called by:
  9153 ;;		_main
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           
  9158                           ;psect for function _PowerFault_Main
  9159  23C6                     _PowerFault_Main:	
  9160                           
  9161                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  9162                           
  9163                           ;incstack = 0
  9164                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9165  23C6  318D  25CF         	fcall	_setPowerFault_Main
  9166  23C8  0008               	return
  9167  23C9                     __end_of_PowerFault_Main:	
  9168                           
  9169                           	psect	text41
  9170  0DCF                     __ptext41:	
  9171 ;; *************** function _setPowerFault_Main *****************
  9172 ;; Defined at:
  9173 ;;		line 61 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;		None               void
  9180 ;; Registers used:
  9181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;Total ram usage:        2 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:    9
  9194 ;; This function calls:
  9195 ;;		_getLoad_Safe
  9196 ;;		_getTemp_Safe
  9197 ;;		_setPowerFault_Exceptions
  9198 ;; This function is called by:
  9199 ;;		_PowerFault_Main
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           
  9204                           ;psect for function _setPowerFault_Main
  9205  0DCF                     _setPowerFault_Main:	
  9206                           
  9207                           ;PowerFault_B1.c: 63: if(PF->Enable)
  9208                           
  9209                           ;incstack = 0
  9210                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9211  0DCF  087B               	movf	_PF,w
  9212  0DD0  0086               	movwf	6
  9213  0DD1  3001               	movlw	1	; select bank2/3
  9214  0DD2  0087               	movwf	7
  9215  0DD3  1C01               	btfss	1,0
  9216  0DD4  0008               	return
  9217                           
  9218                           ;PowerFault_B1.c: 64: {
  9219                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  9220  0DD5  087B               	movf	_PF,w
  9221  0DD6  0086               	movwf	6
  9222  0DD7  3001               	movlw	1	; select bank2/3
  9223  0DD8  0087               	movwf	7
  9224  0DD9  1981               	btfsc	1,3
  9225  0DDA  2E1F               	goto	l9451
  9226                           
  9227                           ;PowerFault_B1.c: 66: {
  9228                           ;PowerFault_B1.c: 67: PF->Time++;
  9229  0DDB  087B               	movf	_PF,w
  9230  0DDC  3E06               	addlw	6
  9231  0DDD  0086               	movwf	6
  9232  0DDE  3001               	movlw	1	; select bank2/3
  9233  0DDF  0087               	movwf	7
  9234  0DE0  3001               	movlw	1
  9235  0DE1  0781               	addwf	1,f
  9236  0DE2  3141               	addfsr 1,1
  9237  0DE3  1803               	skipnc
  9238  0DE4  0A81               	incf	1,f
  9239                           
  9240                           ;PowerFault_B1.c: 68: if(PF->Time >= 700)
  9241  0DE5  087B               	movf	_PF,w
  9242  0DE6  3E06               	addlw	6
  9243  0DE7  0086               	movwf	6
  9244  0DE8  3001               	movlw	1	; select bank2/3
  9245  0DE9  0087               	movwf	7
  9246  0DEA  3F40               	moviw [0]fsr1
  9247  0DEB  0020               	movlb	0	; select bank0
  9248  0DEC  00AD               	movwf	??_setPowerFault_Main
  9249  0DED  3F41               	moviw [1]fsr1
  9250  0DEE  00AE               	movwf	??_setPowerFault_Main+1
  9251  0DEF  3002               	movlw	2
  9252  0DF0  022E               	subwf	??_setPowerFault_Main+1,w
  9253  0DF1  30BC               	movlw	188
  9254  0DF2  1903               	skipnz
  9255  0DF3  022D               	subwf	??_setPowerFault_Main,w
  9256  0DF4  1C03               	skipc
  9257  0DF5  0008               	return
  9258                           
  9259                           ;PowerFault_B1.c: 69: {
  9260                           ;PowerFault_B1.c: 70: if(getLoad_Safe() && getTemp_Safe())
  9261  0DF6  31A4  249F  318D   	fcall	_getLoad_Safe
  9262  0DF9  3A00               	xorlw	0
  9263  0DFA  1903               	skipnz
  9264  0DFB  2E15               	goto	l9449
  9265  0DFC  31A3  23F9  318D   	fcall	_getTemp_Safe
  9266  0DFF  3A00               	xorlw	0
  9267  0E00  1903               	skipnz
  9268  0E01  2E15               	goto	l9449
  9269                           
  9270                           ;PowerFault_B1.c: 71: {
  9271                           ;PowerFault_B1.c: 72: PF->Time=0;
  9272  0E02  087B               	movf	_PF,w
  9273  0E03  3E06               	addlw	6
  9274  0E04  0086               	movwf	6
  9275  0E05  3001               	movlw	1	; select bank2/3
  9276  0E06  0087               	movwf	7
  9277  0E07  3000               	movlw	0
  9278  0E08  3FC0               	movwi [0]fsr1
  9279  0E09  3FC1               	movwi [1]fsr1
  9280                           
  9281                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  9282  0E0A  087B               	movf	_PF,w
  9283  0E0B  0086               	movwf	6
  9284  0E0C  3001               	movlw	1	; select bank2/3
  9285  0E0D  0087               	movwf	7
  9286  0E0E  1581               	bsf	1,3
  9287                           
  9288                           ;PowerFault_B1.c: 74: PF->Safe=0;
  9289  0E0F  087B               	movf	_PF,w
  9290  0E10  0086               	movwf	6
  9291  0E11  3001               	movlw	1	; select bank2/3
  9292  0E12  0087               	movwf	7
  9293  0E13  1101               	bcf	1,2
  9294                           
  9295                           ;PowerFault_B1.c: 75: }
  9296  0E14  0008               	return
  9297  0E15                     l9449:	
  9298                           
  9299                           ;PowerFault_B1.c: 76: else
  9300                           ;PowerFault_B1.c: 77: {
  9301                           ;PowerFault_B1.c: 78: PF->Time=700;
  9302  0E15  087B               	movf	_PF,w
  9303  0E16  3E06               	addlw	6
  9304  0E17  0086               	movwf	6
  9305  0E18  3001               	movlw	1	; select bank2/3
  9306  0E19  0087               	movwf	7
  9307  0E1A  30BC               	movlw	188
  9308  0E1B  3FC0               	movwi [0]fsr1
  9309  0E1C  3002               	movlw	2
  9310  0E1D  3FC1               	movwi [1]fsr1
  9311                           
  9312                           ;PowerFault_B1.c: 79: }
  9313                           ;PowerFault_B1.c: 80: }
  9314                           ;PowerFault_B1.c: 81: }
  9315  0E1E  0008               	return
  9316  0E1F                     l9451:	
  9317                           
  9318                           ;PowerFault_B1.c: 82: else
  9319                           ;PowerFault_B1.c: 83: {
  9320                           ;PowerFault_B1.c: 84: PF->Time++;
  9321  0E1F  087B               	movf	_PF,w
  9322  0E20  3E06               	addlw	6
  9323  0E21  0086               	movwf	6
  9324  0E22  3001               	movlw	1	; select bank2/3
  9325  0E23  0087               	movwf	7
  9326  0E24  3001               	movlw	1
  9327  0E25  0781               	addwf	1,f
  9328  0E26  3141               	addfsr 1,1
  9329  0E27  1803               	skipnc
  9330  0E28  0A81               	incf	1,f
  9331                           
  9332                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
  9333  0E29  087B               	movf	_PF,w
  9334  0E2A  3E06               	addlw	6
  9335  0E2B  0086               	movwf	6
  9336  0E2C  3001               	movlw	1	; select bank2/3
  9337  0E2D  0087               	movwf	7
  9338  0E2E  3F40               	moviw [0]fsr1
  9339  0E2F  0020               	movlb	0	; select bank0
  9340  0E30  00AD               	movwf	??_setPowerFault_Main
  9341  0E31  3F41               	moviw [1]fsr1
  9342  0E32  00AE               	movwf	??_setPowerFault_Main+1
  9343  0E33  3000               	movlw	0
  9344  0E34  022E               	subwf	??_setPowerFault_Main+1,w
  9345  0E35  3002               	movlw	2
  9346  0E36  1903               	skipnz
  9347  0E37  022D               	subwf	??_setPowerFault_Main,w
  9348  0E38  1C03               	skipc
  9349  0E39  0008               	return
  9350                           
  9351                           ;PowerFault_B1.c: 86: {
  9352                           ;PowerFault_B1.c: 87: PF->Time=0;
  9353  0E3A  087B               	movf	_PF,w
  9354  0E3B  3E06               	addlw	6
  9355  0E3C  0086               	movwf	6
  9356  0E3D  3001               	movlw	1	; select bank2/3
  9357  0E3E  0087               	movwf	7
  9358  0E3F  3000               	movlw	0
  9359  0E40  3FC0               	movwi [0]fsr1
  9360  0E41  3FC1               	movwi [1]fsr1
  9361                           
  9362                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
  9363  0E42  087B               	movf	_PF,w
  9364  0E43  0086               	movwf	6
  9365  0E44  3001               	movlw	1	; select bank2/3
  9366  0E45  0087               	movwf	7
  9367  0E46  1181               	bcf	1,3
  9368                           
  9369                           ;PowerFault_B1.c: 90: if(PF->ERROR)
  9370  0E47  087B               	movf	_PF,w
  9371  0E48  0086               	movwf	6
  9372  0E49  3001               	movlw	1	; select bank2/3
  9373  0E4A  0087               	movwf	7
  9374  0E4B  1C81               	btfss	1,1
  9375  0E4C  2E88               	goto	l9471
  9376                           
  9377                           ;PowerFault_B1.c: 91: {
  9378                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  9379  0E4D  0A7B               	incf	_PF,w
  9380  0E4E  0086               	movwf	6
  9381  0E4F  3001               	movlw	1	; select bank2/3
  9382  0E50  0087               	movwf	7
  9383  0E51  3F40               	moviw [0]fsr1
  9384  0E52  00AD               	movwf	??_setPowerFault_Main
  9385  0E53  3F41               	moviw [1]fsr1
  9386  0E54  00AE               	movwf	??_setPowerFault_Main+1
  9387  0E55  3001               	movlw	1
  9388  0E56  022E               	subwf	??_setPowerFault_Main+1,w
  9389  0E57  3091               	movlw	145
  9390  0E58  1903               	skipnz
  9391  0E59  022D               	subwf	??_setPowerFault_Main,w
  9392  0E5A  1803               	skipnc
  9393  0E5B  2EC4               	goto	l9483
  9394  0E5C  0A7B               	incf	_PF,w
  9395  0E5D  0086               	movwf	6
  9396  0E5E  3001               	movlw	1	; select bank2/3
  9397  0E5F  0087               	movwf	7
  9398  0E60  3F40               	moviw [0]fsr1
  9399  0E61  00AD               	movwf	??_setPowerFault_Main
  9400  0E62  3F41               	moviw [1]fsr1
  9401  0E63  00AE               	movwf	??_setPowerFault_Main+1
  9402  0E64  3000               	movlw	0
  9403  0E65  022E               	subwf	??_setPowerFault_Main+1,w
  9404  0E66  30C8               	movlw	200
  9405  0E67  1903               	skipnz
  9406  0E68  022D               	subwf	??_setPowerFault_Main,w
  9407  0E69  1C03               	skipc
  9408  0E6A  2EC4               	goto	l9483
  9409                           
  9410                           ;PowerFault_B1.c: 93: {
  9411                           ;PowerFault_B1.c: 94: PF->Count++;
  9412  0E6B  3001               	movlw	1
  9413  0E6C  00AD               	movwf	??_setPowerFault_Main
  9414  0E6D  087B               	movf	_PF,w
  9415  0E6E  3E05               	addlw	5
  9416  0E6F  0086               	movwf	6
  9417  0E70  3001               	movlw	1	; select bank2/3
  9418  0E71  0087               	movwf	7
  9419  0E72  082D               	movf	??_setPowerFault_Main,w
  9420  0E73  0781               	addwf	1,f
  9421                           
  9422                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
  9423  0E74  087B               	movf	_PF,w
  9424  0E75  3E05               	addlw	5
  9425  0E76  0086               	movwf	6
  9426  0E77  3001               	movlw	1	; select bank2/3
  9427  0E78  0087               	movwf	7
  9428  0E79  3002               	movlw	2
  9429  0E7A  0201               	subwf	1,w
  9430  0E7B  1C03               	skipc
  9431  0E7C  2ECA               	goto	l9485
  9432                           
  9433                           ;PowerFault_B1.c: 96: {
  9434                           ;PowerFault_B1.c: 97: PF->Count=0;
  9435  0E7D  087B               	movf	_PF,w
  9436  0E7E  3E05               	addlw	5
  9437  0E7F  0086               	movwf	6
  9438  0E80  3001               	movlw	1	; select bank2/3
  9439  0E81  0087               	movwf	7
  9440  0E82  0181               	clrf	1
  9441                           
  9442                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
  9443  0E83  3000               	movlw	0
  9444  0E84  319B  238B  318D   	fcall	_setPowerFault_Exceptions
  9445                           
  9446                           ;PowerFault_B1.c: 99: }
  9447                           ;PowerFault_B1.c: 100: }
  9448  0E87  2ECA               	goto	l9485
  9449  0E88                     l9471:	
  9450                           ;PowerFault_B1.c: 104: }
  9451                           ;PowerFault_B1.c: 105: }
  9452                           
  9453                           ;PowerFault_B1.c: 101: else
  9454                           ;PowerFault_B1.c: 102: {
  9455                           ;PowerFault_B1.c: 103: PF->Count=0;
  9456                           
  9457                           
  9458                           ;PowerFault_B1.c: 106: else
  9459                           ;PowerFault_B1.c: 107: {
  9460                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  9461  0E88  0A7B               	incf	_PF,w
  9462  0E89  0086               	movwf	6
  9463  0E8A  3001               	movlw	1	; select bank2/3
  9464  0E8B  0087               	movwf	7
  9465  0E8C  3F40               	moviw [0]fsr1
  9466  0E8D  0020               	movlb	0	; select bank0
  9467  0E8E  00AD               	movwf	??_setPowerFault_Main
  9468  0E8F  3F41               	moviw [1]fsr1
  9469  0E90  00AE               	movwf	??_setPowerFault_Main+1
  9470  0E91  3001               	movlw	1
  9471  0E92  022E               	subwf	??_setPowerFault_Main+1,w
  9472  0E93  3090               	movlw	144
  9473  0E94  1903               	skipnz
  9474  0E95  022D               	subwf	??_setPowerFault_Main,w
  9475  0E96  1803               	skipnc
  9476  0E97  2EA7               	goto	l9475
  9477  0E98  0A7B               	incf	_PF,w
  9478  0E99  0086               	movwf	6
  9479  0E9A  3001               	movlw	1	; select bank2/3
  9480  0E9B  0087               	movwf	7
  9481  0E9C  3F40               	moviw [0]fsr1
  9482  0E9D  00AD               	movwf	??_setPowerFault_Main
  9483  0E9E  3F41               	moviw [1]fsr1
  9484  0E9F  00AE               	movwf	??_setPowerFault_Main+1
  9485  0EA0  3000               	movlw	0
  9486  0EA1  022E               	subwf	??_setPowerFault_Main+1,w
  9487  0EA2  30D3               	movlw	211
  9488  0EA3  1903               	skipnz
  9489  0EA4  022D               	subwf	??_setPowerFault_Main,w
  9490  0EA5  1803               	skipnc
  9491  0EA6  2EC4               	goto	l9483
  9492  0EA7                     l9475:	
  9493                           
  9494                           ;PowerFault_B1.c: 109: {
  9495                           ;PowerFault_B1.c: 110: PF->Count++;
  9496  0EA7  3001               	movlw	1
  9497  0EA8  00AD               	movwf	??_setPowerFault_Main
  9498  0EA9  087B               	movf	_PF,w
  9499  0EAA  3E05               	addlw	5
  9500  0EAB  0086               	movwf	6
  9501  0EAC  3001               	movlw	1	; select bank2/3
  9502  0EAD  0087               	movwf	7
  9503  0EAE  082D               	movf	??_setPowerFault_Main,w
  9504  0EAF  0781               	addwf	1,f
  9505                           
  9506                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
  9507  0EB0  087B               	movf	_PF,w
  9508  0EB1  3E05               	addlw	5
  9509  0EB2  0086               	movwf	6
  9510  0EB3  3001               	movlw	1	; select bank2/3
  9511  0EB4  0087               	movwf	7
  9512  0EB5  3002               	movlw	2
  9513  0EB6  0201               	subwf	1,w
  9514  0EB7  1C03               	skipc
  9515  0EB8  2ECA               	goto	l9485
  9516                           
  9517                           ;PowerFault_B1.c: 112: {
  9518                           ;PowerFault_B1.c: 113: PF->Count=0;
  9519  0EB9  087B               	movf	_PF,w
  9520  0EBA  3E05               	addlw	5
  9521  0EBB  0086               	movwf	6
  9522  0EBC  3001               	movlw	1	; select bank2/3
  9523  0EBD  0087               	movwf	7
  9524  0EBE  0181               	clrf	1
  9525                           
  9526                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
  9527  0EBF  3001               	movlw	1
  9528  0EC0  319B  238B  318D   	fcall	_setPowerFault_Exceptions
  9529                           
  9530                           ;PowerFault_B1.c: 115: }
  9531                           ;PowerFault_B1.c: 116: }
  9532  0EC3  2ECA               	goto	l9485
  9533  0EC4                     l9483:	
  9534                           
  9535                           ;PowerFault_B1.c: 117: else
  9536                           ;PowerFault_B1.c: 118: {
  9537                           ;PowerFault_B1.c: 119: PF->Count=0;
  9538  0EC4  087B               	movf	_PF,w
  9539  0EC5  3E05               	addlw	5
  9540  0EC6  0086               	movwf	6
  9541  0EC7  3001               	movlw	1	; select bank2/3
  9542  0EC8  0087               	movwf	7
  9543  0EC9  0181               	clrf	1
  9544  0ECA                     l9485:	
  9545                           
  9546                           ;PowerFault_B1.c: 120: }
  9547                           ;PowerFault_B1.c: 122: }
  9548                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
  9549  0ECA  087B               	movf	_PF,w
  9550  0ECB  0086               	movwf	6
  9551  0ECC  3001               	movlw	1	; select bank2/3
  9552  0ECD  0087               	movwf	7
  9553  0ECE  1881               	btfsc	1,1
  9554  0ECF  2ED5               	goto	l2457
  9555                           
  9556                           ;PowerFault_B1.c: 124: {
  9557                           ;PowerFault_B1.c: 125: PF->Safe=1;
  9558  0ED0  087B               	movf	_PF,w
  9559  0ED1  0086               	movwf	6
  9560  0ED2  3001               	movlw	1	; select bank2/3
  9561  0ED3  0087               	movwf	7
  9562  0ED4  1501               	bsf	1,2
  9563  0ED5                     l2457:	
  9564                           
  9565                           ;PowerFault_B1.c: 126: }
  9566                           ;PowerFault_B1.c: 127: PF->AD=0;
  9567  0ED5  0A7B               	incf	_PF,w
  9568  0ED6  0086               	movwf	6
  9569  0ED7  3001               	movlw	1	; select bank2/3
  9570  0ED8  0087               	movwf	7
  9571  0ED9  3000               	movlw	0
  9572  0EDA  3FC0               	movwi [0]fsr1
  9573  0EDB  3FC1               	movwi [1]fsr1
  9574  0EDC  0008               	return
  9575  0EDD                     __end_of_setPowerFault_Main:	
  9576                           
  9577                           	psect	text42
  9578  1B8B                     __ptext42:	
  9579 ;; *************** function _setPowerFault_Exceptions *****************
  9580 ;; Defined at:
  9581 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;  command         1    wreg     unsigned char 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  command         1   12[BANK0 ] unsigned char 
  9586 ;; Return value:  Size  Location     Type
  9587 ;;		None               void
  9588 ;; Registers used:
  9589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;Total ram usage:        2 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    8
  9602 ;; This function calls:
  9603 ;;		_DimmerLights_Exceptions
  9604 ;;		_setLED
  9605 ;;		_setRF_Enable
  9606 ;;		_setSw_Enable
  9607 ;; This function is called by:
  9608 ;;		_setPowerFault_Main
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           
  9613                           ;psect for function _setPowerFault_Exceptions
  9614  1B8B                     _setPowerFault_Exceptions:	
  9615                           
  9616                           ;incstack = 0
  9617                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9618                           ;setPowerFault_Exceptions@command stored from wreg
  9619  1B8B  0020               	movlb	0	; select bank0
  9620  1B8C  00AC               	movwf	setPowerFault_Exceptions@command
  9621                           
  9622                           ;PowerFault_B1.c: 135: PF->ERROR=command;
  9623  1B8D  087B               	movf	_PF,w
  9624  1B8E  0086               	movwf	6
  9625  1B8F  3001               	movlw	1	; select bank2/3
  9626  1B90  0087               	movwf	7
  9627  1B91  082C               	movf	setPowerFault_Exceptions@command,w
  9628  1B92  1081               	bcf	1,1
  9629  1B93  1D03               	skipz
  9630  1B94  1481               	bsf	1,1
  9631                           
  9632                           ;PowerFault_B1.c: 136: PF->Safe=(~command) & 0x01;
  9633  1B95  092C               	comf	setPowerFault_Exceptions@command,w
  9634  1B96  3901               	andlw	1
  9635  1B97  00AB               	movwf	??_setPowerFault_Exceptions
  9636  1B98  087B               	movf	_PF,w
  9637  1B99  0086               	movwf	6
  9638  1B9A  3001               	movlw	1	; select bank2/3
  9639  1B9B  0087               	movwf	7
  9640  1B9C  0DAB               	rlf	??_setPowerFault_Exceptions,f
  9641  1B9D  0DAB               	rlf	??_setPowerFault_Exceptions,f
  9642  1B9E  0801               	movf	1,w
  9643  1B9F  062B               	xorwf	??_setPowerFault_Exceptions,w
  9644  1BA0  39FB               	andlw	-5
  9645  1BA1  062B               	xorwf	??_setPowerFault_Exceptions,w
  9646  1BA2  0081               	movwf	1
  9647                           
  9648                           ;PowerFault_B1.c: 137: if(command == 1)
  9649  1BA3  082C               	movf	setPowerFault_Exceptions@command,w
  9650  1BA4  3A01               	xorlw	1
  9651  1BA5  1D03               	skipz
  9652  1BA6  2BAB               	goto	l2461
  9653                           
  9654                           ;PowerFault_B1.c: 138: {
  9655                           ;PowerFault_B1.c: 139: DimmerLights_Exceptions(3);
  9656  1BA7  3003               	movlw	3
  9657  1BA8  3191  21A6  319B   	fcall	_DimmerLights_Exceptions
  9658  1BAB                     l2461:	
  9659                           
  9660                           ;PowerFault_B1.c: 140: }
  9661                           ;PowerFault_B1.c: 141: setLED(99,command+10);
  9662  1BAB  0020               	movlb	0	; select bank0
  9663  1BAC  082C               	movf	setPowerFault_Exceptions@command,w
  9664  1BAD  3E0A               	addlw	10
  9665  1BAE  00AB               	movwf	??_setPowerFault_Exceptions
  9666  1BAF  082B               	movf	??_setPowerFault_Exceptions,w
  9667  1BB0  00A2               	movwf	setLED@command
  9668  1BB1  3063               	movlw	99
  9669  1BB2  3190  2083  319B   	fcall	_setLED
  9670                           
  9671                           ;PowerFault_B1.c: 143: setSw_Enable((~command) & 0x01);
  9672  1BB5  0020               	movlb	0	; select bank0
  9673  1BB6  092C               	comf	setPowerFault_Exceptions@command,w
  9674  1BB7  3901               	andlw	1
  9675  1BB8  31A7  2787  319B   	fcall	_setSw_Enable
  9676                           
  9677                           ;PowerFault_B1.c: 145: setRF_Enable(1,(~command) & 0x01);
  9678  1BBB  0020               	movlb	0	; select bank0
  9679  1BBC  092C               	comf	setPowerFault_Exceptions@command,w
  9680  1BBD  3901               	andlw	1
  9681  1BBE  00AB               	movwf	??_setPowerFault_Exceptions
  9682  1BBF  082B               	movf	??_setPowerFault_Exceptions,w
  9683  1BC0  00A2               	movwf	setRF_Enable@command
  9684  1BC1  3001               	movlw	1
  9685  1BC2  3199  21A7         	fcall	_setRF_Enable
  9686  1BC4  0008               	return
  9687  1BC5                     __end_of_setPowerFault_Exceptions:	
  9688                           
  9689                           	psect	text43
  9690  249F                     __ptext43:	
  9691 ;; *************** function _getLoad_Safe *****************
  9692 ;; Defined at:
  9693 ;;		line 297 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;		None
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;		None
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      unsigned char 
  9700 ;; Registers used:
  9701 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9711 ;;Total ram usage:        1 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:    4
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_setTemp_Main
  9718 ;;		_setPowerFault_Main
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           
  9723                           ;psect for function _getLoad_Safe
  9724  249F                     _getLoad_Safe:	
  9725                           
  9726                           ;OverLoad_B1.c: 299: return Load->Safe;
  9727                           
  9728                           ;incstack = 0
  9729                           ; Regs used in _getLoad_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
  9730  249F  0020               	movlb	0	; select bank0
  9731  24A0  086E               	movf	_Load,w
  9732  24A1  0086               	movwf	6
  9733  24A2  3002               	movlw	2	; select bank4/5
  9734  24A3  0087               	movwf	7
  9735  24A4  0C01               	rrf	1,w
  9736  24A5  00A0               	movwf	??_getLoad_Safe
  9737  24A6  0CA0               	rrf	??_getLoad_Safe,f
  9738  24A7  0C20               	rrf	??_getLoad_Safe,w
  9739  24A8  3901               	andlw	1
  9740  24A9  0008               	return
  9741  24AA                     __end_of_getLoad_Safe:	
  9742                           
  9743                           	psect	text44
  9744  23C3                     __ptext44:	
  9745 ;; *************** function _PowerFault_Initialization *****************
  9746 ;; Defined at:
  9747 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;		None
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;		None               void
  9754 ;; Registers used:
  9755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;Total ram usage:        0 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:    5
  9768 ;; This function calls:
  9769 ;;		_setPowerFault_Initialization
  9770 ;; This function is called by:
  9771 ;;		_main
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           
  9776                           ;psect for function _PowerFault_Initialization
  9777  23C3                     _PowerFault_Initialization:	
  9778                           
  9779                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
  9780                           
  9781                           ;incstack = 0
  9782                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  9783  23C3  31A5  25BB         	fcall	_setPowerFault_Initialization
  9784  23C5  0008               	return
  9785  23C6                     __end_of_PowerFault_Initialization:	
  9786                           
  9787                           	psect	text45
  9788  25BB                     __ptext45:	
  9789 ;; *************** function _setPowerFault_Initialization *****************
  9790 ;; Defined at:
  9791 ;;		line 29 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;		None
  9796 ;; Return value:  Size  Location     Type
  9797 ;;		None               void
  9798 ;; Registers used:
  9799 ;;		wreg, fsr1l, fsr1h
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;Total ram usage:        1 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:    4
  9812 ;; This function calls:
  9813 ;;		Nothing
  9814 ;; This function is called by:
  9815 ;;		_PowerFault_Initialization
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           
  9820                           ;psect for function _setPowerFault_Initialization
  9821  25BB                     _setPowerFault_Initialization:	
  9822                           
  9823                           ;PowerFault_B1.c: 31: PF=&PF1;
  9824                           
  9825                           ;incstack = 0
  9826                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
  9827  25BB  3066               	movlw	_PF1& (0+255)
  9828  25BC  0020               	movlb	0	; select bank0
  9829  25BD  00A0               	movwf	??_setPowerFault_Initialization
  9830  25BE  0820               	movf	??_setPowerFault_Initialization,w
  9831  25BF  00FB               	movwf	_PF
  9832                           
  9833                           ;PowerFault_B1.c: 32: PF->Enable=1;
  9834  25C0  087B               	movf	_PF,w
  9835  25C1  0086               	movwf	6
  9836  25C2  3001               	movlw	1	; select bank2/3
  9837  25C3  0087               	movwf	7
  9838  25C4  1401               	bsf	1,0
  9839                           
  9840                           ;PowerFault_B1.c: 33: PF->Safe=1;
  9841  25C5  087B               	movf	_PF,w
  9842  25C6  0086               	movwf	6
  9843  25C7  3001               	movlw	1	; select bank2/3
  9844  25C8  0087               	movwf	7
  9845  25C9  1501               	bsf	1,2
  9846  25CA  0008               	return
  9847  25CB                     __end_of_setPowerFault_Initialization:	
  9848                           
  9849                           	psect	text46
  9850  26BB                     __ptext46:	
  9851 ;; *************** function _Mcu_Initialization *****************
  9852 ;; Defined at:
  9853 ;;		line 11 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;		None
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;		None
  9858 ;; Return value:  Size  Location     Type
  9859 ;;		None               void
  9860 ;; Registers used:
  9861 ;;		wreg, status,2, status,0, pclath, cstack
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;Total ram usage:        1 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; Hardware stack levels required when called:    5
  9874 ;; This function calls:
  9875 ;;		_ADC_Set
  9876 ;;		_INT_Set
  9877 ;;		_IOC_Set
  9878 ;;		_IO_Set
  9879 ;;		_TMR0_Set
  9880 ;; This function is called by:
  9881 ;;		_main
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           
  9886                           ;psect for function _Mcu_Initialization
  9887  26BB                     _Mcu_Initialization:	
  9888                           
  9889                           ;MCU_16f1518_B1.c: 14: OSCCON=0x78; ;;
  9890                           
  9891                           ;incstack = 0
  9892                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9893  26BB  3078               	movlw	120
  9894  26BC  0021               	movlb	1	; select bank1
  9895  26BD  0099               	movwf	25	;volatile
  9896                           
  9897                           ;MCU_16f1518_B1.c: 16: IO_Set();
  9898  26BE  31A7  271E  31A6   	fcall	_IO_Set
  9899                           
  9900                           ;MCU_16f1518_B1.c: 18: TMR0_Set();
  9901  26C1  31A5  2517  31A6   	fcall	_TMR0_Set
  9902                           
  9903                           ;MCU_16f1518_B1.c: 20: ;;
  9904                           ;MCU_16f1518_B1.c: 22: ADC_Set();
  9905  26C4  31A4  2400  31A6   	fcall	_ADC_Set
  9906                           
  9907                           ;MCU_16f1518_B1.c: 26: INT_Set();
  9908  26C7  31A3  23E0  31A6   	fcall	_INT_Set
  9909                           
  9910                           ;MCU_16f1518_B1.c: 28: IOC_Set();
  9911  26CA  31A5  250A         	fcall	_IOC_Set
  9912                           
  9913                           ;MCU_16f1518_B1.c: 30: ;;
  9914                           ;MCU_16f1518_B1.c: 32: ;;
  9915                           ;MCU_16f1518_B1.c: 34: Memory=&VarMemory;
  9916  26CC  3020               	movlw	_VarMemory& (0+255)
  9917  26CD  0020               	movlb	0	; select bank0
  9918  26CE  00A1               	movwf	??_Mcu_Initialization
  9919  26CF  0821               	movf	??_Mcu_Initialization,w
  9920  26D0  0021               	movlb	1	; select bank1
  9921  26D1  00E8               	movwf	_Memory^(0+128)
  9922  26D2  0008               	return
  9923  26D3                     __end_of_Mcu_Initialization:	
  9924                           
  9925                           	psect	text47
  9926  2517                     __ptext47:	
  9927 ;; *************** function _TMR0_Set *****************
  9928 ;; Defined at:
  9929 ;;		line 73 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;		None
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;		None               void
  9936 ;; Registers used:
  9937 ;;		wreg, status,2
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;Total ram usage:        1 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    4
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_Mcu_Initialization
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           
  9958                           ;psect for function _TMR0_Set
  9959  2517                     _TMR0_Set:	
  9960                           
  9961                           ;MCU_16f1518_B1.c: 75: Timer0=&VarTimer0;
  9962                           
  9963                           ;incstack = 0
  9964                           ; Regs used in _TMR0_Set: [wreg+status,2]
  9965  2517  30C4               	movlw	_VarTimer0& (0+255)
  9966  2518  0020               	movlb	0	; select bank0
  9967  2519  00A0               	movwf	??_TMR0_Set
  9968  251A  0820               	movf	??_TMR0_Set,w
  9969  251B  0021               	movlb	1	; select bank1
  9970  251C  00EA               	movwf	_Timer0^(0+128)
  9971                           
  9972                           ;MCU_16f1518_B1.c: 76: OPTION_REG=0x00;
  9973  251D  0195               	clrf	21	;volatile
  9974                           
  9975                           ;MCU_16f1518_B1.c: 77: TMR0=(256-90);
  9976  251E  30A6               	movlw	166
  9977  251F  0020               	movlb	0	; select bank0
  9978  2520  0095               	movwf	21	;volatile
  9979                           
  9980                           ;MCU_16f1518_B1.c: 78: TMR0IE=1;
  9981  2521  168B               	bsf	11,5	;volatile
  9982                           
  9983                           ;MCU_16f1518_B1.c: 79: GIE=1;
  9984  2522  178B               	bsf	11,7	;volatile
  9985  2523  0008               	return
  9986  2524                     __end_of_TMR0_Set:	
  9987                           
  9988                           	psect	text48
  9989  271E                     __ptext48:	
  9990 ;; *************** function _IO_Set *****************
  9991 ;; Defined at:
  9992 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;		None
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;		None
  9997 ;; Return value:  Size  Location     Type
  9998 ;;		None               void
  9999 ;; Registers used:
 10000 ;;		wreg, status,2
 10001 ;; Tracked objects:
 10002 ;;		On entry : 0/0
 10003 ;;		On exit  : 0/0
 10004 ;;		Unchanged: 0/0
 10005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;Total ram usage:        0 bytes
 10011 ;; Hardware stack levels used:    1
 10012 ;; Hardware stack levels required when called:    4
 10013 ;; This function calls:
 10014 ;;		Nothing
 10015 ;; This function is called by:
 10016 ;;		_Mcu_Initialization
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           
 10021                           ;psect for function _IO_Set
 10022  271E                     _IO_Set:	
 10023                           
 10024                           ;MCU_16f1518_B1.c: 39: TRISA=0b01110111;;
 10025                           
 10026                           ;incstack = 0
 10027                           ; Regs used in _IO_Set: [wreg+status,2]
 10028  271E  3077               	movlw	119
 10029  271F  0021               	movlb	1	; select bank1
 10030  2720  008C               	movwf	12	;volatile
 10031                           
 10032                           ;MCU_16f1518_B1.c: 40: TRISB=0b00000111;;
 10033  2721  3007               	movlw	7
 10034  2722  008D               	movwf	13	;volatile
 10035                           
 10036                           ;MCU_16f1518_B1.c: 41: TRISC=0b00001100;;
 10037  2723  300C               	movlw	12
 10038  2724  008E               	movwf	14	;volatile
 10039                           
 10040                           ;MCU_16f1518_B1.c: 42: LATA=0b00000000;;
 10041  2725  0022               	movlb	2	; select bank2
 10042  2726  018C               	clrf	12	;volatile
 10043                           
 10044                           ;MCU_16f1518_B1.c: 43: LATB=0b00000010;;
 10045  2727  3002               	movlw	2
 10046  2728  008D               	movwf	13	;volatile
 10047                           
 10048                           ;MCU_16f1518_B1.c: 44: LATC=0b00000000;;
 10049  2729  018E               	clrf	14	;volatile
 10050                           
 10051                           ;MCU_16f1518_B1.c: 45: ANSELA=0b00100010;;
 10052  272A  3022               	movlw	34
 10053  272B  0023               	movlb	3	; select bank3
 10054  272C  008C               	movwf	12	;volatile
 10055                           
 10056                           ;MCU_16f1518_B1.c: 46: ANSELB=0b00000000;;
 10057  272D  018D               	clrf	13	;volatile
 10058                           
 10059                           ;MCU_16f1518_B1.c: 47: ANSELC=0b00000000;;
 10060  272E  018E               	clrf	14	;volatile
 10061                           
 10062                           ;MCU_16f1518_B1.c: 48: PORTA=0b01110111;;
 10063  272F  3077               	movlw	119
 10064  2730  0020               	movlb	0	; select bank0
 10065  2731  008C               	movwf	12	;volatile
 10066                           
 10067                           ;MCU_16f1518_B1.c: 49: PORTB=0b00000111;;
 10068  2732  3007               	movlw	7
 10069  2733  008D               	movwf	13	;volatile
 10070                           
 10071                           ;MCU_16f1518_B1.c: 50: PORTC=0b00001100;;
 10072  2734  300C               	movlw	12
 10073  2735  008E               	movwf	14	;volatile
 10074  2736  0008               	return
 10075  2737                     __end_of_IO_Set:	
 10076                           
 10077                           	psect	text49
 10078  250A                     __ptext49:	
 10079 ;; *************** function _IOC_Set *****************
 10080 ;; Defined at:
 10081 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;		None
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;		None               void
 10088 ;; Registers used:
 10089 ;;		wreg, status,2
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;Total ram usage:        0 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    4
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_Mcu_Initialization
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109                           
 10110                           ;psect for function _IOC_Set
 10111  250A                     _IOC_Set:	
 10112                           
 10113                           ;MCU_16f1518_B1.c: 248: WPUB2=0;
 10114                           
 10115                           ;incstack = 0
 10116                           ; Regs used in _IOC_Set: [wreg+status,2]
 10117  250A  0024               	movlb	4	; select bank4
 10118  250B  110D               	bcf	13,2	;volatile
 10119                           
 10120                           ;MCU_16f1518_B1.c: 250: IOCBP=0b00000100;
 10121  250C  3004               	movlw	4
 10122  250D  0027               	movlb	7	; select bank7
 10123  250E  0094               	movwf	20	;volatile
 10124                           
 10125                           ;MCU_16f1518_B1.c: 251: IOCBN=0b00000100;
 10126  250F  3004               	movlw	4
 10127  2510  0095               	movwf	21	;volatile
 10128                           
 10129                           ;MCU_16f1518_B1.c: 259: IOCBF=0b00000000;
 10130  2511  0196               	clrf	22	;volatile
 10131                           
 10132                           ;MCU_16f1518_B1.c: 261: IOCIE=1;
 10133  2512  158B               	bsf	11,3	;volatile
 10134                           
 10135                           ;MCU_16f1518_B1.c: 262: IOCIF=0;
 10136  2513  100B               	bcf	11,0	;volatile
 10137                           
 10138                           ;MCU_16f1518_B1.c: 263: PEIE=1;
 10139  2514  170B               	bsf	11,6	;volatile
 10140                           
 10141                           ;MCU_16f1518_B1.c: 264: GIE=1;
 10142  2515  178B               	bsf	11,7	;volatile
 10143  2516  0008               	return
 10144  2517                     __end_of_IOC_Set:	
 10145                           
 10146                           	psect	text50
 10147  23E0                     __ptext50:	
 10148 ;; *************** function _INT_Set *****************
 10149 ;; Defined at:
 10150 ;;		line 217 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;		None
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;		None
 10155 ;; Return value:  Size  Location     Type
 10156 ;;		None               void
 10157 ;; Registers used:
 10158 ;;		None
 10159 ;; Tracked objects:
 10160 ;;		On entry : 0/0
 10161 ;;		On exit  : 0/0
 10162 ;;		Unchanged: 0/0
 10163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;Total ram usage:        0 bytes
 10169 ;; Hardware stack levels used:    1
 10170 ;; Hardware stack levels required when called:    4
 10171 ;; This function calls:
 10172 ;;		Nothing
 10173 ;; This function is called by:
 10174 ;;		_Mcu_Initialization
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           
 10179                           ;psect for function _INT_Set
 10180  23E0                     _INT_Set:	
 10181                           
 10182                           ;MCU_16f1518_B1.c: 219: WPUB0=0;
 10183                           
 10184                           ;incstack = 0
 10185                           ; Regs used in _INT_Set: []
 10186  23E0  0024               	movlb	4	; select bank4
 10187  23E1  100D               	bcf	13,0	;volatile
 10188                           
 10189                           ;MCU_16f1518_B1.c: 220: INTE=1;
 10190  23E2  160B               	bsf	11,4	;volatile
 10191                           
 10192                           ;MCU_16f1518_B1.c: 221: PEIE=1;
 10193  23E3  170B               	bsf	11,6	;volatile
 10194                           
 10195                           ;MCU_16f1518_B1.c: 222: GIE=1;
 10196  23E4  178B               	bsf	11,7	;volatile
 10197  23E5  0008               	return
 10198  23E6                     __end_of_INT_Set:	
 10199                           
 10200                           	psect	text51
 10201  2400                     __ptext51:	
 10202 ;; *************** function _ADC_Set *****************
 10203 ;; Defined at:
 10204 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;		None               void
 10211 ;; Registers used:
 10212 ;;		wreg
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;Total ram usage:        0 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    4
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_Mcu_Initialization
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _ADC_Set
 10234  2400                     _ADC_Set:	
 10235                           
 10236                           ;MCU_16f1518_B1.c: 305: ADCON1=0xf2;
 10237                           
 10238                           ;incstack = 0
 10239                           ; Regs used in _ADC_Set: [wreg]
 10240  2400  30F2               	movlw	242
 10241  2401  0021               	movlb	1	; select bank1
 10242  2402  009E               	movwf	30	;volatile
 10243                           
 10244                           ;MCU_16f1518_B1.c: 306: FVRCON=0xc0;
 10245  2403  30C0               	movlw	192
 10246  2404  0022               	movlb	2	; select bank2
 10247  2405  0097               	movwf	23	;volatile
 10248  2406  0008               	return
 10249  2407                     __end_of_ADC_Set:	
 10250                           
 10251                           	psect	text52
 10252  2494                     __ptext52:	
 10253 ;; *************** function _MainT_Initialization *****************
 10254 ;; Defined at:
 10255 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;		None
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;		None
 10260 ;; Return value:  Size  Location     Type
 10261 ;;		None               void
 10262 ;; Registers used:
 10263 ;;		wreg
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;Total ram usage:        1 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    4
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_main
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           
 10284                           ;psect for function _MainT_Initialization
 10285  2494                     _MainT_Initialization:	
 10286                           
 10287                           ;main.c: 95: Product=&VarProduct;
 10288                           
 10289                           ;incstack = 0
 10290                           ; Regs used in _MainT_Initialization: [wreg]
 10291  2494  30A0               	movlw	_VarProduct& (0+255)
 10292  2495  0020               	movlb	0	; select bank0
 10293  2496  00A0               	movwf	??_MainT_Initialization
 10294  2497  0820               	movf	??_MainT_Initialization,w
 10295  2498  00EF               	movwf	_Product
 10296                           
 10297                           ;main.c: 98: TMain=&VarTMain;
 10298  2499  30C0               	movlw	_VarTMain& (0+255)
 10299  249A  00A0               	movwf	??_MainT_Initialization
 10300  249B  0820               	movf	??_MainT_Initialization,w
 10301  249C  0021               	movlb	1	; select bank1
 10302  249D  00E9               	movwf	_TMain^(0+128)
 10303  249E  0008               	return
 10304  249F                     __end_of_MainT_Initialization:	
 10305                           
 10306                           	psect	text53
 10307  1EA8                     __ptext53:	
 10308 ;; *************** function _MainT *****************
 10309 ;; Defined at:
 10310 ;;		line 103 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;		None
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;		None
 10315 ;; Return value:  Size  Location     Type
 10316 ;;		None               void
 10317 ;; Registers used:
 10318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;Total ram usage:        0 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; Hardware stack levels required when called:    6
 10331 ;; This function calls:
 10332 ;;		_setBuz
 10333 ;;		_setLoad_Enable
 10334 ;;		_setRF_Enable
 10335 ;;		_setSw_Enable
 10336 ;;		_setTemp_Enable
 10337 ;; This function is called by:
 10338 ;;		_main
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           
 10343                           ;psect for function _MainT
 10344  1EA8                     _MainT:	
 10345                           
 10346                           ;main.c: 106: if(!TMain->PowerON)
 10347                           
 10348                           ;incstack = 0
 10349                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10350  1EA8  0021               	movlb	1	; select bank1
 10351  1EA9  0869               	movf	_TMain^(0+128),w
 10352  1EAA  0086               	movwf	6
 10353  1EAB  3001               	movlw	1	; select bank2/3
 10354  1EAC  0087               	movwf	7
 10355  1EAD  1801               	btfsc	1,0
 10356  1EAE  0008               	return
 10357                           
 10358                           ;main.c: 107: {
 10359                           ;main.c: 108: TMain->PowerCount++;
 10360  1EAF  0A69               	incf	_TMain^(0+128),w
 10361  1EB0  0086               	movwf	6
 10362  1EB1  3001               	movlw	1	; select bank2/3
 10363  1EB2  0087               	movwf	7
 10364  1EB3  3001               	movlw	1
 10365  1EB4  0781               	addwf	1,f
 10366  1EB5  3141               	addfsr 1,1
 10367  1EB6  1803               	skipnc
 10368  1EB7  0A81               	incf	1,f
 10369                           
 10370                           ;main.c: 109: if(TMain->PowerCount == 150)
 10371  1EB8  0A69               	incf	_TMain^(0+128),w
 10372  1EB9  0086               	movwf	6
 10373  1EBA  3001               	movlw	1	; select bank2/3
 10374  1EBB  0087               	movwf	7
 10375  1EBC  3F40               	moviw [0]fsr1
 10376  1EBD  3A96               	xorlw	150
 10377  1EBE  1D03               	skipz
 10378  1EBF  2EC2               	goto	u9925
 10379  1EC0  3F41               	moviw [1]fsr1
 10380  1EC1  3A00               	xorlw	0
 10381  1EC2                     u9925:	
 10382  1EC2  1D03               	skipz
 10383  1EC3  0008               	return
 10384                           
 10385                           ;main.c: 110: {
 10386                           ;main.c: 111: TMain->PowerCount=0;
 10387  1EC4  0A69               	incf	_TMain^(0+128),w
 10388  1EC5  0086               	movwf	6
 10389  1EC6  3001               	movlw	1	; select bank2/3
 10390  1EC7  0087               	movwf	7
 10391  1EC8  3000               	movlw	0
 10392  1EC9  3FC0               	movwi [0]fsr1
 10393  1ECA  3FC1               	movwi [1]fsr1
 10394                           
 10395                           ;main.c: 112: TMain->PowerON=1;
 10396  1ECB  0869               	movf	_TMain^(0+128),w
 10397  1ECC  0086               	movwf	6
 10398  1ECD  3001               	movlw	1	; select bank2/3
 10399  1ECE  0087               	movwf	7
 10400  1ECF  1401               	bsf	1,0
 10401                           
 10402                           ;main.c: 115: setTemp_Enable(1);
 10403  1ED0  3001               	movlw	1
 10404  1ED1  31A4  2489  319E   	fcall	_setTemp_Enable
 10405                           
 10406                           ;main.c: 119: setLoad_Enable(1);
 10407  1ED4  3001               	movlw	1
 10408  1ED5  31A5  25AB  319E   	fcall	_setLoad_Enable
 10409                           
 10410                           ;main.c: 125: setBuz(3,50);
 10411  1ED8  3032               	movlw	50
 10412  1ED9  0020               	movlb	0	; select bank0
 10413  1EDA  00A6               	movwf	setBuz@time
 10414  1EDB  3000               	movlw	0
 10415  1EDC  00A7               	movwf	setBuz@time+1
 10416  1EDD  3003               	movlw	3
 10417  1EDE  3193  23C3  319E   	fcall	_setBuz
 10418                           
 10419                           ;main.c: 126: TMain->SelfTest=1;
 10420  1EE1  0021               	movlb	1	; select bank1
 10421  1EE2  0869               	movf	_TMain^(0+128),w
 10422  1EE3  3E03               	addlw	3
 10423  1EE4  0086               	movwf	6
 10424  1EE5  3001               	movlw	1	; select bank2/3
 10425  1EE6  0087               	movwf	7
 10426  1EE7  1401               	bsf	1,0
 10427                           
 10428                           ;main.c: 128: setSw_Enable(1);
 10429  1EE8  3001               	movlw	1
 10430  1EE9  31A7  2787  319E   	fcall	_setSw_Enable
 10431                           
 10432                           ;main.c: 131: setRF_Enable(1,1);
 10433  1EEC  0020               	movlb	0	; select bank0
 10434  1EED  01A2               	clrf	setRF_Enable@command
 10435  1EEE  0AA2               	incf	setRF_Enable@command,f
 10436  1EEF  3001               	movlw	1
 10437  1EF0  3199  21A7         	fcall	_setRF_Enable
 10438                           
 10439                           ;main.c: 135: }
 10440                           ;main.c: 136: }
 10441  1EF2  0008               	return
 10442  1EF3                     __end_of_MainT:	
 10443                           ;main.c: 137: else
 10444                           ;main.c: 138: {
 10445                           
 10446                           
 10447                           	psect	text54
 10448  2489                     __ptext54:	
 10449 ;; *************** function _setTemp_Enable *****************
 10450 ;; Defined at:
 10451 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  command         1    wreg     unsigned char 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;  command         1    0[BANK0 ] unsigned char 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;		None               void
 10458 ;; Registers used:
 10459 ;;		wreg, fsr1l, fsr1h
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;Total ram usage:        1 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    4
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_MainT
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           
 10480                           ;psect for function _setTemp_Enable
 10481  2489                     _setTemp_Enable:	
 10482                           
 10483                           ;incstack = 0
 10484                           ; Regs used in _setTemp_Enable: [wregfsr1]
 10485                           ;setTemp_Enable@command stored from wreg
 10486  2489  0020               	movlb	0	; select bank0
 10487  248A  00A0               	movwf	setTemp_Enable@command
 10488                           
 10489                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
 10490  248B  087D               	movf	_Temp,w
 10491  248C  0086               	movwf	6
 10492  248D  3001               	movlw	1	; select bank2/3
 10493  248E  0087               	movwf	7
 10494  248F  0820               	movf	setTemp_Enable@command,w
 10495  2490  1001               	bcf	1,0
 10496  2491  1D03               	skipz
 10497  2492  1401               	bsf	1,0
 10498  2493  0008               	return
 10499  2494                     __end_of_setTemp_Enable:	
 10500                           
 10501                           	psect	text55
 10502  25AB                     __ptext55:	
 10503 ;; *************** function _setLoad_Enable *****************
 10504 ;; Defined at:
 10505 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;  command         1    wreg     unsigned char 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;  command         1    0[BANK0 ] unsigned char 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;		None               void
 10512 ;; Registers used:
 10513 ;;		wreg, fsr1l, fsr1h
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10523 ;;Total ram usage:        1 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    4
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_MainT
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           
 10534                           ;psect for function _setLoad_Enable
 10535  25AB                     _setLoad_Enable:	
 10536                           
 10537                           ;incstack = 0
 10538                           ; Regs used in _setLoad_Enable: [wregfsr1]
 10539                           ;setLoad_Enable@command stored from wreg
 10540  25AB  0020               	movlb	0	; select bank0
 10541  25AC  00A0               	movwf	setLoad_Enable@command
 10542                           
 10543                           ;OverLoad_B1.c: 255: Load->Enable=command;
 10544  25AD  086E               	movf	_Load,w
 10545  25AE  0086               	movwf	6
 10546  25AF  3002               	movlw	2	; select bank4/5
 10547  25B0  0087               	movwf	7
 10548  25B1  0820               	movf	setLoad_Enable@command,w
 10549  25B2  1001               	bcf	1,0
 10550  25B3  1D03               	skipz
 10551  25B4  1401               	bsf	1,0
 10552                           
 10553                           ;OverLoad_B1.c: 256: Load->GO=0;
 10554  25B5  086E               	movf	_Load,w
 10555  25B6  0086               	movwf	6
 10556  25B7  3002               	movlw	2	; select bank4/5
 10557  25B8  0087               	movwf	7
 10558  25B9  1081               	bcf	1,1
 10559  25BA  0008               	return
 10560  25BB                     __end_of_setLoad_Enable:	
 10561                           
 10562                           	psect	text56
 10563  03A4                     __ptext56:	
 10564 ;; *************** function _Load_Main *****************
 10565 ;; Defined at:
 10566 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;		None
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  i               1   17[BANK0 ] unsigned char 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;		None               void
 10573 ;; Registers used:
 10574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10583 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;Total ram usage:        5 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    9
 10587 ;; This function calls:
 10588 ;;		___lwdiv
 10589 ;;		___wmul
 10590 ;;		_getPF_Safe
 10591 ;;		_getTemp_Safe
 10592 ;;		_setDimmerLights_Clear
 10593 ;;		_setLoad_AH_AL_Restore
 10594 ;;		_setLoad_Exceptions
 10595 ;; This function is called by:
 10596 ;;		_main
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           
 10601                           ;psect for function _Load_Main
 10602  03A4                     _Load_Main:	
 10603                           
 10604                           ;OverLoad_B1.c: 47: char i;
 10605                           ;OverLoad_B1.c: 48: if(Load->ERROR)
 10606                           
 10607                           ;incstack = 0
 10608                           ; Regs used in _Load_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10609  03A4  0020               	movlb	0	; select bank0
 10610  03A5  086E               	movf	_Load,w
 10611  03A6  0086               	movwf	6
 10612  03A7  3002               	movlw	2	; select bank4/5
 10613  03A8  0087               	movwf	7
 10614  03A9  1E81               	btfss	1,5
 10615  03AA  2BD1               	goto	l9835
 10616                           
 10617                           ;OverLoad_B1.c: 49: {
 10618                           ;OverLoad_B1.c: 50: Load->ErrorTime++;
 10619  03AB  086E               	movf	_Load,w
 10620  03AC  3E03               	addlw	3
 10621  03AD  0086               	movwf	6
 10622  03AE  3002               	movlw	2	; select bank4/5
 10623  03AF  0087               	movwf	7
 10624  03B0  3001               	movlw	1
 10625  03B1  0781               	addwf	1,f
 10626  03B2  3141               	addfsr 1,1
 10627  03B3  1803               	skipnc
 10628  03B4  0A81               	incf	1,f
 10629                           
 10630                           ;OverLoad_B1.c: 51: if(Load->ErrorTime >= 1000)
 10631  03B5  086E               	movf	_Load,w
 10632  03B6  3E03               	addlw	3
 10633  03B7  0086               	movwf	6
 10634  03B8  3002               	movlw	2	; select bank4/5
 10635  03B9  0087               	movwf	7
 10636  03BA  3F40               	moviw [0]fsr1
 10637  03BB  00AD               	movwf	??_Load_Main
 10638  03BC  3F41               	moviw [1]fsr1
 10639  03BD  00AE               	movwf	??_Load_Main+1
 10640  03BE  3003               	movlw	3
 10641  03BF  022E               	subwf	??_Load_Main+1,w
 10642  03C0  30E8               	movlw	232
 10643  03C1  1903               	skipnz
 10644  03C2  022D               	subwf	??_Load_Main,w
 10645  03C3  1C03               	skipc
 10646  03C4  0008               	return
 10647                           
 10648                           ;OverLoad_B1.c: 52: {
 10649                           ;OverLoad_B1.c: 53: Load->ErrorTime=0;
 10650  03C5  086E               	movf	_Load,w
 10651  03C6  3E03               	addlw	3
 10652  03C7  0086               	movwf	6
 10653  03C8  3002               	movlw	2	; select bank4/5
 10654  03C9  0087               	movwf	7
 10655  03CA  3000               	movlw	0
 10656  03CB  3FC0               	movwi [0]fsr1
 10657  03CC  3FC1               	movwi [1]fsr1
 10658                           
 10659                           ;OverLoad_B1.c: 54: setLoad_Exceptions(0);
 10660  03CD  3000               	movlw	0
 10661  03CE  319D  250A         	fcall	_setLoad_Exceptions
 10662                           
 10663                           ;OverLoad_B1.c: 55: }
 10664                           ;OverLoad_B1.c: 56: }
 10665  03D0  0008               	return
 10666  03D1                     l9835:	
 10667                           
 10668                           ;OverLoad_B1.c: 57: else
 10669                           ;OverLoad_B1.c: 58: {
 10670                           ;OverLoad_B1.c: 59: if(Load->ADtoGO)
 10671  03D1  0020               	movlb	0	; select bank0
 10672  03D2  086E               	movf	_Load,w
 10673  03D3  0086               	movwf	6
 10674  03D4  3002               	movlw	2	; select bank4/5
 10675  03D5  0087               	movwf	7
 10676  03D6  1E01               	btfss	1,4
 10677  03D7  2DD7               	goto	l9917
 10678                           
 10679                           ;OverLoad_B1.c: 60: {
 10680                           ;OverLoad_B1.c: 61: Load->Time++;
 10681  03D8  0A6E               	incf	_Load,w
 10682  03D9  0086               	movwf	6
 10683  03DA  3002               	movlw	2	; select bank4/5
 10684  03DB  0087               	movwf	7
 10685  03DC  3001               	movlw	1
 10686  03DD  0781               	addwf	1,f
 10687  03DE  3141               	addfsr 1,1
 10688  03DF  1803               	skipnc
 10689  03E0  0A81               	incf	1,f
 10690                           
 10691                           ;OverLoad_B1.c: 62: if(Load->Time >= 5)
 10692  03E1  0A6E               	incf	_Load,w
 10693  03E2  0086               	movwf	6
 10694  03E3  3002               	movlw	2	; select bank4/5
 10695  03E4  0087               	movwf	7
 10696  03E5  3F40               	moviw [0]fsr1
 10697  03E6  00AD               	movwf	??_Load_Main
 10698  03E7  3F41               	moviw [1]fsr1
 10699  03E8  00AE               	movwf	??_Load_Main+1
 10700  03E9  3000               	movlw	0
 10701  03EA  022E               	subwf	??_Load_Main+1,w
 10702  03EB  3005               	movlw	5
 10703  03EC  1903               	skipnz
 10704  03ED  022D               	subwf	??_Load_Main,w
 10705  03EE  1C03               	skipc
 10706  03EF  0008               	return
 10707                           
 10708                           ;OverLoad_B1.c: 63: {
 10709                           ;OverLoad_B1.c: 64: Load->Time=0;
 10710  03F0  0A6E               	incf	_Load,w
 10711  03F1  0086               	movwf	6
 10712  03F2  3002               	movlw	2	; select bank4/5
 10713  03F3  0087               	movwf	7
 10714  03F4  3000               	movlw	0
 10715  03F5  3FC0               	movwi [0]fsr1
 10716  03F6  3FC1               	movwi [1]fsr1
 10717                           
 10718                           ;OverLoad_B1.c: 65: Load->ADtoGO=0;
 10719  03F7  086E               	movf	_Load,w
 10720  03F8  0086               	movwf	6
 10721  03F9  3002               	movlw	2	; select bank4/5
 10722  03FA  0087               	movwf	7
 10723  03FB  1201               	bcf	1,4
 10724                           
 10725                           ;OverLoad_B1.c: 66: Load->LightsCount=Load->Lights1Status+Load->Lights2Status+Load->Ligh
      +                          ts3Status;
 10726  03FC  086E               	movf	_Load,w
 10727  03FD  3E45               	addlw	69
 10728  03FE  0086               	movwf	6
 10729  03FF  3002               	movlw	2	; select bank4/5
 10730  0400  0087               	movwf	7
 10731  0401  086E               	movf	_Load,w
 10732  0402  3E44               	addlw	68
 10733  0403  0084               	movwf	4
 10734  0404  3002               	movlw	2	; select bank4/5
 10735  0405  0085               	movwf	5
 10736  0406  0800               	movf	0,w
 10737  0407  00AD               	movwf	??_Load_Main
 10738  0408  086E               	movf	_Load,w
 10739  0409  3E43               	addlw	67
 10740  040A  0084               	movwf	4
 10741  040B  3002               	movlw	2	; select bank4/5
 10742  040C  0085               	movwf	5
 10743  040D  0800               	movf	0,w
 10744  040E  072D               	addwf	??_Load_Main,w
 10745  040F  0701               	addwf	1,w
 10746  0410  00AE               	movwf	??_Load_Main+1
 10747  0411  086E               	movf	_Load,w
 10748  0412  3E3E               	addlw	62
 10749  0413  0086               	movwf	6
 10750  0414  3002               	movlw	2	; select bank4/5
 10751  0415  0087               	movwf	7
 10752  0416  082E               	movf	??_Load_Main+1,w
 10753  0417  0081               	movwf	1
 10754                           
 10755                           ;OverLoad_B1.c: 67: for(i=1 ; i<4 ; i++)
 10756  0418  01B1               	clrf	Load_Main@i
 10757  0419  0AB1               	incf	Load_Main@i,f
 10758  041A  3004               	movlw	4
 10759  041B  0231               	subwf	Load_Main@i,w
 10760  041C  1803               	btfsc	3,0
 10761  041D  2C4C               	goto	l9857
 10762  041E                     l9851:	
 10763                           
 10764                           ;OverLoad_B1.c: 68: {
 10765                           ;OverLoad_B1.c: 69: Load->ADH+=Load->AH[i];
 10766  041E  3531               	lslf	Load_Main@i,w
 10767  041F  3E08               	addlw	8
 10768  0420  076E               	addwf	_Load,w
 10769  0421  00AD               	movwf	??_Load_Main
 10770  0422  082D               	movf	??_Load_Main,w
 10771  0423  0086               	movwf	6
 10772  0424  3002               	movlw	2	; select bank4/5
 10773  0425  0087               	movwf	7
 10774  0426  086E               	movf	_Load,w
 10775  0427  3E2E               	addlw	46
 10776  0428  0084               	movwf	4
 10777  0429  3002               	movlw	2	; select bank4/5
 10778  042A  0085               	movwf	5
 10779  042B  3F40               	moviw [0]fsr1
 10780  042C  0780               	addwf	0,f
 10781  042D  3101               	addfsr 0,1
 10782  042E  3F41               	moviw [1]fsr1
 10783  042F  3D80               	addwfc	0,f
 10784  0430  313F               	addfsr 0,-1
 10785                           
 10786                           ;OverLoad_B1.c: 70: Load->ADL+=Load->AL[i];
 10787  0431  3531               	lslf	Load_Main@i,w
 10788  0432  3E1A               	addlw	26
 10789  0433  076E               	addwf	_Load,w
 10790  0434  00AD               	movwf	??_Load_Main
 10791  0435  082D               	movf	??_Load_Main,w
 10792  0436  0086               	movwf	6
 10793  0437  3002               	movlw	2	; select bank4/5
 10794  0438  0087               	movwf	7
 10795  0439  086E               	movf	_Load,w
 10796  043A  3E30               	addlw	48
 10797  043B  0084               	movwf	4
 10798  043C  3002               	movlw	2	; select bank4/5
 10799  043D  0085               	movwf	5
 10800  043E  3F40               	moviw [0]fsr1
 10801  043F  0780               	addwf	0,f
 10802  0440  3101               	addfsr 0,1
 10803  0441  3F41               	moviw [1]fsr1
 10804  0442  3D80               	addwfc	0,f
 10805  0443  313F               	addfsr 0,-1
 10806  0444  3001               	movlw	1
 10807  0445  00AD               	movwf	??_Load_Main
 10808  0446  082D               	movf	??_Load_Main,w
 10809  0447  07B1               	addwf	Load_Main@i,f
 10810  0448  3004               	movlw	4
 10811  0449  0231               	subwf	Load_Main@i,w
 10812  044A  1C03               	skipc
 10813  044B  2C1E               	goto	l9851
 10814  044C                     l9857:	
 10815                           
 10816                           ;OverLoad_B1.c: 71: }
 10817                           ;OverLoad_B1.c: 72: Load->ADH/=3;
 10818  044C  3003               	movlw	3
 10819  044D  00A0               	movwf	___lwdiv@divisor
 10820  044E  3000               	movlw	0
 10821  044F  00A1               	movwf	___lwdiv@divisor+1
 10822  0450  086E               	movf	_Load,w
 10823  0451  3E2E               	addlw	46
 10824  0452  0086               	movwf	6
 10825  0453  3002               	movlw	2	; select bank4/5
 10826  0454  0087               	movwf	7
 10827  0455  3F40               	moviw [0]fsr1
 10828  0456  00A2               	movwf	___lwdiv@dividend
 10829  0457  3F41               	moviw [1]fsr1
 10830  0458  00A3               	movwf	___lwdiv@dividend+1
 10831  0459  319B  2354  3183   	fcall	___lwdiv
 10832  045C  0020               	movlb	0	; select bank0
 10833  045D  086E               	movf	_Load,w
 10834  045E  3E2E               	addlw	46
 10835  045F  0086               	movwf	6
 10836  0460  3002               	movlw	2	; select bank4/5
 10837  0461  0087               	movwf	7
 10838  0462  0820               	movf	?___lwdiv,w
 10839  0463  3FC0               	movwi [0]fsr1
 10840  0464  0821               	movf	?___lwdiv+1,w
 10841  0465  3FC1               	movwi [1]fsr1
 10842                           
 10843                           ;OverLoad_B1.c: 73: Load->ADL/=3;
 10844  0466  3003               	movlw	3
 10845  0467  00A0               	movwf	___lwdiv@divisor
 10846  0468  3000               	movlw	0
 10847  0469  00A1               	movwf	___lwdiv@divisor+1
 10848  046A  086E               	movf	_Load,w
 10849  046B  3E30               	addlw	48
 10850  046C  0086               	movwf	6
 10851  046D  3002               	movlw	2	; select bank4/5
 10852  046E  0087               	movwf	7
 10853  046F  3F40               	moviw [0]fsr1
 10854  0470  00A2               	movwf	___lwdiv@dividend
 10855  0471  3F41               	moviw [1]fsr1
 10856  0472  00A3               	movwf	___lwdiv@dividend+1
 10857  0473  319B  2354  3183   	fcall	___lwdiv
 10858  0476  0020               	movlb	0	; select bank0
 10859  0477  086E               	movf	_Load,w
 10860  0478  3E30               	addlw	48
 10861  0479  0086               	movwf	6
 10862  047A  3002               	movlw	2	; select bank4/5
 10863  047B  0087               	movwf	7
 10864  047C  0820               	movf	?___lwdiv,w
 10865  047D  3FC0               	movwi [0]fsr1
 10866  047E  0821               	movf	?___lwdiv+1,w
 10867  047F  3FC1               	movwi [1]fsr1
 10868                           
 10869                           ;OverLoad_B1.c: 74: if(Load->ADH > Load->ADL)
 10870  0480  086E               	movf	_Load,w
 10871  0481  3E2E               	addlw	46
 10872  0482  0086               	movwf	6
 10873  0483  3002               	movlw	2	; select bank4/5
 10874  0484  0087               	movwf	7
 10875  0485  3F40               	moviw [0]fsr1
 10876  0486  00AD               	movwf	??_Load_Main
 10877  0487  3F41               	moviw [1]fsr1
 10878  0488  00AE               	movwf	??_Load_Main+1
 10879  0489  086E               	movf	_Load,w
 10880  048A  3E30               	addlw	48
 10881  048B  0086               	movwf	6
 10882  048C  3002               	movlw	2	; select bank4/5
 10883  048D  0087               	movwf	7
 10884  048E  3F40               	moviw [0]fsr1
 10885  048F  00AF               	movwf	??_Load_Main+2
 10886  0490  3F41               	moviw [1]fsr1
 10887  0491  00B0               	movwf	??_Load_Main+3
 10888  0492  082E               	movf	??_Load_Main+1,w
 10889  0493  0230               	subwf	??_Load_Main+3,w
 10890  0494  1D03               	skipz
 10891  0495  2C98               	goto	u10025
 10892  0496  082D               	movf	??_Load_Main,w
 10893  0497  022F               	subwf	??_Load_Main+2,w
 10894  0498                     u10025:	
 10895  0498  1803               	skipnc
 10896  0499  2DD4               	goto	l9915
 10897                           
 10898                           ;OverLoad_B1.c: 75: {
 10899                           ;OverLoad_B1.c: 76: Load->AD=(Load->ADH-Load->ADL);
 10900  049A  086E               	movf	_Load,w
 10901  049B  3E2E               	addlw	46
 10902  049C  0086               	movwf	6
 10903  049D  3002               	movlw	2	; select bank4/5
 10904  049E  0087               	movwf	7
 10905  049F  086E               	movf	_Load,w
 10906  04A0  3E30               	addlw	48
 10907  04A1  0084               	movwf	4
 10908  04A2  3002               	movlw	2	; select bank4/5
 10909  04A3  0085               	movwf	5
 10910  04A4  3F00               	moviw [0]fsr0
 10911  04A5  00AD               	movwf	??_Load_Main
 10912  04A6  3F01               	moviw [1]fsr0
 10913  04A7  00AE               	movwf	??_Load_Main+1
 10914  04A8  09AD               	comf	??_Load_Main,f
 10915  04A9  09AE               	comf	??_Load_Main+1,f
 10916  04AA  0AAD               	incf	??_Load_Main,f
 10917  04AB  1903               	skipnz
 10918  04AC  0AAE               	incf	??_Load_Main+1,f
 10919  04AD  3F40               	moviw [0]fsr1
 10920  04AE  072D               	addwf	??_Load_Main,w
 10921  04AF  00AF               	movwf	??_Load_Main+2
 10922  04B0  3F41               	moviw [1]fsr1
 10923  04B1  3D2E               	addwfc	??_Load_Main+1,w
 10924  04B2  00B0               	movwf	??_Load_Main+3
 10925  04B3  086E               	movf	_Load,w
 10926  04B4  3E2C               	addlw	44
 10927  04B5  0086               	movwf	6
 10928  04B6  3002               	movlw	2	; select bank4/5
 10929  04B7  0087               	movwf	7
 10930  04B8  082F               	movf	??_Load_Main+2,w
 10931  04B9  3FC0               	movwi [0]fsr1
 10932  04BA  0830               	movf	??_Load_Main+3,w
 10933  04BB  3FC1               	movwi [1]fsr1
 10934                           
 10935                           ;OverLoad_B1.c: 78: if(Load->Count < 2)
 10936  04BC  086E               	movf	_Load,w
 10937  04BD  3E3A               	addlw	58
 10938  04BE  0086               	movwf	6
 10939  04BF  3002               	movlw	2	; select bank4/5
 10940  04C0  0087               	movwf	7
 10941  04C1  3002               	movlw	2
 10942  04C2  0201               	subwf	1,w
 10943  04C3  1803               	skipnc
 10944  04C4  2D15               	goto	l9879
 10945                           
 10946                           ;OverLoad_B1.c: 79: {
 10947                           ;OverLoad_B1.c: 80: Load->Count++;
 10948  04C5  3001               	movlw	1
 10949  04C6  00AD               	movwf	??_Load_Main
 10950  04C7  086E               	movf	_Load,w
 10951  04C8  3E3A               	addlw	58
 10952  04C9  0086               	movwf	6
 10953  04CA  3002               	movlw	2	; select bank4/5
 10954  04CB  0087               	movwf	7
 10955  04CC  082D               	movf	??_Load_Main,w
 10956  04CD  0781               	addwf	1,f
 10957                           
 10958                           ;OverLoad_B1.c: 81: if(Load->Count == 1)
 10959  04CE  086E               	movf	_Load,w
 10960  04CF  3E3A               	addlw	58
 10961  04D0  0086               	movwf	6
 10962  04D1  3002               	movlw	2	; select bank4/5
 10963  04D2  0087               	movwf	7
 10964  04D3  0801               	movf	1,w
 10965  04D4  3A01               	xorlw	1
 10966  04D5  1D03               	skipz
 10967  04D6  2CE1               	goto	l9871
 10968                           
 10969                           ;OverLoad_B1.c: 82: {
 10970                           ;OverLoad_B1.c: 83: Load->JudgeValue=500;
 10971  04D7  086E               	movf	_Load,w
 10972  04D8  3E36               	addlw	54
 10973  04D9  0086               	movwf	6
 10974  04DA  3002               	movlw	2	; select bank4/5
 10975  04DB  0087               	movwf	7
 10976  04DC  30F4               	movlw	244
 10977  04DD  3FC0               	movwi [0]fsr1
 10978  04DE  3001               	movlw	1
 10979  04DF  3FC1               	movwi [1]fsr1
 10980                           
 10981                           ;OverLoad_B1.c: 84: }
 10982  04E0  2D15               	goto	l9879
 10983  04E1                     l9871:	
 10984                           
 10985                           ;OverLoad_B1.c: 85: else if(Load->Count == 2)
 10986  04E1  086E               	movf	_Load,w
 10987  04E2  3E3A               	addlw	58
 10988  04E3  0086               	movwf	6
 10989  04E4  3002               	movlw	2	; select bank4/5
 10990  04E5  0087               	movwf	7
 10991  04E6  0801               	movf	1,w
 10992  04E7  3A02               	xorlw	2
 10993  04E8  1D03               	skipz
 10994  04E9  2D15               	goto	l9879
 10995                           
 10996                           ;OverLoad_B1.c: 86: {
 10997                           ;OverLoad_B1.c: 87: if(Load->LightsCount == 1)
 10998  04EA  086E               	movf	_Load,w
 10999  04EB  3E3E               	addlw	62
 11000  04EC  0086               	movwf	6
 11001  04ED  3002               	movlw	2	; select bank4/5
 11002  04EE  0087               	movwf	7
 11003  04EF  0801               	movf	1,w
 11004  04F0  3A01               	xorlw	1
 11005  04F1  1D03               	skipz
 11006  04F2  2CFD               	goto	l9877
 11007                           
 11008                           ;OverLoad_B1.c: 88: {
 11009                           ;OverLoad_B1.c: 89: Load->JudgeValue=0x32;
 11010  04F3  086E               	movf	_Load,w
 11011  04F4  3E36               	addlw	54
 11012  04F5  0086               	movwf	6
 11013  04F6  3002               	movlw	2	; select bank4/5
 11014  04F7  0087               	movwf	7
 11015  04F8  3032               	movlw	50
 11016  04F9  3FC0               	movwi [0]fsr1
 11017  04FA  3000               	movlw	0
 11018  04FB  3FC1               	movwi [1]fsr1
 11019                           
 11020                           ;OverLoad_B1.c: 90: }
 11021  04FC  2D15               	goto	l9879
 11022  04FD                     l9877:	
 11023                           
 11024                           ;OverLoad_B1.c: 91: else
 11025                           ;OverLoad_B1.c: 92: {
 11026                           ;OverLoad_B1.c: 93: Load->JudgeValue=(0x32+Load->TotalLoad)-0x08;
 11027  04FD  086E               	movf	_Load,w
 11028  04FE  3E06               	addlw	6
 11029  04FF  0086               	movwf	6
 11030  0500  3002               	movlw	2	; select bank4/5
 11031  0501  0087               	movwf	7
 11032  0502  3F40               	moviw [0]fsr1
 11033  0503  00AD               	movwf	??_Load_Main
 11034  0504  3F41               	moviw [1]fsr1
 11035  0505  00AE               	movwf	??_Load_Main+1
 11036  0506  082D               	movf	??_Load_Main,w
 11037  0507  3E2A               	addlw	42
 11038  0508  00AF               	movwf	??_Load_Main+2
 11039  0509  3000               	movlw	0
 11040  050A  3D2E               	addwfc	??_Load_Main+1,w
 11041  050B  00B0               	movwf	??_Load_Main+3
 11042  050C  086E               	movf	_Load,w
 11043  050D  3E36               	addlw	54
 11044  050E  0086               	movwf	6
 11045  050F  3002               	movlw	2	; select bank4/5
 11046  0510  0087               	movwf	7
 11047  0511  082F               	movf	??_Load_Main+2,w
 11048  0512  3FC0               	movwi [0]fsr1
 11049  0513  0830               	movf	??_Load_Main+3,w
 11050  0514  3FC1               	movwi [1]fsr1
 11051  0515                     l9879:	
 11052                           
 11053                           ;OverLoad_B1.c: 94: }
 11054                           ;OverLoad_B1.c: 95: }
 11055                           ;OverLoad_B1.c: 96: }
 11056                           ;OverLoad_B1.c: 98: if(Load->AD >= Load->JudgeValue)
 11057  0515  086E               	movf	_Load,w
 11058  0516  3E36               	addlw	54
 11059  0517  0086               	movwf	6
 11060  0518  3002               	movlw	2	; select bank4/5
 11061  0519  0087               	movwf	7
 11062  051A  3F40               	moviw [0]fsr1
 11063  051B  00AD               	movwf	??_Load_Main
 11064  051C  3F41               	moviw [1]fsr1
 11065  051D  00AE               	movwf	??_Load_Main+1
 11066  051E  086E               	movf	_Load,w
 11067  051F  3E2C               	addlw	44
 11068  0520  0086               	movwf	6
 11069  0521  3002               	movlw	2	; select bank4/5
 11070  0522  0087               	movwf	7
 11071  0523  3F40               	moviw [0]fsr1
 11072  0524  00AF               	movwf	??_Load_Main+2
 11073  0525  3F41               	moviw [1]fsr1
 11074  0526  00B0               	movwf	??_Load_Main+3
 11075  0527  082E               	movf	??_Load_Main+1,w
 11076  0528  0230               	subwf	??_Load_Main+3,w
 11077  0529  1D03               	skipz
 11078  052A  2D2D               	goto	u10075
 11079  052B  082D               	movf	??_Load_Main,w
 11080  052C  022F               	subwf	??_Load_Main+2,w
 11081  052D                     u10075:	
 11082  052D  1C03               	skipc
 11083  052E  2D4C               	goto	l9889
 11084                           
 11085                           ;OverLoad_B1.c: 99: {
 11086                           ;OverLoad_B1.c: 100: Load->ErrorCount++;
 11087  052F  3001               	movlw	1
 11088  0530  00AD               	movwf	??_Load_Main
 11089  0531  086E               	movf	_Load,w
 11090  0532  3E3C               	addlw	60
 11091  0533  0086               	movwf	6
 11092  0534  3002               	movlw	2	; select bank4/5
 11093  0535  0087               	movwf	7
 11094  0536  082D               	movf	??_Load_Main,w
 11095  0537  0781               	addwf	1,f
 11096                           
 11097                           ;OverLoad_B1.c: 101: if(Load->ErrorCount >2)
 11098  0538  086E               	movf	_Load,w
 11099  0539  3E3C               	addlw	60
 11100  053A  0086               	movwf	6
 11101  053B  3002               	movlw	2	; select bank4/5
 11102  053C  0087               	movwf	7
 11103  053D  3003               	movlw	3
 11104  053E  0201               	subwf	1,w
 11105  053F  1C03               	skipc
 11106  0540  2DD4               	goto	l9915
 11107                           
 11108                           ;OverLoad_B1.c: 102: {
 11109                           ;OverLoad_B1.c: 103: Load->ErrorCount=0;
 11110  0541  086E               	movf	_Load,w
 11111  0542  3E3C               	addlw	60
 11112  0543  0086               	movwf	6
 11113  0544  3002               	movlw	2	; select bank4/5
 11114  0545  0087               	movwf	7
 11115  0546  0181               	clrf	1
 11116                           
 11117                           ;OverLoad_B1.c: 104: setLoad_Exceptions(1);
 11118  0547  3001               	movlw	1
 11119  0548  319D  250A  3183   	fcall	_setLoad_Exceptions
 11120                           
 11121                           ;OverLoad_B1.c: 113: }
 11122                           ;OverLoad_B1.c: 114: }
 11123  054B  2DD4               	goto	l9915
 11124  054C                     l9889:	
 11125                           
 11126                           ;OverLoad_B1.c: 115: else
 11127                           ;OverLoad_B1.c: 116: {
 11128                           ;OverLoad_B1.c: 117: Load->ErrorCount=0;
 11129  054C  0020               	movlb	0	; select bank0
 11130  054D  086E               	movf	_Load,w
 11131  054E  3E3C               	addlw	60
 11132  054F  0086               	movwf	6
 11133  0550  3002               	movlw	2	; select bank4/5
 11134  0551  0087               	movwf	7
 11135  0552  0181               	clrf	1
 11136                           
 11137                           ;OverLoad_B1.c: 118: if(Load->SafeCount < 10)
 11138  0553  086E               	movf	_Load,w
 11139  0554  3E42               	addlw	66
 11140  0555  0086               	movwf	6
 11141  0556  3002               	movlw	2	; select bank4/5
 11142  0557  0087               	movwf	7
 11143  0558  300A               	movlw	10
 11144  0559  0201               	subwf	1,w
 11145  055A  1803               	skipnc
 11146  055B  2D65               	goto	l9895
 11147                           
 11148                           ;OverLoad_B1.c: 119: {
 11149                           ;OverLoad_B1.c: 120: Load->SafeCount++;
 11150  055C  3001               	movlw	1
 11151  055D  00AD               	movwf	??_Load_Main
 11152  055E  086E               	movf	_Load,w
 11153  055F  3E42               	addlw	66
 11154  0560  0086               	movwf	6
 11155  0561  3002               	movlw	2	; select bank4/5
 11156  0562  0087               	movwf	7
 11157  0563  082D               	movf	??_Load_Main,w
 11158  0564  0781               	addwf	1,f
 11159  0565                     l9895:	
 11160                           
 11161                           ;OverLoad_B1.c: 121: }
 11162                           ;OverLoad_B1.c: 122: if(Load->SafeCount >= 10)
 11163  0565  086E               	movf	_Load,w
 11164  0566  3E42               	addlw	66
 11165  0567  0086               	movwf	6
 11166  0568  3002               	movlw	2	; select bank4/5
 11167  0569  0087               	movwf	7
 11168  056A  300A               	movlw	10
 11169  056B  0201               	subwf	1,w
 11170  056C  1C03               	skipc
 11171  056D  2DD4               	goto	l9915
 11172                           
 11173                           ;OverLoad_B1.c: 123: {
 11174                           ;OverLoad_B1.c: 124: Load->Safe=1;
 11175  056E  086E               	movf	_Load,w
 11176  056F  0086               	movwf	6
 11177  0570  3002               	movlw	2	; select bank4/5
 11178  0571  0087               	movwf	7
 11179  0572  1581               	bsf	1,3
 11180                           
 11181                           ;OverLoad_B1.c: 127: setDimmerLights_Clear(1,1);
 11182  0573  01A2               	clrf	setDimmerLights_Clear@command
 11183  0574  0AA2               	incf	setDimmerLights_Clear@command,f
 11184  0575  3001               	movlw	1
 11185  0576  31A5  259B  3183   	fcall	_setDimmerLights_Clear
 11186                           
 11187                           ;OverLoad_B1.c: 131: setDimmerLights_Clear(2,1);
 11188  0579  0020               	movlb	0	; select bank0
 11189  057A  01A2               	clrf	setDimmerLights_Clear@command
 11190  057B  0AA2               	incf	setDimmerLights_Clear@command,f
 11191  057C  3002               	movlw	2
 11192  057D  31A5  259B  3183   	fcall	_setDimmerLights_Clear
 11193                           
 11194                           ;OverLoad_B1.c: 138: if(Load->StatusOn)
 11195  0580  0020               	movlb	0	; select bank0
 11196  0581  086E               	movf	_Load,w
 11197  0582  3E46               	addlw	70
 11198  0583  0086               	movwf	6
 11199  0584  3002               	movlw	2	; select bank4/5
 11200  0585  0087               	movwf	7
 11201  0586  1C01               	btfss	1,0
 11202  0587  2D9C               	goto	l9907
 11203                           
 11204                           ;OverLoad_B1.c: 139: {
 11205                           ;OverLoad_B1.c: 140: Load->StatusOn=0;
 11206  0588  086E               	movf	_Load,w
 11207  0589  3E46               	addlw	70
 11208  058A  0086               	movwf	6
 11209  058B  3002               	movlw	2	; select bank4/5
 11210  058C  0087               	movwf	7
 11211  058D  1001               	bcf	1,0
 11212                           
 11213                           ;OverLoad_B1.c: 141: Load->TotalLoad=Load->AD;
 11214  058E  086E               	movf	_Load,w
 11215  058F  3E2C               	addlw	44
 11216  0590  0086               	movwf	6
 11217  0591  3002               	movlw	2	; select bank4/5
 11218  0592  0087               	movwf	7
 11219  0593  086E               	movf	_Load,w
 11220  0594  3E06               	addlw	6
 11221  0595  0084               	movwf	4
 11222  0596  3002               	movlw	2	; select bank4/5
 11223  0597  0085               	movwf	5
 11224  0598  3F40               	moviw [0]fsr1
 11225  0599  3F80               	movwi [0]fsr0
 11226  059A  3F41               	moviw [1]fsr1
 11227  059B  3F81               	movwi [1]fsr0
 11228  059C                     l9907:	
 11229                           
 11230                           ;OverLoad_B1.c: 143: }
 11231                           ;OverLoad_B1.c: 145: if(Load->StatusOff)
 11232  059C  086E               	movf	_Load,w
 11233  059D  3E46               	addlw	70
 11234  059E  0086               	movwf	6
 11235  059F  3002               	movlw	2	; select bank4/5
 11236  05A0  0087               	movwf	7
 11237  05A1  1C81               	btfss	1,1
 11238  05A2  2DD4               	goto	l9915
 11239                           
 11240                           ;OverLoad_B1.c: 146: {
 11241                           ;OverLoad_B1.c: 147: Load->StatusOff=0;
 11242  05A3  086E               	movf	_Load,w
 11243  05A4  3E46               	addlw	70
 11244  05A5  0086               	movwf	6
 11245  05A6  3002               	movlw	2	; select bank4/5
 11246  05A7  0087               	movwf	7
 11247  05A8  1081               	bcf	1,1
 11248                           
 11249                           ;OverLoad_B1.c: 148: Load->TotalLoad=Load->AD;
 11250  05A9  086E               	movf	_Load,w
 11251  05AA  3E2C               	addlw	44
 11252  05AB  0086               	movwf	6
 11253  05AC  3002               	movlw	2	; select bank4/5
 11254  05AD  0087               	movwf	7
 11255  05AE  086E               	movf	_Load,w
 11256  05AF  3E06               	addlw	6
 11257  05B0  0084               	movwf	4
 11258  05B1  3002               	movlw	2	; select bank4/5
 11259  05B2  0085               	movwf	5
 11260  05B3  3F40               	moviw [0]fsr1
 11261  05B4  3F80               	movwi [0]fsr0
 11262  05B5  3F41               	moviw [1]fsr1
 11263  05B6  3F81               	movwi [1]fsr0
 11264                           
 11265                           ;OverLoad_B1.c: 149: Load->JudgeValue=0x32*Load->LightsCount;
 11266  05B7  086E               	movf	_Load,w
 11267  05B8  3E3E               	addlw	62
 11268  05B9  0086               	movwf	6
 11269  05BA  3002               	movlw	2	; select bank4/5
 11270  05BB  0087               	movwf	7
 11271  05BC  0801               	movf	1,w
 11272  05BD  00AD               	movwf	??_Load_Main
 11273  05BE  01AE               	clrf	??_Load_Main+1
 11274  05BF  082D               	movf	??_Load_Main,w
 11275  05C0  00A0               	movwf	___wmul@multiplier
 11276  05C1  082E               	movf	??_Load_Main+1,w
 11277  05C2  00A1               	movwf	___wmul@multiplier+1
 11278  05C3  3032               	movlw	50
 11279  05C4  00A2               	movwf	___wmul@multiplicand
 11280  05C5  3000               	movlw	0
 11281  05C6  00A3               	movwf	___wmul@multiplicand+1
 11282  05C7  31A7  27A3  3183   	fcall	___wmul
 11283  05CA  0020               	movlb	0	; select bank0
 11284  05CB  086E               	movf	_Load,w
 11285  05CC  3E36               	addlw	54
 11286  05CD  0086               	movwf	6
 11287  05CE  3002               	movlw	2	; select bank4/5
 11288  05CF  0087               	movwf	7
 11289  05D0  0820               	movf	?___wmul,w
 11290  05D1  3FC0               	movwi [0]fsr1
 11291  05D2  0821               	movf	?___wmul+1,w
 11292  05D3  3FC1               	movwi [1]fsr1
 11293  05D4                     l9915:	
 11294                           
 11295                           ;OverLoad_B1.c: 150: }
 11296                           ;OverLoad_B1.c: 151: }
 11297                           ;OverLoad_B1.c: 152: }
 11298                           ;OverLoad_B1.c: 153: }
 11299                           ;OverLoad_B1.c: 154: setLoad_AH_AL_Restore();
 11300  05D4  3198  20C7         	fcall	_setLoad_AH_AL_Restore
 11301                           
 11302                           ;OverLoad_B1.c: 166: }
 11303                           ;OverLoad_B1.c: 167: }
 11304  05D6  0008               	return
 11305  05D7                     l9917:	
 11306                           
 11307                           ;OverLoad_B1.c: 168: else
 11308                           ;OverLoad_B1.c: 169: {
 11309                           ;OverLoad_B1.c: 170: if(Load->GO)
 11310  05D7  0020               	movlb	0	; select bank0
 11311  05D8  086E               	movf	_Load,w
 11312  05D9  0086               	movwf	6
 11313  05DA  3002               	movlw	2	; select bank4/5
 11314  05DB  0087               	movwf	7
 11315  05DC  1C81               	btfss	1,1
 11316  05DD  2E01               	goto	l9929
 11317                           
 11318                           ;OverLoad_B1.c: 171: {
 11319                           ;OverLoad_B1.c: 172: if(!Load->LightsON)
 11320  05DE  086E               	movf	_Load,w
 11321  05DF  0086               	movwf	6
 11322  05E0  3002               	movlw	2	; select bank4/5
 11323  05E1  0087               	movwf	7
 11324  05E2  1901               	btfsc	1,2
 11325  05E3  2DEE               	goto	l9923
 11326                           
 11327                           ;OverLoad_B1.c: 173: {
 11328                           ;OverLoad_B1.c: 174: Load->LightsON=1;
 11329  05E4  086E               	movf	_Load,w
 11330  05E5  0086               	movwf	6
 11331  05E6  3002               	movlw	2	; select bank4/5
 11332  05E7  0087               	movwf	7
 11333  05E8  1501               	bsf	1,2
 11334                           
 11335                           ;OverLoad_B1.c: 175: Load->Safe=0;
 11336  05E9  086E               	movf	_Load,w
 11337  05EA  0086               	movwf	6
 11338  05EB  3002               	movlw	2	; select bank4/5
 11339  05EC  0087               	movwf	7
 11340  05ED  1181               	bcf	1,3
 11341  05EE                     l9923:	
 11342                           
 11343                           ;OverLoad_B1.c: 176: }
 11344                           ;OverLoad_B1.c: 177: if(getTemp_Safe() && getPF_Safe())
 11345  05EE  31A3  23F9  3183   	fcall	_getTemp_Safe
 11346  05F1  3A00               	xorlw	0
 11347  05F2  1903               	skipnz
 11348  05F3  0008               	return
 11349  05F4  31A4  241E  3183   	fcall	_getPF_Safe
 11350  05F7  3A00               	xorlw	0
 11351  05F8  1903               	skipnz
 11352  05F9  0008               	return
 11353                           
 11354                           ;OverLoad_B1.c: 178: {
 11355                           ;OverLoad_B1.c: 179: Load->ADtoGO=1;
 11356  05FA  0020               	movlb	0	; select bank0
 11357  05FB  086E               	movf	_Load,w
 11358  05FC  0086               	movwf	6
 11359  05FD  3002               	movlw	2	; select bank4/5
 11360  05FE  0087               	movwf	7
 11361  05FF  1601               	bsf	1,4
 11362                           
 11363                           ;OverLoad_B1.c: 180: }
 11364                           ;OverLoad_B1.c: 181: }
 11365  0600  0008               	return
 11366  0601                     l9929:	
 11367                           
 11368                           ;OverLoad_B1.c: 182: else
 11369                           ;OverLoad_B1.c: 183: {
 11370                           ;OverLoad_B1.c: 184: if(Load->LightsON)
 11371  0601  086E               	movf	_Load,w
 11372  0602  0086               	movwf	6
 11373  0603  3002               	movlw	2	; select bank4/5
 11374  0604  0087               	movwf	7
 11375  0605  1D01               	btfss	1,2
 11376  0606  0008               	return
 11377                           
 11378                           ;OverLoad_B1.c: 185: {
 11379                           ;OverLoad_B1.c: 186: Load->LightsON=0;
 11380  0607  086E               	movf	_Load,w
 11381  0608  0086               	movwf	6
 11382  0609  3002               	movlw	2	; select bank4/5
 11383  060A  0087               	movwf	7
 11384  060B  1101               	bcf	1,2
 11385                           
 11386                           ;OverLoad_B1.c: 187: Load->Safe=1;
 11387  060C  086E               	movf	_Load,w
 11388  060D  0086               	movwf	6
 11389  060E  3002               	movlw	2	; select bank4/5
 11390  060F  0087               	movwf	7
 11391  0610  1581               	bsf	1,3
 11392                           
 11393                           ;OverLoad_B1.c: 188: Load->ErrorCount=0;
 11394  0611  086E               	movf	_Load,w
 11395  0612  3E3C               	addlw	60
 11396  0613  0086               	movwf	6
 11397  0614  3002               	movlw	2	; select bank4/5
 11398  0615  0087               	movwf	7
 11399  0616  0181               	clrf	1
 11400                           
 11401                           ;OverLoad_B1.c: 189: Load->Count=0;
 11402  0617  086E               	movf	_Load,w
 11403  0618  3E3A               	addlw	58
 11404  0619  0086               	movwf	6
 11405  061A  3002               	movlw	2	; select bank4/5
 11406  061B  0087               	movwf	7
 11407  061C  0181               	clrf	1
 11408                           
 11409                           ;OverLoad_B1.c: 190: Load->TotalLoad=0;
 11410  061D  086E               	movf	_Load,w
 11411  061E  3E06               	addlw	6
 11412  061F  0086               	movwf	6
 11413  0620  3002               	movlw	2	; select bank4/5
 11414  0621  0087               	movwf	7
 11415  0622  3000               	movlw	0
 11416  0623  3FC0               	movwi [0]fsr1
 11417  0624  3FC1               	movwi [1]fsr1
 11418                           
 11419                           ;OverLoad_B1.c: 191: Load->NumberCount=0;
 11420  0625  086E               	movf	_Load,w
 11421  0626  3E3F               	addlw	63
 11422  0627  0086               	movwf	6
 11423  0628  3002               	movlw	2	; select bank4/5
 11424  0629  0087               	movwf	7
 11425  062A  0181               	clrf	1
 11426                           
 11427                           ;OverLoad_B1.c: 192: Load->StatusOn=0;
 11428  062B  086E               	movf	_Load,w
 11429  062C  3E46               	addlw	70
 11430  062D  0086               	movwf	6
 11431  062E  3002               	movlw	2	; select bank4/5
 11432  062F  0087               	movwf	7
 11433  0630  1001               	bcf	1,0
 11434                           
 11435                           ;OverLoad_B1.c: 193: Load->StatusOff=0;
 11436  0631  086E               	movf	_Load,w
 11437  0632  3E46               	addlw	70
 11438  0633  0086               	movwf	6
 11439  0634  3002               	movlw	2	; select bank4/5
 11440  0635  0087               	movwf	7
 11441  0636  1081               	bcf	1,1
 11442                           
 11443                           ;OverLoad_B1.c: 194: Load->AD=0;
 11444  0637  086E               	movf	_Load,w
 11445  0638  3E2C               	addlw	44
 11446  0639  0086               	movwf	6
 11447  063A  3002               	movlw	2	; select bank4/5
 11448  063B  0087               	movwf	7
 11449  063C  3000               	movlw	0
 11450  063D  3FC0               	movwi [0]fsr1
 11451  063E  3FC1               	movwi [1]fsr1
 11452                           
 11453                           ;OverLoad_B1.c: 195: setLoad_AH_AL_Restore();
 11454  063F  3198  20C7  3183   	fcall	_setLoad_AH_AL_Restore
 11455                           
 11456                           ;OverLoad_B1.c: 198: setDimmerLights_Clear(1,1);
 11457  0642  0020               	movlb	0	; select bank0
 11458  0643  01A2               	clrf	setDimmerLights_Clear@command
 11459  0644  0AA2               	incf	setDimmerLights_Clear@command,f
 11460  0645  3001               	movlw	1
 11461  0646  31A5  259B  3183   	fcall	_setDimmerLights_Clear
 11462                           
 11463                           ;OverLoad_B1.c: 202: setDimmerLights_Clear(2,1);
 11464  0649  0020               	movlb	0	; select bank0
 11465  064A  01A2               	clrf	setDimmerLights_Clear@command
 11466  064B  0AA2               	incf	setDimmerLights_Clear@command,f
 11467  064C  3002               	movlw	2
 11468  064D  31A5  259B         	fcall	_setDimmerLights_Clear
 11469  064F  0008               	return
 11470  0650                     __end_of_Load_Main:	
 11471                           
 11472                           	psect	text57
 11473  1D0A                     __ptext57:	
 11474 ;; *************** function _setLoad_Exceptions *****************
 11475 ;; Defined at:
 11476 ;;		line 229 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  command         1    wreg     unsigned char 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  command         1   12[BANK0 ] unsigned char 
 11481 ;; Return value:  Size  Location     Type
 11482 ;;		None               void
 11483 ;; Registers used:
 11484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11492 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;Total ram usage:        2 bytes
 11495 ;; Hardware stack levels used:    1
 11496 ;; Hardware stack levels required when called:    8
 11497 ;; This function calls:
 11498 ;;		_DimmerLights_Exceptions
 11499 ;;		_setLED
 11500 ;;		_setRF_Enable
 11501 ;;		_setSw_Enable
 11502 ;; This function is called by:
 11503 ;;		_Load_Main
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           
 11508                           ;psect for function _setLoad_Exceptions
 11509  1D0A                     _setLoad_Exceptions:	
 11510                           
 11511                           ;incstack = 0
 11512                           ; Regs used in _setLoad_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11513                           ;setLoad_Exceptions@command stored from wreg
 11514  1D0A  0020               	movlb	0	; select bank0
 11515  1D0B  00AC               	movwf	setLoad_Exceptions@command
 11516                           
 11517                           ;OverLoad_B1.c: 231: Load->ERROR=command;
 11518  1D0C  086E               	movf	_Load,w
 11519  1D0D  0086               	movwf	6
 11520  1D0E  3002               	movlw	2	; select bank4/5
 11521  1D0F  0087               	movwf	7
 11522  1D10  082C               	movf	setLoad_Exceptions@command,w
 11523  1D11  1281               	bcf	1,5
 11524  1D12  1D03               	skipz
 11525  1D13  1681               	bsf	1,5
 11526                           
 11527                           ;OverLoad_B1.c: 232: Load->Safe=(~command) & 0x01;
 11528  1D14  092C               	comf	setLoad_Exceptions@command,w
 11529  1D15  3901               	andlw	1
 11530  1D16  00AB               	movwf	??_setLoad_Exceptions
 11531  1D17  086E               	movf	_Load,w
 11532  1D18  0086               	movwf	6
 11533  1D19  3002               	movlw	2	; select bank4/5
 11534  1D1A  0087               	movwf	7
 11535  1D1B  0DAB               	rlf	??_setLoad_Exceptions,f
 11536  1D1C  0DAB               	rlf	??_setLoad_Exceptions,f
 11537  1D1D  0DAB               	rlf	??_setLoad_Exceptions,f
 11538  1D1E  0801               	movf	1,w
 11539  1D1F  062B               	xorwf	??_setLoad_Exceptions,w
 11540  1D20  39F7               	andlw	-9
 11541  1D21  062B               	xorwf	??_setLoad_Exceptions,w
 11542  1D22  0081               	movwf	1
 11543                           
 11544                           ;OverLoad_B1.c: 233: Load->ErrorStatus=command;
 11545  1D23  082C               	movf	setLoad_Exceptions@command,w
 11546  1D24  00AB               	movwf	??_setLoad_Exceptions
 11547  1D25  086E               	movf	_Load,w
 11548  1D26  3E05               	addlw	5
 11549  1D27  0086               	movwf	6
 11550  1D28  3002               	movlw	2	; select bank4/5
 11551  1D29  0087               	movwf	7
 11552  1D2A  082B               	movf	??_setLoad_Exceptions,w
 11553  1D2B  0081               	movwf	1
 11554                           
 11555                           ;OverLoad_B1.c: 235: if(command)
 11556  1D2C  082C               	movf	setLoad_Exceptions@command,w
 11557  1D2D  1903               	btfsc	3,2
 11558  1D2E  2D33               	goto	l1936
 11559                           
 11560                           ;OverLoad_B1.c: 236: {
 11561                           ;OverLoad_B1.c: 237: DimmerLights_Exceptions(2);
 11562  1D2F  3002               	movlw	2
 11563  1D30  3191  21A6  319D   	fcall	_DimmerLights_Exceptions
 11564  1D33                     l1936:	
 11565                           
 11566                           ;OverLoad_B1.c: 238: }
 11567                           ;OverLoad_B1.c: 239: setLED(99,command+10);
 11568  1D33  0020               	movlb	0	; select bank0
 11569  1D34  082C               	movf	setLoad_Exceptions@command,w
 11570  1D35  3E0A               	addlw	10
 11571  1D36  00AB               	movwf	??_setLoad_Exceptions
 11572  1D37  082B               	movf	??_setLoad_Exceptions,w
 11573  1D38  00A2               	movwf	setLED@command
 11574  1D39  3063               	movlw	99
 11575  1D3A  3190  2083  319D   	fcall	_setLED
 11576                           
 11577                           ;OverLoad_B1.c: 241: setSw_Enable((~command) & 0x01);
 11578  1D3D  0020               	movlb	0	; select bank0
 11579  1D3E  092C               	comf	setLoad_Exceptions@command,w
 11580  1D3F  3901               	andlw	1
 11581  1D40  31A7  2787  319D   	fcall	_setSw_Enable
 11582                           
 11583                           ;OverLoad_B1.c: 243: setRF_Enable(1,(~command) & 0x01);
 11584  1D43  0020               	movlb	0	; select bank0
 11585  1D44  092C               	comf	setLoad_Exceptions@command,w
 11586  1D45  3901               	andlw	1
 11587  1D46  00AB               	movwf	??_setLoad_Exceptions
 11588  1D47  082B               	movf	??_setLoad_Exceptions,w
 11589  1D48  00A2               	movwf	setRF_Enable@command
 11590  1D49  3001               	movlw	1
 11591  1D4A  3199  21A7         	fcall	_setRF_Enable
 11592  1D4C  0008               	return
 11593  1D4D                     __end_of_setLoad_Exceptions:	
 11594                           
 11595                           	psect	text58
 11596  2787                     __ptext58:	
 11597 ;; *************** function _setSw_Enable *****************
 11598 ;; Defined at:
 11599 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11600 ;; Parameters:    Size  Location     Type
 11601 ;;  command         1    wreg     unsigned char 
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;  command         1    2[BANK0 ] unsigned char 
 11604 ;; Return value:  Size  Location     Type
 11605 ;;		None               void
 11606 ;; Registers used:
 11607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;Total ram usage:        1 bytes
 11618 ;; Hardware stack levels used:    1
 11619 ;; Hardware stack levels required when called:    5
 11620 ;; This function calls:
 11621 ;;		_SwPointSelect
 11622 ;; This function is called by:
 11623 ;;		_MainT
 11624 ;;		_setLoad_Exceptions
 11625 ;;		_setOverTemp_Exceptions
 11626 ;;		_setPowerFault_Exceptions
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630                           
 11631                           ;psect for function _setSw_Enable
 11632  2787                     _setSw_Enable:	
 11633                           
 11634                           ;incstack = 0
 11635                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11636                           ;setSw_Enable@command stored from wreg
 11637  2787  0020               	movlb	0	; select bank0
 11638  2788  00A2               	movwf	setSw_Enable@command
 11639                           
 11640                           ;Switch_B1.c: 90: SwPointSelect(1);
 11641  2789  3001               	movlw	1
 11642  278A  31A6  260F  31A7   	fcall	_SwPointSelect
 11643                           
 11644                           ;Switch_B1.c: 91: Sw->Enable=command;
 11645  278D  0020               	movlb	0	; select bank0
 11646  278E  086D               	movf	_Sw,w
 11647  278F  0086               	movwf	6
 11648  2790  3001               	movlw	1	; select bank2/3
 11649  2791  0087               	movwf	7
 11650  2792  0822               	movf	setSw_Enable@command,w
 11651  2793  1001               	bcf	1,0
 11652  2794  1D03               	skipz
 11653  2795  1401               	bsf	1,0
 11654                           
 11655                           ;Switch_B1.c: 95: SwPointSelect(2);
 11656  2796  3002               	movlw	2
 11657  2797  31A6  260F         	fcall	_SwPointSelect
 11658                           
 11659                           ;Switch_B1.c: 96: Sw->Enable=command;
 11660  2799  0020               	movlb	0	; select bank0
 11661  279A  086D               	movf	_Sw,w
 11662  279B  0086               	movwf	6
 11663  279C  3001               	movlw	1	; select bank2/3
 11664  279D  0087               	movwf	7
 11665  279E  0822               	movf	setSw_Enable@command,w
 11666  279F  1001               	bcf	1,0
 11667  27A0  1D03               	skipz
 11668  27A1  1401               	bsf	1,0
 11669  27A2  0008               	return
 11670  27A3                     __end_of_setSw_Enable:	
 11671                           
 11672                           	psect	text59
 11673  19A7                     __ptext59:	
 11674 ;; *************** function _setRF_Enable *****************
 11675 ;; Defined at:
 11676 ;;		line 178 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  rf              1    wreg     unsigned char 
 11679 ;;  command         1    2[BANK0 ] unsigned char 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;  rf              1    3[BANK0 ] unsigned char 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;		None               void
 11684 ;; Registers used:
 11685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11691 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;Total ram usage:        2 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:    5
 11698 ;; This function calls:
 11699 ;;		_RfPointSelect
 11700 ;;		_setINT_GO
 11701 ;; This function is called by:
 11702 ;;		_MainT
 11703 ;;		_setLoad_Exceptions
 11704 ;;		_setOverTemp_Exceptions
 11705 ;;		_setPowerFault_Exceptions
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           
 11710                           ;psect for function _setRF_Enable
 11711  19A7                     _setRF_Enable:	
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11715                           ;setRF_Enable@rf stored from wreg
 11716  19A7  0020               	movlb	0	; select bank0
 11717  19A8  00A3               	movwf	setRF_Enable@rf
 11718                           
 11719                           ;RF_Control_B1.c: 180: RfPointSelect(rf);
 11720  19A9  0823               	movf	setRF_Enable@rf,w
 11721  19AA  31A4  2468  3199   	fcall	_RfPointSelect
 11722                           
 11723                           ;RF_Control_B1.c: 181: RF->Enable=command;
 11724  19AD  087C               	movf	_RF,w
 11725  19AE  0086               	movwf	6
 11726  19AF  0187               	clrf	7
 11727  19B0  0020               	movlb	0	; select bank0
 11728  19B1  0822               	movf	setRF_Enable@command,w
 11729  19B2  1001               	bcf	1,0
 11730  19B3  1D03               	skipz
 11731  19B4  1401               	bsf	1,0
 11732                           
 11733                           ;RF_Control_B1.c: 182: RF->Learn=0;
 11734  19B5  087C               	movf	_RF,w
 11735  19B6  0086               	movwf	6
 11736  19B7  0187               	clrf	7
 11737  19B8  1301               	bcf	1,6
 11738                           
 11739                           ;RF_Control_B1.c: 183: RF->TransceiveGO=0;
 11740  19B9  087C               	movf	_RF,w
 11741  19BA  0086               	movwf	6
 11742  19BB  0187               	clrf	7
 11743  19BC  1101               	bcf	1,2
 11744                           
 11745                           ;RF_Control_B1.c: 184: RF->RxStatus=0;
 11746  19BD  087C               	movf	_RF,w
 11747  19BE  0086               	movwf	6
 11748  19BF  0187               	clrf	7
 11749  19C0  1181               	bcf	1,3
 11750                           
 11751                           ;RF_Control_B1.c: 185: RF->ReceiveGO=0;
 11752  19C1  087C               	movf	_RF,w
 11753  19C2  0086               	movwf	6
 11754  19C3  0187               	clrf	7
 11755  19C4  1081               	bcf	1,1
 11756                           
 11757                           ;RF_Control_B1.c: 186: RF->DebounceTime=0;
 11758  19C5  0A7C               	incf	_RF,w
 11759  19C6  0086               	movwf	6
 11760  19C7  0187               	clrf	7
 11761  19C8  0181               	clrf	1
 11762                           
 11763                           ;RF_Control_B1.c: 187: RF->Debounce=0;
 11764  19C9  087C               	movf	_RF,w
 11765  19CA  0086               	movwf	6
 11766  19CB  0187               	clrf	7
 11767  19CC  1281               	bcf	1,5
 11768                           
 11769                           ;RF_Control_B1.c: 188: setINT_GO(0);
 11770  19CD  3000               	movlw	0
 11771  19CE  31A4  243F         	fcall	_setINT_GO
 11772  19D0  0008               	return
 11773  19D1                     __end_of_setRF_Enable:	
 11774                           
 11775                           	psect	text60
 11776  243F                     __ptext60:	
 11777 ;; *************** function _setINT_GO *****************
 11778 ;; Defined at:
 11779 ;;		line 235 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  command         1    wreg     unsigned char 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  command         1    0[BANK0 ] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;		None               void
 11786 ;; Registers used:
 11787 ;;		wreg
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11797 ;;Total ram usage:        1 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:    4
 11800 ;; This function calls:
 11801 ;;		Nothing
 11802 ;; This function is called by:
 11803 ;;		_setRF_Main
 11804 ;;		_setRF_Enable
 11805 ;;		_RF_RxDisable
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           
 11810                           ;psect for function _setINT_GO
 11811  243F                     _setINT_GO:	
 11812                           
 11813                           ;incstack = 0
 11814                           ; Regs used in _setINT_GO: [wreg]
 11815                           ;setINT_GO@command stored from wreg
 11816  243F  0020               	movlb	0	; select bank0
 11817  2440  00A0               	movwf	setINT_GO@command
 11818                           
 11819                           ;MCU_16f1518_B1.c: 237: INTF=0;
 11820  2441  108B               	bcf	11,1	;volatile
 11821                           
 11822                           ;MCU_16f1518_B1.c: 238: INTE=command;
 11823  2442  1C20               	btfss	setINT_GO@command,0
 11824  2443  2C46               	goto	u8430
 11825  2444  160B               	bsf	11,4	;volatile
 11826  2445  0008               	return
 11827  2446                     u8430:	
 11828  2446  120B               	bcf	11,4	;volatile
 11829  2447  0008               	return
 11830  2448                     __end_of_setINT_GO:	
 11831                           
 11832                           	psect	text61
 11833  11A6                     __ptext61:	
 11834 ;; *************** function _DimmerLights_Exceptions *****************
 11835 ;; Defined at:
 11836 ;;		line 235 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  status          1    wreg     unsigned char 
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;  status          1   10[BANK0 ] unsigned char 
 11841 ;; Return value:  Size  Location     Type
 11842 ;;		None               void
 11843 ;; Registers used:
 11844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/0
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11851 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11853 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11854 ;;Total ram usage:        1 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:    7
 11857 ;; This function calls:
 11858 ;;		_getDimmerLights_StatusFlag
 11859 ;;		_setBuz
 11860 ;;		_setDimmerLights_ERROR
 11861 ;;		_setDimmerLights_TriggerERROR
 11862 ;; This function is called by:
 11863 ;;		_setLoad_Exceptions
 11864 ;;		_setOverTemp_Exceptions
 11865 ;;		_setPowerFault_Exceptions
 11866 ;; This function uses a non-reentrant model
 11867 ;;
 11868                           
 11869                           
 11870                           ;psect for function _DimmerLights_Exceptions
 11871  11A6                     _DimmerLights_Exceptions:	
 11872                           
 11873                           ;incstack = 0
 11874                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 11875                           ;DimmerLights_Exceptions@status stored from wreg
 11876  11A6  0020               	movlb	0	; select bank0
 11877  11A7  00AA               	movwf	DimmerLights_Exceptions@status
 11878                           
 11879                           ;Dimmer_B1.c: 237: if(status == 1)
 11880  11A8  082A               	movf	DimmerLights_Exceptions@status,w
 11881  11A9  3A01               	xorlw	1
 11882  11AA  1D03               	skipz
 11883  11AB  29BC               	goto	l8791
 11884                           
 11885                           ;Dimmer_B1.c: 238: {
 11886                           ;Dimmer_B1.c: 239: if(getDimmerLights_StatusFlag())
 11887  11AC  31A6  2678  3191   	fcall	_getDimmerLights_StatusFlag
 11888  11AF  3A00               	xorlw	0
 11889  11B0  1903               	skipnz
 11890  11B1  29D4               	goto	l8797
 11891                           
 11892                           ;Dimmer_B1.c: 240: {
 11893                           ;Dimmer_B1.c: 241: setBuz(10,300);
 11894  11B2  302C               	movlw	44
 11895  11B3  0020               	movlb	0	; select bank0
 11896  11B4  00A6               	movwf	setBuz@time
 11897  11B5  3001               	movlw	1
 11898  11B6  00A7               	movwf	setBuz@time+1
 11899  11B7  300A               	movlw	10
 11900  11B8  3193  23C3  3191   	fcall	_setBuz
 11901  11BB  29D4               	goto	l8797
 11902  11BC                     l8791:	
 11903                           ;Dimmer_B1.c: 253: }
 11904                           
 11905                           ;Dimmer_B1.c: 248: setDimmerLights_ERROR(2);
 11906                           
 11907                           ;Dimmer_B1.c: 242: }
 11908                           ;Dimmer_B1.c: 245: setDimmerLights_ERROR(1);
 11909                           
 11910                           
 11911                           ;Dimmer_B1.c: 254: else if(status == 2)
 11912  11BC  0020               	movlb	0	; select bank0
 11913  11BD  082A               	movf	DimmerLights_Exceptions@status,w
 11914  11BE  3A02               	xorlw	2
 11915  11BF  1D03               	skipz
 11916  11C0  29CF               	goto	l8795
 11917                           
 11918                           ;Dimmer_B1.c: 255: {
 11919                           ;Dimmer_B1.c: 256: setBuz(5,300);
 11920  11C1  302C               	movlw	44
 11921  11C2  00A6               	movwf	setBuz@time
 11922  11C3  3001               	movlw	1
 11923  11C4  00A7               	movwf	setBuz@time+1
 11924  11C5  3005               	movlw	5
 11925  11C6  3193  23C3  3191   	fcall	_setBuz
 11926                           
 11927                           ;Dimmer_B1.c: 257: setDimmerLights_ERROR(Dimmer->Load);
 11928  11C9  0021               	movlb	1	; select bank1
 11929  11CA  0A39               	incf	_Dimmer^(0+128),w
 11930  11CB  0086               	movwf	6
 11931  11CC  0187               	clrf	7
 11932  11CD  0801               	movf	1,w
 11933  11CE  29D9               	goto	L12
 11934  11CF                     l8795:	
 11935                           ;Dimmer_B1.c: 258: }
 11936                           
 11937                           
 11938                           ;Dimmer_B1.c: 259: else if(status == 3)
 11939  11CF  0020               	movlb	0	; select bank0
 11940  11D0  082A               	movf	DimmerLights_Exceptions@status,w
 11941  11D1  3A03               	xorlw	3
 11942  11D2  1D03               	skipz
 11943  11D3  29DC               	goto	l922
 11944  11D4                     l8797:	
 11945                           
 11946                           ;Dimmer_B1.c: 260: {
 11947                           ;Dimmer_B1.c: 262: setDimmerLights_ERROR(1);
 11948  11D4  3001               	movlw	1
 11949  11D5  319E  26F3  3191   	fcall	_setDimmerLights_ERROR
 11950                           
 11951                           ;Dimmer_B1.c: 265: setDimmerLights_ERROR(2);
 11952  11D8  3002               	movlw	2
 11953  11D9                     L12:	
 11954  11D9  319E  26F3  3191   	fcall	_setDimmerLights_ERROR
 11955  11DC                     l922:	
 11956                           
 11957                           ;Dimmer_B1.c: 270: }
 11958                           ;Dimmer_B1.c: 273: setDimmerLights_TriggerERROR(1,0);
 11959  11DC  0020               	movlb	0	; select bank0
 11960  11DD  01A2               	clrf	setDimmerLights_TriggerERROR@command
 11961  11DE  3001               	movlw	1
 11962  11DF  3199  21D1  3191   	fcall	_setDimmerLights_TriggerERROR
 11963                           
 11964                           ;Dimmer_B1.c: 276: setDimmerLights_TriggerERROR(2,0);
 11965  11E2  0020               	movlb	0	; select bank0
 11966  11E3  01A2               	clrf	setDimmerLights_TriggerERROR@command
 11967  11E4  3002               	movlw	2
 11968  11E5  3199  21D1  3191   	fcall	_setDimmerLights_TriggerERROR
 11969                           
 11970                           ;Dimmer_B1.c: 282: if(TMain->SelfTest == 0)
 11971  11E8  0021               	movlb	1	; select bank1
 11972  11E9  0869               	movf	_TMain^(0+128),w
 11973  11EA  3E03               	addlw	3
 11974  11EB  0086               	movwf	6
 11975  11EC  3001               	movlw	1	; select bank2/3
 11976  11ED  0087               	movwf	7
 11977  11EE  1801               	btfsc	1,0
 11978  11EF  0008               	return
 11979                           
 11980                           ;Dimmer_B1.c: 283: {
 11981                           ;Dimmer_B1.c: 284: TMain->i=0;
 11982  11F0  0869               	movf	_TMain^(0+128),w
 11983  11F1  3E0E               	addlw	14
 11984  11F2  0086               	movwf	6
 11985  11F3  3001               	movlw	1	; select bank2/3
 11986  11F4  0087               	movwf	7
 11987  11F5  1001               	bcf	1,0
 11988                           
 11989                           ;Dimmer_B1.c: 285: TMain->j=0;
 11990  11F6  0869               	movf	_TMain^(0+128),w
 11991  11F7  3E0E               	addlw	14
 11992  11F8  0086               	movwf	6
 11993  11F9  3001               	movlw	1	; select bank2/3
 11994  11FA  0087               	movwf	7
 11995  11FB  1081               	bcf	1,1
 11996                           
 11997                           ;Dimmer_B1.c: 286: TMain->k=1;
 11998  11FC  0869               	movf	_TMain^(0+128),w
 11999  11FD  3E0E               	addlw	14
 12000  11FE  0086               	movwf	6
 12001  11FF  3001               	movlw	1	; select bank2/3
 12002  1200  0087               	movwf	7
 12003  1201  1501               	bsf	1,2
 12004                           
 12005                           ;Dimmer_B1.c: 287: TMain->Count2=0;
 12006  1202  0869               	movf	_TMain^(0+128),w
 12007  1203  3E08               	addlw	8
 12008  1204  0086               	movwf	6
 12009  1205  3001               	movlw	1	; select bank2/3
 12010  1206  0087               	movwf	7
 12011  1207  3000               	movlw	0
 12012  1208  3FC0               	movwi [0]fsr1
 12013  1209  3FC1               	movwi [1]fsr1
 12014  120A  0008               	return
 12015  120B                     __end_of_DimmerLights_Exceptions:	
 12016                           
 12017                           	psect	text62
 12018  19D1                     __ptext62:	
 12019 ;; *************** function _setDimmerLights_TriggerERROR *****************
 12020 ;; Defined at:
 12021 ;;		line 309 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  lights          1    wreg     unsigned char 
 12024 ;;  command         1    2[BANK0 ] unsigned char 
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;  lights          1    3[BANK0 ] unsigned char 
 12027 ;; Return value:  Size  Location     Type
 12028 ;;		None               void
 12029 ;; Registers used:
 12030 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12036 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;Total ram usage:        2 bytes
 12041 ;; Hardware stack levels used:    1
 12042 ;; Hardware stack levels required when called:    5
 12043 ;; This function calls:
 12044 ;;		_DimmerLightsPointSelect
 12045 ;; This function is called by:
 12046 ;;		_DimmerLights_Exceptions
 12047 ;; This function uses a non-reentrant model
 12048 ;;
 12049                           
 12050                           
 12051                           ;psect for function _setDimmerLights_TriggerERROR
 12052  19D1                     _setDimmerLights_TriggerERROR:	
 12053                           
 12054                           ;incstack = 0
 12055                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 12056                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 12057  19D1  0020               	movlb	0	; select bank0
 12058  19D2  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 12059                           
 12060                           ;Dimmer_B1.c: 311: DimmerLightsPointSelect(lights);
 12061  19D3  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 12062  19D4  31A5  25FC         	fcall	_DimmerLightsPointSelect
 12063                           
 12064                           ;Dimmer_B1.c: 312: DimmerLights->Trigger=command;
 12065  19D6  0020               	movlb	0	; select bank0
 12066  19D7  086C               	movf	_DimmerLights,w
 12067  19D8  3E09               	addlw	9
 12068  19D9  0086               	movwf	6
 12069  19DA  3001               	movlw	1	; select bank2/3
 12070  19DB  0087               	movwf	7
 12071  19DC  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12072  19DD  1081               	bcf	1,1
 12073  19DE  1D03               	skipz
 12074  19DF  1481               	bsf	1,1
 12075                           
 12076                           ;Dimmer_B1.c: 313: DimmerLights->Switch=command;
 12077  19E0  086C               	movf	_DimmerLights,w
 12078  19E1  3E09               	addlw	9
 12079  19E2  0086               	movwf	6
 12080  19E3  3001               	movlw	1	; select bank2/3
 12081  19E4  0087               	movwf	7
 12082  19E5  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12083  19E6  1001               	bcf	1,0
 12084  19E7  1D03               	skipz
 12085  19E8  1401               	bsf	1,0
 12086                           
 12087                           ;Dimmer_B1.c: 314: DimmerLights->TriggerAdj=command;
 12088  19E9  086C               	movf	_DimmerLights,w
 12089  19EA  3E09               	addlw	9
 12090  19EB  0086               	movwf	6
 12091  19EC  3001               	movlw	1	; select bank2/3
 12092  19ED  0087               	movwf	7
 12093  19EE  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12094  19EF  1181               	bcf	1,3
 12095  19F0  1D03               	skipz
 12096  19F1  1581               	bsf	1,3
 12097                           
 12098                           ;Dimmer_B1.c: 315: DimmerLights->AdjGo=command;
 12099  19F2  086C               	movf	_DimmerLights,w
 12100  19F3  3E09               	addlw	9
 12101  19F4  0086               	movwf	6
 12102  19F5  3001               	movlw	1	; select bank2/3
 12103  19F6  0087               	movwf	7
 12104  19F7  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12105  19F8  1101               	bcf	1,2
 12106  19F9  1D03               	skipz
 12107  19FA  1501               	bsf	1,2
 12108  19FB  0008               	return
 12109  19FC                     __end_of_setDimmerLights_TriggerERROR:	
 12110                           
 12111                           	psect	text63
 12112  1EF3                     __ptext63:	
 12113 ;; *************** function _setDimmerLights_ERROR *****************
 12114 ;; Defined at:
 12115 ;;		line 291 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;  lights          1    wreg     unsigned char 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;  lights          1    5[BANK0 ] unsigned char 
 12120 ;; Return value:  Size  Location     Type
 12121 ;;		None               void
 12122 ;; Registers used:
 12123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;Total ram usage:        2 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:    6
 12136 ;; This function calls:
 12137 ;;		_DimmerLightsPointSelect
 12138 ;;		_setLED
 12139 ;;		_setLoad_StatusOff
 12140 ;;		_setRFSW_Status
 12141 ;;		_setSw_Status
 12142 ;; This function is called by:
 12143 ;;		_DimmerLights_Exceptions
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           
 12148                           ;psect for function _setDimmerLights_ERROR
 12149  1EF3                     _setDimmerLights_ERROR:	
 12150                           
 12151                           ;incstack = 0
 12152                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12153                           ;setDimmerLights_ERROR@lights stored from wreg
 12154  1EF3  0020               	movlb	0	; select bank0
 12155  1EF4  00A5               	movwf	setDimmerLights_ERROR@lights
 12156                           
 12157                           ;Dimmer_B1.c: 293: DimmerLightsPointSelect(lights);
 12158  1EF5  0825               	movf	setDimmerLights_ERROR@lights,w
 12159  1EF6  31A5  25FC  319E   	fcall	_DimmerLightsPointSelect
 12160                           
 12161                           ;Dimmer_B1.c: 294: if(DimmerLights->Status)
 12162  1EF9  0020               	movlb	0	; select bank0
 12163  1EFA  086C               	movf	_DimmerLights,w
 12164  1EFB  0086               	movwf	6
 12165  1EFC  3001               	movlw	1	; select bank2/3
 12166  1EFD  0087               	movwf	7
 12167  1EFE  1E81               	btfss	1,5
 12168  1EFF  0008               	return
 12169                           
 12170                           ;Dimmer_B1.c: 295: {
 12171                           ;Dimmer_B1.c: 296: DimmerLights->Signal=0;
 12172  1F00  086C               	movf	_DimmerLights,w
 12173  1F01  0086               	movwf	6
 12174  1F02  3001               	movlw	1	; select bank2/3
 12175  1F03  0087               	movwf	7
 12176  1F04  1081               	bcf	1,1
 12177                           
 12178                           ;Dimmer_B1.c: 297: DimmerLights->AdjFlag=0;
 12179  1F05  086C               	movf	_DimmerLights,w
 12180  1F06  0086               	movwf	6
 12181  1F07  3001               	movlw	1	; select bank2/3
 12182  1F08  0087               	movwf	7
 12183  1F09  1181               	bcf	1,3
 12184                           
 12185                           ;Dimmer_B1.c: 298: DimmerLights->AdjStatus=0;
 12186  1F0A  086C               	movf	_DimmerLights,w
 12187  1F0B  0086               	movwf	6
 12188  1F0C  3001               	movlw	1	; select bank2/3
 12189  1F0D  0087               	movwf	7
 12190  1F0E  1201               	bcf	1,4
 12191                           
 12192                           ;Dimmer_B1.c: 299: DimmerLights->StatusFlag=0;
 12193  1F0F  086C               	movf	_DimmerLights,w
 12194  1F10  0086               	movwf	6
 12195  1F11  3001               	movlw	1	; select bank2/3
 12196  1F12  0087               	movwf	7
 12197  1F13  1301               	bcf	1,6
 12198                           
 12199                           ;Dimmer_B1.c: 300: DimmerLights->DimmingTimeValue=3;
 12200  1F14  3003               	movlw	3
 12201  1F15  00A4               	movwf	??_setDimmerLights_ERROR
 12202  1F16  086C               	movf	_DimmerLights,w
 12203  1F17  3E02               	addlw	2
 12204  1F18  0086               	movwf	6
 12205  1F19  3001               	movlw	1	; select bank2/3
 12206  1F1A  0087               	movwf	7
 12207  1F1B  0824               	movf	??_setDimmerLights_ERROR,w
 12208  1F1C  0081               	movwf	1
 12209                           
 12210                           ;Dimmer_B1.c: 301: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 12211  1F1D  086C               	movf	_DimmerLights,w
 12212  1F1E  3E06               	addlw	6
 12213  1F1F  0086               	movwf	6
 12214  1F20  3001               	movlw	1	; select bank2/3
 12215  1F21  0087               	movwf	7
 12216  1F22  0801               	movf	1,w
 12217  1F23  00A4               	movwf	??_setDimmerLights_ERROR
 12218  1F24  086C               	movf	_DimmerLights,w
 12219  1F25  3E04               	addlw	4
 12220  1F26  0086               	movwf	6
 12221  1F27  3001               	movlw	1	; select bank2/3
 12222  1F28  0087               	movwf	7
 12223  1F29  0824               	movf	??_setDimmerLights_ERROR,w
 12224  1F2A  0081               	movwf	1
 12225                           
 12226                           ;Dimmer_B1.c: 302: Dimmer->Detect=1;
 12227  1F2B  0021               	movlb	1	; select bank1
 12228  1F2C  0839               	movf	_Dimmer^(0+128),w
 12229  1F2D  0086               	movwf	6
 12230  1F2E  0187               	clrf	7
 12231  1F2F  1401               	bsf	1,0
 12232                           
 12233                           ;Dimmer_B1.c: 303: setLoad_StatusOff(lights,1);
 12234  1F30  0020               	movlb	0	; select bank0
 12235  1F31  01A0               	clrf	setLoad_StatusOff@command
 12236  1F32  0AA0               	incf	setLoad_StatusOff@command,f
 12237  1F33  0825               	movf	setDimmerLights_ERROR@lights,w
 12238  1F34  319A  228B  319E   	fcall	_setLoad_StatusOff
 12239                           
 12240                           ;Dimmer_B1.c: 304: setLED(lights,1);
 12241  1F37  0020               	movlb	0	; select bank0
 12242  1F38  01A2               	clrf	setLED@command
 12243  1F39  0AA2               	incf	setLED@command,f
 12244  1F3A  0825               	movf	setDimmerLights_ERROR@lights,w
 12245  1F3B  3190  2083  319E   	fcall	_setLED
 12246                           
 12247                           ;Dimmer_B1.c: 305: setSw_Status(lights,0);
 12248  1F3E  0020               	movlb	0	; select bank0
 12249  1F3F  01A2               	clrf	setSw_Status@command
 12250  1F40  0825               	movf	setDimmerLights_ERROR@lights,w
 12251  1F41  31A5  255C  319E   	fcall	_setSw_Status
 12252                           
 12253                           ;Dimmer_B1.c: 306: setRFSW_Status(lights,0);
 12254  1F44  0020               	movlb	0	; select bank0
 12255  1F45  01A2               	clrf	setRFSW_Status@command
 12256  1F46  0825               	movf	setDimmerLights_ERROR@lights,w
 12257  1F47  31A5  254D         	fcall	_setRFSW_Status
 12258  1F49  0008               	return
 12259  1F4A                     __end_of_setDimmerLights_ERROR:	
 12260                           
 12261                           	psect	text64
 12262  259B                     __ptext64:	
 12263 ;; *************** function _setDimmerLights_Clear *****************
 12264 ;; Defined at:
 12265 ;;		line 443 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12266 ;; Parameters:    Size  Location     Type
 12267 ;;  lights          1    wreg     unsigned char 
 12268 ;;  command         1    2[BANK0 ] unsigned char 
 12269 ;; Auto vars:     Size  Location     Type
 12270 ;;  lights          1    3[BANK0 ] unsigned char 
 12271 ;; Return value:  Size  Location     Type
 12272 ;;		None               void
 12273 ;; Registers used:
 12274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12275 ;; Tracked objects:
 12276 ;;		On entry : 0/0
 12277 ;;		On exit  : 0/0
 12278 ;;		Unchanged: 0/0
 12279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12280 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12283 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;Total ram usage:        2 bytes
 12285 ;; Hardware stack levels used:    1
 12286 ;; Hardware stack levels required when called:    5
 12287 ;; This function calls:
 12288 ;;		_DimmerLightsPointSelect
 12289 ;; This function is called by:
 12290 ;;		_Load_Main
 12291 ;; This function uses a non-reentrant model
 12292 ;;
 12293                           
 12294                           
 12295                           ;psect for function _setDimmerLights_Clear
 12296  259B                     _setDimmerLights_Clear:	
 12297                           
 12298                           ;incstack = 0
 12299                           ; Regs used in _setDimmerLights_Clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12300                           ;setDimmerLights_Clear@lights stored from wreg
 12301  259B  0020               	movlb	0	; select bank0
 12302  259C  00A3               	movwf	setDimmerLights_Clear@lights
 12303                           
 12304                           ;Dimmer_B1.c: 445: DimmerLightsPointSelect(lights);
 12305  259D  0823               	movf	setDimmerLights_Clear@lights,w
 12306  259E  31A5  25FC         	fcall	_DimmerLightsPointSelect
 12307                           
 12308                           ;Dimmer_B1.c: 446: DimmerLights->Clear=command;
 12309  25A0  0020               	movlb	0	; select bank0
 12310  25A1  086C               	movf	_DimmerLights,w
 12311  25A2  3E0C               	addlw	12
 12312  25A3  0086               	movwf	6
 12313  25A4  3001               	movlw	1	; select bank2/3
 12314  25A5  0087               	movwf	7
 12315  25A6  0822               	movf	setDimmerLights_Clear@command,w
 12316  25A7  1001               	bcf	1,0
 12317  25A8  1D03               	skipz
 12318  25A9  1401               	bsf	1,0
 12319  25AA  0008               	return
 12320  25AB                     __end_of_setDimmerLights_Clear:	
 12321                           
 12322                           	psect	text65
 12323  23F9                     __ptext65:	
 12324 ;; *************** function _getTemp_Safe *****************
 12325 ;; Defined at:
 12326 ;;		line 26 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 12327 ;; Parameters:    Size  Location     Type
 12328 ;;		None
 12329 ;; Auto vars:     Size  Location     Type
 12330 ;;		None
 12331 ;; Return value:  Size  Location     Type
 12332 ;;                  1    wreg      unsigned char 
 12333 ;; Registers used:
 12334 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12335 ;; Tracked objects:
 12336 ;;		On entry : 0/0
 12337 ;;		On exit  : 0/0
 12338 ;;		Unchanged: 0/0
 12339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12344 ;;Total ram usage:        0 bytes
 12345 ;; Hardware stack levels used:    1
 12346 ;; Hardware stack levels required when called:    4
 12347 ;; This function calls:
 12348 ;;		Nothing
 12349 ;; This function is called by:
 12350 ;;		_Load_Main
 12351 ;;		_setPowerFault_Main
 12352 ;; This function uses a non-reentrant model
 12353 ;;
 12354                           
 12355                           
 12356                           ;psect for function _getTemp_Safe
 12357  23F9                     _getTemp_Safe:	
 12358                           
 12359                           ;OverTemperature_B1.c: 28: return Temp->Safe;
 12360                           
 12361                           ;incstack = 0
 12362                           ; Regs used in _getTemp_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 12363  23F9  087D               	movf	_Temp,w
 12364  23FA  0086               	movwf	6
 12365  23FB  3001               	movlw	1	; select bank2/3
 12366  23FC  0087               	movwf	7
 12367  23FD  0E01               	swapf	1,w
 12368  23FE  3901               	andlw	1
 12369  23FF  0008               	return
 12370  2400                     __end_of_getTemp_Safe:	
 12371                           
 12372                           	psect	text66
 12373  241E                     __ptext66:	
 12374 ;; *************** function _getPF_Safe *****************
 12375 ;; Defined at:
 12376 ;;		line 40 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;		None
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;		None
 12381 ;; Return value:  Size  Location     Type
 12382 ;;                  1    wreg      unsigned char 
 12383 ;; Registers used:
 12384 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12385 ;; Tracked objects:
 12386 ;;		On entry : 0/0
 12387 ;;		On exit  : 0/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;Total ram usage:        0 bytes
 12395 ;; Hardware stack levels used:    1
 12396 ;; Hardware stack levels required when called:    4
 12397 ;; This function calls:
 12398 ;;		Nothing
 12399 ;; This function is called by:
 12400 ;;		_Load_Main
 12401 ;;		_setTemp_Main
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           
 12406                           ;psect for function _getPF_Safe
 12407  241E                     _getPF_Safe:	
 12408                           
 12409                           ;PowerFault_B1.c: 42: return PF->Safe;
 12410                           
 12411                           ;incstack = 0
 12412                           ; Regs used in _getPF_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 12413  241E  087B               	movf	_PF,w
 12414  241F  0086               	movwf	6
 12415  2420  3001               	movlw	1	; select bank2/3
 12416  2421  0087               	movwf	7
 12417  2422  0C01               	rrf	1,w
 12418  2423  0C89               	rrf	9,f
 12419  2424  3901               	andlw	1
 12420  2425  0008               	return
 12421  2426                     __end_of_getPF_Safe:	
 12422                           
 12423                           	psect	text67
 12424  1B54                     __ptext67:	
 12425 ;; *************** function ___lwdiv *****************
 12426 ;; Defined at:
 12427 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  divisor         2    0[BANK0 ] unsigned int 
 12430 ;;  dividend        2    2[BANK0 ] unsigned int 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;  quotient        2    5[BANK0 ] unsigned int 
 12433 ;;  counter         1    7[BANK0 ] unsigned char 
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  2    0[BANK0 ] unsigned int 
 12436 ;; Registers used:
 12437 ;;		wreg, status,2, status,0
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/0
 12440 ;;		On exit  : 0/0
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12443 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12446 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12447 ;;Total ram usage:        8 bytes
 12448 ;; Hardware stack levels used:    1
 12449 ;; Hardware stack levels required when called:    4
 12450 ;; This function calls:
 12451 ;;		Nothing
 12452 ;; This function is called by:
 12453 ;;		_Load_Main
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           
 12458                           ;psect for function ___lwdiv
 12459  1B54                     ___lwdiv:	
 12460                           
 12461                           ;incstack = 0
 12462                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12463  1B54  0020               	movlb	0	; select bank0
 12464  1B55  01A5               	clrf	___lwdiv@quotient
 12465  1B56  01A6               	clrf	___lwdiv@quotient+1
 12466  1B57  0821               	movf	___lwdiv@divisor+1,w
 12467  1B58  0420               	iorwf	___lwdiv@divisor,w
 12468  1B59  1903               	skipnz
 12469  1B5A  2B84               	goto	l7867
 12470  1B5B  01A7               	clrf	___lwdiv@counter
 12471  1B5C  0AA7               	incf	___lwdiv@counter,f
 12472  1B5D                     l7855:	
 12473  1B5D  1BA1               	btfsc	___lwdiv@divisor+1,7
 12474  1B5E  2B69               	goto	l7857
 12475  1B5F  3001               	movlw	1
 12476  1B60                     u6935:	
 12477  1B60  35A0               	lslf	___lwdiv@divisor,f
 12478  1B61  0DA1               	rlf	___lwdiv@divisor+1,f
 12479  1B62  0B89               	decfsz	9,f
 12480  1B63  2B60               	goto	u6935
 12481  1B64  3001               	movlw	1
 12482  1B65  00A4               	movwf	??___lwdiv
 12483  1B66  0824               	movf	??___lwdiv,w
 12484  1B67  07A7               	addwf	___lwdiv@counter,f
 12485  1B68  2B5D               	goto	l7855
 12486  1B69                     l7857:	
 12487  1B69  3001               	movlw	1
 12488  1B6A                     u6955:	
 12489  1B6A  35A5               	lslf	___lwdiv@quotient,f
 12490  1B6B  0DA6               	rlf	___lwdiv@quotient+1,f
 12491  1B6C  0B89               	decfsz	9,f
 12492  1B6D  2B6A               	goto	u6955
 12493  1B6E  0821               	movf	___lwdiv@divisor+1,w
 12494  1B6F  0223               	subwf	___lwdiv@dividend+1,w
 12495  1B70  1D03               	skipz
 12496  1B71  2B74               	goto	u6965
 12497  1B72  0820               	movf	___lwdiv@divisor,w
 12498  1B73  0222               	subwf	___lwdiv@dividend,w
 12499  1B74                     u6965:	
 12500  1B74  1C03               	skipc
 12501  1B75  2B7B               	goto	l7863
 12502  1B76  0820               	movf	___lwdiv@divisor,w
 12503  1B77  02A2               	subwf	___lwdiv@dividend,f
 12504  1B78  0821               	movf	___lwdiv@divisor+1,w
 12505  1B79  3BA3               	subwfb	___lwdiv@dividend+1,f
 12506  1B7A  1425               	bsf	___lwdiv@quotient,0
 12507  1B7B                     l7863:	
 12508  1B7B  3001               	movlw	1
 12509  1B7C                     u6975:	
 12510  1B7C  36A1               	lsrf	___lwdiv@divisor+1,f
 12511  1B7D  0CA0               	rrf	___lwdiv@divisor,f
 12512  1B7E  0B89               	decfsz	9,f
 12513  1B7F  2B7C               	goto	u6975
 12514  1B80  3001               	movlw	1
 12515  1B81  02A7               	subwf	___lwdiv@counter,f
 12516  1B82  1D03               	btfss	3,2
 12517  1B83  2B69               	goto	l7857
 12518  1B84                     l7867:	
 12519  1B84  0826               	movf	___lwdiv@quotient+1,w
 12520  1B85  01A1               	clrf	?___lwdiv+1
 12521  1B86  07A1               	addwf	?___lwdiv+1,f
 12522  1B87  0825               	movf	___lwdiv@quotient,w
 12523  1B88  01A0               	clrf	?___lwdiv
 12524  1B89  07A0               	addwf	?___lwdiv,f
 12525  1B8A  0008               	return
 12526  1B8B                     __end_of___lwdiv:	
 12527                           
 12528                           	psect	text68
 12529  24FD                     __ptext68:	
 12530 ;; *************** function _Load_Initialization *****************
 12531 ;; Defined at:
 12532 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 12533 ;; Parameters:    Size  Location     Type
 12534 ;;		None
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;		None
 12537 ;; Return value:  Size  Location     Type
 12538 ;;		None               void
 12539 ;; Registers used:
 12540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12541 ;; Tracked objects:
 12542 ;;		On entry : 0/0
 12543 ;;		On exit  : 0/0
 12544 ;;		Unchanged: 0/0
 12545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12549 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;Total ram usage:        1 bytes
 12551 ;; Hardware stack levels used:    1
 12552 ;; Hardware stack levels required when called:    5
 12553 ;; This function calls:
 12554 ;;		_setLoad_AH_AL_Restore
 12555 ;; This function is called by:
 12556 ;;		_main
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560                           
 12561                           ;psect for function _Load_Initialization
 12562  24FD                     _Load_Initialization:	
 12563                           
 12564                           ;OverLoad_B1.c: 10: Load=&Load1;
 12565                           
 12566                           ;incstack = 0
 12567                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12568  24FD  30A0               	movlw	_Load1& (0+255)
 12569  24FE  0020               	movlb	0	; select bank0
 12570  24FF  00A2               	movwf	??_Load_Initialization
 12571  2500  0822               	movf	??_Load_Initialization,w
 12572  2501  00EE               	movwf	_Load
 12573                           
 12574                           ;OverLoad_B1.c: 11: Load->Safe=1;
 12575  2502  086E               	movf	_Load,w
 12576  2503  0086               	movwf	6
 12577  2504  3002               	movlw	2	; select bank4/5
 12578  2505  0087               	movwf	7
 12579  2506  1581               	bsf	1,3
 12580                           
 12581                           ;OverLoad_B1.c: 12: setLoad_AH_AL_Restore();
 12582  2507  3198  20C7         	fcall	_setLoad_AH_AL_Restore
 12583  2509  0008               	return
 12584  250A                     __end_of_Load_Initialization:	
 12585                           
 12586                           	psect	text69
 12587  18C7                     __ptext69:	
 12588 ;; *************** function _setLoad_AH_AL_Restore *****************
 12589 ;; Defined at:
 12590 ;;		line 306 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;		None
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;  i               1    1[BANK0 ] unsigned char 
 12595 ;; Return value:  Size  Location     Type
 12596 ;;		None               void
 12597 ;; Registers used:
 12598 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12599 ;; Tracked objects:
 12600 ;;		On entry : 0/0
 12601 ;;		On exit  : 0/0
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;Total ram usage:        2 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; Hardware stack levels required when called:    4
 12611 ;; This function calls:
 12612 ;;		Nothing
 12613 ;; This function is called by:
 12614 ;;		_Load_Initialization
 12615 ;;		_Load_Main
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           
 12620                           ;psect for function _setLoad_AH_AL_Restore
 12621  18C7                     _setLoad_AH_AL_Restore:	
 12622                           
 12623                           ;OverLoad_B1.c: 308: char i;
 12624                           ;OverLoad_B1.c: 309: for(i=0 ; i<5 ;i++)
 12625                           
 12626                           ;incstack = 0
 12627                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
 12628  18C7  0020               	movlb	0	; select bank0
 12629  18C8  01A1               	clrf	setLoad_AH_AL_Restore@i
 12630  18C9                     L13:	
 12631  18C9  3005               	movlw	5
 12632  18CA  0221               	subwf	setLoad_AH_AL_Restore@i,w
 12633  18CB  1803               	btfsc	3,0
 12634  18CC  0008               	return
 12635                           
 12636                           ;OverLoad_B1.c: 310: {
 12637                           ;OverLoad_B1.c: 311: Load->AH[i]=0;
 12638  18CD  3521               	lslf	setLoad_AH_AL_Restore@i,w
 12639  18CE  3E08               	addlw	8
 12640  18CF  076E               	addwf	_Load,w
 12641  18D0  00A0               	movwf	??_setLoad_AH_AL_Restore
 12642  18D1  0820               	movf	??_setLoad_AH_AL_Restore,w
 12643  18D2  0086               	movwf	6
 12644  18D3  3002               	movlw	2	; select bank4/5
 12645  18D4  0087               	movwf	7
 12646  18D5  3000               	movlw	0
 12647  18D6  3FC0               	movwi [0]fsr1
 12648  18D7  3FC1               	movwi [1]fsr1
 12649                           
 12650                           ;OverLoad_B1.c: 312: Load->AL[i]=0xffff;
 12651  18D8  3521               	lslf	setLoad_AH_AL_Restore@i,w
 12652  18D9  3E1A               	addlw	26
 12653  18DA  076E               	addwf	_Load,w
 12654  18DB  00A0               	movwf	??_setLoad_AH_AL_Restore
 12655  18DC  0820               	movf	??_setLoad_AH_AL_Restore,w
 12656  18DD  0086               	movwf	6
 12657  18DE  3002               	movlw	2	; select bank4/5
 12658  18DF  0087               	movwf	7
 12659  18E0  30FF               	movlw	255
 12660  18E1  3FC0               	movwi [0]fsr1
 12661  18E2  30FF               	movlw	255
 12662  18E3  3FC1               	movwi [1]fsr1
 12663  18E4  3001               	movlw	1
 12664  18E5  00A0               	movwf	??_setLoad_AH_AL_Restore
 12665  18E6  0820               	movf	??_setLoad_AH_AL_Restore,w
 12666  18E7  07A1               	addwf	setLoad_AH_AL_Restore@i,f
 12667  18E8  28C9               	goto	L13
 12668  18E9                     __end_of_setLoad_AH_AL_Restore:	
 12669                           
 12670                           	psect	text70
 12671  24F1                     __ptext70:	
 12672 ;; *************** function _LED_Main *****************
 12673 ;; Defined at:
 12674 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;		None
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;		None
 12679 ;; Return value:  Size  Location     Type
 12680 ;;		None               void
 12681 ;; Registers used:
 12682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;Total ram usage:        0 bytes
 12693 ;; Hardware stack levels used:    1
 12694 ;; Hardware stack levels required when called:    6
 12695 ;; This function calls:
 12696 ;;		_setLED_Main
 12697 ;; This function is called by:
 12698 ;;		_main
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           
 12703                           ;psect for function _LED_Main
 12704  24F1                     _LED_Main:	
 12705                           
 12706                           ;LED_B1.c: 54: setLED_Main(1);
 12707                           
 12708                           ;incstack = 0
 12709                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12710  24F1  3001               	movlw	1
 12711  24F2  319B  23C5  31A4   	fcall	_setLED_Main
 12712                           
 12713                           ;LED_B1.c: 57: setLED_Main(2);
 12714  24F5  3002               	movlw	2
 12715  24F6  319B  23C5  31A4   	fcall	_setLED_Main
 12716                           
 12717                           ;LED_B1.c: 63: setLED_Main(99);
 12718  24F9  3063               	movlw	99
 12719  24FA  319B  23C5         	fcall	_setLED_Main
 12720  24FC  0008               	return
 12721  24FD                     __end_of_LED_Main:	
 12722                           
 12723                           	psect	text71
 12724  1BC5                     __ptext71:	
 12725 ;; *************** function _setLED_Main *****************
 12726 ;; Defined at:
 12727 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  led             1    wreg     unsigned char 
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;  led             1    4[BANK0 ] unsigned char 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;		None               void
 12734 ;; Registers used:
 12735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12744 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;Total ram usage:        3 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    5
 12748 ;; This function calls:
 12749 ;;		_LedPointSelect
 12750 ;; This function is called by:
 12751 ;;		_LED_Main
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           
 12756                           ;psect for function _setLED_Main
 12757  1BC5                     _setLED_Main:	
 12758                           
 12759                           ;incstack = 0
 12760                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12761                           ;setLED_Main@led stored from wreg
 12762  1BC5  0020               	movlb	0	; select bank0
 12763  1BC6  00A4               	movwf	setLED_Main@led
 12764                           
 12765                           ;LED_B1.c: 216: LedPointSelect(led);
 12766  1BC7  0824               	movf	setLED_Main@led,w
 12767  1BC8  3198  20A5  319B   	fcall	_LedPointSelect
 12768                           
 12769                           ;LED_B1.c: 217: if(LED->GO)
 12770  1BCB  0021               	movlb	1	; select bank1
 12771  1BCC  083B               	movf	_LED^(0+128),w
 12772  1BCD  0086               	movwf	6
 12773  1BCE  0187               	clrf	7
 12774  1BCF  1C81               	btfss	1,1
 12775  1BD0  0008               	return
 12776                           
 12777                           ;LED_B1.c: 218: {
 12778                           ;LED_B1.c: 219: LED->Time++;
 12779  1BD1  0A3B               	incf	_LED^(0+128),w
 12780  1BD2  0086               	movwf	6
 12781  1BD3  0187               	clrf	7
 12782  1BD4  3001               	movlw	1
 12783  1BD5  0781               	addwf	1,f
 12784  1BD6  3141               	addfsr 1,1
 12785  1BD7  1803               	skipnc
 12786  1BD8  0A81               	incf	1,f
 12787                           
 12788                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 12789  1BD9  0A3B               	incf	_LED^(0+128),w
 12790  1BDA  0086               	movwf	6
 12791  1BDB  0187               	clrf	7
 12792  1BDC  3F40               	moviw [0]fsr1
 12793  1BDD  0020               	movlb	0	; select bank0
 12794  1BDE  00A2               	movwf	??_setLED_Main
 12795  1BDF  3F41               	moviw [1]fsr1
 12796  1BE0  00A3               	movwf	??_setLED_Main+1
 12797  1BE1  3000               	movlw	0
 12798  1BE2  0223               	subwf	??_setLED_Main+1,w
 12799  1BE3  3032               	movlw	50
 12800  1BE4  1903               	skipnz
 12801  1BE5  0222               	subwf	??_setLED_Main,w
 12802  1BE6  1C03               	skipc
 12803  1BE7  0008               	return
 12804                           
 12805                           ;LED_B1.c: 221: {
 12806                           ;LED_B1.c: 222: LED->Time=0;
 12807  1BE8  0021               	movlb	1	; select bank1
 12808  1BE9  0A3B               	incf	_LED^(0+128),w
 12809  1BEA  0086               	movwf	6
 12810  1BEB  0187               	clrf	7
 12811  1BEC  3000               	movlw	0
 12812  1BED  3FC0               	movwi [0]fsr1
 12813  1BEE  3FC1               	movwi [1]fsr1
 12814                           
 12815                           ;LED_B1.c: 224: if(led == 1)
 12816  1BEF  0020               	movlb	0	; select bank0
 12817  1BF0  0824               	movf	setLED_Main@led,w
 12818  1BF1  3A01               	xorlw	1
 12819  1BF2  1D03               	skipz
 12820  1BF3  2BF7               	goto	l7431
 12821                           
 12822                           ;LED_B1.c: 225: {
 12823                           ;LED_B1.c: 226: RA3=~RA3;
 12824  1BF4  3008               	movlw	8
 12825  1BF5  068C               	xorwf	12,f
 12826                           
 12827                           ;LED_B1.c: 227: }
 12828  1BF6  0008               	return
 12829  1BF7                     l7431:	
 12830                           
 12831                           ;LED_B1.c: 230: else if(led == 2)
 12832  1BF7  0824               	movf	setLED_Main@led,w
 12833  1BF8  3A02               	xorlw	2
 12834  1BF9  1D03               	skipz
 12835  1BFA  2BFE               	goto	l7435
 12836                           
 12837                           ;LED_B1.c: 231: {
 12838                           ;LED_B1.c: 232: RC7=~RC7;
 12839  1BFB  3080               	movlw	128
 12840  1BFC  068E               	xorwf	14,f
 12841                           
 12842                           ;LED_B1.c: 233: }
 12843  1BFD  0008               	return
 12844  1BFE                     l7435:	
 12845                           
 12846                           ;LED_B1.c: 242: else if(led == 99)
 12847  1BFE  0824               	movf	setLED_Main@led,w
 12848  1BFF  3A63               	xorlw	99
 12849  1C00  1D03               	skipz
 12850  1C01  0008               	return
 12851                           
 12852                           ;LED_B1.c: 243: {
 12853                           ;LED_B1.c: 244: RB5=~RB5;
 12854  1C02  3020               	movlw	32
 12855  1C03  068D               	xorwf	13,f
 12856  1C04  0008               	return
 12857  1C05                     __end_of_setLED_Main:	
 12858                           
 12859                           	psect	text72
 12860  24E5                     __ptext72:	
 12861 ;; *************** function _LED_Initialization *****************
 12862 ;; Defined at:
 12863 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;		None
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;		None
 12868 ;; Return value:  Size  Location     Type
 12869 ;;		None               void
 12870 ;; Registers used:
 12871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12881 ;;Total ram usage:        0 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    7
 12884 ;; This function calls:
 12885 ;;		_setLED_Initialization
 12886 ;; This function is called by:
 12887 ;;		_main
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           
 12892                           ;psect for function _LED_Initialization
 12893  24E5                     _LED_Initialization:	
 12894                           
 12895                           ;LED_B1.c: 38: setLED_Initialization(1);
 12896                           
 12897                           ;incstack = 0
 12898                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12899  24E5  3001               	movlw	1
 12900  24E6  31A5  25EB  31A4   	fcall	_setLED_Initialization
 12901                           
 12902                           ;LED_B1.c: 41: setLED_Initialization(2);
 12903  24E9  3002               	movlw	2
 12904  24EA  31A5  25EB  31A4   	fcall	_setLED_Initialization
 12905                           
 12906                           ;LED_B1.c: 47: setLED_Initialization(99);
 12907  24ED  3063               	movlw	99
 12908  24EE  31A5  25EB         	fcall	_setLED_Initialization
 12909  24F0  0008               	return
 12910  24F1                     __end_of_LED_Initialization:	
 12911                           
 12912                           	psect	text73
 12913  25EB                     __ptext73:	
 12914 ;; *************** function _setLED_Initialization *****************
 12915 ;; Defined at:
 12916 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;  led             1    wreg     unsigned char 
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;  led             1    4[BANK0 ] unsigned char 
 12921 ;; Return value:  Size  Location     Type
 12922 ;;		None               void
 12923 ;; Registers used:
 12924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12925 ;; Tracked objects:
 12926 ;;		On entry : 0/0
 12927 ;;		On exit  : 0/0
 12928 ;;		Unchanged: 0/0
 12929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12933 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;Total ram usage:        1 bytes
 12935 ;; Hardware stack levels used:    1
 12936 ;; Hardware stack levels required when called:    6
 12937 ;; This function calls:
 12938 ;;		_LedPointSelect
 12939 ;;		_setLED
 12940 ;; This function is called by:
 12941 ;;		_LED_Initialization
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           
 12946                           ;psect for function _setLED_Initialization
 12947  25EB                     _setLED_Initialization:	
 12948                           
 12949                           ;incstack = 0
 12950                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12951                           ;setLED_Initialization@led stored from wreg
 12952  25EB  0020               	movlb	0	; select bank0
 12953  25EC  00A4               	movwf	setLED_Initialization@led
 12954                           
 12955                           ;LED_B1.c: 69: LedPointSelect(led);
 12956  25ED  0824               	movf	setLED_Initialization@led,w
 12957  25EE  3198  20A5  31A5   	fcall	_LedPointSelect
 12958                           
 12959                           ;LED_B1.c: 70: LED->Enable=1;
 12960  25F1  0021               	movlb	1	; select bank1
 12961  25F2  083B               	movf	_LED^(0+128),w
 12962  25F3  0086               	movwf	6
 12963  25F4  0187               	clrf	7
 12964  25F5  1401               	bsf	1,0
 12965                           
 12966                           ;LED_B1.c: 71: setLED(led,0);
 12967  25F6  0020               	movlb	0	; select bank0
 12968  25F7  01A2               	clrf	setLED@command
 12969  25F8  0824               	movf	setLED_Initialization@led,w
 12970  25F9  3190  2083         	fcall	_setLED
 12971  25FB  0008               	return
 12972  25FC                     __end_of_setLED_Initialization:	
 12973                           
 12974                           	psect	text74
 12975  1DD5                     __ptext74:	
 12976 ;; *************** function _Flash_Memory_Main *****************
 12977 ;; Defined at:
 12978 ;;		line 474 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;		None
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;		None
 12983 ;; Return value:  Size  Location     Type
 12984 ;;		None               void
 12985 ;; Registers used:
 12986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;Total ram usage:        0 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; Hardware stack levels required when called:    7
 12999 ;; This function calls:
 13000 ;;		_Flash_Memory_Modify
 13001 ;; This function is called by:
 13002 ;;		_main
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           
 13007                           ;psect for function _Flash_Memory_Main
 13008  1DD5                     _Flash_Memory_Main:	
 13009                           
 13010                           ;MCU_16f1518_B1.c: 476: if(Memory->GO)
 13011                           
 13012                           ;incstack = 0
 13013                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13014  1DD5  0021               	movlb	1	; select bank1
 13015  1DD6  0868               	movf	_Memory^(0+128),w
 13016  1DD7  3E22               	addlw	34
 13017  1DD8  0086               	movwf	6
 13018  1DD9  3002               	movlw	2	; select bank4/5
 13019  1DDA  0087               	movwf	7
 13020  1DDB  1C81               	btfss	1,1
 13021  1DDC  0008               	return
 13022                           
 13023                           ;MCU_16f1518_B1.c: 477: {
 13024                           ;MCU_16f1518_B1.c: 478: if(Memory->Modify)
 13025  1DDD  0868               	movf	_Memory^(0+128),w
 13026  1DDE  3E22               	addlw	34
 13027  1DDF  0086               	movwf	6
 13028  1DE0  3002               	movlw	2	; select bank4/5
 13029  1DE1  0087               	movwf	7
 13030  1DE2  1C01               	btfss	1,0
 13031  1DE3  2E12               	goto	l9821
 13032                           
 13033                           ;MCU_16f1518_B1.c: 479: {
 13034                           ;MCU_16f1518_B1.c: 480: Memory->Time++;
 13035  1DE4  0868               	movf	_Memory^(0+128),w
 13036  1DE5  3E23               	addlw	35
 13037  1DE6  0086               	movwf	6
 13038  1DE7  3002               	movlw	2	; select bank4/5
 13039  1DE8  0087               	movwf	7
 13040  1DE9  3001               	movlw	1
 13041  1DEA  0781               	addwf	1,f
 13042  1DEB  3141               	addfsr 1,1
 13043  1DEC  1803               	skipnc
 13044  1DED  0A81               	incf	1,f
 13045                           
 13046                           ;MCU_16f1518_B1.c: 481: if(Memory->Time == 25)
 13047  1DEE  0868               	movf	_Memory^(0+128),w
 13048  1DEF  3E23               	addlw	35
 13049  1DF0  0086               	movwf	6
 13050  1DF1  3002               	movlw	2	; select bank4/5
 13051  1DF2  0087               	movwf	7
 13052  1DF3  3F40               	moviw [0]fsr1
 13053  1DF4  3A19               	xorlw	25
 13054  1DF5  1D03               	skipz
 13055  1DF6  2DF9               	goto	u9955
 13056  1DF7  3F41               	moviw [1]fsr1
 13057  1DF8  3A00               	xorlw	0
 13058  1DF9                     u9955:	
 13059  1DF9  1D03               	skipz
 13060  1DFA  0008               	return
 13061                           
 13062                           ;MCU_16f1518_B1.c: 482: {
 13063                           ;MCU_16f1518_B1.c: 483: Memory->Time=0;
 13064  1DFB  0868               	movf	_Memory^(0+128),w
 13065  1DFC  3E23               	addlw	35
 13066  1DFD  0086               	movwf	6
 13067  1DFE  3002               	movlw	2	; select bank4/5
 13068  1DFF  0087               	movwf	7
 13069  1E00  3000               	movlw	0
 13070  1E01  3FC0               	movwi [0]fsr1
 13071  1E02  3FC1               	movwi [1]fsr1
 13072                           
 13073                           ;MCU_16f1518_B1.c: 484: Memory->Modify=0;
 13074  1E03  0868               	movf	_Memory^(0+128),w
 13075  1E04  3E22               	addlw	34
 13076  1E05  0086               	movwf	6
 13077  1E06  3002               	movlw	2	; select bank4/5
 13078  1E07  0087               	movwf	7
 13079  1E08  1001               	bcf	1,0
 13080                           
 13081                           ;MCU_16f1518_B1.c: 485: Memory->GO=0;
 13082  1E09  0868               	movf	_Memory^(0+128),w
 13083  1E0A  3E22               	addlw	34
 13084  1E0B  0086               	movwf	6
 13085  1E0C  3002               	movlw	2	; select bank4/5
 13086  1E0D  0087               	movwf	7
 13087  1E0E  1081               	bcf	1,1
 13088                           
 13089                           ;MCU_16f1518_B1.c: 486: Flash_Memory_Modify();
 13090  1E0F  3192  2277         	fcall	_Flash_Memory_Modify
 13091                           
 13092                           ;MCU_16f1518_B1.c: 488: }
 13093                           ;MCU_16f1518_B1.c: 489: }
 13094  1E11  0008               	return
 13095  1E12                     l9821:	
 13096                           
 13097                           ;MCU_16f1518_B1.c: 490: else
 13098                           ;MCU_16f1518_B1.c: 491: {
 13099                           ;MCU_16f1518_B1.c: 492: Memory->GO=0;
 13100  1E12  0021               	movlb	1	; select bank1
 13101  1E13  0868               	movf	_Memory^(0+128),w
 13102  1E14  3E22               	addlw	34
 13103  1E15  0086               	movwf	6
 13104  1E16  3002               	movlw	2	; select bank4/5
 13105  1E17  0087               	movwf	7
 13106  1E18  1081               	bcf	1,1
 13107  1E19  0008               	return
 13108  1E1A                     __end_of_Flash_Memory_Main:	
 13109                           
 13110                           	psect	text75
 13111  1277                     __ptext75:	
 13112 ;; *************** function _Flash_Memory_Modify *****************
 13113 ;; Defined at:
 13114 ;;		line 549 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;		None
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  i               1    6[BANK0 ] unsigned char 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;		None               void
 13121 ;; Registers used:
 13122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/0
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;Total ram usage:        3 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; Hardware stack levels required when called:    6
 13135 ;; This function calls:
 13136 ;;		_Flash_Memory_Erasing
 13137 ;;		_Flash_Memory_Read
 13138 ;;		_Flash_Memory_Write
 13139 ;; This function is called by:
 13140 ;;		_Flash_Memory_Main
 13141 ;; This function uses a non-reentrant model
 13142 ;;
 13143                           
 13144                           
 13145                           ;psect for function _Flash_Memory_Modify
 13146  1277                     _Flash_Memory_Modify:	
 13147                           
 13148                           ;MCU_16f1518_B1.c: 551: char i;
 13149                           ;MCU_16f1518_B1.c: 552: for(i=0;i<32;i++)
 13150                           
 13151                           ;incstack = 0
 13152                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13153  1277  0020               	movlb	0	; select bank0
 13154  1278  01A6               	clrf	Flash_Memory_Modify@i
 13155  1279  3020               	movlw	32
 13156  127A  0226               	subwf	Flash_Memory_Modify@i,w
 13157  127B  1803               	btfsc	3,0
 13158  127C  2A96               	goto	l9351
 13159  127D                     l9345:	
 13160                           
 13161                           ;MCU_16f1518_B1.c: 553: {
 13162                           ;MCU_16f1518_B1.c: 554: Memory->Data[i]=Flash_Memory_Read(i);
 13163  127D  0826               	movf	Flash_Memory_Modify@i,w
 13164  127E  31A7  2705  3192   	fcall	_Flash_Memory_Read
 13165  1281  0020               	movlb	0	; select bank0
 13166  1282  00A4               	movwf	??_Flash_Memory_Modify
 13167  1283  0826               	movf	Flash_Memory_Modify@i,w
 13168  1284  0021               	movlb	1	; select bank1
 13169  1285  0768               	addwf	_Memory^(0+128),w
 13170  1286  0020               	movlb	0	; select bank0
 13171  1287  00A5               	movwf	??_Flash_Memory_Modify+1
 13172  1288  0825               	movf	??_Flash_Memory_Modify+1,w
 13173  1289  0086               	movwf	6
 13174  128A  3002               	movlw	2	; select bank4/5
 13175  128B  0087               	movwf	7
 13176  128C  0824               	movf	??_Flash_Memory_Modify,w
 13177  128D  0081               	movwf	1
 13178  128E  3001               	movlw	1
 13179  128F  00A4               	movwf	??_Flash_Memory_Modify
 13180  1290  0824               	movf	??_Flash_Memory_Modify,w
 13181  1291  07A6               	addwf	Flash_Memory_Modify@i,f
 13182  1292  3020               	movlw	32
 13183  1293  0226               	subwf	Flash_Memory_Modify@i,w
 13184  1294  1C03               	skipc
 13185  1295  2A7D               	goto	l9345
 13186  1296                     l9351:	
 13187                           
 13188                           ;MCU_16f1518_B1.c: 555: }
 13189                           ;MCU_16f1518_B1.c: 556: Memory->Data[0]=Product->Data[12];
 13190  1296  086F               	movf	_Product,w
 13191  1297  3E0C               	addlw	12
 13192  1298  0086               	movwf	6
 13193  1299  3001               	movlw	1	; select bank2/3
 13194  129A  0087               	movwf	7
 13195  129B  0801               	movf	1,w
 13196  129C  00A4               	movwf	??_Flash_Memory_Modify
 13197  129D  0021               	movlb	1	; select bank1
 13198  129E  0868               	movf	_Memory^(0+128),w
 13199  129F  0086               	movwf	6
 13200  12A0  3002               	movlw	2	; select bank4/5
 13201  12A1  0087               	movwf	7
 13202  12A2  0020               	movlb	0	; select bank0
 13203  12A3  0824               	movf	??_Flash_Memory_Modify,w
 13204  12A4  0081               	movwf	1
 13205                           
 13206                           ;MCU_16f1518_B1.c: 557: Memory->Data[1]=Product->Data[13];
 13207  12A5  086F               	movf	_Product,w
 13208  12A6  3E0D               	addlw	13
 13209  12A7  0086               	movwf	6
 13210  12A8  3001               	movlw	1	; select bank2/3
 13211  12A9  0087               	movwf	7
 13212  12AA  0801               	movf	1,w
 13213  12AB  00A4               	movwf	??_Flash_Memory_Modify
 13214  12AC  0021               	movlb	1	; select bank1
 13215  12AD  0A68               	incf	_Memory^(0+128),w
 13216  12AE  0086               	movwf	6
 13217  12AF  3002               	movlw	2	; select bank4/5
 13218  12B0  0087               	movwf	7
 13219  12B1  0020               	movlb	0	; select bank0
 13220  12B2  0824               	movf	??_Flash_Memory_Modify,w
 13221  12B3  0081               	movwf	1
 13222                           
 13223                           ;MCU_16f1518_B1.c: 558: Memory->Data[2]=Product->Data[14];
 13224  12B4  086F               	movf	_Product,w
 13225  12B5  3E0E               	addlw	14
 13226  12B6  0086               	movwf	6
 13227  12B7  3001               	movlw	1	; select bank2/3
 13228  12B8  0087               	movwf	7
 13229  12B9  0801               	movf	1,w
 13230  12BA  00A4               	movwf	??_Flash_Memory_Modify
 13231  12BB  0021               	movlb	1	; select bank1
 13232  12BC  0868               	movf	_Memory^(0+128),w
 13233  12BD  3E02               	addlw	2
 13234  12BE  0086               	movwf	6
 13235  12BF  3002               	movlw	2	; select bank4/5
 13236  12C0  0087               	movwf	7
 13237  12C1  0020               	movlb	0	; select bank0
 13238  12C2  0824               	movf	??_Flash_Memory_Modify,w
 13239  12C3  0081               	movwf	1
 13240                           
 13241                           ;MCU_16f1518_B1.c: 564: if(Memory->LoopSave)
 13242  12C4  0021               	movlb	1	; select bank1
 13243  12C5  0868               	movf	_Memory^(0+128),w
 13244  12C6  3E22               	addlw	34
 13245  12C7  0086               	movwf	6
 13246  12C8  3002               	movlw	2	; select bank4/5
 13247  12C9  0087               	movwf	7
 13248  12CA  1D01               	btfss	1,2
 13249  12CB  2ADD               	goto	l9355
 13250                           
 13251                           ;MCU_16f1518_B1.c: 565: {
 13252                           ;MCU_16f1518_B1.c: 566: Memory->LoopSave=0;
 13253  12CC  0868               	movf	_Memory^(0+128),w
 13254  12CD  3E22               	addlw	34
 13255  12CE  0086               	movwf	6
 13256  12CF  3002               	movlw	2	; select bank4/5
 13257  12D0  0087               	movwf	7
 13258  12D1  1101               	bcf	1,2
 13259                           
 13260                           ;MCU_16f1518_B1.c: 567: TMain->FirstOpen=0;
 13261  12D2  0869               	movf	_TMain^(0+128),w
 13262  12D3  0086               	movwf	6
 13263  12D4  3001               	movlw	1	; select bank2/3
 13264  12D5  0087               	movwf	7
 13265  12D6  1281               	bcf	1,5
 13266                           
 13267                           ;MCU_16f1518_B1.c: 568: TMain->First=0;
 13268  12D7  0869               	movf	_TMain^(0+128),w
 13269  12D8  3E03               	addlw	3
 13270  12D9  0086               	movwf	6
 13271  12DA  3001               	movlw	1	; select bank2/3
 13272  12DB  0087               	movwf	7
 13273  12DC  1081               	bcf	1,1
 13274  12DD                     l9355:	
 13275                           
 13276                           ;MCU_16f1518_B1.c: 570: }
 13277                           ;MCU_16f1518_B1.c: 571: GIE=0;
 13278  12DD  138B               	bcf	11,7	;volatile
 13279                           
 13280                           ;MCU_16f1518_B1.c: 572: Flash_Memory_Erasing();
 13281  12DE  31A4  24D9  3192   	fcall	_Flash_Memory_Erasing
 13282                           
 13283                           ;MCU_16f1518_B1.c: 573: Flash_Memory_Write();
 13284  12E1  319A  22BC         	fcall	_Flash_Memory_Write
 13285                           
 13286                           ;MCU_16f1518_B1.c: 574: GIE=1;
 13287  12E3  178B               	bsf	11,7	;volatile
 13288  12E4  0008               	return
 13289  12E5                     __end_of_Flash_Memory_Modify:	
 13290                           
 13291                           	psect	text76
 13292  24D9                     __ptext76:	
 13293 ;; *************** function _Flash_Memory_Erasing *****************
 13294 ;; Defined at:
 13295 ;;		line 538 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;		None
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;		None
 13300 ;; Return value:  Size  Location     Type
 13301 ;;		None               void
 13302 ;; Registers used:
 13303 ;;		wreg, status,2, status,0, pclath, cstack
 13304 ;; Tracked objects:
 13305 ;;		On entry : 0/0
 13306 ;;		On exit  : 0/0
 13307 ;;		Unchanged: 0/0
 13308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13313 ;;Total ram usage:        0 bytes
 13314 ;; Hardware stack levels used:    1
 13315 ;; Hardware stack levels required when called:    5
 13316 ;; This function calls:
 13317 ;;		_Flash_Memory_Unlock
 13318 ;; This function is called by:
 13319 ;;		_Flash_Memory_Modify
 13320 ;; This function uses a non-reentrant model
 13321 ;;
 13322                           
 13323                           
 13324                           ;psect for function _Flash_Memory_Erasing
 13325  24D9                     _Flash_Memory_Erasing:	
 13326                           
 13327                           ;MCU_16f1518_B1.c: 540: CFGS=0;
 13328                           
 13329                           ;incstack = 0
 13330                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 13331  24D9  0023               	movlb	3	; select bank3
 13332  24DA  1315               	bcf	21,6	;volatile
 13333                           
 13334                           ;MCU_16f1518_B1.c: 541: PMADRH=0x30;
 13335  24DB  3030               	movlw	48
 13336  24DC  0092               	movwf	18	;volatile
 13337                           
 13338                           ;MCU_16f1518_B1.c: 542: PMADRL=0x00;
 13339  24DD  0191               	clrf	17	;volatile
 13340                           
 13341                           ;MCU_16f1518_B1.c: 543: FREE=1;
 13342  24DE  1615               	bsf	21,4	;volatile
 13343                           
 13344                           ;MCU_16f1518_B1.c: 544: WREN=1;
 13345  24DF  1515               	bsf	21,2	;volatile
 13346                           
 13347                           ;MCU_16f1518_B1.c: 545: Flash_Memory_Unlock();
 13348  24E0  31A4  2436         	fcall	_Flash_Memory_Unlock
 13349                           
 13350                           ;MCU_16f1518_B1.c: 546: WREN=0;
 13351  24E2  0023               	movlb	3	; select bank3
 13352  24E3  1115               	bcf	21,2	;volatile
 13353  24E4  0008               	return
 13354  24E5                     __end_of_Flash_Memory_Erasing:	
 13355                           
 13356                           	psect	text77
 13357  0CD3                     __ptext77:	
 13358 ;; *************** function _Flash_Memory_Initialization *****************
 13359 ;; Defined at:
 13360 ;;		line 429 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;		None
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;  i               1   62[BANK0 ] unsigned char 
 13365 ;; Return value:  Size  Location     Type
 13366 ;;		None               void
 13367 ;; Registers used:
 13368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13377 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13378 ;;Total ram usage:        2 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; Hardware stack levels required when called:    7
 13381 ;; This function calls:
 13382 ;;		_Flash_Memory_Read
 13383 ;;		_Flash_Memory_Write
 13384 ;;		_setPercentValue
 13385 ;; This function is called by:
 13386 ;;		_main
 13387 ;; This function uses a non-reentrant model
 13388 ;;
 13389                           
 13390                           
 13391                           ;psect for function _Flash_Memory_Initialization
 13392  0CD3                     _Flash_Memory_Initialization:	
 13393                           
 13394                           ;MCU_16f1518_B1.c: 431: char i;
 13395                           ;MCU_16f1518_B1.c: 432: if(Flash_Memory_Read(31) == 0xaa)
 13396                           
 13397                           ;incstack = 0
 13398                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13399  0CD3  301F               	movlw	31
 13400  0CD4  31A7  2705  318C   	fcall	_Flash_Memory_Read
 13401  0CD7  3AAA               	xorlw	170
 13402  0CD8  1D03               	skipz
 13403  0CD9  2D50               	goto	l9689
 13404                           
 13405                           ;MCU_16f1518_B1.c: 433: {
 13406                           ;MCU_16f1518_B1.c: 434: Product->Data[12]=Flash_Memory_Read(0);
 13407  0CDA  3000               	movlw	0
 13408  0CDB  31A7  2705  318C   	fcall	_Flash_Memory_Read
 13409  0CDE  0020               	movlb	0	; select bank0
 13410  0CDF  00DD               	movwf	??_Flash_Memory_Initialization
 13411  0CE0  086F               	movf	_Product,w
 13412  0CE1  3E0C               	addlw	12
 13413  0CE2  0086               	movwf	6
 13414  0CE3  3001               	movlw	1	; select bank2/3
 13415  0CE4  0087               	movwf	7
 13416  0CE5  085D               	movf	??_Flash_Memory_Initialization,w
 13417  0CE6  0081               	movwf	1
 13418                           
 13419                           ;MCU_16f1518_B1.c: 435: Product->Data[13]=Flash_Memory_Read(1);
 13420  0CE7  3001               	movlw	1
 13421  0CE8  31A7  2705  318C   	fcall	_Flash_Memory_Read
 13422  0CEB  0020               	movlb	0	; select bank0
 13423  0CEC  00DD               	movwf	??_Flash_Memory_Initialization
 13424  0CED  086F               	movf	_Product,w
 13425  0CEE  3E0D               	addlw	13
 13426  0CEF  0086               	movwf	6
 13427  0CF0  3001               	movlw	1	; select bank2/3
 13428  0CF1  0087               	movwf	7
 13429  0CF2  085D               	movf	??_Flash_Memory_Initialization,w
 13430  0CF3  0081               	movwf	1
 13431                           
 13432                           ;MCU_16f1518_B1.c: 436: Product->Data[14]=Flash_Memory_Read(2);
 13433  0CF4  3002               	movlw	2
 13434  0CF5  31A7  2705  318C   	fcall	_Flash_Memory_Read
 13435  0CF8  0020               	movlb	0	; select bank0
 13436  0CF9  00DD               	movwf	??_Flash_Memory_Initialization
 13437  0CFA  086F               	movf	_Product,w
 13438  0CFB  3E0E               	addlw	14
 13439  0CFC  0086               	movwf	6
 13440  0CFD  3001               	movlw	1	; select bank2/3
 13441  0CFE  0087               	movwf	7
 13442  0CFF  085D               	movf	??_Flash_Memory_Initialization,w
 13443  0D00  0081               	movwf	1
 13444                           
 13445                           ;MCU_16f1518_B1.c: 438: Product->Data[21]=Flash_Memory_Read(3);
 13446  0D01  3003               	movlw	3
 13447  0D02  31A7  2705  318C   	fcall	_Flash_Memory_Read
 13448  0D05  0020               	movlb	0	; select bank0
 13449  0D06  00DD               	movwf	??_Flash_Memory_Initialization
 13450  0D07  086F               	movf	_Product,w
 13451  0D08  3E15               	addlw	21
 13452  0D09  0086               	movwf	6
 13453  0D0A  3001               	movlw	1	; select bank2/3
 13454  0D0B  0087               	movwf	7
 13455  0D0C  085D               	movf	??_Flash_Memory_Initialization,w
 13456  0D0D  0081               	movwf	1
 13457                           
 13458                           ;MCU_16f1518_B1.c: 439: Product->Data[22]=Flash_Memory_Read(4);
 13459  0D0E  3004               	movlw	4
 13460  0D0F  31A7  2705  318C   	fcall	_Flash_Memory_Read
 13461  0D12  0020               	movlb	0	; select bank0
 13462  0D13  00DD               	movwf	??_Flash_Memory_Initialization
 13463  0D14  086F               	movf	_Product,w
 13464  0D15  3E16               	addlw	22
 13465  0D16  0086               	movwf	6
 13466  0D17  3001               	movlw	1	; select bank2/3
 13467  0D18  0087               	movwf	7
 13468  0D19  085D               	movf	??_Flash_Memory_Initialization,w
 13469  0D1A  0081               	movwf	1
 13470                           
 13471                           ;MCU_16f1518_B1.c: 440: Product->Data[23]=Flash_Memory_Read(5);
 13472  0D1B  3005               	movlw	5
 13473  0D1C  31A7  2705  318C   	fcall	_Flash_Memory_Read
 13474  0D1F  0020               	movlb	0	; select bank0
 13475  0D20  00DD               	movwf	??_Flash_Memory_Initialization
 13476  0D21  086F               	movf	_Product,w
 13477  0D22  3E17               	addlw	23
 13478  0D23  0086               	movwf	6
 13479  0D24  3001               	movlw	1	; select bank2/3
 13480  0D25  0087               	movwf	7
 13481  0D26  085D               	movf	??_Flash_Memory_Initialization,w
 13482  0D27  0081               	movwf	1
 13483                           
 13484                           ;MCU_16f1518_B1.c: 447: if(Product->Data[12]==0xff && Product->Data[13]==0xff && Product
      +                          ->Data[14]==0xff)
 13485  0D28  086F               	movf	_Product,w
 13486  0D29  3E0C               	addlw	12
 13487  0D2A  0086               	movwf	6
 13488  0D2B  3001               	movlw	1	; select bank2/3
 13489  0D2C  0087               	movwf	7
 13490  0D2D  0801               	movf	1,w
 13491  0D2E  3AFF               	xorlw	255
 13492  0D2F  1D03               	skipz
 13493  0D30  0008               	return
 13494  0D31  086F               	movf	_Product,w
 13495  0D32  3E0D               	addlw	13
 13496  0D33  0086               	movwf	6
 13497  0D34  3001               	movlw	1	; select bank2/3
 13498  0D35  0087               	movwf	7
 13499  0D36  0801               	movf	1,w
 13500  0D37  3AFF               	xorlw	255
 13501  0D38  1D03               	skipz
 13502  0D39  0008               	return
 13503  0D3A  086F               	movf	_Product,w
 13504  0D3B  3E0E               	addlw	14
 13505  0D3C  0086               	movwf	6
 13506  0D3D  3001               	movlw	1	; select bank2/3
 13507  0D3E  0087               	movwf	7
 13508  0D3F  0801               	movf	1,w
 13509  0D40  3AFF               	xorlw	255
 13510  0D41  1D03               	skipz
 13511  0D42  0008               	return
 13512                           
 13513                           ;MCU_16f1518_B1.c: 448: {
 13514                           ;MCU_16f1518_B1.c: 449: TMain->FirstOpen=1;
 13515  0D43  0021               	movlb	1	; select bank1
 13516  0D44  0869               	movf	_TMain^(0+128),w
 13517  0D45  0086               	movwf	6
 13518  0D46  3001               	movlw	1	; select bank2/3
 13519  0D47  0087               	movwf	7
 13520  0D48  1681               	bsf	1,5
 13521                           
 13522                           ;MCU_16f1518_B1.c: 450: TMain->First=1;
 13523  0D49  0869               	movf	_TMain^(0+128),w
 13524  0D4A  3E03               	addlw	3
 13525  0D4B  0086               	movwf	6
 13526  0D4C  3001               	movlw	1	; select bank2/3
 13527  0D4D  0087               	movwf	7
 13528  0D4E  1481               	bsf	1,1
 13529                           
 13530                           ;MCU_16f1518_B1.c: 451: }
 13531                           ;MCU_16f1518_B1.c: 452: }
 13532  0D4F  0008               	return
 13533  0D50                     l9689:	
 13534                           
 13535                           ;MCU_16f1518_B1.c: 453: else
 13536                           ;MCU_16f1518_B1.c: 454: {
 13537                           ;MCU_16f1518_B1.c: 455: i=setPercentValue(((char)((100-90)*1.5)));
 13538  0D50  300F               	movlw	15
 13539  0D51  319E  261A  318C   	fcall	_setPercentValue
 13540  0D54  0020               	movlb	0	; select bank0
 13541  0D55  00DD               	movwf	??_Flash_Memory_Initialization
 13542  0D56  085D               	movf	??_Flash_Memory_Initialization,w
 13543  0D57  00DE               	movwf	Flash_Memory_Initialization@i
 13544                           
 13545                           ;MCU_16f1518_B1.c: 456: Memory->Data[0]=0xff;
 13546  0D58  30FF               	movlw	255
 13547  0D59  00DD               	movwf	??_Flash_Memory_Initialization
 13548  0D5A  0021               	movlb	1	; select bank1
 13549  0D5B  0868               	movf	_Memory^(0+128),w
 13550  0D5C  0086               	movwf	6
 13551  0D5D  3002               	movlw	2	; select bank4/5
 13552  0D5E  0087               	movwf	7
 13553  0D5F  0020               	movlb	0	; select bank0
 13554  0D60  085D               	movf	??_Flash_Memory_Initialization,w
 13555  0D61  0081               	movwf	1
 13556                           
 13557                           ;MCU_16f1518_B1.c: 457: Memory->Data[1]=0xff;
 13558  0D62  30FF               	movlw	255
 13559  0D63  00DD               	movwf	??_Flash_Memory_Initialization
 13560  0D64  0021               	movlb	1	; select bank1
 13561  0D65  0A68               	incf	_Memory^(0+128),w
 13562  0D66  0086               	movwf	6
 13563  0D67  3002               	movlw	2	; select bank4/5
 13564  0D68  0087               	movwf	7
 13565  0D69  0020               	movlb	0	; select bank0
 13566  0D6A  085D               	movf	??_Flash_Memory_Initialization,w
 13567  0D6B  0081               	movwf	1
 13568                           
 13569                           ;MCU_16f1518_B1.c: 458: Memory->Data[2]=0xff;
 13570  0D6C  30FF               	movlw	255
 13571  0D6D  00DD               	movwf	??_Flash_Memory_Initialization
 13572  0D6E  0021               	movlb	1	; select bank1
 13573  0D6F  0868               	movf	_Memory^(0+128),w
 13574  0D70  3E02               	addlw	2
 13575  0D71  0086               	movwf	6
 13576  0D72  3002               	movlw	2	; select bank4/5
 13577  0D73  0087               	movwf	7
 13578  0D74  0020               	movlb	0	; select bank0
 13579  0D75  085D               	movf	??_Flash_Memory_Initialization,w
 13580  0D76  0081               	movwf	1
 13581                           
 13582                           ;MCU_16f1518_B1.c: 459: Memory->Data[3]=0xff;
 13583  0D77  30FF               	movlw	255
 13584  0D78  00DD               	movwf	??_Flash_Memory_Initialization
 13585  0D79  0021               	movlb	1	; select bank1
 13586  0D7A  0868               	movf	_Memory^(0+128),w
 13587  0D7B  3E03               	addlw	3
 13588  0D7C  0086               	movwf	6
 13589  0D7D  3002               	movlw	2	; select bank4/5
 13590  0D7E  0087               	movwf	7
 13591  0D7F  0020               	movlb	0	; select bank0
 13592  0D80  085D               	movf	??_Flash_Memory_Initialization,w
 13593  0D81  0081               	movwf	1
 13594                           
 13595                           ;MCU_16f1518_B1.c: 460: Memory->Data[4]=0xff;
 13596  0D82  30FF               	movlw	255
 13597  0D83  00DD               	movwf	??_Flash_Memory_Initialization
 13598  0D84  0021               	movlb	1	; select bank1
 13599  0D85  0868               	movf	_Memory^(0+128),w
 13600  0D86  3E04               	addlw	4
 13601  0D87  0086               	movwf	6
 13602  0D88  3002               	movlw	2	; select bank4/5
 13603  0D89  0087               	movwf	7
 13604  0D8A  0020               	movlb	0	; select bank0
 13605  0D8B  085D               	movf	??_Flash_Memory_Initialization,w
 13606  0D8C  0081               	movwf	1
 13607                           
 13608                           ;MCU_16f1518_B1.c: 461: Memory->Data[5]=0xff;
 13609  0D8D  30FF               	movlw	255
 13610  0D8E  00DD               	movwf	??_Flash_Memory_Initialization
 13611  0D8F  0021               	movlb	1	; select bank1
 13612  0D90  0868               	movf	_Memory^(0+128),w
 13613  0D91  3E05               	addlw	5
 13614  0D92  0086               	movwf	6
 13615  0D93  3002               	movlw	2	; select bank4/5
 13616  0D94  0087               	movwf	7
 13617  0D95  0020               	movlb	0	; select bank0
 13618  0D96  085D               	movf	??_Flash_Memory_Initialization,w
 13619  0D97  0081               	movwf	1
 13620                           
 13621                           ;MCU_16f1518_B1.c: 462: Memory->Data[31]=0xaa;
 13622  0D98  30AA               	movlw	170
 13623  0D99  00DD               	movwf	??_Flash_Memory_Initialization
 13624  0D9A  0021               	movlb	1	; select bank1
 13625  0D9B  0868               	movf	_Memory^(0+128),w
 13626  0D9C  3E1F               	addlw	31
 13627  0D9D  0086               	movwf	6
 13628  0D9E  3002               	movlw	2	; select bank4/5
 13629  0D9F  0087               	movwf	7
 13630  0DA0  0020               	movlb	0	; select bank0
 13631  0DA1  085D               	movf	??_Flash_Memory_Initialization,w
 13632  0DA2  0081               	movwf	1
 13633                           
 13634                           ;MCU_16f1518_B1.c: 463: Product->Data[21]=i;
 13635  0DA3  085E               	movf	Flash_Memory_Initialization@i,w
 13636  0DA4  00DD               	movwf	??_Flash_Memory_Initialization
 13637  0DA5  086F               	movf	_Product,w
 13638  0DA6  3E15               	addlw	21
 13639  0DA7  0086               	movwf	6
 13640  0DA8  3001               	movlw	1	; select bank2/3
 13641  0DA9  0087               	movwf	7
 13642  0DAA  085D               	movf	??_Flash_Memory_Initialization,w
 13643  0DAB  0081               	movwf	1
 13644                           
 13645                           ;MCU_16f1518_B1.c: 464: Product->Data[22]=i;
 13646  0DAC  085E               	movf	Flash_Memory_Initialization@i,w
 13647  0DAD  00DD               	movwf	??_Flash_Memory_Initialization
 13648  0DAE  086F               	movf	_Product,w
 13649  0DAF  3E16               	addlw	22
 13650  0DB0  0086               	movwf	6
 13651  0DB1  3001               	movlw	1	; select bank2/3
 13652  0DB2  0087               	movwf	7
 13653  0DB3  085D               	movf	??_Flash_Memory_Initialization,w
 13654  0DB4  0081               	movwf	1
 13655                           
 13656                           ;MCU_16f1518_B1.c: 465: Product->Data[23]=i;
 13657  0DB5  085E               	movf	Flash_Memory_Initialization@i,w
 13658  0DB6  00DD               	movwf	??_Flash_Memory_Initialization
 13659  0DB7  086F               	movf	_Product,w
 13660  0DB8  3E17               	addlw	23
 13661  0DB9  0086               	movwf	6
 13662  0DBA  3001               	movlw	1	; select bank2/3
 13663  0DBB  0087               	movwf	7
 13664  0DBC  085D               	movf	??_Flash_Memory_Initialization,w
 13665  0DBD  0081               	movwf	1
 13666                           
 13667                           ;MCU_16f1518_B1.c: 466: GIE=0;
 13668  0DBE  138B               	bcf	11,7	;volatile
 13669                           
 13670                           ;MCU_16f1518_B1.c: 467: Flash_Memory_Write();
 13671  0DBF  319A  22BC         	fcall	_Flash_Memory_Write
 13672                           
 13673                           ;MCU_16f1518_B1.c: 468: GIE=1;
 13674  0DC1  178B               	bsf	11,7	;volatile
 13675                           
 13676                           ;MCU_16f1518_B1.c: 469: TMain->FirstOpen=1;
 13677  0DC2  0021               	movlb	1	; select bank1
 13678  0DC3  0869               	movf	_TMain^(0+128),w
 13679  0DC4  0086               	movwf	6
 13680  0DC5  3001               	movlw	1	; select bank2/3
 13681  0DC6  0087               	movwf	7
 13682  0DC7  1681               	bsf	1,5
 13683                           
 13684                           ;MCU_16f1518_B1.c: 470: TMain->First=1;
 13685  0DC8  0869               	movf	_TMain^(0+128),w
 13686  0DC9  3E03               	addlw	3
 13687  0DCA  0086               	movwf	6
 13688  0DCB  3001               	movlw	1	; select bank2/3
 13689  0DCC  0087               	movwf	7
 13690  0DCD  1481               	bsf	1,1
 13691  0DCE  0008               	return
 13692  0DCF                     __end_of_Flash_Memory_Initialization:	
 13693                           
 13694                           	psect	text78
 13695  1E1A                     __ptext78:	
 13696 ;; *************** function _setPercentValue *****************
 13697 ;; Defined at:
 13698 ;;		line 492 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13699 ;; Parameters:    Size  Location     Type
 13700 ;;  value           1    wreg     unsigned char 
 13701 ;; Auto vars:     Size  Location     Type
 13702 ;;  value           1   57[BANK0 ] unsigned char 
 13703 ;;  i               3   58[BANK0 ] float 
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  1    wreg      unsigned char 
 13706 ;; Registers used:
 13707 ;;		wreg, status,2, status,0, pclath, cstack
 13708 ;; Tracked objects:
 13709 ;;		On entry : 0/0
 13710 ;;		On exit  : 0/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13714 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13716 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;Total ram usage:        4 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:    6
 13720 ;; This function calls:
 13721 ;;		___awtoft
 13722 ;;		___ftdiv
 13723 ;;		___fttol
 13724 ;; This function is called by:
 13725 ;;		_Flash_Memory_Initialization
 13726 ;; This function uses a non-reentrant model
 13727 ;;
 13728                           
 13729                           
 13730                           ;psect for function _setPercentValue
 13731  1E1A                     _setPercentValue:	
 13732                           
 13733                           ;incstack = 0
 13734                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 13735                           ;setPercentValue@value stored from wreg
 13736  1E1A  0020               	movlb	0	; select bank0
 13737  1E1B  00D9               	movwf	setPercentValue@value
 13738                           
 13739                           ;Dimmer_B1.c: 495: float i=((char)((100-15)*1.5))-((char)((100-90)*1.5));
 13740  1E1C  3000               	movlw	0
 13741  1E1D  00DA               	movwf	setPercentValue@i
 13742  1E1E  30E0               	movlw	224
 13743  1E1F  00DB               	movwf	setPercentValue@i+1
 13744  1E20  3042               	movlw	66
 13745  1E21  00DC               	movwf	setPercentValue@i+2
 13746                           
 13747                           ;Dimmer_B1.c: 496: i/=100;
 13748  1E22  3000               	movlw	0
 13749  1E23  00AE               	movwf	___ftdiv@f2
 13750  1E24  30C8               	movlw	200
 13751  1E25  00AF               	movwf	___ftdiv@f2+1
 13752  1E26  3042               	movlw	66
 13753  1E27  00B0               	movwf	___ftdiv@f2+2
 13754  1E28  085A               	movf	setPercentValue@i,w
 13755  1E29  00B1               	movwf	___ftdiv@f1
 13756  1E2A  085B               	movf	setPercentValue@i+1,w
 13757  1E2B  00B2               	movwf	___ftdiv@f1+1
 13758  1E2C  085C               	movf	setPercentValue@i+2,w
 13759  1E2D  00B3               	movwf	___ftdiv@f1+2
 13760  1E2E  3189  21B7  319E   	fcall	___ftdiv
 13761  1E31  0020               	movlb	0	; select bank0
 13762  1E32  082E               	movf	?___ftdiv,w
 13763  1E33  00DA               	movwf	setPercentValue@i
 13764  1E34  082F               	movf	?___ftdiv+1,w
 13765  1E35  00DB               	movwf	setPercentValue@i+1
 13766  1E36  0830               	movf	?___ftdiv+2,w
 13767  1E37  00DC               	movwf	setPercentValue@i+2
 13768                           
 13769                           ;Dimmer_B1.c: 497: return (100-(char)((value-((char)((100-90)*1.5)))/i));
 13770  1E38  0859               	movf	setPercentValue@value,w
 13771  1E39  3EF1               	addlw	241
 13772  1E3A  00A8               	movwf	___awtoft@c
 13773  1E3B  30FF               	movlw	255
 13774  1E3C  1803               	skipnc
 13775  1E3D  3000               	movlw	0
 13776  1E3E  00A9               	movwf	___awtoft@c+1
 13777  1E3F  3198  2083  319E   	fcall	___awtoft
 13778  1E42  0020               	movlb	0	; select bank0
 13779  1E43  0828               	movf	?___awtoft,w
 13780  1E44  00B1               	movwf	___ftdiv@f1
 13781  1E45  0829               	movf	?___awtoft+1,w
 13782  1E46  00B2               	movwf	___ftdiv@f1+1
 13783  1E47  082A               	movf	?___awtoft+2,w
 13784  1E48  00B3               	movwf	___ftdiv@f1+2
 13785  1E49  085A               	movf	setPercentValue@i,w
 13786  1E4A  00AE               	movwf	___ftdiv@f2
 13787  1E4B  085B               	movf	setPercentValue@i+1,w
 13788  1E4C  00AF               	movwf	___ftdiv@f2+1
 13789  1E4D  085C               	movf	setPercentValue@i+2,w
 13790  1E4E  00B0               	movwf	___ftdiv@f2+2
 13791  1E4F  3189  21B7  319E   	fcall	___ftdiv
 13792  1E52  0020               	movlb	0	; select bank0
 13793  1E53  082E               	movf	?___ftdiv,w
 13794  1E54  00CB               	movwf	___fttol@f1
 13795  1E55  082F               	movf	?___ftdiv+1,w
 13796  1E56  00CC               	movwf	___fttol@f1+1
 13797  1E57  0830               	movf	?___ftdiv+2,w
 13798  1E58  00CD               	movwf	___fttol@f1+2
 13799  1E59  3195  2538         	fcall	___fttol
 13800  1E5B  0020               	movlb	0	; select bank0
 13801  1E5C  034B               	decf	?___fttol,w
 13802  1E5D  3AFF               	xorlw	255
 13803  1E5E  3E64               	addlw	100
 13804  1E5F  0008               	return
 13805  1E60                     __end_of_setPercentValue:	
 13806                           
 13807                           	psect	text79
 13808  1ABC                     __ptext79:	
 13809 ;; *************** function _Flash_Memory_Write *****************
 13810 ;; Defined at:
 13811 ;;		line 518 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13812 ;; Parameters:    Size  Location     Type
 13813 ;;		None
 13814 ;; Auto vars:     Size  Location     Type
 13815 ;;  i               1    1[BANK0 ] unsigned char 
 13816 ;; Return value:  Size  Location     Type
 13817 ;;		None               void
 13818 ;; Registers used:
 13819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13820 ;; Tracked objects:
 13821 ;;		On entry : 0/0
 13822 ;;		On exit  : 0/0
 13823 ;;		Unchanged: 0/0
 13824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13828 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;Total ram usage:        2 bytes
 13830 ;; Hardware stack levels used:    1
 13831 ;; Hardware stack levels required when called:    5
 13832 ;; This function calls:
 13833 ;;		_Flash_Memory_Unlock
 13834 ;; This function is called by:
 13835 ;;		_Flash_Memory_Initialization
 13836 ;;		_Flash_Memory_Modify
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           
 13841                           ;psect for function _Flash_Memory_Write
 13842  1ABC                     _Flash_Memory_Write:	
 13843                           
 13844                           ;MCU_16f1518_B1.c: 520: char i;
 13845                           ;MCU_16f1518_B1.c: 521: CFGS=0;
 13846                           
 13847                           ;incstack = 0
 13848                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13849  1ABC  0023               	movlb	3	; select bank3
 13850  1ABD  1315               	bcf	21,6	;volatile
 13851                           
 13852                           ;MCU_16f1518_B1.c: 522: PMADRH=0x30;
 13853  1ABE  3030               	movlw	48
 13854  1ABF  0092               	movwf	18	;volatile
 13855                           
 13856                           ;MCU_16f1518_B1.c: 523: PMDATH=0;
 13857  1AC0  0194               	clrf	20	;volatile
 13858                           
 13859                           ;MCU_16f1518_B1.c: 524: FREE=0;
 13860  1AC1  1215               	bcf	21,4	;volatile
 13861                           
 13862                           ;MCU_16f1518_B1.c: 525: LWLO=1;
 13863  1AC2  1695               	bsf	21,5	;volatile
 13864                           
 13865                           ;MCU_16f1518_B1.c: 526: WREN=1;
 13866  1AC3  1515               	bsf	21,2	;volatile
 13867                           
 13868                           ;MCU_16f1518_B1.c: 527: for(i=0 ; i<32 ; i++)
 13869  1AC4  0020               	movlb	0	; select bank0
 13870  1AC5  01A1               	clrf	Flash_Memory_Write@i
 13871  1AC6  3020               	movlw	32
 13872  1AC7  0221               	subwf	Flash_Memory_Write@i,w
 13873  1AC8  1803               	btfsc	3,0
 13874  1AC9  2AE6               	goto	l1741
 13875  1ACA                     l8981:	
 13876                           
 13877                           ;MCU_16f1518_B1.c: 528: {
 13878                           ;MCU_16f1518_B1.c: 529: PMADRL=i;
 13879  1ACA  0821               	movf	Flash_Memory_Write@i,w
 13880  1ACB  0023               	movlb	3	; select bank3
 13881  1ACC  0091               	movwf	17	;volatile
 13882                           
 13883                           ;MCU_16f1518_B1.c: 530: PMDATL=Memory->Data[i];
 13884  1ACD  0020               	movlb	0	; select bank0
 13885  1ACE  0821               	movf	Flash_Memory_Write@i,w
 13886  1ACF  0021               	movlb	1	; select bank1
 13887  1AD0  0768               	addwf	_Memory^(0+128),w
 13888  1AD1  0020               	movlb	0	; select bank0
 13889  1AD2  00A0               	movwf	??_Flash_Memory_Write
 13890  1AD3  0820               	movf	??_Flash_Memory_Write,w
 13891  1AD4  0086               	movwf	6
 13892  1AD5  3002               	movlw	2	; select bank4/5
 13893  1AD6  0087               	movwf	7
 13894  1AD7  0801               	movf	1,w
 13895  1AD8  0023               	movlb	3	; select bank3
 13896  1AD9  0093               	movwf	19	;volatile
 13897                           
 13898                           ;MCU_16f1518_B1.c: 531: Flash_Memory_Unlock();
 13899  1ADA  31A4  2436  319A   	fcall	_Flash_Memory_Unlock
 13900  1ADD  3001               	movlw	1
 13901  1ADE  0020               	movlb	0	; select bank0
 13902  1ADF  00A0               	movwf	??_Flash_Memory_Write
 13903  1AE0  0820               	movf	??_Flash_Memory_Write,w
 13904  1AE1  07A1               	addwf	Flash_Memory_Write@i,f
 13905  1AE2  3020               	movlw	32
 13906  1AE3  0221               	subwf	Flash_Memory_Write@i,w
 13907  1AE4  1C03               	skipc
 13908  1AE5  2ACA               	goto	l8981
 13909  1AE6                     l1741:	
 13910                           
 13911                           ;MCU_16f1518_B1.c: 532: }
 13912                           ;MCU_16f1518_B1.c: 533: LWLO=0;
 13913  1AE6  0023               	movlb	3	; select bank3
 13914  1AE7  1295               	bcf	21,5	;volatile
 13915                           
 13916                           ;MCU_16f1518_B1.c: 534: Flash_Memory_Unlock();
 13917  1AE8  31A4  2436         	fcall	_Flash_Memory_Unlock
 13918                           
 13919                           ;MCU_16f1518_B1.c: 535: WREN=0;
 13920  1AEA  0023               	movlb	3	; select bank3
 13921  1AEB  1115               	bcf	21,2	;volatile
 13922  1AEC  0008               	return
 13923  1AED                     __end_of_Flash_Memory_Write:	
 13924                           
 13925                           	psect	text80
 13926  2436                     __ptext80:	
 13927 ;; *************** function _Flash_Memory_Unlock *****************
 13928 ;; Defined at:
 13929 ;;		line 497 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;		None
 13932 ;; Auto vars:     Size  Location     Type
 13933 ;;		None
 13934 ;; Return value:  Size  Location     Type
 13935 ;;		None               void
 13936 ;; Registers used:
 13937 ;;		wreg
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;Total ram usage:        0 bytes
 13948 ;; Hardware stack levels used:    1
 13949 ;; Hardware stack levels required when called:    4
 13950 ;; This function calls:
 13951 ;;		Nothing
 13952 ;; This function is called by:
 13953 ;;		_Flash_Memory_Write
 13954 ;;		_Flash_Memory_Erasing
 13955 ;; This function uses a non-reentrant model
 13956 ;;
 13957                           
 13958                           
 13959                           ;psect for function _Flash_Memory_Unlock
 13960  2436                     _Flash_Memory_Unlock:	
 13961                           
 13962                           ;MCU_16f1518_B1.c: 499: PMCON2=0x55;
 13963                           
 13964                           ;incstack = 0
 13965                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 13966  2436  3055               	movlw	85
 13967  2437  0023               	movlb	3	; select bank3
 13968  2438  0096               	movwf	22	;volatile
 13969                           
 13970                           ;MCU_16f1518_B1.c: 500: PMCON2=0xaa;
 13971  2439  30AA               	movlw	170
 13972  243A  0096               	movwf	22	;volatile
 13973                           
 13974                           ;MCU_16f1518_B1.c: 501: WR=1;
 13975  243B  1495               	bsf	21,1	;volatile
 13976                           
 13977                           ;MCU_16f1518_B1.c: 502: __nop();
 13978  243C  0000               	nop
 13979                           
 13980                           ;MCU_16f1518_B1.c: 503: __nop();
 13981  243D  0000               	nop
 13982  243E  0008               	return
 13983  243F                     __end_of_Flash_Memory_Unlock:	
 13984                           
 13985                           	psect	text81
 13986  2705                     __ptext81:	
 13987 ;; *************** function _Flash_Memory_Read *****************
 13988 ;; Defined at:
 13989 ;;		line 506 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;  address         1    wreg     unsigned char 
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;  address         1    2[BANK0 ] unsigned char 
 13994 ;;  ret             1    3[BANK0 ] unsigned char 
 13995 ;;  i               1    1[BANK0 ] unsigned char 
 13996 ;; Return value:  Size  Location     Type
 13997 ;;                  1    wreg      unsigned char 
 13998 ;; Registers used:
 13999 ;;		wreg, status,2
 14000 ;; Tracked objects:
 14001 ;;		On entry : 0/0
 14002 ;;		On exit  : 0/0
 14003 ;;		Unchanged: 0/0
 14004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14006 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14008 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14009 ;;Total ram usage:        4 bytes
 14010 ;; Hardware stack levels used:    1
 14011 ;; Hardware stack levels required when called:    4
 14012 ;; This function calls:
 14013 ;;		Nothing
 14014 ;; This function is called by:
 14015 ;;		_Flash_Memory_Initialization
 14016 ;;		_Flash_Memory_Modify
 14017 ;; This function uses a non-reentrant model
 14018 ;;
 14019                           
 14020                           
 14021                           ;psect for function _Flash_Memory_Read
 14022  2705                     _Flash_Memory_Read:	
 14023                           
 14024                           ;incstack = 0
 14025                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 14026                           ;Flash_Memory_Read@address stored from wreg
 14027  2705  0020               	movlb	0	; select bank0
 14028  2706  00A2               	movwf	Flash_Memory_Read@address
 14029                           
 14030                           ;MCU_16f1518_B1.c: 508: char i,ret=0;
 14031  2707  01A3               	clrf	Flash_Memory_Read@ret
 14032                           
 14033                           ;MCU_16f1518_B1.c: 509: PMADRH=0x30;
 14034  2708  3030               	movlw	48
 14035  2709  0023               	movlb	3	; select bank3
 14036  270A  0092               	movwf	18	;volatile
 14037                           
 14038                           ;MCU_16f1518_B1.c: 510: PMADRL=address;
 14039  270B  0020               	movlb	0	; select bank0
 14040  270C  0822               	movf	Flash_Memory_Read@address,w
 14041  270D  0023               	movlb	3	; select bank3
 14042  270E  0091               	movwf	17	;volatile
 14043                           
 14044                           ;MCU_16f1518_B1.c: 511: CFGS=0;
 14045  270F  1315               	bcf	21,6	;volatile
 14046                           
 14047                           ;MCU_16f1518_B1.c: 512: RD=1;
 14048  2710  1415               	bsf	21,0	;volatile
 14049                           
 14050                           ;MCU_16f1518_B1.c: 513: i=PMDATH;
 14051  2711  0814               	movf	20,w	;volatile
 14052  2712  0020               	movlb	0	; select bank0
 14053  2713  00A0               	movwf	??_Flash_Memory_Read
 14054  2714  0820               	movf	??_Flash_Memory_Read,w
 14055  2715  00A1               	movwf	Flash_Memory_Read@i
 14056                           
 14057                           ;MCU_16f1518_B1.c: 514: ret=PMDATL;
 14058  2716  0023               	movlb	3	; select bank3
 14059  2717  0813               	movf	19,w	;volatile
 14060  2718  0020               	movlb	0	; select bank0
 14061  2719  00A0               	movwf	??_Flash_Memory_Read
 14062  271A  0820               	movf	??_Flash_Memory_Read,w
 14063  271B  00A3               	movwf	Flash_Memory_Read@ret
 14064                           
 14065                           ;MCU_16f1518_B1.c: 515: return ret;
 14066  271C  0823               	movf	Flash_Memory_Read@ret,w
 14067  271D  0008               	return
 14068  271E                     __end_of_Flash_Memory_Read:	
 14069                           
 14070                           	psect	text82
 14071  247E                     __ptext82:	
 14072 ;; *************** function _DimmerLights_Main *****************
 14073 ;; Defined at:
 14074 ;;		line 103 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14075 ;; Parameters:    Size  Location     Type
 14076 ;;		None
 14077 ;; Auto vars:     Size  Location     Type
 14078 ;;		None
 14079 ;; Return value:  Size  Location     Type
 14080 ;;		None               void
 14081 ;; Registers used:
 14082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14083 ;; Tracked objects:
 14084 ;;		On entry : 0/0
 14085 ;;		On exit  : 0/0
 14086 ;;		Unchanged: 0/0
 14087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14092 ;;Total ram usage:        0 bytes
 14093 ;; Hardware stack levels used:    1
 14094 ;; Hardware stack levels required when called:    8
 14095 ;; This function calls:
 14096 ;;		_DimmerLights_Close
 14097 ;;		_setDimmerLights_Main
 14098 ;; This function is called by:
 14099 ;;		_main
 14100 ;; This function uses a non-reentrant model
 14101 ;;
 14102                           
 14103                           
 14104                           ;psect for function _DimmerLights_Main
 14105  247E                     _DimmerLights_Main:	
 14106                           
 14107                           ;Dimmer_B1.c: 106: setDimmerLights_Main(1);
 14108                           
 14109                           ;incstack = 0
 14110                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14111  247E  3001               	movlw	1
 14112  247F  3194  24B3  31A4   	fcall	_setDimmerLights_Main
 14113                           
 14114                           ;Dimmer_B1.c: 110: setDimmerLights_Main(2);
 14115  2482  3002               	movlw	2
 14116  2483  3194  24B3  31A4   	fcall	_setDimmerLights_Main
 14117                           
 14118                           ;Dimmer_B1.c: 117: DimmerLights_Close();
 14119  2486  31A7  2751         	fcall	_DimmerLights_Close
 14120  2488  0008               	return
 14121  2489                     __end_of_DimmerLights_Main:	
 14122                           
 14123                           	psect	text83
 14124  14B3                     __ptext83:	
 14125 ;; *************** function _setDimmerLights_Main *****************
 14126 ;; Defined at:
 14127 ;;		line 120 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;  lights          1    wreg     unsigned char 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;  lights          1   11[BANK0 ] unsigned char 
 14132 ;;  clear           1   10[BANK0 ] unsigned char 
 14133 ;; Return value:  Size  Location     Type
 14134 ;;		None               void
 14135 ;; Registers used:
 14136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/0
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14146 ;;Total ram usage:        2 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    7
 14149 ;; This function calls:
 14150 ;;		_DimmerLightsPointSelect
 14151 ;;		_setBuz
 14152 ;;		_setDimmerLights
 14153 ;;		_setDimmerLights_Adj
 14154 ;; This function is called by:
 14155 ;;		_DimmerLights_Main
 14156 ;; This function uses a non-reentrant model
 14157 ;;
 14158                           
 14159                           
 14160                           ;psect for function _setDimmerLights_Main
 14161  14B3                     _setDimmerLights_Main:	
 14162                           
 14163                           ;incstack = 0
 14164                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14165                           ;setDimmerLights_Main@lights stored from wreg
 14166  14B3  0020               	movlb	0	; select bank0
 14167  14B4  00AB               	movwf	setDimmerLights_Main@lights
 14168                           
 14169                           ;Dimmer_B1.c: 122: char clear=1;
 14170  14B5  01AA               	clrf	setDimmerLights_Main@clear
 14171  14B6  0AAA               	incf	setDimmerLights_Main@clear,f
 14172                           
 14173                           ;Dimmer_B1.c: 123: DimmerLightsPointSelect(lights);
 14174  14B7  082B               	movf	setDimmerLights_Main@lights,w
 14175  14B8  31A5  25FC  3194   	fcall	_DimmerLightsPointSelect
 14176                           
 14177                           ;Dimmer_B1.c: 141: if(lights == 1)
 14178  14BB  0020               	movlb	0	; select bank0
 14179  14BC  082B               	movf	setDimmerLights_Main@lights,w
 14180  14BD  3A01               	xorlw	1
 14181  14BE  1D03               	skipz
 14182  14BF  2CC2               	goto	l9237
 14183                           
 14184                           ;Dimmer_B1.c: 142: {
 14185                           ;Dimmer_B1.c: 143: clear=(!DimmerLights22->Clear)?0:1;
 14186  14C0  087A               	movf	_DimmerLights22,w
 14187  14C1  2CC7               	goto	L14
 14188  14C2                     l9237:	
 14189                           ;Dimmer_B1.c: 144: }
 14190                           
 14191                           
 14192                           ;Dimmer_B1.c: 145: else if(lights == 2)
 14193  14C2  082B               	movf	setDimmerLights_Main@lights,w
 14194  14C3  3A02               	xorlw	2
 14195  14C4  1D03               	skipz
 14196  14C5  2CCF               	goto	l9241
 14197                           
 14198                           ;Dimmer_B1.c: 146: {
 14199                           ;Dimmer_B1.c: 147: clear=(!DimmerLights11->Clear)?0:1;
 14200  14C6  0879               	movf	_DimmerLights11,w
 14201  14C7                     L14:	
 14202  14C7  3E0C               	addlw	12
 14203  14C8  0086               	movwf	6
 14204  14C9  3001               	movlw	1	; select bank2/3
 14205  14CA  0087               	movwf	7
 14206  14CB  3000               	movlw	0
 14207  14CC  1801               	btfsc	1,0
 14208  14CD  3001               	movlw	1
 14209  14CE  00AA               	movwf	setDimmerLights_Main@clear
 14210  14CF                     l9241:	
 14211                           
 14212                           ;Dimmer_B1.c: 148: }
 14213                           ;Dimmer_B1.c: 151: if(DimmerLights->Trigger)
 14214  14CF  086C               	movf	_DimmerLights,w
 14215  14D0  3E09               	addlw	9
 14216  14D1  0086               	movwf	6
 14217  14D2  3001               	movlw	1	; select bank2/3
 14218  14D3  0087               	movwf	7
 14219  14D4  1C81               	btfss	1,1
 14220  14D5  2D05               	goto	l9259
 14221                           
 14222                           ;Dimmer_B1.c: 152: {
 14223                           ;Dimmer_B1.c: 153: if(clear)
 14224  14D6  082A               	movf	setDimmerLights_Main@clear,w
 14225  14D7  1903               	btfsc	3,2
 14226  14D8  0008               	return
 14227                           
 14228                           ;Dimmer_B1.c: 154: {
 14229                           ;Dimmer_B1.c: 155: if(DimmerLights->Switch)
 14230  14D9  086C               	movf	_DimmerLights,w
 14231  14DA  3E09               	addlw	9
 14232  14DB  0086               	movwf	6
 14233  14DC  3001               	movlw	1	; select bank2/3
 14234  14DD  0087               	movwf	7
 14235  14DE  1C01               	btfss	1,0
 14236  14DF  2CF3               	goto	l9253
 14237                           
 14238                           ;Dimmer_B1.c: 156: {
 14239                           ;Dimmer_B1.c: 157: DimmerLights->Trigger=0;
 14240  14E0  086C               	movf	_DimmerLights,w
 14241  14E1  3E09               	addlw	9
 14242  14E2  0086               	movwf	6
 14243  14E3  3001               	movlw	1	; select bank2/3
 14244  14E4  0087               	movwf	7
 14245  14E5  1081               	bcf	1,1
 14246                           
 14247                           ;Dimmer_B1.c: 158: setDimmerLights(lights,1);
 14248  14E6  01A4               	clrf	setDimmerLights@status
 14249  14E7  0AA4               	incf	setDimmerLights@status,f
 14250  14E8  082B               	movf	setDimmerLights_Main@lights,w
 14251  14E9  3188  2076         	fcall	_setDimmerLights
 14252                           
 14253                           ;Dimmer_B1.c: 161: DimmerLights->Clear=0;
 14254  14EB  0020               	movlb	0	; select bank0
 14255  14EC  086C               	movf	_DimmerLights,w
 14256  14ED  3E0C               	addlw	12
 14257  14EE  0086               	movwf	6
 14258  14EF  3001               	movlw	1	; select bank2/3
 14259  14F0  0087               	movwf	7
 14260  14F1  1001               	bcf	1,0
 14261                           
 14262                           ;Dimmer_B1.c: 163: }
 14263  14F2  0008               	return
 14264  14F3                     l9253:	
 14265                           
 14266                           ;Dimmer_B1.c: 164: else
 14267                           ;Dimmer_B1.c: 165: {
 14268                           ;Dimmer_B1.c: 166: DimmerLights->Trigger=0;
 14269  14F3  086C               	movf	_DimmerLights,w
 14270  14F4  3E09               	addlw	9
 14271  14F5  0086               	movwf	6
 14272  14F6  3001               	movlw	1	; select bank2/3
 14273  14F7  0087               	movwf	7
 14274  14F8  1081               	bcf	1,1
 14275                           
 14276                           ;Dimmer_B1.c: 167: setDimmerLights(lights,0);
 14277  14F9  01A4               	clrf	setDimmerLights@status
 14278  14FA  082B               	movf	setDimmerLights_Main@lights,w
 14279  14FB  3188  2076         	fcall	_setDimmerLights
 14280                           
 14281                           ;Dimmer_B1.c: 170: DimmerLights->Clear=0;
 14282  14FD  0020               	movlb	0	; select bank0
 14283  14FE  086C               	movf	_DimmerLights,w
 14284  14FF  3E0C               	addlw	12
 14285  1500  0086               	movwf	6
 14286  1501  3001               	movlw	1	; select bank2/3
 14287  1502  0087               	movwf	7
 14288  1503  1001               	bcf	1,0
 14289                           
 14290                           ;Dimmer_B1.c: 172: }
 14291                           ;Dimmer_B1.c: 173: }
 14292                           ;Dimmer_B1.c: 174: }
 14293  1504  0008               	return
 14294  1505                     l9259:	
 14295                           
 14296                           ;Dimmer_B1.c: 175: else
 14297                           ;Dimmer_B1.c: 176: {
 14298                           ;Dimmer_B1.c: 177: if(DimmerLights->TriggerAdj)
 14299  1505  086C               	movf	_DimmerLights,w
 14300  1506  3E09               	addlw	9
 14301  1507  0086               	movwf	6
 14302  1508  3001               	movlw	1	; select bank2/3
 14303  1509  0087               	movwf	7
 14304  150A  1D81               	btfss	1,3
 14305  150B  0008               	return
 14306                           
 14307                           ;Dimmer_B1.c: 178: {
 14308                           ;Dimmer_B1.c: 179: if(clear)
 14309  150C  082A               	movf	setDimmerLights_Main@clear,w
 14310  150D  1903               	btfsc	3,2
 14311  150E  0008               	return
 14312                           
 14313                           ;Dimmer_B1.c: 180: {
 14314                           ;Dimmer_B1.c: 181: DimmerLightsPointSelect(lights);
 14315  150F  082B               	movf	setDimmerLights_Main@lights,w
 14316  1510  31A5  25FC  3194   	fcall	_DimmerLightsPointSelect
 14317                           
 14318                           ;Dimmer_B1.c: 182: DimmerLights->TriggerAdj=0;
 14319  1513  0020               	movlb	0	; select bank0
 14320  1514  086C               	movf	_DimmerLights,w
 14321  1515  3E09               	addlw	9
 14322  1516  0086               	movwf	6
 14323  1517  3001               	movlw	1	; select bank2/3
 14324  1518  0087               	movwf	7
 14325  1519  1181               	bcf	1,3
 14326                           
 14327                           ;Dimmer_B1.c: 183: if(DimmerLights->AdjGo)
 14328  151A  086C               	movf	_DimmerLights,w
 14329  151B  3E09               	addlw	9
 14330  151C  0086               	movwf	6
 14331  151D  3001               	movlw	1	; select bank2/3
 14332  151E  0087               	movwf	7
 14333  151F  1D01               	btfss	1,2
 14334  1520  2D31               	goto	l9271
 14335                           
 14336                           ;Dimmer_B1.c: 184: {
 14337                           ;Dimmer_B1.c: 185: setDimmerLights_Adj(lights,1);
 14338  1521  01A5               	clrf	setDimmerLights_Adj@status
 14339  1522  0AA5               	incf	setDimmerLights_Adj@status,f
 14340  1523  082B               	movf	setDimmerLights_Main@lights,w
 14341  1524  319D  254D  3194   	fcall	_setDimmerLights_Adj
 14342                           
 14343                           ;Dimmer_B1.c: 186: setBuz(1,100);
 14344  1527  3064               	movlw	100
 14345  1528  0020               	movlb	0	; select bank0
 14346  1529  00A6               	movwf	setBuz@time
 14347  152A  3000               	movlw	0
 14348  152B  00A7               	movwf	setBuz@time+1
 14349  152C  3001               	movlw	1
 14350  152D  3193  23C3         	fcall	_setBuz
 14351                           
 14352                           ;Dimmer_B1.c: 187: }
 14353  152F  0020               	movlb	0	; select bank0
 14354  1530  0008               	return
 14355  1531                     l9271:	
 14356                           
 14357                           ;Dimmer_B1.c: 188: else
 14358                           ;Dimmer_B1.c: 189: {
 14359                           ;Dimmer_B1.c: 190: setDimmerLights_Adj(lights,0);
 14360  1531  0020               	movlb	0	; select bank0
 14361  1532  01A5               	clrf	setDimmerLights_Adj@status
 14362  1533  082B               	movf	setDimmerLights_Main@lights,w
 14363  1534  319D  254D         	fcall	_setDimmerLights_Adj
 14364  1536  0020               	movlb	0	; select bank0
 14365  1537  0008               	return
 14366  1538                     __end_of_setDimmerLights_Main:	
 14367                           
 14368                           	psect	text84
 14369  1D4D                     __ptext84:	
 14370 ;; *************** function _setDimmerLights_Adj *****************
 14371 ;; Defined at:
 14372 ;;		line 377 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14373 ;; Parameters:    Size  Location     Type
 14374 ;;  lights          1    wreg     unsigned char 
 14375 ;;  status          1    5[BANK0 ] unsigned char 
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;  lights          1    7[BANK0 ] unsigned char 
 14378 ;; Return value:  Size  Location     Type
 14379 ;;		None               void
 14380 ;; Registers used:
 14381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14387 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14390 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;Total ram usage:        3 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    6
 14394 ;; This function calls:
 14395 ;;		_DimmerLightsPointSelect
 14396 ;;		_setLoad_StatusOff
 14397 ;;		_setRF_DimmerLights
 14398 ;;		_setTxData
 14399 ;; This function is called by:
 14400 ;;		_setDimmerLights_Main
 14401 ;; This function uses a non-reentrant model
 14402 ;;
 14403                           
 14404                           
 14405                           ;psect for function _setDimmerLights_Adj
 14406  1D4D                     _setDimmerLights_Adj:	
 14407                           
 14408                           ;incstack = 0
 14409                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14410                           ;setDimmerLights_Adj@lights stored from wreg
 14411  1D4D  0020               	movlb	0	; select bank0
 14412  1D4E  00A7               	movwf	setDimmerLights_Adj@lights
 14413                           
 14414                           ;Dimmer_B1.c: 379: DimmerLightsPointSelect(lights);
 14415  1D4F  0827               	movf	setDimmerLights_Adj@lights,w
 14416  1D50  31A5  25FC  319D   	fcall	_DimmerLightsPointSelect
 14417                           
 14418                           ;Dimmer_B1.c: 380: if(status)
 14419  1D53  0020               	movlb	0	; select bank0
 14420  1D54  0825               	movf	setDimmerLights_Adj@status,w
 14421  1D55  1903               	btfsc	3,2
 14422  1D56  2D62               	goto	l8957
 14423                           
 14424                           ;Dimmer_B1.c: 381: {
 14425                           ;Dimmer_B1.c: 382: DimmerLights->AdjFlag=1;
 14426  1D57  086C               	movf	_DimmerLights,w
 14427  1D58  0086               	movwf	6
 14428  1D59  3001               	movlw	1	; select bank2/3
 14429  1D5A  0087               	movwf	7
 14430  1D5B  1581               	bsf	1,3
 14431                           
 14432                           ;Dimmer_B1.c: 383: DimmerLights->Signal=1;
 14433  1D5C  086C               	movf	_DimmerLights,w
 14434  1D5D  0086               	movwf	6
 14435  1D5E  3001               	movlw	1	; select bank2/3
 14436  1D5F  0087               	movwf	7
 14437  1D60  1481               	bsf	1,1
 14438                           
 14439                           ;Dimmer_B1.c: 384: }
 14440  1D61  0008               	return
 14441  1D62                     l8957:	
 14442                           
 14443                           ;Dimmer_B1.c: 385: else
 14444                           ;Dimmer_B1.c: 386: {
 14445                           ;Dimmer_B1.c: 387: if(DimmerLights->AdjFlag)
 14446  1D62  086C               	movf	_DimmerLights,w
 14447  1D63  0086               	movwf	6
 14448  1D64  3001               	movlw	1	; select bank2/3
 14449  1D65  0087               	movwf	7
 14450  1D66  1D81               	btfss	1,3
 14451  1D67  0008               	return
 14452                           
 14453                           ;Dimmer_B1.c: 388: {
 14454                           ;Dimmer_B1.c: 389: DimmerLights->Signal=0;
 14455  1D68  086C               	movf	_DimmerLights,w
 14456  1D69  0086               	movwf	6
 14457  1D6A  3001               	movlw	1	; select bank2/3
 14458  1D6B  0087               	movwf	7
 14459  1D6C  1081               	bcf	1,1
 14460                           
 14461                           ;Dimmer_B1.c: 390: DimmerLights->AdjFlag=0;
 14462  1D6D  086C               	movf	_DimmerLights,w
 14463  1D6E  0086               	movwf	6
 14464  1D6F  3001               	movlw	1	; select bank2/3
 14465  1D70  0087               	movwf	7
 14466  1D71  1181               	bcf	1,3
 14467                           
 14468                           ;Dimmer_B1.c: 391: setLoad_StatusOff(0,1);
 14469  1D72  01A0               	clrf	setLoad_StatusOff@command
 14470  1D73  0AA0               	incf	setLoad_StatusOff@command,f
 14471  1D74  3000               	movlw	0
 14472  1D75  319A  228B  319D   	fcall	_setLoad_StatusOff
 14473                           
 14474                           ;Dimmer_B1.c: 392: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 14475  1D78  0020               	movlb	0	; select bank0
 14476  1D79  086C               	movf	_DimmerLights,w
 14477  1D7A  3E04               	addlw	4
 14478  1D7B  0086               	movwf	6
 14479  1D7C  3001               	movlw	1	; select bank2/3
 14480  1D7D  0087               	movwf	7
 14481  1D7E  0801               	movf	1,w
 14482  1D7F  00A6               	movwf	??_setDimmerLights_Adj
 14483  1D80  086C               	movf	_DimmerLights,w
 14484  1D81  3E05               	addlw	5
 14485  1D82  0086               	movwf	6
 14486  1D83  3001               	movlw	1	; select bank2/3
 14487  1D84  0087               	movwf	7
 14488  1D85  0826               	movf	??_setDimmerLights_Adj,w
 14489  1D86  0081               	movwf	1
 14490                           
 14491                           ;Dimmer_B1.c: 398: setRF_DimmerLights(lights,1);
 14492  1D87  01A0               	clrf	setRF_DimmerLights@on
 14493  1D88  0AA0               	incf	setRF_DimmerLights@on,f
 14494  1D89  0827               	movf	setDimmerLights_Adj@lights,w
 14495  1D8A  319F  274A  319D   	fcall	_setRF_DimmerLights
 14496                           
 14497                           ;Dimmer_B1.c: 399: setTxData(1);
 14498  1D8D  3001               	movlw	1
 14499  1D8E  318B  2314         	fcall	_setTxData
 14500  1D90  0008               	return
 14501  1D91                     __end_of_setDimmerLights_Adj:	
 14502                           
 14503                           	psect	text85
 14504  1A8B                     __ptext85:	
 14505 ;; *************** function _setLoad_StatusOff *****************
 14506 ;; Defined at:
 14507 ;;		line 280 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 14508 ;; Parameters:    Size  Location     Type
 14509 ;;  lights          1    wreg     unsigned char 
 14510 ;;  command         1    0[BANK0 ] unsigned char 
 14511 ;; Auto vars:     Size  Location     Type
 14512 ;;  lights          1    1[BANK0 ] unsigned char 
 14513 ;; Return value:  Size  Location     Type
 14514 ;;		None               void
 14515 ;; Registers used:
 14516 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14517 ;; Tracked objects:
 14518 ;;		On entry : 0/0
 14519 ;;		On exit  : 0/0
 14520 ;;		Unchanged: 0/0
 14521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14522 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14525 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14526 ;;Total ram usage:        2 bytes
 14527 ;; Hardware stack levels used:    1
 14528 ;; Hardware stack levels required when called:    4
 14529 ;; This function calls:
 14530 ;;		Nothing
 14531 ;; This function is called by:
 14532 ;;		_setDimmerLights_ERROR
 14533 ;;		_setDimmerLights_Adj
 14534 ;; This function uses a non-reentrant model
 14535 ;;
 14536                           
 14537                           
 14538                           ;psect for function _setLoad_StatusOff
 14539  1A8B                     _setLoad_StatusOff:	
 14540                           
 14541                           ;incstack = 0
 14542                           ; Regs used in _setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0]
 14543                           ;setLoad_StatusOff@lights stored from wreg
 14544  1A8B  0020               	movlb	0	; select bank0
 14545  1A8C  00A1               	movwf	setLoad_StatusOff@lights
 14546                           
 14547                           ;OverLoad_B1.c: 282: Load->StatusOff=command;
 14548  1A8D  086E               	movf	_Load,w
 14549  1A8E  3E46               	addlw	70
 14550  1A8F  0086               	movwf	6
 14551  1A90  3002               	movlw	2	; select bank4/5
 14552  1A91  0087               	movwf	7
 14553  1A92  0820               	movf	setLoad_StatusOff@command,w
 14554  1A93  1081               	bcf	1,1
 14555  1A94  1D03               	skipz
 14556  1A95  1481               	bsf	1,1
 14557                           
 14558                           ;OverLoad_B1.c: 283: Load->SafeCount-=2;
 14559  1A96  086E               	movf	_Load,w
 14560  1A97  3E42               	addlw	66
 14561  1A98  0086               	movwf	6
 14562  1A99  3002               	movlw	2	; select bank4/5
 14563  1A9A  0087               	movwf	7
 14564  1A9B  3002               	movlw	2
 14565  1A9C  0281               	subwf	1,f
 14566                           
 14567                           ;OverLoad_B1.c: 284: if(lights == 1)
 14568  1A9D  0821               	movf	setLoad_StatusOff@lights,w
 14569  1A9E  3A01               	xorlw	1
 14570  1A9F  1D03               	skipz
 14571  1AA0  2AA7               	goto	l8619
 14572                           
 14573                           ;OverLoad_B1.c: 285: {
 14574                           ;OverLoad_B1.c: 286: Load->Lights1Status=0;
 14575  1AA1  086E               	movf	_Load,w
 14576  1AA2  3E43               	addlw	67
 14577  1AA3  0086               	movwf	6
 14578  1AA4  3002               	movlw	2	; select bank4/5
 14579  1AA5  0087               	movwf	7
 14580  1AA6  0181               	clrf	1
 14581  1AA7                     l8619:	
 14582                           
 14583                           ;OverLoad_B1.c: 287: }
 14584                           ;OverLoad_B1.c: 288: if(lights == 2)
 14585  1AA7  0821               	movf	setLoad_StatusOff@lights,w
 14586  1AA8  3A02               	xorlw	2
 14587  1AA9  1D03               	skipz
 14588  1AAA  2AB1               	goto	l8623
 14589                           
 14590                           ;OverLoad_B1.c: 289: {
 14591                           ;OverLoad_B1.c: 290: Load->Lights2Status=0;
 14592  1AAB  086E               	movf	_Load,w
 14593  1AAC  3E44               	addlw	68
 14594  1AAD  0086               	movwf	6
 14595  1AAE  3002               	movlw	2	; select bank4/5
 14596  1AAF  0087               	movwf	7
 14597  1AB0  0181               	clrf	1
 14598  1AB1                     l8623:	
 14599                           
 14600                           ;OverLoad_B1.c: 291: }
 14601                           ;OverLoad_B1.c: 292: if(lights == 3)
 14602  1AB1  0821               	movf	setLoad_StatusOff@lights,w
 14603  1AB2  3A03               	xorlw	3
 14604  1AB3  1D03               	skipz
 14605  1AB4  0008               	return
 14606                           
 14607                           ;OverLoad_B1.c: 293: {
 14608                           ;OverLoad_B1.c: 294: Load->Lights3Status=0;
 14609  1AB5  086E               	movf	_Load,w
 14610  1AB6  3E45               	addlw	69
 14611  1AB7  0086               	movwf	6
 14612  1AB8  3002               	movlw	2	; select bank4/5
 14613  1AB9  0087               	movwf	7
 14614  1ABA  0181               	clrf	1
 14615  1ABB  0008               	return
 14616  1ABC                     __end_of_setLoad_StatusOff:	
 14617                           
 14618                           	psect	text86
 14619  0876                     __ptext86:	
 14620 ;; *************** function _setDimmerLights *****************
 14621 ;; Defined at:
 14622 ;;		line 319 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;  lights          1    wreg     unsigned char 
 14625 ;;  status          1    4[BANK0 ] unsigned char 
 14626 ;; Auto vars:     Size  Location     Type
 14627 ;;  lights          1    6[BANK0 ] unsigned char 
 14628 ;; Return value:  Size  Location     Type
 14629 ;;		None               void
 14630 ;; Registers used:
 14631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14632 ;; Tracked objects:
 14633 ;;		On entry : 0/0
 14634 ;;		On exit  : 0/0
 14635 ;;		Unchanged: 0/0
 14636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14637 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14640 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14641 ;;Total ram usage:        3 bytes
 14642 ;; Hardware stack levels used:    1
 14643 ;; Hardware stack levels required when called:    6
 14644 ;; This function calls:
 14645 ;;		_DimmerLightsPointSelect
 14646 ;;		_setLED
 14647 ;;		_setLoad_Count
 14648 ;;		_setLoad_StatusOn
 14649 ;; This function is called by:
 14650 ;;		_setDimmerLights_Main
 14651 ;;		_setControl_Lights_Table
 14652 ;; This function uses a non-reentrant model
 14653 ;;
 14654                           
 14655                           
 14656                           ;psect for function _setDimmerLights
 14657  0876                     _setDimmerLights:	
 14658                           
 14659                           ;incstack = 0
 14660                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14661                           ;setDimmerLights@lights stored from wreg
 14662  0876  0020               	movlb	0	; select bank0
 14663  0877  00A6               	movwf	setDimmerLights@lights
 14664                           
 14665                           ;Dimmer_B1.c: 321: DimmerLightsPointSelect(lights);
 14666  0878  0826               	movf	setDimmerLights@lights,w
 14667  0879  31A5  25FC  3188   	fcall	_DimmerLightsPointSelect
 14668                           
 14669                           ;Dimmer_B1.c: 322: Dimmer->Load=lights;
 14670  087C  0020               	movlb	0	; select bank0
 14671  087D  0826               	movf	setDimmerLights@lights,w
 14672  087E  00A5               	movwf	??_setDimmerLights
 14673  087F  0021               	movlb	1	; select bank1
 14674  0880  0A39               	incf	_Dimmer^(0+128),w
 14675  0881  0086               	movwf	6
 14676  0882  0187               	clrf	7
 14677  0883  0020               	movlb	0	; select bank0
 14678  0884  0825               	movf	??_setDimmerLights,w
 14679  0885  0081               	movwf	1
 14680                           
 14681                           ;Dimmer_B1.c: 323: if(status)
 14682  0886  0824               	movf	setDimmerLights@status,w
 14683  0887  1903               	btfsc	3,2
 14684  0888  28D5               	goto	l8713
 14685                           
 14686                           ;Dimmer_B1.c: 324: {
 14687                           ;Dimmer_B1.c: 325: DimmerLights->Status=1;
 14688  0889  086C               	movf	_DimmerLights,w
 14689  088A  0086               	movwf	6
 14690  088B  3001               	movlw	1	; select bank2/3
 14691  088C  0087               	movwf	7
 14692  088D  1681               	bsf	1,5
 14693                           
 14694                           ;Dimmer_B1.c: 326: setLED(lights,0);
 14695  088E  01A2               	clrf	setLED@command
 14696  088F  0826               	movf	setDimmerLights@lights,w
 14697  0890  3190  2083  3188   	fcall	_setLED
 14698                           
 14699                           ;Dimmer_B1.c: 328: setLoad_Count(0);
 14700  0893  3000               	movlw	0
 14701  0894  31A6  264D  3188   	fcall	_setLoad_Count
 14702                           
 14703                           ;Dimmer_B1.c: 330: DimmerLights->Signal=1;
 14704  0897  0020               	movlb	0	; select bank0
 14705  0898  086C               	movf	_DimmerLights,w
 14706  0899  0086               	movwf	6
 14707  089A  3001               	movlw	1	; select bank2/3
 14708  089B  0087               	movwf	7
 14709  089C  1481               	bsf	1,1
 14710                           
 14711                           ;Dimmer_B1.c: 331: DimmerLights->DimmingTimeValue=3;
 14712  089D  3003               	movlw	3
 14713  089E  00A5               	movwf	??_setDimmerLights
 14714  089F  086C               	movf	_DimmerLights,w
 14715  08A0  3E02               	addlw	2
 14716  08A1  0086               	movwf	6
 14717  08A2  3001               	movlw	1	; select bank2/3
 14718  08A3  0087               	movwf	7
 14719  08A4  0825               	movf	??_setDimmerLights,w
 14720  08A5  0081               	movwf	1
 14721                           
 14722                           ;Dimmer_B1.c: 333: if(!DimmerLights->StatusFlag)
 14723  08A6  086C               	movf	_DimmerLights,w
 14724  08A7  0086               	movwf	6
 14725  08A8  3001               	movlw	1	; select bank2/3
 14726  08A9  0087               	movwf	7
 14727  08AA  1B01               	btfsc	1,6
 14728  08AB  0008               	return
 14729                           
 14730                           ;Dimmer_B1.c: 334: {
 14731                           ;Dimmer_B1.c: 335: DimmerLights->StatusFlag=1;
 14732  08AC  086C               	movf	_DimmerLights,w
 14733  08AD  0086               	movwf	6
 14734  08AE  3001               	movlw	1	; select bank2/3
 14735  08AF  0087               	movwf	7
 14736  08B0  1701               	bsf	1,6
 14737                           
 14738                           ;Dimmer_B1.c: 336: setLoad_StatusOn(lights,1);
 14739  08B1  01A0               	clrf	setLoad_StatusOn@command
 14740  08B2  0AA0               	incf	setLoad_StatusOn@command,f
 14741  08B3  0826               	movf	setDimmerLights@lights,w
 14742  08B4  319A  22ED         	fcall	_setLoad_StatusOn
 14743                           
 14744                           ;Dimmer_B1.c: 337: Memory->GO=0; if(!0) { Memory->Time=0; } ;;
 14745  08B6  0021               	movlb	1	; select bank1
 14746  08B7  0868               	movf	_Memory^(0+128),w
 14747  08B8  3E22               	addlw	34
 14748  08B9  0086               	movwf	6
 14749  08BA  3002               	movlw	2	; select bank4/5
 14750  08BB  0087               	movwf	7
 14751  08BC  1081               	bcf	1,1
 14752  08BD  0868               	movf	_Memory^(0+128),w
 14753  08BE  3E23               	addlw	35
 14754  08BF  0086               	movwf	6
 14755  08C0  3002               	movlw	2	; select bank4/5
 14756  08C1  0087               	movwf	7
 14757  08C2  3000               	movlw	0
 14758  08C3  3FC0               	movwi [0]fsr1
 14759  08C4  3FC1               	movwi [1]fsr1
 14760                           
 14761                           ;Dimmer_B1.c: 340: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 14762  08C5  0020               	movlb	0	; select bank0
 14763  08C6  086C               	movf	_DimmerLights,w
 14764  08C7  3E05               	addlw	5
 14765  08C8  0086               	movwf	6
 14766  08C9  3001               	movlw	1	; select bank2/3
 14767  08CA  0087               	movwf	7
 14768  08CB  0801               	movf	1,w
 14769  08CC  00A5               	movwf	??_setDimmerLights
 14770  08CD  086C               	movf	_DimmerLights,w
 14771  08CE  3E04               	addlw	4
 14772  08CF  0086               	movwf	6
 14773  08D0  3001               	movlw	1	; select bank2/3
 14774  08D1  0087               	movwf	7
 14775  08D2  0825               	movf	??_setDimmerLights,w
 14776  08D3  0081               	movwf	1
 14777                           
 14778                           ;Dimmer_B1.c: 342: }
 14779                           ;Dimmer_B1.c: 343: }
 14780  08D4  0008               	return
 14781  08D5                     l8713:	
 14782                           
 14783                           ;Dimmer_B1.c: 344: else
 14784                           ;Dimmer_B1.c: 345: {
 14785                           ;Dimmer_B1.c: 346: DimmerLights->Status=0;
 14786  08D5  086C               	movf	_DimmerLights,w
 14787  08D6  0086               	movwf	6
 14788  08D7  3001               	movlw	1	; select bank2/3
 14789  08D8  0087               	movwf	7
 14790  08D9  1281               	bcf	1,5
 14791                           
 14792                           ;Dimmer_B1.c: 348: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 14793  08DA  086C               	movf	_DimmerLights,w
 14794  08DB  3E06               	addlw	6
 14795  08DC  0086               	movwf	6
 14796  08DD  3001               	movlw	1	; select bank2/3
 14797  08DE  0087               	movwf	7
 14798  08DF  0801               	movf	1,w
 14799  08E0  00A5               	movwf	??_setDimmerLights
 14800  08E1  086C               	movf	_DimmerLights,w
 14801  08E2  3E04               	addlw	4
 14802  08E3  0086               	movwf	6
 14803  08E4  3001               	movlw	1	; select bank2/3
 14804  08E5  0087               	movwf	7
 14805  08E6  0825               	movf	??_setDimmerLights,w
 14806  08E7  0081               	movwf	1
 14807                           
 14808                           ;Dimmer_B1.c: 355: DimmerLights->Signal=1;
 14809  08E8  086C               	movf	_DimmerLights,w
 14810  08E9  0086               	movwf	6
 14811  08EA  3001               	movlw	1	; select bank2/3
 14812  08EB  0087               	movwf	7
 14813  08EC  1481               	bsf	1,1
 14814                           
 14815                           ;Dimmer_B1.c: 356: DimmerLights->AdjFlag=0;
 14816  08ED  086C               	movf	_DimmerLights,w
 14817  08EE  0086               	movwf	6
 14818  08EF  3001               	movlw	1	; select bank2/3
 14819  08F0  0087               	movwf	7
 14820  08F1  1181               	bcf	1,3
 14821                           
 14822                           ;Dimmer_B1.c: 357: DimmerLights->AdjStatus=0;
 14823  08F2  086C               	movf	_DimmerLights,w
 14824  08F3  0086               	movwf	6
 14825  08F4  3001               	movlw	1	; select bank2/3
 14826  08F5  0087               	movwf	7
 14827  08F6  1201               	bcf	1,4
 14828                           
 14829                           ;Dimmer_B1.c: 358: DimmerLights->DimmingTimeValue=3;
 14830  08F7  3003               	movlw	3
 14831  08F8  00A5               	movwf	??_setDimmerLights
 14832  08F9  086C               	movf	_DimmerLights,w
 14833  08FA  3E02               	addlw	2
 14834  08FB  0086               	movwf	6
 14835  08FC  3001               	movlw	1	; select bank2/3
 14836  08FD  0087               	movwf	7
 14837  08FE  0825               	movf	??_setDimmerLights,w
 14838  08FF  0081               	movwf	1
 14839                           
 14840                           ;Dimmer_B1.c: 361: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 14841  0900  086C               	movf	_DimmerLights,w
 14842  0901  3E05               	addlw	5
 14843  0902  0086               	movwf	6
 14844  0903  3001               	movlw	1	; select bank2/3
 14845  0904  0087               	movwf	7
 14846  0905  0801               	movf	1,w
 14847  0906  00A5               	movwf	??_setDimmerLights
 14848  0907  086C               	movf	_DimmerLights,w
 14849  0908  3E04               	addlw	4
 14850  0909  0086               	movwf	6
 14851  090A  3001               	movlw	1	; select bank2/3
 14852  090B  0087               	movwf	7
 14853  090C  0825               	movf	??_setDimmerLights,w
 14854  090D  0081               	movwf	1
 14855  090E  0008               	return
 14856  090F                     __end_of_setDimmerLights:	
 14857                           
 14858                           	psect	text87
 14859  1AED                     __ptext87:	
 14860 ;; *************** function _setLoad_StatusOn *****************
 14861 ;; Defined at:
 14862 ;;		line 262 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 14863 ;; Parameters:    Size  Location     Type
 14864 ;;  lights          1    wreg     unsigned char 
 14865 ;;  command         1    0[BANK0 ] unsigned char 
 14866 ;; Auto vars:     Size  Location     Type
 14867 ;;  lights          1    1[BANK0 ] unsigned char 
 14868 ;; Return value:  Size  Location     Type
 14869 ;;		None               void
 14870 ;; Registers used:
 14871 ;;		wreg, fsr1l, fsr1h
 14872 ;; Tracked objects:
 14873 ;;		On entry : 0/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14877 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14881 ;;Total ram usage:        2 bytes
 14882 ;; Hardware stack levels used:    1
 14883 ;; Hardware stack levels required when called:    4
 14884 ;; This function calls:
 14885 ;;		Nothing
 14886 ;; This function is called by:
 14887 ;;		_setDimmerLights
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891                           
 14892                           ;psect for function _setLoad_StatusOn
 14893  1AED                     _setLoad_StatusOn:	
 14894                           
 14895                           ;incstack = 0
 14896                           ; Regs used in _setLoad_StatusOn: [wregfsr1]
 14897                           ;setLoad_StatusOn@lights stored from wreg
 14898  1AED  0020               	movlb	0	; select bank0
 14899  1AEE  00A1               	movwf	setLoad_StatusOn@lights
 14900                           
 14901                           ;OverLoad_B1.c: 264: Load->GO=1;
 14902  1AEF  086E               	movf	_Load,w
 14903  1AF0  0086               	movwf	6
 14904  1AF1  3002               	movlw	2	; select bank4/5
 14905  1AF2  0087               	movwf	7
 14906  1AF3  1481               	bsf	1,1
 14907                           
 14908                           ;OverLoad_B1.c: 265: Load->StatusOn=command;
 14909  1AF4  086E               	movf	_Load,w
 14910  1AF5  3E46               	addlw	70
 14911  1AF6  0086               	movwf	6
 14912  1AF7  3002               	movlw	2	; select bank4/5
 14913  1AF8  0087               	movwf	7
 14914  1AF9  0820               	movf	setLoad_StatusOn@command,w
 14915  1AFA  1001               	bcf	1,0
 14916  1AFB  1D03               	skipz
 14917  1AFC  1401               	bsf	1,0
 14918                           
 14919                           ;OverLoad_B1.c: 267: if(lights == 1)
 14920  1AFD  0821               	movf	setLoad_StatusOn@lights,w
 14921  1AFE  3A01               	xorlw	1
 14922  1AFF  1D03               	skipz
 14923  1B00  2B08               	goto	l8683
 14924                           
 14925                           ;OverLoad_B1.c: 268: {
 14926                           ;OverLoad_B1.c: 269: Load->Lights1Status=1;
 14927  1B01  086E               	movf	_Load,w
 14928  1B02  3E43               	addlw	67
 14929  1B03  0086               	movwf	6
 14930  1B04  3002               	movlw	2	; select bank4/5
 14931  1B05  0087               	movwf	7
 14932  1B06  0181               	clrf	1
 14933  1B07  0A81               	incf	1,f
 14934  1B08                     l8683:	
 14935                           
 14936                           ;OverLoad_B1.c: 270: }
 14937                           ;OverLoad_B1.c: 271: if(lights == 2)
 14938  1B08  0821               	movf	setLoad_StatusOn@lights,w
 14939  1B09  3A02               	xorlw	2
 14940  1B0A  1D03               	skipz
 14941  1B0B  2B13               	goto	l8687
 14942                           
 14943                           ;OverLoad_B1.c: 272: {
 14944                           ;OverLoad_B1.c: 273: Load->Lights2Status=1;
 14945  1B0C  086E               	movf	_Load,w
 14946  1B0D  3E44               	addlw	68
 14947  1B0E  0086               	movwf	6
 14948  1B0F  3002               	movlw	2	; select bank4/5
 14949  1B10  0087               	movwf	7
 14950  1B11  0181               	clrf	1
 14951  1B12  0A81               	incf	1,f
 14952  1B13                     l8687:	
 14953                           
 14954                           ;OverLoad_B1.c: 274: }
 14955                           ;OverLoad_B1.c: 275: if(lights == 3)
 14956  1B13  0821               	movf	setLoad_StatusOn@lights,w
 14957  1B14  3A03               	xorlw	3
 14958  1B15  1D03               	skipz
 14959  1B16  0008               	return
 14960                           
 14961                           ;OverLoad_B1.c: 276: {
 14962                           ;OverLoad_B1.c: 277: Load->Lights3Status=1;
 14963  1B17  086E               	movf	_Load,w
 14964  1B18  3E45               	addlw	69
 14965  1B19  0086               	movwf	6
 14966  1B1A  3002               	movlw	2	; select bank4/5
 14967  1B1B  0087               	movwf	7
 14968  1B1C  0181               	clrf	1
 14969  1B1D  0A81               	incf	1,f
 14970  1B1E  0008               	return
 14971  1B1F                     __end_of_setLoad_StatusOn:	
 14972                           
 14973                           	psect	text88
 14974  264D                     __ptext88:	
 14975 ;; *************** function _setLoad_Count *****************
 14976 ;; Defined at:
 14977 ;;		line 247 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 14978 ;; Parameters:    Size  Location     Type
 14979 ;;  command         1    wreg     unsigned char 
 14980 ;; Auto vars:     Size  Location     Type
 14981 ;;  command         1    1[BANK0 ] unsigned char 
 14982 ;; Return value:  Size  Location     Type
 14983 ;;		None               void
 14984 ;; Registers used:
 14985 ;;		wreg, fsr1l, fsr1h
 14986 ;; Tracked objects:
 14987 ;;		On entry : 0/0
 14988 ;;		On exit  : 0/0
 14989 ;;		Unchanged: 0/0
 14990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14992 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14995 ;;Total ram usage:        2 bytes
 14996 ;; Hardware stack levels used:    1
 14997 ;; Hardware stack levels required when called:    4
 14998 ;; This function calls:
 14999 ;;		Nothing
 15000 ;; This function is called by:
 15001 ;;		_setDimmerLights
 15002 ;; This function uses a non-reentrant model
 15003 ;;
 15004                           
 15005                           
 15006                           ;psect for function _setLoad_Count
 15007  264D                     _setLoad_Count:	
 15008                           
 15009                           ;incstack = 0
 15010                           ; Regs used in _setLoad_Count: [wregfsr1]
 15011                           ;setLoad_Count@command stored from wreg
 15012  264D  0020               	movlb	0	; select bank0
 15013  264E  00A1               	movwf	setLoad_Count@command
 15014                           
 15015                           ;OverLoad_B1.c: 249: Load->Count=command;
 15016  264F  0821               	movf	setLoad_Count@command,w
 15017  2650  00A0               	movwf	??_setLoad_Count
 15018  2651  086E               	movf	_Load,w
 15019  2652  3E3A               	addlw	58
 15020  2653  0086               	movwf	6
 15021  2654  3002               	movlw	2	; select bank4/5
 15022  2655  0087               	movwf	7
 15023  2656  0820               	movf	??_setLoad_Count,w
 15024  2657  0081               	movwf	1
 15025                           
 15026                           ;OverLoad_B1.c: 250: Load->SafeCount=command;
 15027  2658  0821               	movf	setLoad_Count@command,w
 15028  2659  00A0               	movwf	??_setLoad_Count
 15029  265A  086E               	movf	_Load,w
 15030  265B  3E42               	addlw	66
 15031  265C  0086               	movwf	6
 15032  265D  3002               	movlw	2	; select bank4/5
 15033  265E  0087               	movwf	7
 15034  265F  0820               	movf	??_setLoad_Count,w
 15035  2660  0081               	movwf	1
 15036  2661  0008               	return
 15037  2662                     __end_of_setLoad_Count:	
 15038                           
 15039                           	psect	text89
 15040  1083                     __ptext89:	
 15041 ;; *************** function _setLED *****************
 15042 ;; Defined at:
 15043 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 15044 ;; Parameters:    Size  Location     Type
 15045 ;;  led             1    wreg     unsigned char 
 15046 ;;  command         1    2[BANK0 ] unsigned char 
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;  led             1    3[BANK0 ] unsigned char 
 15049 ;; Return value:  Size  Location     Type
 15050 ;;		None               void
 15051 ;; Registers used:
 15052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15058 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15062 ;;Total ram usage:        2 bytes
 15063 ;; Hardware stack levels used:    1
 15064 ;; Hardware stack levels required when called:    5
 15065 ;; This function calls:
 15066 ;;		_LedPointSelect
 15067 ;; This function is called by:
 15068 ;;		_setDimmerLights_ERROR
 15069 ;;		_setDimmerLights
 15070 ;;		_setLED_Initialization
 15071 ;;		_setLoad_Exceptions
 15072 ;;		_setOverTemp_Exceptions
 15073 ;;		_setPowerFault_Exceptions
 15074 ;;		_setSw_Initialization
 15075 ;; This function uses a non-reentrant model
 15076 ;;
 15077                           
 15078                           
 15079                           ;psect for function _setLED
 15080  1083                     _setLED:	
 15081                           
 15082                           ;incstack = 0
 15083                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15084                           ;setLED@led stored from wreg
 15085  1083  0020               	movlb	0	; select bank0
 15086  1084  00A3               	movwf	setLED@led
 15087                           
 15088                           ;LED_B1.c: 76: LedPointSelect(led);
 15089  1085  0823               	movf	setLED@led,w
 15090  1086  3198  20A5  3190   	fcall	_LedPointSelect
 15091                           
 15092                           ;LED_B1.c: 77: if(command == 0)
 15093  1089  0020               	movlb	0	; select bank0
 15094  108A  08A2               	movf	setLED@command,f
 15095  108B  1D03               	skipz
 15096  108C  289F               	goto	l8643
 15097                           
 15098                           ;LED_B1.c: 78: {
 15099                           ;LED_B1.c: 80: if(led == 1)
 15100  108D  0823               	movf	setLED@led,w
 15101  108E  3A01               	xorlw	1
 15102  108F  1D03               	skipz
 15103  1090  2893               	goto	l8635
 15104                           
 15105                           ;LED_B1.c: 81: {
 15106                           ;LED_B1.c: 85: RA3=1;
 15107  1091  158C               	bsf	12,3	;volatile
 15108                           
 15109                           ;LED_B1.c: 87: }
 15110  1092  0008               	return
 15111  1093                     l8635:	
 15112                           
 15113                           ;LED_B1.c: 90: else if(led == 2)
 15114  1093  0823               	movf	setLED@led,w
 15115  1094  3A02               	xorlw	2
 15116  1095  1D03               	skipz
 15117  1096  2899               	goto	l8639
 15118                           
 15119                           ;LED_B1.c: 91: {
 15120                           ;LED_B1.c: 95: RC7=1;
 15121  1097  178E               	bsf	14,7	;volatile
 15122                           
 15123                           ;LED_B1.c: 97: }
 15124  1098  0008               	return
 15125  1099                     l8639:	
 15126                           
 15127                           ;LED_B1.c: 110: else if(led == 99)
 15128  1099  0823               	movf	setLED@led,w
 15129  109A  3A63               	xorlw	99
 15130  109B  1D03               	skipz
 15131  109C  0008               	return
 15132                           
 15133                           ;LED_B1.c: 111: {
 15134                           ;LED_B1.c: 115: RB5=1;
 15135  109D  168D               	bsf	13,5	;volatile
 15136                           
 15137                           ;LED_B1.c: 117: }
 15138                           ;LED_B1.c: 119: }
 15139  109E  0008               	return
 15140  109F                     l8643:	
 15141                           
 15142                           ;LED_B1.c: 120: else if(command == 1)
 15143  109F  0822               	movf	setLED@command,w
 15144  10A0  3A01               	xorlw	1
 15145  10A1  1D03               	skipz
 15146  10A2  28B5               	goto	l8657
 15147                           
 15148                           ;LED_B1.c: 121: {
 15149                           ;LED_B1.c: 123: if(led == 1)
 15150  10A3  0823               	movf	setLED@led,w
 15151  10A4  3A01               	xorlw	1
 15152  10A5  1D03               	skipz
 15153  10A6  28A9               	goto	l8649
 15154                           
 15155                           ;LED_B1.c: 124: {
 15156                           ;LED_B1.c: 128: RA3=0;
 15157  10A7  118C               	bcf	12,3	;volatile
 15158                           
 15159                           ;LED_B1.c: 130: }
 15160  10A8  0008               	return
 15161  10A9                     l8649:	
 15162                           
 15163                           ;LED_B1.c: 133: else if(led == 2)
 15164  10A9  0823               	movf	setLED@led,w
 15165  10AA  3A02               	xorlw	2
 15166  10AB  1D03               	skipz
 15167  10AC  28AF               	goto	l8653
 15168                           
 15169                           ;LED_B1.c: 134: {
 15170                           ;LED_B1.c: 138: RC7=0;
 15171  10AD  138E               	bcf	14,7	;volatile
 15172                           
 15173                           ;LED_B1.c: 140: }
 15174  10AE  0008               	return
 15175  10AF                     l8653:	
 15176                           
 15177                           ;LED_B1.c: 153: else if(led == 99)
 15178  10AF  0823               	movf	setLED@led,w
 15179  10B0  3A63               	xorlw	99
 15180  10B1  1D03               	skipz
 15181  10B2  0008               	return
 15182                           
 15183                           ;LED_B1.c: 154: {
 15184                           ;LED_B1.c: 158: RB5=0;
 15185  10B3  128D               	bcf	13,5	;volatile
 15186                           
 15187                           ;LED_B1.c: 160: }
 15188                           ;LED_B1.c: 162: }
 15189  10B4  0008               	return
 15190  10B5                     l8657:	
 15191                           
 15192                           ;LED_B1.c: 163: else if(command == 10)
 15193  10B5  0822               	movf	setLED@command,w
 15194  10B6  3A0A               	xorlw	10
 15195  10B7  1D03               	skipz
 15196  10B8  28D7               	goto	l8673
 15197                           
 15198                           ;LED_B1.c: 164: {
 15199                           ;LED_B1.c: 165: LED->GO=0;
 15200  10B9  0021               	movlb	1	; select bank1
 15201  10BA  083B               	movf	_LED^(0+128),w
 15202  10BB  0086               	movwf	6
 15203  10BC  0187               	clrf	7
 15204  10BD  1081               	bcf	1,1
 15205                           
 15206                           ;LED_B1.c: 166: LED->Time=0;
 15207  10BE  0A3B               	incf	_LED^(0+128),w
 15208  10BF  0086               	movwf	6
 15209  10C0  0187               	clrf	7
 15210  10C1  3000               	movlw	0
 15211  10C2  3FC0               	movwi [0]fsr1
 15212  10C3  3FC1               	movwi [1]fsr1
 15213                           
 15214                           ;LED_B1.c: 168: if(led == 1)
 15215  10C4  0020               	movlb	0	; select bank0
 15216  10C5  0823               	movf	setLED@led,w
 15217  10C6  3A01               	xorlw	1
 15218  10C7  1D03               	skipz
 15219  10C8  28CB               	goto	l8665
 15220                           
 15221                           ;LED_B1.c: 169: {
 15222                           ;LED_B1.c: 173: RA3=1;
 15223  10C9  158C               	bsf	12,3	;volatile
 15224                           
 15225                           ;LED_B1.c: 175: }
 15226  10CA  0008               	return
 15227  10CB                     l8665:	
 15228                           
 15229                           ;LED_B1.c: 178: else if(led == 2)
 15230  10CB  0823               	movf	setLED@led,w
 15231  10CC  3A02               	xorlw	2
 15232  10CD  1D03               	skipz
 15233  10CE  28D1               	goto	l8669
 15234                           
 15235                           ;LED_B1.c: 179: {
 15236                           ;LED_B1.c: 183: RC7=1;
 15237  10CF  178E               	bsf	14,7	;volatile
 15238                           
 15239                           ;LED_B1.c: 185: }
 15240  10D0  0008               	return
 15241  10D1                     l8669:	
 15242                           
 15243                           ;LED_B1.c: 198: else if(led == 99)
 15244  10D1  0823               	movf	setLED@led,w
 15245  10D2  3A63               	xorlw	99
 15246  10D3  1D03               	skipz
 15247  10D4  0008               	return
 15248                           
 15249                           ;LED_B1.c: 199: {
 15250                           ;LED_B1.c: 203: RB5=1;
 15251  10D5  168D               	bsf	13,5	;volatile
 15252                           
 15253                           ;LED_B1.c: 205: }
 15254                           ;LED_B1.c: 207: }
 15255  10D6  0008               	return
 15256  10D7                     l8673:	
 15257                           
 15258                           ;LED_B1.c: 208: else if(command == 11)
 15259  10D7  0822               	movf	setLED@command,w
 15260  10D8  3A0B               	xorlw	11
 15261  10D9  1D03               	skipz
 15262  10DA  0008               	return
 15263                           
 15264                           ;LED_B1.c: 209: {
 15265                           ;LED_B1.c: 210: LED->GO=1;
 15266  10DB  0021               	movlb	1	; select bank1
 15267  10DC  083B               	movf	_LED^(0+128),w
 15268  10DD  0086               	movwf	6
 15269  10DE  0187               	clrf	7
 15270  10DF  1481               	bsf	1,1
 15271  10E0  0008               	return
 15272  10E1                     __end_of_setLED:	
 15273                           
 15274                           	psect	text90
 15275  18A5                     __ptext90:	
 15276 ;; *************** function _LedPointSelect *****************
 15277 ;; Defined at:
 15278 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 15279 ;; Parameters:    Size  Location     Type
 15280 ;;  led             1    wreg     unsigned char 
 15281 ;; Auto vars:     Size  Location     Type
 15282 ;;  led             1    1[BANK0 ] unsigned char 
 15283 ;; Return value:  Size  Location     Type
 15284 ;;		None               void
 15285 ;; Registers used:
 15286 ;;		wreg
 15287 ;; Tracked objects:
 15288 ;;		On entry : 0/0
 15289 ;;		On exit  : 0/0
 15290 ;;		Unchanged: 0/0
 15291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15293 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15294 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15296 ;;Total ram usage:        2 bytes
 15297 ;; Hardware stack levels used:    1
 15298 ;; Hardware stack levels required when called:    4
 15299 ;; This function calls:
 15300 ;;		Nothing
 15301 ;; This function is called by:
 15302 ;;		_setLED_Initialization
 15303 ;;		_setLED
 15304 ;;		_setLED_Main
 15305 ;; This function uses a non-reentrant model
 15306 ;;
 15307                           
 15308                           
 15309                           ;psect for function _LedPointSelect
 15310  18A5                     _LedPointSelect:	
 15311                           
 15312                           ;incstack = 0
 15313                           ; Regs used in _LedPointSelect: [wreg]
 15314                           ;LedPointSelect@led stored from wreg
 15315  18A5  0020               	movlb	0	; select bank0
 15316  18A6  00A1               	movwf	LedPointSelect@led
 15317                           
 15318                           ;LED_B1.c: 10: if(led == 1)
 15319  18A7  0821               	movf	LedPointSelect@led,w
 15320  18A8  3A01               	xorlw	1
 15321  18A9  1D03               	skipz
 15322  18AA  28B1               	goto	l6407
 15323                           
 15324                           ;LED_B1.c: 11: {
 15325                           ;LED_B1.c: 12: LED=&VarLED1;
 15326  18AB  30D9               	movlw	_VarLED1& (0+255)
 15327  18AC  00A0               	movwf	??_LedPointSelect
 15328  18AD  0820               	movf	??_LedPointSelect,w
 15329  18AE  0021               	movlb	1	; select bank1
 15330  18AF  00BB               	movwf	_LED^(0+128)
 15331                           
 15332                           ;LED_B1.c: 13: }
 15333  18B0  0008               	return
 15334  18B1                     l6407:	
 15335                           
 15336                           ;LED_B1.c: 16: else if(led == 2)
 15337  18B1  0020               	movlb	0	; select bank0
 15338  18B2  0821               	movf	LedPointSelect@led,w
 15339  18B3  3A02               	xorlw	2
 15340  18B4  1D03               	skipz
 15341  18B5  28BC               	goto	l6411
 15342                           
 15343                           ;LED_B1.c: 17: {
 15344                           ;LED_B1.c: 18: LED=&VarLED2;
 15345  18B6  30DD               	movlw	_VarLED2& (0+255)
 15346  18B7  00A0               	movwf	??_LedPointSelect
 15347  18B8  0820               	movf	??_LedPointSelect,w
 15348  18B9  0021               	movlb	1	; select bank1
 15349  18BA  00BB               	movwf	_LED^(0+128)
 15350                           
 15351                           ;LED_B1.c: 19: }
 15352  18BB  0008               	return
 15353  18BC                     l6411:	
 15354                           
 15355                           ;LED_B1.c: 28: else if(led == 99)
 15356  18BC  0020               	movlb	0	; select bank0
 15357  18BD  0821               	movf	LedPointSelect@led,w
 15358  18BE  3A63               	xorlw	99
 15359  18BF  1D03               	skipz
 15360  18C0  0008               	return
 15361                           
 15362                           ;LED_B1.c: 29: {
 15363                           ;LED_B1.c: 30: LED=&VarErrLED;
 15364  18C1  30D5               	movlw	_VarErrLED& (0+255)
 15365  18C2  00A0               	movwf	??_LedPointSelect
 15366  18C3  0820               	movf	??_LedPointSelect,w
 15367  18C4  0021               	movlb	1	; select bank1
 15368  18C5  00BB               	movwf	_LED^(0+128)
 15369  18C6  0008               	return
 15370  18C7                     __end_of_LedPointSelect:	
 15371                           
 15372                           	psect	text91
 15373  2751                     __ptext91:	
 15374 ;; *************** function _DimmerLights_Close *****************
 15375 ;; Defined at:
 15376 ;;		line 90 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;		None
 15379 ;; Auto vars:     Size  Location     Type
 15380 ;;		None
 15381 ;; Return value:  Size  Location     Type
 15382 ;;		None               void
 15383 ;; Registers used:
 15384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15385 ;; Tracked objects:
 15386 ;;		On entry : 0/0
 15387 ;;		On exit  : 0/0
 15388 ;;		Unchanged: 0/0
 15389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15394 ;;Total ram usage:        0 bytes
 15395 ;; Hardware stack levels used:    1
 15396 ;; Hardware stack levels required when called:    5
 15397 ;; This function calls:
 15398 ;;		_getDimmerLights_StatusFlag
 15399 ;;		_setLoad_GO
 15400 ;; This function is called by:
 15401 ;;		_DimmerLights_Main
 15402 ;; This function uses a non-reentrant model
 15403 ;;
 15404                           
 15405                           
 15406                           ;psect for function _DimmerLights_Close
 15407  2751                     _DimmerLights_Close:	
 15408                           
 15409                           ;Dimmer_B1.c: 92: if(Dimmer->Detect)
 15410                           
 15411                           ;incstack = 0
 15412                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15413  2751  0021               	movlb	1	; select bank1
 15414  2752  0839               	movf	_Dimmer^(0+128),w
 15415  2753  0086               	movwf	6
 15416  2754  0187               	clrf	7
 15417  2755  1C01               	btfss	1,0
 15418  2756  0008               	return
 15419                           
 15420                           ;Dimmer_B1.c: 93: {
 15421                           ;Dimmer_B1.c: 94: Dimmer->Detect=0;
 15422  2757  0839               	movf	_Dimmer^(0+128),w
 15423  2758  0086               	movwf	6
 15424  2759  0187               	clrf	7
 15425  275A  1001               	bcf	1,0
 15426                           
 15427                           ;Dimmer_B1.c: 95: if(!getDimmerLights_StatusFlag())
 15428  275B  31A6  2678  31A7   	fcall	_getDimmerLights_StatusFlag
 15429  275E  3800               	iorlw	0
 15430  275F  1D03               	skipz
 15431  2760  0008               	return
 15432                           
 15433                           ;Dimmer_B1.c: 96: {
 15434                           ;Dimmer_B1.c: 97: setLoad_GO(0);
 15435  2761  3000               	movlw	0
 15436  2762  31A4  2473         	fcall	_setLoad_GO
 15437                           
 15438                           ;Dimmer_B1.c: 98: Memory->GO=1; if(!1) { Memory->Time=1; } ;;
 15439  2764  0021               	movlb	1	; select bank1
 15440  2765  0868               	movf	_Memory^(0+128),w
 15441  2766  3E22               	addlw	34
 15442  2767  0086               	movwf	6
 15443  2768  3002               	movlw	2	; select bank4/5
 15444  2769  0087               	movwf	7
 15445  276A  1481               	bsf	1,1
 15446  276B  0008               	return
 15447  276C                     __end_of_DimmerLights_Close:	
 15448                           
 15449                           	psect	text92
 15450  2473                     __ptext92:	
 15451 ;; *************** function _setLoad_GO *****************
 15452 ;; Defined at:
 15453 ;;		line 258 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 15454 ;; Parameters:    Size  Location     Type
 15455 ;;  command         1    wreg     unsigned char 
 15456 ;; Auto vars:     Size  Location     Type
 15457 ;;  command         1    0[BANK0 ] unsigned char 
 15458 ;; Return value:  Size  Location     Type
 15459 ;;		None               void
 15460 ;; Registers used:
 15461 ;;		wreg, fsr1l, fsr1h
 15462 ;; Tracked objects:
 15463 ;;		On entry : 0/0
 15464 ;;		On exit  : 0/0
 15465 ;;		Unchanged: 0/0
 15466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15470 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15471 ;;Total ram usage:        1 bytes
 15472 ;; Hardware stack levels used:    1
 15473 ;; Hardware stack levels required when called:    4
 15474 ;; This function calls:
 15475 ;;		Nothing
 15476 ;; This function is called by:
 15477 ;;		_DimmerLights_Close
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           
 15482                           ;psect for function _setLoad_GO
 15483  2473                     _setLoad_GO:	
 15484                           
 15485                           ;incstack = 0
 15486                           ; Regs used in _setLoad_GO: [wregfsr1]
 15487                           ;setLoad_GO@command stored from wreg
 15488  2473  0020               	movlb	0	; select bank0
 15489  2474  00A0               	movwf	setLoad_GO@command
 15490                           
 15491                           ;OverLoad_B1.c: 260: Load->GO=command;
 15492  2475  086E               	movf	_Load,w
 15493  2476  0086               	movwf	6
 15494  2477  3002               	movlw	2	; select bank4/5
 15495  2478  0087               	movwf	7
 15496  2479  0820               	movf	setLoad_GO@command,w
 15497  247A  1081               	bcf	1,1
 15498  247B  1D03               	skipz
 15499  247C  1481               	bsf	1,1
 15500  247D  0008               	return
 15501  247E                     __end_of_setLoad_GO:	
 15502                           
 15503                           	psect	text93
 15504  2678                     __ptext93:	
 15505 ;; *************** function _getDimmerLights_StatusFlag *****************
 15506 ;; Defined at:
 15507 ;;		line 197 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;		None
 15510 ;; Auto vars:     Size  Location     Type
 15511 ;;  Status          1    1[BANK0 ] unsigned char 
 15512 ;; Return value:  Size  Location     Type
 15513 ;;                  1    wreg      unsigned char 
 15514 ;; Registers used:
 15515 ;;		wreg, fsr1l, fsr1h, status,2
 15516 ;; Tracked objects:
 15517 ;;		On entry : 0/0
 15518 ;;		On exit  : 0/0
 15519 ;;		Unchanged: 0/0
 15520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15524 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15525 ;;Total ram usage:        3 bytes
 15526 ;; Hardware stack levels used:    1
 15527 ;; Hardware stack levels required when called:    4
 15528 ;; This function calls:
 15529 ;;		Nothing
 15530 ;; This function is called by:
 15531 ;;		_DimmerLights_Close
 15532 ;;		_DimmerLights_Exceptions
 15533 ;; This function uses a non-reentrant model
 15534 ;;
 15535                           
 15536                           
 15537                           ;psect for function _getDimmerLights_StatusFlag
 15538  2678                     _getDimmerLights_StatusFlag:	
 15539                           
 15540                           ;Dimmer_B1.c: 199: char Status=0;
 15541                           
 15542                           ;incstack = 0
 15543                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2]
 15544  2678  0020               	movlb	0	; select bank0
 15545  2679  01A1               	clrf	getDimmerLights_StatusFlag@Status
 15546                           
 15547                           ;Dimmer_B1.c: 206: Status=(DimmerLights11->StatusFlag || DimmerLights22->StatusFlag)?1:0
      +                          ;
 15548  267A  01A2               	clrf	_getDimmerLights_StatusFlag$1814
 15549  267B  0AA2               	incf	_getDimmerLights_StatusFlag$1814,f
 15550  267C  0879               	movf	_DimmerLights11,w
 15551  267D  0086               	movwf	6
 15552  267E  3001               	movlw	1	; select bank2/3
 15553  267F  0087               	movwf	7
 15554  2680  1B01               	btfsc	1,6
 15555  2681  2E88               	goto	l6675
 15556  2682  087A               	movf	_DimmerLights22,w
 15557  2683  0086               	movwf	6
 15558  2684  3001               	movlw	1	; select bank2/3
 15559  2685  0087               	movwf	7
 15560  2686  1F01               	btfss	1,6
 15561  2687  01A2               	clrf	_getDimmerLights_StatusFlag$1814
 15562  2688                     l6675:	
 15563  2688  0822               	movf	_getDimmerLights_StatusFlag$1814,w
 15564  2689  00A0               	movwf	??_getDimmerLights_StatusFlag
 15565  268A  0820               	movf	??_getDimmerLights_StatusFlag,w
 15566  268B  00A1               	movwf	getDimmerLights_StatusFlag@Status
 15567                           
 15568                           ;Dimmer_B1.c: 213: return Status;
 15569  268C  0821               	movf	getDimmerLights_StatusFlag@Status,w
 15570  268D  0008               	return
 15571  268E                     __end_of_getDimmerLights_StatusFlag:	
 15572                           
 15573                           	psect	text94
 15574  2638                     __ptext94:	
 15575 ;; *************** function _DimmerLights_Initialization *****************
 15576 ;; Defined at:
 15577 ;;		line 32 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15578 ;; Parameters:    Size  Location     Type
 15579 ;;		None
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;		None
 15582 ;; Return value:  Size  Location     Type
 15583 ;;		None               void
 15584 ;; Registers used:
 15585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15586 ;; Tracked objects:
 15587 ;;		On entry : 0/0
 15588 ;;		On exit  : 0/0
 15589 ;;		Unchanged: 0/0
 15590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15595 ;;Total ram usage:        1 bytes
 15596 ;; Hardware stack levels used:    1
 15597 ;; Hardware stack levels required when called:    8
 15598 ;; This function calls:
 15599 ;;		_Dimmer_Initialization
 15600 ;;		_setDimmerLights_Initialization
 15601 ;; This function is called by:
 15602 ;;		_main
 15603 ;; This function uses a non-reentrant model
 15604 ;;
 15605                           
 15606                           
 15607                           ;psect for function _DimmerLights_Initialization
 15608  2638                     _DimmerLights_Initialization:	
 15609                           
 15610                           ;Dimmer_B1.c: 35: DimmerLights11=&DimmerLights1;
 15611                           
 15612                           ;incstack = 0
 15613                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15614  2638  302E               	movlw	_DimmerLights1& (0+255)
 15615  2639  0020               	movlb	0	; select bank0
 15616  263A  00E2               	movwf	??_DimmerLights_Initialization
 15617  263B  0862               	movf	??_DimmerLights_Initialization,w
 15618  263C  00F9               	movwf	_DimmerLights11
 15619                           
 15620                           ;Dimmer_B1.c: 36: setDimmerLights_Initialization(1);
 15621  263D  3001               	movlw	1
 15622  263E  319C  2486  31A6   	fcall	_setDimmerLights_Initialization
 15623                           
 15624                           ;Dimmer_B1.c: 40: DimmerLights22=&DimmerLights2;
 15625  2641  303B               	movlw	_DimmerLights2& (0+255)
 15626  2642  0020               	movlb	0	; select bank0
 15627  2643  00E2               	movwf	??_DimmerLights_Initialization
 15628  2644  0862               	movf	??_DimmerLights_Initialization,w
 15629  2645  00FA               	movwf	_DimmerLights22
 15630                           
 15631                           ;Dimmer_B1.c: 41: setDimmerLights_Initialization(2);
 15632  2646  3002               	movlw	2
 15633  2647  319C  2486  31A6   	fcall	_setDimmerLights_Initialization
 15634                           
 15635                           ;Dimmer_B1.c: 50: Dimmer_Initialization();
 15636  264A  31A3  23F2         	fcall	_Dimmer_Initialization
 15637  264C  0008               	return
 15638  264D                     __end_of_DimmerLights_Initialization:	
 15639                           
 15640                           	psect	text95
 15641  1C86                     __ptext95:	
 15642 ;; *************** function _setDimmerLights_Initialization *****************
 15643 ;; Defined at:
 15644 ;;		line 54 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;  lights          1    wreg     unsigned char 
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;  lights          1   65[BANK0 ] unsigned char 
 15649 ;; Return value:  Size  Location     Type
 15650 ;;		None               void
 15651 ;; Registers used:
 15652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15653 ;; Tracked objects:
 15654 ;;		On entry : 0/0
 15655 ;;		On exit  : 0/0
 15656 ;;		Unchanged: 0/0
 15657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15659 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15661 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15662 ;;Total ram usage:        3 bytes
 15663 ;; Hardware stack levels used:    1
 15664 ;; Hardware stack levels required when called:    7
 15665 ;; This function calls:
 15666 ;;		_DimmerLightsPointSelect
 15667 ;;		_getPercentValue
 15668 ;; This function is called by:
 15669 ;;		_DimmerLights_Initialization
 15670 ;; This function uses a non-reentrant model
 15671 ;;
 15672                           
 15673                           
 15674                           ;psect for function _setDimmerLights_Initialization
 15675  1C86                     _setDimmerLights_Initialization:	
 15676                           
 15677                           ;incstack = 0
 15678                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 15679                           ;setDimmerLights_Initialization@lights stored from wreg
 15680  1C86  0020               	movlb	0	; select bank0
 15681  1C87  00E1               	movwf	setDimmerLights_Initialization@lights
 15682                           
 15683                           ;Dimmer_B1.c: 56: DimmerLightsPointSelect(lights);
 15684  1C88  0861               	movf	setDimmerLights_Initialization@lights,w
 15685  1C89  31A5  25FC  319C   	fcall	_DimmerLightsPointSelect
 15686                           
 15687                           ;Dimmer_B1.c: 58: DimmerLights->MaxmumValue=((char)((100-90)*1.5));
 15688  1C8C  300F               	movlw	15
 15689  1C8D  0020               	movlb	0	; select bank0
 15690  1C8E  00DF               	movwf	??_setDimmerLights_Initialization
 15691  1C8F  086C               	movf	_DimmerLights,w
 15692  1C90  3E05               	addlw	5
 15693  1C91  0086               	movwf	6
 15694  1C92  3001               	movlw	1	; select bank2/3
 15695  1C93  0087               	movwf	7
 15696  1C94  085F               	movf	??_setDimmerLights_Initialization,w
 15697  1C95  0081               	movwf	1
 15698                           
 15699                           ;Dimmer_B1.c: 59: DimmerLights->MinimumValue=((char)((100-15)*1.5));
 15700  1C96  307F               	movlw	127
 15701  1C97  00DF               	movwf	??_setDimmerLights_Initialization
 15702  1C98  086C               	movf	_DimmerLights,w
 15703  1C99  3E06               	addlw	6
 15704  1C9A  0086               	movwf	6
 15705  1C9B  3001               	movlw	1	; select bank2/3
 15706  1C9C  0087               	movwf	7
 15707  1C9D  085F               	movf	??_setDimmerLights_Initialization,w
 15708  1C9E  0081               	movwf	1
 15709                           
 15710                           ;Dimmer_B1.c: 60: DimmerLights->Clear=1;
 15711  1C9F  086C               	movf	_DimmerLights,w
 15712  1CA0  3E0C               	addlw	12
 15713  1CA1  0086               	movwf	6
 15714  1CA2  3001               	movlw	1	; select bank2/3
 15715  1CA3  0087               	movwf	7
 15716  1CA4  1401               	bsf	1,0
 15717                           
 15718                           ;Dimmer_B1.c: 66: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 15719  1CA5  086C               	movf	_DimmerLights,w
 15720  1CA6  3E06               	addlw	6
 15721  1CA7  0086               	movwf	6
 15722  1CA8  3001               	movlw	1	; select bank2/3
 15723  1CA9  0087               	movwf	7
 15724  1CAA  0801               	movf	1,w
 15725  1CAB  00DF               	movwf	??_setDimmerLights_Initialization
 15726  1CAC  086C               	movf	_DimmerLights,w
 15727  1CAD  3E04               	addlw	4
 15728  1CAE  0086               	movwf	6
 15729  1CAF  3001               	movlw	1	; select bank2/3
 15730  1CB0  0087               	movwf	7
 15731  1CB1  085F               	movf	??_setDimmerLights_Initialization,w
 15732  1CB2  0081               	movwf	1
 15733                           
 15734                           ;Dimmer_B1.c: 84: DimmerLights->MaxmumValue=getPercentValue(Product->Data[(20+lights)]);
 15735  1CB3  0861               	movf	setDimmerLights_Initialization@lights,w
 15736  1CB4  3E14               	addlw	20
 15737  1CB5  076F               	addwf	_Product,w
 15738  1CB6  00DF               	movwf	??_setDimmerLights_Initialization
 15739  1CB7  085F               	movf	??_setDimmerLights_Initialization,w
 15740  1CB8  0086               	movwf	6
 15741  1CB9  3001               	movlw	1	; select bank2/3
 15742  1CBA  0087               	movwf	7
 15743  1CBB  0801               	movf	1,w
 15744  1CBC  319F  27A5         	fcall	_getPercentValue
 15745  1CBE  0020               	movlb	0	; select bank0
 15746  1CBF  00E0               	movwf	??_setDimmerLights_Initialization+1
 15747  1CC0  086C               	movf	_DimmerLights,w
 15748  1CC1  3E05               	addlw	5
 15749  1CC2  0086               	movwf	6
 15750  1CC3  3001               	movlw	1	; select bank2/3
 15751  1CC4  0087               	movwf	7
 15752  1CC5  0860               	movf	??_setDimmerLights_Initialization+1,w
 15753  1CC6  0081               	movwf	1
 15754  1CC7  0008               	return
 15755  1CC8                     __end_of_setDimmerLights_Initialization:	
 15756                           
 15757                           	psect	text96
 15758  1FA5                     __ptext96:	
 15759 ;; *************** function _getPercentValue *****************
 15760 ;; Defined at:
 15761 ;;		line 477 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15762 ;; Parameters:    Size  Location     Type
 15763 ;;  value           1    wreg     unsigned char 
 15764 ;; Auto vars:     Size  Location     Type
 15765 ;;  value           1   59[BANK0 ] unsigned char 
 15766 ;;  i               3   60[BANK0 ] float 
 15767 ;; Return value:  Size  Location     Type
 15768 ;;                  1    wreg      unsigned char 
 15769 ;; Registers used:
 15770 ;;		wreg, status,2, status,0, pclath, cstack
 15771 ;; Tracked objects:
 15772 ;;		On entry : 0/0
 15773 ;;		On exit  : 0/0
 15774 ;;		Unchanged: 0/0
 15775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15777 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15779 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15780 ;;Total ram usage:        6 bytes
 15781 ;; Hardware stack levels used:    1
 15782 ;; Hardware stack levels required when called:    6
 15783 ;; This function calls:
 15784 ;;		___awtoft
 15785 ;;		___ftadd
 15786 ;;		___ftdiv
 15787 ;;		___ftmul
 15788 ;;		___fttol
 15789 ;; This function is called by:
 15790 ;;		_setDimmerLights_Initialization
 15791 ;;		_setDimmerLights_AdjRF
 15792 ;; This function uses a non-reentrant model
 15793 ;;
 15794                           
 15795                           
 15796                           ;psect for function _getPercentValue
 15797  1FA5                     _getPercentValue:	
 15798                           
 15799                           ;incstack = 0
 15800                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15801                           ;getPercentValue@value stored from wreg
 15802  1FA5  0020               	movlb	0	; select bank0
 15803  1FA6  00DB               	movwf	getPercentValue@value
 15804                           
 15805                           ;Dimmer_B1.c: 480: float i=((char)((100-15)*1.5))-((char)((100-90)*1.5));
 15806  1FA7  3000               	movlw	0
 15807  1FA8  00DC               	movwf	getPercentValue@i
 15808  1FA9  30E0               	movlw	224
 15809  1FAA  00DD               	movwf	getPercentValue@i+1
 15810  1FAB  3042               	movlw	66
 15811  1FAC  00DE               	movwf	getPercentValue@i+2
 15812                           
 15813                           ;Dimmer_B1.c: 481: i/=100;
 15814  1FAD  3000               	movlw	0
 15815  1FAE  00AE               	movwf	___ftdiv@f2
 15816  1FAF  30C8               	movlw	200
 15817  1FB0  00AF               	movwf	___ftdiv@f2+1
 15818  1FB1  3042               	movlw	66
 15819  1FB2  00B0               	movwf	___ftdiv@f2+2
 15820  1FB3  085C               	movf	getPercentValue@i,w
 15821  1FB4  00B1               	movwf	___ftdiv@f1
 15822  1FB5  085D               	movf	getPercentValue@i+1,w
 15823  1FB6  00B2               	movwf	___ftdiv@f1+1
 15824  1FB7  085E               	movf	getPercentValue@i+2,w
 15825  1FB8  00B3               	movwf	___ftdiv@f1+2
 15826  1FB9  3189  21B7  319F   	fcall	___ftdiv
 15827  1FBC  0020               	movlb	0	; select bank0
 15828  1FBD  082E               	movf	?___ftdiv,w
 15829  1FBE  00DC               	movwf	getPercentValue@i
 15830  1FBF  082F               	movf	?___ftdiv+1,w
 15831  1FC0  00DD               	movwf	getPercentValue@i+1
 15832  1FC1  0830               	movf	?___ftdiv+2,w
 15833  1FC2  00DE               	movwf	getPercentValue@i+2
 15834                           
 15835                           ;Dimmer_B1.c: 482: return (char)(((100-value)*i)+((char)((100-90)*1.5)));
 15836  1FC3  085B               	movf	getPercentValue@value,w
 15837  1FC4  00D9               	movwf	??_getPercentValue
 15838  1FC5  01DA               	clrf	??_getPercentValue+1
 15839  1FC6  09D9               	comf	??_getPercentValue,f
 15840  1FC7  09DA               	comf	??_getPercentValue+1,f
 15841  1FC8  0AD9               	incf	??_getPercentValue,f
 15842  1FC9  1903               	skipnz
 15843  1FCA  0ADA               	incf	??_getPercentValue+1,f
 15844  1FCB  0859               	movf	??_getPercentValue,w
 15845  1FCC  3E64               	addlw	100
 15846  1FCD  00A8               	movwf	___awtoft@c
 15847  1FCE  3000               	movlw	0
 15848  1FCF  3D5A               	addwfc	??_getPercentValue+1,w
 15849  1FD0  00A9               	movwf	___awtoft@c+1
 15850  1FD1  3198  2083  319F   	fcall	___awtoft
 15851  1FD4  0020               	movlb	0	; select bank0
 15852  1FD5  0828               	movf	?___awtoft,w
 15853  1FD6  00B1               	movwf	___ftmul@f2
 15854  1FD7  0829               	movf	?___awtoft+1,w
 15855  1FD8  00B2               	movwf	___ftmul@f2+1
 15856  1FD9  082A               	movf	?___awtoft+2,w
 15857  1FDA  00B3               	movwf	___ftmul@f2+2
 15858  1FDB  085C               	movf	getPercentValue@i,w
 15859  1FDC  00AE               	movwf	___ftmul@f1
 15860  1FDD  085D               	movf	getPercentValue@i+1,w
 15861  1FDE  00AF               	movwf	___ftmul@f1+1
 15862  1FDF  085E               	movf	getPercentValue@i+2,w
 15863  1FE0  00B0               	movwf	___ftmul@f1+2
 15864  1FE1  318A  2260  319F   	fcall	___ftmul
 15865  1FE4  0020               	movlb	0	; select bank0
 15866  1FE5  082E               	movf	?___ftmul,w
 15867  1FE6  00C1               	movwf	___ftadd@f2
 15868  1FE7  082F               	movf	?___ftmul+1,w
 15869  1FE8  00C2               	movwf	___ftadd@f2+1
 15870  1FE9  0830               	movf	?___ftmul+2,w
 15871  1FEA  00C3               	movwf	___ftadd@f2+2
 15872  1FEB  3000               	movlw	0
 15873  1FEC  00BE               	movwf	___ftadd@f1
 15874  1FED  3070               	movlw	112
 15875  1FEE  00BF               	movwf	___ftadd@f1+1
 15876  1FEF  3041               	movlw	65
 15877  1FF0  00C0               	movwf	___ftadd@f1+2
 15878  1FF1  318B  23DD  319F   	fcall	___ftadd
 15879  1FF4  0020               	movlb	0	; select bank0
 15880  1FF5  083E               	movf	?___ftadd,w
 15881  1FF6  00CB               	movwf	___fttol@f1
 15882  1FF7  083F               	movf	?___ftadd+1,w
 15883  1FF8  00CC               	movwf	___fttol@f1+1
 15884  1FF9  0840               	movf	?___ftadd+2,w
 15885  1FFA  00CD               	movwf	___fttol@f1+2
 15886  1FFB  3195  2538         	fcall	___fttol
 15887  1FFD  0020               	movlb	0	; select bank0
 15888  1FFE  084B               	movf	?___fttol,w
 15889  1FFF  0008               	return
 15890  2000                     __end_of_getPercentValue:	
 15891                           
 15892                           	psect	text97
 15893  1538                     __ptext97:	
 15894 ;; *************** function ___fttol *****************
 15895 ;; Defined at:
 15896 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 15897 ;; Parameters:    Size  Location     Type
 15898 ;;  f1              3   43[BANK0 ] float 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;  lval            4   52[BANK0 ] unsigned long 
 15901 ;;  exp1            1   56[BANK0 ] unsigned char 
 15902 ;;  sign1           1   51[BANK0 ] unsigned char 
 15903 ;; Return value:  Size  Location     Type
 15904 ;;                  4   43[BANK0 ] long 
 15905 ;; Registers used:
 15906 ;;		wreg, status,2, status,0
 15907 ;; Tracked objects:
 15908 ;;		On entry : 0/0
 15909 ;;		On exit  : 0/0
 15910 ;;		Unchanged: 0/0
 15911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15913 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15915 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15916 ;;Total ram usage:       14 bytes
 15917 ;; Hardware stack levels used:    1
 15918 ;; Hardware stack levels required when called:    4
 15919 ;; This function calls:
 15920 ;;		Nothing
 15921 ;; This function is called by:
 15922 ;;		_getPercentValue
 15923 ;;		_setPercentValue
 15924 ;; This function uses a non-reentrant model
 15925 ;;
 15926                           
 15927                           
 15928                           ;psect for function ___fttol
 15929  1538                     ___fttol:	
 15930                           
 15931                           ;incstack = 0
 15932                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15933  1538  0020               	movlb	0	; select bank0
 15934  1539  084B               	movf	___fttol@f1,w
 15935  153A  00CF               	movwf	??___fttol
 15936  153B  084C               	movf	___fttol@f1+1,w
 15937  153C  00D0               	movwf	??___fttol+1
 15938  153D  084D               	movf	___fttol@f1+2,w
 15939  153E  00D1               	movwf	??___fttol+2
 15940  153F  1003               	clrc
 15941  1540  0D50               	rlf	??___fttol+1,w
 15942  1541  0D51               	rlf	??___fttol+2,w
 15943  1542  00D2               	movwf	??___fttol+3
 15944  1543  0852               	movf	??___fttol+3,w
 15945  1544  00D8               	movwf	___fttol@exp1
 15946  1545  08D8               	movf	___fttol@exp1,f
 15947  1546  1D03               	skipz
 15948  1547  2D51               	goto	l6309
 15949  1548  3000               	movlw	0
 15950  1549  00CE               	movwf	?___fttol+3
 15951  154A  3000               	movlw	0
 15952  154B  00CD               	movwf	?___fttol+2
 15953  154C  3000               	movlw	0
 15954  154D  00CC               	movwf	?___fttol+1
 15955  154E  3000               	movlw	0
 15956  154F  00CB               	movwf	?___fttol
 15957  1550  0008               	return
 15958  1551                     l6309:	
 15959  1551  084B               	movf	___fttol@f1,w
 15960  1552  00CF               	movwf	??___fttol
 15961  1553  084C               	movf	___fttol@f1+1,w
 15962  1554  00D0               	movwf	??___fttol+1
 15963  1555  084D               	movf	___fttol@f1+2,w
 15964  1556  00D1               	movwf	??___fttol+2
 15965  1557  3017               	movlw	23
 15966  1558                     u4635:	
 15967  1558  36D1               	lsrf	??___fttol+2,f
 15968  1559  0CD0               	rrf	??___fttol+1,f
 15969  155A  0CCF               	rrf	??___fttol,f
 15970  155B  0B89               	decfsz	9,f
 15971  155C  2D58               	goto	u4635
 15972  155D  084F               	movf	??___fttol,w
 15973  155E  00D2               	movwf	??___fttol+3
 15974  155F  0852               	movf	??___fttol+3,w
 15975  1560  00D3               	movwf	___fttol@sign1
 15976  1561  17CC               	bsf	___fttol@f1+1,7
 15977  1562  30FF               	movlw	255
 15978  1563  05CB               	andwf	___fttol@f1,f
 15979  1564  30FF               	movlw	255
 15980  1565  05CC               	andwf	___fttol@f1+1,f
 15981  1566  3000               	movlw	0
 15982  1567  05CD               	andwf	___fttol@f1+2,f
 15983  1568  084B               	movf	___fttol@f1,w
 15984  1569  00D4               	movwf	___fttol@lval
 15985  156A  084C               	movf	___fttol@f1+1,w
 15986  156B  00D5               	movwf	___fttol@lval+1
 15987  156C  084D               	movf	___fttol@f1+2,w
 15988  156D  00D6               	movwf	___fttol@lval+2
 15989  156E  01D7               	clrf	___fttol@lval+3
 15990  156F  308E               	movlw	142
 15991  1570  02D8               	subwf	___fttol@exp1,f
 15992  1571  1FD8               	btfss	___fttol@exp1,7
 15993  1572  2D8F               	goto	l6329
 15994  1573  0858               	movf	___fttol@exp1,w
 15995  1574  3A80               	xorlw	128
 15996  1575  3E8F               	addlw	143
 15997  1576  1803               	skipnc
 15998  1577  2D81               	goto	l6327
 15999  1578  3000               	movlw	0
 16000  1579  00CE               	movwf	?___fttol+3
 16001  157A  3000               	movlw	0
 16002  157B  00CD               	movwf	?___fttol+2
 16003  157C  3000               	movlw	0
 16004  157D  00CC               	movwf	?___fttol+1
 16005  157E  3000               	movlw	0
 16006  157F  00CB               	movwf	?___fttol
 16007  1580  0008               	return
 16008  1581                     l6327:	
 16009  1581  3001               	movlw	1
 16010  1582                     u4665:	
 16011  1582  36D7               	lsrf	___fttol@lval+3,f
 16012  1583  0CD6               	rrf	___fttol@lval+2,f
 16013  1584  0CD5               	rrf	___fttol@lval+1,f
 16014  1585  0CD4               	rrf	___fttol@lval,f
 16015  1586  0B89               	decfsz	9,f
 16016  1587  2D82               	goto	u4665
 16017  1588  3001               	movlw	1
 16018  1589  00CF               	movwf	??___fttol
 16019  158A  084F               	movf	??___fttol,w
 16020  158B  07D8               	addwf	___fttol@exp1,f
 16021  158C  1903               	btfsc	3,2
 16022  158D  2DA8               	goto	l6339
 16023  158E  2D81               	goto	l6327
 16024  158F                     l6329:	
 16025  158F  3018               	movlw	24
 16026  1590  0258               	subwf	___fttol@exp1,w
 16027  1591  1C03               	skipc
 16028  1592  2DA5               	goto	l6337
 16029  1593  3000               	movlw	0
 16030  1594  00CE               	movwf	?___fttol+3
 16031  1595  3000               	movlw	0
 16032  1596  00CD               	movwf	?___fttol+2
 16033  1597  3000               	movlw	0
 16034  1598  00CC               	movwf	?___fttol+1
 16035  1599  3000               	movlw	0
 16036  159A  00CB               	movwf	?___fttol
 16037  159B  0008               	return
 16038  159C                     l6335:	
 16039  159C  3001               	movlw	1
 16040  159D                     u4695:	
 16041  159D  35D4               	lslf	___fttol@lval,f
 16042  159E  0DD5               	rlf	___fttol@lval+1,f
 16043  159F  0DD6               	rlf	___fttol@lval+2,f
 16044  15A0  0DD7               	rlf	___fttol@lval+3,f
 16045  15A1  0B89               	decfsz	9,f
 16046  15A2  2D9D               	goto	u4695
 16047  15A3  3001               	movlw	1
 16048  15A4  02D8               	subwf	___fttol@exp1,f
 16049  15A5                     l6337:	
 16050  15A5  08D8               	movf	___fttol@exp1,f
 16051  15A6  1D03               	skipz
 16052  15A7  2D9C               	goto	l6335
 16053  15A8                     l6339:	
 16054  15A8  0853               	movf	___fttol@sign1,w
 16055  15A9  1903               	btfsc	3,2
 16056  15AA  2DB6               	goto	l6343
 16057  15AB  09D4               	comf	___fttol@lval,f
 16058  15AC  09D5               	comf	___fttol@lval+1,f
 16059  15AD  09D6               	comf	___fttol@lval+2,f
 16060  15AE  09D7               	comf	___fttol@lval+3,f
 16061  15AF  0AD4               	incf	___fttol@lval,f
 16062  15B0  1903               	skipnz
 16063  15B1  0AD5               	incf	___fttol@lval+1,f
 16064  15B2  1903               	skipnz
 16065  15B3  0AD6               	incf	___fttol@lval+2,f
 16066  15B4  1903               	skipnz
 16067  15B5  0AD7               	incf	___fttol@lval+3,f
 16068  15B6                     l6343:	
 16069  15B6  0857               	movf	___fttol@lval+3,w
 16070  15B7  00CE               	movwf	?___fttol+3
 16071  15B8  0856               	movf	___fttol@lval+2,w
 16072  15B9  00CD               	movwf	?___fttol+2
 16073  15BA  0855               	movf	___fttol@lval+1,w
 16074  15BB  00CC               	movwf	?___fttol+1
 16075  15BC  0854               	movf	___fttol@lval,w
 16076  15BD  00CB               	movwf	?___fttol
 16077  15BE  0008               	return
 16078  15BF                     __end_of___fttol:	
 16079                           
 16080                           	psect	text98
 16081  0A60                     __ptext98:	
 16082 ;; *************** function ___ftmul *****************
 16083 ;; Defined at:
 16084 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;  f1              3   14[BANK0 ] float 
 16087 ;;  f2              3   17[BANK0 ] float 
 16088 ;; Auto vars:     Size  Location     Type
 16089 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
 16090 ;;  sign            1   29[BANK0 ] unsigned char 
 16091 ;;  cntr            1   28[BANK0 ] unsigned char 
 16092 ;;  exp             1   24[BANK0 ] unsigned char 
 16093 ;; Return value:  Size  Location     Type
 16094 ;;                  3   14[BANK0 ] float 
 16095 ;; Registers used:
 16096 ;;		wreg, status,2, status,0, pclath, cstack
 16097 ;; Tracked objects:
 16098 ;;		On entry : 0/0
 16099 ;;		On exit  : 0/0
 16100 ;;		Unchanged: 0/0
 16101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16102 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16103 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16106 ;;Total ram usage:       16 bytes
 16107 ;; Hardware stack levels used:    1
 16108 ;; Hardware stack levels required when called:    5
 16109 ;; This function calls:
 16110 ;;		___ftpack
 16111 ;; This function is called by:
 16112 ;;		_getPercentValue
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           
 16117                           ;psect for function ___ftmul
 16118  0A60                     ___ftmul:	
 16119                           
 16120                           ;incstack = 0
 16121                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 16122  0A60  0020               	movlb	0	; select bank0
 16123  0A61  082E               	movf	___ftmul@f1,w
 16124  0A62  00B4               	movwf	??___ftmul
 16125  0A63  082F               	movf	___ftmul@f1+1,w
 16126  0A64  00B5               	movwf	??___ftmul+1
 16127  0A65  0830               	movf	___ftmul@f1+2,w
 16128  0A66  00B6               	movwf	??___ftmul+2
 16129  0A67  1003               	clrc
 16130  0A68  0D35               	rlf	??___ftmul+1,w
 16131  0A69  0D36               	rlf	??___ftmul+2,w
 16132  0A6A  00B7               	movwf	??___ftmul+3
 16133  0A6B  0837               	movf	??___ftmul+3,w
 16134  0A6C  00B8               	movwf	___ftmul@exp
 16135  0A6D  08B8               	movf	___ftmul@exp,f
 16136  0A6E  1D03               	skipz
 16137  0A6F  2A77               	goto	l6259
 16138  0A70  3000               	movlw	0
 16139  0A71  00AE               	movwf	?___ftmul
 16140  0A72  3000               	movlw	0
 16141  0A73  00AF               	movwf	?___ftmul+1
 16142  0A74  3000               	movlw	0
 16143  0A75  00B0               	movwf	?___ftmul+2
 16144  0A76  0008               	return
 16145  0A77                     l6259:	
 16146  0A77  0831               	movf	___ftmul@f2,w
 16147  0A78  00B4               	movwf	??___ftmul
 16148  0A79  0832               	movf	___ftmul@f2+1,w
 16149  0A7A  00B5               	movwf	??___ftmul+1
 16150  0A7B  0833               	movf	___ftmul@f2+2,w
 16151  0A7C  00B6               	movwf	??___ftmul+2
 16152  0A7D  1003               	clrc
 16153  0A7E  0D35               	rlf	??___ftmul+1,w
 16154  0A7F  0D36               	rlf	??___ftmul+2,w
 16155  0A80  00B7               	movwf	??___ftmul+3
 16156  0A81  0837               	movf	??___ftmul+3,w
 16157  0A82  00BD               	movwf	___ftmul@sign
 16158  0A83  08BD               	movf	___ftmul@sign,f
 16159  0A84  1D03               	skipz
 16160  0A85  2A8D               	goto	l6265
 16161  0A86  3000               	movlw	0
 16162  0A87  00AE               	movwf	?___ftmul
 16163  0A88  3000               	movlw	0
 16164  0A89  00AF               	movwf	?___ftmul+1
 16165  0A8A  3000               	movlw	0
 16166  0A8B  00B0               	movwf	?___ftmul+2
 16167  0A8C  0008               	return
 16168  0A8D                     l6265:	
 16169  0A8D  083D               	movf	___ftmul@sign,w
 16170  0A8E  3E7B               	addlw	123
 16171  0A8F  00B4               	movwf	??___ftmul
 16172  0A90  0834               	movf	??___ftmul,w
 16173  0A91  07B8               	addwf	___ftmul@exp,f
 16174  0A92  082E               	movf	___ftmul@f1,w
 16175  0A93  00B4               	movwf	??___ftmul
 16176  0A94  082F               	movf	___ftmul@f1+1,w
 16177  0A95  00B5               	movwf	??___ftmul+1
 16178  0A96  0830               	movf	___ftmul@f1+2,w
 16179  0A97  00B6               	movwf	??___ftmul+2
 16180  0A98  3010               	movlw	16
 16181  0A99                     u4525:	
 16182  0A99  36B6               	lsrf	??___ftmul+2,f
 16183  0A9A  0CB5               	rrf	??___ftmul+1,f
 16184  0A9B  0CB4               	rrf	??___ftmul,f
 16185  0A9C  0B89               	decfsz	9,f
 16186  0A9D  2A99               	goto	u4525
 16187  0A9E  0834               	movf	??___ftmul,w
 16188  0A9F  00B7               	movwf	??___ftmul+3
 16189  0AA0  0837               	movf	??___ftmul+3,w
 16190  0AA1  00BD               	movwf	___ftmul@sign
 16191  0AA2  0831               	movf	___ftmul@f2,w
 16192  0AA3  00B4               	movwf	??___ftmul
 16193  0AA4  0832               	movf	___ftmul@f2+1,w
 16194  0AA5  00B5               	movwf	??___ftmul+1
 16195  0AA6  0833               	movf	___ftmul@f2+2,w
 16196  0AA7  00B6               	movwf	??___ftmul+2
 16197  0AA8  3010               	movlw	16
 16198  0AA9                     u4535:	
 16199  0AA9  36B6               	lsrf	??___ftmul+2,f
 16200  0AAA  0CB5               	rrf	??___ftmul+1,f
 16201  0AAB  0CB4               	rrf	??___ftmul,f
 16202  0AAC  0B89               	decfsz	9,f
 16203  0AAD  2AA9               	goto	u4535
 16204  0AAE  0834               	movf	??___ftmul,w
 16205  0AAF  00B7               	movwf	??___ftmul+3
 16206  0AB0  0837               	movf	??___ftmul+3,w
 16207  0AB1  06BD               	xorwf	___ftmul@sign,f
 16208  0AB2  3080               	movlw	128
 16209  0AB3  00B4               	movwf	??___ftmul
 16210  0AB4  0834               	movf	??___ftmul,w
 16211  0AB5  05BD               	andwf	___ftmul@sign,f
 16212  0AB6  17AF               	bsf	___ftmul@f1+1,7
 16213  0AB7  17B2               	bsf	___ftmul@f2+1,7
 16214  0AB8  30FF               	movlw	255
 16215  0AB9  05B1               	andwf	___ftmul@f2,f
 16216  0ABA  30FF               	movlw	255
 16217  0ABB  05B2               	andwf	___ftmul@f2+1,f
 16218  0ABC  3000               	movlw	0
 16219  0ABD  05B3               	andwf	___ftmul@f2+2,f
 16220  0ABE  3000               	movlw	0
 16221  0ABF  00B9               	movwf	___ftmul@f3_as_product
 16222  0AC0  3000               	movlw	0
 16223  0AC1  00BA               	movwf	___ftmul@f3_as_product+1
 16224  0AC2  3000               	movlw	0
 16225  0AC3  00BB               	movwf	___ftmul@f3_as_product+2
 16226  0AC4  3007               	movlw	7
 16227  0AC5  00B4               	movwf	??___ftmul
 16228  0AC6  0834               	movf	??___ftmul,w
 16229  0AC7  00BC               	movwf	___ftmul@cntr
 16230  0AC8                     l6277:	
 16231  0AC8  1C2E               	btfss	___ftmul@f1,0
 16232  0AC9  2AD0               	goto	l6281
 16233  0ACA  0831               	movf	___ftmul@f2,w
 16234  0ACB  07B9               	addwf	___ftmul@f3_as_product,f
 16235  0ACC  0832               	movf	___ftmul@f2+1,w
 16236  0ACD  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 16237  0ACE  0833               	movf	___ftmul@f2+2,w
 16238  0ACF  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 16239  0AD0                     l6281:	
 16240  0AD0  3001               	movlw	1
 16241  0AD1                     u4555:	
 16242  0AD1  36B0               	lsrf	___ftmul@f1+2,f
 16243  0AD2  0CAF               	rrf	___ftmul@f1+1,f
 16244  0AD3  0CAE               	rrf	___ftmul@f1,f
 16245  0AD4  0B89               	decfsz	9,f
 16246  0AD5  2AD1               	goto	u4555
 16247  0AD6  3001               	movlw	1
 16248  0AD7                     u4565:	
 16249  0AD7  35B1               	lslf	___ftmul@f2,f
 16250  0AD8  0DB2               	rlf	___ftmul@f2+1,f
 16251  0AD9  0DB3               	rlf	___ftmul@f2+2,f
 16252  0ADA  0B89               	decfsz	9,f
 16253  0ADB  2AD7               	goto	u4565
 16254  0ADC  3001               	movlw	1
 16255  0ADD  02BC               	subwf	___ftmul@cntr,f
 16256  0ADE  1D03               	btfss	3,2
 16257  0ADF  2AC8               	goto	l6277
 16258  0AE0  3009               	movlw	9
 16259  0AE1  00B4               	movwf	??___ftmul
 16260  0AE2  0834               	movf	??___ftmul,w
 16261  0AE3  00BC               	movwf	___ftmul@cntr
 16262  0AE4                     l6289:	
 16263  0AE4  1C2E               	btfss	___ftmul@f1,0
 16264  0AE5  2AEC               	goto	l6293
 16265  0AE6  0831               	movf	___ftmul@f2,w
 16266  0AE7  07B9               	addwf	___ftmul@f3_as_product,f
 16267  0AE8  0832               	movf	___ftmul@f2+1,w
 16268  0AE9  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 16269  0AEA  0833               	movf	___ftmul@f2+2,w
 16270  0AEB  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 16271  0AEC                     l6293:	
 16272  0AEC  3001               	movlw	1
 16273  0AED                     u4595:	
 16274  0AED  36B0               	lsrf	___ftmul@f1+2,f
 16275  0AEE  0CAF               	rrf	___ftmul@f1+1,f
 16276  0AEF  0CAE               	rrf	___ftmul@f1,f
 16277  0AF0  0B89               	decfsz	9,f
 16278  0AF1  2AED               	goto	u4595
 16279  0AF2  3001               	movlw	1
 16280  0AF3                     u4605:	
 16281  0AF3  36BB               	lsrf	___ftmul@f3_as_product+2,f
 16282  0AF4  0CBA               	rrf	___ftmul@f3_as_product+1,f
 16283  0AF5  0CB9               	rrf	___ftmul@f3_as_product,f
 16284  0AF6  0B89               	decfsz	9,f
 16285  0AF7  2AF3               	goto	u4605
 16286  0AF8  3001               	movlw	1
 16287  0AF9  02BC               	subwf	___ftmul@cntr,f
 16288  0AFA  1D03               	btfss	3,2
 16289  0AFB  2AE4               	goto	l6289
 16290  0AFC  0839               	movf	___ftmul@f3_as_product,w
 16291  0AFD  00A0               	movwf	___ftpack@arg
 16292  0AFE  083A               	movf	___ftmul@f3_as_product+1,w
 16293  0AFF  00A1               	movwf	___ftpack@arg+1
 16294  0B00  083B               	movf	___ftmul@f3_as_product+2,w
 16295  0B01  00A2               	movwf	___ftpack@arg+2
 16296  0B02  0838               	movf	___ftmul@exp,w
 16297  0B03  00B4               	movwf	??___ftmul
 16298  0B04  0834               	movf	??___ftmul,w
 16299  0B05  00A3               	movwf	___ftpack@exp
 16300  0B06  083D               	movf	___ftmul@sign,w
 16301  0B07  00B5               	movwf	??___ftmul+1
 16302  0B08  0835               	movf	??___ftmul+1,w
 16303  0B09  00A4               	movwf	___ftpack@sign
 16304  0B0A  3190  20E1         	fcall	___ftpack
 16305  0B0C  0020               	movlb	0	; select bank0
 16306  0B0D  0820               	movf	?___ftpack,w
 16307  0B0E  00AE               	movwf	?___ftmul
 16308  0B0F  0821               	movf	?___ftpack+1,w
 16309  0B10  00AF               	movwf	?___ftmul+1
 16310  0B11  0822               	movf	?___ftpack+2,w
 16311  0B12  00B0               	movwf	?___ftmul+2
 16312  0B13  0008               	return
 16313  0B14                     __end_of___ftmul:	
 16314                           
 16315                           	psect	text99
 16316  09B7                     __ptext99:	
 16317 ;; *************** function ___ftdiv *****************
 16318 ;; Defined at:
 16319 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 16320 ;; Parameters:    Size  Location     Type
 16321 ;;  f2              3   14[BANK0 ] float 
 16322 ;;  f1              3   17[BANK0 ] float 
 16323 ;; Auto vars:     Size  Location     Type
 16324 ;;  f3              3   25[BANK0 ] float 
 16325 ;;  sign            1   29[BANK0 ] unsigned char 
 16326 ;;  exp             1   28[BANK0 ] unsigned char 
 16327 ;;  cntr            1   24[BANK0 ] unsigned char 
 16328 ;; Return value:  Size  Location     Type
 16329 ;;                  3   14[BANK0 ] float 
 16330 ;; Registers used:
 16331 ;;		wreg, status,2, status,0, pclath, cstack
 16332 ;; Tracked objects:
 16333 ;;		On entry : 0/0
 16334 ;;		On exit  : 0/0
 16335 ;;		Unchanged: 0/0
 16336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16337 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16338 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16339 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16340 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;Total ram usage:       16 bytes
 16342 ;; Hardware stack levels used:    1
 16343 ;; Hardware stack levels required when called:    5
 16344 ;; This function calls:
 16345 ;;		___ftpack
 16346 ;; This function is called by:
 16347 ;;		_getPercentValue
 16348 ;;		_setPercentValue
 16349 ;; This function uses a non-reentrant model
 16350 ;;
 16351                           
 16352                           
 16353                           ;psect for function ___ftdiv
 16354  09B7                     ___ftdiv:	
 16355                           
 16356                           ;incstack = 0
 16357                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 16358  09B7  0020               	movlb	0	; select bank0
 16359  09B8  0831               	movf	___ftdiv@f1,w
 16360  09B9  00B4               	movwf	??___ftdiv
 16361  09BA  0832               	movf	___ftdiv@f1+1,w
 16362  09BB  00B5               	movwf	??___ftdiv+1
 16363  09BC  0833               	movf	___ftdiv@f1+2,w
 16364  09BD  00B6               	movwf	??___ftdiv+2
 16365  09BE  1003               	clrc
 16366  09BF  0D35               	rlf	??___ftdiv+1,w
 16367  09C0  0D36               	rlf	??___ftdiv+2,w
 16368  09C1  00B7               	movwf	??___ftdiv+3
 16369  09C2  0837               	movf	??___ftdiv+3,w
 16370  09C3  00BC               	movwf	___ftdiv@exp
 16371  09C4  08BC               	movf	___ftdiv@exp,f
 16372  09C5  1D03               	skipz
 16373  09C6  29CE               	goto	l6217
 16374  09C7  3000               	movlw	0
 16375  09C8  00AE               	movwf	?___ftdiv
 16376  09C9  3000               	movlw	0
 16377  09CA  00AF               	movwf	?___ftdiv+1
 16378  09CB  3000               	movlw	0
 16379  09CC  00B0               	movwf	?___ftdiv+2
 16380  09CD  0008               	return
 16381  09CE                     l6217:	
 16382  09CE  082E               	movf	___ftdiv@f2,w
 16383  09CF  00B4               	movwf	??___ftdiv
 16384  09D0  082F               	movf	___ftdiv@f2+1,w
 16385  09D1  00B5               	movwf	??___ftdiv+1
 16386  09D2  0830               	movf	___ftdiv@f2+2,w
 16387  09D3  00B6               	movwf	??___ftdiv+2
 16388  09D4  1003               	clrc
 16389  09D5  0D35               	rlf	??___ftdiv+1,w
 16390  09D6  0D36               	rlf	??___ftdiv+2,w
 16391  09D7  00B7               	movwf	??___ftdiv+3
 16392  09D8  0837               	movf	??___ftdiv+3,w
 16393  09D9  00BD               	movwf	___ftdiv@sign
 16394  09DA  08BD               	movf	___ftdiv@sign,f
 16395  09DB  1D03               	skipz
 16396  09DC  29E4               	goto	l6223
 16397  09DD  3000               	movlw	0
 16398  09DE  00AE               	movwf	?___ftdiv
 16399  09DF  3000               	movlw	0
 16400  09E0  00AF               	movwf	?___ftdiv+1
 16401  09E1  3000               	movlw	0
 16402  09E2  00B0               	movwf	?___ftdiv+2
 16403  09E3  0008               	return
 16404  09E4                     l6223:	
 16405  09E4  3000               	movlw	0
 16406  09E5  00B9               	movwf	___ftdiv@f3
 16407  09E6  3000               	movlw	0
 16408  09E7  00BA               	movwf	___ftdiv@f3+1
 16409  09E8  3000               	movlw	0
 16410  09E9  00BB               	movwf	___ftdiv@f3+2
 16411  09EA  3089               	movlw	137
 16412  09EB  073D               	addwf	___ftdiv@sign,w
 16413  09EC  00B4               	movwf	??___ftdiv
 16414  09ED  0834               	movf	??___ftdiv,w
 16415  09EE  02BC               	subwf	___ftdiv@exp,f
 16416  09EF  0831               	movf	___ftdiv@f1,w
 16417  09F0  00B4               	movwf	??___ftdiv
 16418  09F1  0832               	movf	___ftdiv@f1+1,w
 16419  09F2  00B5               	movwf	??___ftdiv+1
 16420  09F3  0833               	movf	___ftdiv@f1+2,w
 16421  09F4  00B6               	movwf	??___ftdiv+2
 16422  09F5  3010               	movlw	16
 16423  09F6                     u4445:	
 16424  09F6  36B6               	lsrf	??___ftdiv+2,f
 16425  09F7  0CB5               	rrf	??___ftdiv+1,f
 16426  09F8  0CB4               	rrf	??___ftdiv,f
 16427  09F9  0B89               	decfsz	9,f
 16428  09FA  29F6               	goto	u4445
 16429  09FB  0834               	movf	??___ftdiv,w
 16430  09FC  00B7               	movwf	??___ftdiv+3
 16431  09FD  0837               	movf	??___ftdiv+3,w
 16432  09FE  00BD               	movwf	___ftdiv@sign
 16433  09FF  082E               	movf	___ftdiv@f2,w
 16434  0A00  00B4               	movwf	??___ftdiv
 16435  0A01  082F               	movf	___ftdiv@f2+1,w
 16436  0A02  00B5               	movwf	??___ftdiv+1
 16437  0A03  0830               	movf	___ftdiv@f2+2,w
 16438  0A04  00B6               	movwf	??___ftdiv+2
 16439  0A05  3010               	movlw	16
 16440  0A06                     u4455:	
 16441  0A06  36B6               	lsrf	??___ftdiv+2,f
 16442  0A07  0CB5               	rrf	??___ftdiv+1,f
 16443  0A08  0CB4               	rrf	??___ftdiv,f
 16444  0A09  0B89               	decfsz	9,f
 16445  0A0A  2A06               	goto	u4455
 16446  0A0B  0834               	movf	??___ftdiv,w
 16447  0A0C  00B7               	movwf	??___ftdiv+3
 16448  0A0D  0837               	movf	??___ftdiv+3,w
 16449  0A0E  06BD               	xorwf	___ftdiv@sign,f
 16450  0A0F  3080               	movlw	128
 16451  0A10  00B4               	movwf	??___ftdiv
 16452  0A11  0834               	movf	??___ftdiv,w
 16453  0A12  05BD               	andwf	___ftdiv@sign,f
 16454  0A13  17B2               	bsf	___ftdiv@f1+1,7
 16455  0A14  30FF               	movlw	255
 16456  0A15  05B1               	andwf	___ftdiv@f1,f
 16457  0A16  30FF               	movlw	255
 16458  0A17  05B2               	andwf	___ftdiv@f1+1,f
 16459  0A18  3000               	movlw	0
 16460  0A19  05B3               	andwf	___ftdiv@f1+2,f
 16461  0A1A  17AF               	bsf	___ftdiv@f2+1,7
 16462  0A1B  30FF               	movlw	255
 16463  0A1C  05AE               	andwf	___ftdiv@f2,f
 16464  0A1D  30FF               	movlw	255
 16465  0A1E  05AF               	andwf	___ftdiv@f2+1,f
 16466  0A1F  3000               	movlw	0
 16467  0A20  05B0               	andwf	___ftdiv@f2+2,f
 16468  0A21  3018               	movlw	24
 16469  0A22  00B4               	movwf	??___ftdiv
 16470  0A23  0834               	movf	??___ftdiv,w
 16471  0A24  00B8               	movwf	___ftdiv@cntr
 16472  0A25                     l6237:	
 16473  0A25  3001               	movlw	1
 16474  0A26                     u4465:	
 16475  0A26  35B9               	lslf	___ftdiv@f3,f
 16476  0A27  0DBA               	rlf	___ftdiv@f3+1,f
 16477  0A28  0DBB               	rlf	___ftdiv@f3+2,f
 16478  0A29  0B89               	decfsz	9,f
 16479  0A2A  2A26               	goto	u4465
 16480  0A2B  0830               	movf	___ftdiv@f2+2,w
 16481  0A2C  0233               	subwf	___ftdiv@f1+2,w
 16482  0A2D  1D03               	skipz
 16483  0A2E  2A35               	goto	u4475
 16484  0A2F  082F               	movf	___ftdiv@f2+1,w
 16485  0A30  0232               	subwf	___ftdiv@f1+1,w
 16486  0A31  1D03               	skipz
 16487  0A32  2A35               	goto	u4475
 16488  0A33  082E               	movf	___ftdiv@f2,w
 16489  0A34  0231               	subwf	___ftdiv@f1,w
 16490  0A35                     u4475:	
 16491  0A35  1C03               	skipc
 16492  0A36  2A3E               	goto	l6245
 16493  0A37  082E               	movf	___ftdiv@f2,w
 16494  0A38  02B1               	subwf	___ftdiv@f1,f
 16495  0A39  082F               	movf	___ftdiv@f2+1,w
 16496  0A3A  3BB2               	subwfb	___ftdiv@f1+1,f
 16497  0A3B  0830               	movf	___ftdiv@f2+2,w
 16498  0A3C  3BB3               	subwfb	___ftdiv@f1+2,f
 16499  0A3D  1439               	bsf	___ftdiv@f3,0
 16500  0A3E                     l6245:	
 16501  0A3E  3001               	movlw	1
 16502  0A3F                     u4485:	
 16503  0A3F  35B1               	lslf	___ftdiv@f1,f
 16504  0A40  0DB2               	rlf	___ftdiv@f1+1,f
 16505  0A41  0DB3               	rlf	___ftdiv@f1+2,f
 16506  0A42  0B89               	decfsz	9,f
 16507  0A43  2A3F               	goto	u4485
 16508  0A44  3001               	movlw	1
 16509  0A45  02B8               	subwf	___ftdiv@cntr,f
 16510  0A46  1D03               	btfss	3,2
 16511  0A47  2A25               	goto	l6237
 16512  0A48  0839               	movf	___ftdiv@f3,w
 16513  0A49  00A0               	movwf	___ftpack@arg
 16514  0A4A  083A               	movf	___ftdiv@f3+1,w
 16515  0A4B  00A1               	movwf	___ftpack@arg+1
 16516  0A4C  083B               	movf	___ftdiv@f3+2,w
 16517  0A4D  00A2               	movwf	___ftpack@arg+2
 16518  0A4E  083C               	movf	___ftdiv@exp,w
 16519  0A4F  00B4               	movwf	??___ftdiv
 16520  0A50  0834               	movf	??___ftdiv,w
 16521  0A51  00A3               	movwf	___ftpack@exp
 16522  0A52  083D               	movf	___ftdiv@sign,w
 16523  0A53  00B5               	movwf	??___ftdiv+1
 16524  0A54  0835               	movf	??___ftdiv+1,w
 16525  0A55  00A4               	movwf	___ftpack@sign
 16526  0A56  3190  20E1         	fcall	___ftpack
 16527  0A58  0020               	movlb	0	; select bank0
 16528  0A59  0820               	movf	?___ftpack,w
 16529  0A5A  00AE               	movwf	?___ftdiv
 16530  0A5B  0821               	movf	?___ftpack+1,w
 16531  0A5C  00AF               	movwf	?___ftdiv+1
 16532  0A5D  0822               	movf	?___ftpack+2,w
 16533  0A5E  00B0               	movwf	?___ftdiv+2
 16534  0A5F  0008               	return
 16535  0A60                     __end_of___ftdiv:	
 16536                           
 16537                           	psect	text100
 16538  0BDD                     __ptext100:	
 16539 ;; *************** function ___ftadd *****************
 16540 ;; Defined at:
 16541 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 16542 ;; Parameters:    Size  Location     Type
 16543 ;;  f1              3   30[BANK0 ] float 
 16544 ;;  f2              3   33[BANK0 ] float 
 16545 ;; Auto vars:     Size  Location     Type
 16546 ;;  exp1            1   42[BANK0 ] unsigned char 
 16547 ;;  exp2            1   41[BANK0 ] unsigned char 
 16548 ;;  sign            1   40[BANK0 ] unsigned char 
 16549 ;; Return value:  Size  Location     Type
 16550 ;;                  3   30[BANK0 ] float 
 16551 ;; Registers used:
 16552 ;;		wreg, status,2, status,0, pclath, cstack
 16553 ;; Tracked objects:
 16554 ;;		On entry : 0/0
 16555 ;;		On exit  : 0/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16558 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16559 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16560 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16561 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;Total ram usage:       13 bytes
 16563 ;; Hardware stack levels used:    1
 16564 ;; Hardware stack levels required when called:    5
 16565 ;; This function calls:
 16566 ;;		___ftpack
 16567 ;; This function is called by:
 16568 ;;		_getPercentValue
 16569 ;; This function uses a non-reentrant model
 16570 ;;
 16571                           
 16572                           
 16573                           ;psect for function ___ftadd
 16574  0BDD                     ___ftadd:	
 16575                           
 16576                           ;incstack = 0
 16577                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 16578  0BDD  0020               	movlb	0	; select bank0
 16579  0BDE  083E               	movf	___ftadd@f1,w
 16580  0BDF  00C4               	movwf	??___ftadd
 16581  0BE0  083F               	movf	___ftadd@f1+1,w
 16582  0BE1  00C5               	movwf	??___ftadd+1
 16583  0BE2  0840               	movf	___ftadd@f1+2,w
 16584  0BE3  00C6               	movwf	??___ftadd+2
 16585  0BE4  1003               	clrc
 16586  0BE5  0D45               	rlf	??___ftadd+1,w
 16587  0BE6  0D46               	rlf	??___ftadd+2,w
 16588  0BE7  00C7               	movwf	??___ftadd+3
 16589  0BE8  0847               	movf	??___ftadd+3,w
 16590  0BE9  00CA               	movwf	___ftadd@exp1
 16591  0BEA  0841               	movf	___ftadd@f2,w
 16592  0BEB  00C4               	movwf	??___ftadd
 16593  0BEC  0842               	movf	___ftadd@f2+1,w
 16594  0BED  00C5               	movwf	??___ftadd+1
 16595  0BEE  0843               	movf	___ftadd@f2+2,w
 16596  0BEF  00C6               	movwf	??___ftadd+2
 16597  0BF0  1003               	clrc
 16598  0BF1  0D45               	rlf	??___ftadd+1,w
 16599  0BF2  0D46               	rlf	??___ftadd+2,w
 16600  0BF3  00C7               	movwf	??___ftadd+3
 16601  0BF4  0847               	movf	??___ftadd+3,w
 16602  0BF5  00C9               	movwf	___ftadd@exp2
 16603  0BF6  084A               	movf	___ftadd@exp1,w
 16604  0BF7  1903               	btfsc	3,2
 16605  0BF8  2C05               	goto	l6147
 16606  0BF9  0849               	movf	___ftadd@exp2,w
 16607  0BFA  024A               	subwf	___ftadd@exp1,w
 16608  0BFB  1803               	skipnc
 16609  0BFC  2C0C               	goto	l6151
 16610  0BFD  034A               	decf	___ftadd@exp1,w
 16611  0BFE  3AFF               	xorlw	255
 16612  0BFF  0749               	addwf	___ftadd@exp2,w
 16613  0C00  00C4               	movwf	??___ftadd
 16614  0C01  3019               	movlw	25
 16615  0C02  0244               	subwf	??___ftadd,w
 16616  0C03  1C03               	skipc
 16617  0C04  2C0C               	goto	l6151
 16618  0C05                     l6147:	
 16619  0C05  0841               	movf	___ftadd@f2,w
 16620  0C06  00BE               	movwf	?___ftadd
 16621  0C07  0842               	movf	___ftadd@f2+1,w
 16622  0C08  00BF               	movwf	?___ftadd+1
 16623  0C09  0843               	movf	___ftadd@f2+2,w
 16624  0C0A  00C0               	movwf	?___ftadd+2
 16625  0C0B  0008               	return
 16626  0C0C                     l6151:	
 16627  0C0C  0849               	movf	___ftadd@exp2,w
 16628  0C0D  1903               	btfsc	3,2
 16629  0C0E  0008               	return
 16630  0C0F  084A               	movf	___ftadd@exp1,w
 16631  0C10  0249               	subwf	___ftadd@exp2,w
 16632  0C11  1803               	skipnc
 16633  0C12  2C1B               	goto	l6157
 16634  0C13  0349               	decf	___ftadd@exp2,w
 16635  0C14  3AFF               	xorlw	255
 16636  0C15  074A               	addwf	___ftadd@exp1,w
 16637  0C16  00C4               	movwf	??___ftadd
 16638  0C17  3019               	movlw	25
 16639  0C18  0244               	subwf	??___ftadd,w
 16640  0C19  1803               	btfsc	3,0
 16641  0C1A  0008               	return
 16642  0C1B                     l6157:	
 16643  0C1B  3006               	movlw	6
 16644  0C1C  00C4               	movwf	??___ftadd
 16645  0C1D  0844               	movf	??___ftadd,w
 16646  0C1E  00C8               	movwf	___ftadd@sign
 16647  0C1F  1BC0               	btfsc	___ftadd@f1+2,7
 16648  0C20  17C8               	bsf	___ftadd@sign,7
 16649  0C21  1BC3               	btfsc	___ftadd@f2+2,7
 16650  0C22  1748               	bsf	___ftadd@sign,6
 16651  0C23  17BF               	bsf	___ftadd@f1+1,7
 16652  0C24  30FF               	movlw	255
 16653  0C25  05BE               	andwf	___ftadd@f1,f
 16654  0C26  30FF               	movlw	255
 16655  0C27  05BF               	andwf	___ftadd@f1+1,f
 16656  0C28  3000               	movlw	0
 16657  0C29  05C0               	andwf	___ftadd@f1+2,f
 16658  0C2A  17C2               	bsf	___ftadd@f2+1,7
 16659  0C2B  30FF               	movlw	255
 16660  0C2C  05C1               	andwf	___ftadd@f2,f
 16661  0C2D  30FF               	movlw	255
 16662  0C2E  05C2               	andwf	___ftadd@f2+1,f
 16663  0C2F  3000               	movlw	0
 16664  0C30  05C3               	andwf	___ftadd@f2+2,f
 16665  0C31  0849               	movf	___ftadd@exp2,w
 16666  0C32  024A               	subwf	___ftadd@exp1,w
 16667  0C33  1803               	skipnc
 16668  0C34  2C57               	goto	l6179
 16669  0C35                     l6169:	
 16670  0C35  3001               	movlw	1
 16671  0C36                     u4285:	
 16672  0C36  35C1               	lslf	___ftadd@f2,f
 16673  0C37  0DC2               	rlf	___ftadd@f2+1,f
 16674  0C38  0DC3               	rlf	___ftadd@f2+2,f
 16675  0C39  0B89               	decfsz	9,f
 16676  0C3A  2C36               	goto	u4285
 16677  0C3B  3001               	movlw	1
 16678  0C3C  02C9               	subwf	___ftadd@exp2,f
 16679  0C3D  0849               	movf	___ftadd@exp2,w
 16680  0C3E  064A               	xorwf	___ftadd@exp1,w
 16681  0C3F  1903               	skipnz
 16682  0C40  2C52               	goto	l6177
 16683  0C41  3001               	movlw	1
 16684  0C42  02C8               	subwf	___ftadd@sign,f
 16685  0C43  0848               	movf	___ftadd@sign,w
 16686  0C44  3907               	andlw	7
 16687  0C45  1903               	btfsc	3,2
 16688  0C46  2C52               	goto	l6177
 16689  0C47  2C35               	goto	l6169
 16690  0C48                     l6175:	
 16691  0C48  3001               	movlw	1
 16692  0C49                     u4315:	
 16693  0C49  36C0               	lsrf	___ftadd@f1+2,f
 16694  0C4A  0CBF               	rrf	___ftadd@f1+1,f
 16695  0C4B  0CBE               	rrf	___ftadd@f1,f
 16696  0C4C  0B89               	decfsz	9,f
 16697  0C4D  2C49               	goto	u4315
 16698  0C4E  3001               	movlw	1
 16699  0C4F  00C4               	movwf	??___ftadd
 16700  0C50  0844               	movf	??___ftadd,w
 16701  0C51  07CA               	addwf	___ftadd@exp1,f
 16702  0C52                     l6177:	
 16703  0C52  084A               	movf	___ftadd@exp1,w
 16704  0C53  0649               	xorwf	___ftadd@exp2,w
 16705  0C54  1903               	btfsc	3,2
 16706  0C55  2C7C               	goto	l3424
 16707  0C56  2C48               	goto	l6175
 16708  0C57                     l6179:	
 16709  0C57  084A               	movf	___ftadd@exp1,w
 16710  0C58  0249               	subwf	___ftadd@exp2,w
 16711  0C59  1803               	skipnc
 16712  0C5A  2C7C               	goto	l3424
 16713  0C5B                     l6181:	
 16714  0C5B  3001               	movlw	1
 16715  0C5C                     u4345:	
 16716  0C5C  35BE               	lslf	___ftadd@f1,f
 16717  0C5D  0DBF               	rlf	___ftadd@f1+1,f
 16718  0C5E  0DC0               	rlf	___ftadd@f1+2,f
 16719  0C5F  0B89               	decfsz	9,f
 16720  0C60  2C5C               	goto	u4345
 16721  0C61  3001               	movlw	1
 16722  0C62  02CA               	subwf	___ftadd@exp1,f
 16723  0C63  0849               	movf	___ftadd@exp2,w
 16724  0C64  064A               	xorwf	___ftadd@exp1,w
 16725  0C65  1903               	skipnz
 16726  0C66  2C78               	goto	l6189
 16727  0C67  3001               	movlw	1
 16728  0C68  02C8               	subwf	___ftadd@sign,f
 16729  0C69  0848               	movf	___ftadd@sign,w
 16730  0C6A  3907               	andlw	7
 16731  0C6B  1903               	btfsc	3,2
 16732  0C6C  2C78               	goto	l6189
 16733  0C6D  2C5B               	goto	l6181
 16734  0C6E                     l6187:	
 16735  0C6E  3001               	movlw	1
 16736  0C6F                     u4375:	
 16737  0C6F  36C3               	lsrf	___ftadd@f2+2,f
 16738  0C70  0CC2               	rrf	___ftadd@f2+1,f
 16739  0C71  0CC1               	rrf	___ftadd@f2,f
 16740  0C72  0B89               	decfsz	9,f
 16741  0C73  2C6F               	goto	u4375
 16742  0C74  3001               	movlw	1
 16743  0C75  00C4               	movwf	??___ftadd
 16744  0C76  0844               	movf	??___ftadd,w
 16745  0C77  07C9               	addwf	___ftadd@exp2,f
 16746  0C78                     l6189:	
 16747  0C78  084A               	movf	___ftadd@exp1,w
 16748  0C79  0649               	xorwf	___ftadd@exp2,w
 16749  0C7A  1D03               	skipz
 16750  0C7B  2C6E               	goto	l6187
 16751  0C7C                     l3424:	
 16752  0C7C  1FC8               	btfss	___ftadd@sign,7
 16753  0C7D  2C8E               	goto	l6193
 16754  0C7E  30FF               	movlw	255
 16755  0C7F  06BE               	xorwf	___ftadd@f1,f
 16756  0C80  30FF               	movlw	255
 16757  0C81  06BF               	xorwf	___ftadd@f1+1,f
 16758  0C82  30FF               	movlw	255
 16759  0C83  06C0               	xorwf	___ftadd@f1+2,f
 16760  0C84  3001               	movlw	1
 16761  0C85  07BE               	addwf	___ftadd@f1,f
 16762  0C86  3000               	movlw	0
 16763  0C87  1803               	skipnc
 16764  0C88  3001               	movlw	1
 16765  0C89  07BF               	addwf	___ftadd@f1+1,f
 16766  0C8A  3000               	movlw	0
 16767  0C8B  1803               	skipnc
 16768  0C8C  3001               	movlw	1
 16769  0C8D  07C0               	addwf	___ftadd@f1+2,f
 16770  0C8E                     l6193:	
 16771  0C8E  1F48               	btfss	___ftadd@sign,6
 16772  0C8F  2CA0               	goto	l6197
 16773  0C90  30FF               	movlw	255
 16774  0C91  06C1               	xorwf	___ftadd@f2,f
 16775  0C92  30FF               	movlw	255
 16776  0C93  06C2               	xorwf	___ftadd@f2+1,f
 16777  0C94  30FF               	movlw	255
 16778  0C95  06C3               	xorwf	___ftadd@f2+2,f
 16779  0C96  3001               	movlw	1
 16780  0C97  07C1               	addwf	___ftadd@f2,f
 16781  0C98  3000               	movlw	0
 16782  0C99  1803               	skipnc
 16783  0C9A  3001               	movlw	1
 16784  0C9B  07C2               	addwf	___ftadd@f2+1,f
 16785  0C9C  3000               	movlw	0
 16786  0C9D  1803               	skipnc
 16787  0C9E  3001               	movlw	1
 16788  0C9F  07C3               	addwf	___ftadd@f2+2,f
 16789  0CA0                     l6197:	
 16790  0CA0  01C8               	clrf	___ftadd@sign
 16791  0CA1  083E               	movf	___ftadd@f1,w
 16792  0CA2  07C1               	addwf	___ftadd@f2,f
 16793  0CA3  083F               	movf	___ftadd@f1+1,w
 16794  0CA4  3DC2               	addwfc	___ftadd@f2+1,f
 16795  0CA5  0840               	movf	___ftadd@f1+2,w
 16796  0CA6  3DC3               	addwfc	___ftadd@f2+2,f
 16797  0CA7  1FC3               	btfss	___ftadd@f2+2,7
 16798  0CA8  2CBB               	goto	l6207
 16799  0CA9  30FF               	movlw	255
 16800  0CAA  06C1               	xorwf	___ftadd@f2,f
 16801  0CAB  30FF               	movlw	255
 16802  0CAC  06C2               	xorwf	___ftadd@f2+1,f
 16803  0CAD  30FF               	movlw	255
 16804  0CAE  06C3               	xorwf	___ftadd@f2+2,f
 16805  0CAF  3001               	movlw	1
 16806  0CB0  07C1               	addwf	___ftadd@f2,f
 16807  0CB1  3000               	movlw	0
 16808  0CB2  1803               	skipnc
 16809  0CB3  3001               	movlw	1
 16810  0CB4  07C2               	addwf	___ftadd@f2+1,f
 16811  0CB5  3000               	movlw	0
 16812  0CB6  1803               	skipnc
 16813  0CB7  3001               	movlw	1
 16814  0CB8  07C3               	addwf	___ftadd@f2+2,f
 16815  0CB9  01C8               	clrf	___ftadd@sign
 16816  0CBA  0AC8               	incf	___ftadd@sign,f
 16817  0CBB                     l6207:	
 16818  0CBB  0841               	movf	___ftadd@f2,w
 16819  0CBC  00A0               	movwf	___ftpack@arg
 16820  0CBD  0842               	movf	___ftadd@f2+1,w
 16821  0CBE  00A1               	movwf	___ftpack@arg+1
 16822  0CBF  0843               	movf	___ftadd@f2+2,w
 16823  0CC0  00A2               	movwf	___ftpack@arg+2
 16824  0CC1  084A               	movf	___ftadd@exp1,w
 16825  0CC2  00C4               	movwf	??___ftadd
 16826  0CC3  0844               	movf	??___ftadd,w
 16827  0CC4  00A3               	movwf	___ftpack@exp
 16828  0CC5  0848               	movf	___ftadd@sign,w
 16829  0CC6  00C5               	movwf	??___ftadd+1
 16830  0CC7  0845               	movf	??___ftadd+1,w
 16831  0CC8  00A4               	movwf	___ftpack@sign
 16832  0CC9  3190  20E1         	fcall	___ftpack
 16833  0CCB  0020               	movlb	0	; select bank0
 16834  0CCC  0820               	movf	?___ftpack,w
 16835  0CCD  00BE               	movwf	?___ftadd
 16836  0CCE  0821               	movf	?___ftpack+1,w
 16837  0CCF  00BF               	movwf	?___ftadd+1
 16838  0CD0  0822               	movf	?___ftpack+2,w
 16839  0CD1  00C0               	movwf	?___ftadd+2
 16840  0CD2  0008               	return
 16841  0CD3                     __end_of___ftadd:	
 16842                           
 16843                           	psect	text101
 16844  1883                     __ptext101:	
 16845 ;; *************** function ___awtoft *****************
 16846 ;; Defined at:
 16847 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 16848 ;; Parameters:    Size  Location     Type
 16849 ;;  c               2    8[BANK0 ] int 
 16850 ;; Auto vars:     Size  Location     Type
 16851 ;;  sign            1   13[BANK0 ] unsigned char 
 16852 ;; Return value:  Size  Location     Type
 16853 ;;                  3    8[BANK0 ] float 
 16854 ;; Registers used:
 16855 ;;		wreg, status,2, status,0, pclath, cstack
 16856 ;; Tracked objects:
 16857 ;;		On entry : 0/0
 16858 ;;		On exit  : 0/0
 16859 ;;		Unchanged: 0/0
 16860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16861 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16863 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16864 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16865 ;;Total ram usage:        6 bytes
 16866 ;; Hardware stack levels used:    1
 16867 ;; Hardware stack levels required when called:    5
 16868 ;; This function calls:
 16869 ;;		___ftpack
 16870 ;; This function is called by:
 16871 ;;		_getPercentValue
 16872 ;;		_setPercentValue
 16873 ;; This function uses a non-reentrant model
 16874 ;;
 16875                           
 16876                           
 16877                           ;psect for function ___awtoft
 16878  1883                     ___awtoft:	
 16879                           
 16880                           ;incstack = 0
 16881                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 16882  1883  0020               	movlb	0	; select bank0
 16883  1884  01AD               	clrf	___awtoft@sign
 16884  1885  1FA9               	btfss	___awtoft@c+1,7
 16885  1886  288E               	goto	l6135
 16886  1887  09A8               	comf	___awtoft@c,f
 16887  1888  09A9               	comf	___awtoft@c+1,f
 16888  1889  0AA8               	incf	___awtoft@c,f
 16889  188A  1903               	skipnz
 16890  188B  0AA9               	incf	___awtoft@c+1,f
 16891  188C  01AD               	clrf	___awtoft@sign
 16892  188D  0AAD               	incf	___awtoft@sign,f
 16893  188E                     l6135:	
 16894  188E  0828               	movf	___awtoft@c,w
 16895  188F  00A0               	movwf	___ftpack@arg
 16896  1890  0829               	movf	___awtoft@c+1,w
 16897  1891  00A1               	movwf	___ftpack@arg+1
 16898  1892  01A2               	clrf	___ftpack@arg+2
 16899  1893  308E               	movlw	142
 16900  1894  00AB               	movwf	??___awtoft
 16901  1895  082B               	movf	??___awtoft,w
 16902  1896  00A3               	movwf	___ftpack@exp
 16903  1897  082D               	movf	___awtoft@sign,w
 16904  1898  00AC               	movwf	??___awtoft+1
 16905  1899  082C               	movf	??___awtoft+1,w
 16906  189A  00A4               	movwf	___ftpack@sign
 16907  189B  3190  20E1         	fcall	___ftpack
 16908  189D  0020               	movlb	0	; select bank0
 16909  189E  0820               	movf	?___ftpack,w
 16910  189F  00A8               	movwf	?___awtoft
 16911  18A0  0821               	movf	?___ftpack+1,w
 16912  18A1  00A9               	movwf	?___awtoft+1
 16913  18A2  0822               	movf	?___ftpack+2,w
 16914  18A3  00AA               	movwf	?___awtoft+2
 16915  18A4  0008               	return
 16916  18A5                     __end_of___awtoft:	
 16917                           
 16918                           	psect	text102
 16919  10E1                     __ptext102:	
 16920 ;; *************** function ___ftpack *****************
 16921 ;; Defined at:
 16922 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 16923 ;; Parameters:    Size  Location     Type
 16924 ;;  arg             3    0[BANK0 ] unsigned um
 16925 ;;  exp             1    3[BANK0 ] unsigned char 
 16926 ;;  sign            1    4[BANK0 ] unsigned char 
 16927 ;; Auto vars:     Size  Location     Type
 16928 ;;		None
 16929 ;; Return value:  Size  Location     Type
 16930 ;;                  3    0[BANK0 ] float 
 16931 ;; Registers used:
 16932 ;;		wreg, status,2, status,0
 16933 ;; Tracked objects:
 16934 ;;		On entry : 0/0
 16935 ;;		On exit  : 0/0
 16936 ;;		Unchanged: 0/0
 16937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16938 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16940 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16941 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16942 ;;Total ram usage:        8 bytes
 16943 ;; Hardware stack levels used:    1
 16944 ;; Hardware stack levels required when called:    4
 16945 ;; This function calls:
 16946 ;;		Nothing
 16947 ;; This function is called by:
 16948 ;;		___awtoft
 16949 ;;		___ftadd
 16950 ;;		___ftdiv
 16951 ;;		___ftmul
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955                           
 16956                           ;psect for function ___ftpack
 16957  10E1                     ___ftpack:	
 16958                           
 16959                           ;incstack = 0
 16960                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 16961  10E1  0020               	movlb	0	; select bank0
 16962  10E2  0823               	movf	___ftpack@exp,w
 16963  10E3  1903               	btfsc	3,2
 16964  10E4  28EA               	goto	l6101
 16965  10E5  0822               	movf	___ftpack@arg+2,w
 16966  10E6  0421               	iorwf	___ftpack@arg+1,w
 16967  10E7  0420               	iorwf	___ftpack@arg,w
 16968  10E8  1D03               	skipz
 16969  10E9  28FB               	goto	l6107
 16970  10EA                     l6101:	
 16971  10EA  3000               	movlw	0
 16972  10EB  00A0               	movwf	?___ftpack
 16973  10EC  3000               	movlw	0
 16974  10ED  00A1               	movwf	?___ftpack+1
 16975  10EE  3000               	movlw	0
 16976  10EF  00A2               	movwf	?___ftpack+2
 16977  10F0  0008               	return
 16978  10F1                     l6105:	
 16979  10F1  3001               	movlw	1
 16980  10F2  00A5               	movwf	??___ftpack
 16981  10F3  0825               	movf	??___ftpack,w
 16982  10F4  07A3               	addwf	___ftpack@exp,f
 16983  10F5  3001               	movlw	1
 16984  10F6                     u4095:	
 16985  10F6  36A2               	lsrf	___ftpack@arg+2,f
 16986  10F7  0CA1               	rrf	___ftpack@arg+1,f
 16987  10F8  0CA0               	rrf	___ftpack@arg,f
 16988  10F9  0B89               	decfsz	9,f
 16989  10FA  28F6               	goto	u4095
 16990  10FB                     l6107:	
 16991  10FB  30FE               	movlw	254
 16992  10FC  0522               	andwf	___ftpack@arg+2,w
 16993  10FD  1903               	btfsc	3,2
 16994  10FE  2914               	goto	l3395
 16995  10FF  28F1               	goto	l6105
 16996  1100                     l6109:	
 16997  1100  3001               	movlw	1
 16998  1101  00A5               	movwf	??___ftpack
 16999  1102  0825               	movf	??___ftpack,w
 17000  1103  07A3               	addwf	___ftpack@exp,f
 17001  1104  3001               	movlw	1
 17002  1105  07A0               	addwf	___ftpack@arg,f
 17003  1106  3000               	movlw	0
 17004  1107  1803               	skipnc
 17005  1108  3001               	movlw	1
 17006  1109  07A1               	addwf	___ftpack@arg+1,f
 17007  110A  3000               	movlw	0
 17008  110B  1803               	skipnc
 17009  110C  3001               	movlw	1
 17010  110D  07A2               	addwf	___ftpack@arg+2,f
 17011  110E  3001               	movlw	1
 17012  110F                     u4115:	
 17013  110F  36A2               	lsrf	___ftpack@arg+2,f
 17014  1110  0CA1               	rrf	___ftpack@arg+1,f
 17015  1111  0CA0               	rrf	___ftpack@arg,f
 17016  1112  0B89               	decfsz	9,f
 17017  1113  290F               	goto	u4115
 17018  1114                     l3395:	
 17019  1114  30FF               	movlw	255
 17020  1115  0522               	andwf	___ftpack@arg+2,w
 17021  1116  1903               	btfsc	3,2
 17022  1117  2921               	goto	l6117
 17023  1118  2900               	goto	l6109
 17024  1119                     l6115:	
 17025  1119  3001               	movlw	1
 17026  111A  02A3               	subwf	___ftpack@exp,f
 17027  111B  3001               	movlw	1
 17028  111C                     u4135:	
 17029  111C  35A0               	lslf	___ftpack@arg,f
 17030  111D  0DA1               	rlf	___ftpack@arg+1,f
 17031  111E  0DA2               	rlf	___ftpack@arg+2,f
 17032  111F  0B89               	decfsz	9,f
 17033  1120  291C               	goto	u4135
 17034  1121                     l6117:	
 17035  1121  1FA1               	btfss	___ftpack@arg+1,7
 17036  1122  2919               	goto	l6115
 17037  1123  1823               	btfsc	___ftpack@exp,0
 17038  1124  292B               	goto	l3401
 17039  1125  30FF               	movlw	255
 17040  1126  05A0               	andwf	___ftpack@arg,f
 17041  1127  307F               	movlw	127
 17042  1128  05A1               	andwf	___ftpack@arg+1,f
 17043  1129  30FF               	movlw	255
 17044  112A  05A2               	andwf	___ftpack@arg+2,f
 17045  112B                     l3401:	
 17046  112B  1003               	clrc
 17047  112C  0CA3               	rrf	___ftpack@exp,f
 17048  112D  0823               	movf	___ftpack@exp,w
 17049  112E  00A5               	movwf	??___ftpack
 17050  112F  01A6               	clrf	??___ftpack+1
 17051  1130  01A7               	clrf	??___ftpack+2
 17052  1131  3010               	movlw	16
 17053  1132                     u4165:	
 17054  1132  35A5               	lslf	??___ftpack,f
 17055  1133  0DA6               	rlf	??___ftpack+1,f
 17056  1134  0DA7               	rlf	??___ftpack+2,f
 17057  1135  0B89               	decfsz	9,f
 17058  1136  2932               	goto	u4165
 17059  1137  0825               	movf	??___ftpack,w
 17060  1138  04A0               	iorwf	___ftpack@arg,f
 17061  1139  0826               	movf	??___ftpack+1,w
 17062  113A  04A1               	iorwf	___ftpack@arg+1,f
 17063  113B  0827               	movf	??___ftpack+2,w
 17064  113C  04A2               	iorwf	___ftpack@arg+2,f
 17065  113D  0824               	movf	___ftpack@sign,w
 17066  113E  1903               	btfsc	3,2
 17067  113F  0008               	return
 17068  1140  17A2               	bsf	___ftpack@arg+2,7
 17069  1141  0008               	return
 17070  1142                     __end_of___ftpack:	
 17071                           
 17072                           	psect	text103
 17073  23F2                     __ptext103:	
 17074 ;; *************** function _Dimmer_Initialization *****************
 17075 ;; Defined at:
 17076 ;;		line 507 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 17077 ;; Parameters:    Size  Location     Type
 17078 ;;		None
 17079 ;; Auto vars:     Size  Location     Type
 17080 ;;		None
 17081 ;; Return value:  Size  Location     Type
 17082 ;;		None               void
 17083 ;; Registers used:
 17084 ;;		wreg
 17085 ;; Tracked objects:
 17086 ;;		On entry : 0/0
 17087 ;;		On exit  : 0/0
 17088 ;;		Unchanged: 0/0
 17089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17093 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17094 ;;Total ram usage:        1 bytes
 17095 ;; Hardware stack levels used:    1
 17096 ;; Hardware stack levels required when called:    4
 17097 ;; This function calls:
 17098 ;;		Nothing
 17099 ;; This function is called by:
 17100 ;;		_DimmerLights_Initialization
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104                           
 17105                           ;psect for function _Dimmer_Initialization
 17106  23F2                     _Dimmer_Initialization:	
 17107                           
 17108                           ;Dimmer_B1.c: 509: Dimmer=&Dimmer1;
 17109                           
 17110                           ;incstack = 0
 17111                           ; Regs used in _Dimmer_Initialization: [wreg]
 17112  23F2  30E1               	movlw	_Dimmer1& (0+255)
 17113  23F3  0020               	movlb	0	; select bank0
 17114  23F4  00A0               	movwf	??_Dimmer_Initialization
 17115  23F5  0820               	movf	??_Dimmer_Initialization,w
 17116  23F6  0021               	movlb	1	; select bank1
 17117  23F7  00B9               	movwf	_Dimmer^(0+128)
 17118  23F8  0008               	return
 17119  23F9                     __end_of_Dimmer_Initialization:	
 17120                           
 17121                           	psect	text104
 17122  2416                     __ptext104:	
 17123 ;; *************** function _DelayOff_Main *****************
 17124 ;; Defined at:
 17125 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 17126 ;; Parameters:    Size  Location     Type
 17127 ;;		None
 17128 ;; Auto vars:     Size  Location     Type
 17129 ;;		None
 17130 ;; Return value:  Size  Location     Type
 17131 ;;		None               void
 17132 ;; Registers used:
 17133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17134 ;; Tracked objects:
 17135 ;;		On entry : 0/0
 17136 ;;		On exit  : 0/0
 17137 ;;		Unchanged: 0/0
 17138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17143 ;;Total ram usage:        0 bytes
 17144 ;; Hardware stack levels used:    1
 17145 ;; Hardware stack levels required when called:    7
 17146 ;; This function calls:
 17147 ;;		_DlyOff_Main
 17148 ;; This function is called by:
 17149 ;;		_main
 17150 ;; This function uses a non-reentrant model
 17151 ;;
 17152                           
 17153                           
 17154                           ;psect for function _DelayOff_Main
 17155  2416                     _DelayOff_Main:	
 17156                           
 17157                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 17158                           
 17159                           ;incstack = 0
 17160                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17161  2416  3001               	movlw	1
 17162  2417  3194  243A  31A4   	fcall	_DlyOff_Main
 17163                           
 17164                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 17165  241A  3002               	movlw	2
 17166  241B  3194  243A         	fcall	_DlyOff_Main
 17167  241D  0008               	return
 17168  241E                     __end_of_DelayOff_Main:	
 17169                           
 17170                           	psect	text105
 17171  143A                     __ptext105:	
 17172 ;; *************** function _DlyOff_Main *****************
 17173 ;; Defined at:
 17174 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;  sw              1    wreg     unsigned char 
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;  sw              1   12[BANK0 ] unsigned char 
 17179 ;; Return value:  Size  Location     Type
 17180 ;;		None               void
 17181 ;; Registers used:
 17182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17191 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17192 ;;Total ram usage:        3 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:    6
 17195 ;; This function calls:
 17196 ;;		_DelayOffPointSelect
 17197 ;;		_setBuz
 17198 ;;		_setDimmerLights_Switch
 17199 ;;		_setDimmerLights_Trigger
 17200 ;;		_setRFSW_Status
 17201 ;;		_setRF_DimmerLights
 17202 ;;		_setSw_Status
 17203 ;;		_setTxData
 17204 ;; This function is called by:
 17205 ;;		_DelayOff_Main
 17206 ;; This function uses a non-reentrant model
 17207 ;;
 17208                           
 17209                           
 17210                           ;psect for function _DlyOff_Main
 17211  143A                     _DlyOff_Main:	
 17212                           
 17213                           ;incstack = 0
 17214                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17215                           ;DlyOff_Main@sw stored from wreg
 17216  143A  0020               	movlb	0	; select bank0
 17217  143B  00AC               	movwf	DlyOff_Main@sw
 17218                           
 17219                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 17220  143C  082C               	movf	DlyOff_Main@sw,w
 17221  143D  31A6  26A4  3194   	fcall	_DelayOffPointSelect
 17222                           
 17223                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 17224  1440  0021               	movlb	1	; select bank1
 17225  1441  0838               	movf	_DelayOff^(0+128),w
 17226  1442  0086               	movwf	6
 17227  1443  0187               	clrf	7
 17228  1444  1C81               	btfss	1,1
 17229  1445  0008               	return
 17230                           
 17231                           ;DelayOff_B1.c: 70: {
 17232                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 17233  1446  0838               	movf	_DelayOff^(0+128),w
 17234  1447  3E02               	addlw	2
 17235  1448  0086               	movwf	6
 17236  1449  0187               	clrf	7
 17237  144A  3001               	movlw	1
 17238  144B  0781               	addwf	1,f
 17239  144C  3141               	addfsr 1,1
 17240  144D  1803               	skipnc
 17241  144E  0A81               	incf	1,f
 17242                           
 17243                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5650)
 17244  144F  0838               	movf	_DelayOff^(0+128),w
 17245  1450  3E02               	addlw	2
 17246  1451  0086               	movwf	6
 17247  1452  0187               	clrf	7
 17248  1453  3F40               	moviw [0]fsr1
 17249  1454  0020               	movlb	0	; select bank0
 17250  1455  00AA               	movwf	??_DlyOff_Main
 17251  1456  3F41               	moviw [1]fsr1
 17252  1457  00AB               	movwf	??_DlyOff_Main+1
 17253  1458  3016               	movlw	22
 17254  1459  022B               	subwf	??_DlyOff_Main+1,w
 17255  145A  3012               	movlw	18
 17256  145B  1903               	skipnz
 17257  145C  022A               	subwf	??_DlyOff_Main,w
 17258  145D  1C03               	skipc
 17259  145E  0008               	return
 17260                           
 17261                           ;DelayOff_B1.c: 73: {
 17262                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 17263  145F  0021               	movlb	1	; select bank1
 17264  1460  0838               	movf	_DelayOff^(0+128),w
 17265  1461  3E02               	addlw	2
 17266  1462  0086               	movwf	6
 17267  1463  0187               	clrf	7
 17268  1464  3000               	movlw	0
 17269  1465  3FC0               	movwi [0]fsr1
 17270  1466  3FC1               	movwi [1]fsr1
 17271                           
 17272                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 17273  1467  3001               	movlw	1
 17274  1468  0020               	movlb	0	; select bank0
 17275  1469  00AA               	movwf	??_DlyOff_Main
 17276  146A  0021               	movlb	1	; select bank1
 17277  146B  0838               	movf	_DelayOff^(0+128),w
 17278  146C  3E04               	addlw	4
 17279  146D  0086               	movwf	6
 17280  146E  0187               	clrf	7
 17281  146F  0020               	movlb	0	; select bank0
 17282  1470  082A               	movf	??_DlyOff_Main,w
 17283  1471  0781               	addwf	1,f
 17284                           
 17285                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 17286  1472  0021               	movlb	1	; select bank1
 17287  1473  0838               	movf	_DelayOff^(0+128),w
 17288  1474  3E04               	addlw	4
 17289  1475  0086               	movwf	6
 17290  1476  0187               	clrf	7
 17291  1477  0A38               	incf	_DelayOff^(0+128),w
 17292  1478  0084               	movwf	4
 17293  1479  0185               	clrf	5
 17294  147A  0800               	movf	0,w
 17295  147B  0201               	subwf	1,w
 17296  147C  1C03               	skipc
 17297  147D  0008               	return
 17298                           
 17299                           ;DelayOff_B1.c: 77: {
 17300                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 17301  147E  0838               	movf	_DelayOff^(0+128),w
 17302  147F  3E04               	addlw	4
 17303  1480  0086               	movwf	6
 17304  1481  0187               	clrf	7
 17305  1482  0181               	clrf	1
 17306                           
 17307                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 17308  1483  0838               	movf	_DelayOff^(0+128),w
 17309  1484  0086               	movwf	6
 17310  1485  0187               	clrf	7
 17311  1486  1081               	bcf	1,1
 17312                           
 17313                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 17314  1487  0020               	movlb	0	; select bank0
 17315  1488  01A2               	clrf	setSw_Status@command
 17316  1489  082C               	movf	DlyOff_Main@sw,w
 17317  148A  31A5  255C  3194   	fcall	_setSw_Status
 17318                           
 17319                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 17320  148D  0020               	movlb	0	; select bank0
 17321  148E  01A2               	clrf	setRFSW_Status@command
 17322  148F  082C               	movf	DlyOff_Main@sw,w
 17323  1490  31A5  254D  3194   	fcall	_setRFSW_Status
 17324                           
 17325                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 17326  1493  0020               	movlb	0	; select bank0
 17327  1494  01A0               	clrf	setRF_DimmerLights@on
 17328  1495  082C               	movf	DlyOff_Main@sw,w
 17329  1496  319F  274A  3194   	fcall	_setRF_DimmerLights
 17330                           
 17331                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 17332  1499  0020               	movlb	0	; select bank0
 17333  149A  01A2               	clrf	setDimmerLights_Trigger@command
 17334  149B  0AA2               	incf	setDimmerLights_Trigger@command,f
 17335  149C  082C               	movf	DlyOff_Main@sw,w
 17336  149D  31A5  258B  3194   	fcall	_setDimmerLights_Trigger
 17337                           
 17338                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 17339  14A0  0020               	movlb	0	; select bank0
 17340  14A1  01A2               	clrf	setDimmerLights_Switch@command
 17341  14A2  082C               	movf	DlyOff_Main@sw,w
 17342  14A3  31A5  257B  3194   	fcall	_setDimmerLights_Switch
 17343                           
 17344                           ;DelayOff_B1.c: 85: setTxData(1);
 17345  14A6  3001               	movlw	1
 17346  14A7  318B  2314  3194   	fcall	_setTxData
 17347                           
 17348                           ;DelayOff_B1.c: 86: setBuz(1,100);
 17349  14AA  3064               	movlw	100
 17350  14AB  0020               	movlb	0	; select bank0
 17351  14AC  00A6               	movwf	setBuz@time
 17352  14AD  3000               	movlw	0
 17353  14AE  00A7               	movwf	setBuz@time+1
 17354  14AF  3001               	movlw	1
 17355  14B0  3193  23C3         	fcall	_setBuz
 17356  14B2  0008               	return
 17357  14B3                     __end_of_DlyOff_Main:	
 17358                           
 17359                           	psect	text106
 17360  0B14                     __ptext106:	
 17361 ;; *************** function _setTxData *****************
 17362 ;; Defined at:
 17363 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;  rf              1    wreg     unsigned char 
 17366 ;; Auto vars:     Size  Location     Type
 17367 ;;  rf              1    3[BANK0 ] unsigned char 
 17368 ;;  i               1    0        unsigned char 
 17369 ;; Return value:  Size  Location     Type
 17370 ;;		None               void
 17371 ;; Registers used:
 17372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17373 ;; Tracked objects:
 17374 ;;		On entry : 0/0
 17375 ;;		On exit  : 0/0
 17376 ;;		Unchanged: 0/0
 17377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17379 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17381 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17382 ;;Total ram usage:        2 bytes
 17383 ;; Hardware stack levels used:    1
 17384 ;; Hardware stack levels required when called:    5
 17385 ;; This function calls:
 17386 ;;		_RfPointSelect
 17387 ;; This function is called by:
 17388 ;;		_DlyOff_Main
 17389 ;;		_setDimmerLights_Adj
 17390 ;;		_setControl_Lights_Table
 17391 ;;		_setRFSW_Control
 17392 ;;		_setRFSW_AdjControl
 17393 ;;		_Sw_DimmerOnFunc
 17394 ;;		_Sw_DimmerOffFunc
 17395 ;; This function uses a non-reentrant model
 17396 ;;
 17397                           
 17398                           
 17399                           ;psect for function _setTxData
 17400  0B14                     _setTxData:	
 17401                           
 17402                           ;incstack = 0
 17403                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17404                           ;setTxData@rf stored from wreg
 17405  0B14  0020               	movlb	0	; select bank0
 17406  0B15  00A3               	movwf	setTxData@rf
 17407                           
 17408                           ;RF_Control_B1.c: 135: char i;
 17409                           ;RF_Control_B1.c: 136: RfPointSelect(rf);
 17410  0B16  0823               	movf	setTxData@rf,w
 17411  0B17  31A4  2468  318B   	fcall	_RfPointSelect
 17412                           
 17413                           ;RF_Control_B1.c: 137: if(RF->Enable)
 17414  0B1A  087C               	movf	_RF,w
 17415  0B1B  0086               	movwf	6
 17416  0B1C  0187               	clrf	7
 17417  0B1D  1C01               	btfss	1,0
 17418  0B1E  0008               	return
 17419                           
 17420                           ;RF_Control_B1.c: 138: {
 17421                           ;RF_Control_B1.c: 140: if(!RF->TransceiveGO)
 17422  0B1F  087C               	movf	_RF,w
 17423  0B20  0086               	movwf	6
 17424  0B21  0187               	clrf	7
 17425  0B22  1901               	btfsc	1,2
 17426  0B23  0008               	return
 17427                           
 17428                           ;RF_Control_B1.c: 141: {
 17429                           ;RF_Control_B1.c: 142: RF->TransceiveGO=1;
 17430  0B24  087C               	movf	_RF,w
 17431  0B25  0086               	movwf	6
 17432  0B26  0187               	clrf	7
 17433  0B27  1501               	bsf	1,2
 17434                           
 17435                           ;RF_Control_B1.c: 151: RF_Data[0]=0x63;
 17436  0B28  3063               	movlw	99
 17437  0B29  0020               	movlb	0	; select bank0
 17438  0B2A  00A2               	movwf	??_setTxData
 17439  0B2B  0822               	movf	??_setTxData,w
 17440  0B2C  0021               	movlb	1	; select bank1
 17441  0B2D  00A0               	movwf	_RF_Data^(0+128)
 17442                           
 17443                           ;RF_Control_B1.c: 152: RF_Data[1]=0x02;
 17444  0B2E  3002               	movlw	2
 17445  0B2F  0020               	movlb	0	; select bank0
 17446  0B30  00A2               	movwf	??_setTxData
 17447  0B31  0822               	movf	??_setTxData,w
 17448  0B32  0021               	movlb	1	; select bank1
 17449  0B33  00A1               	movwf	(_RF_Data^(0+128)+1)
 17450                           
 17451                           ;RF_Control_B1.c: 153: RF_Data[2]=Product->Data[2];
 17452  0B34  0020               	movlb	0	; select bank0
 17453  0B35  086F               	movf	_Product,w
 17454  0B36  0086               	movwf	6
 17455  0B37  3001               	movlw	1	; select bank2/3
 17456  0B38  0087               	movwf	7
 17457  0B39  3001               	movlw	1	; select bank2/3
 17458  0B3A  3F42               	moviw [2]fsr1
 17459  0B3B  0021               	movlb	1	; select bank1
 17460  0B3C  00A2               	movwf	(_RF_Data^(0+128)+2)
 17461                           
 17462                           ;RF_Control_B1.c: 154: RF_Data[3]=Product->Data[3];
 17463  0B3D  0020               	movlb	0	; select bank0
 17464  0B3E  086F               	movf	_Product,w
 17465  0B3F  0086               	movwf	6
 17466  0B40  3001               	movlw	1	; select bank2/3
 17467  0B41  0087               	movwf	7
 17468  0B42  3001               	movlw	1	; select bank2/3
 17469  0B43  3F43               	moviw [3]fsr1
 17470  0B44  0021               	movlb	1	; select bank1
 17471  0B45  00A3               	movwf	(_RF_Data^(0+128)+3)
 17472                           
 17473                           ;RF_Control_B1.c: 155: RF_Data[4]=Product->Data[4];
 17474  0B46  0020               	movlb	0	; select bank0
 17475  0B47  086F               	movf	_Product,w
 17476  0B48  0086               	movwf	6
 17477  0B49  3001               	movlw	1	; select bank2/3
 17478  0B4A  0087               	movwf	7
 17479  0B4B  3001               	movlw	1	; select bank2/3
 17480  0B4C  3F44               	moviw [4]fsr1
 17481  0B4D  0021               	movlb	1	; select bank1
 17482  0B4E  00A4               	movwf	(_RF_Data^(0+128)+4)
 17483                           
 17484                           ;RF_Control_B1.c: 156: RF_Data[5]=Product->Data[5];
 17485  0B4F  0020               	movlb	0	; select bank0
 17486  0B50  086F               	movf	_Product,w
 17487  0B51  0086               	movwf	6
 17488  0B52  3001               	movlw	1	; select bank2/3
 17489  0B53  0087               	movwf	7
 17490  0B54  3001               	movlw	1	; select bank2/3
 17491  0B55  3F45               	moviw [5]fsr1
 17492  0B56  0021               	movlb	1	; select bank1
 17493  0B57  00A5               	movwf	(_RF_Data^(0+128)+5)
 17494                           
 17495                           ;RF_Control_B1.c: 157: RF_Data[6]=Product->Data[6];
 17496  0B58  0020               	movlb	0	; select bank0
 17497  0B59  086F               	movf	_Product,w
 17498  0B5A  0086               	movwf	6
 17499  0B5B  3001               	movlw	1	; select bank2/3
 17500  0B5C  0087               	movwf	7
 17501  0B5D  3001               	movlw	1	; select bank2/3
 17502  0B5E  3F46               	moviw [6]fsr1
 17503  0B5F  0021               	movlb	1	; select bank1
 17504  0B60  00A6               	movwf	(_RF_Data^(0+128)+6)
 17505                           
 17506                           ;RF_Control_B1.c: 158: RF_Data[7]=Product->Data[7];
 17507  0B61  0020               	movlb	0	; select bank0
 17508  0B62  086F               	movf	_Product,w
 17509  0B63  0086               	movwf	6
 17510  0B64  3001               	movlw	1	; select bank2/3
 17511  0B65  0087               	movwf	7
 17512  0B66  3001               	movlw	1	; select bank2/3
 17513  0B67  3F47               	moviw [7]fsr1
 17514  0B68  0021               	movlb	1	; select bank1
 17515  0B69  00A7               	movwf	(_RF_Data^(0+128)+7)
 17516                           
 17517                           ;RF_Control_B1.c: 159: RF_Data[8]=Product->Data[8];
 17518  0B6A  0020               	movlb	0	; select bank0
 17519  0B6B  086F               	movf	_Product,w
 17520  0B6C  0086               	movwf	6
 17521  0B6D  3001               	movlw	1	; select bank2/3
 17522  0B6E  0087               	movwf	7
 17523  0B6F  3001               	movlw	1	; select bank2/3
 17524  0B70  3F48               	moviw [8]fsr1
 17525  0B71  0021               	movlb	1	; select bank1
 17526  0B72  00A8               	movwf	(_RF_Data^(0+128)+8)
 17527                           
 17528                           ;RF_Control_B1.c: 160: RF_Data[9]=Product->Data[9];
 17529  0B73  0020               	movlb	0	; select bank0
 17530  0B74  086F               	movf	_Product,w
 17531  0B75  0086               	movwf	6
 17532  0B76  3001               	movlw	1	; select bank2/3
 17533  0B77  0087               	movwf	7
 17534  0B78  3001               	movlw	1	; select bank2/3
 17535  0B79  3F49               	moviw [9]fsr1
 17536  0B7A  0021               	movlb	1	; select bank1
 17537  0B7B  00A9               	movwf	(_RF_Data^(0+128)+9)
 17538                           
 17539                           ;RF_Control_B1.c: 161: RF_Data[10]=Product->Data[10];
 17540  0B7C  0020               	movlb	0	; select bank0
 17541  0B7D  086F               	movf	_Product,w
 17542  0B7E  0086               	movwf	6
 17543  0B7F  3001               	movlw	1	; select bank2/3
 17544  0B80  0087               	movwf	7
 17545  0B81  3001               	movlw	1	; select bank2/3
 17546  0B82  3F4A               	moviw [10]fsr1
 17547  0B83  0021               	movlb	1	; select bank1
 17548  0B84  00AA               	movwf	(_RF_Data^(0+128)+10)
 17549                           
 17550                           ;RF_Control_B1.c: 162: RF_Data[11]=Product->Data[11];
 17551  0B85  0020               	movlb	0	; select bank0
 17552  0B86  086F               	movf	_Product,w
 17553  0B87  0086               	movwf	6
 17554  0B88  3001               	movlw	1	; select bank2/3
 17555  0B89  0087               	movwf	7
 17556  0B8A  3001               	movlw	1	; select bank2/3
 17557  0B8B  3F4B               	moviw [11]fsr1
 17558  0B8C  0021               	movlb	1	; select bank1
 17559  0B8D  00AB               	movwf	(_RF_Data^(0+128)+11)
 17560                           
 17561                           ;RF_Control_B1.c: 163: RF_Data[12]=Product->Data[12];
 17562  0B8E  0020               	movlb	0	; select bank0
 17563  0B8F  086F               	movf	_Product,w
 17564  0B90  0086               	movwf	6
 17565  0B91  3001               	movlw	1	; select bank2/3
 17566  0B92  0087               	movwf	7
 17567  0B93  3001               	movlw	1	; select bank2/3
 17568  0B94  3F4C               	moviw [12]fsr1
 17569  0B95  0021               	movlb	1	; select bank1
 17570  0B96  00AC               	movwf	(_RF_Data^(0+128)+12)
 17571                           
 17572                           ;RF_Control_B1.c: 164: RF_Data[13]=Product->Data[13];
 17573  0B97  0020               	movlb	0	; select bank0
 17574  0B98  086F               	movf	_Product,w
 17575  0B99  0086               	movwf	6
 17576  0B9A  3001               	movlw	1	; select bank2/3
 17577  0B9B  0087               	movwf	7
 17578  0B9C  3001               	movlw	1	; select bank2/3
 17579  0B9D  3F4D               	moviw [13]fsr1
 17580  0B9E  0021               	movlb	1	; select bank1
 17581  0B9F  00AD               	movwf	(_RF_Data^(0+128)+13)
 17582                           
 17583                           ;RF_Control_B1.c: 165: RF_Data[14]=Product->Data[14];
 17584  0BA0  0020               	movlb	0	; select bank0
 17585  0BA1  086F               	movf	_Product,w
 17586  0BA2  0086               	movwf	6
 17587  0BA3  3001               	movlw	1	; select bank2/3
 17588  0BA4  0087               	movwf	7
 17589  0BA5  3001               	movlw	1	; select bank2/3
 17590  0BA6  3F4E               	moviw [14]fsr1
 17591  0BA7  0021               	movlb	1	; select bank1
 17592  0BA8  00AE               	movwf	(_RF_Data^(0+128)+14)
 17593                           
 17594                           ;RF_Control_B1.c: 166: RF_Data[15]=Product->Data[15];
 17595  0BA9  0020               	movlb	0	; select bank0
 17596  0BAA  086F               	movf	_Product,w
 17597  0BAB  0086               	movwf	6
 17598  0BAC  3001               	movlw	1	; select bank2/3
 17599  0BAD  0087               	movwf	7
 17600  0BAE  3001               	movlw	1	; select bank2/3
 17601  0BAF  3F4F               	moviw [15]fsr1
 17602  0BB0  0021               	movlb	1	; select bank1
 17603  0BB1  00AF               	movwf	(_RF_Data^(0+128)+15)
 17604                           
 17605                           ;RF_Control_B1.c: 167: RF_Data[16]=Product->Data[16];
 17606  0BB2  0020               	movlb	0	; select bank0
 17607  0BB3  086F               	movf	_Product,w
 17608  0BB4  0086               	movwf	6
 17609  0BB5  3001               	movlw	1	; select bank2/3
 17610  0BB6  0087               	movwf	7
 17611  0BB7  3001               	movlw	1	; select bank2/3
 17612  0BB8  3F50               	moviw [16]fsr1
 17613  0BB9  0021               	movlb	1	; select bank1
 17614  0BBA  00B0               	movwf	(_RF_Data^(0+128)+16)
 17615                           
 17616                           ;RF_Control_B1.c: 168: RF_Data[17]=Product->Data[17];
 17617  0BBB  0020               	movlb	0	; select bank0
 17618  0BBC  086F               	movf	_Product,w
 17619  0BBD  0086               	movwf	6
 17620  0BBE  3001               	movlw	1	; select bank2/3
 17621  0BBF  0087               	movwf	7
 17622  0BC0  3001               	movlw	1	; select bank2/3
 17623  0BC1  3F51               	moviw [17]fsr1
 17624  0BC2  0021               	movlb	1	; select bank1
 17625  0BC3  00B1               	movwf	(_RF_Data^(0+128)+17)
 17626                           
 17627                           ;RF_Control_B1.c: 169: RF_Data[18]=Product->Data[18];
 17628  0BC4  0020               	movlb	0	; select bank0
 17629  0BC5  086F               	movf	_Product,w
 17630  0BC6  0086               	movwf	6
 17631  0BC7  3001               	movlw	1	; select bank2/3
 17632  0BC8  0087               	movwf	7
 17633  0BC9  3001               	movlw	1	; select bank2/3
 17634  0BCA  3F52               	moviw [18]fsr1
 17635  0BCB  0021               	movlb	1	; select bank1
 17636  0BCC  00B2               	movwf	(_RF_Data^(0+128)+18)
 17637                           
 17638                           ;RF_Control_B1.c: 170: RF_Data[19]=Product->Data[19];
 17639  0BCD  0020               	movlb	0	; select bank0
 17640  0BCE  086F               	movf	_Product,w
 17641  0BCF  0086               	movwf	6
 17642  0BD0  3001               	movlw	1	; select bank2/3
 17643  0BD1  0087               	movwf	7
 17644  0BD2  3001               	movlw	1	; select bank2/3
 17645  0BD3  3F53               	moviw [19]fsr1
 17646  0BD4  0021               	movlb	1	; select bank1
 17647  0BD5  00B3               	movwf	(_RF_Data^(0+128)+19)
 17648                           
 17649                           ;RF_Control_B1.c: 171: RF_Data[20]=2;
 17650  0BD6  3002               	movlw	2
 17651  0BD7  0020               	movlb	0	; select bank0
 17652  0BD8  00A2               	movwf	??_setTxData
 17653  0BD9  0822               	movf	??_setTxData,w
 17654  0BDA  0021               	movlb	1	; select bank1
 17655  0BDB  00B4               	movwf	(_RF_Data^(0+128)+20)
 17656  0BDC  0008               	return
 17657  0BDD                     __end_of_setTxData:	
 17658                           
 17659                           	psect	text107
 17660  2468                     __ptext107:	
 17661 ;; *************** function _RfPointSelect *****************
 17662 ;; Defined at:
 17663 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 17664 ;; Parameters:    Size  Location     Type
 17665 ;;  rf              1    wreg     unsigned char 
 17666 ;; Auto vars:     Size  Location     Type
 17667 ;;  rf              1    1[BANK0 ] unsigned char 
 17668 ;; Return value:  Size  Location     Type
 17669 ;;		None               void
 17670 ;; Registers used:
 17671 ;;		wreg
 17672 ;; Tracked objects:
 17673 ;;		On entry : 0/0
 17674 ;;		On exit  : 0/0
 17675 ;;		Unchanged: 0/0
 17676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17681 ;;Total ram usage:        2 bytes
 17682 ;; Hardware stack levels used:    1
 17683 ;; Hardware stack levels required when called:    4
 17684 ;; This function calls:
 17685 ;;		Nothing
 17686 ;; This function is called by:
 17687 ;;		_setRF_Learn
 17688 ;;		_setRF_RxStatus
 17689 ;;		_setRF_Main
 17690 ;;		_setTxData
 17691 ;;		_setRF_Enable
 17692 ;;		_RF_RxDisable
 17693 ;;		_getRxData
 17694 ;;		_setLog_Code
 17695 ;;		_setControl_Lights_Table
 17696 ;; This function uses a non-reentrant model
 17697 ;;
 17698                           
 17699                           
 17700                           ;psect for function _RfPointSelect
 17701  2468                     _RfPointSelect:	
 17702                           
 17703                           ;incstack = 0
 17704                           ; Regs used in _RfPointSelect: [wreg]
 17705                           ;RfPointSelect@rf stored from wreg
 17706  2468  0020               	movlb	0	; select bank0
 17707  2469  00A1               	movwf	RfPointSelect@rf
 17708                           
 17709                           ;RF_Control_B1.c: 10: if(rf == 1)
 17710  246A  0821               	movf	RfPointSelect@rf,w
 17711  246B  3A01               	xorlw	1
 17712  246C  1D03               	skipz
 17713  246D  0008               	return
 17714                           
 17715                           ;RF_Control_B1.c: 11: {
 17716                           ;RF_Control_B1.c: 12: RF=&RF1;
 17717  246E  30E4               	movlw	_RF1& (0+255)
 17718  246F  00A0               	movwf	??_RfPointSelect
 17719  2470  0820               	movf	??_RfPointSelect,w
 17720  2471  00FC               	movwf	_RF
 17721  2472  0008               	return
 17722  2473                     __end_of_RfPointSelect:	
 17723                           
 17724                           	psect	text108
 17725  255C                     __ptext108:	
 17726 ;; *************** function _setSw_Status *****************
 17727 ;; Defined at:
 17728 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 17729 ;; Parameters:    Size  Location     Type
 17730 ;;  sw              1    wreg     unsigned char 
 17731 ;;  command         1    2[BANK0 ] unsigned char 
 17732 ;; Auto vars:     Size  Location     Type
 17733 ;;  sw              1    3[BANK0 ] unsigned char 
 17734 ;; Return value:  Size  Location     Type
 17735 ;;		None               void
 17736 ;; Registers used:
 17737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17738 ;; Tracked objects:
 17739 ;;		On entry : 0/0
 17740 ;;		On exit  : 0/0
 17741 ;;		Unchanged: 0/0
 17742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17743 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17747 ;;Total ram usage:        2 bytes
 17748 ;; Hardware stack levels used:    1
 17749 ;; Hardware stack levels required when called:    5
 17750 ;; This function calls:
 17751 ;;		_SwPointSelect
 17752 ;; This function is called by:
 17753 ;;		_DlyOff_Main
 17754 ;;		_setDimmerLights_ERROR
 17755 ;;		_setControl_Lights_Table
 17756 ;;		_setRFSW_Control
 17757 ;; This function uses a non-reentrant model
 17758 ;;
 17759                           
 17760                           
 17761                           ;psect for function _setSw_Status
 17762  255C                     _setSw_Status:	
 17763                           
 17764                           ;incstack = 0
 17765                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17766                           ;setSw_Status@sw stored from wreg
 17767  255C  0020               	movlb	0	; select bank0
 17768  255D  00A3               	movwf	setSw_Status@sw
 17769                           
 17770                           ;Switch_B1.c: 108: SwPointSelect(sw);
 17771  255E  0823               	movf	setSw_Status@sw,w
 17772  255F  31A6  260F         	fcall	_SwPointSelect
 17773                           
 17774                           ;Switch_B1.c: 109: Sw->Status=command;
 17775  2561  0020               	movlb	0	; select bank0
 17776  2562  086D               	movf	_Sw,w
 17777  2563  0086               	movwf	6
 17778  2564  3001               	movlw	1	; select bank2/3
 17779  2565  0087               	movwf	7
 17780  2566  0822               	movf	setSw_Status@command,w
 17781  2567  1301               	bcf	1,6
 17782  2568  1D03               	skipz
 17783  2569  1701               	bsf	1,6
 17784  256A  0008               	return
 17785  256B                     __end_of_setSw_Status:	
 17786                           
 17787                           	psect	text109
 17788  260F                     __ptext109:	
 17789 ;; *************** function _SwPointSelect *****************
 17790 ;; Defined at:
 17791 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 17792 ;; Parameters:    Size  Location     Type
 17793 ;;  sw              1    wreg     unsigned char 
 17794 ;; Auto vars:     Size  Location     Type
 17795 ;;  sw              1    1[BANK0 ] unsigned char 
 17796 ;; Return value:  Size  Location     Type
 17797 ;;		None               void
 17798 ;; Registers used:
 17799 ;;		wreg
 17800 ;; Tracked objects:
 17801 ;;		On entry : 0/0
 17802 ;;		On exit  : 0/0
 17803 ;;		Unchanged: 0/0
 17804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17808 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17809 ;;Total ram usage:        2 bytes
 17810 ;; Hardware stack levels used:    1
 17811 ;; Hardware stack levels required when called:    4
 17812 ;; This function calls:
 17813 ;;		Nothing
 17814 ;; This function is called by:
 17815 ;;		_setSw_Enable
 17816 ;;		_setSw_Status
 17817 ;;		_setSw_Main
 17818 ;;		_Sw_Detect
 17819 ;; This function uses a non-reentrant model
 17820 ;;
 17821                           
 17822                           
 17823                           ;psect for function _SwPointSelect
 17824  260F                     _SwPointSelect:	
 17825                           
 17826                           ;incstack = 0
 17827                           ; Regs used in _SwPointSelect: [wreg]
 17828                           ;SwPointSelect@sw stored from wreg
 17829  260F  0020               	movlb	0	; select bank0
 17830  2610  00A1               	movwf	SwPointSelect@sw
 17831                           
 17832                           ;Switch_B1.c: 19: if(sw == 1)
 17833  2611  0821               	movf	SwPointSelect@sw,w
 17834  2612  3A01               	xorlw	1
 17835  2613  1D03               	skipz
 17836  2614  2E1A               	goto	l6429
 17837                           
 17838                           ;Switch_B1.c: 20: {
 17839                           ;Switch_B1.c: 21: Sw=&Sw1;
 17840  2615  3054               	movlw	_Sw1& (0+255)
 17841  2616  00A0               	movwf	??_SwPointSelect
 17842  2617  0820               	movf	??_SwPointSelect,w
 17843  2618  00ED               	movwf	_Sw
 17844                           
 17845                           ;Switch_B1.c: 22: }
 17846  2619  0008               	return
 17847  261A                     l6429:	
 17848                           
 17849                           ;Switch_B1.c: 25: else if(sw == 2)
 17850  261A  0821               	movf	SwPointSelect@sw,w
 17851  261B  3A02               	xorlw	2
 17852  261C  1D03               	skipz
 17853  261D  0008               	return
 17854                           
 17855                           ;Switch_B1.c: 26: {
 17856                           ;Switch_B1.c: 27: Sw=&Sw2;
 17857  261E  305D               	movlw	_Sw2& (0+255)
 17858  261F  00A0               	movwf	??_SwPointSelect
 17859  2620  0820               	movf	??_SwPointSelect,w
 17860  2621  00ED               	movwf	_Sw
 17861  2622  0008               	return
 17862  2623                     __end_of_SwPointSelect:	
 17863                           
 17864                           	psect	text110
 17865  1F4A                     __ptext110:	
 17866 ;; *************** function _setRF_DimmerLights *****************
 17867 ;; Defined at:
 17868 ;;		line 437 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 17869 ;; Parameters:    Size  Location     Type
 17870 ;;  lights          1    wreg     unsigned char 
 17871 ;;  on              1    0[BANK0 ] unsigned char 
 17872 ;; Auto vars:     Size  Location     Type
 17873 ;;  lights          1    4[BANK0 ] unsigned char 
 17874 ;;  status          1    3[BANK0 ] unsigned char 
 17875 ;; Return value:  Size  Location     Type
 17876 ;;		None               void
 17877 ;; Registers used:
 17878 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17879 ;; Tracked objects:
 17880 ;;		On entry : 0/0
 17881 ;;		On exit  : 0/0
 17882 ;;		Unchanged: 0/0
 17883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17884 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17886 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17887 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17888 ;;Total ram usage:        5 bytes
 17889 ;; Hardware stack levels used:    1
 17890 ;; Hardware stack levels required when called:    4
 17891 ;; This function calls:
 17892 ;;		Nothing
 17893 ;; This function is called by:
 17894 ;;		_DlyOff_Main
 17895 ;;		_setDimmerLights_Adj
 17896 ;;		_setRFSW_Control
 17897 ;;		_Sw_DimmerOnFunc
 17898 ;;		_Sw_DimmerOffFunc
 17899 ;; This function uses a non-reentrant model
 17900 ;;
 17901                           
 17902                           
 17903                           ;psect for function _setRF_DimmerLights
 17904  1F4A                     _setRF_DimmerLights:	
 17905                           
 17906                           ;incstack = 0
 17907                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0]
 17908                           ;setRF_DimmerLights@lights stored from wreg
 17909  1F4A  0020               	movlb	0	; select bank0
 17910  1F4B  00A4               	movwf	setRF_DimmerLights@lights
 17911                           
 17912                           ;RF_Control_B1.c: 439: char status;
 17913                           ;RF_Control_B1.c: 440: status=1;
 17914  1F4C  01A3               	clrf	setRF_DimmerLights@status
 17915  1F4D  0AA3               	incf	setRF_DimmerLights@status,f
 17916                           
 17917                           ;RF_Control_B1.c: 441: status<<=(lights-1);
 17918  1F4E  0824               	movf	setRF_DimmerLights@lights,w
 17919  1F4F  3EFF               	addlw	-1
 17920  1F50  0A89               	incf	9,f
 17921  1F51  2F54               	goto	u4980
 17922  1F52                     u4985:	
 17923  1F52  1003               	clrc
 17924  1F53  0DA3               	rlf	setRF_DimmerLights@status,f
 17925  1F54                     u4980:	
 17926  1F54  3EFF               	addlw	-1
 17927  1F55  1D03               	skipz
 17928  1F56  2F52               	goto	u4985
 17929                           
 17930                           ;RF_Control_B1.c: 442: Product->Data[11]=lights;
 17931  1F57  0824               	movf	setRF_DimmerLights@lights,w
 17932  1F58  00A1               	movwf	??_setRF_DimmerLights
 17933  1F59  086F               	movf	_Product,w
 17934  1F5A  3E0B               	addlw	11
 17935  1F5B  0086               	movwf	6
 17936  1F5C  3001               	movlw	1	; select bank2/3
 17937  1F5D  0087               	movwf	7
 17938  1F5E  0821               	movf	??_setRF_DimmerLights,w
 17939  1F5F  0081               	movwf	1
 17940                           
 17941                           ;RF_Control_B1.c: 443: Product->Data[9]=Product->Data[20+lights];
 17942  1F60  0824               	movf	setRF_DimmerLights@lights,w
 17943  1F61  3E14               	addlw	20
 17944  1F62  076F               	addwf	_Product,w
 17945  1F63  00A1               	movwf	??_setRF_DimmerLights
 17946  1F64  0821               	movf	??_setRF_DimmerLights,w
 17947  1F65  0086               	movwf	6
 17948  1F66  3001               	movlw	1	; select bank2/3
 17949  1F67  0087               	movwf	7
 17950  1F68  0801               	movf	1,w
 17951  1F69  00A2               	movwf	??_setRF_DimmerLights+1
 17952  1F6A  086F               	movf	_Product,w
 17953  1F6B  3E09               	addlw	9
 17954  1F6C  0086               	movwf	6
 17955  1F6D  3001               	movlw	1	; select bank2/3
 17956  1F6E  0087               	movwf	7
 17957  1F6F  0822               	movf	??_setRF_DimmerLights+1,w
 17958  1F70  0081               	movwf	1
 17959                           
 17960                           ;RF_Control_B1.c: 444: Product->Data[17]=Product->Data[26+lights];
 17961  1F71  0824               	movf	setRF_DimmerLights@lights,w
 17962  1F72  3E1A               	addlw	26
 17963  1F73  076F               	addwf	_Product,w
 17964  1F74  00A1               	movwf	??_setRF_DimmerLights
 17965  1F75  0821               	movf	??_setRF_DimmerLights,w
 17966  1F76  0086               	movwf	6
 17967  1F77  3001               	movlw	1	; select bank2/3
 17968  1F78  0087               	movwf	7
 17969  1F79  0801               	movf	1,w
 17970  1F7A  00A2               	movwf	??_setRF_DimmerLights+1
 17971  1F7B  086F               	movf	_Product,w
 17972  1F7C  3E11               	addlw	17
 17973  1F7D  0086               	movwf	6
 17974  1F7E  3001               	movlw	1	; select bank2/3
 17975  1F7F  0087               	movwf	7
 17976  1F80  0822               	movf	??_setRF_DimmerLights+1,w
 17977  1F81  0081               	movwf	1
 17978                           
 17979                           ;RF_Control_B1.c: 445: if(on)
 17980  1F82  0820               	movf	setRF_DimmerLights@on,w
 17981  1F83  1903               	btfsc	3,2
 17982  1F84  2F95               	goto	l6485
 17983                           
 17984                           ;RF_Control_B1.c: 446: {
 17985                           ;RF_Control_B1.c: 447: Product->Data[15]=(Product->Data[15]|status);
 17986  1F85  086F               	movf	_Product,w
 17987  1F86  3E0F               	addlw	15
 17988  1F87  0086               	movwf	6
 17989  1F88  3001               	movlw	1	; select bank2/3
 17990  1F89  0087               	movwf	7
 17991  1F8A  0801               	movf	1,w
 17992  1F8B  0423               	iorwf	setRF_DimmerLights@status,w
 17993  1F8C  00A1               	movwf	??_setRF_DimmerLights
 17994  1F8D  086F               	movf	_Product,w
 17995  1F8E  3E0F               	addlw	15
 17996  1F8F  0086               	movwf	6
 17997  1F90  3001               	movlw	1	; select bank2/3
 17998  1F91  0087               	movwf	7
 17999  1F92  0821               	movf	??_setRF_DimmerLights,w
 18000  1F93  0081               	movwf	1
 18001                           
 18002                           ;RF_Control_B1.c: 448: }
 18003  1F94  0008               	return
 18004  1F95                     l6485:	
 18005                           
 18006                           ;RF_Control_B1.c: 449: else
 18007                           ;RF_Control_B1.c: 450: {
 18008                           ;RF_Control_B1.c: 451: Product->Data[15]=(Product->Data[15]&(~status));
 18009  1F95  086F               	movf	_Product,w
 18010  1F96  3E0F               	addlw	15
 18011  1F97  0086               	movwf	6
 18012  1F98  3001               	movlw	1	; select bank2/3
 18013  1F99  0087               	movwf	7
 18014  1F9A  0923               	comf	setRF_DimmerLights@status,w
 18015  1F9B  0501               	andwf	1,w
 18016  1F9C  00A1               	movwf	??_setRF_DimmerLights
 18017  1F9D  086F               	movf	_Product,w
 18018  1F9E  3E0F               	addlw	15
 18019  1F9F  0086               	movwf	6
 18020  1FA0  3001               	movlw	1	; select bank2/3
 18021  1FA1  0087               	movwf	7
 18022  1FA2  0821               	movf	??_setRF_DimmerLights,w
 18023  1FA3  0081               	movwf	1
 18024  1FA4  0008               	return
 18025  1FA5                     __end_of_setRF_DimmerLights:	
 18026                           
 18027                           	psect	text111
 18028  254D                     __ptext111:	
 18029 ;; *************** function _setRFSW_Status *****************
 18030 ;; Defined at:
 18031 ;;		line 417 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 18032 ;; Parameters:    Size  Location     Type
 18033 ;;  sw              1    wreg     unsigned char 
 18034 ;;  command         1    2[BANK0 ] unsigned char 
 18035 ;; Auto vars:     Size  Location     Type
 18036 ;;  sw              1    3[BANK0 ] unsigned char 
 18037 ;; Return value:  Size  Location     Type
 18038 ;;		None               void
 18039 ;; Registers used:
 18040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18041 ;; Tracked objects:
 18042 ;;		On entry : 0/0
 18043 ;;		On exit  : 0/0
 18044 ;;		Unchanged: 0/0
 18045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18046 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18049 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18050 ;;Total ram usage:        2 bytes
 18051 ;; Hardware stack levels used:    1
 18052 ;; Hardware stack levels required when called:    5
 18053 ;; This function calls:
 18054 ;;		_RfSWPointSelect
 18055 ;; This function is called by:
 18056 ;;		_DlyOff_Main
 18057 ;;		_setDimmerLights_ERROR
 18058 ;;		_setControl_Lights_Table
 18059 ;;		_Sw_DimmerOnFunc
 18060 ;;		_Sw_DimmerAdjFunc
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           
 18065                           ;psect for function _setRFSW_Status
 18066  254D                     _setRFSW_Status:	
 18067                           
 18068                           ;incstack = 0
 18069                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18070                           ;setRFSW_Status@sw stored from wreg
 18071  254D  0020               	movlb	0	; select bank0
 18072  254E  00A3               	movwf	setRFSW_Status@sw
 18073                           
 18074                           ;RF_Control_B1.c: 419: RfSWPointSelect(sw);
 18075  254F  0823               	movf	setRFSW_Status@sw,w
 18076  2550  31A6  2662         	fcall	_RfSWPointSelect
 18077                           
 18078                           ;RF_Control_B1.c: 420: RFSW->Status=command;
 18079  2552  0021               	movlb	1	; select bank1
 18080  2553  083C               	movf	_RFSW^(0+128),w
 18081  2554  0086               	movwf	6
 18082  2555  0187               	clrf	7
 18083  2556  0020               	movlb	0	; select bank0
 18084  2557  0822               	movf	setRFSW_Status@command,w
 18085  2558  1001               	bcf	1,0
 18086  2559  1D03               	skipz
 18087  255A  1401               	bsf	1,0
 18088  255B  0008               	return
 18089  255C                     __end_of_setRFSW_Status:	
 18090                           
 18091                           	psect	text112
 18092  2662                     __ptext112:	
 18093 ;; *************** function _RfSWPointSelect *****************
 18094 ;; Defined at:
 18095 ;;		line 339 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 18096 ;; Parameters:    Size  Location     Type
 18097 ;;  sw              1    wreg     unsigned char 
 18098 ;; Auto vars:     Size  Location     Type
 18099 ;;  sw              1    1[BANK0 ] unsigned char 
 18100 ;; Return value:  Size  Location     Type
 18101 ;;		None               void
 18102 ;; Registers used:
 18103 ;;		wreg
 18104 ;; Tracked objects:
 18105 ;;		On entry : 0/0
 18106 ;;		On exit  : 0/0
 18107 ;;		Unchanged: 0/0
 18108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18113 ;;Total ram usage:        2 bytes
 18114 ;; Hardware stack levels used:    1
 18115 ;; Hardware stack levels required when called:    4
 18116 ;; This function calls:
 18117 ;;		Nothing
 18118 ;; This function is called by:
 18119 ;;		_setRFSW_Control
 18120 ;;		_setRFSW_AdjControl
 18121 ;;		_setRFSW_Status
 18122 ;; This function uses a non-reentrant model
 18123 ;;
 18124                           
 18125                           
 18126                           ;psect for function _RfSWPointSelect
 18127  2662                     _RfSWPointSelect:	
 18128                           
 18129                           ;incstack = 0
 18130                           ; Regs used in _RfSWPointSelect: [wreg]
 18131                           ;RfSWPointSelect@sw stored from wreg
 18132  2662  0020               	movlb	0	; select bank0
 18133  2663  00A1               	movwf	RfSWPointSelect@sw
 18134                           
 18135                           ;RF_Control_B1.c: 342: if(sw == 1)
 18136  2664  0821               	movf	RfSWPointSelect@sw,w
 18137  2665  3A01               	xorlw	1
 18138  2666  1D03               	skipz
 18139  2667  2E6D               	goto	l2719
 18140                           
 18141                           ;RF_Control_B1.c: 343: {
 18142                           ;RF_Control_B1.c: 344: RFSW=&RFSW1;
 18143  2668  30E6               	movlw	_RFSW1& (0+255)
 18144  2669  00A0               	movwf	??_RfSWPointSelect
 18145  266A  0820               	movf	??_RfSWPointSelect,w
 18146  266B  0021               	movlb	1	; select bank1
 18147  266C  00BC               	movwf	_RFSW^(0+128)
 18148  266D                     l2719:	
 18149                           
 18150                           ;RF_Control_B1.c: 345: }
 18151                           ;RF_Control_B1.c: 348: if(sw == 2)
 18152  266D  0020               	movlb	0	; select bank0
 18153  266E  0821               	movf	RfSWPointSelect@sw,w
 18154  266F  3A02               	xorlw	2
 18155  2670  1D03               	skipz
 18156  2671  0008               	return
 18157                           
 18158                           ;RF_Control_B1.c: 349: {
 18159                           ;RF_Control_B1.c: 350: RFSW=&RFSW2;
 18160  2672  30E7               	movlw	_RFSW2& (0+255)
 18161  2673  00A0               	movwf	??_RfSWPointSelect
 18162  2674  0820               	movf	??_RfSWPointSelect,w
 18163  2675  0021               	movlb	1	; select bank1
 18164  2676  00BC               	movwf	_RFSW^(0+128)
 18165  2677  0008               	return
 18166  2678                     __end_of_RfSWPointSelect:	
 18167                           
 18168                           	psect	text113
 18169  258B                     __ptext113:	
 18170 ;; *************** function _setDimmerLights_Trigger *****************
 18171 ;; Defined at:
 18172 ;;		line 432 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18173 ;; Parameters:    Size  Location     Type
 18174 ;;  lights          1    wreg     unsigned char 
 18175 ;;  command         1    2[BANK0 ] unsigned char 
 18176 ;; Auto vars:     Size  Location     Type
 18177 ;;  lights          1    3[BANK0 ] unsigned char 
 18178 ;; Return value:  Size  Location     Type
 18179 ;;		None               void
 18180 ;; Registers used:
 18181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18182 ;; Tracked objects:
 18183 ;;		On entry : 0/0
 18184 ;;		On exit  : 0/0
 18185 ;;		Unchanged: 0/0
 18186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18187 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18191 ;;Total ram usage:        2 bytes
 18192 ;; Hardware stack levels used:    1
 18193 ;; Hardware stack levels required when called:    5
 18194 ;; This function calls:
 18195 ;;		_DimmerLightsPointSelect
 18196 ;; This function is called by:
 18197 ;;		_DlyOff_Main
 18198 ;;		_setRFSW_Control
 18199 ;;		_Sw_DimmerOnFunc
 18200 ;;		_Sw_DimmerOffFunc
 18201 ;; This function uses a non-reentrant model
 18202 ;;
 18203                           
 18204                           
 18205                           ;psect for function _setDimmerLights_Trigger
 18206  258B                     _setDimmerLights_Trigger:	
 18207                           
 18208                           ;incstack = 0
 18209                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18210                           ;setDimmerLights_Trigger@lights stored from wreg
 18211  258B  0020               	movlb	0	; select bank0
 18212  258C  00A3               	movwf	setDimmerLights_Trigger@lights
 18213                           
 18214                           ;Dimmer_B1.c: 434: DimmerLightsPointSelect(lights);
 18215  258D  0823               	movf	setDimmerLights_Trigger@lights,w
 18216  258E  31A5  25FC         	fcall	_DimmerLightsPointSelect
 18217                           
 18218                           ;Dimmer_B1.c: 435: DimmerLights->Trigger=command;
 18219  2590  0020               	movlb	0	; select bank0
 18220  2591  086C               	movf	_DimmerLights,w
 18221  2592  3E09               	addlw	9
 18222  2593  0086               	movwf	6
 18223  2594  3001               	movlw	1	; select bank2/3
 18224  2595  0087               	movwf	7
 18225  2596  0822               	movf	setDimmerLights_Trigger@command,w
 18226  2597  1081               	bcf	1,1
 18227  2598  1D03               	skipz
 18228  2599  1481               	bsf	1,1
 18229  259A  0008               	return
 18230  259B                     __end_of_setDimmerLights_Trigger:	
 18231                           
 18232                           	psect	text114
 18233  257B                     __ptext114:	
 18234 ;; *************** function _setDimmerLights_Switch *****************
 18235 ;; Defined at:
 18236 ;;		line 422 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18237 ;; Parameters:    Size  Location     Type
 18238 ;;  lights          1    wreg     unsigned char 
 18239 ;;  command         1    2[BANK0 ] unsigned char 
 18240 ;; Auto vars:     Size  Location     Type
 18241 ;;  lights          1    3[BANK0 ] unsigned char 
 18242 ;; Return value:  Size  Location     Type
 18243 ;;		None               void
 18244 ;; Registers used:
 18245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18246 ;; Tracked objects:
 18247 ;;		On entry : 0/0
 18248 ;;		On exit  : 0/0
 18249 ;;		Unchanged: 0/0
 18250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18251 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18255 ;;Total ram usage:        2 bytes
 18256 ;; Hardware stack levels used:    1
 18257 ;; Hardware stack levels required when called:    5
 18258 ;; This function calls:
 18259 ;;		_DimmerLightsPointSelect
 18260 ;; This function is called by:
 18261 ;;		_DlyOff_Main
 18262 ;;		_setRFSW_Control
 18263 ;;		_Sw_DimmerOnFunc
 18264 ;;		_Sw_DimmerOffFunc
 18265 ;; This function uses a non-reentrant model
 18266 ;;
 18267                           
 18268                           
 18269                           ;psect for function _setDimmerLights_Switch
 18270  257B                     _setDimmerLights_Switch:	
 18271                           
 18272                           ;incstack = 0
 18273                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 18274                           ;setDimmerLights_Switch@lights stored from wreg
 18275  257B  0020               	movlb	0	; select bank0
 18276  257C  00A3               	movwf	setDimmerLights_Switch@lights
 18277                           
 18278                           ;Dimmer_B1.c: 424: DimmerLightsPointSelect(lights);
 18279  257D  0823               	movf	setDimmerLights_Switch@lights,w
 18280  257E  31A5  25FC         	fcall	_DimmerLightsPointSelect
 18281                           
 18282                           ;Dimmer_B1.c: 425: DimmerLights->Switch=command;
 18283  2580  0020               	movlb	0	; select bank0
 18284  2581  086C               	movf	_DimmerLights,w
 18285  2582  3E09               	addlw	9
 18286  2583  0086               	movwf	6
 18287  2584  3001               	movlw	1	; select bank2/3
 18288  2585  0087               	movwf	7
 18289  2586  0822               	movf	setDimmerLights_Switch@command,w
 18290  2587  1001               	bcf	1,0
 18291  2588  1D03               	skipz
 18292  2589  1401               	bsf	1,0
 18293  258A  0008               	return
 18294  258B                     __end_of_setDimmerLights_Switch:	
 18295                           
 18296                           	psect	text115
 18297  25FC                     __ptext115:	
 18298 ;; *************** function _DimmerLightsPointSelect *****************
 18299 ;; Defined at:
 18300 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18301 ;; Parameters:    Size  Location     Type
 18302 ;;  lights          1    wreg     unsigned char 
 18303 ;; Auto vars:     Size  Location     Type
 18304 ;;  lights          1    1[BANK0 ] unsigned char 
 18305 ;; Return value:  Size  Location     Type
 18306 ;;		None               void
 18307 ;; Registers used:
 18308 ;;		wreg
 18309 ;; Tracked objects:
 18310 ;;		On entry : 0/0
 18311 ;;		On exit  : 0/0
 18312 ;;		Unchanged: 0/0
 18313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18316 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18317 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18318 ;;Total ram usage:        2 bytes
 18319 ;; Hardware stack levels used:    1
 18320 ;; Hardware stack levels required when called:    4
 18321 ;; This function calls:
 18322 ;;		Nothing
 18323 ;; This function is called by:
 18324 ;;		_setDimmerLights_Initialization
 18325 ;;		_setDimmerLights_Main
 18326 ;;		_setDimmerLights_ERROR
 18327 ;;		_setDimmerLights_TriggerERROR
 18328 ;;		_setDimmerLights
 18329 ;;		_setDimmerLights_Adj
 18330 ;;		_setDimmerLights_AdjRF
 18331 ;;		_setDimmerLights_Switch
 18332 ;;		_setDimmerLights_AdjGo
 18333 ;;		_setDimmerLights_Trigger
 18334 ;;		_setDimmerLights_TriggerAdj
 18335 ;;		_setDimmerLights_Clear
 18336 ;;		_setDimmerLights_GO
 18337 ;;		_setDimmerLights_MaxmumValue
 18338 ;; This function uses a non-reentrant model
 18339 ;;
 18340                           
 18341                           
 18342                           ;psect for function _DimmerLightsPointSelect
 18343  25FC                     _DimmerLightsPointSelect:	
 18344                           
 18345                           ;incstack = 0
 18346                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 18347                           ;DimmerLightsPointSelect@lights stored from wreg
 18348  25FC  0020               	movlb	0	; select bank0
 18349  25FD  00A1               	movwf	DimmerLightsPointSelect@lights
 18350                           
 18351                           ;Dimmer_B1.c: 10: if(lights == 1)
 18352  25FE  0821               	movf	DimmerLightsPointSelect@lights,w
 18353  25FF  3A01               	xorlw	1
 18354  2600  1D03               	skipz
 18355  2601  2E06               	goto	l875
 18356                           
 18357                           ;Dimmer_B1.c: 11: {
 18358                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 18359  2602  302E               	movlw	_DimmerLights1& (0+255)
 18360  2603  00A0               	movwf	??_DimmerLightsPointSelect
 18361  2604  0820               	movf	??_DimmerLightsPointSelect,w
 18362  2605  00EC               	movwf	_DimmerLights
 18363  2606                     l875:	
 18364                           
 18365                           ;Dimmer_B1.c: 13: }
 18366                           ;Dimmer_B1.c: 17: if(lights == 2)
 18367  2606  0821               	movf	DimmerLightsPointSelect@lights,w
 18368  2607  3A02               	xorlw	2
 18369  2608  1D03               	skipz
 18370  2609  0008               	return
 18371                           
 18372                           ;Dimmer_B1.c: 18: {
 18373                           ;Dimmer_B1.c: 19: DimmerLights=&DimmerLights2;
 18374  260A  303B               	movlw	_DimmerLights2& (0+255)
 18375  260B  00A0               	movwf	??_DimmerLightsPointSelect
 18376  260C  0820               	movf	??_DimmerLightsPointSelect,w
 18377  260D  00EC               	movwf	_DimmerLights
 18378  260E  0008               	return
 18379  260F                     __end_of_DimmerLightsPointSelect:	
 18380                           
 18381                           	psect	text116
 18382  13C3                     __ptext116:	
 18383 ;; *************** function _setBuz *****************
 18384 ;; Defined at:
 18385 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;  count           1    wreg     unsigned char 
 18388 ;;  time            2    6[BANK0 ] int 
 18389 ;; Auto vars:     Size  Location     Type
 18390 ;;  count           1    9[BANK0 ] unsigned char 
 18391 ;; Return value:  Size  Location     Type
 18392 ;;		None               void
 18393 ;; Registers used:
 18394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18395 ;; Tracked objects:
 18396 ;;		On entry : 0/0
 18397 ;;		On exit  : 0/0
 18398 ;;		Unchanged: 0/0
 18399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18403 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18404 ;;Total ram usage:        4 bytes
 18405 ;; Hardware stack levels used:    1
 18406 ;; Hardware stack levels required when called:    5
 18407 ;; This function calls:
 18408 ;;		___wmul
 18409 ;; This function is called by:
 18410 ;;		_DlyOff_Main
 18411 ;;		_setDimmerLights_Main
 18412 ;;		_DimmerLights_Exceptions
 18413 ;;		_MainT
 18414 ;;		_setOverTemp_Exceptions
 18415 ;;		_setLog_Code
 18416 ;;		_setControl_Lights_Table
 18417 ;;		_setRFSW_Control
 18418 ;;		_setSw_Main
 18419 ;;		_Sw_DimmerOnFunc
 18420 ;; This function uses a non-reentrant model
 18421 ;;
 18422                           
 18423                           
 18424                           ;psect for function _setBuz
 18425  13C3                     _setBuz:	
 18426                           
 18427                           ;incstack = 0
 18428                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18429                           ;setBuz@count stored from wreg
 18430  13C3  0020               	movlb	0	; select bank0
 18431  13C4  00A9               	movwf	setBuz@count
 18432                           
 18433                           ;Buzzer_B1.c: 24: time*=20;
 18434  13C5  3014               	movlw	20
 18435  13C6  00A0               	movwf	___wmul@multiplier
 18436  13C7  3000               	movlw	0
 18437  13C8  00A1               	movwf	___wmul@multiplier+1
 18438  13C9  0827               	movf	setBuz@time+1,w
 18439  13CA  01A3               	clrf	___wmul@multiplicand+1
 18440  13CB  07A3               	addwf	___wmul@multiplicand+1,f
 18441  13CC  0826               	movf	setBuz@time,w
 18442  13CD  01A2               	clrf	___wmul@multiplicand
 18443  13CE  07A2               	addwf	___wmul@multiplicand,f
 18444  13CF  31A7  27A3  3193   	fcall	___wmul
 18445  13D2  0020               	movlb	0	; select bank0
 18446  13D3  0821               	movf	?___wmul+1,w
 18447  13D4  01A7               	clrf	setBuz@time+1
 18448  13D5  07A7               	addwf	setBuz@time+1,f
 18449  13D6  0820               	movf	?___wmul,w
 18450  13D7  01A6               	clrf	setBuz@time
 18451  13D8  07A6               	addwf	setBuz@time,f
 18452                           
 18453                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 18454  13D9  0878               	movf	_Buz,w
 18455  13DA  0086               	movwf	6
 18456  13DB  3001               	movlw	1	; select bank2/3
 18457  13DC  0087               	movwf	7
 18458  13DD  1C01               	btfss	1,0
 18459  13DE  0008               	return
 18460                           
 18461                           ;Buzzer_B1.c: 26: {
 18462                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 18463  13DF  0878               	movf	_Buz,w
 18464  13E0  0086               	movwf	6
 18465  13E1  3001               	movlw	1	; select bank2/3
 18466  13E2  0087               	movwf	7
 18467  13E3  1881               	btfsc	1,1
 18468  13E4  2BFE               	goto	l8587
 18469                           
 18470                           ;Buzzer_B1.c: 28: {
 18471                           ;Buzzer_B1.c: 29: Buz->GO=1;
 18472  13E5  0878               	movf	_Buz,w
 18473  13E6  0086               	movwf	6
 18474  13E7  3001               	movlw	1	; select bank2/3
 18475  13E8  0087               	movwf	7
 18476  13E9  1481               	bsf	1,1
 18477                           
 18478                           ;Buzzer_B1.c: 30: Buz->Count=count;
 18479  13EA  0829               	movf	setBuz@count,w
 18480  13EB  00A8               	movwf	??_setBuz
 18481  13EC  0878               	movf	_Buz,w
 18482  13ED  3E03               	addlw	3
 18483  13EE  0086               	movwf	6
 18484  13EF  3001               	movlw	1	; select bank2/3
 18485  13F0  0087               	movwf	7
 18486  13F1  0828               	movf	??_setBuz,w
 18487  13F2  0081               	movwf	1
 18488                           
 18489                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 18490  13F3  0878               	movf	_Buz,w
 18491  13F4  3E06               	addlw	6
 18492  13F5  0086               	movwf	6
 18493  13F6  3001               	movlw	1	; select bank2/3
 18494  13F7  0087               	movwf	7
 18495  13F8  0826               	movf	setBuz@time,w
 18496  13F9  3FC0               	movwi [0]fsr1
 18497  13FA  0827               	movf	setBuz@time+1,w
 18498  13FB  3FC1               	movwi [1]fsr1
 18499                           
 18500                           ;Buzzer_B1.c: 33: RB3=1;
 18501  13FC  158D               	bsf	13,3	;volatile
 18502                           
 18503                           ;Buzzer_B1.c: 34: }
 18504  13FD  0008               	return
 18505  13FE                     l8587:	
 18506                           
 18507                           ;Buzzer_B1.c: 35: else
 18508                           ;Buzzer_B1.c: 36: {
 18509                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 18510  13FE  0878               	movf	_Buz,w
 18511  13FF  0086               	movwf	6
 18512  1400  3001               	movlw	1	; select bank2/3
 18513  1401  0087               	movwf	7
 18514  1402  1981               	btfsc	1,3
 18515  1403  2C1C               	goto	l8591
 18516                           
 18517                           ;Buzzer_B1.c: 38: {
 18518                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 18519  1404  0878               	movf	_Buz,w
 18520  1405  0086               	movwf	6
 18521  1406  3001               	movlw	1	; select bank2/3
 18522  1407  0087               	movwf	7
 18523  1408  1581               	bsf	1,3
 18524                           
 18525                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 18526  1409  0829               	movf	setBuz@count,w
 18527  140A  00A8               	movwf	??_setBuz
 18528  140B  0878               	movf	_Buz,w
 18529  140C  3E04               	addlw	4
 18530  140D  0086               	movwf	6
 18531  140E  3001               	movlw	1	; select bank2/3
 18532  140F  0087               	movwf	7
 18533  1410  0828               	movf	??_setBuz,w
 18534  1411  0081               	movwf	1
 18535                           
 18536                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 18537  1412  0878               	movf	_Buz,w
 18538  1413  3E08               	addlw	8
 18539  1414  0086               	movwf	6
 18540  1415  3001               	movlw	1	; select bank2/3
 18541  1416  0087               	movwf	7
 18542  1417  0826               	movf	setBuz@time,w
 18543  1418  3FC0               	movwi [0]fsr1
 18544  1419  0827               	movf	setBuz@time+1,w
 18545  141A  3FC1               	movwi [1]fsr1
 18546                           
 18547                           ;Buzzer_B1.c: 42: }
 18548  141B  0008               	return
 18549  141C                     l8591:	
 18550                           
 18551                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 18552  141C  0878               	movf	_Buz,w
 18553  141D  0086               	movwf	6
 18554  141E  3001               	movlw	1	; select bank2/3
 18555  141F  0087               	movwf	7
 18556  1420  1A01               	btfsc	1,4
 18557  1421  0008               	return
 18558                           
 18559                           ;Buzzer_B1.c: 44: {
 18560                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 18561  1422  0878               	movf	_Buz,w
 18562  1423  0086               	movwf	6
 18563  1424  3001               	movlw	1	; select bank2/3
 18564  1425  0087               	movwf	7
 18565  1426  1601               	bsf	1,4
 18566                           
 18567                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 18568  1427  0829               	movf	setBuz@count,w
 18569  1428  00A8               	movwf	??_setBuz
 18570  1429  0878               	movf	_Buz,w
 18571  142A  3E05               	addlw	5
 18572  142B  0086               	movwf	6
 18573  142C  3001               	movlw	1	; select bank2/3
 18574  142D  0087               	movwf	7
 18575  142E  0828               	movf	??_setBuz,w
 18576  142F  0081               	movwf	1
 18577                           
 18578                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 18579  1430  0878               	movf	_Buz,w
 18580  1431  3E0A               	addlw	10
 18581  1432  0086               	movwf	6
 18582  1433  3001               	movlw	1	; select bank2/3
 18583  1434  0087               	movwf	7
 18584  1435  0826               	movf	setBuz@time,w
 18585  1436  3FC0               	movwi [0]fsr1
 18586  1437  0827               	movf	setBuz@time+1,w
 18587  1438  3FC1               	movwi [1]fsr1
 18588  1439  0008               	return
 18589  143A                     __end_of_setBuz:	
 18590                           
 18591                           	psect	text117
 18592  27A3                     __ptext117:	
 18593 ;; *************** function ___wmul *****************
 18594 ;; Defined at:
 18595 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 18596 ;; Parameters:    Size  Location     Type
 18597 ;;  multiplier      2    0[BANK0 ] unsigned int 
 18598 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 18599 ;; Auto vars:     Size  Location     Type
 18600 ;;  product         2    4[BANK0 ] unsigned int 
 18601 ;; Return value:  Size  Location     Type
 18602 ;;                  2    0[BANK0 ] unsigned int 
 18603 ;; Registers used:
 18604 ;;		wreg, status,2, status,0
 18605 ;; Tracked objects:
 18606 ;;		On entry : 0/0
 18607 ;;		On exit  : 0/0
 18608 ;;		Unchanged: 0/0
 18609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18610 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18611 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18613 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18614 ;;Total ram usage:        6 bytes
 18615 ;; Hardware stack levels used:    1
 18616 ;; Hardware stack levels required when called:    4
 18617 ;; This function calls:
 18618 ;;		Nothing
 18619 ;; This function is called by:
 18620 ;;		_setBuz
 18621 ;;		_Load_Main
 18622 ;; This function uses a non-reentrant model
 18623 ;;
 18624                           
 18625                           
 18626                           ;psect for function ___wmul
 18627  27A3                     ___wmul:	
 18628                           
 18629                           ;incstack = 0
 18630                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18631  27A3  0020               	movlb	0	; select bank0
 18632  27A4  01A4               	clrf	___wmul@product
 18633  27A5  01A5               	clrf	___wmul@product+1
 18634  27A6                     l8567:	
 18635  27A6  1C20               	btfss	___wmul@multiplier,0
 18636  27A7  2FAC               	goto	l3234
 18637  27A8  0822               	movf	___wmul@multiplicand,w
 18638  27A9  07A4               	addwf	___wmul@product,f
 18639  27AA  0823               	movf	___wmul@multiplicand+1,w
 18640  27AB  3DA5               	addwfc	___wmul@product+1,f
 18641  27AC                     l3234:	
 18642  27AC  3001               	movlw	1
 18643  27AD                     u8145:	
 18644  27AD  35A2               	lslf	___wmul@multiplicand,f
 18645  27AE  0DA3               	rlf	___wmul@multiplicand+1,f
 18646  27AF  0B89               	decfsz	9,f
 18647  27B0  2FAD               	goto	u8145
 18648  27B1  3001               	movlw	1
 18649  27B2                     u8155:	
 18650  27B2  36A1               	lsrf	___wmul@multiplier+1,f
 18651  27B3  0CA0               	rrf	___wmul@multiplier,f
 18652  27B4  0B89               	decfsz	9,f
 18653  27B5  2FB2               	goto	u8155
 18654  27B6  0821               	movf	___wmul@multiplier+1,w
 18655  27B7  0420               	iorwf	___wmul@multiplier,w
 18656  27B8  1D03               	skipz
 18657  27B9  2FA6               	goto	l8567
 18658  27BA  0825               	movf	___wmul@product+1,w
 18659  27BB  01A1               	clrf	?___wmul+1
 18660  27BC  07A1               	addwf	?___wmul+1,f
 18661  27BD  0824               	movf	___wmul@product,w
 18662  27BE  01A0               	clrf	?___wmul
 18663  27BF  07A0               	addwf	?___wmul,f
 18664  27C0  0008               	return
 18665  27C1                     __end_of___wmul:	
 18666                           
 18667                           	psect	text118
 18668  240E                     __ptext118:	
 18669 ;; *************** function _DelayOff_Initialization *****************
 18670 ;; Defined at:
 18671 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 18672 ;; Parameters:    Size  Location     Type
 18673 ;;		None
 18674 ;; Auto vars:     Size  Location     Type
 18675 ;;		None
 18676 ;; Return value:  Size  Location     Type
 18677 ;;		None               void
 18678 ;; Registers used:
 18679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18680 ;; Tracked objects:
 18681 ;;		On entry : 0/0
 18682 ;;		On exit  : 0/0
 18683 ;;		Unchanged: 0/0
 18684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18689 ;;Total ram usage:        0 bytes
 18690 ;; Hardware stack levels used:    1
 18691 ;; Hardware stack levels required when called:    6
 18692 ;; This function calls:
 18693 ;;		_DlyOff_Initialization
 18694 ;; This function is called by:
 18695 ;;		_main
 18696 ;; This function uses a non-reentrant model
 18697 ;;
 18698                           
 18699                           
 18700                           ;psect for function _DelayOff_Initialization
 18701  240E                     _DelayOff_Initialization:	
 18702                           
 18703                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 18704                           
 18705                           ;incstack = 0
 18706                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18707  240E  3001               	movlw	1
 18708  240F  31A4  245D  31A4   	fcall	_DlyOff_Initialization
 18709                           
 18710                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 18711  2412  3002               	movlw	2
 18712  2413  31A4  245D         	fcall	_DlyOff_Initialization
 18713  2415  0008               	return
 18714  2416                     __end_of_DelayOff_Initialization:	
 18715                           
 18716                           	psect	text119
 18717  245D                     __ptext119:	
 18718 ;; *************** function _DlyOff_Initialization *****************
 18719 ;; Defined at:
 18720 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 18721 ;; Parameters:    Size  Location     Type
 18722 ;;  sw              1    wreg     unsigned char 
 18723 ;; Auto vars:     Size  Location     Type
 18724 ;;  sw              1    2[BANK0 ] unsigned char 
 18725 ;; Return value:  Size  Location     Type
 18726 ;;		None               void
 18727 ;; Registers used:
 18728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18729 ;; Tracked objects:
 18730 ;;		On entry : 0/0
 18731 ;;		On exit  : 0/0
 18732 ;;		Unchanged: 0/0
 18733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18737 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18738 ;;Total ram usage:        1 bytes
 18739 ;; Hardware stack levels used:    1
 18740 ;; Hardware stack levels required when called:    5
 18741 ;; This function calls:
 18742 ;;		_DelayOffPointSelect
 18743 ;; This function is called by:
 18744 ;;		_DelayOff_Initialization
 18745 ;; This function uses a non-reentrant model
 18746 ;;
 18747                           
 18748                           
 18749                           ;psect for function _DlyOff_Initialization
 18750  245D                     _DlyOff_Initialization:	
 18751                           
 18752                           ;incstack = 0
 18753                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18754                           ;DlyOff_Initialization@sw stored from wreg
 18755  245D  0020               	movlb	0	; select bank0
 18756  245E  00A2               	movwf	DlyOff_Initialization@sw
 18757                           
 18758                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 18759  245F  0822               	movf	DlyOff_Initialization@sw,w
 18760  2460  31A6  26A4         	fcall	_DelayOffPointSelect
 18761                           
 18762                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 18763  2462  0021               	movlb	1	; select bank1
 18764  2463  0838               	movf	_DelayOff^(0+128),w
 18765  2464  0086               	movwf	6
 18766  2465  0187               	clrf	7
 18767  2466  1401               	bsf	1,0
 18768  2467  0008               	return
 18769  2468                     __end_of_DlyOff_Initialization:	
 18770                           
 18771                           	psect	text120
 18772  26A4                     __ptext120:	
 18773 ;; *************** function _DelayOffPointSelect *****************
 18774 ;; Defined at:
 18775 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 18776 ;; Parameters:    Size  Location     Type
 18777 ;;  sw              1    wreg     unsigned char 
 18778 ;; Auto vars:     Size  Location     Type
 18779 ;;  sw              1    1[BANK0 ] unsigned char 
 18780 ;; Return value:  Size  Location     Type
 18781 ;;		None               void
 18782 ;; Registers used:
 18783 ;;		wreg
 18784 ;; Tracked objects:
 18785 ;;		On entry : 0/0
 18786 ;;		On exit  : 0/0
 18787 ;;		Unchanged: 0/0
 18788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18791 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18793 ;;Total ram usage:        2 bytes
 18794 ;; Hardware stack levels used:    1
 18795 ;; Hardware stack levels required when called:    4
 18796 ;; This function calls:
 18797 ;;		Nothing
 18798 ;; This function is called by:
 18799 ;;		_DlyOff_Initialization
 18800 ;;		_DlyOff_Main
 18801 ;;		_setDelayOff_GO
 18802 ;; This function uses a non-reentrant model
 18803 ;;
 18804                           
 18805                           
 18806                           ;psect for function _DelayOffPointSelect
 18807  26A4                     _DelayOffPointSelect:	
 18808                           
 18809                           ;incstack = 0
 18810                           ; Regs used in _DelayOffPointSelect: [wreg]
 18811                           ;DelayOffPointSelect@sw stored from wreg
 18812  26A4  0020               	movlb	0	; select bank0
 18813  26A5  00A1               	movwf	DelayOffPointSelect@sw
 18814                           
 18815                           ;DelayOff_B1.c: 11: if(sw == 1)
 18816  26A6  0821               	movf	DelayOffPointSelect@sw,w
 18817  26A7  3A01               	xorlw	1
 18818  26A8  1D03               	skipz
 18819  26A9  2EB0               	goto	l6365
 18820                           
 18821                           ;DelayOff_B1.c: 12: {
 18822                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 18823  26AA  30CB               	movlw	_DlySw1& (0+255)
 18824  26AB  00A0               	movwf	??_DelayOffPointSelect
 18825  26AC  0820               	movf	??_DelayOffPointSelect,w
 18826  26AD  0021               	movlb	1	; select bank1
 18827  26AE  00B8               	movwf	_DelayOff^(0+128)
 18828                           
 18829                           ;DelayOff_B1.c: 14: }
 18830  26AF  0008               	return
 18831  26B0                     l6365:	
 18832                           
 18833                           ;DelayOff_B1.c: 17: else if(sw == 2)
 18834  26B0  0020               	movlb	0	; select bank0
 18835  26B1  0821               	movf	DelayOffPointSelect@sw,w
 18836  26B2  3A02               	xorlw	2
 18837  26B3  1D03               	skipz
 18838  26B4  0008               	return
 18839                           
 18840                           ;DelayOff_B1.c: 18: {
 18841                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 18842  26B5  30D0               	movlw	_DlySw2& (0+255)
 18843  26B6  00A0               	movwf	??_DelayOffPointSelect
 18844  26B7  0820               	movf	??_DelayOffPointSelect,w
 18845  26B8  0021               	movlb	1	; select bank1
 18846  26B9  00B8               	movwf	_DelayOff^(0+128)
 18847  26BA  0008               	return
 18848  26BB                     __end_of_DelayOffPointSelect:	
 18849                           
 18850                           	psect	text121
 18851  2623                     __ptext121:	
 18852 ;; *************** function _CC2500_PowerOnInitial *****************
 18853 ;; Defined at:
 18854 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 18855 ;; Parameters:    Size  Location     Type
 18856 ;;		None
 18857 ;; Auto vars:     Size  Location     Type
 18858 ;;		None
 18859 ;; Return value:  Size  Location     Type
 18860 ;;		None               void
 18861 ;; Registers used:
 18862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18863 ;; Tracked objects:
 18864 ;;		On entry : 0/0
 18865 ;;		On exit  : 0/0
 18866 ;;		Unchanged: 0/0
 18867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18872 ;;Total ram usage:        0 bytes
 18873 ;; Hardware stack levels used:    1
 18874 ;; Hardware stack levels required when called:    7
 18875 ;; This function calls:
 18876 ;;		_CC2500_ClearRXFIFO
 18877 ;;		_CC2500_ClearTXFIFO
 18878 ;;		_CC2500_FrequencyCabr
 18879 ;;		_CC2500_InitPATable
 18880 ;;		_CC2500_InitSetREG
 18881 ;;		_CC2500_PowerRST
 18882 ;;		_CC2500_SIDLEMode
 18883 ;; This function is called by:
 18884 ;;		_main
 18885 ;; This function uses a non-reentrant model
 18886 ;;
 18887                           
 18888                           
 18889                           ;psect for function _CC2500_PowerOnInitial
 18890  2623                     _CC2500_PowerOnInitial:	
 18891                           
 18892                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 18893                           
 18894                           ;incstack = 0
 18895                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18896  2623  319A  222A  31A6   	fcall	_CC2500_PowerRST
 18897                           
 18898                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 18899  2626  3199  217D  31A6   	fcall	_CC2500_InitSetREG
 18900                           
 18901                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 18902  2629  31A7  27C1  31A6   	fcall	_CC2500_InitPATable
 18903                           
 18904                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 18905  262C  31A3  23D0  31A6   	fcall	_CC2500_ClearTXFIFO
 18906                           
 18907                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 18908  262F  31A3  23CC  31A6   	fcall	_CC2500_ClearRXFIFO
 18909                           
 18910                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 18911  2632  31A4  24CD  31A6   	fcall	_CC2500_FrequencyCabr
 18912                           
 18913                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 18914  2635  31A3  23D4         	fcall	_CC2500_SIDLEMode
 18915  2637  0008               	return
 18916  2638                     __end_of_CC2500_PowerOnInitial:	
 18917                           
 18918                           	psect	text122
 18919  23D4                     __ptext122:	
 18920 ;; *************** function _CC2500_SIDLEMode *****************
 18921 ;; Defined at:
 18922 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 18923 ;; Parameters:    Size  Location     Type
 18924 ;;		None
 18925 ;; Auto vars:     Size  Location     Type
 18926 ;;		None
 18927 ;; Return value:  Size  Location     Type
 18928 ;;		None               void
 18929 ;; Registers used:
 18930 ;;		wreg, status,2, status,0, pclath, cstack
 18931 ;; Tracked objects:
 18932 ;;		On entry : 0/0
 18933 ;;		On exit  : 0/0
 18934 ;;		Unchanged: 0/0
 18935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18940 ;;Total ram usage:        0 bytes
 18941 ;; Hardware stack levels used:    1
 18942 ;; Hardware stack levels required when called:    6
 18943 ;; This function calls:
 18944 ;;		_CC2500_WriteCommand
 18945 ;; This function is called by:
 18946 ;;		_CC2500_PowerOnInitial
 18947 ;; This function uses a non-reentrant model
 18948 ;;
 18949                           
 18950                           
 18951                           ;psect for function _CC2500_SIDLEMode
 18952  23D4                     _CC2500_SIDLEMode:	
 18953                           
 18954                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 18955                           
 18956                           ;incstack = 0
 18957                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 18958  23D4  3036               	movlw	54
 18959  23D5  31A5  256B         	fcall	_CC2500_WriteCommand
 18960  23D7  0008               	return
 18961  23D8                     __end_of_CC2500_SIDLEMode:	
 18962                           
 18963                           	psect	text123
 18964  1A2A                     __ptext123:	
 18965 ;; *************** function _CC2500_PowerRST *****************
 18966 ;; Defined at:
 18967 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 18968 ;; Parameters:    Size  Location     Type
 18969 ;;		None
 18970 ;; Auto vars:     Size  Location     Type
 18971 ;;		None
 18972 ;; Return value:  Size  Location     Type
 18973 ;;		None               void
 18974 ;; Registers used:
 18975 ;;		wreg, status,2, status,0, pclath, cstack
 18976 ;; Tracked objects:
 18977 ;;		On entry : 0/0
 18978 ;;		On exit  : 0/0
 18979 ;;		Unchanged: 0/0
 18980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18984 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18985 ;;Total ram usage:        1 bytes
 18986 ;; Hardware stack levels used:    1
 18987 ;; Hardware stack levels required when called:    5
 18988 ;; This function calls:
 18989 ;;		_CC2500_WriteByte
 18990 ;;		_DelayTime_1us
 18991 ;; This function is called by:
 18992 ;;		_CC2500_PowerOnInitial
 18993 ;; This function uses a non-reentrant model
 18994 ;;
 18995                           
 18996                           
 18997                           ;psect for function _CC2500_PowerRST
 18998  1A2A                     _CC2500_PowerRST:	
 18999                           
 19000                           ;CC2500_B1.c: 112: RC1=0;
 19001                           
 19002                           ;incstack = 0
 19003                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 19004  1A2A  0020               	movlb	0	; select bank0
 19005  1A2B  108E               	bcf	14,1	;volatile
 19006                           
 19007                           ;CC2500_B1.c: 113: RC0=0;
 19008  1A2C  100E               	bcf	14,0	;volatile
 19009                           
 19010                           ;CC2500_B1.c: 114: RC4=1;
 19011  1A2D  160E               	bsf	14,4	;volatile
 19012                           
 19013                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 19014  1A2E  300A               	movlw	10
 19015  1A2F  00A0               	movwf	DelayTime_1us@count
 19016  1A30  3000               	movlw	0
 19017  1A31  00A1               	movwf	DelayTime_1us@count+1
 19018  1A32  3199  2131  319A   	fcall	_DelayTime_1us
 19019                           
 19020                           ;CC2500_B1.c: 116: RC4=0;
 19021  1A35  0020               	movlb	0	; select bank0
 19022  1A36  120E               	bcf	14,4	;volatile
 19023                           
 19024                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 19025  1A37  300A               	movlw	10
 19026  1A38  00A0               	movwf	DelayTime_1us@count
 19027  1A39  3000               	movlw	0
 19028  1A3A  00A1               	movwf	DelayTime_1us@count+1
 19029  1A3B  3199  2131  319A   	fcall	_DelayTime_1us
 19030                           
 19031                           ;CC2500_B1.c: 118: RC4=1;
 19032  1A3E  0020               	movlb	0	; select bank0
 19033  1A3F  160E               	bsf	14,4	;volatile
 19034                           
 19035                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 19036  1A40  3028               	movlw	40
 19037  1A41  00A0               	movwf	DelayTime_1us@count
 19038  1A42  3000               	movlw	0
 19039  1A43  00A1               	movwf	DelayTime_1us@count+1
 19040  1A44  3199  2131  319A   	fcall	_DelayTime_1us
 19041                           
 19042                           ;CC2500_B1.c: 120: RC4=0;
 19043  1A47  0020               	movlb	0	; select bank0
 19044  1A48  120E               	bcf	14,4	;volatile
 19045                           
 19046                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 19047  1A49  3030               	movlw	48
 19048  1A4A  00A6               	movwf	??_CC2500_PowerRST
 19049  1A4B  0826               	movf	??_CC2500_PowerRST,w
 19050  1A4C  0021               	movlb	1	; select bank1
 19051  1A4D  00BF               	movwf	_SPI0Buffer^(0+128)
 19052  1A4E                     l340:	
 19053                           ;CC2500_B1.c: 122: while(RC2==1);
 19054                           
 19055  1A4E  0020               	movlb	0	; select bank0
 19056  1A4F  190E               	btfsc	14,2	;volatile
 19057  1A50  2A4E               	goto	l340
 19058                           
 19059                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 19060  1A51  31A6  26D3  319A   	fcall	_CC2500_WriteByte
 19061  1A54                     l343:	
 19062                           ;CC2500_B1.c: 124: while(RC2==1);
 19063                           
 19064  1A54  0020               	movlb	0	; select bank0
 19065  1A55  190E               	btfsc	14,2	;volatile
 19066  1A56  2A54               	goto	l343
 19067                           
 19068                           ;CC2500_B1.c: 125: RC0=0;
 19069  1A57  100E               	bcf	14,0	;volatile
 19070                           
 19071                           ;CC2500_B1.c: 126: RC4=1;
 19072  1A58  160E               	bsf	14,4	;volatile
 19073  1A59  0008               	return
 19074  1A5A                     __end_of_CC2500_PowerRST:	
 19075                           
 19076                           	psect	text124
 19077  197D                     __ptext124:	
 19078 ;; *************** function _CC2500_InitSetREG *****************
 19079 ;; Defined at:
 19080 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19081 ;; Parameters:    Size  Location     Type
 19082 ;;		None
 19083 ;; Auto vars:     Size  Location     Type
 19084 ;;  loop_c          1    8[BANK0 ] unsigned char 
 19085 ;;  temp2           1    7[BANK0 ] unsigned char 
 19086 ;;  temp1           1    6[BANK0 ] unsigned char 
 19087 ;; Return value:  Size  Location     Type
 19088 ;;		None               void
 19089 ;; Registers used:
 19090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19091 ;; Tracked objects:
 19092 ;;		On entry : 0/0
 19093 ;;		On exit  : 0/0
 19094 ;;		Unchanged: 0/0
 19095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19097 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19098 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19099 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19100 ;;Total ram usage:        4 bytes
 19101 ;; Hardware stack levels used:    1
 19102 ;; Hardware stack levels required when called:    6
 19103 ;; This function calls:
 19104 ;;		_CC2500_WriteREG
 19105 ;; This function is called by:
 19106 ;;		_CC2500_PowerOnInitial
 19107 ;; This function uses a non-reentrant model
 19108 ;;
 19109                           
 19110                           
 19111                           ;psect for function _CC2500_InitSetREG
 19112  197D                     _CC2500_InitSetREG:	
 19113                           
 19114                           ;CC2500_B1.c: 133: unsigned char loop_c;
 19115                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 19116                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 19117                           
 19118                           ;incstack = 0
 19119                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19120  197D  0020               	movlb	0	; select bank0
 19121  197E  01A8               	clrf	CC2500_InitSetREG@loop_c
 19122  197F                     L15:	
 19123  197F  302F               	movlw	47
 19124  1980  0228               	subwf	CC2500_InitSetREG@loop_c,w
 19125  1981  1803               	btfsc	3,0
 19126  1982  0008               	return
 19127                           
 19128                           ;CC2500_B1.c: 137: {
 19129                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 19130  1983  0828               	movf	CC2500_InitSetREG@loop_c,w
 19131  1984  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 19132  1985  0084               	movwf	4
 19133  1986  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 19134  1987  1803               	skipnc
 19135  1988  3E01               	addlw	1
 19136  1989  0085               	movwf	5
 19137  198A  0800               	movf	0,w	;code access
 19138  198B  00A5               	movwf	??_CC2500_InitSetREG
 19139  198C  0825               	movf	??_CC2500_InitSetREG,w
 19140  198D  00A6               	movwf	CC2500_InitSetREG@temp1
 19141                           
 19142                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 19143  198E  0828               	movf	CC2500_InitSetREG@loop_c,w
 19144  198F  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 19145  1990  0084               	movwf	4
 19146  1991  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 19147  1992  1803               	skipnc
 19148  1993  3E01               	addlw	1
 19149  1994  0085               	movwf	5
 19150  1995  0800               	movf	0,w	;code access
 19151  1996  00A5               	movwf	??_CC2500_InitSetREG
 19152  1997  0825               	movf	??_CC2500_InitSetREG,w
 19153  1998  00A7               	movwf	CC2500_InitSetREG@temp2
 19154                           
 19155                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 19156  1999  0827               	movf	CC2500_InitSetREG@temp2,w
 19157  199A  00A5               	movwf	??_CC2500_InitSetREG
 19158  199B  0825               	movf	??_CC2500_InitSetREG,w
 19159  199C  00A2               	movwf	CC2500_WriteREG@value
 19160  199D  0826               	movf	CC2500_InitSetREG@temp1,w
 19161  199E  31A6  26EC  3199   	fcall	_CC2500_WriteREG
 19162  19A1  3001               	movlw	1
 19163  19A2  0020               	movlb	0	; select bank0
 19164  19A3  00A5               	movwf	??_CC2500_InitSetREG
 19165  19A4  0825               	movf	??_CC2500_InitSetREG,w
 19166  19A5  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 19167  19A6  297F               	goto	L15
 19168  19A7                     __end_of_CC2500_InitSetREG:	
 19169                           
 19170                           	psect	text125
 19171  27C1                     __ptext125:	
 19172 ;; *************** function _CC2500_InitPATable *****************
 19173 ;; Defined at:
 19174 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19175 ;; Parameters:    Size  Location     Type
 19176 ;;		None
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;  loop_d          1    7[BANK0 ] unsigned char 
 19179 ;;  temp            1    6[BANK0 ] unsigned char 
 19180 ;; Return value:  Size  Location     Type
 19181 ;;		None               void
 19182 ;; Registers used:
 19183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19184 ;; Tracked objects:
 19185 ;;		On entry : 0/0
 19186 ;;		On exit  : 0/0
 19187 ;;		Unchanged: 0/0
 19188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19191 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19192 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19193 ;;Total ram usage:        3 bytes
 19194 ;; Hardware stack levels used:    1
 19195 ;; Hardware stack levels required when called:    6
 19196 ;; This function calls:
 19197 ;;		_CC2500_WriteREG
 19198 ;; This function is called by:
 19199 ;;		_CC2500_PowerOnInitial
 19200 ;; This function uses a non-reentrant model
 19201 ;;
 19202                           
 19203                           
 19204                           ;psect for function _CC2500_InitPATable
 19205  27C1                     _CC2500_InitPATable:	
 19206                           
 19207                           ;CC2500_B1.c: 149: unsigned char loop_d;
 19208                           ;CC2500_B1.c: 150: unsigned char temp;
 19209                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 19210                           
 19211                           ;incstack = 0
 19212                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19213  27C1  0020               	movlb	0	; select bank0
 19214  27C2  01A7               	clrf	CC2500_InitPATable@loop_d
 19215  27C3                     L16:	
 19216  27C3  3008               	movlw	8
 19217  27C4  0227               	subwf	CC2500_InitPATable@loop_d,w
 19218  27C5  1803               	btfsc	3,0
 19219  27C6  0008               	return
 19220                           
 19221                           ;CC2500_B1.c: 153: {
 19222                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 19223  27C7  0827               	movf	CC2500_InitPATable@loop_d,w
 19224  27C8  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 19225  27C9  0084               	movwf	4
 19226  27CA  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 19227  27CB  1803               	skipnc
 19228  27CC  3E01               	addlw	1
 19229  27CD  0085               	movwf	5
 19230  27CE  0800               	movf	0,w	;code access
 19231  27CF  00A5               	movwf	??_CC2500_InitPATable
 19232  27D0  0825               	movf	??_CC2500_InitPATable,w
 19233  27D1  00A6               	movwf	CC2500_InitPATable@temp
 19234                           
 19235                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 19236  27D2  0826               	movf	CC2500_InitPATable@temp,w
 19237  27D3  00A5               	movwf	??_CC2500_InitPATable
 19238  27D4  0825               	movf	??_CC2500_InitPATable,w
 19239  27D5  00A2               	movwf	CC2500_WriteREG@value
 19240  27D6  303E               	movlw	62
 19241  27D7  31A6  26EC  31A7   	fcall	_CC2500_WriteREG
 19242  27DA  3001               	movlw	1
 19243  27DB  0020               	movlb	0	; select bank0
 19244  27DC  00A5               	movwf	??_CC2500_InitPATable
 19245  27DD  0825               	movf	??_CC2500_InitPATable,w
 19246  27DE  07A7               	addwf	CC2500_InitPATable@loop_d,f
 19247  27DF  2FC3               	goto	L16
 19248  27E0                     __end_of_CC2500_InitPATable:	
 19249                           
 19250                           	psect	text126
 19251  26EC                     __ptext126:	
 19252 ;; *************** function _CC2500_WriteREG *****************
 19253 ;; Defined at:
 19254 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19255 ;; Parameters:    Size  Location     Type
 19256 ;;  w_addr          1    wreg     unsigned char 
 19257 ;;  value           1    2[BANK0 ] unsigned char 
 19258 ;; Auto vars:     Size  Location     Type
 19259 ;;  w_addr          1    4[BANK0 ] unsigned char 
 19260 ;; Return value:  Size  Location     Type
 19261 ;;		None               void
 19262 ;; Registers used:
 19263 ;;		wreg, status,2, status,0, pclath, cstack
 19264 ;; Tracked objects:
 19265 ;;		On entry : 0/0
 19266 ;;		On exit  : 0/0
 19267 ;;		Unchanged: 0/0
 19268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19269 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19272 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19273 ;;Total ram usage:        3 bytes
 19274 ;; Hardware stack levels used:    1
 19275 ;; Hardware stack levels required when called:    5
 19276 ;; This function calls:
 19277 ;;		_CC2500_WriteByte
 19278 ;; This function is called by:
 19279 ;;		_CC2500_InitSetREG
 19280 ;;		_CC2500_InitPATable
 19281 ;; This function uses a non-reentrant model
 19282 ;;
 19283                           
 19284                           
 19285                           ;psect for function _CC2500_WriteREG
 19286  26EC                     _CC2500_WriteREG:	
 19287                           
 19288                           ;incstack = 0
 19289                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 19290                           ;CC2500_WriteREG@w_addr stored from wreg
 19291  26EC  0020               	movlb	0	; select bank0
 19292  26ED  00A4               	movwf	CC2500_WriteREG@w_addr
 19293                           
 19294                           ;CC2500_B1.c: 229: RC4=0;
 19295  26EE  120E               	bcf	14,4	;volatile
 19296                           
 19297                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 19298  26EF  0824               	movf	CC2500_WriteREG@w_addr,w
 19299  26F0  00A3               	movwf	??_CC2500_WriteREG
 19300  26F1  0823               	movf	??_CC2500_WriteREG,w
 19301  26F2  0021               	movlb	1	; select bank1
 19302  26F3  00BF               	movwf	_SPI0Buffer^(0+128)
 19303  26F4                     l385:	
 19304                           ;CC2500_B1.c: 231: while(RC2==1);
 19305                           
 19306  26F4  0020               	movlb	0	; select bank0
 19307  26F5  190E               	btfsc	14,2	;volatile
 19308  26F6  2EF4               	goto	l385
 19309                           
 19310                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 19311  26F7  31A6  26D3  31A6   	fcall	_CC2500_WriteByte
 19312                           
 19313                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 19314  26FA  0020               	movlb	0	; select bank0
 19315  26FB  0822               	movf	CC2500_WriteREG@value,w
 19316  26FC  00A3               	movwf	??_CC2500_WriteREG
 19317  26FD  0823               	movf	??_CC2500_WriteREG,w
 19318  26FE  0021               	movlb	1	; select bank1
 19319  26FF  00BF               	movwf	_SPI0Buffer^(0+128)
 19320                           
 19321                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 19322  2700  31A6  26D3         	fcall	_CC2500_WriteByte
 19323                           
 19324                           ;CC2500_B1.c: 235: RC4=1;
 19325  2702  0020               	movlb	0	; select bank0
 19326  2703  160E               	bsf	14,4	;volatile
 19327  2704  0008               	return
 19328  2705                     __end_of_CC2500_WriteREG:	
 19329                           
 19330                           	psect	text127
 19331  24CD                     __ptext127:	
 19332 ;; *************** function _CC2500_FrequencyCabr *****************
 19333 ;; Defined at:
 19334 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19335 ;; Parameters:    Size  Location     Type
 19336 ;;		None
 19337 ;; Auto vars:     Size  Location     Type
 19338 ;;		None
 19339 ;; Return value:  Size  Location     Type
 19340 ;;		None               void
 19341 ;; Registers used:
 19342 ;;		wreg, status,2, status,0, pclath, cstack
 19343 ;; Tracked objects:
 19344 ;;		On entry : 0/0
 19345 ;;		On exit  : 0/0
 19346 ;;		Unchanged: 0/0
 19347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19352 ;;Total ram usage:        0 bytes
 19353 ;; Hardware stack levels used:    1
 19354 ;; Hardware stack levels required when called:    6
 19355 ;; This function calls:
 19356 ;;		_CC2500_WriteCommand
 19357 ;;		_DelayTime_1us
 19358 ;; This function is called by:
 19359 ;;		_CC2500_PowerOnInitial
 19360 ;; This function uses a non-reentrant model
 19361 ;;
 19362                           
 19363                           
 19364                           ;psect for function _CC2500_FrequencyCabr
 19365  24CD                     _CC2500_FrequencyCabr:	
 19366                           
 19367                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 19368                           
 19369                           ;incstack = 0
 19370                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 19371  24CD  3033               	movlw	51
 19372  24CE  31A5  256B  31A4   	fcall	_CC2500_WriteCommand
 19373                           
 19374                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 19375  24D1  30E8               	movlw	232
 19376  24D2  0020               	movlb	0	; select bank0
 19377  24D3  00A0               	movwf	DelayTime_1us@count
 19378  24D4  3003               	movlw	3
 19379  24D5  00A1               	movwf	DelayTime_1us@count+1
 19380  24D6  3199  2131         	fcall	_DelayTime_1us
 19381  24D8  0008               	return
 19382  24D9                     __end_of_CC2500_FrequencyCabr:	
 19383                           
 19384                           	psect	text128
 19385  1931                     __ptext128:	
 19386 ;; *************** function _DelayTime_1us *****************
 19387 ;; Defined at:
 19388 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19389 ;; Parameters:    Size  Location     Type
 19390 ;;  count           2    0[BANK0 ] int 
 19391 ;; Auto vars:     Size  Location     Type
 19392 ;;  j               2    4[BANK0 ] unsigned int 
 19393 ;;  i               2    2[BANK0 ] unsigned int 
 19394 ;; Return value:  Size  Location     Type
 19395 ;;		None               void
 19396 ;; Registers used:
 19397 ;;		wreg, status,2
 19398 ;; Tracked objects:
 19399 ;;		On entry : 0/0
 19400 ;;		On exit  : 0/0
 19401 ;;		Unchanged: 0/0
 19402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19406 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19407 ;;Total ram usage:        6 bytes
 19408 ;; Hardware stack levels used:    1
 19409 ;; Hardware stack levels required when called:    4
 19410 ;; This function calls:
 19411 ;;		Nothing
 19412 ;; This function is called by:
 19413 ;;		_CC2500_PowerRST
 19414 ;;		_CC2500_FrequencyCabr
 19415 ;; This function uses a non-reentrant model
 19416 ;;
 19417                           
 19418                           
 19419                           ;psect for function _DelayTime_1us
 19420  1931                     _DelayTime_1us:	
 19421                           
 19422                           ;CC2500_B1.c: 285: unsigned int i,j;
 19423                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 19424                           
 19425                           ;incstack = 0
 19426                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 19427  1931  3001               	movlw	1
 19428  1932  0020               	movlb	0	; select bank0
 19429  1933  00A2               	movwf	DelayTime_1us@i
 19430  1934  3000               	movlw	0
 19431  1935  00A3               	movwf	DelayTime_1us@i+1
 19432  1936                     l409:	
 19433  1936  0821               	movf	DelayTime_1us@count+1,w
 19434  1937  0223               	subwf	DelayTime_1us@i+1,w
 19435  1938  1D03               	skipz
 19436  1939  293C               	goto	u8685
 19437  193A  0820               	movf	DelayTime_1us@count,w
 19438  193B  0222               	subwf	DelayTime_1us@i,w
 19439  193C                     u8685:	
 19440  193C  1803               	btfsc	3,0
 19441  193D  0008               	return
 19442                           
 19443                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 19444  193E  01A4               	clrf	DelayTime_1us@j
 19445  193F  01A5               	clrf	DelayTime_1us@j+1
 19446  1940  3000               	movlw	0
 19447  1941  0225               	subwf	DelayTime_1us@j+1,w
 19448  1942  3002               	movlw	2
 19449  1943  1903               	skipnz
 19450  1944  0224               	subwf	DelayTime_1us@j,w
 19451  1945  1803               	btfsc	3,0
 19452  1946  2952               	goto	l8947
 19453  1947                     l8945:	
 19454  1947  3001               	movlw	1
 19455  1948  07A4               	addwf	DelayTime_1us@j,f
 19456  1949  3000               	movlw	0
 19457  194A  3DA5               	addwfc	DelayTime_1us@j+1,f
 19458  194B  3000               	movlw	0
 19459  194C  0225               	subwf	DelayTime_1us@j+1,w
 19460  194D  3002               	movlw	2
 19461  194E  1903               	skipnz
 19462  194F  0224               	subwf	DelayTime_1us@j,w
 19463  1950  1C03               	skipc
 19464  1951  2947               	goto	l8945
 19465  1952                     l8947:	
 19466  1952  3001               	movlw	1
 19467  1953  07A2               	addwf	DelayTime_1us@i,f
 19468  1954  3000               	movlw	0
 19469  1955  3DA3               	addwfc	DelayTime_1us@i+1,f
 19470  1956  2936               	goto	l409
 19471  1957                     __end_of_DelayTime_1us:	
 19472                           
 19473                           	psect	text129
 19474  23D0                     __ptext129:	
 19475 ;; *************** function _CC2500_ClearTXFIFO *****************
 19476 ;; Defined at:
 19477 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19478 ;; Parameters:    Size  Location     Type
 19479 ;;		None
 19480 ;; Auto vars:     Size  Location     Type
 19481 ;;		None
 19482 ;; Return value:  Size  Location     Type
 19483 ;;		None               void
 19484 ;; Registers used:
 19485 ;;		wreg, status,2, status,0, pclath, cstack
 19486 ;; Tracked objects:
 19487 ;;		On entry : 0/0
 19488 ;;		On exit  : 0/0
 19489 ;;		Unchanged: 0/0
 19490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19495 ;;Total ram usage:        0 bytes
 19496 ;; Hardware stack levels used:    1
 19497 ;; Hardware stack levels required when called:    6
 19498 ;; This function calls:
 19499 ;;		_CC2500_WriteCommand
 19500 ;; This function is called by:
 19501 ;;		_CC2500_PowerOnInitial
 19502 ;; This function uses a non-reentrant model
 19503 ;;
 19504                           
 19505                           
 19506                           ;psect for function _CC2500_ClearTXFIFO
 19507  23D0                     _CC2500_ClearTXFIFO:	
 19508                           
 19509                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 19510                           
 19511                           ;incstack = 0
 19512                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 19513  23D0  303B               	movlw	59
 19514  23D1  31A5  256B         	fcall	_CC2500_WriteCommand
 19515  23D3  0008               	return
 19516  23D4                     __end_of_CC2500_ClearTXFIFO:	
 19517                           
 19518                           	psect	text130
 19519  23CC                     __ptext130:	
 19520 ;; *************** function _CC2500_ClearRXFIFO *****************
 19521 ;; Defined at:
 19522 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19523 ;; Parameters:    Size  Location     Type
 19524 ;;		None
 19525 ;; Auto vars:     Size  Location     Type
 19526 ;;		None
 19527 ;; Return value:  Size  Location     Type
 19528 ;;		None               void
 19529 ;; Registers used:
 19530 ;;		wreg, status,2, status,0, pclath, cstack
 19531 ;; Tracked objects:
 19532 ;;		On entry : 0/0
 19533 ;;		On exit  : 0/0
 19534 ;;		Unchanged: 0/0
 19535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19540 ;;Total ram usage:        0 bytes
 19541 ;; Hardware stack levels used:    1
 19542 ;; Hardware stack levels required when called:    6
 19543 ;; This function calls:
 19544 ;;		_CC2500_WriteCommand
 19545 ;; This function is called by:
 19546 ;;		_CC2500_PowerOnInitial
 19547 ;; This function uses a non-reentrant model
 19548 ;;
 19549                           
 19550                           
 19551                           ;psect for function _CC2500_ClearRXFIFO
 19552  23CC                     _CC2500_ClearRXFIFO:	
 19553                           
 19554                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 19555                           
 19556                           ;incstack = 0
 19557                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 19558  23CC  303A               	movlw	58
 19559  23CD  31A5  256B         	fcall	_CC2500_WriteCommand
 19560  23CF  0008               	return
 19561  23D0                     __end_of_CC2500_ClearRXFIFO:	
 19562                           
 19563                           	psect	text131
 19564  256B                     __ptext131:	
 19565 ;; *************** function _CC2500_WriteCommand *****************
 19566 ;; Defined at:
 19567 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19568 ;; Parameters:    Size  Location     Type
 19569 ;;  command         1    wreg     unsigned char 
 19570 ;; Auto vars:     Size  Location     Type
 19571 ;;  command         1    3[BANK0 ] unsigned char 
 19572 ;; Return value:  Size  Location     Type
 19573 ;;		None               void
 19574 ;; Registers used:
 19575 ;;		wreg, status,2, status,0, pclath, cstack
 19576 ;; Tracked objects:
 19577 ;;		On entry : 0/0
 19578 ;;		On exit  : 0/0
 19579 ;;		Unchanged: 0/0
 19580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19584 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19585 ;;Total ram usage:        2 bytes
 19586 ;; Hardware stack levels used:    1
 19587 ;; Hardware stack levels required when called:    5
 19588 ;; This function calls:
 19589 ;;		_CC2500_WriteByte
 19590 ;; This function is called by:
 19591 ;;		_CC2500_TxData
 19592 ;;		_CC2500_RxData
 19593 ;;		_CC2500_ClearTXFIFO
 19594 ;;		_CC2500_ClearRXFIFO
 19595 ;;		_CC2500_FrequencyCabr
 19596 ;;		_CC2500_SIDLEMode
 19597 ;;		_setRF_Main
 19598 ;;		_RF_RxDisable
 19599 ;; This function uses a non-reentrant model
 19600 ;;
 19601                           
 19602                           
 19603                           ;psect for function _CC2500_WriteCommand
 19604  256B                     _CC2500_WriteCommand:	
 19605                           
 19606                           ;incstack = 0
 19607                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 19608                           ;CC2500_WriteCommand@command stored from wreg
 19609  256B  0020               	movlb	0	; select bank0
 19610  256C  00A3               	movwf	CC2500_WriteCommand@command
 19611                           
 19612                           ;CC2500_B1.c: 255: RC4=0;
 19613  256D  120E               	bcf	14,4	;volatile
 19614                           
 19615                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 19616  256E  0823               	movf	CC2500_WriteCommand@command,w
 19617  256F  00A2               	movwf	??_CC2500_WriteCommand
 19618  2570  0822               	movf	??_CC2500_WriteCommand,w
 19619  2571  0021               	movlb	1	; select bank1
 19620  2572  00BF               	movwf	_SPI0Buffer^(0+128)
 19621  2573                     l397:	
 19622                           ;CC2500_B1.c: 258: while(RC2==1);
 19623                           
 19624  2573  0020               	movlb	0	; select bank0
 19625  2574  190E               	btfsc	14,2	;volatile
 19626  2575  2D73               	goto	l397
 19627                           
 19628                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 19629  2576  31A6  26D3         	fcall	_CC2500_WriteByte
 19630                           
 19631                           ;CC2500_B1.c: 261: RC4=1;
 19632  2578  0020               	movlb	0	; select bank0
 19633  2579  160E               	bsf	14,4	;volatile
 19634  257A  0008               	return
 19635  257B                     __end_of_CC2500_WriteCommand:	
 19636                           
 19637                           	psect	text132
 19638  26D3                     __ptext132:	
 19639 ;; *************** function _CC2500_WriteByte *****************
 19640 ;; Defined at:
 19641 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 19642 ;; Parameters:    Size  Location     Type
 19643 ;;		None
 19644 ;; Auto vars:     Size  Location     Type
 19645 ;;  loop_a          1    1[BANK0 ] unsigned char 
 19646 ;; Return value:  Size  Location     Type
 19647 ;;		None               void
 19648 ;; Registers used:
 19649 ;;		wreg, status,2, status,0
 19650 ;; Tracked objects:
 19651 ;;		On entry : 0/0
 19652 ;;		On exit  : 0/0
 19653 ;;		Unchanged: 0/0
 19654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19658 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19659 ;;Total ram usage:        2 bytes
 19660 ;; Hardware stack levels used:    1
 19661 ;; Hardware stack levels required when called:    4
 19662 ;; This function calls:
 19663 ;;		Nothing
 19664 ;; This function is called by:
 19665 ;;		_CC2500_TxData
 19666 ;;		_CC2500_RxData
 19667 ;;		_CC2500_PowerRST
 19668 ;;		_CC2500_WriteREG
 19669 ;;		_CC2500_WriteCommand
 19670 ;;		_CC2500_ReadStatus
 19671 ;;		_CC2500_ReadREG
 19672 ;; This function uses a non-reentrant model
 19673 ;;
 19674                           
 19675                           
 19676                           ;psect for function _CC2500_WriteByte
 19677  26D3                     _CC2500_WriteByte:	
 19678                           
 19679                           ;CC2500_B1.c: 195: unsigned char loop_a;
 19680                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 19681                           
 19682                           ;incstack = 0
 19683                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 19684  26D3  0020               	movlb	0	; select bank0
 19685  26D4  01A1               	clrf	CC2500_WriteByte@loop_a
 19686  26D5                     L17:	
 19687  26D5  3008               	movlw	8
 19688  26D6  0221               	subwf	CC2500_WriteByte@loop_a,w
 19689  26D7  1803               	btfsc	3,0
 19690  26D8  0008               	return
 19691                           
 19692                           ;CC2500_B1.c: 197: {
 19693                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 19694  26D9  0021               	movlb	1	; select bank1
 19695  26DA  1FBF               	btfss	_SPI0Buffer^(0+128),7
 19696  26DB  2EDF               	goto	l373
 19697                           
 19698                           ;CC2500_B1.c: 199: RC0=1;
 19699  26DC  0020               	movlb	0	; select bank0
 19700  26DD  140E               	bsf	14,0	;volatile
 19701  26DE  2EE1               	goto	l374
 19702  26DF                     l373:	
 19703                           
 19704                           ;CC2500_B1.c: 200: else
 19705                           ;CC2500_B1.c: 201: RC0=0;
 19706  26DF  0020               	movlb	0	; select bank0
 19707  26E0  100E               	bcf	14,0	;volatile
 19708  26E1                     l374:	
 19709                           
 19710                           ;CC2500_B1.c: 202: RC1=1;
 19711  26E1  148E               	bsf	14,1	;volatile
 19712                           
 19713                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 19714  26E2  1003               	clrc
 19715  26E3  0021               	movlb	1	; select bank1
 19716  26E4  0DBF               	rlf	_SPI0Buffer^(0+128),f
 19717                           
 19718                           ;CC2500_B1.c: 204: RC1=0;
 19719  26E5  0020               	movlb	0	; select bank0
 19720  26E6  108E               	bcf	14,1	;volatile
 19721  26E7  3001               	movlw	1
 19722  26E8  00A0               	movwf	??_CC2500_WriteByte
 19723  26E9  0820               	movf	??_CC2500_WriteByte,w
 19724  26EA  07A1               	addwf	CC2500_WriteByte@loop_a,f
 19725  26EB  2ED5               	goto	L17
 19726  26EC                     __end_of_CC2500_WriteByte:	
 19727                           
 19728                           	psect	text133
 19729  090F                     __ptext133:	
 19730 ;; *************** function _Buzzer_Main *****************
 19731 ;; Defined at:
 19732 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 19733 ;; Parameters:    Size  Location     Type
 19734 ;;		None
 19735 ;; Auto vars:     Size  Location     Type
 19736 ;;		None
 19737 ;; Return value:  Size  Location     Type
 19738 ;;		None               void
 19739 ;; Registers used:
 19740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19741 ;; Tracked objects:
 19742 ;;		On entry : 0/0
 19743 ;;		On exit  : 0/0
 19744 ;;		Unchanged: 0/0
 19745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19748 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19749 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19750 ;;Total ram usage:        4 bytes
 19751 ;; Hardware stack levels used:    1
 19752 ;; Hardware stack levels required when called:    4
 19753 ;; This function calls:
 19754 ;;		Nothing
 19755 ;; This function is called by:
 19756 ;;		_main
 19757 ;; This function uses a non-reentrant model
 19758 ;;
 19759                           
 19760                           
 19761                           ;psect for function _Buzzer_Main
 19762  090F                     _Buzzer_Main:	
 19763                           
 19764                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 19765                           
 19766                           ;incstack = 0
 19767                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 19768  090F  0878               	movf	_Buz,w
 19769  0910  0086               	movwf	6
 19770  0911  3001               	movlw	1	; select bank2/3
 19771  0912  0087               	movwf	7
 19772  0913  1281               	bcf	1,5
 19773  0914  0020               	movlb	0	; select bank0
 19774  0915  198D               	btfsc	13,3	;volatile
 19775  0916  1681               	bsf	1,5
 19776                           
 19777                           ;Buzzer_B1.c: 57: if(Buz->GO)
 19778  0917  0878               	movf	_Buz,w
 19779  0918  0086               	movwf	6
 19780  0919  3001               	movlw	1	; select bank2/3
 19781  091A  0087               	movwf	7
 19782  091B  1C81               	btfss	1,1
 19783  091C  0008               	return
 19784                           
 19785                           ;Buzzer_B1.c: 58: {
 19786                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 19787  091D  0878               	movf	_Buz,w
 19788  091E  3E06               	addlw	6
 19789  091F  0086               	movwf	6
 19790  0920  3001               	movlw	1	; select bank2/3
 19791  0921  0087               	movwf	7
 19792  0922  3F40               	moviw [0]fsr1
 19793  0923  0020               	movlb	0	; select bank0
 19794  0924  00A0               	movwf	??_Buzzer_Main
 19795  0925  3F41               	moviw [1]fsr1
 19796  0926  00A1               	movwf	??_Buzzer_Main+1
 19797  0927  0A78               	incf	_Buz,w
 19798  0928  0086               	movwf	6
 19799  0929  3001               	movlw	1	; select bank2/3
 19800  092A  0087               	movwf	7
 19801  092B  3F40               	moviw [0]fsr1
 19802  092C  00A2               	movwf	??_Buzzer_Main+2
 19803  092D  3F41               	moviw [1]fsr1
 19804  092E  00A3               	movwf	??_Buzzer_Main+3
 19805  092F  0821               	movf	??_Buzzer_Main+1,w
 19806  0930  0223               	subwf	??_Buzzer_Main+3,w
 19807  0931  1D03               	skipz
 19808  0932  2935               	goto	u7045
 19809  0933  0820               	movf	??_Buzzer_Main,w
 19810  0934  0222               	subwf	??_Buzzer_Main+2,w
 19811  0935                     u7045:	
 19812  0935  1C03               	skipc
 19813  0936  0008               	return
 19814                           
 19815                           ;Buzzer_B1.c: 61: {
 19816                           ;Buzzer_B1.c: 62: Buz->Time=0;
 19817  0937  0A78               	incf	_Buz,w
 19818  0938  0086               	movwf	6
 19819  0939  3001               	movlw	1	; select bank2/3
 19820  093A  0087               	movwf	7
 19821  093B  3000               	movlw	0
 19822  093C  3FC0               	movwi [0]fsr1
 19823  093D  3FC1               	movwi [1]fsr1
 19824                           
 19825                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 19826  093E  0878               	movf	_Buz,w
 19827  093F  0086               	movwf	6
 19828  0940  3001               	movlw	1	; select bank2/3
 19829  0941  0087               	movwf	7
 19830  0942  1A81               	btfsc	1,5
 19831  0943  29A9               	goto	l7917
 19832                           
 19833                           ;Buzzer_B1.c: 64: {
 19834                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 19835  0944  0878               	movf	_Buz,w
 19836  0945  3E03               	addlw	3
 19837  0946  0086               	movwf	6
 19838  0947  3001               	movlw	1	; select bank2/3
 19839  0948  0087               	movwf	7
 19840  0949  0881               	movf	1,f
 19841  094A  1D03               	skipz
 19842  094B  29A2               	goto	l7913
 19843                           
 19844                           ;Buzzer_B1.c: 66: {
 19845                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 19846  094C  0878               	movf	_Buz,w
 19847  094D  0086               	movwf	6
 19848  094E  3001               	movlw	1	; select bank2/3
 19849  094F  0087               	movwf	7
 19850  0950  1D81               	btfss	1,3
 19851  0951  2974               	goto	l7905
 19852                           
 19853                           ;Buzzer_B1.c: 68: {
 19854                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 19855  0952  0878               	movf	_Buz,w
 19856  0953  0086               	movwf	6
 19857  0954  3001               	movlw	1	; select bank2/3
 19858  0955  0087               	movwf	7
 19859  0956  1181               	bcf	1,3
 19860                           
 19861                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 19862  0957  0878               	movf	_Buz,w
 19863  0958  3E04               	addlw	4
 19864  0959  0086               	movwf	6
 19865  095A  3001               	movlw	1	; select bank2/3
 19866  095B  0087               	movwf	7
 19867  095C  0801               	movf	1,w
 19868  095D  00A0               	movwf	??_Buzzer_Main
 19869  095E  0878               	movf	_Buz,w
 19870  095F  3E03               	addlw	3
 19871  0960  0086               	movwf	6
 19872  0961  3001               	movlw	1	; select bank2/3
 19873  0962  0087               	movwf	7
 19874  0963  0820               	movf	??_Buzzer_Main,w
 19875  0964  0081               	movwf	1
 19876                           
 19877                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 19878  0965  0878               	movf	_Buz,w
 19879  0966  3E08               	addlw	8
 19880  0967  0086               	movwf	6
 19881  0968  3001               	movlw	1	; select bank2/3
 19882  0969  0087               	movwf	7
 19883  096A  0878               	movf	_Buz,w
 19884  096B  3E06               	addlw	6
 19885  096C  0084               	movwf	4
 19886  096D  3001               	movlw	1	; select bank2/3
 19887  096E  0085               	movwf	5
 19888  096F  3F40               	moviw [0]fsr1
 19889  0970  3F80               	movwi [0]fsr0
 19890  0971  3F41               	moviw [1]fsr1
 19891  0972  3F81               	movwi [1]fsr0
 19892                           
 19893                           ;Buzzer_B1.c: 72: }
 19894  0973  0008               	return
 19895  0974                     l7905:	
 19896                           
 19897                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 19898  0974  0878               	movf	_Buz,w
 19899  0975  0086               	movwf	6
 19900  0976  3001               	movlw	1	; select bank2/3
 19901  0977  0087               	movwf	7
 19902  0978  1E01               	btfss	1,4
 19903  0979  299C               	goto	l7911
 19904                           
 19905                           ;Buzzer_B1.c: 74: {
 19906                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 19907  097A  0878               	movf	_Buz,w
 19908  097B  0086               	movwf	6
 19909  097C  3001               	movlw	1	; select bank2/3
 19910  097D  0087               	movwf	7
 19911  097E  1201               	bcf	1,4
 19912                           
 19913                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 19914  097F  0878               	movf	_Buz,w
 19915  0980  3E05               	addlw	5
 19916  0981  0086               	movwf	6
 19917  0982  3001               	movlw	1	; select bank2/3
 19918  0983  0087               	movwf	7
 19919  0984  0801               	movf	1,w
 19920  0985  00A0               	movwf	??_Buzzer_Main
 19921  0986  0878               	movf	_Buz,w
 19922  0987  3E03               	addlw	3
 19923  0988  0086               	movwf	6
 19924  0989  3001               	movlw	1	; select bank2/3
 19925  098A  0087               	movwf	7
 19926  098B  0820               	movf	??_Buzzer_Main,w
 19927  098C  0081               	movwf	1
 19928                           
 19929                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 19930  098D  0878               	movf	_Buz,w
 19931  098E  3E0A               	addlw	10
 19932  098F  0086               	movwf	6
 19933  0990  3001               	movlw	1	; select bank2/3
 19934  0991  0087               	movwf	7
 19935  0992  0878               	movf	_Buz,w
 19936  0993  3E06               	addlw	6
 19937  0994  0084               	movwf	4
 19938  0995  3001               	movlw	1	; select bank2/3
 19939  0996  0085               	movwf	5
 19940  0997  3F40               	moviw [0]fsr1
 19941  0998  3F80               	movwi [0]fsr0
 19942  0999  3F41               	moviw [1]fsr1
 19943  099A  3F81               	movwi [1]fsr0
 19944                           
 19945                           ;Buzzer_B1.c: 78: }
 19946  099B  0008               	return
 19947  099C                     l7911:	
 19948                           
 19949                           ;Buzzer_B1.c: 79: else
 19950                           ;Buzzer_B1.c: 80: {
 19951                           ;Buzzer_B1.c: 81: Buz->GO=0;
 19952  099C  0878               	movf	_Buz,w
 19953  099D  0086               	movwf	6
 19954  099E  3001               	movlw	1	; select bank2/3
 19955  099F  0087               	movwf	7
 19956  09A0  1081               	bcf	1,1
 19957                           
 19958                           ;Buzzer_B1.c: 82: }
 19959                           ;Buzzer_B1.c: 83: }
 19960  09A1  0008               	return
 19961  09A2                     l7913:	
 19962                           
 19963                           ;Buzzer_B1.c: 84: else
 19964                           ;Buzzer_B1.c: 85: {
 19965                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 19966  09A2  0878               	movf	_Buz,w
 19967  09A3  0086               	movwf	6
 19968  09A4  3001               	movlw	1	; select bank2/3
 19969  09A5  0087               	movwf	7
 19970  09A6  1681               	bsf	1,5
 19971                           
 19972                           ;Buzzer_B1.c: 88: RB3=1;
 19973  09A7  158D               	bsf	13,3	;volatile
 19974                           
 19975                           ;Buzzer_B1.c: 89: }
 19976                           ;Buzzer_B1.c: 90: }
 19977  09A8  0008               	return
 19978  09A9                     l7917:	
 19979                           
 19980                           ;Buzzer_B1.c: 91: else
 19981                           ;Buzzer_B1.c: 92: {
 19982                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 19983  09A9  0878               	movf	_Buz,w
 19984  09AA  0086               	movwf	6
 19985  09AB  3001               	movlw	1	; select bank2/3
 19986  09AC  0087               	movwf	7
 19987  09AD  1281               	bcf	1,5
 19988                           
 19989                           ;Buzzer_B1.c: 95: RB3=0;
 19990  09AE  118D               	bcf	13,3	;volatile
 19991                           
 19992                           ;Buzzer_B1.c: 97: Buz->Count--;
 19993  09AF  0878               	movf	_Buz,w
 19994  09B0  3E03               	addlw	3
 19995  09B1  0086               	movwf	6
 19996  09B2  3001               	movlw	1	; select bank2/3
 19997  09B3  0087               	movwf	7
 19998  09B4  3001               	movlw	1
 19999  09B5  0281               	subwf	1,f
 20000  09B6  0008               	return
 20001  09B7                     __end_of_Buzzer_Main:	
 20002                           
 20003                           	psect	text134
 20004  2452                     __ptext134:	
 20005 ;; *************** function _Buzzer_Initialization *****************
 20006 ;; Defined at:
 20007 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 20008 ;; Parameters:    Size  Location     Type
 20009 ;;		None
 20010 ;; Auto vars:     Size  Location     Type
 20011 ;;		None
 20012 ;; Return value:  Size  Location     Type
 20013 ;;		None               void
 20014 ;; Registers used:
 20015 ;;		wreg, fsr1l, fsr1h
 20016 ;; Tracked objects:
 20017 ;;		On entry : 0/0
 20018 ;;		On exit  : 0/0
 20019 ;;		Unchanged: 0/0
 20020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20024 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20025 ;;Total ram usage:        1 bytes
 20026 ;; Hardware stack levels used:    1
 20027 ;; Hardware stack levels required when called:    4
 20028 ;; This function calls:
 20029 ;;		Nothing
 20030 ;; This function is called by:
 20031 ;;		_main
 20032 ;; This function uses a non-reentrant model
 20033 ;;
 20034                           
 20035                           
 20036                           ;psect for function _Buzzer_Initialization
 20037  2452                     _Buzzer_Initialization:	
 20038                           
 20039                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 20040                           
 20041                           ;incstack = 0
 20042                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 20043  2452  3048               	movlw	_Buz1& (0+255)
 20044  2453  0020               	movlb	0	; select bank0
 20045  2454  00A0               	movwf	??_Buzzer_Initialization
 20046  2455  0820               	movf	??_Buzzer_Initialization,w
 20047  2456  00F8               	movwf	_Buz
 20048                           
 20049                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 20050  2457  0878               	movf	_Buz,w
 20051  2458  0086               	movwf	6
 20052  2459  3001               	movlw	1	; select bank2/3
 20053  245A  0087               	movwf	7
 20054  245B  1401               	bsf	1,0
 20055  245C  0008               	return
 20056  245D                     __end_of_Buzzer_Initialization:	
 20057                           
 20058                           	psect	intentry
 20059  0004                     __pintentry:	
 20060 ;; *************** function _ISR *****************
 20061 ;; Defined at:
 20062 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 20063 ;; Parameters:    Size  Location     Type
 20064 ;;		None
 20065 ;; Auto vars:     Size  Location     Type
 20066 ;;		None
 20067 ;; Return value:  Size  Location     Type
 20068 ;;		None               void
 20069 ;; Registers used:
 20070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20071 ;; Tracked objects:
 20072 ;;		On entry : 0/0
 20073 ;;		On exit  : 0/0
 20074 ;;		Unchanged: 0/0
 20075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20080 ;;Total ram usage:        1 bytes
 20081 ;; Hardware stack levels used:    1
 20082 ;; Hardware stack levels required when called:    3
 20083 ;; This function calls:
 20084 ;;		_INT_ISR
 20085 ;;		_IOC_ISR
 20086 ;;		_TMR0_ISR
 20087 ;; This function is called by:
 20088 ;;		Interrupt level 1
 20089 ;; This function uses a non-reentrant model
 20090 ;;
 20091                           
 20092  0004                     _ISR:	
 20093                           
 20094                           ;incstack = 0
 20095                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20096  0004  147E               	bsf	126,0	;set compiler interrupt flag
 20097  0005  3180               	pagesel	$
 20098  0006  0020               	movlb	0	; select bank0
 20099  0007  087F               	movf	127,w
 20100  0008  00F7               	movwf	??_ISR
 20101                           
 20102                           ;MCU_16f1518_B1.c: 58: IOC_ISR();
 20103  0009  3199  210C  3180   	fcall	_IOC_ISR
 20104                           
 20105                           ;MCU_16f1518_B1.c: 60: TMR0_ISR();
 20106  000C  3180  2059  3180   	fcall	_TMR0_ISR
 20107                           
 20108                           ;MCU_16f1518_B1.c: 62: ;;
 20109                           ;MCU_16f1518_B1.c: 66: INT_ISR();
 20110  000F  31A4  24C1         	fcall	_INT_ISR
 20111  0011  0877               	movf	??_ISR,w
 20112  0012  0020               	movlb	0	; select bank0
 20113  0013  00FF               	movwf	127
 20114  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 20115  0015  0009               	retfie
 20116  0016                     __end_of_ISR:	
 20117                           
 20118                           	psect	text136
 20119  0059                     __ptext136:	
 20120 ;; *************** function _TMR0_ISR *****************
 20121 ;; Defined at:
 20122 ;;		line 82 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 20123 ;; Parameters:    Size  Location     Type
 20124 ;;		None
 20125 ;; Auto vars:     Size  Location     Type
 20126 ;;		None
 20127 ;; Return value:  Size  Location     Type
 20128 ;;		None               void
 20129 ;; Registers used:
 20130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20131 ;; Tracked objects:
 20132 ;;		On entry : 0/0
 20133 ;;		On exit  : 0/0
 20134 ;;		Unchanged: 0/0
 20135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20138 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20140 ;;Total ram usage:        4 bytes
 20141 ;; Hardware stack levels used:    1
 20142 ;; Hardware stack levels required when called:    1
 20143 ;; This function calls:
 20144 ;;		i1_setLoad_StatusOff
 20145 ;; This function is called by:
 20146 ;;		_ISR
 20147 ;; This function uses a non-reentrant model
 20148 ;;
 20149                           
 20150                           
 20151                           ;psect for function _TMR0_ISR
 20152  0059                     _TMR0_ISR:	
 20153                           
 20154                           ;MCU_16f1518_B1.c: 84: if(TMR0IE && TMR0IF)
 20155                           
 20156                           ;incstack = 0
 20157                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20158  0059  1E8B               	btfss	11,5	;volatile
 20159  005A  0008               	return
 20160  005B  1D0B               	btfss	11,2	;volatile
 20161  005C  0008               	return
 20162                           
 20163                           ;MCU_16f1518_B1.c: 85: {
 20164                           ;MCU_16f1518_B1.c: 86: TMR0=(256-90);
 20165  005D  30A6               	movlw	166
 20166  005E  0020               	movlb	0	; select bank0
 20167  005F  0095               	movwf	21	;volatile
 20168                           
 20169                           ;MCU_16f1518_B1.c: 87: TMR0IF=0;
 20170  0060  110B               	bcf	11,2	;volatile
 20171                           
 20172                           ;MCU_16f1518_B1.c: 100: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLight
      +                          s11->Count >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count
      +                          =0; DimmerLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RA7=1
      +                          ; ;; } } }
 20173  0061  0879               	movf	_DimmerLights11,w
 20174  0062  0086               	movwf	6
 20175  0063  3001               	movlw	1	; select bank2/3
 20176  0064  0087               	movwf	7
 20177  0065  1C01               	btfss	1,0
 20178  0066  28B1               	goto	i1l8283
 20179  0067  3001               	movlw	1
 20180  0068  00F3               	movwf	??_TMR0_ISR
 20181  0069  0879               	movf	_DimmerLights11,w
 20182  006A  3E03               	addlw	3
 20183  006B  0086               	movwf	6
 20184  006C  3001               	movlw	1	; select bank2/3
 20185  006D  0087               	movwf	7
 20186  006E  0873               	movf	??_TMR0_ISR,w
 20187  006F  0781               	addwf	1,f
 20188  0070  0021               	movlb	1	; select bank1
 20189  0071  0839               	movf	_Dimmer^(0+128),w
 20190  0072  3E02               	addlw	2
 20191  0073  0086               	movwf	6
 20192  0074  0187               	clrf	7
 20193  0075  0801               	movf	1,w
 20194  0076  00F3               	movwf	??_TMR0_ISR
 20195  0077  01F4               	clrf	??_TMR0_ISR+1
 20196  0078  09F3               	comf	??_TMR0_ISR,f
 20197  0079  09F4               	comf	??_TMR0_ISR+1,f
 20198  007A  0AF3               	incf	??_TMR0_ISR,f
 20199  007B  1903               	skipnz
 20200  007C  0AF4               	incf	??_TMR0_ISR+1,f
 20201  007D  0879               	movf	_DimmerLights11,w
 20202  007E  3E04               	addlw	4
 20203  007F  0086               	movwf	6
 20204  0080  3001               	movlw	1	; select bank2/3
 20205  0081  0087               	movwf	7
 20206  0082  0801               	movf	1,w
 20207  0083  0773               	addwf	??_TMR0_ISR,w
 20208  0084  00F5               	movwf	??_TMR0_ISR+2
 20209  0085  0874               	movf	??_TMR0_ISR+1,w
 20210  0086  1803               	skipnc
 20211  0087  0A74               	incf	??_TMR0_ISR+1,w
 20212  0088  00F6               	movwf	??_TMR0_ISR+3
 20213  0089  0879               	movf	_DimmerLights11,w
 20214  008A  3E03               	addlw	3
 20215  008B  0086               	movwf	6
 20216  008C  3001               	movlw	1	; select bank2/3
 20217  008D  0087               	movwf	7
 20218  008E  0876               	movf	??_TMR0_ISR+3,w
 20219  008F  3A80               	xorlw	128
 20220  0090  3C80               	sublw	128
 20221  0091  1D03               	skipz
 20222  0092  2895               	goto	u760_25
 20223  0093  0875               	movf	??_TMR0_ISR+2,w
 20224  0094  0201               	subwf	1,w
 20225  0095                     u760_25:	
 20226  0095  1C03               	skipc
 20227  0096  29EB               	goto	i1l8349
 20228  0097  0879               	movf	_DimmerLights11,w
 20229  0098  3E03               	addlw	3
 20230  0099  0086               	movwf	6
 20231  009A  3001               	movlw	1	; select bank2/3
 20232  009B  0087               	movwf	7
 20233  009C  0181               	clrf	1
 20234  009D  0879               	movf	_DimmerLights11,w
 20235  009E  0086               	movwf	6
 20236  009F  3001               	movlw	1	; select bank2/3
 20237  00A0  0087               	movwf	7
 20238  00A1  1001               	bcf	1,0
 20239  00A2  0879               	movf	_DimmerLights11,w
 20240  00A3  3E07               	addlw	7
 20241  00A4  0086               	movwf	6
 20242  00A5  3001               	movlw	1	; select bank2/3
 20243  00A6  0087               	movwf	7
 20244  00A7  1401               	bsf	1,0
 20245  00A8  0879               	movf	_DimmerLights11,w
 20246  00A9  0086               	movwf	6
 20247  00AA  3001               	movlw	1	; select bank2/3
 20248  00AB  0087               	movwf	7
 20249  00AC  1F01               	btfss	1,6
 20250  00AD  29EB               	goto	i1l8349
 20251  00AE  0020               	movlb	0	; select bank0
 20252  00AF  178C               	bsf	12,7	;volatile
 20253  00B0  29EB               	goto	i1l8349
 20254  00B1                     i1l8283:	
 20255  00B1  0879               	movf	_DimmerLights11,w
 20256  00B2  3E07               	addlw	7
 20257  00B3  0086               	movwf	6
 20258  00B4  3001               	movlw	1	; select bank2/3
 20259  00B5  0087               	movwf	7
 20260  00B6  1C01               	btfss	1,0
 20261  00B7  29B6               	goto	i1l8341
 20262  00B8  0879               	movf	_DimmerLights11,w
 20263  00B9  3E07               	addlw	7
 20264  00BA  0086               	movwf	6
 20265  00BB  3001               	movlw	1	; select bank2/3
 20266  00BC  0087               	movwf	7
 20267  00BD  1001               	bcf	1,0
 20268  00BE  0879               	movf	_DimmerLights11,w
 20269  00BF  0086               	movwf	6
 20270  00C0  3001               	movlw	1	; select bank2/3
 20271  00C1  0087               	movwf	7
 20272  00C2  1C81               	btfss	1,1
 20273  00C3  29B6               	goto	i1l8341
 20274  00C4  3001               	movlw	1
 20275  00C5  00F3               	movwf	??_TMR0_ISR
 20276  00C6  0A79               	incf	_DimmerLights11,w
 20277  00C7  0086               	movwf	6
 20278  00C8  3001               	movlw	1	; select bank2/3
 20279  00C9  0087               	movwf	7
 20280  00CA  0873               	movf	??_TMR0_ISR,w
 20281  00CB  0781               	addwf	1,f
 20282  00CC  0A79               	incf	_DimmerLights11,w
 20283  00CD  0086               	movwf	6
 20284  00CE  3001               	movlw	1	; select bank2/3
 20285  00CF  0087               	movwf	7
 20286  00D0  0879               	movf	_DimmerLights11,w
 20287  00D1  3E02               	addlw	2
 20288  00D2  0084               	movwf	4
 20289  00D3  3001               	movlw	1	; select bank2/3
 20290  00D4  0085               	movwf	5
 20291  00D5  0800               	movf	0,w
 20292  00D6  0201               	subwf	1,w
 20293  00D7  1C03               	skipc
 20294  00D8  29B6               	goto	i1l8341
 20295  00D9  0A79               	incf	_DimmerLights11,w
 20296  00DA  0086               	movwf	6
 20297  00DB  3001               	movlw	1	; select bank2/3
 20298  00DC  0087               	movwf	7
 20299  00DD  0181               	clrf	1
 20300  00DE  0879               	movf	_DimmerLights11,w
 20301  00DF  0086               	movwf	6
 20302  00E0  3001               	movlw	1	; select bank2/3
 20303  00E1  0087               	movwf	7
 20304  00E2  1D81               	btfss	1,3
 20305  00E3  291A               	goto	i1l8309
 20306  00E4  0879               	movf	_DimmerLights11,w
 20307  00E5  0086               	movwf	6
 20308  00E6  3001               	movlw	1	; select bank2/3
 20309  00E7  0087               	movwf	7
 20310  00E8  1A01               	btfsc	1,4
 20311  00E9  2901               	goto	i1l8303
 20312  00EA  0879               	movf	_DimmerLights11,w
 20313  00EB  3E04               	addlw	4
 20314  00EC  0086               	movwf	6
 20315  00ED  3001               	movlw	1	; select bank2/3
 20316  00EE  0087               	movwf	7
 20317  00EF  3010               	movlw	16
 20318  00F0  0201               	subwf	1,w
 20319  00F1  1C03               	skipc
 20320  00F2  28FB               	goto	i1l8301
 20321  00F3  0879               	movf	_DimmerLights11,w
 20322  00F4  3E04               	addlw	4
 20323  00F5  0086               	movwf	6
 20324  00F6  3001               	movlw	1	; select bank2/3
 20325  00F7  0087               	movwf	7
 20326  00F8  3001               	movlw	1
 20327  00F9  0281               	subwf	1,f
 20328  00FA  29B6               	goto	i1l8341
 20329  00FB                     i1l8301:	
 20330  00FB  0879               	movf	_DimmerLights11,w
 20331  00FC  0086               	movwf	6
 20332  00FD  3001               	movlw	1	; select bank2/3
 20333  00FE  0087               	movwf	7
 20334  00FF  1601               	bsf	1,4
 20335  0100  29B6               	goto	i1l8341
 20336  0101                     i1l8303:	
 20337  0101  0879               	movf	_DimmerLights11,w
 20338  0102  3E04               	addlw	4
 20339  0103  0086               	movwf	6
 20340  0104  3001               	movlw	1	; select bank2/3
 20341  0105  0087               	movwf	7
 20342  0106  307F               	movlw	127
 20343  0107  0201               	subwf	1,w
 20344  0108  1803               	skipnc
 20345  0109  2914               	goto	i1l8307
 20346  010A  3001               	movlw	1
 20347  010B  00F3               	movwf	??_TMR0_ISR
 20348  010C  0879               	movf	_DimmerLights11,w
 20349  010D  3E04               	addlw	4
 20350  010E  0086               	movwf	6
 20351  010F  3001               	movlw	1	; select bank2/3
 20352  0110  0087               	movwf	7
 20353  0111  0873               	movf	??_TMR0_ISR,w
 20354  0112  0781               	addwf	1,f
 20355  0113  29B6               	goto	i1l8341
 20356  0114                     i1l8307:	
 20357  0114  0879               	movf	_DimmerLights11,w
 20358  0115  0086               	movwf	6
 20359  0116  3001               	movlw	1	; select bank2/3
 20360  0117  0087               	movwf	7
 20361  0118  1201               	bcf	1,4
 20362  0119  29B6               	goto	i1l8341
 20363  011A                     i1l8309:	
 20364  011A  0879               	movf	_DimmerLights11,w
 20365  011B  0086               	movwf	6
 20366  011C  3001               	movlw	1	; select bank2/3
 20367  011D  0087               	movwf	7
 20368  011E  1D01               	btfss	1,2
 20369  011F  2961               	goto	i1l8323
 20370  0120  0879               	movf	_DimmerLights11,w
 20371  0121  3E05               	addlw	5
 20372  0122  0086               	movwf	6
 20373  0123  3001               	movlw	1	; select bank2/3
 20374  0124  0087               	movwf	7
 20375  0125  0879               	movf	_DimmerLights11,w
 20376  0126  3E04               	addlw	4
 20377  0127  0084               	movwf	4
 20378  0128  3001               	movlw	1	; select bank2/3
 20379  0129  0085               	movwf	5
 20380  012A  0800               	movf	0,w
 20381  012B  0201               	subwf	1,w
 20382  012C  1803               	skipnc
 20383  012D  2936               	goto	i1l8315
 20384  012E  0879               	movf	_DimmerLights11,w
 20385  012F  3E04               	addlw	4
 20386  0130  0086               	movwf	6
 20387  0131  3001               	movlw	1	; select bank2/3
 20388  0132  0087               	movwf	7
 20389  0133  3001               	movlw	1
 20390  0134  0281               	subwf	1,f
 20391  0135  294D               	goto	i1l8319
 20392  0136                     i1l8315:	
 20393  0136  0879               	movf	_DimmerLights11,w
 20394  0137  3E04               	addlw	4
 20395  0138  0086               	movwf	6
 20396  0139  3001               	movlw	1	; select bank2/3
 20397  013A  0087               	movwf	7
 20398  013B  0879               	movf	_DimmerLights11,w
 20399  013C  3E05               	addlw	5
 20400  013D  0084               	movwf	4
 20401  013E  3001               	movlw	1	; select bank2/3
 20402  013F  0085               	movwf	5
 20403  0140  0800               	movf	0,w
 20404  0141  0201               	subwf	1,w
 20405  0142  1803               	skipnc
 20406  0143  294D               	goto	i1l8319
 20407  0144  3001               	movlw	1
 20408  0145  00F3               	movwf	??_TMR0_ISR
 20409  0146  0879               	movf	_DimmerLights11,w
 20410  0147  3E04               	addlw	4
 20411  0148  0086               	movwf	6
 20412  0149  3001               	movlw	1	; select bank2/3
 20413  014A  0087               	movwf	7
 20414  014B  0873               	movf	??_TMR0_ISR,w
 20415  014C  0781               	addwf	1,f
 20416  014D                     i1l8319:	
 20417  014D  0879               	movf	_DimmerLights11,w
 20418  014E  3E05               	addlw	5
 20419  014F  0086               	movwf	6
 20420  0150  3001               	movlw	1	; select bank2/3
 20421  0151  0087               	movwf	7
 20422  0152  0879               	movf	_DimmerLights11,w
 20423  0153  3E04               	addlw	4
 20424  0154  0084               	movwf	4
 20425  0155  3001               	movlw	1	; select bank2/3
 20426  0156  0085               	movwf	5
 20427  0157  0800               	movf	0,w
 20428  0158  0601               	xorwf	1,w
 20429  0159  1D03               	skipz
 20430  015A  29B6               	goto	i1l8341
 20431  015B  0879               	movf	_DimmerLights11,w
 20432  015C  0086               	movwf	6
 20433  015D  3001               	movlw	1	; select bank2/3
 20434  015E  0087               	movwf	7
 20435  015F  1101               	bcf	1,2
 20436  0160  297C               	goto	i1l8329
 20437  0161                     i1l8323:	
 20438  0161  0879               	movf	_DimmerLights11,w
 20439  0162  0086               	movwf	6
 20440  0163  3001               	movlw	1	; select bank2/3
 20441  0164  0087               	movwf	7
 20442  0165  1E81               	btfss	1,5
 20443  0166  2982               	goto	i1l8331
 20444  0167  0879               	movf	_DimmerLights11,w
 20445  0168  3E04               	addlw	4
 20446  0169  0086               	movwf	6
 20447  016A  3001               	movlw	1	; select bank2/3
 20448  016B  0087               	movwf	7
 20449  016C  3001               	movlw	1
 20450  016D  0281               	subwf	1,f
 20451  016E  0879               	movf	_DimmerLights11,w
 20452  016F  3E05               	addlw	5
 20453  0170  0086               	movwf	6
 20454  0171  3001               	movlw	1	; select bank2/3
 20455  0172  0087               	movwf	7
 20456  0173  0879               	movf	_DimmerLights11,w
 20457  0174  3E04               	addlw	4
 20458  0175  0084               	movwf	4
 20459  0176  3001               	movlw	1	; select bank2/3
 20460  0177  0085               	movwf	5
 20461  0178  0800               	movf	0,w
 20462  0179  0201               	subwf	1,w
 20463  017A  1C03               	skipc
 20464  017B  29B6               	goto	i1l8341
 20465  017C                     i1l8329:	
 20466  017C  0879               	movf	_DimmerLights11,w
 20467  017D  0086               	movwf	6
 20468  017E  3001               	movlw	1	; select bank2/3
 20469  017F  0087               	movwf	7
 20470  0180  1081               	bcf	1,1
 20471  0181  29B6               	goto	i1l8341
 20472  0182                     i1l8331:	
 20473  0182  3001               	movlw	1
 20474  0183  00F3               	movwf	??_TMR0_ISR
 20475  0184  0879               	movf	_DimmerLights11,w
 20476  0185  3E04               	addlw	4
 20477  0186  0086               	movwf	6
 20478  0187  3001               	movlw	1	; select bank2/3
 20479  0188  0087               	movwf	7
 20480  0189  0873               	movf	??_TMR0_ISR,w
 20481  018A  0781               	addwf	1,f
 20482  018B  0879               	movf	_DimmerLights11,w
 20483  018C  3E04               	addlw	4
 20484  018D  0086               	movwf	6
 20485  018E  3001               	movlw	1	; select bank2/3
 20486  018F  0087               	movwf	7
 20487  0190  0879               	movf	_DimmerLights11,w
 20488  0191  3E06               	addlw	6
 20489  0192  0084               	movwf	4
 20490  0193  3001               	movlw	1	; select bank2/3
 20491  0194  0085               	movwf	5
 20492  0195  0800               	movf	0,w
 20493  0196  0201               	subwf	1,w
 20494  0197  1C03               	skipc
 20495  0198  29B6               	goto	i1l8341
 20496  0199  0879               	movf	_DimmerLights11,w
 20497  019A  0086               	movwf	6
 20498  019B  3001               	movlw	1	; select bank2/3
 20499  019C  0087               	movwf	7
 20500  019D  1081               	bcf	1,1
 20501  019E  0879               	movf	_DimmerLights11,w
 20502  019F  0086               	movwf	6
 20503  01A0  3001               	movlw	1	; select bank2/3
 20504  01A1  0087               	movwf	7
 20505  01A2  1301               	bcf	1,6
 20506  01A3  0879               	movf	_DimmerLights11,w
 20507  01A4  3E0C               	addlw	12
 20508  01A5  0086               	movwf	6
 20509  01A6  3001               	movlw	1	; select bank2/3
 20510  01A7  0087               	movwf	7
 20511  01A8  1401               	bsf	1,0
 20512  01A9  0021               	movlb	1	; select bank1
 20513  01AA  0839               	movf	_Dimmer^(0+128),w
 20514  01AB  0086               	movwf	6
 20515  01AC  0187               	clrf	7
 20516  01AD  1401               	bsf	1,0
 20517  01AE  0020               	movlb	0	; select bank0
 20518  01AF  118C               	bcf	12,3	;volatile
 20519  01B0  01F1               	clrf	i1setLoad_StatusOff@command
 20520  01B1  0AF1               	incf	i1setLoad_StatusOff@command,f
 20521  01B2  3001               	movlw	1
 20522  01B3  319A  225A  3180   	fcall	i1_setLoad_StatusOff
 20523  01B6                     i1l8341:	
 20524  01B6  0020               	movlb	0	; select bank0
 20525  01B7  1F8C               	btfss	12,7	;volatile
 20526  01B8  29EB               	goto	i1l8349
 20527  01B9  3001               	movlw	1
 20528  01BA  00F3               	movwf	??_TMR0_ISR
 20529  01BB  0879               	movf	_DimmerLights11,w
 20530  01BC  3E08               	addlw	8
 20531  01BD  0086               	movwf	6
 20532  01BE  3001               	movlw	1	; select bank2/3
 20533  01BF  0087               	movwf	7
 20534  01C0  0873               	movf	??_TMR0_ISR,w
 20535  01C1  0781               	addwf	1,f
 20536  01C2  0879               	movf	_DimmerLights11,w
 20537  01C3  3E04               	addlw	4
 20538  01C4  0086               	movwf	6
 20539  01C5  3001               	movlw	1	; select bank2/3
 20540  01C6  0087               	movwf	7
 20541  01C7  0801               	movf	1,w
 20542  01C8  00F3               	movwf	??_TMR0_ISR
 20543  01C9  01F4               	clrf	??_TMR0_ISR+1
 20544  01CA  09F3               	comf	??_TMR0_ISR,f
 20545  01CB  09F4               	comf	??_TMR0_ISR+1,f
 20546  01CC  0AF3               	incf	??_TMR0_ISR,f
 20547  01CD  1903               	skipnz
 20548  01CE  0AF4               	incf	??_TMR0_ISR+1,f
 20549  01CF  0873               	movf	??_TMR0_ISR,w
 20550  01D0  3E78               	addlw	120
 20551  01D1  00F5               	movwf	??_TMR0_ISR+2
 20552  01D2  3000               	movlw	0
 20553  01D3  3D74               	addwfc	??_TMR0_ISR+1,w
 20554  01D4  00F6               	movwf	??_TMR0_ISR+3
 20555  01D5  0879               	movf	_DimmerLights11,w
 20556  01D6  3E08               	addlw	8
 20557  01D7  0086               	movwf	6
 20558  01D8  3001               	movlw	1	; select bank2/3
 20559  01D9  0087               	movwf	7
 20560  01DA  0876               	movf	??_TMR0_ISR+3,w
 20561  01DB  3A80               	xorlw	128
 20562  01DC  3C80               	sublw	128
 20563  01DD  1D03               	skipz
 20564  01DE  29E1               	goto	u777_25
 20565  01DF  0875               	movf	??_TMR0_ISR+2,w
 20566  01E0  0201               	subwf	1,w
 20567  01E1                     u777_25:	
 20568  01E1  1C03               	skipc
 20569  01E2  29EB               	goto	i1l8349
 20570  01E3  0879               	movf	_DimmerLights11,w
 20571  01E4  3E08               	addlw	8
 20572  01E5  0086               	movwf	6
 20573  01E6  3001               	movlw	1	; select bank2/3
 20574  01E7  0087               	movwf	7
 20575  01E8  0181               	clrf	1
 20576  01E9  0020               	movlb	0	; select bank0
 20577  01EA  138C               	bcf	12,7	;volatile
 20578  01EB                     i1l8349:	
 20579                           
 20580                           ;MCU_16f1518_B1.c: 104: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLight
      +                          s22->Count >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count
      +                          =0; DimmerLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RB4=1
      +                          ; } } } el
 20581  01EB  087A               	movf	_DimmerLights22,w
 20582  01EC  0086               	movwf	6
 20583  01ED  3001               	movlw	1	; select bank2/3
 20584  01EE  0087               	movwf	7
 20585  01EF  1C01               	btfss	1,0
 20586  01F0  2A3B               	goto	i1l8363
 20587  01F1  3001               	movlw	1
 20588  01F2  00F3               	movwf	??_TMR0_ISR
 20589  01F3  087A               	movf	_DimmerLights22,w
 20590  01F4  3E03               	addlw	3
 20591  01F5  0086               	movwf	6
 20592  01F6  3001               	movlw	1	; select bank2/3
 20593  01F7  0087               	movwf	7
 20594  01F8  0873               	movf	??_TMR0_ISR,w
 20595  01F9  0781               	addwf	1,f
 20596  01FA  0021               	movlb	1	; select bank1
 20597  01FB  0839               	movf	_Dimmer^(0+128),w
 20598  01FC  3E02               	addlw	2
 20599  01FD  0086               	movwf	6
 20600  01FE  0187               	clrf	7
 20601  01FF  0801               	movf	1,w
 20602  0200  00F3               	movwf	??_TMR0_ISR
 20603  0201  01F4               	clrf	??_TMR0_ISR+1
 20604  0202  09F3               	comf	??_TMR0_ISR,f
 20605  0203  09F4               	comf	??_TMR0_ISR+1,f
 20606  0204  0AF3               	incf	??_TMR0_ISR,f
 20607  0205  1903               	skipnz
 20608  0206  0AF4               	incf	??_TMR0_ISR+1,f
 20609  0207  087A               	movf	_DimmerLights22,w
 20610  0208  3E04               	addlw	4
 20611  0209  0086               	movwf	6
 20612  020A  3001               	movlw	1	; select bank2/3
 20613  020B  0087               	movwf	7
 20614  020C  0801               	movf	1,w
 20615  020D  0773               	addwf	??_TMR0_ISR,w
 20616  020E  00F5               	movwf	??_TMR0_ISR+2
 20617  020F  0874               	movf	??_TMR0_ISR+1,w
 20618  0210  1803               	skipnc
 20619  0211  0A74               	incf	??_TMR0_ISR+1,w
 20620  0212  00F6               	movwf	??_TMR0_ISR+3
 20621  0213  087A               	movf	_DimmerLights22,w
 20622  0214  3E03               	addlw	3
 20623  0215  0086               	movwf	6
 20624  0216  3001               	movlw	1	; select bank2/3
 20625  0217  0087               	movwf	7
 20626  0218  0876               	movf	??_TMR0_ISR+3,w
 20627  0219  3A80               	xorlw	128
 20628  021A  3C80               	sublw	128
 20629  021B  1D03               	skipz
 20630  021C  2A1F               	goto	u779_25
 20631  021D  0875               	movf	??_TMR0_ISR+2,w
 20632  021E  0201               	subwf	1,w
 20633  021F                     u779_25:	
 20634  021F  1C03               	skipc
 20635  0220  2B75               	goto	i1l8429
 20636  0221  087A               	movf	_DimmerLights22,w
 20637  0222  3E03               	addlw	3
 20638  0223  0086               	movwf	6
 20639  0224  3001               	movlw	1	; select bank2/3
 20640  0225  0087               	movwf	7
 20641  0226  0181               	clrf	1
 20642  0227  087A               	movf	_DimmerLights22,w
 20643  0228  0086               	movwf	6
 20644  0229  3001               	movlw	1	; select bank2/3
 20645  022A  0087               	movwf	7
 20646  022B  1001               	bcf	1,0
 20647  022C  087A               	movf	_DimmerLights22,w
 20648  022D  3E07               	addlw	7
 20649  022E  0086               	movwf	6
 20650  022F  3001               	movlw	1	; select bank2/3
 20651  0230  0087               	movwf	7
 20652  0231  1401               	bsf	1,0
 20653  0232  087A               	movf	_DimmerLights22,w
 20654  0233  0086               	movwf	6
 20655  0234  3001               	movlw	1	; select bank2/3
 20656  0235  0087               	movwf	7
 20657  0236  1F01               	btfss	1,6
 20658  0237  2B75               	goto	i1l8429
 20659  0238  0020               	movlb	0	; select bank0
 20660  0239  160D               	bsf	13,4	;volatile
 20661  023A  2B75               	goto	i1l8429
 20662  023B                     i1l8363:	
 20663  023B  087A               	movf	_DimmerLights22,w
 20664  023C  3E07               	addlw	7
 20665  023D  0086               	movwf	6
 20666  023E  3001               	movlw	1	; select bank2/3
 20667  023F  0087               	movwf	7
 20668  0240  1C01               	btfss	1,0
 20669  0241  2B40               	goto	i1l8421
 20670  0242  087A               	movf	_DimmerLights22,w
 20671  0243  3E07               	addlw	7
 20672  0244  0086               	movwf	6
 20673  0245  3001               	movlw	1	; select bank2/3
 20674  0246  0087               	movwf	7
 20675  0247  1001               	bcf	1,0
 20676  0248  087A               	movf	_DimmerLights22,w
 20677  0249  0086               	movwf	6
 20678  024A  3001               	movlw	1	; select bank2/3
 20679  024B  0087               	movwf	7
 20680  024C  1C81               	btfss	1,1
 20681  024D  2B40               	goto	i1l8421
 20682  024E  3001               	movlw	1
 20683  024F  00F3               	movwf	??_TMR0_ISR
 20684  0250  0A7A               	incf	_DimmerLights22,w
 20685  0251  0086               	movwf	6
 20686  0252  3001               	movlw	1	; select bank2/3
 20687  0253  0087               	movwf	7
 20688  0254  0873               	movf	??_TMR0_ISR,w
 20689  0255  0781               	addwf	1,f
 20690  0256  0A7A               	incf	_DimmerLights22,w
 20691  0257  0086               	movwf	6
 20692  0258  3001               	movlw	1	; select bank2/3
 20693  0259  0087               	movwf	7
 20694  025A  087A               	movf	_DimmerLights22,w
 20695  025B  3E02               	addlw	2
 20696  025C  0084               	movwf	4
 20697  025D  3001               	movlw	1	; select bank2/3
 20698  025E  0085               	movwf	5
 20699  025F  0800               	movf	0,w
 20700  0260  0201               	subwf	1,w
 20701  0261  1C03               	skipc
 20702  0262  2B40               	goto	i1l8421
 20703  0263  0A7A               	incf	_DimmerLights22,w
 20704  0264  0086               	movwf	6
 20705  0265  3001               	movlw	1	; select bank2/3
 20706  0266  0087               	movwf	7
 20707  0267  0181               	clrf	1
 20708  0268  087A               	movf	_DimmerLights22,w
 20709  0269  0086               	movwf	6
 20710  026A  3001               	movlw	1	; select bank2/3
 20711  026B  0087               	movwf	7
 20712  026C  1D81               	btfss	1,3
 20713  026D  2AA4               	goto	i1l8389
 20714  026E  087A               	movf	_DimmerLights22,w
 20715  026F  0086               	movwf	6
 20716  0270  3001               	movlw	1	; select bank2/3
 20717  0271  0087               	movwf	7
 20718  0272  1A01               	btfsc	1,4
 20719  0273  2A8B               	goto	i1l8383
 20720  0274  087A               	movf	_DimmerLights22,w
 20721  0275  3E04               	addlw	4
 20722  0276  0086               	movwf	6
 20723  0277  3001               	movlw	1	; select bank2/3
 20724  0278  0087               	movwf	7
 20725  0279  3010               	movlw	16
 20726  027A  0201               	subwf	1,w
 20727  027B  1C03               	skipc
 20728  027C  2A85               	goto	i1l8381
 20729  027D  087A               	movf	_DimmerLights22,w
 20730  027E  3E04               	addlw	4
 20731  027F  0086               	movwf	6
 20732  0280  3001               	movlw	1	; select bank2/3
 20733  0281  0087               	movwf	7
 20734  0282  3001               	movlw	1
 20735  0283  0281               	subwf	1,f
 20736  0284  2B40               	goto	i1l8421
 20737  0285                     i1l8381:	
 20738  0285  087A               	movf	_DimmerLights22,w
 20739  0286  0086               	movwf	6
 20740  0287  3001               	movlw	1	; select bank2/3
 20741  0288  0087               	movwf	7
 20742  0289  1601               	bsf	1,4
 20743  028A  2B40               	goto	i1l8421
 20744  028B                     i1l8383:	
 20745  028B  087A               	movf	_DimmerLights22,w
 20746  028C  3E04               	addlw	4
 20747  028D  0086               	movwf	6
 20748  028E  3001               	movlw	1	; select bank2/3
 20749  028F  0087               	movwf	7
 20750  0290  307F               	movlw	127
 20751  0291  0201               	subwf	1,w
 20752  0292  1803               	skipnc
 20753  0293  2A9E               	goto	i1l8387
 20754  0294  3001               	movlw	1
 20755  0295  00F3               	movwf	??_TMR0_ISR
 20756  0296  087A               	movf	_DimmerLights22,w
 20757  0297  3E04               	addlw	4
 20758  0298  0086               	movwf	6
 20759  0299  3001               	movlw	1	; select bank2/3
 20760  029A  0087               	movwf	7
 20761  029B  0873               	movf	??_TMR0_ISR,w
 20762  029C  0781               	addwf	1,f
 20763  029D  2B40               	goto	i1l8421
 20764  029E                     i1l8387:	
 20765  029E  087A               	movf	_DimmerLights22,w
 20766  029F  0086               	movwf	6
 20767  02A0  3001               	movlw	1	; select bank2/3
 20768  02A1  0087               	movwf	7
 20769  02A2  1201               	bcf	1,4
 20770  02A3  2B40               	goto	i1l8421
 20771  02A4                     i1l8389:	
 20772  02A4  087A               	movf	_DimmerLights22,w
 20773  02A5  0086               	movwf	6
 20774  02A6  3001               	movlw	1	; select bank2/3
 20775  02A7  0087               	movwf	7
 20776  02A8  1D01               	btfss	1,2
 20777  02A9  2AEB               	goto	i1l8403
 20778  02AA  087A               	movf	_DimmerLights22,w
 20779  02AB  3E05               	addlw	5
 20780  02AC  0086               	movwf	6
 20781  02AD  3001               	movlw	1	; select bank2/3
 20782  02AE  0087               	movwf	7
 20783  02AF  087A               	movf	_DimmerLights22,w
 20784  02B0  3E04               	addlw	4
 20785  02B1  0084               	movwf	4
 20786  02B2  3001               	movlw	1	; select bank2/3
 20787  02B3  0085               	movwf	5
 20788  02B4  0800               	movf	0,w
 20789  02B5  0201               	subwf	1,w
 20790  02B6  1803               	skipnc
 20791  02B7  2AC0               	goto	i1l8395
 20792  02B8  087A               	movf	_DimmerLights22,w
 20793  02B9  3E04               	addlw	4
 20794  02BA  0086               	movwf	6
 20795  02BB  3001               	movlw	1	; select bank2/3
 20796  02BC  0087               	movwf	7
 20797  02BD  3001               	movlw	1
 20798  02BE  0281               	subwf	1,f
 20799  02BF  2AD7               	goto	i1l8399
 20800  02C0                     i1l8395:	
 20801  02C0  087A               	movf	_DimmerLights22,w
 20802  02C1  3E04               	addlw	4
 20803  02C2  0086               	movwf	6
 20804  02C3  3001               	movlw	1	; select bank2/3
 20805  02C4  0087               	movwf	7
 20806  02C5  087A               	movf	_DimmerLights22,w
 20807  02C6  3E05               	addlw	5
 20808  02C7  0084               	movwf	4
 20809  02C8  3001               	movlw	1	; select bank2/3
 20810  02C9  0085               	movwf	5
 20811  02CA  0800               	movf	0,w
 20812  02CB  0201               	subwf	1,w
 20813  02CC  1803               	skipnc
 20814  02CD  2AD7               	goto	i1l8399
 20815  02CE  3001               	movlw	1
 20816  02CF  00F3               	movwf	??_TMR0_ISR
 20817  02D0  087A               	movf	_DimmerLights22,w
 20818  02D1  3E04               	addlw	4
 20819  02D2  0086               	movwf	6
 20820  02D3  3001               	movlw	1	; select bank2/3
 20821  02D4  0087               	movwf	7
 20822  02D5  0873               	movf	??_TMR0_ISR,w
 20823  02D6  0781               	addwf	1,f
 20824  02D7                     i1l8399:	
 20825  02D7  087A               	movf	_DimmerLights22,w
 20826  02D8  3E05               	addlw	5
 20827  02D9  0086               	movwf	6
 20828  02DA  3001               	movlw	1	; select bank2/3
 20829  02DB  0087               	movwf	7
 20830  02DC  087A               	movf	_DimmerLights22,w
 20831  02DD  3E04               	addlw	4
 20832  02DE  0084               	movwf	4
 20833  02DF  3001               	movlw	1	; select bank2/3
 20834  02E0  0085               	movwf	5
 20835  02E1  0800               	movf	0,w
 20836  02E2  0601               	xorwf	1,w
 20837  02E3  1D03               	skipz
 20838  02E4  2B40               	goto	i1l8421
 20839  02E5  087A               	movf	_DimmerLights22,w
 20840  02E6  0086               	movwf	6
 20841  02E7  3001               	movlw	1	; select bank2/3
 20842  02E8  0087               	movwf	7
 20843  02E9  1101               	bcf	1,2
 20844  02EA  2B06               	goto	i1l8409
 20845  02EB                     i1l8403:	
 20846  02EB  087A               	movf	_DimmerLights22,w
 20847  02EC  0086               	movwf	6
 20848  02ED  3001               	movlw	1	; select bank2/3
 20849  02EE  0087               	movwf	7
 20850  02EF  1E81               	btfss	1,5
 20851  02F0  2B0C               	goto	i1l8411
 20852  02F1  087A               	movf	_DimmerLights22,w
 20853  02F2  3E04               	addlw	4
 20854  02F3  0086               	movwf	6
 20855  02F4  3001               	movlw	1	; select bank2/3
 20856  02F5  0087               	movwf	7
 20857  02F6  3001               	movlw	1
 20858  02F7  0281               	subwf	1,f
 20859  02F8  087A               	movf	_DimmerLights22,w
 20860  02F9  3E05               	addlw	5
 20861  02FA  0086               	movwf	6
 20862  02FB  3001               	movlw	1	; select bank2/3
 20863  02FC  0087               	movwf	7
 20864  02FD  087A               	movf	_DimmerLights22,w
 20865  02FE  3E04               	addlw	4
 20866  02FF  0084               	movwf	4
 20867  0300  3001               	movlw	1	; select bank2/3
 20868  0301  0085               	movwf	5
 20869  0302  0800               	movf	0,w
 20870  0303  0201               	subwf	1,w
 20871  0304  1C03               	skipc
 20872  0305  2B40               	goto	i1l8421
 20873  0306                     i1l8409:	
 20874  0306  087A               	movf	_DimmerLights22,w
 20875  0307  0086               	movwf	6
 20876  0308  3001               	movlw	1	; select bank2/3
 20877  0309  0087               	movwf	7
 20878  030A  1081               	bcf	1,1
 20879  030B  2B40               	goto	i1l8421
 20880  030C                     i1l8411:	
 20881  030C  3001               	movlw	1
 20882  030D  00F3               	movwf	??_TMR0_ISR
 20883  030E  087A               	movf	_DimmerLights22,w
 20884  030F  3E04               	addlw	4
 20885  0310  0086               	movwf	6
 20886  0311  3001               	movlw	1	; select bank2/3
 20887  0312  0087               	movwf	7
 20888  0313  0873               	movf	??_TMR0_ISR,w
 20889  0314  0781               	addwf	1,f
 20890  0315  087A               	movf	_DimmerLights22,w
 20891  0316  3E04               	addlw	4
 20892  0317  0086               	movwf	6
 20893  0318  3001               	movlw	1	; select bank2/3
 20894  0319  0087               	movwf	7
 20895  031A  087A               	movf	_DimmerLights22,w
 20896  031B  3E06               	addlw	6
 20897  031C  0084               	movwf	4
 20898  031D  3001               	movlw	1	; select bank2/3
 20899  031E  0085               	movwf	5
 20900  031F  0800               	movf	0,w
 20901  0320  0201               	subwf	1,w
 20902  0321  1C03               	skipc
 20903  0322  2B40               	goto	i1l8421
 20904  0323  087A               	movf	_DimmerLights22,w
 20905  0324  0086               	movwf	6
 20906  0325  3001               	movlw	1	; select bank2/3
 20907  0326  0087               	movwf	7
 20908  0327  1081               	bcf	1,1
 20909  0328  087A               	movf	_DimmerLights22,w
 20910  0329  0086               	movwf	6
 20911  032A  3001               	movlw	1	; select bank2/3
 20912  032B  0087               	movwf	7
 20913  032C  1301               	bcf	1,6
 20914  032D  087A               	movf	_DimmerLights22,w
 20915  032E  3E0C               	addlw	12
 20916  032F  0086               	movwf	6
 20917  0330  3001               	movlw	1	; select bank2/3
 20918  0331  0087               	movwf	7
 20919  0332  1401               	bsf	1,0
 20920  0333  0021               	movlb	1	; select bank1
 20921  0334  0839               	movf	_Dimmer^(0+128),w
 20922  0335  0086               	movwf	6
 20923  0336  0187               	clrf	7
 20924  0337  1401               	bsf	1,0
 20925  0338  0020               	movlb	0	; select bank0
 20926  0339  138E               	bcf	14,7	;volatile
 20927  033A  01F1               	clrf	i1setLoad_StatusOff@command
 20928  033B  0AF1               	incf	i1setLoad_StatusOff@command,f
 20929  033C  3002               	movlw	2
 20930  033D  319A  225A  3180   	fcall	i1_setLoad_StatusOff
 20931  0340                     i1l8421:	
 20932  0340  0020               	movlb	0	; select bank0
 20933  0341  1E0D               	btfss	13,4	;volatile
 20934  0342  2B75               	goto	i1l8429
 20935  0343  3001               	movlw	1
 20936  0344  00F3               	movwf	??_TMR0_ISR
 20937  0345  087A               	movf	_DimmerLights22,w
 20938  0346  3E08               	addlw	8
 20939  0347  0086               	movwf	6
 20940  0348  3001               	movlw	1	; select bank2/3
 20941  0349  0087               	movwf	7
 20942  034A  0873               	movf	??_TMR0_ISR,w
 20943  034B  0781               	addwf	1,f
 20944  034C  087A               	movf	_DimmerLights22,w
 20945  034D  3E04               	addlw	4
 20946  034E  0086               	movwf	6
 20947  034F  3001               	movlw	1	; select bank2/3
 20948  0350  0087               	movwf	7
 20949  0351  0801               	movf	1,w
 20950  0352  00F3               	movwf	??_TMR0_ISR
 20951  0353  01F4               	clrf	??_TMR0_ISR+1
 20952  0354  09F3               	comf	??_TMR0_ISR,f
 20953  0355  09F4               	comf	??_TMR0_ISR+1,f
 20954  0356  0AF3               	incf	??_TMR0_ISR,f
 20955  0357  1903               	skipnz
 20956  0358  0AF4               	incf	??_TMR0_ISR+1,f
 20957  0359  0873               	movf	??_TMR0_ISR,w
 20958  035A  3E78               	addlw	120
 20959  035B  00F5               	movwf	??_TMR0_ISR+2
 20960  035C  3000               	movlw	0
 20961  035D  3D74               	addwfc	??_TMR0_ISR+1,w
 20962  035E  00F6               	movwf	??_TMR0_ISR+3
 20963  035F  087A               	movf	_DimmerLights22,w
 20964  0360  3E08               	addlw	8
 20965  0361  0086               	movwf	6
 20966  0362  3001               	movlw	1	; select bank2/3
 20967  0363  0087               	movwf	7
 20968  0364  0876               	movf	??_TMR0_ISR+3,w
 20969  0365  3A80               	xorlw	128
 20970  0366  3C80               	sublw	128
 20971  0367  1D03               	skipz
 20972  0368  2B6B               	goto	u796_25
 20973  0369  0875               	movf	??_TMR0_ISR+2,w
 20974  036A  0201               	subwf	1,w
 20975  036B                     u796_25:	
 20976  036B  1C03               	skipc
 20977  036C  2B75               	goto	i1l8429
 20978  036D  087A               	movf	_DimmerLights22,w
 20979  036E  3E08               	addlw	8
 20980  036F  0086               	movwf	6
 20981  0370  3001               	movlw	1	; select bank2/3
 20982  0371  0087               	movwf	7
 20983  0372  0181               	clrf	1
 20984  0373  0020               	movlb	0	; select bank0
 20985  0374  120D               	bcf	13,4	;volatile
 20986  0375                     i1l8429:	
 20987                           
 20988                           ;MCU_16f1518_B1.c: 113: Timer0->Count++;
 20989  0375  0021               	movlb	1	; select bank1
 20990  0376  0A6A               	incf	_Timer0^(0+128),w
 20991  0377  0086               	movwf	6
 20992  0378  0187               	clrf	7
 20993  0379  3001               	movlw	1
 20994  037A  0781               	addwf	1,f
 20995  037B  3141               	addfsr 1,1
 20996  037C  1803               	skipnc
 20997  037D  0A81               	incf	1,f
 20998                           
 20999                           ;MCU_16f1518_B1.c: 114: if(Timer0->Count == 200)
 21000  037E  0A6A               	incf	_Timer0^(0+128),w
 21001  037F  0086               	movwf	6
 21002  0380  0187               	clrf	7
 21003  0381  3F40               	moviw [0]fsr1
 21004  0382  3AC8               	xorlw	200
 21005  0383  1D03               	skipz
 21006  0384  2B87               	goto	u797_25
 21007  0385  3F41               	moviw [1]fsr1
 21008  0386  3A00               	xorlw	0
 21009  0387                     u797_25:	
 21010  0387  1D03               	skipz
 21011  0388  2B94               	goto	i1l1682
 21012                           
 21013                           ;MCU_16f1518_B1.c: 115: {
 21014                           ;MCU_16f1518_B1.c: 116: Timer0->Count=0;
 21015  0389  0A6A               	incf	_Timer0^(0+128),w
 21016  038A  0086               	movwf	6
 21017  038B  0187               	clrf	7
 21018  038C  3000               	movlw	0
 21019  038D  3FC0               	movwi [0]fsr1
 21020  038E  3FC1               	movwi [1]fsr1
 21021                           
 21022                           ;MCU_16f1518_B1.c: 117: TMain->T0_Timerout=1;
 21023  038F  0869               	movf	_TMain^(0+128),w
 21024  0390  0086               	movwf	6
 21025  0391  3001               	movlw	1	; select bank2/3
 21026  0392  0087               	movwf	7
 21027  0393  1481               	bsf	1,1
 21028  0394                     i1l1682:	
 21029                           
 21030                           ;MCU_16f1518_B1.c: 118: }
 21031                           ;MCU_16f1518_B1.c: 121: if(Buz->GO)
 21032  0394  0878               	movf	_Buz,w
 21033  0395  0086               	movwf	6
 21034  0396  3001               	movlw	1	; select bank2/3
 21035  0397  0087               	movwf	7
 21036  0398  1C81               	btfss	1,1
 21037  0399  0008               	return
 21038                           
 21039                           ;MCU_16f1518_B1.c: 122: {
 21040                           ;MCU_16f1518_B1.c: 123: Buz->Time++;
 21041  039A  0A78               	incf	_Buz,w
 21042  039B  0086               	movwf	6
 21043  039C  3001               	movlw	1	; select bank2/3
 21044  039D  0087               	movwf	7
 21045  039E  3001               	movlw	1
 21046  039F  0781               	addwf	1,f
 21047  03A0  3141               	addfsr 1,1
 21048  03A1  1803               	skipnc
 21049  03A2  0A81               	incf	1,f
 21050  03A3  0008               	return
 21051  03A4                     __end_of_TMR0_ISR:	
 21052                           
 21053                           	psect	text137
 21054  1A5A                     __ptext137:	
 21055 ;; *************** function i1_setLoad_StatusOff *****************
 21056 ;; Defined at:
 21057 ;;		line 280 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 21058 ;; Parameters:    Size  Location     Type
 21059 ;;  lights          1    wreg     unsigned char 
 21060 ;;  command         1    0[COMMON] unsigned char 
 21061 ;; Auto vars:     Size  Location     Type
 21062 ;;  lights          1    1[COMMON] unsigned char 
 21063 ;; Return value:  Size  Location     Type
 21064 ;;		None               void
 21065 ;; Registers used:
 21066 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21067 ;; Tracked objects:
 21068 ;;		On entry : 0/0
 21069 ;;		On exit  : 0/0
 21070 ;;		Unchanged: 0/0
 21071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21072 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21075 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21076 ;;Total ram usage:        2 bytes
 21077 ;; Hardware stack levels used:    1
 21078 ;; This function calls:
 21079 ;;		Nothing
 21080 ;; This function is called by:
 21081 ;;		_TMR0_ISR
 21082 ;; This function uses a non-reentrant model
 21083 ;;
 21084                           
 21085                           
 21086                           ;psect for function i1_setLoad_StatusOff
 21087  1A5A                     i1_setLoad_StatusOff:	
 21088                           
 21089                           ;incstack = 0
 21090                           ; Regs used in i1_setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0]
 21091                           ;i1setLoad_StatusOff@lights stored from wreg
 21092  1A5A  00F2               	movwf	i1setLoad_StatusOff@lights
 21093                           
 21094                           ;OverLoad_B1.c: 282: Load->StatusOff=command;
 21095  1A5B  0020               	movlb	0	; select bank0
 21096  1A5C  086E               	movf	_Load,w
 21097  1A5D  3E46               	addlw	70
 21098  1A5E  0086               	movwf	6
 21099  1A5F  3002               	movlw	2	; select bank4/5
 21100  1A60  0087               	movwf	7
 21101  1A61  0871               	movf	i1setLoad_StatusOff@command,w
 21102  1A62  1081               	bcf	1,1
 21103  1A63  1D03               	skipz
 21104  1A64  1481               	bsf	1,1
 21105                           
 21106                           ;OverLoad_B1.c: 283: Load->SafeCount-=2;
 21107  1A65  086E               	movf	_Load,w
 21108  1A66  3E42               	addlw	66
 21109  1A67  0086               	movwf	6
 21110  1A68  3002               	movlw	2	; select bank4/5
 21111  1A69  0087               	movwf	7
 21112  1A6A  3002               	movlw	2
 21113  1A6B  0281               	subwf	1,f
 21114                           
 21115                           ;OverLoad_B1.c: 284: if(lights == 1)
 21116  1A6C  0872               	movf	i1setLoad_StatusOff@lights,w
 21117  1A6D  3A01               	xorlw	1
 21118  1A6E  1D03               	skipz
 21119  1A6F  2A76               	goto	i1l7879
 21120                           
 21121                           ;OverLoad_B1.c: 285: {
 21122                           ;OverLoad_B1.c: 286: Load->Lights1Status=0;
 21123  1A70  086E               	movf	_Load,w
 21124  1A71  3E43               	addlw	67
 21125  1A72  0086               	movwf	6
 21126  1A73  3002               	movlw	2	; select bank4/5
 21127  1A74  0087               	movwf	7
 21128  1A75  0181               	clrf	1
 21129  1A76                     i1l7879:	
 21130                           
 21131                           ;OverLoad_B1.c: 287: }
 21132                           ;OverLoad_B1.c: 288: if(lights == 2)
 21133  1A76  0872               	movf	i1setLoad_StatusOff@lights,w
 21134  1A77  3A02               	xorlw	2
 21135  1A78  1D03               	skipz
 21136  1A79  2A80               	goto	i1l7883
 21137                           
 21138                           ;OverLoad_B1.c: 289: {
 21139                           ;OverLoad_B1.c: 290: Load->Lights2Status=0;
 21140  1A7A  086E               	movf	_Load,w
 21141  1A7B  3E44               	addlw	68
 21142  1A7C  0086               	movwf	6
 21143  1A7D  3002               	movlw	2	; select bank4/5
 21144  1A7E  0087               	movwf	7
 21145  1A7F  0181               	clrf	1
 21146  1A80                     i1l7883:	
 21147                           
 21148                           ;OverLoad_B1.c: 291: }
 21149                           ;OverLoad_B1.c: 292: if(lights == 3)
 21150  1A80  0872               	movf	i1setLoad_StatusOff@lights,w
 21151  1A81  3A03               	xorlw	3
 21152  1A82  1D03               	skipz
 21153  1A83  0008               	return
 21154                           
 21155                           ;OverLoad_B1.c: 293: {
 21156                           ;OverLoad_B1.c: 294: Load->Lights3Status=0;
 21157  1A84  086E               	movf	_Load,w
 21158  1A85  3E45               	addlw	69
 21159  1A86  0086               	movwf	6
 21160  1A87  3002               	movlw	2	; select bank4/5
 21161  1A88  0087               	movwf	7
 21162  1A89  0181               	clrf	1
 21163  1A8A  0008               	return
 21164  1A8B                     __end_ofi1_setLoad_StatusOff:	
 21165                           
 21166                           	psect	text138
 21167  190C                     __ptext138:	
 21168 ;; *************** function _IOC_ISR *****************
 21169 ;; Defined at:
 21170 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 21171 ;; Parameters:    Size  Location     Type
 21172 ;;		None
 21173 ;; Auto vars:     Size  Location     Type
 21174 ;;		None
 21175 ;; Return value:  Size  Location     Type
 21176 ;;		None               void
 21177 ;; Registers used:
 21178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21179 ;; Tracked objects:
 21180 ;;		On entry : 0/0
 21181 ;;		On exit  : 0/0
 21182 ;;		Unchanged: 0/0
 21183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21188 ;;Total ram usage:        1 bytes
 21189 ;; Hardware stack levels used:    1
 21190 ;; Hardware stack levels required when called:    1
 21191 ;; This function calls:
 21192 ;;		_setDimmerReClock
 21193 ;; This function is called by:
 21194 ;;		_ISR
 21195 ;; This function uses a non-reentrant model
 21196 ;;
 21197                           
 21198                           
 21199                           ;psect for function _IOC_ISR
 21200  190C                     _IOC_ISR:	
 21201                           
 21202                           ;MCU_16f1518_B1.c: 269: if(IOCIE && IOCBF2)
 21203                           
 21204                           ;incstack = 0
 21205                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21206  190C  1D8B               	btfss	11,3	;volatile
 21207  190D  0008               	return
 21208  190E  0027               	movlb	7	; select bank7
 21209  190F  1D16               	btfss	22,2	;volatile
 21210  1910  0008               	return
 21211                           
 21212                           ;MCU_16f1518_B1.c: 270: {
 21213                           ;MCU_16f1518_B1.c: 271: IOCBF2=0;
 21214  1911  1116               	bcf	22,2	;volatile
 21215                           
 21216                           ;MCU_16f1518_B1.c: 272: IOCIF=0;
 21217  1912  100B               	bcf	11,0	;volatile
 21218                           
 21219                           ;MCU_16f1518_B1.c: 273: if(TMain->PowerON)
 21220  1913  0021               	movlb	1	; select bank1
 21221  1914  0869               	movf	_TMain^(0+128),w
 21222  1915  0086               	movwf	6
 21223  1916  3001               	movlw	1	; select bank2/3
 21224  1917  0087               	movwf	7
 21225  1918  1C01               	btfss	1,0
 21226  1919  0008               	return
 21227                           
 21228                           ;MCU_16f1518_B1.c: 274: {
 21229                           ;MCU_16f1518_B1.c: 278: setDimmerReClock();
 21230  191A  31A7  2737  3199   	fcall	_setDimmerReClock
 21231                           
 21232                           ;MCU_16f1518_B1.c: 279: if(RB2)
 21233  191D  0020               	movlb	0	; select bank0
 21234  191E  1D0D               	btfss	13,2	;volatile
 21235  191F  2927               	goto	i1l8259
 21236                           
 21237                           ;MCU_16f1518_B1.c: 280: {
 21238                           ;MCU_16f1518_B1.c: 281: Dimmer->Correction=0;
 21239  1920  0021               	movlb	1	; select bank1
 21240  1921  0839               	movf	_Dimmer^(0+128),w
 21241  1922  3E02               	addlw	2
 21242  1923  0086               	movwf	6
 21243  1924  0187               	clrf	7
 21244  1925  0181               	clrf	1
 21245                           
 21246                           ;MCU_16f1518_B1.c: 282: }
 21247  1926  0008               	return
 21248  1927                     i1l8259:	
 21249                           
 21250                           ;MCU_16f1518_B1.c: 283: else
 21251                           ;MCU_16f1518_B1.c: 284: {
 21252                           ;MCU_16f1518_B1.c: 285: Dimmer->Correction=8;
 21253  1927  3008               	movlw	8
 21254  1928  00F1               	movwf	??_IOC_ISR
 21255  1929  0021               	movlb	1	; select bank1
 21256  192A  0839               	movf	_Dimmer^(0+128),w
 21257  192B  3E02               	addlw	2
 21258  192C  0086               	movwf	6
 21259  192D  0187               	clrf	7
 21260  192E  0871               	movf	??_IOC_ISR,w
 21261  192F  0081               	movwf	1
 21262  1930  0008               	return
 21263  1931                     __end_of_IOC_ISR:	
 21264                           
 21265                           	psect	text139
 21266  2737                     __ptext139:	
 21267 ;; *************** function _setDimmerReClock *****************
 21268 ;; Defined at:
 21269 ;;		line 129 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 21270 ;; Parameters:    Size  Location     Type
 21271 ;;		None
 21272 ;; Auto vars:     Size  Location     Type
 21273 ;;		None
 21274 ;; Return value:  Size  Location     Type
 21275 ;;		None               void
 21276 ;; Registers used:
 21277 ;;		wreg, fsr1l, fsr1h
 21278 ;; Tracked objects:
 21279 ;;		On entry : 0/0
 21280 ;;		On exit  : 0/0
 21281 ;;		Unchanged: 0/0
 21282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21287 ;;Total ram usage:        0 bytes
 21288 ;; Hardware stack levels used:    1
 21289 ;; This function calls:
 21290 ;;		Nothing
 21291 ;; This function is called by:
 21292 ;;		_IOC_ISR
 21293 ;; This function uses a non-reentrant model
 21294 ;;
 21295                           
 21296                           
 21297                           ;psect for function _setDimmerReClock
 21298  2737                     _setDimmerReClock:	
 21299                           
 21300                           ;MCU_16f1518_B1.c: 131: TMR0=255;
 21301                           
 21302                           ;incstack = 0
 21303                           ; Regs used in _setDimmerReClock: [wregfsr1]
 21304  2737  30FF               	movlw	255
 21305  2738  0020               	movlb	0	; select bank0
 21306  2739  0095               	movwf	21	;volatile
 21307                           
 21308                           ;MCU_16f1518_B1.c: 136: if(!DimmerLights11->GO)
 21309  273A  0879               	movf	_DimmerLights11,w
 21310  273B  0086               	movwf	6
 21311  273C  3001               	movlw	1	; select bank2/3
 21312  273D  0087               	movwf	7
 21313  273E  1801               	btfsc	1,0
 21314  273F  2F45               	goto	i1l1687
 21315                           
 21316                           ;MCU_16f1518_B1.c: 137: {
 21317                           ;MCU_16f1518_B1.c: 138: DimmerLights11->GO=1;
 21318  2740  0879               	movf	_DimmerLights11,w
 21319  2741  0086               	movwf	6
 21320  2742  3001               	movlw	1	; select bank2/3
 21321  2743  0087               	movwf	7
 21322  2744  1401               	bsf	1,0
 21323  2745                     i1l1687:	
 21324                           
 21325                           ;MCU_16f1518_B1.c: 139: }
 21326                           ;MCU_16f1518_B1.c: 158: if(!DimmerLights22->GO)
 21327  2745  087A               	movf	_DimmerLights22,w
 21328  2746  0086               	movwf	6
 21329  2747  3001               	movlw	1	; select bank2/3
 21330  2748  0087               	movwf	7
 21331  2749  1801               	btfsc	1,0
 21332  274A  0008               	return
 21333                           
 21334                           ;MCU_16f1518_B1.c: 159: {
 21335                           ;MCU_16f1518_B1.c: 160: DimmerLights22->GO=1;
 21336  274B  087A               	movf	_DimmerLights22,w
 21337  274C  0086               	movwf	6
 21338  274D  3001               	movlw	1	; select bank2/3
 21339  274E  0087               	movwf	7
 21340  274F  1401               	bsf	1,0
 21341  2750  0008               	return
 21342  2751                     __end_of_setDimmerReClock:	
 21343                           
 21344                           	psect	text140
 21345  24C1                     __ptext140:	
 21346 ;; *************** function _INT_ISR *****************
 21347 ;; Defined at:
 21348 ;;		line 225 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 21349 ;; Parameters:    Size  Location     Type
 21350 ;;		None
 21351 ;; Auto vars:     Size  Location     Type
 21352 ;;		None
 21353 ;; Return value:  Size  Location     Type
 21354 ;;		None               void
 21355 ;; Registers used:
 21356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21357 ;; Tracked objects:
 21358 ;;		On entry : 0/0
 21359 ;;		On exit  : 0/0
 21360 ;;		Unchanged: 0/0
 21361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21366 ;;Total ram usage:        0 bytes
 21367 ;; Hardware stack levels used:    1
 21368 ;; Hardware stack levels required when called:    2
 21369 ;; This function calls:
 21370 ;;		_setRF_ReceiveGO
 21371 ;; This function is called by:
 21372 ;;		_ISR
 21373 ;; This function uses a non-reentrant model
 21374 ;;
 21375                           
 21376                           
 21377                           ;psect for function _INT_ISR
 21378  24C1                     _INT_ISR:	
 21379                           
 21380                           ;MCU_16f1518_B1.c: 227: if(INTE && INTF)
 21381                           
 21382                           ;incstack = 0
 21383                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21384  24C1  1E0B               	btfss	11,4	;volatile
 21385  24C2  0008               	return
 21386  24C3  1C8B               	btfss	11,1	;volatile
 21387  24C4  0008               	return
 21388                           
 21389                           ;MCU_16f1518_B1.c: 228: {
 21390                           ;MCU_16f1518_B1.c: 229: INTF=0;
 21391  24C5  108B               	bcf	11,1	;volatile
 21392                           
 21393                           ;MCU_16f1518_B1.c: 230: INTE=0;
 21394  24C6  120B               	bcf	11,4	;volatile
 21395                           
 21396                           ;MCU_16f1518_B1.c: 231: setRF_ReceiveGO(1,1);
 21397  24C7  01F3               	clrf	setRF_ReceiveGO@command
 21398  24C8  0AF3               	incf	setRF_ReceiveGO@command,f
 21399  24C9  3001               	movlw	1
 21400  24CA  31A4  24B5         	fcall	_setRF_ReceiveGO
 21401  24CC  0008               	return
 21402  24CD                     __end_of_INT_ISR:	
 21403                           
 21404                           	psect	text141
 21405  24B5                     __ptext141:	
 21406 ;; *************** function _setRF_ReceiveGO *****************
 21407 ;; Defined at:
 21408 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 21409 ;; Parameters:    Size  Location     Type
 21410 ;;  rf              1    wreg     unsigned char 
 21411 ;;  command         1    2[COMMON] unsigned char 
 21412 ;; Auto vars:     Size  Location     Type
 21413 ;;  rf              1    3[COMMON] unsigned char 
 21414 ;; Return value:  Size  Location     Type
 21415 ;;		None               void
 21416 ;; Registers used:
 21417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21418 ;; Tracked objects:
 21419 ;;		On entry : 0/0
 21420 ;;		On exit  : 0/0
 21421 ;;		Unchanged: 0/0
 21422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21423 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21427 ;;Total ram usage:        2 bytes
 21428 ;; Hardware stack levels used:    1
 21429 ;; Hardware stack levels required when called:    1
 21430 ;; This function calls:
 21431 ;;		i1_RfPointSelect
 21432 ;; This function is called by:
 21433 ;;		_INT_ISR
 21434 ;; This function uses a non-reentrant model
 21435 ;;
 21436                           
 21437                           
 21438                           ;psect for function _setRF_ReceiveGO
 21439  24B5                     _setRF_ReceiveGO:	
 21440                           
 21441                           ;incstack = 0
 21442                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21443                           ;setRF_ReceiveGO@rf stored from wreg
 21444  24B5  00F4               	movwf	setRF_ReceiveGO@rf
 21445                           
 21446                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 21447  24B6  0874               	movf	setRF_ReceiveGO@rf,w
 21448  24B7  31A4  2448         	fcall	i1_RfPointSelect
 21449                           
 21450                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 21451  24B9  087C               	movf	_RF,w
 21452  24BA  0086               	movwf	6
 21453  24BB  0187               	clrf	7
 21454  24BC  0873               	movf	setRF_ReceiveGO@command,w
 21455  24BD  1081               	bcf	1,1
 21456  24BE  1D03               	skipz
 21457  24BF  1481               	bsf	1,1
 21458  24C0  0008               	return
 21459  24C1                     __end_of_setRF_ReceiveGO:	
 21460                           
 21461                           	psect	text142
 21462  2448                     __ptext142:	
 21463 ;; *************** function i1_RfPointSelect *****************
 21464 ;; Defined at:
 21465 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 21466 ;; Parameters:    Size  Location     Type
 21467 ;;  rf              1    wreg     unsigned char 
 21468 ;; Auto vars:     Size  Location     Type
 21469 ;;  rf              1    1[COMMON] unsigned char 
 21470 ;; Return value:  Size  Location     Type
 21471 ;;		None               void
 21472 ;; Registers used:
 21473 ;;		wreg
 21474 ;; Tracked objects:
 21475 ;;		On entry : 0/0
 21476 ;;		On exit  : 0/0
 21477 ;;		Unchanged: 0/0
 21478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21483 ;;Total ram usage:        2 bytes
 21484 ;; Hardware stack levels used:    1
 21485 ;; This function calls:
 21486 ;;		Nothing
 21487 ;; This function is called by:
 21488 ;;		_setRF_ReceiveGO
 21489 ;; This function uses a non-reentrant model
 21490 ;;
 21491                           
 21492                           
 21493                           ;psect for function i1_RfPointSelect
 21494  2448                     i1_RfPointSelect:	
 21495                           
 21496                           ;incstack = 0
 21497                           ; Regs used in i1_RfPointSelect: [wreg]
 21498                           ;i1RfPointSelect@rf stored from wreg
 21499  2448  00F2               	movwf	i1RfPointSelect@rf
 21500                           
 21501                           ;RF_Control_B1.c: 10: if(rf == 1)
 21502  2449  0872               	movf	i1RfPointSelect@rf,w
 21503  244A  3A01               	xorlw	1
 21504  244B  1D03               	skipz
 21505  244C  0008               	return
 21506                           
 21507                           ;RF_Control_B1.c: 11: {
 21508                           ;RF_Control_B1.c: 12: RF=&RF1;
 21509  244D  30E4               	movlw	_RF1& (0+255)
 21510  244E  00F1               	movwf	??i1_RfPointSelect
 21511  244F  0871               	movf	??i1_RfPointSelect,w
 21512  2450  00FC               	movwf	_RF
 21513  2451  0008               	return
 21514  2452                     __end_ofi1_RfPointSelect:	
 21515  007E                     btemp	set	126	;btemp
 21516  007E                     pic14e$flags	set	126
 21517  007E                     wtemp	set	126
 21518  007E                     wtemp0	set	126
 21519  0080                     wtemp1	set	128
 21520  0082                     wtemp2	set	130
 21521  0084                     wtemp3	set	132
 21522  0086                     wtemp4	set	134
 21523  0088                     wtemp5	set	136
 21524  007F                     wtemp6	set	127
 21525  007E                     ttemp	set	126
 21526  007E                     ttemp0	set	126
 21527  0081                     ttemp1	set	129
 21528  0084                     ttemp2	set	132
 21529  0087                     ttemp3	set	135
 21530  007F                     ttemp4	set	127
 21531  007E                     ltemp	set	126
 21532  007E                     ltemp0	set	126
 21533  0082                     ltemp1	set	130
 21534  0086                     ltemp2	set	134
 21535  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         283
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     76      80
    BANK1            80      0      75
    BANK2            80      0      78
    BANK3            80      0      48
    BANK4            80      0      37
    BANK5            80      0      71
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 2
		 -> NULL(NULL[0]), RF1(BANK1[2]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK2[8]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    Load	PTR struct OverLoad size(1) Largest target is 71
		 -> NULL(NULL[0]), Load1(BANK5[71]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 7
		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 16
		 -> NULL(NULL[0]), VarTMain(BANK3[16]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK4[37]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights1(BANK2[13]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), DimmerLights1(BANK2[13]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _TMR0_ISR->i1_setLoad_StatusOff
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _getLoad_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOnFunc
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setBuz
    _Sw_DimmerOffFunc->_setDelayOff_GO
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setBuz
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _PowerFault_Initialization->_setPowerFault_Initialization
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _Load_Main->_setLoad_Exceptions
    _setLoad_Exceptions->_DimmerLights_Exceptions
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RfPointSelect
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _setDimmerLights_Clear->_DimmerLightsPointSelect
    _Load_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _setPercentValue->___fttol
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setBuz
    _setDimmerLights_Adj->_setRF_DimmerLights
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_getPercentValue
    _getPercentValue->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setBuz
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   92210
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                              _MainT
               _MainT_Initialization
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                         _getLoad_AD
                   _getPowerFault_AD
                         _getTemp_AD
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     324
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     5     5      0     324
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           8     8      0     624
                                              4 BANK0      8     8      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     293
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    8083
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    8083
                                             13 BANK0      3     3      0
                       _getLoad_Safe
                         _getPF_Safe
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    8083
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0   10938
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0   10938
                                             12 BANK0      5     5      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     315
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    4107
                                             10 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    3443
                                              8 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     1     1      0    1258
                                              4 BANK0      1     1      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     260
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     260
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1070
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1070
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   23789
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   23789
                                             73 BANK0      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   22785
                                             72 BANK0      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1564
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   21168
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      2     2      0    5201
                                             10 BANK0      2     2      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2     981
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   11355
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   11179
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11113
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     152
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     160
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     503
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     161
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     114
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    6572
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   2     2      0    6572
                                             13 BANK0      2     2      0
                       _getLoad_Safe
                       _getTemp_Safe
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             2     2      0    6572
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (3) _getLoad_Safe                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    2102
                             _setBuz
                     _setLoad_Enable
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setLoad_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                            5     5      0    8099
                                             13 BANK0      5     5      0
                            ___lwdiv
                             ___wmul
                         _getPF_Safe
                       _getTemp_Safe
              _setDimmerLights_Clear
              _setLoad_AH_AL_Restore
                 _setLoad_Exceptions
 ---------------------------------------------------------------------------------
 (2) _setLoad_Exceptions                                   2     2      0    6603
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _setSw_Enable                                         1     1      0     106
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _setRF_Enable                                         2     1      1     423
                                              2 BANK0      2     1      1
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (5) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    4818
                                             10 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     353
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2813
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                  _setLoad_StatusOff
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Clear                                2     1      1     414
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  1     1      0      90
                                              2 BANK0      1     1      0
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1167
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1167
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     307
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     307
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5731
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    5458
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      47
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    5109
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    5030
                                             10 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1    1365
                                              5 BANK0      3     2      1
            _DimmerLightsPointSelect
                  _setLoad_StatusOff
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOff                                    2     1      1     362
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1791
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                      _setLoad_Count
                   _setLoad_StatusOn
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOn                                     2     1      1     201
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _setLoad_Count                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1    1039
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      79
         _getDimmerLights_StatusFlag
                         _setLoad_GO
 ---------------------------------------------------------------------------------
 (3) _setLoad_GO                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0   11135
                                             66 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       3     3      0   11135
                                             63 BANK0      3     3      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11047
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___fttol                                             14    10      4     380
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2502
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftdiv                                             16    10      6    2712
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3118
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___awtoft                                             6     3      3    2267
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___ftpack                                            8     3      5    2048
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    4648
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    4648
                                             10 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            3     3      0      44
                                              2 BANK0      2     2      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     568
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (5) _SwPointSelect                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1     668
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     645
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     491
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     491
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setBuz                                               4     2      2    1511
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     444
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      75
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      75
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    1869
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     490
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     354
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     309
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     218
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     512
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     444
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      68
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     270
                                              6 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0     140
                                              2 COMMON     4     4      0
                i1_setLoad_StatusOff
 ---------------------------------------------------------------------------------
 (13) i1_setLoad_StatusOff                                 2     1      1     140
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     130
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     130
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
       _getPercentValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setLoad_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setLoad_Count
         _setLoad_StatusOn
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setLoad_StatusOff
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getPF_Safe
     _getTemp_Safe
     _setDimmerLights_Clear
       _DimmerLightsPointSelect
     _setLoad_AH_AL_Restore
     _setLoad_Exceptions
       _DimmerLights_Exceptions
         _getDimmerLights_StatusFlag
         _setBuz
           ___wmul
         _setDimmerLights_ERROR
           _DimmerLightsPointSelect
           _setLED
             _LedPointSelect
           _setLoad_StatusOff
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
         _setDimmerLights_TriggerERROR
           _DimmerLightsPointSelect
       _setLED
         _LedPointSelect
       _setRF_Enable
         _RfPointSelect
         _setINT_GO
       _setSw_Enable
         _SwPointSelect
   _MainT
     _setBuz
       ___wmul
     _setLoad_Enable
     _setRF_Enable
       _RfPointSelect
       _setINT_GO
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
   _MainT_Initialization
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _getLoad_Safe
       _getTemp_Safe
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_Count
             _setLoad_StatusOn
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___wmul
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getLoad_Safe
       _getPF_Safe
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___wmul
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _getLoad_AD
     _getAD
   _getPowerFault_AD
     _getAD
   _getTemp_AD
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR
     i1_setLoad_StatusOff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      25      13       46.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      47      15       88.8%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     193      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     193      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Sep 13 16:54:30 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _PF 007B  
                                     _RD 0CA8                                       _RF 007C  
                __end_of_CC2500_WriteREG 2705                                       _WR 0CA9  
                                     _Sw 006D       __end_of_getDimmerLights_StatusFlag 268E  
             _getDimmerLights_StatusFlag 2678                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 1083                             ___ftadd@exp1 004A  
                           ___ftadd@exp2 0049                setDimmerLights_Adj@lights 0027  
              __end_of_setLoad_StatusOff 1ABC                     _setDimmerLights_Main 14B3  
                           ___ftadd@sign 0048                                      l312 1DC2  
                                    l313 1DC7                                      l403 2775  
                                    l323 1144                                      l307 1D98  
                                    l340 1A4E                                      l316 1DCA  
                                    l343 1A54                                      l327 1155  
                                    l409 1936                                      l373 26DF  
                                    l374 26E1                                      l385 26F4  
                                    l706 1A28                                      l397 2573  
                                    l922 11DC                                      l875 2606  
                                    _GIE 005F                                      _CRC 00B7  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 0015                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 0166  
                                    _RC0 0070                                      _RB2 006A  
                                    _RA4 0064                                      _LED 00BB  
                                    _RC1 0071                                      _RB3 006B  
                                    _RC2 0072                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC4 0074  
                                    _RC5 0075                                      _RC7 0077  
                                    _RF1 00E4                                      _ISR 0004  
        setPowerFault_Exceptions@command 002C                                      _Sw1 0154  
                                    _Sw2 015D                                      _Buz 0078  
              setDimmerLights_Adj@status 0025                 __end_of_CC2500_WriteByte 26EC  
         ??_setDimmerLights_TriggerERROR 0023                    _Buzzer_Initialization 2452  
                        __end_of_ADC_Set 2407                          ?_DelayTimejudge 0071  
                                    wreg 0009     setDimmerLights_Initialization@lights 0061  
                        _setDimmerLights 0876                    _setDimmerLights_ERROR 1EF3  
                  _setDimmerLights_AdjRF 18E9                    _setDimmerLights_AdjGo 25CB  
                __size_of_setTemp_Enable 000B                    _setDimmerLights_Clear 259B  
                                   ?_ISR 0071                          _PowerFault_Main 23C6  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 1931  
                             Load_Main@i 0031                             ___ftdiv@sign 003D  
               ?_DimmerLightsPointSelect 0071                                     l2157 1CF0  
                                   l3401 112B                                     l3234 27AC  
                                   l1715 2698                                     l1741 1AE6  
                        __end_of_IOC_Set 2517                                     l2461 1BAB  
                                   l2701 1EA1                                     l3424 0C7C  
                                   l2457 0ED5                                     l6101 10EA  
                                   l2733 1C2F                                     l2719 266D  
                                   l1936 1D33                                     l6105 10F1  
                                   l6115 1119                                     l3395 1114  
                                   l6107 10FB                                     l6117 1121  
                                   l6109 1100                                     l2917 0800  
                                   l6135 188E                                     l6207 0CBB  
                                   l6151 0C0C                                     l6223 09E4  
                                   l6217 09CE                                     l6147 0C05  
                                   l6411 18BC                                     l6181 0C5B  
                                   l6157 0C1B                                     l6245 0A3E  
                                   l6237 0A25                                     l6309 1551  
                                   l6175 0C48                                     l6343 15B6  
                                   l6335 159C                                     l6327 1581  
                                   l6407 18B1                                     l6193 0C8E  
                                   l6177 0C52                                     l6169 0C35  
                                   l6281 0AD0                                     l6265 0A8D  
                                   l6337 15A5                                     l6329 158F  
                                   l6187 0C6E                                     l6179 0C57  
                                   l6259 0A77                                     l6339 15A8  
                                   l6523 1056                                     l6365 26B0  
                                   l6429 261A                                     l6197 0CA0  
                                   l6189 0C78                                     l6293 0AEC  
                                   l6277 0AC8                                     l6381 1A14  
                                   l6373 1A08                                     l6533 1075  
                                   l9101 12EF                                     l7431 1BF7  
                                   l6623 1B2C                                     l6527 105C  
                                   l6289 0AE4                                     l6385 1A1A  
                                   l6377 1A0E                                     l6529 1069  
                                   l9105 12FF                                     l9025 1CE7  
                                   l7435 1BFE                                     l6485 1F95  
                                   l6661 187C                                     l6389 1A20  
                                   l9061 07D8                                     l9125 1341  
                                   l9241 14CF                                     l9049 07C2  
                                   l6675 2688                                     l6659 1876  
                                   l9411 0F8F                                     l9253 14F3  
                                   l9237 14C2                                     l6933 1DAA  
                                   l9157 0851                                     l9421 0FBD  
                                   l7911 099C                                     l8623 1AB1  
                                   l9271 1531                                     l9351 1296  
                                   l9503 15D3                                     l9423 0FC3  
                                   l7905 0974                                     l7913 09A2  
                                   l8713 08D5                                     l9345 127D  
                                   l9601 06DE                                     l8635 1093  
                                   l8643 109F                                     l8619 1AA7  
                                   l9259 1505                                     l9355 12DD  
                                   l9451 0E1F                                     l6779 1C1D  
                                   l9531 1616                                     l9507 15DA  
                                   l9427 0FCE                                     l7917 09A9  
                                   l8653 10AF                                     l9517 15F7  
                                   l8567 27A6                                     l8591 141C  
                                   l8639 1099                                     l7863 1B7B  
                                   l7855 1B5D                                     l9471 0E88  
                                   l8751 1664                                     l9615 0723  
                                   l8665 10CB                                     l8673 10D7  
                                   l8649 10A9                                     l8657 10B5  
                                   l7857 1B69                                     l9449 0E15  
                                   l8921 117F                                     l8761 1688  
                                   l9545 163C                                     l9529 1612  
                                   l9625 0756                                     l8587 13FE  
                                   l8683 1B08                                     l7867 1B84  
                                   l9483 0EC4                                     l9475 0EA7  
                                   l9387 0F20                                     l8669 10D1  
                                   l9821 1E12                                     l9485 0ECA  
                                   l8933 1198                                     l8765 169E  
                                   l9565 0667                                     l9389 0F29  
                                   l8687 1B13                                     l8791 11BC  
                                   l8919 1167                                     l9591 06AC  
                                   l9575 0677                                     l9567 066D  
                                   l8945 1947                                     l8873 172A  
                                   l9577 067F                                     l9753 17BC  
                                   _CFGS 0CAE                                     l8947 1952  
                                   l8795 11CF                                     l9923 05EE  
                                   l9907 059C                                     l9915 05D4  
                                   l9851 041E                                     l9835 03D1  
                                   l8891 1761                                     l8883 174F  
                                   l9747 178B                                     l8957 1D62  
                                   l8981 1ACA                                     l8797 11D4  
                                   l9917 05D7                                     l9757 17C4  
                                   l9781 124E                                     l9871 04E1  
                                   l8887 1758                                     l8879 1746  
                                   l9689 0D50                                     l9929 0601  
                                   l9857 044C                                     l9769 17FB  
                                   l9877 04FD                                     l9981 137B  
                                   l9895 0565                                     l9879 0515  
                                   l9889 054C                                     l9985 1391  
                                   _FREE 0CAC                                     _LATA 010C  
                                   _LATB 010D                          __end_of_INT_ISR 24CD  
                                   _LATC 010E                                     u4115 110F  
                                   u4135 111C                                     u4315 0C49  
                                   u4165 1132                                     u4095 10F6  
                                   u4345 0C5C                                     _PEIE 005E  
                                   u4285 0C36                                     u4445 09F6  
                                   u4605 0AF3                                     u4525 0A99  
                                   _INTE 005C                                     _INTF 0059  
                                   u4375 0C6F                                     u4455 0A06  
                                   u4535 0AA9                                     u4465 0A26  
                                   u4475 0A35                                     u4555 0AD1  
                                   u4635 1558                                     u7045 0935  
                                   u4485 0A3F                                     u4565 0AD7  
                                   u4665 1582                                     u4595 0AED  
                                   u4695 159D                                     u8145 27AD  
                                   u8155 27B2                                     u4980 1F54  
                                   u8430 2446                                     u4985 1F52  
                                   u6935 1B60                                     u6955 1B6A  
                                   u6965 1B74                                     u6975 1B7C  
                                   u8685 193C                                     u9805 17A6  
                                   u9905 1C76                                     _LWLO 0CAD  
                                   u9925 1EC2                                     u9845 17E7  
                                   _RFSW 00BC                                     _TMR0 0015  
                                   u9955 1DF9                                     u9875 123D  
                                   u9885 1266                          __end_of_INT_Set 23E6  
                                   _RSSI 00BD                                     _WREN 0CAA  
                                   _Buz1 0148                                     _Load 006E  
                                   _Temp 007D                                     _main 1354  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 23C6  
                    __end_of_DlyOff_Main 14B3                          __end_of_RF_Main 23E0  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                                     ltemp 007E  
          __size_of_setRF_Initialization 0007                         _setDimmerReClock 2737  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                 _setPowerFault_Exceptions 1B8B  
                    DelayTimejudge@value 0022                            _RfPointSelect 2468  
             __end_of_setRFSW_AdjControl 1C45                             ___ftmul@cntr 003C  
                           ___ftmul@sign 003D             __size_of_Temp_Initialization 0003  
            __size_of_setPowerFault_Main 010E                                    ??_ISR 0077  
                           ___fttol@exp1 0058                             ___fttol@lval 0054  
                       __end_of_LED_Main 24FD                    ?_setDimmerLights_Main 0071  
                        ?_setDelayOff_GO 0023                    __end_of_setLoad_Count 2662  
                                  ?_main 0071                setControl_Lights_Table@rf 0067  
                        __end_of___ftadd 0CD3                            __CFG_WDTE$OFF 0000  
                        __end_of___ftdiv 0A60                                    u10025 0498  
                                  u10075 052D                          __end_of___ftmul 0B14  
                        __end_of___fttol 15BF             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                          __end_of___lwdiv 1B8B  
                 _setDimmerLights_Switch 257B            __size_of_CC2500_FrequencyCabr 000C  
                                  _RFSW1 00E6                                    _RFSW2 00E7  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0071  
                     setRF_Learn@command 0022                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
           __size_ofi1_setLoad_StatusOff 0031                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                                  _TMain 00E9                            setRF_Learn@rf 0023  
                                  _MainT 1EA8                                    _Load1 02A0  
                          __CFG_WRT$HALF 0000                                    _Temp1 0120  
                       __end_of_TMR0_ISR 03A4             __size_of_CC2500_WriteCommand 0010  
                       __end_of_TMR0_Set 2524                                    _getAD 268E  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 120B  
          DimmerLights_Exceptions@status 002A                            ___ftpack@sign 0024  
                         _setLoad_Enable 25AB              __size_of_CC2500_ClearRXFIFO 0004  
                          ??_Buzzer_Main 0020              __size_of_CC2500_ClearTXFIFO 0004  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 0380  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                       ?_CC2500_ReadByte 0071                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0011  
          __end_of_setLED_Initialization 25FC                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                       _setRF_DimmerLights 1F4A  
            __size_of_Flash_Memory_Write 0031                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0004  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
               setLoad_StatusOff@command 0020         __size_of_DelayOff_Initialization 0008  
                 ?_setLoad_AH_AL_Restore 0071                setDimmerLights_Main@clear 002A  
                  setLoad_Enable@command 0020                   ??_Flash_Memory_Erasing 0020  
                        _getPercentValue 1FA5                       ??_CC2500_SIDLEMode 0024  
                        __initialization 0018                         ?_CC2500_PowerRST 0071  
                      ??_Sw_DimmerOnFunc 002A                     __end_of_getLoad_Safe 24AA  
                      ??_setPercentValue 0059                             __end_of_main 13C3  
                    ?_setRF_DimmerLights 0020                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 090F  
                   _setSw_Initialization 2426               __size_of_setLoad_StatusOff 0031  
                                 ??_main 006C                            ___fttol@sign1 0053  
                           ?_setLog_Code 0071                  _setControl_Lights_Table 16D7  
                 ?_Buzzer_Initialization 0071                  ??_DlyOff_Initialization 0022  
                __end_of_PowerFault_Main 23C9                               _Receive_GO 0381  
                             _Receive_OK 0382                                ??_IOC_ISR 0071  
                 ?_setDimmerLights_ERROR 0071                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 260F                                   ?_MainT 0071  
                 ?_setDimmerLights_AdjRF 0071                                ??_INT_ISR 0075  
                 ?_setDimmerLights_AdjGo 0022                 __size_of_setRFSW_Control 0090  
                       ??_setRFSW_Status 0023                                ??_INT_Set 0020  
                 ?_setDimmerLights_Clear 0022                  ??_Switch_Initialization 0025  
                 __end_of_setLoad_Enable 25BB                     __end_of_getTemp_Safe 2400  
                      i1RfPointSelect@rf 0072                     ??_setRF_DimmerLights 0021  
                                 ?_getAD 0020                              _DlyOff_Main 143A  
                                 _ADCON0 009D                                   _ADCON1 009E  
                              ??_RF_Main 006C                                   _ADRESH 009C  
                                 _ADRESL 009B               i1setLoad_StatusOff@command 0071  
                      ?_getPowerFault_AD 0071                           setRF_Enable@rf 0023  
                       __end_of___awtoft 18A5                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 1142                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 258B                                   i1l1682 0394  
                                 i1l1687 2745                                   i1l8301 00FB  
                                 i1l8303 0101                                   i1l8411 030C  
                                 i1l8403 02EB                                   i1l8331 0182  
                                 i1l8315 0136                                   i1l8323 0161  
                                 i1l8307 0114                                   i1l8421 0340  
                                 i1l8309 011A                                   i1l8341 01B6  
                                 i1l8319 014D                                   i1l8409 0306  
                                 i1l8329 017C                                   i1l8259 1927  
                                 i1l8363 023B                                   i1l8283 00B1  
                                 i1l8381 0285                                   i1l8429 0375  
                                 i1l8349 01EB                                   i1l8383 028B  
                                 i1l8395 02C0                                   i1l8387 029E  
                                 i1l8389 02A4                                   i1l8399 02D7  
                                 i1l7883 1A80                                   i1l7879 1A76  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                     ??_getPowerFault_AD 0024                                   _OSCCON 0099  
                     __size_of_Load_Main 02AC                                   u760_25 0095  
                                 _TMR0IE 005D                                   _TMR0IF 005A  
                                 _IO_Set 271E                                   u777_25 01E1  
                                 u779_25 021F                                   u796_25 036B  
                                 u797_25 0387                       DelayTime_1us@count 0020  
                             _VarProduct 01A0                    _Dimmer_Initialization 23F2  
         __size_of_CC2500_PowerOnInitial 0015            __end_of_CC2500_PowerOnInitial 2638  
                                 _Dimmer 00B9                                   _DlySw1 00CB  
                                 _DlySw2 00D0              __size_of_setLoad_Exceptions 0043  
             __end_of_Mcu_Initialization 26D3                      __end_of_Buzzer_Main 09B7  
                                 _Memory 00E8                                   _Timer0 00EA  
     __end_of_setDimmerLights_TriggerAdj 25EB               _setDimmerLights_TriggerAdj 25DB  
          setDimmerLights_Switch@command 0022                                   ___wmul 27A3  
                              ??___ftadd 0044             __size_of_DelayOffPointSelect 0017  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___ftmul 0034                                ??___fttol 004F  
           ?_Flash_Memory_Initialization 0071                                ??___lwdiv 0024  
                        i1_RfPointSelect 2448              setDimmerLights_AdjRF@lights 0060  
                 ??_setDimmerLights_Main 002A                                   _r_data 00C2  
                                 _s_data 00C3                                   _setLED 1083  
                       _DimmerLightsIntr 00BA                    ?_setSw_Initialization 0071  
                  setDimmerLights@status 0024                                   _setBuz 13C3  
                     __size_of_Temp_Main 0003              __end_of_Load_Initialization 250A  
       ??_setDimmerLights_Initialization 005F          ?_setDimmerLights_Initialization 0071  
                  ___ftmul@f3_as_product 0039             ??_getDimmerLights_StatusFlag 0020  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                    __end_of_SwPointSelect 2623  
                        ?_setLoad_Enable 0071                  getPowerFault_AD@channel 0028  
                          ?_setRF_Enable 0022                           _setTemp_Enable 2489  
                        _RfSWPointSelect 2662             __size_of_Flash_Memory_Modify 006E  
            __size_of_DimmerLights_Close 001B                  __size_of_LedPointSelect 0022  
                    Flash_Memory_Write@i 0021             __size_of_Flash_Memory_Unlock 0009  
                             _TouchPower 0800                        ?_Sw_DimmerAdjFunc 0071  
            __size_of_CC2500_InitPATable 001F                      CC2500_TxData@loop_e 0025  
                __end_of_getPercentValue 2000         __end_of_CC2500_registers_address 182F  
   __end_of_setPowerFault_Initialization 25CB    __size_of_setPowerFault_Initialization 0010  
           _setPowerFault_Initialization 25BB                  __end_of__initialization 0055  
            ??_PowerFault_Initialization 0021                          ??_RfPointSelect 0020  
            setDimmerLights_AdjGo@lights 0023                                ?_LED_Main 0071  
                             ___ftadd@f1 003E                               ___ftadd@f2 0041  
                     ??_Sw_DimmerAdjFunc 0024                      setSw_Enable@command 0022  
                             ___ftdiv@f1 0031                               ___ftdiv@f2 002E  
                             ___ftdiv@f3 0039                        ?_Sw_DimmerOffFunc 0071  
                             ___awtoft@c 0028             ?_DimmerLights_Initialization 0071  
                             ___ftmul@f1 002E                               ___ftmul@f2 0031  
                          __end_of_MainT 1EF3                               ___fttol@f1 004B  
                         __pcstackCOMMON 0071                       ??_Sw_DimmerOffFunc 0028  
                           __pidataBANK3 27E0                            __end_of_getAD 26A4  
                              ?_TMR0_ISR 0071                                ?_TMR0_Set 0071  
                 setLoad_AH_AL_Restore@i 0021             __size_of_setDimmerLights_Adj 0044  
                     _LED_Initialization 24E5                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0065                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071                __size_of_setLoad_StatusOn 0032  
          ??_Flash_Memory_Initialization 005D                 __size_of_setRF_ReceiveGO 000C  
                       ?_setDimmerLights 0024                        __end_of_Load_Main 0650  
                       ?_PowerFault_Main 0071                 __end_of_setDimmerReClock 2751  
                     __size_of_getRxData 0052                      ?_LED_Initialization 0071  
                 __end_of_setTemp_Enable 2494                        ?_CC2500_WriteByte 0071  
                                ??_MainT 002A                           ??_setRF_Enable 0023  
                         _DimmerLights11 0079                           _DimmerLights22 007A  
                   __size_of_setLED_Main 0040                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023                      _Temp_Initialization 23C9  
                     ??_CC2500_WriteByte 0020               ??_setPowerFault_Exceptions 002B  
           setDimmerLights_Switch@lights 0023                               __pbssBANK0 006C  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pbssBANK3 01C0                               __pbssBANK4 0220  
                             __pbssBANK5 02A0                              _Buzzer_Main 090F  
                      ??_setRFSW_Control 002A                        __end_of_Temp_Main 0800  
                 ?_Dimmer_Initialization 0071                                  ?_IO_Set 0071  
                             ??_LED_Main 0025                  _DelayOff_Initialization 240E  
                  __size_of_getLoad_Safe 000B            ?_setPowerFault_Initialization 0071  
                             _getPF_Safe 241E                            ??_Switch_Main 0031  
                         DelayTime_1us@i 0022                           DelayTime_1us@j 0024  
                   ??_LED_Initialization 0025                             _DimmerLights 006C  
                      LedPointSelect@led 0021                  __end_ofi1_RfPointSelect 2452  
                    i1_setLoad_StatusOff 1A5A                       __size_of_setINT_GO 0009  
                 __size_of_DelayOff_Main 0008                     __size_of_setRF_Learn 000E  
                            setBuz@count 0029                               __pmaintext 1354  
                    _CC2500_WriteCommand 256B                     ?_Temp_Initialization 0071  
       __size_of_DimmerLightsPointSelect 0013                         ??_setDelayOff_GO 0025  
          ??_DimmerLights_Initialization 0062                                  ?___wmul 0020  
                             ??_TMR0_ISR 0073                            ?_setTemp_Main 0071  
                             ??_TMR0_Set 0020                               _getLoad_AD 176A  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0071                       __size_of_setTxData 00C9  
                ?_setDimmerLights_Switch 0022                                  ?_setLED 0022  
                 __size_of_DelayTime_1us 0026                                  _ADC_Set 2400  
              _PowerFault_Initialization 23C3                                  ?_setBuz 0026  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             _getTemp_AD 120B             __end_of_setRF_Initialization 240E  
                  __size_of_getTemp_Safe 0007                            ?_setSw_Status 0022  
                     _setRFSW_AdjControl 1C05                  __end_of_RfSWPointSelect 2678  
                      Sw_DimmerOnFunc@sw 002B                     ?i1_setLoad_StatusOff 0071  
                                _IOC_ISR 190C                          ?_setTemp_Enable 0071  
                                _IOC_Set 250A                     __size_of_setLog_Code 0048  
                                _INT_ISR 24C1                                  _INT_Set 23E0  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 1DD5  
                      _Flash_Memory_Read 2705                   __size_of_CC2500_RxData 0064  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                             _getLoad_Safe 249F  
                            setTxData@rf 0023                                  _RF_Data 00A0  
                                _RF_Main 23DC                       ?_Flash_Memory_Main 0071  
                     ?_Flash_Memory_Read 0071          __end_of_setControl_Lights_Table 176A  
                            ?_TouchPower 0071                          _Sw_DimmerOnFunc 12E5  
                        _setPercentValue 1E1A                  ??_setLoad_AH_AL_Restore 0020  
                          setLog_Code@rf 002B                         ?_getPercentValue 0071  
                                _Dimmer1 00E1             __end_of_CC2500_FrequencyCabr 24D9  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00D9  
                                _VarLED2 00DD                        __end_of_getRxData 07FD  
             __end_of_setPowerFault_Main 0EDD                 _CC2500_registers_address 1800  
                         RF_RxDisable@rf 0024                    ??_Temp_Initialization 0021  
        __end_of_setDimmerLights_Trigger 259B                                  _Product 006F  
                   ??_setRFSW_AdjControl 0064                             _getTemp_Safe 23F9  
                         ??_setTemp_Main 002D           __end_of_setDimmerLights_Switch 258B  
                                ___ftadd 0BDD                           ??_setSw_Enable 0022  
                                ___ftdiv 09B7                          __size_of___wmul 001E  
                                ___ftmul 0A60                                  ___fttol 1538  
                    __end_of_Switch_Main 2436                                  ___lwdiv 1B54  
                ??_Buzzer_Initialization 0020                 ??_setOverTemp_Exceptions 002B  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005E                     setRFSW_AdjControl@sw 0066  
                ??_setDimmerLights_ERROR 0024                          __size_of_setBuz 0077  
                         ??_setSw_Status 0023                                  __ptext1 120B  
                                __ptext2 1C45                                  __ptext3 176A  
                                __ptext4 268E                                  __ptext5 07FD  
                                __ptext6 0EDD                                  __ptext7 1CC8  
                                __ptext8 23C9                                  __ptext9 24AA  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0004                  ??_setDimmerLights_Clear 0023  
                    Sw_DimmerOnFunc@Idle 002A                    ??i1_setLoad_StatusOff 0072  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 1E1A  
              __end_of_Flash_Memory_Read 271E                               _setRF_Main 15BF  
                          _DelayOff_Main 2416                        _DimmerLights_Main 247E  
                      __end_of_setINT_GO 2448           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 2468  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 23D0  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 23D4  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 18A5  
                    _DelayOffPointSelect 26A4                                  clrloop0 23ED  
         __size_of_Switch_Initialization 000D            __end_of_Switch_Initialization 2531  
                   end_of_initialization 0055                ??_DelayOff_Initialization 0023  
                             _setLoad_GO 2473                        _CC2500_InitSetREG 197D  
                          _DelayTime_1us 1931                        __end_of_setTxData 0BDD  
             __end_of_Flash_Memory_Write 1AED                                  init_ram 23E6  
                     ?_CC2500_InitSetREG 0071                      ??_DimmerLights_Main 002C  
                   Flash_Memory_Read@ret 0023                                  initloop 23E7  
                             _setSw_Main 0650                    CC2500_ReadByte@loop_b 0021  
                      _CC2500_ReadStatus 276C                              ?_getPF_Safe 0071  
                 __size_of_setLoad_Count 0015                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 25EB                            _CC2500_Enable 0380  
                       ?i1_RfPointSelect 0071                       ?_CC2500_ReadStatus 0071  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 000B  
               __size_of_CC2500_ReadByte 001D                            _CC2500_RxData 1142  
                          _CC2500_TxData 1D91                      ??_CC2500_InitSetREG 0025  
                   __end_of_setRF_Enable 19D1           ??_setPowerFault_Initialization 0020  
            ?_setDimmerLights_TriggerAdj 0022                __size_of_getPowerFault_AD 0041  
          __size_of_Flash_Memory_Erasing 000C                     ?_DelayOffPointSelect 0071  
                    _Flash_Memory_Modify 1277                  _DimmerLights_Exceptions 11A6  
                            ?_getLoad_AD 0071                             __pstringtext 1800  
                    _Flash_Memory_Unlock 2436                      ??_CC2500_ReadStatus 0022  
                 setRF_Initialization@rf 0071                         _setLoad_StatusOn 1AED  
       getDimmerLights_StatusFlag@Status 0021                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0071                setLoad_Exceptions@command 002C  
                    __size_of_TouchPower 0005                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 2489  
                     _Mcu_Initialization 26BB                         ??_setLoad_Enable 0020  
               __size_of_CC2500_PowerRST 0030                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                          _setSw_Main$4703 002E  
                        _setSw_Main$4704 002F                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 18C7                  __end_of_Sw_DimmerOnFunc 1354  
                __end_of_setPercentValue 1E60                 __size_of_CC2500_WriteREG 0019  
              __end_of_CC2500_InitSetREG 19A7                      ?_Mcu_Initialization 0071  
       __end_of_setPowerFault_Exceptions 1BC5                     ?_Flash_Memory_Modify 0071  
            __size_of_setRF_DimmerLights 005B                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 1D4D                     ?_Flash_Memory_Unlock 0071  
              __end_of_CC2500_ReadStatus 2787                            ?_RF_RxDisable 0071  
             __end_of_setLoad_Exceptions 1D4D                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 2737                     _setRF_Initialization 2407  
                            _Switch_Main 242E              setDimmerLights_Clear@lights 0023  
                      __size_of_LED_Main 000C                           ?_CC2500_RxData 0071  
                         ?_CC2500_TxData 0071                  _DimmerLightsPointSelect 25FC  
                            ___ftmul@exp 0038                    _CC2500_PowerOnInitial 2623  
                   ??_Mcu_Initialization 0021                    ??_DelayOffPointSelect 0020  
                   ?_setDimmerLights_Adj 0025                __size_of_Sw_DimmerAdjFunc 0026  
                   setRF_DimmerLights@on 0020                           __end_of___wmul 27C1  
                           setRF_Main@rf 006A                        __size_of_TMR0_ISR 034B  
        __size_of_setOverTemp_Exceptions 0042                        __size_of_TMR0_Set 000D  
          __size_of_setDimmerLights_Main 0085                           __end_of_setLED 10E1  
                         __end_of_setBuz 143A                            _setLoad_Count 264D  
        _getDimmerLights_StatusFlag$1814 0022                     _CC2500_FrequencyCabr 24CD  
                setLoad_StatusOn@command 0020                __size_of_Sw_DimmerOffFunc 0071  
             __size_of_Flash_Memory_Main 0045               __size_of_Flash_Memory_Read 0019  
                            ?_setRF_Main 0071                          _setRFSW_Control 1647  
                    __size_of_getPF_Safe 0008                        ?_setDimmerReClock 0071  
                    start_initialization 0018                        _setRF_DimmerValue 1B1F  
                        ?_LedPointSelect 0071               __end_of_DimmerLights_Close 276C  
                              _Load_Main 03A4                  setLoad_StatusOff@lights 0021  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
           __size_of_Load_Initialization 000D       __size_of_PowerFault_Initialization 0003  
                     ??_setDimmerReClock 0071                       ?_setRF_DimmerValue 0071  
             __end_of_CC2500_InitPATable 27E0          __size_of_setTemp_Initialization 000B  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setTemp_Main 1000                              ?_setLoad_GO 0071  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 27A3  
                        RfPointSelect@rf 0021                      __size_of_getLoad_AD 0096  
                           ?_Buzzer_Main 0071                                 ??_IO_Set 0020  
                              _VarErrLED 00D5                              ?_setSw_Main 0071  
                    ??_setRF_DimmerValue 0061                      __size_of_getTemp_AD 006C  
                 ?_setLED_Initialization 0071                     __end_of_setSw_Status 256B  
                     Sw_DimmerAdjFunc@sw 0024                    ?_setRF_Initialization 0071  
              i1setLoad_StatusOff@lights 0072                                _VarMemory 0220  
                __size_of_setRFSW_Status 000F                    __end_of_RfPointSelect 2473  
              __size_of_CC2500_WriteByte 0019                                _VarTimer0 00C4  
                              _Temp_Main 07FD                ??_DimmerLights_Exceptions 002A  
          setOverTemp_Exceptions@command 002C                                _Rx_Length 00BE  
                setRF_DimmerValue@lights 0063                    ??_setDimmerLights_Adj 0026  
                               ??___wmul 0024                   __size_of_SwPointSelect 0014  
                              _Tx_Length 00C0                              __pdataBANK3 01A0  
                               ??_setLED 0023                         ??_setTemp_Enable 0020  
                               ?_ADC_Set 0071                                 ??_setBuz 0028  
                        ??_DelayOff_Main 002D                        ??_CC2500_ReadByte 0020  
                         ?_setLoad_Count 0071                         _CC2500_SIDLEMode 23D4  
             __size_of_DimmerLights_Main 000B                __end_of_setRF_DimmerValue 1B54  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0071  
                        _setRF_Main$4352 006B                              __pbssCOMMON 0078  
                               ?_IOC_Set 0071                                ___latbits 0003  
                             ?_Load_Main 0071                    setTemp_Enable@command 0020  
                               ?_INT_ISR 0071                      setRF_Enable@command 0022  
                       ?_Sw_DimmerOnFunc 0071                            __pcstackBANK0 0020  
                               ?_INT_Set 0071                         ?_setPercentValue 0071  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002A  
               __size_of_setDimmerLights 0099                            DlyOff_Main@sw 002C  
                      ??_CC2500_PowerRST 0026                                 ?_RF_Main 0071  
           setDimmerLights_Clear@command 0022                             ??_TouchPower 0020  
               __size_of_PowerFault_Main 0003                     __size_of_DlyOff_Main 0079  
             __size_of_CC2500_ReadStatus 001B                   _setOverTemp_Exceptions 1CC8  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 012E                            _DimmerLights2 013B  
                  CC2500_WriteREG@w_addr 0024                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020           __size_of_setLoad_AH_AL_Restore 0022  
                  __size_of_setRF_Enable 002A                          ??_CC2500_RxData 0024  
          __end_of_setLoad_AH_AL_Restore 18E9                  __size_of_setRF_RxStatus 000E  
                        ??_CC2500_TxData 0024                                __pnvBANK0 006F  
                              __pnvBANK1 00E8              __size_of_LED_Initialization 000C  
                 ?_CC2500_PowerOnInitial 0071                               ?_Temp_Main 0071  
                    __size_of_setRF_Main 0088                         ___lwdiv@dividend 0022  
                  DelayOffPointSelect@sw 0021                               setBuz@time 0026  
                    setDelayOff_GO@value 0024                 ?_setControl_Lights_Table 0071  
                 _setTemp_Initialization 24AA                         _getPowerFault_AD 1C45  
      __size_of_setPowerFault_Exceptions 003A      __end_of_Flash_Memory_Initialization 0DCF  
            _Flash_Memory_Initialization 0CD3                ?_setPowerFault_Exceptions 0071  
                              __ptext100 0BDD                                __ptext101 1883  
                              __ptext110 1F4A                                __ptext102 10E1  
                              __ptext111 254D                                __ptext103 23F2  
                              __ptext120 26A4                                __ptext112 2662  
                              __ptext104 2416                                __ptext121 2623  
                              __ptext113 258B                                __ptext105 143A  
                              __ptext130 23CC                                __ptext122 23D4  
                              __ptext114 257B                                __ptext106 0B14  
                              __ptext131 256B                                __ptext123 1A2A  
                              __ptext115 25FC                                __ptext107 2468  
                              __ptext140 24C1                                __ptext132 26D3  
                              __ptext124 197D                                __ptext116 13C3  
                              __ptext108 255C                                __ptext141 24B5  
                              __ptext133 090F                                __ptext125 27C1  
                              __ptext117 27A3                                __ptext109 260F  
                               ?___ftadd 003E                                __ptext142 2448  
                              __ptext134 2452                                __ptext126 26EC  
                              __ptext118 240E                                __ptext127 24CD  
                              __ptext119 245D                                __ptext136 0059  
                              __ptext128 1931                                __ptext137 1A5A  
                              __ptext129 23D0                                __ptext138 190C  
                              __ptext139 2737                                _getRxData 07AB  
                               ?___ftdiv 002E                                 ?___ftmul 002E  
                               ?___fttol 004B                                 ?___lwdiv 0020  
                __end_of_setRFSW_Control 16D7                          _setRF_ReceiveGO 24B5  
                    __size_of_setLoad_GO 000B            __size_of_setSw_Initialization 0008  
         __size_of_Buzzer_Initialization 000B            __end_of_Buzzer_Initialization 245D  
                       getPercentValue@i 005C                         setPercentValue@i 005A  
                          ??_setLog_Code 002A                       __end_of_TouchPower 0805  
                     _setPowerFault_Main 0DCF       setDimmerLights_TriggerERROR@lights 0023  
         __size_of_setDimmerLights_ERROR 0057                 ?_setDimmerLights_Trigger 0022  
                        DelayTimejudge@i 0021                      __size_of_setSw_Main 015B  
          __end_of_setDimmerLights_ERROR 1F4A             CC2500_ReadStatus@status_addr 0023  
         __size_of_setDimmerLights_AdjRF 0023           __size_of_setDimmerLights_AdjGo 0010  
          __end_of_setDimmerLights_AdjRF 190C            __end_of_setDimmerLights_AdjGo 25DB  
                 CC2500_WriteByte@loop_a 0021           __size_of_setDimmerLights_Clear 0010  
          __end_of_setDimmerLights_Clear 25AB                           __size_of_MainT 004B  
                              _r_address 00C1             __end_of_CC2500_patable_vaule 1866  
                    ?_setPowerFault_Main 0071                           __size_of_getAD 0016  
                           _setRF_Enable 19A7                         ___lwdiv@quotient 0025  
                __size_of_DelayTimejudge 002E                            _SwPointSelect 260F  
                     Sw_DimmerOffFunc@sw 002A                                _setINT_GO 243F  
                    __end_of_setLED_Main 1C05                 __end_of_setLoad_StatusOn 1B1F  
                 ??_setRF_Initialization 0020              __end_of_Temp_Initialization 23CC  
                      _CC2500_rfSettings 182F                           ___wmul@product 0024  
                               _LED_Main 24F1                             ??_getPF_Safe 0020  
                        SwPointSelect@sw 0021                                clear_ram0 23EC  
               CC2500_InitPATable@loop_d 0027                                _setTxData 0B14  
    __end_of_DimmerLights_Initialization 264D              _DimmerLights_Initialization 2638  
                     _CC2500_ClearRXFIFO 23CC                       _CC2500_ClearTXFIFO 23D0  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0024  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 254D  
                   ??_setPowerFault_Main 002D                 __size_of_getPercentValue 005B  
               setRF_DimmerLights@status 0023                   setRF_ReceiveGO@command 0073  
            __size_of_setRFSW_AdjControl 0040                       _Flash_Memory_Write 1ABC  
                             ?_getRxData 0071                                 _TMR0_ISR 0059  
                           ??_getLoad_AD 0024                   CC2500_InitSetREG@temp1 0026  
                 CC2500_InitSetREG@temp2 0027              __end_ofi1_setLoad_StatusOff 1A8B  
                      setRF_ReceiveGO@rf 0074                                 _TMR0_Set 2517  
                       _Sw_DimmerAdjFunc 1957                      ?_CC2500_ClearRXFIFO 0071  
                    ?_CC2500_ClearTXFIFO 0071                          ??_setLoad_Count 0020  
      setDimmerLights_TriggerAdj@command 0022                                 _RF_Count 00B5  
                   __end_of_RF_RxDisable 1027                             ??_getTemp_AD 0024  
            __end_of_CC2500_WriteCommand 257B                   ??_CC2500_FrequencyCabr 0026  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
                      ___wmul@multiplier 0020               __size_of_setRF_DimmerValue 0035  
                    ?_Flash_Memory_Write 0071                         _Sw_DimmerOffFunc 0805  
                  __size_of_setTemp_Main 0123             __end_of_MainT_Initialization 249F  
                __size_of_setDelayOff_GO 005C                    __size_of_setSw_Enable 001C  
                               _DelayOff 00B8                             setSw_Main@sw 0030  
                            ??_Load_Main 002D                       __end_of_getPF_Safe 2426  
                       __size_of_IOC_ISR 0025                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 24E5                           ?_SwPointSelect 0071  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 000C                           setLED_Main@led 0024  
                       __size_of_INT_Set 0006                      __end_of_setLog_Code 1EA8  
                  _DlyOff_Initialization 245D                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 185E  
                       __size_of_RF_Main 0004                   setLoad_StatusOn@lights 0021  
                     __end_of_getLoad_AD 1800                    _Switch_Initialization 2524  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                         _setRFSW_Status 254D                     __size_of_Buzzer_Main 00A8  
                     __end_of_getTemp_AD 1277                               ?_setTxData 0071  
                           ?_Switch_Main 0071                         _CC2500_WriteByte 26D3  
                               _VarTMain 01C0                        getLoad_AD@channel 0029  
           Flash_Memory_Initialization@i 005E                  __end_of_setRF_ReceiveGO 24C1  
                            ??_Temp_Main 0030                        ??_PowerFault_Main 002F  
                      setRFSW_Control@sw 002B                      _Load_Initialization 24FD  
                              setLED@led 0023                                 _RxStatus 0383  
   __end_of_setDimmerLights_TriggerERROR 19FC    __size_of_setDimmerLights_TriggerERROR 002B  
           _setDimmerLights_TriggerERROR 19D1                                 _TxStatus 0386  
                           _setTemp_Main 0EDD                       _setLoad_Exceptions 1D0A  
                       __size_of___ftadd 00F6                         ?_setRFSW_Control 0071  
                       __size_of___ftdiv 00A9                             _setSw_Enable 2787  
                       __size_of___ftmul 00B4                         __size_of___fttol 0087  
                       __size_of___lwdiv 0037                 __size_ofi1_RfPointSelect 000A  
                               ___awtoft 1883                         ??_LedPointSelect 0020  
                               ___ftpack 10E1                             _setSw_Status 255C  
                      getTemp_AD@channel 0028                             ??_setRF_Main 0069  
                   CC2500_WriteREG@value 0022                              _setLED_Main 1BC5  
                    ?_setLoad_Exceptions 0071                    setRFSW_Status@command 0022  
             __end_of_setRF_DimmerLights 1FA5                 ?_DelayOff_Initialization 0071  
                       setDelayOff_GO@sw 0027                          ___lwdiv@divisor 0020  
                   ?_Load_Initialization 0071                          ___lwdiv@counter 0027  
                               __ptext10 242E                                 __ptext11 0650  
                               __ptext20 0800                                 __ptext12 253F  
                               __ptext21 23DC                                 __ptext13 12E5  
                               __ptext30 1B1F                                 __ptext22 15BF  
                               __ptext14 0805                                 __ptext31 18E9  
                               __ptext23 07AB                                 __ptext15 1957  
                               __ptext40 23C6                                 __ptext32 1000  
                               __ptext24 1E60                                 __ptext16 25DB  
                               __ptext41 0DCF                                 __ptext33 1D91  
                               __ptext25 16D7                                 __ptext17 25CB  
                               __ptext50 23E0                                 __ptext42 1B8B  
                               __ptext34 1142                                 __ptext26 1647  
                               __ptext18 2524                                 __ptext51 2400  
                               __ptext43 249F                                 __ptext35 2531  
                               __ptext27 1027                                 __ptext19 2426  
                               __ptext60 243F                                 __ptext52 2494  
                               __ptext44 23C3                                 __ptext36 276C  
                               __ptext28 19FC                                 __ptext61 11A6  
                               __ptext53 1EA8                                 __ptext45 25BB  
                               __ptext37 1866                                 __ptext29 1C05  
                               __ptext70 24F1                                 __ptext62 19D1  
                               __ptext54 2489                                 __ptext46 26BB  
                               __ptext38 23D8                                 __ptext71 1BC5  
                               __ptext63 1EF3                                 __ptext55 25AB  
                               __ptext47 2517                                 __ptext39 2407  
                               __ptext80 2436                                 __ptext72 24E5  
                               __ptext64 259B                                 __ptext56 03A4  
                               __ptext48 271E                                 __ptext81 2705  
                               __ptext73 25EB                                 __ptext65 23F9  
                               __ptext57 1D0A                                 __ptext49 250A  
                               __ptext90 18A5                                 __ptext82 247E  
                               __ptext74 1DD5                                 __ptext66 241E  
                               __ptext58 2787                                 __ptext91 2751  
                               __ptext83 14B3                                 __ptext75 1277  
                               __ptext67 1B54                                 __ptext59 19A7  
                               __ptext92 2473                                 __ptext84 1D4D  
                               __ptext76 24D9                                 __ptext68 24FD  
                               __ptext93 2678                                 __ptext85 1A8B  
                               __ptext77 0CD3                                 __ptext69 18C7  
                               __ptext94 2638                                 __ptext86 0876  
                               __ptext78 1E1A                                 __ptext95 1C86  
                               __ptext87 1AED                                 __ptext79 1ABC  
                               __ptext96 1FA5                                 __ptext88 264D  
                               __ptext97 1538                                 __ptext89 1083  
                               __ptext98 0A60                                 __ptext99 09B7  
                           ??_setLoad_GO 0020                  ??_setLED_Initialization 0024  
               __size_of_RfSWPointSelect 0016           __size_of_Dimmer_Initialization 0007  
                 __end_of_setRFSW_Status 255C            __end_of_Dimmer_Initialization 23F9  
           __end_of_setDimmerLights_Main 1538              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 002C                            setLED@command 0022  
                          __size_of_main 006F                              _setRF_Learn 253F  
               __end_of_CC2500_SIDLEMode 23D8                           _setRF_RxStatus 2531  
             setDimmerLights_Main@lights 002B              __end_of_DelayOffPointSelect 26BB  
             CC2500_WriteCommand@command 0023                       _DimmerLights_Close 2751  
               ??_setDimmerLights_Switch 0023                __size_of_setDimmerReClock 001A  
                   ??_setLoad_Exceptions 002B                          _CC2500_ReadByte 1866  
                     _CC2500_InitPATable 27C1      __size_of_getDimmerLights_StatusFlag 0016  
          setDimmerLights_Trigger@lights 0023                       __end_of_setRF_Main 1647  
            __size_of_Mcu_Initialization 0018                     _CC2500_patable_vaule 185E  
                            ??_getRxData 0068                      ?_DimmerLights_Close 0071  
       setDimmerLights_TriggerAdj@lights 0023            ?_setDimmerLights_TriggerERROR 0022  
                    ?_CC2500_InitPATable 0071                          _CC2500_PowerRST 1A2A  
                     __end_of_setLoad_GO 247E              __end_of_Flash_Memory_Modify 12E5  
                      ??_getPercentValue 0059                              _setLog_Code 1E60  
                  setRF_RxStatus@command 0022              __end_of_Flash_Memory_Unlock 243F  
                        ??_SwPointSelect 0020                          _CC2500_WriteREG 26EC  
                     __end_of_setSw_Main 07AB                        setLoad_GO@command 0020  
                  ??_Load_Initialization 0022                            _Transceive_GO 0384  
                          _Transceive_OK 0385                     setLoad_Count@command 0021  
                 ?_DlyOff_Initialization 0071                  ?_setOverTemp_Exceptions 0071  
                         _DelayTimejudge 19FC                            ?_getLoad_Safe 0071  
                            pic14e$flags 007E                 __end_of_getPowerFault_AD 1C86  
                   ??_DimmerLights_Close 0023                              ??_setINT_GO 0020  
                               intlevel1 0000                     ??_CC2500_InitPATable 0025  
                __size_of_setLoad_Enable 0010                   ?_Switch_Initialization 0071  
                 __end_of_setRF_RxStatus 253F                          ?_setRFSW_Status 0022  
                ??_CC2500_PowerOnInitial 0029   __end_of_setDimmerLights_Initialization 1CC8  
__size_of_setDimmerLights_Initialization 0042           _setDimmerLights_Initialization 1C86  
            __end_of_setDimmerLights_Adj 1D91                  ?_setTemp_Initialization 0071  
                            ??_setTxData 0022                         ?_setRF_ReceiveGO 0073  
                 CC2500_InitPATable@temp 0026                     _MainT_Initialization 2494  
                  __size_of_RF_RxDisable 0027                        _RF_Initialization 23D8  
                            getLoad_AD@i 002B                              getLoad_AD@j 002A  
                          ?_getTemp_Safe 0071                     _Flash_Memory_Erasing 24D9  
                     ?_RF_Initialization 0071                               _SPI0Buffer 00BF  
        __end_of_DelayOff_Initialization 2416                               _OPTION_REG 0095  
                  __end_of_DelayOff_Main 241E                      ??_RF_Initialization 0021  
                            getRxData@rf 0068                           _setDelayOff_GO 1027  
       __size_of_setControl_Lights_Table 0093                        _setLoad_StatusOff 1A8B  
                 __end_of_DelayTimejudge 1A2A           __end_of_setOverTemp_Exceptions 1D0A  
                 __size_of_RfPointSelect 000B                        ??i1_RfPointSelect 0071  
                         ??_getLoad_Safe 0020     __size_of_Flash_Memory_Initialization 00FC  
                          ??_DlyOff_Main 002A                       ?_setLoad_StatusOff 0020  
                  __end_of_DelayTime_1us 1957                 __end_of_Sw_DimmerAdjFunc 197D  
                __end_of_CC2500_ReadByte 1883             __end_of_setSw_Initialization 242E  
                        ?_setRF_RxStatus 0022                     getPercentValue@value 005B  
                           _RF_RxDisable 1000               ?_PowerFault_Initialization 0071  
             __end_of_LED_Initialization 24F1         __size_of_setDimmerLights_Trigger 0010  
                      ?_setLoad_StatusOn 0020           __end_of_setTemp_Initialization 24B5  
               __size_of_Sw_DimmerOnFunc 006F                      ??_setLoad_StatusOff 0021  
               ?_DimmerLights_Exceptions 0071                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 23DC  
               __end_of_Sw_DimmerOffFunc 0876                       ??_setLoad_StatusOn 0021  
        __size_of_setDimmerLights_Switch 0010                        ??_RfSWPointSelect 0020  
                  ?_MainT_Initialization 0071                         setRF_RxStatus@rf 0023  
                  __end_of_CC2500_RxData 11A6                    __end_of_CC2500_TxData 1DD5  
                         ??_getTemp_Safe 0020                    _setLoad_AH_AL_Restore 18C7  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 1A5A  
